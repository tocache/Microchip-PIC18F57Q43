

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Oct 14 11:10:20 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 18/12/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F57Q43 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     _LATD	set	1217
    60   000000                     _OSCCON1	set	173
    61   000000                     _OSCFRQ	set	177
    62   000000                     _OSCEN	set	179
    63   000000                     _T1CON	set	798
    64   000000                     _T1CLK	set	801
    65   000000                     _CCPR1L	set	832
    66   000000                     _CCPR1H	set	833
    67   000000                     _CCP1CON	set	834
    68   000000                     _ANSELD	set	1048
    69   000000                     _PIE3bits	set	1185
    70   000000                     _LATDbits	set	1217
    71   000000                     _INTCON0bits	set	1238
    72   000000                     _TRISD	set	1225
    73   000000                     _PORTD	set	1233
    74                           
    75                           	psect	smallconst
    76   002500                     __psmallconst:
    77                           	callstack 0
    78   002500  00                 	db	0
    79   002501                     STR_1:
    80   002501  52                 	db	82	;'R'
    81   002502  65                 	db	101	;'e'
    82   002503  6C                 	db	108	;'l'
    83   002504  6F                 	db	111	;'o'
    84   002505  6A                 	db	106	;'j'
    85   002506  20                 	db	32
    86   002507  55                 	db	85	;'U'
    87   002508  50                 	db	80	;'P'
    88   002509  41                 	db	65	;'A'
    89   00250A  4F                 	db	79	;'O'
    90   00250B  00                 	db	0
    91   00250C  00                 	db	0	; dummy byte at the end
    92   000000                     
    93                           ; #config settings
    94                           
    95                           	psect	cinit
    96   0027AC                     __pcinit:
    97                           	callstack 0
    98   0027AC                     start_initialization:
    99                           	callstack 0
   100   0027AC                     __initialization:
   101                           	callstack 0
   102   0027AC                     end_of_initialization:
   103                           	callstack 0
   104   0027AC                     __end_of__initialization:
   105                           	callstack 0
   106   0027AC  0100               	movlb	0
   107   0027AE  EFB1  F013         	goto	_main	;jump to C main() function
   108                           
   109                           	psect	cstackCOMRAM
   110   000501                     __pcstackCOMRAM:
   111                           	callstack 0
   112   000501                     ?_strlen:
   113                           	callstack 0
   114   000501                     ENVIA_NIBBLE@dato:
   115                           	callstack 0
   116   000501                     strlen@s:
   117                           	callstack 0
   118                           
   119                           ; 1 bytes @ 0x0
   120   000501                     	ds	1
   121   000502                     ENVIA_CHAR@dato:
   122                           	callstack 0
   123   000502                     ENVIA_LCD_CMD@dato:
   124                           	callstack 0
   125                           
   126                           ; 1 bytes @ 0x1
   127   000502                     	ds	1
   128   000503                     ENVIA_CHAR@aux:
   129                           	callstack 0
   130   000503                     ENVIA_LCD_CMD@aux:
   131                           	callstack 0
   132   000503                     strlen@a:
   133                           	callstack 0
   134                           
   135                           ; 1 bytes @ 0x2
   136   000503                     	ds	1
   137   000504                     ??_LCD_CONFIG:
   138   000504                     POS_CURSOR@columna:
   139                           	callstack 0
   140   000504                     CURSOR_ONOFF@estado:
   141                           	callstack 0
   142   000504                     ESCRIBE_MENSAJE2@cadena:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x3
   146   000504                     	ds	1
   147   000505                     ??_LCD_INIT:
   148   000505                     ??_ESCRIBE_MENSAJE2:
   149   000505                     POS_CURSOR@fila:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x4
   153   000505                     	ds	1
   154   000506                     ESCRIBE_MENSAJE2@tam:
   155                           	callstack 0
   156                           
   157                           ; 1 bytes @ 0x5
   158   000506                     	ds	1
   159   000507                     ESCRIBE_MENSAJE2@i:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0x6
   163   000507                     	ds	1
   164   000508                     
   165                           ; 1 bytes @ 0x7
   166 ;;
   167 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   168 ;;
   169 ;; *************** function _main *****************
   170 ;; Defined at:
   171 ;;		line 31 in file "maincode01.c"
   172 ;; Parameters:    Size  Location     Type
   173 ;;		None
   174 ;; Auto vars:     Size  Location     Type
   175 ;;		None
   176 ;; Return value:  Size  Location     Type
   177 ;;                  1    wreg      void 
   178 ;; Registers used:
   179 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   180 ;; Tracked objects:
   181 ;;		On entry : 0/0
   182 ;;		On exit  : 0/0
   183 ;;		Unchanged: 0/0
   184 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   189 ;;Total ram usage:        0 bytes
   190 ;; Hardware stack levels required when called: 5
   191 ;; This function calls:
   192 ;;		_ESCRIBE_MENSAJE2
   193 ;;		_POS_CURSOR
   194 ;;		_configuro
   195 ;; This function is called by:
   196 ;;		Startup code after reset
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           
   200                           	psect	text0
   201   002762                     __ptext0:
   202                           	callstack 0
   203   002762                     _main:
   204                           	callstack 122
   205   002762                     
   206                           ;maincode01.c: 32:     configuro();
   207   002762  EC6E  F013         	call	_configuro	;wreg free
   208   002766                     l34:
   209                           
   210                           ;maincode01.c: 34:         POS_CURSOR(1,0);
   211   002766  0E00               	movlw	0
   212   002768  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   213   00276A  0E01               	movlw	1
   214   00276C  EC87  F012         	call	_POS_CURSOR
   215   002770                     
   216                           ;maincode01.c: 35:         ESCRIBE_MENSAJE2("Reloj UPAO");
   217   002770  0E01               	movlw	low STR_1
   218   002772  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   219   002774  EC18  F013         	call	_ESCRIBE_MENSAJE2	;wreg free
   220   002778  EFB3  F013         	goto	l34
   221   00277C  EFFE  F0FF         	goto	start
   222   002780                     __end_of_main:
   223                           	callstack 0
   224                           
   225 ;; *************** function _configuro *****************
   226 ;; Defined at:
   227 ;;		line 13 in file "maincode01.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		wreg, status,2, status,0, cstack
   236 ;; Tracked objects:
   237 ;;		On entry : 0/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   245 ;;Total ram usage:        0 bytes
   246 ;; Hardware stack levels used: 1
   247 ;; Hardware stack levels required when called: 4
   248 ;; This function calls:
   249 ;;		_LCD_INIT
   250 ;; This function is called by:
   251 ;;		_main
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           	psect	text1
   256   0026DC                     __ptext1:
   257                           	callstack 0
   258   0026DC                     _configuro:
   259                           	callstack 122
   260   0026DC                     
   261                           ;maincode01.c: 15:     OSCCON1 = 0x60;
   262   0026DC  0E60               	movlw	96
   263   0026DE  0100               	movlb	0	; () banked
   264   0026E0  6FAD               	movwf	173,b	;volatile
   265                           
   266                           ;maincode01.c: 16:     OSCFRQ = 0x06;
   267   0026E2  0E06               	movlw	6
   268   0026E4  6FB1               	movwf	177,b	;volatile
   269                           
   270                           ;maincode01.c: 17:     OSCEN = 0x40;
   271   0026E6  0E40               	movlw	64
   272   0026E8  6FB3               	movwf	179,b	;volatile
   273                           
   274                           ;maincode01.c: 19:     T1CLK = 0x01;
   275   0026EA  0E01               	movlw	1
   276   0026EC  0103               	movlb	3	; () banked
   277   0026EE  6F21               	movwf	33,b	;volatile
   278                           
   279                           ;maincode01.c: 20:     T1CON = 0x33;
   280   0026F0  0E33               	movlw	51
   281   0026F2  6F1E               	movwf	30,b	;volatile
   282                           
   283                           ;maincode01.c: 21:     CCP1CON = 0x8B;
   284   0026F4  0E8B               	movlw	139
   285   0026F6  6F42               	movwf	66,b	;volatile
   286                           
   287                           ;maincode01.c: 22:     CCPR1H = 0xF4;
   288   0026F8  0EF4               	movlw	244
   289   0026FA  6F41               	movwf	65,b	;volatile
   290                           
   291                           ;maincode01.c: 23:     CCPR1L = 0x24;
   292   0026FC  0E24               	movlw	36
   293   0026FE  6F40               	movwf	64,b	;volatile
   294   002700                     
   295                           ; BSR set to: 3
   296                           ;maincode01.c: 25:     PIE3bits.CCP1IE = 1;
   297   002700  8CA1               	bsf	161,6,c	;volatile
   298   002702                     
   299                           ; BSR set to: 3
   300                           ;maincode01.c: 26:     INTCON0bits.GIE = 1;
   301   002702  8ED6               	bsf	214,7,c	;volatile
   302   002704                     
   303                           ; BSR set to: 3
   304                           ;maincode01.c: 28:     LCD_INIT();
   305   002704  ECC4  F012         	call	_LCD_INIT	;wreg free
   306   002708  0012               	return		;funcret
   307   00270A                     __end_of_configuro:
   308                           	callstack 0
   309                           
   310 ;; *************** function _LCD_INIT *****************
   311 ;; Defined at:
   312 ;;		line 171 in file "LCD.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;		None
   315 ;; Auto vars:     Size  Location     Type
   316 ;;		None
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, status,2, status,0, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   328 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   329 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   330 ;;Total ram usage:        2 bytes
   331 ;; Hardware stack levels used: 1
   332 ;; Hardware stack levels required when called: 3
   333 ;; This function calls:
   334 ;;		_BORRAR_LCD
   335 ;;		_CURSOR_HOME
   336 ;;		_CURSOR_ONOFF
   337 ;;		_LCD_CONFIG
   338 ;; This function is called by:
   339 ;;		_configuro
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           	psect	text2
   344   002588                     __ptext2:
   345                           	callstack 0
   346   002588                     _LCD_INIT:
   347                           	callstack 122
   348   002588                     
   349                           ;LCD.c: 172:     _delay((unsigned long)((500)*(32000000UL/4000.0)));
   350   002588  0E15               	movlw	21
   351   00258A  6E06               	movwf	(??_LCD_INIT+1)^(0+1280),c
   352   00258C  0E4B               	movlw	75
   353   00258E  6E05               	movwf	??_LCD_INIT^(0+1280),c
   354   002590  0EBE               	movlw	190
   355   002592                     u277:
   356   002592  2EE8               	decfsz	wreg,f,c
   357   002594  D7FE               	bra	u277
   358   002596  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   359   002598  D7FC               	bra	u277
   360   00259A  2E06               	decfsz	(??_LCD_INIT+1)^(0+1280),f,c
   361   00259C  D7FA               	bra	u277
   362   00259E  D000               	nop2	
   363   0025A0                     
   364                           ;LCD.c: 173:     TRISD = 0x00;
   365   0025A0  0E00               	movlw	0
   366   0025A2  6EC9               	movwf	201,c	;volatile
   367   0025A4                     
   368                           ;LCD.c: 174:     ANSELD = 0x00;
   369   0025A4  0E00               	movlw	0
   370   0025A6  0104               	movlb	4	; () banked
   371   0025A8  6F18               	movwf	24,b	;volatile
   372                           
   373                           ;LCD.c: 175:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
   374   0025AA  0E9C               	movlw	156
   375   0025AC  6E05               	movwf	??_LCD_INIT^(0+1280),c
   376   0025AE  0ED7               	movlw	215
   377   0025B0                     u287:
   378   0025B0  2EE8               	decfsz	wreg,f,c
   379   0025B2  D7FE               	bra	u287
   380   0025B4  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   381   0025B6  D7FC               	bra	u287
   382   0025B8  0000               	nop	
   383   0025BA                     
   384                           ;LCD.c: 176:     LCD_CONFIG();
   385   0025BA  ECEF  F012         	call	_LCD_CONFIG	;wreg free
   386   0025BE                     
   387                           ;LCD.c: 177:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
   388   0025BE  0E9C               	movlw	156
   389   0025C0  6E05               	movwf	??_LCD_INIT^(0+1280),c
   390   0025C2  0ED7               	movlw	215
   391   0025C4                     u297:
   392   0025C4  2EE8               	decfsz	wreg,f,c
   393   0025C6  D7FE               	bra	u297
   394   0025C8  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   395   0025CA  D7FC               	bra	u297
   396   0025CC  0000               	nop	
   397                           
   398                           ;LCD.c: 178:     BORRAR_LCD();
   399   0025CE  ECD2  F013         	call	_BORRAR_LCD	;wreg free
   400                           
   401                           ;LCD.c: 179:     CURSOR_HOME();
   402   0025D2  ECCE  F013         	call	_CURSOR_HOME	;wreg free
   403                           
   404                           ;LCD.c: 180:     CURSOR_ONOFF(1);
   405   0025D6  0E01               	movlw	1
   406   0025D8  EC56  F013         	call	_CURSOR_ONOFF
   407   0025DC  0012               	return		;funcret
   408   0025DE                     __end_of_LCD_INIT:
   409                           	callstack 0
   410                           
   411 ;; *************** function _LCD_CONFIG *****************
   412 ;; Defined at:
   413 ;;		line 94 in file "LCD.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2, status,0, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   430 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   431 ;;Total ram usage:        1 bytes
   432 ;; Hardware stack levels used: 1
   433 ;; Hardware stack levels required when called: 2
   434 ;; This function calls:
   435 ;;		_ENVIA_LCD_CMD
   436 ;;		_ENVIA_NIBBLE
   437 ;; This function is called by:
   438 ;;		_LCD_INIT
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	text3
   443   0025DE                     __ptext3:
   444                           	callstack 0
   445   0025DE                     _LCD_CONFIG:
   446                           	callstack 122
   447   0025DE                     
   448                           ;LCD.c: 95:  LATDbits.LATD0 = 0;
   449   0025DE  90C1               	bcf	193,0,c	;volatile
   450                           
   451                           ;LCD.c: 96:  LATDbits.LATD1 = 0;
   452   0025E0  92C1               	bcf	193,1,c	;volatile
   453   0025E2                     
   454                           ;LCD.c: 97:  ENVIA_NIBBLE(0x30);
   455   0025E2  0E30               	movlw	48
   456   0025E4  ECC0  F013         	call	_ENVIA_NIBBLE
   457   0025E8                     
   458                           ;LCD.c: 98:     _delay((unsigned long)((4)*(32000000UL/4000.0)));
   459   0025E8  0E2A               	movlw	42
   460   0025EA  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   461   0025EC  0E8E               	movlw	142
   462   0025EE                     u307:
   463   0025EE  2EE8               	decfsz	wreg,f,c
   464   0025F0  D7FE               	bra	u307
   465   0025F2  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   466   0025F4  D7FC               	bra	u307
   467   0025F6                     
   468                           ;LCD.c: 99:  ENVIA_NIBBLE(0x30);
   469   0025F6  0E30               	movlw	48
   470   0025F8  ECC0  F013         	call	_ENVIA_NIBBLE
   471                           
   472                           ;LCD.c: 100:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
   473   0025FC  0EA0               	movlw	160
   474   0025FE                     u317:
   475   0025FE  D000               	nop2	
   476   002600  2EE8               	decfsz	wreg,f,c
   477   002602  D7FD               	bra	u317
   478   002604                     
   479                           ;LCD.c: 101:     ENVIA_NIBBLE(0x30);
   480   002604  0E30               	movlw	48
   481   002606  ECC0  F013         	call	_ENVIA_NIBBLE
   482   00260A                     
   483                           ;LCD.c: 102:  ENVIA_NIBBLE(0x20);
   484   00260A  0E20               	movlw	32
   485   00260C  ECC0  F013         	call	_ENVIA_NIBBLE
   486   002610                     
   487                           ;LCD.c: 103:  ENVIA_LCD_CMD(0x01);
   488   002610  0E01               	movlw	1
   489   002612  EC85  F013         	call	_ENVIA_LCD_CMD
   490   002616                     
   491                           ;LCD.c: 104:  ENVIA_LCD_CMD(0x28);
   492   002616  0E28               	movlw	40
   493   002618  EC85  F013         	call	_ENVIA_LCD_CMD
   494   00261C                     
   495                           ;LCD.c: 105:  ENVIA_LCD_CMD(0x0F);
   496   00261C  0E0F               	movlw	15
   497   00261E  EC85  F013         	call	_ENVIA_LCD_CMD
   498   002622                     
   499                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x06);
   500   002622  0E06               	movlw	6
   501   002624  EC85  F013         	call	_ENVIA_LCD_CMD
   502   002628                     
   503                           ;LCD.c: 107:  ENVIA_LCD_CMD(0x01);
   504   002628  0E01               	movlw	1
   505   00262A  EC85  F013         	call	_ENVIA_LCD_CMD
   506   00262E  0012               	return		;funcret
   507   002630                     __end_of_LCD_CONFIG:
   508                           	callstack 0
   509                           
   510 ;; *************** function _CURSOR_ONOFF *****************
   511 ;; Defined at:
   512 ;;		line 54 in file "LCD.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;  estado          1    wreg     unsigned char 
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  estado          1    3[COMRAM] unsigned char 
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, status,2, status,0, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   529 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   530 ;;Total ram usage:        1 bytes
   531 ;; Hardware stack levels used: 1
   532 ;; Hardware stack levels required when called: 2
   533 ;; This function calls:
   534 ;;		_ENVIA_LCD_CMD
   535 ;; This function is called by:
   536 ;;		_LCD_INIT
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text4
   541   0026AC                     __ptext4:
   542                           	callstack 0
   543   0026AC                     _CURSOR_ONOFF:
   544                           	callstack 122
   545                           
   546                           ;incstack = 0
   547                           ;CURSOR_ONOFF@estado stored from wreg
   548   0026AC  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   549   0026AE                     
   550                           ;LCD.c: 55:  if(estado == 0) ENVIA_LCD_CMD(0x0E);
   551   0026AE  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   552   0026B0  A4D8               	btfss	status,2,c
   553   0026B2  EF5D  F013         	goto	u11
   554   0026B6  EF5F  F013         	goto	u10
   555   0026BA                     u11:
   556   0026BA  EF62  F013         	goto	l912
   557   0026BE                     u10:
   558   0026BE  0E0E               	movlw	14
   559   0026C0  EC85  F013         	call	_ENVIA_LCD_CMD
   560   0026C4                     l912:
   561                           
   562                           ;LCD.c: 56:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   563   0026C4  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   564   0026C6  A4D8               	btfss	status,2,c
   565   0026C8  EF68  F013         	goto	u21
   566   0026CC  EF6A  F013         	goto	u20
   567   0026D0                     u21:
   568   0026D0  EF6D  F013         	goto	l97
   569   0026D4                     u20:
   570   0026D4  0E0C               	movlw	12
   571   0026D6  EC85  F013         	call	_ENVIA_LCD_CMD
   572   0026DA                     l97:
   573   0026DA  0012               	return		;funcret
   574   0026DC                     __end_of_CURSOR_ONOFF:
   575                           	callstack 0
   576                           
   577 ;; *************** function _CURSOR_HOME *****************
   578 ;; Defined at:
   579 ;;		line 34 in file "LCD.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, status,2, status,0, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   597 ;;Total ram usage:        0 bytes
   598 ;; Hardware stack levels used: 1
   599 ;; Hardware stack levels required when called: 2
   600 ;; This function calls:
   601 ;;		_ENVIA_LCD_CMD
   602 ;; This function is called by:
   603 ;;		_LCD_INIT
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text5
   608   00279C                     __ptext5:
   609                           	callstack 0
   610   00279C                     _CURSOR_HOME:
   611                           	callstack 122
   612   00279C                     
   613                           ;LCD.c: 35:  ENVIA_LCD_CMD(0x02);
   614   00279C  0E02               	movlw	2
   615   00279E  EC85  F013         	call	_ENVIA_LCD_CMD
   616   0027A2  0012               	return		;funcret
   617   0027A4                     __end_of_CURSOR_HOME:
   618                           	callstack 0
   619                           
   620 ;; *************** function _BORRAR_LCD *****************
   621 ;; Defined at:
   622 ;;		line 90 in file "LCD.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, status,2, status,0, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   640 ;;Total ram usage:        0 bytes
   641 ;; Hardware stack levels used: 1
   642 ;; Hardware stack levels required when called: 2
   643 ;; This function calls:
   644 ;;		_ENVIA_LCD_CMD
   645 ;; This function is called by:
   646 ;;		_LCD_INIT
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text6
   651   0027A4                     __ptext6:
   652                           	callstack 0
   653   0027A4                     _BORRAR_LCD:
   654                           	callstack 122
   655   0027A4                     
   656                           ;LCD.c: 91:  ENVIA_LCD_CMD(0x01);
   657   0027A4  0E01               	movlw	1
   658   0027A6  EC85  F013         	call	_ENVIA_LCD_CMD
   659   0027AA  0012               	return		;funcret
   660   0027AC                     __end_of_BORRAR_LCD:
   661                           	callstack 0
   662                           
   663 ;; *************** function _POS_CURSOR *****************
   664 ;; Defined at:
   665 ;;		line 9 in file "LCD.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  fila            1    wreg     unsigned char 
   668 ;;  columna         1    3[COMRAM] unsigned char 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  fila            1    4[COMRAM] unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   680 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   683 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   684 ;;Total ram usage:        2 bytes
   685 ;; Hardware stack levels used: 1
   686 ;; Hardware stack levels required when called: 2
   687 ;; This function calls:
   688 ;;		_ENVIA_LCD_CMD
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text7
   695   00250E                     __ptext7:
   696                           	callstack 0
   697   00250E                     _POS_CURSOR:
   698                           	callstack 124
   699                           
   700                           ;incstack = 0
   701                           ;POS_CURSOR@fila stored from wreg
   702   00250E  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
   703   002510                     
   704                           ;LCD.c: 10:  if(fila == 1){
   705   002510  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
   706   002512  A4D8               	btfss	status,2,c
   707   002514  EF8E  F012         	goto	u221
   708   002518  EF90  F012         	goto	u220
   709   00251C                     u221:
   710   00251C  EF96  F012         	goto	l1224
   711   002520                     u220:
   712   002520                     
   713                           ;LCD.c: 11:   ENVIA_LCD_CMD(0x80+columna);
   714   002520  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   715   002522  0F80               	addlw	128
   716   002524  EC85  F013         	call	_ENVIA_LCD_CMD
   717                           
   718                           ;LCD.c: 12:  }
   719   002528  EFC3  F012         	goto	l67
   720   00252C                     l1224:
   721   00252C  0E02               	movlw	2
   722   00252E  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   723   002530  A4D8               	btfss	status,2,c
   724   002532  EF9D  F012         	goto	u231
   725   002536  EF9F  F012         	goto	u230
   726   00253A                     u231:
   727   00253A  EFA5  F012         	goto	l1228
   728   00253E                     u230:
   729   00253E                     
   730                           ;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   731   00253E  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   732   002540  0FC0               	addlw	192
   733   002542  EC85  F013         	call	_ENVIA_LCD_CMD
   734                           
   735                           ;LCD.c: 15:  }
   736   002546  EFC3  F012         	goto	l67
   737   00254A                     l1228:
   738   00254A  0E03               	movlw	3
   739   00254C  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   740   00254E  A4D8               	btfss	status,2,c
   741   002550  EFAC  F012         	goto	u241
   742   002554  EFAE  F012         	goto	u240
   743   002558                     u241:
   744   002558  EFB4  F012         	goto	l1232
   745   00255C                     u240:
   746   00255C                     
   747                           ;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
   748   00255C  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   749   00255E  0F94               	addlw	148
   750   002560  EC85  F013         	call	_ENVIA_LCD_CMD
   751                           
   752                           ;LCD.c: 18:  }
   753   002564  EFC3  F012         	goto	l67
   754   002568                     l1232:
   755   002568  0E04               	movlw	4
   756   00256A  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   757   00256C  A4D8               	btfss	status,2,c
   758   00256E  EFBB  F012         	goto	u251
   759   002572  EFBD  F012         	goto	u250
   760   002576                     u251:
   761   002576  EFC3  F012         	goto	l63
   762   00257A                     u250:
   763   00257A                     
   764                           ;LCD.c: 20:   ENVIA_LCD_CMD(0xD4+columna);
   765   00257A  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   766   00257C  0FD4               	addlw	212
   767   00257E  EC85  F013         	call	_ENVIA_LCD_CMD
   768   002582  EFC3  F012         	goto	l67
   769   002586                     l63:
   770   002586                     l67:
   771   002586  0012               	return		;funcret
   772   002588                     __end_of_POS_CURSOR:
   773                           	callstack 0
   774                           
   775 ;; *************** function _ENVIA_LCD_CMD *****************
   776 ;; Defined at:
   777 ;;		line 119 in file "LCD.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  dato            1    wreg     unsigned char 
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  dato            1    1[COMRAM] unsigned char 
   782 ;;  aux             1    2[COMRAM] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   793 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   796 ;;Total ram usage:        2 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; Hardware stack levels required when called: 1
   799 ;; This function calls:
   800 ;;		_ENVIA_NIBBLE
   801 ;; This function is called by:
   802 ;;		_POS_CURSOR
   803 ;;		_CURSOR_HOME
   804 ;;		_CURSOR_ONOFF
   805 ;;		_BORRAR_LCD
   806 ;;		_LCD_CONFIG
   807 ;;		_BLINK_CURSOR
   808 ;;		_DISPLAY_ONOFF
   809 ;;		_CURSOR_SHIFTLEFT
   810 ;;		_CURSOR_SHIFTRIGHT
   811 ;;		_DISPLAY_SHIFTLEFT
   812 ;;		_DISPLAY_SHIFTRIGHT
   813 ;;		_GENERACARACTER
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           	psect	text8
   818   00270A                     __ptext8:
   819                           	callstack 0
   820   00270A                     _ENVIA_LCD_CMD:
   821                           	callstack 122
   822                           
   823                           ;incstack = 0
   824                           ;ENVIA_LCD_CMD@dato stored from wreg
   825   00270A  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
   826   00270C                     
   827                           ;LCD.c: 120:     unsigned char aux;;LCD.c: 121:   LATDbits.LATD0 = 0;
   828   00270C  90C1               	bcf	193,0,c	;volatile
   829   00270E                     
   830                           ;LCD.c: 124:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
   831   00270E  0EA0               	movlw	160
   832   002710                     u327:
   833   002710  D000               	nop2	
   834   002712  2EE8               	decfsz	wreg,f,c
   835   002714  D7FD               	bra	u327
   836   002716                     
   837                           ;LCD.c: 125:     LATDbits.LATD1 = 0;
   838   002716  92C1               	bcf	193,1,c	;volatile
   839   002718                     
   840                           ;LCD.c: 126:  LATDbits.LATD2 = 0;
   841   002718  94C1               	bcf	193,2,c	;volatile
   842   00271A                     
   843                           ;LCD.c: 127:  LATDbits.LATD0 = 0;
   844   00271A  90C1               	bcf	193,0,c	;volatile
   845   00271C                     
   846                           ;LCD.c: 128:  aux = dato & 0xF0;
   847   00271C  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   848   00271E  0BF0               	andlw	240
   849   002720  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   850   002722                     
   851                           ;LCD.c: 129:  ENVIA_NIBBLE(aux);
   852   002722  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   853   002724  ECC0  F013         	call	_ENVIA_NIBBLE
   854   002728                     
   855                           ;LCD.c: 130:  aux = dato<<4;
   856   002728  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   857   00272A  0BF0               	andlw	240
   858   00272C  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   859   00272E                     
   860                           ;LCD.c: 131:  ENVIA_NIBBLE(aux);
   861   00272E  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   862   002730  ECC0  F013         	call	_ENVIA_NIBBLE
   863   002734  0012               	return		;funcret
   864   002736                     __end_of_ENVIA_LCD_CMD:
   865                           	callstack 0
   866                           
   867 ;; *************** function _ESCRIBE_MENSAJE2 *****************
   868 ;; Defined at:
   869 ;;		line 66 in file "LCD.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
   872 ;;		 -> STR_1(11), 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  i               1    6[COMRAM] unsigned char 
   875 ;;  tam             1    5[COMRAM] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   885 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   886 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   888 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   889 ;;Total ram usage:        4 bytes
   890 ;; Hardware stack levels used: 1
   891 ;; Hardware stack levels required when called: 2
   892 ;; This function calls:
   893 ;;		_ENVIA_CHAR
   894 ;;		_strlen
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text9
   901   002630                     __ptext9:
   902                           	callstack 0
   903   002630                     _ESCRIBE_MENSAJE2:
   904                           	callstack 124
   905   002630                     
   906                           ;LCD.c: 67:     unsigned char tam;;LCD.c: 68:     tam = strlen(cadena);
   907   002630  C504  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
   908   002634  EC3A  F013         	call	_strlen	;wreg free
   909   002638  5001               	movf	?_strlen^(0+1280),w,c
   910   00263A  6E06               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
   911   00263C                     
   912                           ;LCD.c: 70:  for(i = 0; i<tam; i++) {
   913   00263C  0E00               	movlw	0
   914   00263E  6E07               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
   915   002640  EF30  F013         	goto	l1246
   916   002644                     l1242:
   917                           
   918                           ;LCD.c: 71:   ENVIA_CHAR(cadena[i]);
   919   002644  5004               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
   920   002646  2407               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
   921   002648  6E05               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
   922   00264A  C505  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
   923   00264E                     	if	1	;There is more than 1 active tblptr byte
   924   00264E  0E25               	movlw	high __smallconst
   925   002650  6EF7               	movwf	tblptrh,c
   926   002652                     	endif
   927   002652                     	if	0	;tblptru may be non-zero
   928   002652                     	endif
   929   002652                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   930   002652  0E00               	movlw	low (__smallconst shr (0+16))
   931   002654  6EF8               	movwf	tblptru,c
   932   002656                     	endif
   933   002656  0008               	tblrd		*
   934   002658  50F5               	movf	tablat,w,c
   935   00265A  EC9B  F013         	call	_ENVIA_CHAR
   936   00265E                     
   937                           ;LCD.c: 72:  }
   938   00265E  2A07               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
   939   002660                     l1246:
   940   002660  5006               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
   941   002662  5C07               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
   942   002664  A0D8               	btfss	status,0,c
   943   002666  EF37  F013         	goto	u261
   944   00266A  EF39  F013         	goto	u260
   945   00266E                     u261:
   946   00266E  EF22  F013         	goto	l1242
   947   002672                     u260:
   948   002672  0012               	return		;funcret
   949   002674                     __end_of_ESCRIBE_MENSAJE2:
   950                           	callstack 0
   951                           
   952 ;; *************** function _strlen *****************
   953 ;; Defined at:
   954 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;  s               1    0[COMRAM] PTR const unsigned char 
   957 ;;		 -> STR_1(11), 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  a               1    2[COMRAM] PTR const unsigned char 
   960 ;;		 -> STR_1(11), 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  2    0[COMRAM] unsigned int 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   973 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   974 ;;Total ram usage:        3 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_ESCRIBE_MENSAJE2
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text10
   984   002674                     __ptext10:
   985                           	callstack 0
   986   002674                     _strlen:
   987                           	callstack 125
   988   002674  C501  F503         	movff	strlen@s,strlen@a
   989   002678  EF3F  F013         	goto	l1214
   990   00267C                     l1212:
   991   00267C  2A01               	incf	strlen@s^(0+1280),f,c
   992   00267E                     l1214:
   993   00267E  C501  F4F6         	movff	strlen@s,tblptrl
   994   002682                     	if	1	;There is more than 1 active tblptr byte
   995   002682  0E25               	movlw	high __smallconst
   996   002684  6EF7               	movwf	tblptrh,c
   997   002686                     	endif
   998   002686                     	if	0	;tblptru may be non-zero
   999   002686                     	endif
  1000   002686                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1001   002686  0E00               	movlw	low (__smallconst shr (0+16))
  1002   002688  6EF8               	movwf	tblptru,c
  1003   00268A                     	endif
  1004   00268A  0008               	tblrd		*
  1005   00268C  50F5               	movf	tablat,w,c
  1006   00268E  0900               	iorlw	0
  1007   002690  A4D8               	btfss	status,2,c
  1008   002692  EF4D  F013         	goto	u211
  1009   002696  EF4F  F013         	goto	u210
  1010   00269A                     u211:
  1011   00269A  EF3E  F013         	goto	l1212
  1012   00269E                     u210:
  1013   00269E  5003               	movf	strlen@a^(0+1280),w,c
  1014   0026A0  5C01               	subwf	strlen@s^(0+1280),w,c
  1015   0026A2  6E01               	movwf	?_strlen^(0+1280),c
  1016   0026A4  6A02               	clrf	(?_strlen+1)^(0+1280),c
  1017   0026A6  BE01               	btfsc	?_strlen^(0+1280),7,c
  1018   0026A8  0602               	decf	(?_strlen+1)^(0+1280),f,c
  1019   0026AA  0012               	return		;funcret
  1020   0026AC                     __end_of_strlen:
  1021                           	callstack 0
  1022                           
  1023 ;; *************** function _ENVIA_CHAR *****************
  1024 ;; Defined at:
  1025 ;;		line 75 in file "LCD.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;  dato            1    wreg     unsigned char 
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  dato            1    1[COMRAM] unsigned char 
  1030 ;;  aux             1    2[COMRAM] unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1041 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1043 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1044 ;;Total ram usage:        2 bytes
  1045 ;; Hardware stack levels used: 1
  1046 ;; Hardware stack levels required when called: 1
  1047 ;; This function calls:
  1048 ;;		_ENVIA_NIBBLE
  1049 ;; This function is called by:
  1050 ;;		_ESCRIBE_MENSAJE2
  1051 ;;		_ESCRIBE_MENSAJE
  1052 ;;		_GENERACARACTER
  1053 ;;		_LCD_ESCRIBE_VAR_CHAR
  1054 ;;		_LCD_ESCRIBE_VAR_INT
  1055 ;;		_LCD_CHAR_GRADO
  1056 ;;		_LCD_VARCHAR_BITS
  1057 ;;		_LCD_VARCHAR_HEX
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text11
  1062   002736                     __ptext11:
  1063                           	callstack 0
  1064   002736                     _ENVIA_CHAR:
  1065                           	callstack 124
  1066                           
  1067                           ;incstack = 0
  1068                           ;ENVIA_CHAR@dato stored from wreg
  1069   002736  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1070   002738                     
  1071                           ;LCD.c: 76:  unsigned char aux;;LCD.c: 77:  LATDbits.LATD0 = 1;
  1072   002738  80C1               	bsf	193,0,c	;volatile
  1073   00273A                     
  1074                           ;LCD.c: 80:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1075   00273A  0EA0               	movlw	160
  1076   00273C                     u337:
  1077   00273C  D000               	nop2	
  1078   00273E  2EE8               	decfsz	wreg,f,c
  1079   002740  D7FD               	bra	u337
  1080   002742                     
  1081                           ;LCD.c: 81:  LATDbits.LATD1 = 0;
  1082   002742  92C1               	bcf	193,1,c	;volatile
  1083   002744                     
  1084                           ;LCD.c: 82:  LATDbits.LATD2 = 0;
  1085   002744  94C1               	bcf	193,2,c	;volatile
  1086   002746                     
  1087                           ;LCD.c: 83:  LATDbits.LATD0 = 1;
  1088   002746  80C1               	bsf	193,0,c	;volatile
  1089   002748                     
  1090                           ;LCD.c: 84:  aux = dato & 0xF0;
  1091   002748  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1092   00274A  0BF0               	andlw	240
  1093   00274C  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1094   00274E                     
  1095                           ;LCD.c: 85:  ENVIA_NIBBLE(aux);
  1096   00274E  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1097   002750  ECC0  F013         	call	_ENVIA_NIBBLE
  1098   002754                     
  1099                           ;LCD.c: 86:  aux = dato << 4;
  1100   002754  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1101   002756  0BF0               	andlw	240
  1102   002758  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1103   00275A                     
  1104                           ;LCD.c: 87:  ENVIA_NIBBLE(aux);
  1105   00275A  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1106   00275C  ECC0  F013         	call	_ENVIA_NIBBLE
  1107   002760  0012               	return		;funcret
  1108   002762                     __end_of_ENVIA_CHAR:
  1109                           	callstack 0
  1110                           
  1111 ;; *************** function _ENVIA_NIBBLE *****************
  1112 ;; Defined at:
  1113 ;;		line 110 in file "LCD.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  dato            1    wreg     unsigned char 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  dato            1    0[COMRAM] unsigned char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1130 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1131 ;;Total ram usage:        1 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; This function calls:
  1134 ;;		Nothing
  1135 ;; This function is called by:
  1136 ;;		_ENVIA_CHAR
  1137 ;;		_LCD_CONFIG
  1138 ;;		_ENVIA_LCD_CMD
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text12
  1143   002780                     __ptext12:
  1144                           	callstack 0
  1145   002780                     _ENVIA_NIBBLE:
  1146                           	callstack 123
  1147                           
  1148                           ;incstack = 0
  1149                           ;ENVIA_NIBBLE@dato stored from wreg
  1150   002780  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1151   002782                     
  1152                           ;LCD.c: 111:  LATD &= 0x0F;
  1153   002782  0E0F               	movlw	15
  1154   002784  16C1               	andwf	193,f,c	;volatile
  1155                           
  1156                           ;LCD.c: 112:  dato &= 0xF0;
  1157   002786  0EF0               	movlw	240
  1158   002788  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1159                           
  1160                           ;LCD.c: 113:  LATD|= dato;
  1161   00278A  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1162   00278C  12C1               	iorwf	193,f,c	;volatile
  1163   00278E                     
  1164                           ;LCD.c: 114:  LATDbits.LATD2 = 1;
  1165   00278E  84C1               	bsf	193,2,c	;volatile
  1166   002790                     
  1167                           ;LCD.c: 115:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1168   002790  0EA0               	movlw	160
  1169   002792                     u347:
  1170   002792  D000               	nop2	
  1171   002794  2EE8               	decfsz	wreg,f,c
  1172   002796  D7FD               	bra	u347
  1173   002798                     
  1174                           ;LCD.c: 116:  LATDbits.LATD2 = 0;
  1175   002798  94C1               	bcf	193,2,c	;volatile
  1176   00279A  0012               	return		;funcret
  1177   00279C                     __end_of_ENVIA_NIBBLE:
  1178                           	callstack 0
  1179                           
  1180                           	psect	rparam
  1181   000000                     
  1182                           	psect	config
  1183                           
  1184                           ;Config register CONFIG1 @ 0x300000
  1185                           ;	External Oscillator Selection
  1186                           ;	FEXTOSC = OFF, Oscillator not enabled
  1187                           ;	Reset Oscillator Selection
  1188                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1189   300000                     	org	3145728
  1190   300000  FC                 	db	252
  1191                           
  1192                           ;Config register CONFIG2 @ 0x300001
  1193                           ;	Clock out Enable bit
  1194                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1195                           ;	PRLOCKED One-Way Set Enable bit
  1196                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1197                           ;	Clock Switch Enable bit
  1198                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1199                           ;	Fail-Safe Clock Monitor Enable bit
  1200                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1201   300001                     	org	3145729
  1202   300001  FF                 	db	255
  1203                           
  1204                           ;Config register CONFIG3 @ 0x300002
  1205                           ;	MCLR Enable bit
  1206                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1207                           ;	Power-up timer selection bits
  1208                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  1209                           ;	Multi-vector enable bit
  1210                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1211                           ;	IVTLOCK bit One-way set enable bit
  1212                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1213                           ;	Low Power BOR Enable bit
  1214                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1215                           ;	Brown-out Reset Enable bits
  1216                           ;	BOREN = OFF, Brown-out Reset disabled
  1217   300002                     	org	3145730
  1218   300002  3D                 	db	61
  1219                           
  1220                           ;Config register CONFIG4 @ 0x300003
  1221                           ;	Brown-out Reset Voltage Selection bits
  1222                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1223                           ;	ZCD Disable bit
  1224                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1225                           ;	PPSLOCK bit One-Way Set Enable bit
  1226                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1227                           ;	Stack Full/Underflow Reset Enable bit
  1228                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1229                           ;	Low Voltage Programming Enable bit
  1230                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1231                           ;	Extended Instruction Set Enable bit
  1232                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1233   300003                     	org	3145731
  1234   300003  DF                 	db	223
  1235                           
  1236                           ;Config register CONFIG5 @ 0x300004
  1237                           ;	WDT Period selection bits
  1238                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1239                           ;	WDT operating mode
  1240                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1241   300004                     	org	3145732
  1242   300004  9F                 	db	159
  1243                           
  1244                           ;Config register CONFIG6 @ 0x300005
  1245                           ;	WDT Window Select bits
  1246                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1247                           ;	WDT input clock selector
  1248                           ;	WDTCCS = SC, Software Control
  1249   300005                     	org	3145733
  1250   300005  FF                 	db	255
  1251                           
  1252                           ;Config register CONFIG7 @ 0x300006
  1253                           ;	Boot Block Size selection bits
  1254                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1255                           ;	Boot Block enable bit
  1256                           ;	BBEN = OFF, Boot block disabled
  1257                           ;	Storage Area Flash enable bit
  1258                           ;	SAFEN = OFF, SAF disabled
  1259                           ;	Background Debugger
  1260                           ;	DEBUG = OFF, Background Debugger disabled
  1261   300006                     	org	3145734
  1262   300006  FF                 	db	255
  1263                           
  1264                           ;Config register CONFIG8 @ 0x300007
  1265                           ;	Boot Block Write Protection bit
  1266                           ;	WRTB = OFF, Boot Block not Write protected
  1267                           ;	Configuration Register Write Protection bit
  1268                           ;	WRTC = OFF, Configuration registers not Write protected
  1269                           ;	Data EEPROM Write Protection bit
  1270                           ;	WRTD = OFF, Data EEPROM not Write protected
  1271                           ;	SAF Write protection bit
  1272                           ;	WRTSAF = OFF, SAF not Write Protected
  1273                           ;	Application Block write protection bit
  1274                           ;	WRTAPP = OFF, Application Block not write protected
  1275   300007                     	org	3145735
  1276   300007  FF                 	db	255
  1277                           
  1278                           ;Config register CONFIG10 @ 0x300009
  1279                           ;	PFM and Data EEPROM Code Protection bit
  1280                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1281   300009                     	org	3145737
  1282   300009  FF                 	db	255
  1283                           tosu	equ	0x4FF
  1284                           tosh	equ	0x4FE
  1285                           tosl	equ	0x4FD
  1286                           stkptr	equ	0x4FC
  1287                           pclatu	equ	0x4FB
  1288                           pclath	equ	0x4FA
  1289                           pcl	equ	0x4F9
  1290                           tblptru	equ	0x4F8
  1291                           tblptrh	equ	0x4F7
  1292                           tblptrl	equ	0x4F6
  1293                           tablat	equ	0x4F5
  1294                           prodh	equ	0x4F4
  1295                           prodl	equ	0x4F3
  1296                           indf0	equ	0x4EF
  1297                           postinc0	equ	0x4EE
  1298                           postdec0	equ	0x4ED
  1299                           preinc0	equ	0x4EC
  1300                           plusw0	equ	0x4EB
  1301                           fsr0h	equ	0x4EA
  1302                           fsr0l	equ	0x4E9
  1303                           wreg	equ	0x4E8
  1304                           indf1	equ	0x4E7
  1305                           postinc1	equ	0x4E6
  1306                           postdec1	equ	0x4E5
  1307                           preinc1	equ	0x4E4
  1308                           plusw1	equ	0x4E3
  1309                           fsr1h	equ	0x4E2
  1310                           fsr1l	equ	0x4E1
  1311                           bsr	equ	0x4E0
  1312                           indf2	equ	0x4DF
  1313                           postinc2	equ	0x4DE
  1314                           postdec2	equ	0x4DD
  1315                           preinc2	equ	0x4DC
  1316                           plusw2	equ	0x4DB
  1317                           fsr2h	equ	0x4DA
  1318                           fsr2l	equ	0x4D9
  1319                           status	equ	0x4D8

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE2
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1103
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
                          _configuro
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     345
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             2     2      0     345
                                              4 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0      90
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     105
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0      75
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _BORRAR_LCD                                           0     0      0      75
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     327
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _ENVIA_LCD_CMD                                        2     2      0      75
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1     431
                                              3 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0      75
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
     _strlen
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BIGRAM            1FFF      0       0      69        0.0%
BITBIGSFRhhhhhh     29      0       0      70        0.0%
BITBIGSFRhhhhhh      4      0       0      71        0.0%
BITBIGSFRhhhhhh      7      0       0      72        0.0%
BITBIGSFRhhhhhh      7      0       0      73        0.0%
BITBIGSFRhhhhhh     1F      0       0      74        0.0%
BITBIGSFRhhhhhl     88      0       0      75        0.0%
BITBIGSFRhhhhhl     D5      0       0      76        0.0%
BITBIGSFRhhhhl      1E      0       0      77        0.0%
BITBIGSFRhhhlh       2      0       0      78        0.0%
BITBIGSFRhhhll     26A      0       0      79        0.0%
BITBIGSFRhhl         1      0       0      80        0.0%
BITBIGSFRhl          3      0       0      81        0.0%
BITBIGSFRl          AD      0       0      82        0.0%
ABS                  0      0       0      83        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Oct 14 11:10:20 2024

                      l34 2766                        l29 2708                        l63 2586  
                      l80 27A2                        l67 2586                        l97 26DA  
                      u10 26BE                        u11 26BA                        u20 26D4  
                      u21 26D0             ENVIA_CHAR@aux 0503                       l112 2760  
                     l121 279A                       l115 27AA                       l124 2734  
                     l109 2672                       l118 262E                       l138 25DC  
                     l900 2722                       l902 2728                       l910 26BE  
                     l904 272E                       l912 26C4                       l920 25E2  
                     l906 279C                       l914 26D4                       l930 2610  
                     l922 25E8                       l916 27A4                       l908 26AE  
                     l932 2616                       l924 25F6                       l940 2588  
                     l950 2738                       l934 261C                       l926 2604  
                     l918 25DE                       l942 25A0                       l880 2782  
                     l960 2748                       l952 273A                       l936 2622  
                     l928 260A                       l944 25A4                       l882 278E  
                     l962 274E                       l954 2742                       l890 270E  
                     l938 2628                       l946 25BA                       l884 2790  
                     l964 2754                       l956 2744                       l892 2716  
                     l948 25BE                       l980 2700                       l886 2798  
                     l966 275A                       l958 2746                       l878 26AA  
                     l894 2718                       l982 2702                       l896 271A  
                     l888 270C                       l984 2704                       l898 271C  
                     l978 26DC                       u210 269E                       u211 269A  
                     u220 2520                       u221 251C                       u230 253E  
                     u231 253A                       u240 255C                       u241 2558  
                     u250 257A                       u251 2576                       u307 25EE  
                     u260 2672                       u261 266E                       u317 25FE  
                     u327 2710                       u337 273C                       u347 2792  
                     u277 2592                       u287 25B0                       u297 25C4  
                     wreg 04E8              ?_CURSOR_HOME 0501            ??_ENVIA_NIBBLE 0501  
          ENVIA_CHAR@dato 0502                      l1210 2674                      l1212 267C  
                    l1220 2510                      l1214 267E                      l1230 255C  
                    l1222 2520                      l1216 269E                      l1240 263C  
                    l1232 2568                      l1224 252C                      l1242 2644  
                    l1234 257A                      l1226 253E                      l1250 2770  
                    l1244 265E                      l1236 2630                      l1228 254A  
                    l1246 2660                      l1238 263C                      l1248 2762  
                    STR_1 2501                      _LATD 04C1                      _main 2762  
                    start FFFC             ?_CURSOR_ONOFF 0501              ___param_bank 0000  
         ??_ENVIA_LCD_CMD 0502          __end_of_LCD_INIT 25DE                     ?_main 0501  
                   _T1CLK 0321                     _T1CON 031E                     _OSCEN 00B3  
                   _PORTD 04D1                     _TRISD 04C9               ?_POS_CURSOR 0504  
                   tablat 04F5                     status 04D8            ??_CURSOR_ONOFF 0504  
         __initialization 27AC              __end_of_main 2780                    ??_main 0508  
           __activetblptr 0003                    _CCPR1H 0341                    _CCPR1L 0340  
                  _ANSELD 0418                    _OSCFRQ 00B1      __end_of_ENVIA_NIBBLE 279C  
                  isa$std 0001                    _strlen 2674              __mediumconst 0000  
                  tblptrh 04F7                    tblptrl 04F6                    tblptru 04F8  
            ??_BORRAR_LCD 0504                 ?_LCD_INIT 0501                __accesstop 0560  
 __end_of__initialization 27AC              ??_LCD_CONFIG 0504             ___rparam_used 0001  
            ??_ENVIA_CHAR 0502            __pcstackCOMRAM 0501        __end_of_BORRAR_LCD 27AC  
        _ESCRIBE_MENSAJE2 2630          ENVIA_LCD_CMD@aux 0503      __end_of_CURSOR_ONOFF 26DC  
      __end_of_LCD_CONFIG 2630        __end_of_ENVIA_CHAR 2762                ??_LCD_INIT 0505  
        ENVIA_NIBBLE@dato 0501                   _CCP1CON 0342                   ?_strlen 0501  
                 _OSCCON1 00AD              ??_POS_CURSOR 0505                   __Hparam 0000  
                 __Lparam 0000         __end_of_configuro 270A              __psmallconst 2500  
   __end_of_ENVIA_LCD_CMD 2736                   __pcinit 27AC        __end_of_POS_CURSOR 2588  
                 __ramtop 2500                   __ptext0 2762                   __ptext1 26DC  
                 __ptext2 2588                   __ptext3 25DE                   __ptext4 26AC  
                 __ptext5 279C                   __ptext6 27A4                   __ptext7 250E  
                 __ptext8 270A                   __ptext9 2630              _ENVIA_NIBBLE 2780  
    end_of_initialization 27AC                   strlen@a 0503                   strlen@s 0501  
       ESCRIBE_MENSAJE2@i 0507  __end_of_ESCRIBE_MENSAJE2 2674              _CURSOR_ONOFF 26AC  
      CURSOR_ONOFF@estado 0504            __end_of_strlen 26AC             ??_CURSOR_HOME 0504  
     start_initialization 27AC         ENVIA_LCD_CMD@dato 0502                  ??_strlen 0503  
     __end_of_CURSOR_HOME 27A4                 _configuro 26DC               __smallconst 2500  
                _LCD_INIT 2588                  _LATDbits 04C1                  _PIE3bits 04A1  
          POS_CURSOR@fila 0505                ?_configuro 0501    ESCRIBE_MENSAJE2@cadena 0504  
             _CURSOR_HOME 279C               _INTCON0bits 04D6                  __Hrparam 0000  
       ?_ESCRIBE_MENSAJE2 0504                  __Lrparam 0000        ??_ESCRIBE_MENSAJE2 0505  
                __ptext10 2674                  __ptext11 2736                  __ptext12 2780  
              _BORRAR_LCD 27A4                _LCD_CONFIG 25DE                _ENVIA_CHAR 2736  
                isa$xinst 0000             _ENVIA_LCD_CMD 270A               ??_configuro 0507  
          ?_ENVIA_LCD_CMD 0501       ESCRIBE_MENSAJE2@tam 0506               ?_BORRAR_LCD 0501  
           ?_ENVIA_NIBBLE 0501                _POS_CURSOR 250E               ?_LCD_CONFIG 0501  
             ?_ENVIA_CHAR 0501         POS_CURSOR@columna 0504  
