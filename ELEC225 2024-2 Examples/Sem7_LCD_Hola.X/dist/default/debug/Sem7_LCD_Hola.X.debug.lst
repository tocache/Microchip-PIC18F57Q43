

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Sep 30 11:30:49 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 18/12/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F57Q43 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     _LATD	set	1217
    61   000000                     _OSCCON1	set	173
    62   000000                     _OSCFRQ	set	177
    63   000000                     _OSCEN	set	179
    64   000000                     _ANSELD	set	1048
    65   000000                     _LATDbits	set	1217
    66   000000                     _TRISD	set	1225
    67   000000                     _PORTD	set	1233
    68                           
    69                           	psect	smallconst
    70   002500                     __psmallconst:
    71                           	callstack 0
    72   002500  00                 	db	0
    73   002501                     STR_2:
    74   002501  49                 	db	73	;'I'
    75   002502  6E                 	db	110	;'n'
    76   002503  67                 	db	103	;'g'
    77   002504  2E                 	db	46
    78   002505  20                 	db	32
    79   002506  45                 	db	69	;'E'
    80   002507  6C                 	db	108	;'l'
    81   002508  65                 	db	101	;'e'
    82   002509  63                 	db	99	;'c'
    83   00250A  2D                 	db	45
    84   00250B  4D                 	db	77	;'M'
    85   00250C  65                 	db	101	;'e'
    86   00250D  63                 	db	99	;'c'
    87   00250E  61                 	db	97	;'a'
    88   00250F  74                 	db	116	;'t'
    89   002510  72                 	db	114	;'r'
    90   002511  00                 	db	0
    91   002512                     STR_1:
    92   002512  48                 	db	72	;'H'
    93   002513  6F                 	db	111	;'o'
    94   002514  6C                 	db	108	;'l'
    95   002515  61                 	db	97	;'a'
    96   002516  20                 	db	32
    97   002517  6D                 	db	109	;'m'
    98   002518  75                 	db	117	;'u'
    99   002519  6E                 	db	110	;'n'
   100   00251A  64                 	db	100	;'d'
   101   00251B  6F                 	db	111	;'o'
   102   00251C  00                 	db	0
   103   00251D  00                 	db	0	; dummy byte at the end
   104   000000                     
   105                           ; #config settings
   106                           
   107                           	psect	cinit
   108   002820                     __pcinit:
   109                           	callstack 0
   110   002820                     start_initialization:
   111                           	callstack 0
   112   002820                     __initialization:
   113                           	callstack 0
   114   002820                     end_of_initialization:
   115                           	callstack 0
   116   002820                     __end_of__initialization:
   117                           	callstack 0
   118   002820  0100               	movlb	0
   119   002822  EFC0  F013         	goto	_main	;jump to C main() function
   120                           
   121                           	psect	cstackCOMRAM
   122   000501                     __pcstackCOMRAM:
   123                           	callstack 0
   124   000501                     ?_strlen:
   125                           	callstack 0
   126   000501                     ENVIA_NIBBLE@dato:
   127                           	callstack 0
   128   000501                     LEER_LCD@aux:
   129                           	callstack 0
   130   000501                     strlen@s:
   131                           	callstack 0
   132                           
   133                           ; 1 bytes @ 0x0
   134   000501                     	ds	1
   135   000502                     ENVIA_CHAR@dato:
   136                           	callstack 0
   137   000502                     ENVIA_LCD_CMD@dato:
   138                           	callstack 0
   139                           
   140                           ; 1 bytes @ 0x1
   141   000502                     	ds	1
   142   000503                     ENVIA_CHAR@aux:
   143                           	callstack 0
   144   000503                     ENVIA_LCD_CMD@aux:
   145                           	callstack 0
   146   000503                     strlen@a:
   147                           	callstack 0
   148                           
   149                           ; 1 bytes @ 0x2
   150   000503                     	ds	1
   151   000504                     ??_LCD_CONFIG:
   152   000504                     POS_CURSOR@columna:
   153                           	callstack 0
   154   000504                     CURSOR_ONOFF@estado:
   155                           	callstack 0
   156   000504                     ESCRIBE_MENSAJE2@cadena:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x3
   160   000504                     	ds	1
   161   000505                     ??_LCD_INIT:
   162   000505                     ??_ESCRIBE_MENSAJE2:
   163   000505                     POS_CURSOR@fila:
   164                           	callstack 0
   165                           
   166                           ; 1 bytes @ 0x4
   167   000505                     	ds	1
   168   000506                     ESCRIBE_MENSAJE2@tam:
   169                           	callstack 0
   170                           
   171                           ; 1 bytes @ 0x5
   172   000506                     	ds	1
   173   000507                     ESCRIBE_MENSAJE2@i:
   174                           	callstack 0
   175                           
   176                           ; 1 bytes @ 0x6
   177   000507                     	ds	1
   178   000508                     
   179                           ; 1 bytes @ 0x7
   180 ;;
   181 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   182 ;;
   183 ;; *************** function _main *****************
   184 ;; Defined at:
   185 ;;		line 22 in file "maincode01.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;		None
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   194 ;; Tracked objects:
   195 ;;		On entry : 0/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   203 ;;Total ram usage:        0 bytes
   204 ;; Hardware stack levels required when called: 5
   205 ;; This function calls:
   206 ;;		_ESCRIBE_MENSAJE2
   207 ;;		_POS_CURSOR
   208 ;;		_configuro
   209 ;; This function is called by:
   210 ;;		Startup code after reset
   211 ;; This function uses a non-reentrant model
   212 ;;
   213                           
   214                           	psect	text0
   215   002780                     __ptext0:
   216                           	callstack 0
   217   002780                     _main:
   218                           	callstack 122
   219   002780                     
   220                           ;maincode01.c: 23:     configuro();
   221   002780  ECFE  F013         	call	_configuro	;wreg free
   222                           
   223                           ;maincode01.c: 24:     POS_CURSOR(1,0);
   224   002784  0E00               	movlw	0
   225   002786  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   226   002788  0E01               	movlw	1
   227   00278A  EC8F  F012         	call	_POS_CURSOR
   228   00278E                     
   229                           ;maincode01.c: 25:     ESCRIBE_MENSAJE2("Hola mundo");
   230   00278E  0E12               	movlw	low STR_1
   231   002790  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   232   002792  EC2F  F013         	call	_ESCRIBE_MENSAJE2	;wreg free
   233   002796                     
   234                           ;maincode01.c: 26:     POS_CURSOR(2,0);
   235   002796  0E00               	movlw	0
   236   002798  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   237   00279A  0E02               	movlw	2
   238   00279C  EC8F  F012         	call	_POS_CURSOR
   239                           
   240                           ;maincode01.c: 27:     ESCRIBE_MENSAJE2("Ing. Elec-Mecatr");
   241   0027A0  0E01               	movlw	low STR_2
   242   0027A2  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   243   0027A4  EC2F  F013         	call	_ESCRIBE_MENSAJE2	;wreg free
   244   0027A8                     l20:
   245   0027A8  EFD4  F013         	goto	l20
   246   0027AC  EFFE  F0FF         	goto	start
   247   0027B0                     __end_of_main:
   248                           	callstack 0
   249                           
   250 ;; *************** function _configuro *****************
   251 ;; Defined at:
   252 ;;		line 14 in file "maincode01.c"
   253 ;; Parameters:    Size  Location     Type
   254 ;;		None
   255 ;; Auto vars:     Size  Location     Type
   256 ;;		None
   257 ;; Return value:  Size  Location     Type
   258 ;;                  1    wreg      void 
   259 ;; Registers used:
   260 ;;		wreg, status,2, status,0, cstack
   261 ;; Tracked objects:
   262 ;;		On entry : 0/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   270 ;;Total ram usage:        0 bytes
   271 ;; Hardware stack levels used: 1
   272 ;; Hardware stack levels required when called: 4
   273 ;; This function calls:
   274 ;;		_LCD_INIT
   275 ;; This function is called by:
   276 ;;		_main
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280                           	psect	text1
   281   0027FC                     __ptext1:
   282                           	callstack 0
   283   0027FC                     _configuro:
   284                           	callstack 122
   285   0027FC                     
   286                           ;maincode01.c: 16:     OSCCON1 = 0x60;
   287   0027FC  0E60               	movlw	96
   288   0027FE  0100               	movlb	0	; () banked
   289   002800  6FAD               	movwf	173,b	;volatile
   290                           
   291                           ;maincode01.c: 17:     OSCFRQ = 0x06;
   292   002802  0E06               	movlw	6
   293   002804  6FB1               	movwf	177,b	;volatile
   294                           
   295                           ;maincode01.c: 18:     OSCEN = 0x40;
   296   002806  0E40               	movlw	64
   297   002808  6FB3               	movwf	179,b	;volatile
   298   00280A                     
   299                           ; BSR set to: 0
   300                           ;maincode01.c: 19:     LCD_INIT();
   301   00280A  EC51  F013         	call	_LCD_INIT	;wreg free
   302   00280E  0012               	return		;funcret
   303   002810                     __end_of_configuro:
   304                           	callstack 0
   305                           
   306 ;; *************** function _LCD_INIT *****************
   307 ;; Defined at:
   308 ;;		line 192 in file "LCD.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, status,2, status,0, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   326 ;;Total ram usage:        1 bytes
   327 ;; Hardware stack levels used: 1
   328 ;; Hardware stack levels required when called: 3
   329 ;; This function calls:
   330 ;;		_BORRAR_LCD
   331 ;;		_CURSOR_HOME
   332 ;;		_CURSOR_ONOFF
   333 ;;		_LCD_CONFIG
   334 ;; This function is called by:
   335 ;;		_configuro
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           	psect	text2
   340   0026A2                     __ptext2:
   341                           	callstack 0
   342   0026A2                     _LCD_INIT:
   343                           	callstack 122
   344   0026A2                     
   345                           ;LCD.c: 193:     TRISD = 0x00;
   346   0026A2  0E00               	movlw	0
   347   0026A4  6EC9               	movwf	201,c	;volatile
   348                           
   349                           ;LCD.c: 194:     ANSELD = 0x00;
   350   0026A6  0E00               	movlw	0
   351   0026A8  0104               	movlb	4	; () banked
   352   0026AA  6F18               	movwf	24,b	;volatile
   353   0026AC                     
   354                           ; BSR set to: 4
   355                           ;LCD.c: 195:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
   356   0026AC  0E9C               	movlw	156
   357   0026AE  6E05               	movwf	??_LCD_INIT^(0+1280),c
   358   0026B0  0ED7               	movlw	215
   359   0026B2                     u257:
   360   0026B2  2EE8               	decfsz	wreg,f,c
   361   0026B4  D7FE               	bra	u257
   362   0026B6  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   363   0026B8  D7FC               	bra	u257
   364   0026BA  0000               	nop	
   365   0026BC                     
   366                           ;LCD.c: 196:     LCD_CONFIG();
   367   0026BC  EC05  F013         	call	_LCD_CONFIG	;wreg free
   368   0026C0                     
   369                           ;LCD.c: 197:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
   370   0026C0  0E9C               	movlw	156
   371   0026C2  6E05               	movwf	??_LCD_INIT^(0+1280),c
   372   0026C4  0ED7               	movlw	215
   373   0026C6                     u267:
   374   0026C6  2EE8               	decfsz	wreg,f,c
   375   0026C8  D7FE               	bra	u267
   376   0026CA  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   377   0026CC  D7FC               	bra	u267
   378   0026CE  0000               	nop	
   379   0026D0                     
   380                           ;LCD.c: 198:     BORRAR_LCD();
   381   0026D0  EC0C  F014         	call	_BORRAR_LCD	;wreg free
   382   0026D4                     
   383                           ;LCD.c: 199:     CURSOR_HOME();
   384   0026D4  EC08  F014         	call	_CURSOR_HOME	;wreg free
   385   0026D8                     
   386                           ;LCD.c: 200:     CURSOR_ONOFF(1);
   387   0026D8  0E01               	movlw	1
   388   0026DA  ECD8  F013         	call	_CURSOR_ONOFF
   389   0026DE  0012               	return		;funcret
   390   0026E0                     __end_of_LCD_INIT:
   391                           	callstack 0
   392                           
   393 ;; *************** function _LCD_CONFIG *****************
   394 ;; Defined at:
   395 ;;		line 109 in file "LCD.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg, status,2, status,0, cstack
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   412 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   413 ;;Total ram usage:        1 bytes
   414 ;; Hardware stack levels used: 1
   415 ;; Hardware stack levels required when called: 2
   416 ;; This function calls:
   417 ;;		_ENVIA_LCD_CMD
   418 ;;		_ENVIA_NIBBLE
   419 ;; This function is called by:
   420 ;;		_LCD_INIT
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           	psect	text3
   425   00260A                     __ptext3:
   426                           	callstack 0
   427   00260A                     _LCD_CONFIG:
   428                           	callstack 122
   429   00260A                     
   430                           ;LCD.c: 111:  LATDbits.LATD0 = 0;
   431   00260A  90C1               	bcf	193,0,c	;volatile
   432                           
   433                           ;LCD.c: 112:  LATDbits.LATD1 = 0;
   434   00260C  92C1               	bcf	193,1,c	;volatile
   435   00260E                     
   436                           ;LCD.c: 113:  ENVIA_NIBBLE(0x30);
   437   00260E  0E30               	movlw	48
   438   002610  ECF0  F013         	call	_ENVIA_NIBBLE
   439   002614                     
   440                           ;LCD.c: 114:     _delay((unsigned long)((2)*(32000000UL/4000.0)));
   441   002614  0E15               	movlw	21
   442   002616  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   443   002618  0EC6               	movlw	198
   444   00261A                     u277:
   445   00261A  2EE8               	decfsz	wreg,f,c
   446   00261C  D7FE               	bra	u277
   447   00261E  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   448   002620  D7FC               	bra	u277
   449   002622  D000               	nop2	
   450   002624                     
   451                           ;LCD.c: 115:  ENVIA_NIBBLE(0x30);
   452   002624  0E30               	movlw	48
   453   002626  ECF0  F013         	call	_ENVIA_NIBBLE
   454                           
   455                           ;LCD.c: 116:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
   456   00262A  0EA0               	movlw	160
   457   00262C                     u287:
   458   00262C  D000               	nop2	
   459   00262E  2EE8               	decfsz	wreg,f,c
   460   002630  D7FD               	bra	u287
   461   002632                     
   462                           ;LCD.c: 117:     ENVIA_NIBBLE(0x30);
   463   002632  0E30               	movlw	48
   464   002634  ECF0  F013         	call	_ENVIA_NIBBLE
   465   002638                     
   466                           ;LCD.c: 118:  ENVIA_NIBBLE(0x20);
   467   002638  0E20               	movlw	32
   468   00263A  ECF0  F013         	call	_ENVIA_NIBBLE
   469   00263E                     
   470                           ;LCD.c: 119:  ENVIA_LCD_CMD(0x01);
   471   00263E  0E01               	movlw	1
   472   002640  EC8C  F013         	call	_ENVIA_LCD_CMD
   473   002644                     
   474                           ;LCD.c: 120:  ENVIA_LCD_CMD(0x28);
   475   002644  0E28               	movlw	40
   476   002646  EC8C  F013         	call	_ENVIA_LCD_CMD
   477   00264A                     
   478                           ;LCD.c: 121:  ENVIA_LCD_CMD(0x0F);
   479   00264A  0E0F               	movlw	15
   480   00264C  EC8C  F013         	call	_ENVIA_LCD_CMD
   481   002650                     
   482                           ;LCD.c: 122:  ENVIA_LCD_CMD(0x06);
   483   002650  0E06               	movlw	6
   484   002652  EC8C  F013         	call	_ENVIA_LCD_CMD
   485   002656                     
   486                           ;LCD.c: 123:  ENVIA_LCD_CMD(0x01);
   487   002656  0E01               	movlw	1
   488   002658  EC8C  F013         	call	_ENVIA_LCD_CMD
   489   00265C  0012               	return		;funcret
   490   00265E                     __end_of_LCD_CONFIG:
   491                           	callstack 0
   492                           
   493 ;; *************** function _CURSOR_ONOFF *****************
   494 ;; Defined at:
   495 ;;		line 62 in file "LCD.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;  estado          1    wreg     unsigned char 
   498 ;; Auto vars:     Size  Location     Type
   499 ;;  estado          1    3[COMRAM] unsigned char 
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   512 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   513 ;;Total ram usage:        1 bytes
   514 ;; Hardware stack levels used: 1
   515 ;; Hardware stack levels required when called: 2
   516 ;; This function calls:
   517 ;;		_ENVIA_LCD_CMD
   518 ;; This function is called by:
   519 ;;		_LCD_INIT
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text4
   524   0027B0                     __ptext4:
   525                           	callstack 0
   526   0027B0                     _CURSOR_ONOFF:
   527                           	callstack 122
   528                           
   529                           ;incstack = 0
   530                           ;CURSOR_ONOFF@estado stored from wreg
   531   0027B0  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   532   0027B2                     
   533                           ;LCD.c: 62: void CURSOR_ONOFF(unsigned char estado);LCD.c: 63: {;LCD.c: 64:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   534   0027B2  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   535   0027B4  A4D8               	btfss	status,2,c
   536   0027B6  EFDF  F013         	goto	u21
   537   0027BA  EFE1  F013         	goto	u20
   538   0027BE                     u21:
   539   0027BE  EFE4  F013         	goto	l910
   540   0027C2                     u20:
   541   0027C2  0E0E               	movlw	14
   542   0027C4  EC8C  F013         	call	_ENVIA_LCD_CMD
   543   0027C8                     l910:
   544                           
   545                           ;LCD.c: 65:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   546   0027C8  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   547   0027CA  A4D8               	btfss	status,2,c
   548   0027CC  EFEA  F013         	goto	u31
   549   0027D0  EFEC  F013         	goto	u30
   550   0027D4                     u31:
   551   0027D4  EFEF  F013         	goto	l85
   552   0027D8                     u30:
   553   0027D8  0E0C               	movlw	12
   554   0027DA  EC8C  F013         	call	_ENVIA_LCD_CMD
   555   0027DE                     l85:
   556   0027DE  0012               	return		;funcret
   557   0027E0                     __end_of_CURSOR_ONOFF:
   558                           	callstack 0
   559                           
   560 ;; *************** function _CURSOR_HOME *****************
   561 ;; Defined at:
   562 ;;		line 37 in file "LCD.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   580 ;;Total ram usage:        0 bytes
   581 ;; Hardware stack levels used: 1
   582 ;; Hardware stack levels required when called: 2
   583 ;; This function calls:
   584 ;;		_ENVIA_LCD_CMD
   585 ;; This function is called by:
   586 ;;		_LCD_INIT
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           	psect	text5
   591   002810                     __ptext5:
   592                           	callstack 0
   593   002810                     _CURSOR_HOME:
   594                           	callstack 122
   595   002810                     
   596                           ;LCD.c: 39:  ENVIA_LCD_CMD(0x02);
   597   002810  0E02               	movlw	2
   598   002812  EC8C  F013         	call	_ENVIA_LCD_CMD
   599   002816  0012               	return		;funcret
   600   002818                     __end_of_CURSOR_HOME:
   601                           	callstack 0
   602                           
   603 ;; *************** function _BORRAR_LCD *****************
   604 ;; Defined at:
   605 ;;		line 104 in file "LCD.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; Hardware stack levels required when called: 2
   626 ;; This function calls:
   627 ;;		_ENVIA_LCD_CMD
   628 ;; This function is called by:
   629 ;;		_LCD_INIT
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text6
   634   002818                     __ptext6:
   635                           	callstack 0
   636   002818                     _BORRAR_LCD:
   637                           	callstack 122
   638   002818                     
   639                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x01);
   640   002818  0E01               	movlw	1
   641   00281A  EC8C  F013         	call	_ENVIA_LCD_CMD
   642   00281E  0012               	return		;funcret
   643   002820                     __end_of_BORRAR_LCD:
   644                           	callstack 0
   645                           
   646 ;; *************** function _POS_CURSOR *****************
   647 ;; Defined at:
   648 ;;		line 5 in file "LCD.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  fila            1    wreg     unsigned char 
   651 ;;  columna         1    3[COMRAM] unsigned char 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  fila            1    4[COMRAM] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   663 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   667 ;;Total ram usage:        2 bytes
   668 ;; Hardware stack levels used: 1
   669 ;; Hardware stack levels required when called: 2
   670 ;; This function calls:
   671 ;;		_ENVIA_LCD_CMD
   672 ;; This function is called by:
   673 ;;		_main
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text7
   678   00251E                     __ptext7:
   679                           	callstack 0
   680   00251E                     _POS_CURSOR:
   681                           	callstack 124
   682                           
   683                           ;incstack = 0
   684                           ;POS_CURSOR@fila stored from wreg
   685   00251E  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
   686   002520                     
   687                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
   688   002520  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
   689   002522  A4D8               	btfss	status,2,c
   690   002524  EF96  F012         	goto	u201
   691   002528  EF98  F012         	goto	u200
   692   00252C                     u201:
   693   00252C  EF9E  F012         	goto	l1130
   694   002530                     u200:
   695   002530                     
   696                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
   697   002530  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   698   002532  0F80               	addlw	128
   699   002534  EC8C  F013         	call	_ENVIA_LCD_CMD
   700                           
   701                           ;LCD.c: 10:  }
   702   002538  EFCB  F012         	goto	l55
   703   00253C                     l1130:
   704   00253C  0E02               	movlw	2
   705   00253E  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   706   002540  A4D8               	btfss	status,2,c
   707   002542  EFA5  F012         	goto	u211
   708   002546  EFA7  F012         	goto	u210
   709   00254A                     u211:
   710   00254A  EFAD  F012         	goto	l1134
   711   00254E                     u210:
   712   00254E                     
   713                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
   714   00254E  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   715   002550  0FC0               	addlw	192
   716   002552  EC8C  F013         	call	_ENVIA_LCD_CMD
   717                           
   718                           ;LCD.c: 14:  }
   719   002556  EFCB  F012         	goto	l55
   720   00255A                     l1134:
   721   00255A  0E03               	movlw	3
   722   00255C  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   723   00255E  A4D8               	btfss	status,2,c
   724   002560  EFB4  F012         	goto	u221
   725   002564  EFB6  F012         	goto	u220
   726   002568                     u221:
   727   002568  EFBC  F012         	goto	l1138
   728   00256C                     u220:
   729   00256C                     
   730                           ;LCD.c: 16:  {;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
   731   00256C  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   732   00256E  0F94               	addlw	148
   733   002570  EC8C  F013         	call	_ENVIA_LCD_CMD
   734                           
   735                           ;LCD.c: 18:  }
   736   002574  EFCB  F012         	goto	l55
   737   002578                     l1138:
   738   002578  0E04               	movlw	4
   739   00257A  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   740   00257C  A4D8               	btfss	status,2,c
   741   00257E  EFC3  F012         	goto	u231
   742   002582  EFC5  F012         	goto	u230
   743   002586                     u231:
   744   002586  EFCB  F012         	goto	l51
   745   00258A                     u230:
   746   00258A                     
   747                           ;LCD.c: 20:  {;LCD.c: 21:   ENVIA_LCD_CMD(0xD4+columna);
   748   00258A  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   749   00258C  0FD4               	addlw	212
   750   00258E  EC8C  F013         	call	_ENVIA_LCD_CMD
   751   002592  EFCB  F012         	goto	l55
   752   002596                     l51:
   753   002596                     l55:
   754   002596  0012               	return		;funcret
   755   002598                     __end_of_POS_CURSOR:
   756                           	callstack 0
   757                           
   758 ;; *************** function _ENVIA_LCD_CMD *****************
   759 ;; Defined at:
   760 ;;		line 136 in file "LCD.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  dato            1    wreg     unsigned char 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  dato            1    1[COMRAM] unsigned char 
   765 ;;  aux             1    2[COMRAM] unsigned char 
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, status,2, status,0, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   778 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   779 ;;Total ram usage:        2 bytes
   780 ;; Hardware stack levels used: 1
   781 ;; Hardware stack levels required when called: 1
   782 ;; This function calls:
   783 ;;		_ENVIA_NIBBLE
   784 ;;		_LEER_LCD
   785 ;; This function is called by:
   786 ;;		_POS_CURSOR
   787 ;;		_CURSOR_HOME
   788 ;;		_CURSOR_ONOFF
   789 ;;		_BORRAR_LCD
   790 ;;		_LCD_CONFIG
   791 ;;		_BLINK_CURSOR
   792 ;;		_DISPLAY_ONOFF
   793 ;;		_CURSOR_SHIFTLEFT
   794 ;;		_CURSOR_SHIFTRIGHT
   795 ;;		_DISPLAY_SHIFTLEFT
   796 ;;		_DISPLAY_SHIFTRIGHT
   797 ;;		_GENERACARACTER
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text8
   802   002718                     __ptext8:
   803                           	callstack 0
   804   002718                     _ENVIA_LCD_CMD:
   805                           	callstack 122
   806                           
   807                           ;incstack = 0
   808                           ;ENVIA_LCD_CMD@dato stored from wreg
   809   002718  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
   810   00271A                     
   811                           ;LCD.c: 136: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 137: {;LCD.c: 138:  unsigned 
      +                          char aux;;LCD.c: 139:  LATDbits.LATD0 = 0;
   812   00271A  90C1               	bcf	193,0,c	;volatile
   813   00271C                     
   814                           ;LCD.c: 140:  LEER_LCD();
   815   00271C  ECCC  F012         	call	_LEER_LCD	;wreg free
   816   002720                     
   817                           ;LCD.c: 141:  TRISD = 0b00000000;
   818   002720  0E00               	movlw	0
   819   002722  6EC9               	movwf	201,c	;volatile
   820   002724                     
   821                           ;LCD.c: 142:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
   822   002724  0EA0               	movlw	160
   823   002726                     u297:
   824   002726  D000               	nop2	
   825   002728  2EE8               	decfsz	wreg,f,c
   826   00272A  D7FD               	bra	u297
   827   00272C                     
   828                           ;LCD.c: 143:     LATDbits.LATD1 = 0;
   829   00272C  92C1               	bcf	193,1,c	;volatile
   830   00272E                     
   831                           ;LCD.c: 144:  LATDbits.LATD2 = 0;
   832   00272E  94C1               	bcf	193,2,c	;volatile
   833   002730                     
   834                           ;LCD.c: 145:  LATDbits.LATD0 = 0;
   835   002730  90C1               	bcf	193,0,c	;volatile
   836   002732                     
   837                           ;LCD.c: 146:  aux = dato & 0xF0;
   838   002732  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   839   002734  0BF0               	andlw	240
   840   002736  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   841   002738                     
   842                           ;LCD.c: 147:  ENVIA_NIBBLE(aux);
   843   002738  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   844   00273A  ECF0  F013         	call	_ENVIA_NIBBLE
   845   00273E                     
   846                           ;LCD.c: 148:  aux = dato<<4;
   847   00273E  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   848   002740  0BF0               	andlw	240
   849   002742  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   850   002744                     
   851                           ;LCD.c: 149:  ENVIA_NIBBLE(aux);
   852   002744  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   853   002746  ECF0  F013         	call	_ENVIA_NIBBLE
   854   00274A  0012               	return		;funcret
   855   00274C                     __end_of_ENVIA_LCD_CMD:
   856                           	callstack 0
   857                           
   858 ;; *************** function _ESCRIBE_MENSAJE2 *****************
   859 ;; Defined at:
   860 ;;		line 77 in file "LCD.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
   863 ;;		 -> STR_2(17), STR_1(11), 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  i               1    6[COMRAM] unsigned char 
   866 ;;  tam             1    5[COMRAM] unsigned char 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   876 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   877 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   878 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   879 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   880 ;;Total ram usage:        4 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; Hardware stack levels required when called: 2
   883 ;; This function calls:
   884 ;;		_ENVIA_CHAR
   885 ;;		_strlen
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text9
   892   00265E                     __ptext9:
   893                           	callstack 0
   894   00265E                     _ESCRIBE_MENSAJE2:
   895                           	callstack 124
   896   00265E                     
   897                           ;LCD.c: 77: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 78: {;LCD.c: 79:     unsign
      +                          ed char tam;;LCD.c: 80:     tam = strlen(cadena);
   898   00265E  C504  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
   899   002662  EC70  F013         	call	_strlen	;wreg free
   900   002666  5001               	movf	?_strlen^(0+1280),w,c
   901   002668  6E06               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
   902   00266A                     
   903                           ;LCD.c: 82:  for(i = 0; i<tam; i++)
   904   00266A  0E00               	movlw	0
   905   00266C  6E07               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
   906   00266E  EF47  F013         	goto	l1152
   907   002672                     l1148:
   908                           
   909                           ;LCD.c: 83:  {;LCD.c: 84:   ENVIA_CHAR(cadena[i]);
   910   002672  5004               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
   911   002674  2407               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
   912   002676  6E05               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
   913   002678  C505  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
   914   00267C                     	if	1	;There is more than 1 active tblptr byte
   915   00267C  0E25               	movlw	high __smallconst
   916   00267E  6EF7               	movwf	tblptrh,c
   917   002680                     	endif
   918   002680                     	if	0	;tblptru may be non-zero
   919   002680                     	endif
   920   002680                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   921   002680  0E00               	movlw	low (__smallconst shr (0+16))
   922   002682  6EF8               	movwf	tblptru,c
   923   002684                     	endif
   924   002684  0008               	tblrd		*
   925   002686  50F5               	movf	tablat,w,c
   926   002688  ECA6  F013         	call	_ENVIA_CHAR
   927   00268C                     
   928                           ;LCD.c: 85:  }
   929   00268C  2A07               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
   930   00268E                     l1152:
   931   00268E  5006               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
   932   002690  5C07               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
   933   002692  A0D8               	btfss	status,0,c
   934   002694  EF4E  F013         	goto	u241
   935   002698  EF50  F013         	goto	u240
   936   00269C                     u241:
   937   00269C  EF39  F013         	goto	l1148
   938   0026A0                     u240:
   939   0026A0  0012               	return		;funcret
   940   0026A2                     __end_of_ESCRIBE_MENSAJE2:
   941                           	callstack 0
   942                           
   943 ;; *************** function _strlen *****************
   944 ;; Defined at:
   945 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  s               1    0[COMRAM] PTR const unsigned char 
   948 ;;		 -> STR_2(17), STR_1(11), 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  a               1    2[COMRAM] PTR const unsigned char 
   951 ;;		 -> STR_2(17), STR_1(11), 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  2    0[COMRAM] unsigned int 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   962 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   964 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   965 ;;Total ram usage:        3 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_ESCRIBE_MENSAJE2
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text10
   975   0026E0                     __ptext10:
   976                           	callstack 0
   977   0026E0                     _strlen:
   978                           	callstack 125
   979   0026E0  C501  F503         	movff	strlen@s,strlen@a
   980   0026E4  EF75  F013         	goto	l1120
   981   0026E8                     l1118:
   982   0026E8  2A01               	incf	strlen@s^(0+1280),f,c
   983   0026EA                     l1120:
   984   0026EA  C501  F4F6         	movff	strlen@s,tblptrl
   985   0026EE                     	if	1	;There is more than 1 active tblptr byte
   986   0026EE  0E25               	movlw	high __smallconst
   987   0026F0  6EF7               	movwf	tblptrh,c
   988   0026F2                     	endif
   989   0026F2                     	if	0	;tblptru may be non-zero
   990   0026F2                     	endif
   991   0026F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   992   0026F2  0E00               	movlw	low (__smallconst shr (0+16))
   993   0026F4  6EF8               	movwf	tblptru,c
   994   0026F6                     	endif
   995   0026F6  0008               	tblrd		*
   996   0026F8  50F5               	movf	tablat,w,c
   997   0026FA  0900               	iorlw	0
   998   0026FC  A4D8               	btfss	status,2,c
   999   0026FE  EF83  F013         	goto	u191
  1000   002702  EF85  F013         	goto	u190
  1001   002706                     u191:
  1002   002706  EF74  F013         	goto	l1118
  1003   00270A                     u190:
  1004   00270A  5003               	movf	strlen@a^(0+1280),w,c
  1005   00270C  5C01               	subwf	strlen@s^(0+1280),w,c
  1006   00270E  6E01               	movwf	?_strlen^(0+1280),c
  1007   002710  6A02               	clrf	(?_strlen+1)^(0+1280),c
  1008   002712  BE01               	btfsc	?_strlen^(0+1280),7,c
  1009   002714  0602               	decf	(?_strlen+1)^(0+1280),f,c
  1010   002716  0012               	return		;funcret
  1011   002718                     __end_of_strlen:
  1012                           	callstack 0
  1013                           
  1014 ;; *************** function _ENVIA_CHAR *****************
  1015 ;; Defined at:
  1016 ;;		line 88 in file "LCD.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  dato            1    wreg     unsigned char 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  dato            1    1[COMRAM] unsigned char 
  1021 ;;  aux             1    2[COMRAM] unsigned char 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1032 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1034 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1035 ;;Total ram usage:        2 bytes
  1036 ;; Hardware stack levels used: 1
  1037 ;; Hardware stack levels required when called: 1
  1038 ;; This function calls:
  1039 ;;		_ENVIA_NIBBLE
  1040 ;;		_LEER_LCD
  1041 ;; This function is called by:
  1042 ;;		_ESCRIBE_MENSAJE2
  1043 ;;		_ESCRIBE_MENSAJE
  1044 ;;		_GENERACARACTER
  1045 ;;		_LCD_ESCRIBE_VAR_CHAR
  1046 ;;		_LCD_ESCRIBE_VAR_INT
  1047 ;;		_LCD_CHAR_GRADO
  1048 ;;		_LCD_VARCHAR_BITS
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text11
  1053   00274C                     __ptext11:
  1054                           	callstack 0
  1055   00274C                     _ENVIA_CHAR:
  1056                           	callstack 124
  1057                           
  1058                           ;incstack = 0
  1059                           ;ENVIA_CHAR@dato stored from wreg
  1060   00274C  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1061   00274E                     
  1062                           ;LCD.c: 88: void ENVIA_CHAR(unsigned char dato);LCD.c: 89: {;LCD.c: 90:  unsigned char a
      +                          ux;;LCD.c: 91:  LATDbits.LATD0 = 1;
  1063   00274E  80C1               	bsf	193,0,c	;volatile
  1064   002750                     
  1065                           ;LCD.c: 92:  LEER_LCD();
  1066   002750  ECCC  F012         	call	_LEER_LCD	;wreg free
  1067   002754                     
  1068                           ;LCD.c: 93:  TRISD = 0x00;
  1069   002754  0E00               	movlw	0
  1070   002756  6EC9               	movwf	201,c	;volatile
  1071   002758                     
  1072                           ;LCD.c: 94:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1073   002758  0EA0               	movlw	160
  1074   00275A                     u307:
  1075   00275A  D000               	nop2	
  1076   00275C  2EE8               	decfsz	wreg,f,c
  1077   00275E  D7FD               	bra	u307
  1078   002760                     
  1079                           ;LCD.c: 95:  LATDbits.LATD1 = 0;
  1080   002760  92C1               	bcf	193,1,c	;volatile
  1081   002762                     
  1082                           ;LCD.c: 96:  LATDbits.LATD2 = 0;
  1083   002762  94C1               	bcf	193,2,c	;volatile
  1084   002764                     
  1085                           ;LCD.c: 97:  LATDbits.LATD0 = 1;
  1086   002764  80C1               	bsf	193,0,c	;volatile
  1087   002766                     
  1088                           ;LCD.c: 98:  aux = dato & 0xF0;
  1089   002766  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1090   002768  0BF0               	andlw	240
  1091   00276A  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1092   00276C                     
  1093                           ;LCD.c: 99:  ENVIA_NIBBLE(aux);
  1094   00276C  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1095   00276E  ECF0  F013         	call	_ENVIA_NIBBLE
  1096   002772                     
  1097                           ;LCD.c: 100:  aux = dato << 4;
  1098   002772  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1099   002774  0BF0               	andlw	240
  1100   002776  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1101   002778                     
  1102                           ;LCD.c: 101:  ENVIA_NIBBLE(aux);
  1103   002778  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1104   00277A  ECF0  F013         	call	_ENVIA_NIBBLE
  1105   00277E  0012               	return		;funcret
  1106   002780                     __end_of_ENVIA_CHAR:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function _LEER_LCD *****************
  1110 ;; Defined at:
  1111 ;;		line 152 in file "LCD.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  aux             1    0[COMRAM] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1128 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1129 ;;Total ram usage:        1 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_ENVIA_CHAR
  1135 ;;		_ENVIA_LCD_CMD
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text12
  1140   002598                     __ptext12:
  1141                           	callstack 0
  1142   002598                     _LEER_LCD:
  1143                           	callstack 122
  1144   002598                     
  1145                           ;LCD.c: 154:  unsigned char aux;;LCD.c: 155:  TRISD = 0xF8;
  1146   002598  0EF8               	movlw	248
  1147   00259A  6EC9               	movwf	201,c	;volatile
  1148   00259C                     
  1149                           ;LCD.c: 156:  LATDbits.LATD0 = 0;
  1150   00259C  90C1               	bcf	193,0,c	;volatile
  1151   00259E                     
  1152                           ;LCD.c: 157:  LATDbits.LATD1 = 1;
  1153   00259E  82C1               	bsf	193,1,c	;volatile
  1154   0025A0                     
  1155                           ;LCD.c: 158:  LATDbits.LATD2 = 1;
  1156   0025A0  84C1               	bsf	193,2,c	;volatile
  1157   0025A2                     
  1158                           ;LCD.c: 159:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1159   0025A2  0EA0               	movlw	160
  1160   0025A4                     u317:
  1161   0025A4  D000               	nop2	
  1162   0025A6  2EE8               	decfsz	wreg,f,c
  1163   0025A8  D7FD               	bra	u317
  1164   0025AA                     
  1165                           ;LCD.c: 160:  aux = PORTD;
  1166   0025AA  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1167   0025AE                     
  1168                           ;LCD.c: 161:  LATDbits.LATD2 = 0;
  1169   0025AE  94C1               	bcf	193,2,c	;volatile
  1170   0025B0                     
  1171                           ;LCD.c: 162:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1172   0025B0  0EA0               	movlw	160
  1173   0025B2                     u327:
  1174   0025B2  D000               	nop2	
  1175   0025B4  2EE8               	decfsz	wreg,f,c
  1176   0025B6  D7FD               	bra	u327
  1177   0025B8                     
  1178                           ;LCD.c: 163:  LATDbits.LATD2 = 1;
  1179   0025B8  84C1               	bsf	193,2,c	;volatile
  1180   0025BA                     
  1181                           ;LCD.c: 164:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1182   0025BA  0EA0               	movlw	160
  1183   0025BC                     u337:
  1184   0025BC  D000               	nop2	
  1185   0025BE  2EE8               	decfsz	wreg,f,c
  1186   0025C0  D7FD               	bra	u337
  1187   0025C2                     
  1188                           ;LCD.c: 165:  LATDbits.LATD2 = 0;
  1189   0025C2  94C1               	bcf	193,2,c	;volatile
  1190   0025C4                     l858:
  1191                           
  1192                           ;LCD.c: 166:  aux = aux & 0x80;
  1193   0025C4  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1194   0025C6  0B80               	andlw	128
  1195   0025C8  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1196                           
  1197                           ;LCD.c: 167:  while(aux == 0x80)
  1198   0025CA  EFFB  F012         	goto	l872
  1199   0025CE                     l116:
  1200                           
  1201                           ;LCD.c: 168:         {;LCD.c: 169:             LATDbits.LATD2 = 1;
  1202   0025CE  84C1               	bsf	193,2,c	;volatile
  1203   0025D0                     
  1204                           ;LCD.c: 170:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1205   0025D0  0EA0               	movlw	160
  1206   0025D2                     u347:
  1207   0025D2  D000               	nop2	
  1208   0025D4  2EE8               	decfsz	wreg,f,c
  1209   0025D6  D7FD               	bra	u347
  1210   0025D8                     
  1211                           ;LCD.c: 171:             aux = PORTD;
  1212   0025D8  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1213   0025DC                     
  1214                           ;LCD.c: 172:             LATDbits.LATD2 = 0;
  1215   0025DC  94C1               	bcf	193,2,c	;volatile
  1216                           
  1217                           ;LCD.c: 173:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1218   0025DE  0EA0               	movlw	160
  1219   0025E0                     u357:
  1220   0025E0  D000               	nop2	
  1221   0025E2  2EE8               	decfsz	wreg,f,c
  1222   0025E4  D7FD               	bra	u357
  1223   0025E6                     
  1224                           ;LCD.c: 174:             LATDbits.LATD2 = 1;
  1225   0025E6  84C1               	bsf	193,2,c	;volatile
  1226                           
  1227                           ;LCD.c: 175:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1228   0025E8  0EA0               	movlw	160
  1229   0025EA                     u367:
  1230   0025EA  D000               	nop2	
  1231   0025EC  2EE8               	decfsz	wreg,f,c
  1232   0025EE  D7FD               	bra	u367
  1233   0025F0                     
  1234                           ;LCD.c: 176:             LATDbits.LATD2 = 0;
  1235   0025F0  94C1               	bcf	193,2,c	;volatile
  1236   0025F2  EFE2  F012         	goto	l858
  1237   0025F6                     l872:
  1238                           
  1239                           ;LCD.c: 167:  while(aux == 0x80)
  1240   0025F6  0E80               	movlw	128
  1241   0025F8  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1242   0025FA  B4D8               	btfsc	status,2,c
  1243   0025FC  EF02  F013         	goto	u11
  1244   002600  EF04  F013         	goto	u10
  1245   002604                     u11:
  1246   002604  EFE7  F012         	goto	l116
  1247   002608                     u10:
  1248   002608  0012               	return		;funcret
  1249   00260A                     __end_of_LEER_LCD:
  1250                           	callstack 0
  1251                           
  1252 ;; *************** function _ENVIA_NIBBLE *****************
  1253 ;; Defined at:
  1254 ;;		line 126 in file "LCD.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  dato            1    wreg     unsigned char 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  dato            1    0[COMRAM] unsigned char 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, status,2, status,0
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1272 ;;Total ram usage:        1 bytes
  1273 ;; Hardware stack levels used: 1
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_ENVIA_CHAR
  1278 ;;		_LCD_CONFIG
  1279 ;;		_ENVIA_LCD_CMD
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text13
  1284   0027E0                     __ptext13:
  1285                           	callstack 0
  1286   0027E0                     _ENVIA_NIBBLE:
  1287                           	callstack 123
  1288                           
  1289                           ;incstack = 0
  1290                           ;ENVIA_NIBBLE@dato stored from wreg
  1291   0027E0  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1292   0027E2                     
  1293                           ;LCD.c: 126: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 127: {;LCD.c: 128:  LATD &= 0x
      +                          0F;
  1294   0027E2  0E0F               	movlw	15
  1295   0027E4  16C1               	andwf	193,f,c	;volatile
  1296                           
  1297                           ;LCD.c: 129:  dato &= 0xF0;
  1298   0027E6  0EF0               	movlw	240
  1299   0027E8  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1300                           
  1301                           ;LCD.c: 130:  LATD|= dato;
  1302   0027EA  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1303   0027EC  12C1               	iorwf	193,f,c	;volatile
  1304   0027EE                     
  1305                           ;LCD.c: 131:  LATDbits.LATD2 = 1;
  1306   0027EE  84C1               	bsf	193,2,c	;volatile
  1307   0027F0                     
  1308                           ;LCD.c: 132:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1309   0027F0  0EA0               	movlw	160
  1310   0027F2                     u377:
  1311   0027F2  D000               	nop2	
  1312   0027F4  2EE8               	decfsz	wreg,f,c
  1313   0027F6  D7FD               	bra	u377
  1314   0027F8                     
  1315                           ;LCD.c: 133:  LATDbits.LATD2 = 0;
  1316   0027F8  94C1               	bcf	193,2,c	;volatile
  1317   0027FA  0012               	return		;funcret
  1318   0027FC                     __end_of_ENVIA_NIBBLE:
  1319                           	callstack 0
  1320                           
  1321                           	psect	rparam
  1322   000000                     
  1323                           	psect	config
  1324                           
  1325                           ;Config register CONFIG1 @ 0x300000
  1326                           ;	External Oscillator Selection
  1327                           ;	FEXTOSC = OFF, Oscillator not enabled
  1328                           ;	Reset Oscillator Selection
  1329                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1330   300000                     	org	3145728
  1331   300000  FC                 	db	252
  1332                           
  1333                           ;Config register CONFIG2 @ 0x300001
  1334                           ;	Clock out Enable bit
  1335                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1336                           ;	PRLOCKED One-Way Set Enable bit
  1337                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1338                           ;	Clock Switch Enable bit
  1339                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1340                           ;	Fail-Safe Clock Monitor Enable bit
  1341                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1342   300001                     	org	3145729
  1343   300001  FF                 	db	255
  1344                           
  1345                           ;Config register CONFIG3 @ 0x300002
  1346                           ;	MCLR Enable bit
  1347                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1348                           ;	Power-up timer selection bits
  1349                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  1350                           ;	Multi-vector enable bit
  1351                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1352                           ;	IVTLOCK bit One-way set enable bit
  1353                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1354                           ;	Low Power BOR Enable bit
  1355                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1356                           ;	Brown-out Reset Enable bits
  1357                           ;	BOREN = OFF, Brown-out Reset disabled
  1358   300002                     	org	3145730
  1359   300002  3D                 	db	61
  1360                           
  1361                           ;Config register CONFIG4 @ 0x300003
  1362                           ;	Brown-out Reset Voltage Selection bits
  1363                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1364                           ;	ZCD Disable bit
  1365                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1366                           ;	PPSLOCK bit One-Way Set Enable bit
  1367                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1368                           ;	Stack Full/Underflow Reset Enable bit
  1369                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1370                           ;	Low Voltage Programming Enable bit
  1371                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1372                           ;	Extended Instruction Set Enable bit
  1373                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1374   300003                     	org	3145731
  1375   300003  DF                 	db	223
  1376                           
  1377                           ;Config register CONFIG5 @ 0x300004
  1378                           ;	WDT Period selection bits
  1379                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1380                           ;	WDT operating mode
  1381                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1382   300004                     	org	3145732
  1383   300004  9F                 	db	159
  1384                           
  1385                           ;Config register CONFIG6 @ 0x300005
  1386                           ;	WDT Window Select bits
  1387                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1388                           ;	WDT input clock selector
  1389                           ;	WDTCCS = SC, Software Control
  1390   300005                     	org	3145733
  1391   300005  FF                 	db	255
  1392                           
  1393                           ;Config register CONFIG7 @ 0x300006
  1394                           ;	Boot Block Size selection bits
  1395                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1396                           ;	Boot Block enable bit
  1397                           ;	BBEN = OFF, Boot block disabled
  1398                           ;	Storage Area Flash enable bit
  1399                           ;	SAFEN = OFF, SAF disabled
  1400                           ;	Background Debugger
  1401                           ;	DEBUG = OFF, Background Debugger disabled
  1402   300006                     	org	3145734
  1403   300006  FF                 	db	255
  1404                           
  1405                           ;Config register CONFIG8 @ 0x300007
  1406                           ;	Boot Block Write Protection bit
  1407                           ;	WRTB = OFF, Boot Block not Write protected
  1408                           ;	Configuration Register Write Protection bit
  1409                           ;	WRTC = OFF, Configuration registers not Write protected
  1410                           ;	Data EEPROM Write Protection bit
  1411                           ;	WRTD = OFF, Data EEPROM not Write protected
  1412                           ;	SAF Write protection bit
  1413                           ;	WRTSAF = OFF, SAF not Write Protected
  1414                           ;	Application Block write protection bit
  1415                           ;	WRTAPP = OFF, Application Block not write protected
  1416   300007                     	org	3145735
  1417   300007  FF                 	db	255
  1418                           
  1419                           ;Config register CONFIG10 @ 0x300009
  1420                           ;	PFM and Data EEPROM Code Protection bit
  1421                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1422   300009                     	org	3145737
  1423   300009  FF                 	db	255
  1424                           tosu	equ	0x4FF
  1425                           tosh	equ	0x4FE
  1426                           tosl	equ	0x4FD
  1427                           stkptr	equ	0x4FC
  1428                           pclatu	equ	0x4FB
  1429                           pclath	equ	0x4FA
  1430                           pcl	equ	0x4F9
  1431                           tblptru	equ	0x4F8
  1432                           tblptrh	equ	0x4F7
  1433                           tblptrl	equ	0x4F6
  1434                           tablat	equ	0x4F5
  1435                           prodh	equ	0x4F4
  1436                           prodl	equ	0x4F3
  1437                           indf0	equ	0x4EF
  1438                           postinc0	equ	0x4EE
  1439                           postdec0	equ	0x4ED
  1440                           preinc0	equ	0x4EC
  1441                           plusw0	equ	0x4EB
  1442                           fsr0h	equ	0x4EA
  1443                           fsr0l	equ	0x4E9
  1444                           wreg	equ	0x4E8
  1445                           indf1	equ	0x4E7
  1446                           postinc1	equ	0x4E6
  1447                           postdec1	equ	0x4E5
  1448                           preinc1	equ	0x4E4
  1449                           plusw1	equ	0x4E3
  1450                           fsr1h	equ	0x4E2
  1451                           fsr1l	equ	0x4E1
  1452                           bsr	equ	0x4E0
  1453                           indf2	equ	0x4DF
  1454                           postinc2	equ	0x4DE
  1455                           postdec2	equ	0x4DD
  1456                           preinc2	equ	0x4DC
  1457                           plusw2	equ	0x4DB
  1458                           fsr2h	equ	0x4DA
  1459                           fsr2l	equ	0x4D9
  1460                           status	equ	0x4D8

Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[11]), STR_2(CODE[17]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[11]), STR_2(CODE[17]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[11]), STR_2(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE2
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1525
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
                          _configuro
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     448
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1     552
                                              3 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (5) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _strlen
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BIGRAM            1FFF      0       0      69        0.0%
BITBIGSFRhhhhhh     2E      0       0      70        0.0%
BITBIGSFRhhhhhl      7      0       0      71        0.0%
BITBIGSFRhhhhl       7      0       0      72        0.0%
BITBIGSFRhhhlh      A8      0       0      73        0.0%
BITBIGSFRhhhll     364      0       0      74        0.0%
BITBIGSFRhhl         1      0       0      75        0.0%
BITBIGSFRhl          3      0       0      76        0.0%
BITBIGSFRl          AD      0       0      77        0.0%
ABS                  0      0       0      78        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Sep 30 11:30:49 2024

                      l20 27A8                        l21 27A8                        l15 280E  
                      l51 2596                        l55 2596                        l68 2816  
                      l85 27DE                        l97 26A0                        u10 2608  
                      u11 2604                        u20 27C2                        u21 27BE  
                      u30 27D8                        u31 27D4             ENVIA_CHAR@aux 0503  
                     l100 277E                       l103 281E                       l112 274A  
                     l106 265C                       l116 25CE                       l109 27FA  
                     l118 2608                       l126 26DE                       l900 273E  
                     l902 2744                       l910 27C8                       l840 259E  
                     l904 2810                       l912 27D8                       l920 2614  
                     l850 25B0                       l842 25A0                       l834 2716  
                     l914 2818                       l906 27B2                       l930 2644  
                     l922 2624                       l860 25D0                       l852 25B8  
                     l844 25A2                       l836 2598                       l908 27C2  
                     l932 264A                       l924 2632                       l916 260A  
                     l940 26AC                       l862 25D8                       l854 25BA  
                     l846 25AA                       l838 259C                       l934 2650  
                     l926 2638                       l918 260E                       l950 26D8  
                     l942 26BC                       l880 27F8                       l864 25DC  
                     l872 25F6                       l856 25C2                       l848 25AE  
                     l960 2760                       l952 274E                       l936 2656  
                     l928 263E                       l944 26C0                       l874 27E2  
                     l866 25E6                       l858 25C4                       l970 2772  
                     l962 2762                       l954 2750                       l890 272C  
                     l882 271A                       l946 26D0                       l938 26A2  
                     l876 27EE                       l868 25F0                       l972 2778  
                     l964 2764                       l956 2754                       l892 272E  
                     l884 271C                       l948 26D4                       l878 27F0  
                     l966 2766                       l958 2758                       l894 2730  
                     l886 2720                       l968 276C                       l896 2732  
                     l888 2724                       l984 27FC                       l898 2738  
                     l986 280A                       u200 2530                       u201 252C  
                     u210 254E                       u211 254A                       u220 256C  
                     u221 2568                       u230 258A                       u231 2586  
                     u240 26A0                       u241 269C                       u307 275A  
                     u317 25A4                       u190 270A                       u327 25B2  
                     u191 2706                       u337 25BC                       u257 26B2  
                     u347 25D2                       u267 26C6                       u357 25E0  
                     u277 261A                       u367 25EA                       u287 262C  
                     u377 27F2                       u297 2726               LEER_LCD@aux 0501  
                     wreg 04E8              ?_CURSOR_HOME 0501            ??_ENVIA_NIBBLE 0501  
          ENVIA_CHAR@dato 0502                      l1120 26EA                      l1122 270A  
                    l1130 253C                      l1116 26E0                      l1140 258A  
                    l1132 254E                      l1118 26E8                      l1150 268C  
                    l1142 265E                      l1134 255A                      l1126 2520  
                    l1152 268E                      l1144 266A                      l1136 256C  
                    l1128 2530                      l1146 266A                      l1138 2578  
                    l1154 2780                      l1148 2672                      l1156 278E  
                    l1158 2796                      STR_1 2512                      STR_2 2501  
                    _LATD 04C1                      _main 2780                      start FFFC  
           ?_CURSOR_ONOFF 0501              ___param_bank 0000           ??_ENVIA_LCD_CMD 0502  
        __end_of_LCD_INIT 26E0          __end_of_LEER_LCD 260A                     ?_main 0501  
                   _OSCEN 00B3                     _PORTD 04D1                     _TRISD 04C9  
             ?_POS_CURSOR 0504                     tablat 04F5                     status 04D8  
          ??_CURSOR_ONOFF 0504           __initialization 2820              __end_of_main 27B0  
                  ??_main 0508             __activetblptr 0003                    _ANSELD 0418  
                  _OSCFRQ 00B1      __end_of_ENVIA_NIBBLE 27FC                    isa$std 0001  
                  _strlen 26E0              __mediumconst 0000                    tblptrh 04F7  
                  tblptrl 04F6                    tblptru 04F8              ??_BORRAR_LCD 0504  
               ?_LCD_INIT 0501                 ?_LEER_LCD 0501                __accesstop 0560  
 __end_of__initialization 2820              ??_LCD_CONFIG 0504             ___rparam_used 0001  
            ??_ENVIA_CHAR 0502            __pcstackCOMRAM 0501        __end_of_BORRAR_LCD 2820  
        _ESCRIBE_MENSAJE2 265E          ENVIA_LCD_CMD@aux 0503      __end_of_CURSOR_ONOFF 27E0  
      __end_of_LCD_CONFIG 265E        __end_of_ENVIA_CHAR 2780                ??_LCD_INIT 0505  
              ??_LEER_LCD 0501          ENVIA_NIBBLE@dato 0501                   ?_strlen 0501  
                 _OSCCON1 00AD              ??_POS_CURSOR 0505                   __Hparam 0000  
                 __Lparam 0000         __end_of_configuro 2810              __psmallconst 2500  
   __end_of_ENVIA_LCD_CMD 274C                   __pcinit 2820        __end_of_POS_CURSOR 2598  
                 __ramtop 2500                   __ptext0 2780                   __ptext1 27FC  
                 __ptext2 26A2                   __ptext3 260A                   __ptext4 27B0  
                 __ptext5 2810                   __ptext6 2818                   __ptext7 251E  
                 __ptext8 2718                   __ptext9 265E              _ENVIA_NIBBLE 27E0  
    end_of_initialization 2820                   strlen@a 0503                   strlen@s 0501  
       ESCRIBE_MENSAJE2@i 0507  __end_of_ESCRIBE_MENSAJE2 26A2              _CURSOR_ONOFF 27B0  
      CURSOR_ONOFF@estado 0504            __end_of_strlen 2718             ??_CURSOR_HOME 0504  
     start_initialization 2820         ENVIA_LCD_CMD@dato 0502                  ??_strlen 0503  
     __end_of_CURSOR_HOME 2818                 _configuro 27FC               __smallconst 2500  
                _LCD_INIT 26A2                  _LEER_LCD 2598                  _LATDbits 04C1  
          POS_CURSOR@fila 0505                ?_configuro 0501    ESCRIBE_MENSAJE2@cadena 0504  
             _CURSOR_HOME 2810                  __Hrparam 0000         ?_ESCRIBE_MENSAJE2 0504  
                __Lrparam 0000        ??_ESCRIBE_MENSAJE2 0505                  __ptext10 26E0  
                __ptext11 274C                  __ptext12 2598                  __ptext13 27E0  
              _BORRAR_LCD 2818                _LCD_CONFIG 260A                _ENVIA_CHAR 274C  
                isa$xinst 0000             _ENVIA_LCD_CMD 2718               ??_configuro 0506  
          ?_ENVIA_LCD_CMD 0501       ESCRIBE_MENSAJE2@tam 0506               ?_BORRAR_LCD 0501  
           ?_ENVIA_NIBBLE 0501                _POS_CURSOR 251E               ?_LCD_CONFIG 0501  
             ?_ENVIA_CHAR 0501         POS_CURSOR@columna 0504  
