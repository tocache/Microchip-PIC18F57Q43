

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jun 05 21:08:21 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=4,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=4,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=4,class=CODE,space=0,delta=1
    30                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 04/02/2025 GMT
    36                           ; 
    37                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F57Q43 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   0004E0                     bsr             equ	1248
    70   0004E9                     fsr0            equ	1257
    71   0004EA                     fsr0h           equ	1258
    72   0004E9                     fsr0l           equ	1257
    73   0004E1                     fsr1            equ	1249
    74   0004E2                     fsr1h           equ	1250
    75   0004E1                     fsr1l           equ	1249
    76   0004D9                     fsr2            equ	1241
    77   0004DA                     fsr2h           equ	1242
    78   0004D9                     fsr2l           equ	1241
    79   0004EF                     indf0           equ	1263
    80   0004E7                     indf1           equ	1255
    81   0004DF                     indf2           equ	1247
    82   0004D6                     intcon          equ	1238
    83   000041                     nvmcon          equ	65
    84   0004F9                     pcl             equ	1273
    85   0004FA                     pclath          equ	1274
    86   0004FB                     pclatu          equ	1275
    87   0004EB                     plusw0          equ	1259
    88   0004E3                     plusw1          equ	1251
    89   0004DB                     plusw2          equ	1243
    90   0004ED                     postdec0        equ	1261
    91   0004E5                     postdec1        equ	1253
    92   0004DD                     postdec2        equ	1245
    93   0004EE                     postinc0        equ	1262
    94   0004E6                     postinc1        equ	1254
    95   0004DE                     postinc2        equ	1246
    96   0004EC                     preinc0         equ	1260
    97   0004E4                     preinc1         equ	1252
    98   0004DC                     preinc2         equ	1244
    99   0004F3                     prod            equ	1267
   100   0004F4                     prodh           equ	1268
   101   0004F3                     prodl           equ	1267
   102   0004D8                     status          equ	1240
   103   0004F5                     tablat          equ	1269
   104   0004F6                     tblptr          equ	1270
   105   0004F7                     tblptrh         equ	1271
   106   0004F6                     tblptrl         equ	1270
   107   0004F8                     tblptru         equ	1272
   108   0004FD                     tosl            equ	1277
   109   0004E8                     wreg            equ	1256
   110   000039                     CLKRCON         equ	57	;# 
   111   00003A                     CLKRCLK         equ	58	;# 
   112   000040                     NVMCON0         equ	64	;# 
   113   000041                     NVMCON1         equ	65	;# 
   114   000042                     NVMLOCK         equ	66	;# 
   115   000043                     NVMADR          equ	67	;# 
   116   000043                     NVMADRL         equ	67	;# 
   117   000044                     NVMADRH         equ	68	;# 
   118   000045                     NVMADRU         equ	69	;# 
   119   000046                     NVMDAT          equ	70	;# 
   120   000046                     NVMDATL         equ	70	;# 
   121   000047                     NVMDATH         equ	71	;# 
   122   000048                     VREGCON         equ	72	;# 
   123   000049                     BORCON          equ	73	;# 
   124   00004A                     HLVDCON0        equ	74	;# 
   125   00004B                     HLVDCON1        equ	75	;# 
   126   00004C                     ZCDCON          equ	76	;# 
   127   000060                     PMD0            equ	96	;# 
   128   000061                     PMD1            equ	97	;# 
   129   000063                     PMD3            equ	99	;# 
   130   000064                     PMD4            equ	100	;# 
   131   000065                     PMD5            equ	101	;# 
   132   000066                     PMD6            equ	102	;# 
   133   000067                     PMD7            equ	103	;# 
   134   000068                     PMD8            equ	104	;# 
   135   00006A                     MD1CON0         equ	106	;# 
   136   00006B                     MD1CON1         equ	107	;# 
   137   00006C                     MD1SRC          equ	108	;# 
   138   00006D                     MD1CARL         equ	109	;# 
   139   00006E                     MD1CARH         equ	110	;# 
   140   00006F                     CMOUT           equ	111	;# 
   141   000070                     CM1CON0         equ	112	;# 
   142   000071                     CM1CON1         equ	113	;# 
   143   000072                     CM1NCH          equ	114	;# 
   144   000073                     CM1PCH          equ	115	;# 
   145   000074                     CM2CON0         equ	116	;# 
   146   000075                     CM2CON1         equ	117	;# 
   147   000076                     CM2NCH          equ	118	;# 
   148   000077                     CM2PCH          equ	119	;# 
   149   000078                     WDTCON0         equ	120	;# 
   150   000079                     WDTCON1         equ	121	;# 
   151   00007A                     WDTPS           equ	122	;# 
   152   00007A                     WDTPSL          equ	122	;# 
   153   00007B                     WDTPSH          equ	123	;# 
   154   00007C                     WDTTMR          equ	124	;# 
   155   00007D                     DAC1DAT         equ	125	;# 
   156   00007D                     DAC1DATL        equ	125	;# 
   157   00007F                     DAC1CON         equ	127	;# 
   158   000080                     SPI1RXB         equ	128	;# 
   159   000081                     SPI1TXB         equ	129	;# 
   160   000082                     SPI1TCNT        equ	130	;# 
   161   000082                     SPI1TCNTL       equ	130	;# 
   162   000083                     SPI1TCNTH       equ	131	;# 
   163   000084                     SPI1CON0        equ	132	;# 
   164   000085                     SPI1CON1        equ	133	;# 
   165   000086                     SPI1CON2        equ	134	;# 
   166   000087                     SPI1STATUS      equ	135	;# 
   167   000088                     SPI1TWIDTH      equ	136	;# 
   168   000089                     SPI1BAUD        equ	137	;# 
   169   00008A                     SPI1INTF        equ	138	;# 
   170   00008B                     SPI1INTE        equ	139	;# 
   171   00008C                     SPI1CLK         equ	140	;# 
   172   00008D                     SPI2RXB         equ	141	;# 
   173   00008E                     SPI2TXB         equ	142	;# 
   174   00008F                     SPI2TCNT        equ	143	;# 
   175   00008F                     SPI2TCNTL       equ	143	;# 
   176   000090                     SPI2TCNTH       equ	144	;# 
   177   000091                     SPI2CON0        equ	145	;# 
   178   000092                     SPI2CON1        equ	146	;# 
   179   000093                     SPI2CON2        equ	147	;# 
   180   000094                     SPI2STATUS      equ	148	;# 
   181   000095                     SPI2TWIDTH      equ	149	;# 
   182   000096                     SPI2BAUD        equ	150	;# 
   183   000097                     SPI2INTF        equ	151	;# 
   184   000098                     SPI2INTE        equ	152	;# 
   185   000099                     SPI2CLK         equ	153	;# 
   186   0000AC                     ACTCON          equ	172	;# 
   187   0000AD                     OSCCON1         equ	173	;# 
   188   0000AE                     OSCCON2         equ	174	;# 
   189   0000AF                     OSCCON3         equ	175	;# 
   190   0000B0                     OSCTUNE         equ	176	;# 
   191   0000B1                     OSCFRQ          equ	177	;# 
   192   0000B1                     OSCFREQ         equ	177	;# 
   193   0000B2                     OSCSTAT         equ	178	;# 
   194   0000B2                     OSCSTAT1        equ	178	;# 
   195   0000B3                     OSCEN           equ	179	;# 
   196   0000B4                     PRLOCK          equ	180	;# 
   197   0000B5                     SCANPR          equ	181	;# 
   198   0000B6                     DMA1PR          equ	182	;# 
   199   0000B7                     DMA2PR          equ	183	;# 
   200   0000B8                     DMA3PR          equ	184	;# 
   201   0000B9                     DMA4PR          equ	185	;# 
   202   0000BA                     DMA5PR          equ	186	;# 
   203   0000BB                     DMA6PR          equ	187	;# 
   204   0000BE                     MAINPR          equ	190	;# 
   205   0000BF                     ISRPR           equ	191	;# 
   206   0000D4                     CLCDATA         equ	212	;# 
   207   0000D5                     CLCSELECT       equ	213	;# 
   208   0000D6                     CLCnCON         equ	214	;# 
   209   0000D7                     CLCnPOL         equ	215	;# 
   210   0000D8                     CLCnSEL0        equ	216	;# 
   211   0000D9                     CLCnSEL1        equ	217	;# 
   212   0000DA                     CLCnSEL2        equ	218	;# 
   213   0000DB                     CLCnSEL3        equ	219	;# 
   214   0000DC                     CLCnGLS0        equ	220	;# 
   215   0000DD                     CLCnGLS1        equ	221	;# 
   216   0000DE                     CLCnGLS2        equ	222	;# 
   217   0000DF                     CLCnGLS3        equ	223	;# 
   218   0000E8                     DMASELECT       equ	232	;# 
   219   0000E9                     DMAnBUF         equ	233	;# 
   220   0000EA                     DMAnDCNT        equ	234	;# 
   221   0000EA                     DMAnDCNTL       equ	234	;# 
   222   0000EB                     DMAnDCNTH       equ	235	;# 
   223   0000EC                     DMAnDPTR        equ	236	;# 
   224   0000EC                     DMAnDPTRL       equ	236	;# 
   225   0000ED                     DMAnDPTRH       equ	237	;# 
   226   0000EE                     DMAnDSZ         equ	238	;# 
   227   0000EE                     DMAnDSZL        equ	238	;# 
   228   0000EF                     DMAnDSZH        equ	239	;# 
   229   0000F0                     DMAnDSA         equ	240	;# 
   230   0000F0                     DMAnDSAL        equ	240	;# 
   231   0000F1                     DMAnDSAH        equ	241	;# 
   232   0000F2                     DMAnSCNT        equ	242	;# 
   233   0000F2                     DMAnSCNTL       equ	242	;# 
   234   0000F3                     DMAnSCNTH       equ	243	;# 
   235   0000F4                     DMAnSPTR        equ	244	;# 
   236   0000F4                     DMAnSPTRL       equ	244	;# 
   237   0000F5                     DMAnSPTRH       equ	245	;# 
   238   0000F6                     DMAnSPTRU       equ	246	;# 
   239   0000F7                     DMAnSSZ         equ	247	;# 
   240   0000F7                     DMAnSSZL        equ	247	;# 
   241   0000F8                     DMAnSSZH        equ	248	;# 
   242   0000F9                     DMAnSSA         equ	249	;# 
   243   0000F9                     DMAnSSAL        equ	249	;# 
   244   0000FA                     DMAnSSAH        equ	250	;# 
   245   0000FB                     DMAnSSAU        equ	251	;# 
   246   0000FC                     DMAnCON0        equ	252	;# 
   247   0000FD                     DMAnCON1        equ	253	;# 
   248   0000FE                     DMAnAIRQ        equ	254	;# 
   249   0000FF                     DMAnSIRQ        equ	255	;# 
   250   000200                     PPSLOCK         equ	512	;# 
   251   000201                     RA0PPS          equ	513	;# 
   252   000202                     RA1PPS          equ	514	;# 
   253   000203                     RA2PPS          equ	515	;# 
   254   000204                     RA3PPS          equ	516	;# 
   255   000205                     RA4PPS          equ	517	;# 
   256   000206                     RA5PPS          equ	518	;# 
   257   000207                     RA6PPS          equ	519	;# 
   258   000208                     RA7PPS          equ	520	;# 
   259   000209                     RB0PPS          equ	521	;# 
   260   00020A                     RB1PPS          equ	522	;# 
   261   00020B                     RB2PPS          equ	523	;# 
   262   00020C                     RB3PPS          equ	524	;# 
   263   00020D                     RB4PPS          equ	525	;# 
   264   00020E                     RB5PPS          equ	526	;# 
   265   00020F                     RB6PPS          equ	527	;# 
   266   000210                     RB7PPS          equ	528	;# 
   267   000211                     RC0PPS          equ	529	;# 
   268   000212                     RC1PPS          equ	530	;# 
   269   000213                     RC2PPS          equ	531	;# 
   270   000214                     RC3PPS          equ	532	;# 
   271   000215                     RC4PPS          equ	533	;# 
   272   000216                     RC5PPS          equ	534	;# 
   273   000217                     RC6PPS          equ	535	;# 
   274   000218                     RC7PPS          equ	536	;# 
   275   000219                     RD0PPS          equ	537	;# 
   276   00021A                     RD1PPS          equ	538	;# 
   277   00021B                     RD2PPS          equ	539	;# 
   278   00021C                     RD3PPS          equ	540	;# 
   279   00021D                     RD4PPS          equ	541	;# 
   280   00021E                     RD5PPS          equ	542	;# 
   281   00021F                     RD6PPS          equ	543	;# 
   282   000220                     RD7PPS          equ	544	;# 
   283   000221                     RE0PPS          equ	545	;# 
   284   000222                     RE1PPS          equ	546	;# 
   285   000223                     RE2PPS          equ	547	;# 
   286   000229                     RF0PPS          equ	553	;# 
   287   00022A                     RF1PPS          equ	554	;# 
   288   00022B                     RF2PPS          equ	555	;# 
   289   00022C                     RF3PPS          equ	556	;# 
   290   00022D                     RF4PPS          equ	557	;# 
   291   00022E                     RF5PPS          equ	558	;# 
   292   00022F                     RF6PPS          equ	559	;# 
   293   000230                     RF7PPS          equ	560	;# 
   294   00023E                     INT0PPS         equ	574	;# 
   295   00023F                     INT1PPS         equ	575	;# 
   296   000240                     INT2PPS         equ	576	;# 
   297   000241                     T0CKIPPS        equ	577	;# 
   298   000242                     T1CKIPPS        equ	578	;# 
   299   000243                     T1GPPS          equ	579	;# 
   300   000244                     T3CKIPPS        equ	580	;# 
   301   000245                     T3GPPS          equ	581	;# 
   302   000246                     T5CKIPPS        equ	582	;# 
   303   000247                     T5GPPS          equ	583	;# 
   304   000248                     T2INPPS         equ	584	;# 
   305   000249                     T4INPPS         equ	585	;# 
   306   00024A                     T6INPPS         equ	586	;# 
   307   00024F                     CCP1PPS         equ	591	;# 
   308   000250                     CCP2PPS         equ	592	;# 
   309   000251                     CCP3PPS         equ	593	;# 
   310   000253                     PWM1ERSPPS      equ	595	;# 
   311   000254                     PWM2ERSPPS      equ	596	;# 
   312   000255                     PWM3ERSPPS      equ	597	;# 
   313   000257                     PWMIN0PPS       equ	599	;# 
   314   000258                     PWMIN1PPS       equ	600	;# 
   315   000259                     SMT1WINPPS      equ	601	;# 
   316   00025A                     SMT1SIGPPS      equ	602	;# 
   317   00025B                     CWG1PPS         equ	603	;# 
   318   00025B                     CWG1INPPS       equ	603	;# 
   319   00025C                     CWG2PPS         equ	604	;# 
   320   00025C                     CWG2INPPS       equ	604	;# 
   321   00025D                     CWG3PPS         equ	605	;# 
   322   00025D                     CWG3INPPS       equ	605	;# 
   323   00025E                     MD1CARLPPS      equ	606	;# 
   324   00025E                     MDCARLPPS       equ	606	;# 
   325   00025F                     MD1CARHPPS      equ	607	;# 
   326   00025F                     MDCARHPPS       equ	607	;# 
   327   000260                     MD1SRCPPS       equ	608	;# 
   328   000260                     MDSRCPPS        equ	608	;# 
   329   000261                     CLCIN0PPS       equ	609	;# 
   330   000262                     CLCIN1PPS       equ	610	;# 
   331   000263                     CLCIN2PPS       equ	611	;# 
   332   000264                     CLCIN3PPS       equ	612	;# 
   333   000265                     CLCIN4PPS       equ	613	;# 
   334   000266                     CLCIN5PPS       equ	614	;# 
   335   000267                     CLCIN6PPS       equ	615	;# 
   336   000268                     CLCIN7PPS       equ	616	;# 
   337   000269                     ADACTPPS        equ	617	;# 
   338   00026A                     SPI1SCKPPS      equ	618	;# 
   339   00026B                     SPI1SDIPPS      equ	619	;# 
   340   00026C                     SPI1SSPPS       equ	620	;# 
   341   00026D                     SPI2SCKPPS      equ	621	;# 
   342   00026E                     SPI2SDIPPS      equ	622	;# 
   343   00026F                     SPI2SSPPS       equ	623	;# 
   344   000270                     I2C1SDAPPS      equ	624	;# 
   345   000271                     I2C1SCLPPS      equ	625	;# 
   346   000272                     U1RXPPS         equ	626	;# 
   347   000273                     U1CTSPPS        equ	627	;# 
   348   000274                     U2RXPPS         equ	628	;# 
   349   000275                     U2CTSPPS        equ	629	;# 
   350   000276                     U3RXPPS         equ	630	;# 
   351   000277                     U3CTSPPS        equ	631	;# 
   352   000278                     U4RXPPS         equ	632	;# 
   353   000279                     U4CTSPPS        equ	633	;# 
   354   00027A                     U5RXPPS         equ	634	;# 
   355   00027B                     U5CTSPPS        equ	635	;# 
   356   000286                     RC4I2C          equ	646	;# 
   357   000287                     RC3I2C          equ	647	;# 
   358   000288                     RB2I2C          equ	648	;# 
   359   000289                     RB1I2C          equ	649	;# 
   360   00028B                     I2C1RXB         equ	651	;# 
   361   00028C                     I2C1TXB         equ	652	;# 
   362   00028D                     I2C1CNT         equ	653	;# 
   363   00028E                     I2C1ADB0        equ	654	;# 
   364   00028F                     I2C1ADB1        equ	655	;# 
   365   000290                     I2C1ADR0        equ	656	;# 
   366   000291                     I2C1ADR1        equ	657	;# 
   367   000292                     I2C1ADR2        equ	658	;# 
   368   000293                     I2C1ADR3        equ	659	;# 
   369   000294                     I2C1CON0        equ	660	;# 
   370   000295                     I2C1CON1        equ	661	;# 
   371   000296                     I2C1CON2        equ	662	;# 
   372   000297                     I2C1ERR         equ	663	;# 
   373   000298                     I2C1STAT0       equ	664	;# 
   374   000299                     I2C1STAT1       equ	665	;# 
   375   00029A                     I2C1PIR         equ	666	;# 
   376   00029B                     I2C1PIE         equ	667	;# 
   377   00029C                     I2C1CLK         equ	668	;# 
   378   00029D                     I2C1BTO         equ	669	;# 
   379   0002A1                     U1RXB           equ	673	;# 
   380   0002A1                     U1RXBL          equ	673	;# 
   381   0002A2                     U1RXCHK         equ	674	;# 
   382   0002A3                     U1TXB           equ	675	;# 
   383   0002A3                     U1TXBL          equ	675	;# 
   384   0002A4                     U1TXCHK         equ	676	;# 
   385   0002A5                     U1P1            equ	677	;# 
   386   0002A5                     U1P1L           equ	677	;# 
   387   0002A6                     U1P1H           equ	678	;# 
   388   0002A7                     U1P2            equ	679	;# 
   389   0002A7                     U1P2L           equ	679	;# 
   390   0002A8                     U1P2H           equ	680	;# 
   391   0002A9                     U1P3            equ	681	;# 
   392   0002A9                     U1P3L           equ	681	;# 
   393   0002AA                     U1P3H           equ	682	;# 
   394   0002AB                     U1CON0          equ	683	;# 
   395   0002AC                     U1CON1          equ	684	;# 
   396   0002AD                     U1CON2          equ	685	;# 
   397   0002AE                     U1BRG           equ	686	;# 
   398   0002AE                     U1BRGL          equ	686	;# 
   399   0002AF                     U1BRGH          equ	687	;# 
   400   0002B0                     U1FIFO          equ	688	;# 
   401   0002B1                     U1UIR           equ	689	;# 
   402   0002B2                     U1ERRIR         equ	690	;# 
   403   0002B3                     U1ERRIE         equ	691	;# 
   404   0002B4                     U2RXB           equ	692	;# 
   405   0002B4                     U2RXBL          equ	692	;# 
   406   0002B6                     U2TXB           equ	694	;# 
   407   0002B6                     U2TXBL          equ	694	;# 
   408   0002B8                     U2P1            equ	696	;# 
   409   0002B8                     U2P1L           equ	696	;# 
   410   0002BA                     U2P2            equ	698	;# 
   411   0002BA                     U2P2L           equ	698	;# 
   412   0002BC                     U2P3            equ	700	;# 
   413   0002BC                     U2P3L           equ	700	;# 
   414   0002BE                     U2CON0          equ	702	;# 
   415   0002BF                     U2CON1          equ	703	;# 
   416   0002C0                     U2CON2          equ	704	;# 
   417   0002C1                     U2BRG           equ	705	;# 
   418   0002C1                     U2BRGL          equ	705	;# 
   419   0002C2                     U2BRGH          equ	706	;# 
   420   0002C3                     U2FIFO          equ	707	;# 
   421   0002C4                     U2UIR           equ	708	;# 
   422   0002C5                     U2ERRIR         equ	709	;# 
   423   0002C6                     U2ERRIE         equ	710	;# 
   424   0002C7                     U3RXB           equ	711	;# 
   425   0002C7                     U3RXBL          equ	711	;# 
   426   0002C9                     U3TXB           equ	713	;# 
   427   0002C9                     U3TXBL          equ	713	;# 
   428   0002CB                     U3P1            equ	715	;# 
   429   0002CB                     U3P1L           equ	715	;# 
   430   0002CD                     U3P2            equ	717	;# 
   431   0002CD                     U3P2L           equ	717	;# 
   432   0002CF                     U3P3            equ	719	;# 
   433   0002CF                     U3P3L           equ	719	;# 
   434   0002D1                     U3CON0          equ	721	;# 
   435   0002D2                     U3CON1          equ	722	;# 
   436   0002D3                     U3CON2          equ	723	;# 
   437   0002D4                     U3BRG           equ	724	;# 
   438   0002D4                     U3BRGL          equ	724	;# 
   439   0002D5                     U3BRGH          equ	725	;# 
   440   0002D6                     U3FIFO          equ	726	;# 
   441   0002D7                     U3UIR           equ	727	;# 
   442   0002D8                     U3ERRIR         equ	728	;# 
   443   0002D9                     U3ERRIE         equ	729	;# 
   444   0002DA                     U4RXB           equ	730	;# 
   445   0002DA                     U4RXBL          equ	730	;# 
   446   0002DC                     U4TXB           equ	732	;# 
   447   0002DC                     U4TXBL          equ	732	;# 
   448   0002DE                     U4P1            equ	734	;# 
   449   0002DE                     U4P1L           equ	734	;# 
   450   0002E0                     U4P2            equ	736	;# 
   451   0002E0                     U4P2L           equ	736	;# 
   452   0002E2                     U4P3            equ	738	;# 
   453   0002E2                     U4P3L           equ	738	;# 
   454   0002E4                     U4CON0          equ	740	;# 
   455   0002E5                     U4CON1          equ	741	;# 
   456   0002E6                     U4CON2          equ	742	;# 
   457   0002E7                     U4BRG           equ	743	;# 
   458   0002E7                     U4BRGL          equ	743	;# 
   459   0002E8                     U4BRGH          equ	744	;# 
   460   0002E9                     U4FIFO          equ	745	;# 
   461   0002EA                     U4UIR           equ	746	;# 
   462   0002EB                     U4ERRIR         equ	747	;# 
   463   0002EC                     U4ERRIE         equ	748	;# 
   464   0002ED                     U5RXB           equ	749	;# 
   465   0002ED                     U5RXBL          equ	749	;# 
   466   0002EF                     U5TXB           equ	751	;# 
   467   0002EF                     U5TXBL          equ	751	;# 
   468   0002F1                     U5P1            equ	753	;# 
   469   0002F1                     U5P1L           equ	753	;# 
   470   0002F3                     U5P2            equ	755	;# 
   471   0002F3                     U5P2L           equ	755	;# 
   472   0002F5                     U5P3            equ	757	;# 
   473   0002F5                     U5P3L           equ	757	;# 
   474   0002F7                     U5CON0          equ	759	;# 
   475   0002F8                     U5CON1          equ	760	;# 
   476   0002F9                     U5CON2          equ	761	;# 
   477   0002FA                     U5BRG           equ	762	;# 
   478   0002FA                     U5BRGL          equ	762	;# 
   479   0002FB                     U5BRGH          equ	763	;# 
   480   0002FC                     U5FIFO          equ	764	;# 
   481   0002FD                     U5UIR           equ	765	;# 
   482   0002FE                     U5ERRIR         equ	766	;# 
   483   0002FF                     U5ERRIE         equ	767	;# 
   484   000300                     SMT1TMR         equ	768	;# 
   485   000300                     SMT1TMRL        equ	768	;# 
   486   000301                     SMT1TMRH        equ	769	;# 
   487   000302                     SMT1TMRU        equ	770	;# 
   488   000303                     SMT1CPR         equ	771	;# 
   489   000303                     SMT1CPRL        equ	771	;# 
   490   000304                     SMT1CPRH        equ	772	;# 
   491   000305                     SMT1CPRU        equ	773	;# 
   492   000306                     SMT1CPW         equ	774	;# 
   493   000306                     SMT1CPWL        equ	774	;# 
   494   000307                     SMT1CPWH        equ	775	;# 
   495   000308                     SMT1CPWU        equ	776	;# 
   496   000309                     SMT1PR          equ	777	;# 
   497   000309                     SMT1PRL         equ	777	;# 
   498   00030A                     SMT1PRH         equ	778	;# 
   499   00030B                     SMT1PRU         equ	779	;# 
   500   00030C                     SMT1CON0        equ	780	;# 
   501   00030D                     SMT1CON1        equ	781	;# 
   502   00030E                     SMT1STAT        equ	782	;# 
   503   00030F                     SMT1CLK         equ	783	;# 
   504   000310                     SMT1SIG         equ	784	;# 
   505   000311                     SMT1WIN         equ	785	;# 
   506   000318                     TMR0L           equ	792	;# 
   507   000318                     TMR0            equ	792	;# 
   508   000319                     TMR0H           equ	793	;# 
   509   000319                     PR0             equ	793	;# 
   510   00031A                     T0CON0          equ	794	;# 
   511   00031B                     T0CON1          equ	795	;# 
   512   00031C                     TMR1            equ	796	;# 
   513   00031C                     TMR1L           equ	796	;# 
   514   00031D                     TMR1H           equ	797	;# 
   515   00031E                     T1CON           equ	798	;# 
   516   00031E                     TMR1CON         equ	798	;# 
   517   00031F                     T1GCON          equ	799	;# 
   518   00031F                     TMR1GCON        equ	799	;# 
   519   000320                     T1GATE          equ	800	;# 
   520   000320                     TMR1GATE        equ	800	;# 
   521   000321                     T1CLK           equ	801	;# 
   522   000321                     TMR1CLK         equ	801	;# 
   523   000321                     PR1             equ	801	;# 
   524   000322                     T2TMR           equ	802	;# 
   525   000322                     TMR2            equ	802	;# 
   526   000323                     T2PR            equ	803	;# 
   527   000323                     PR2             equ	803	;# 
   528   000324                     T2CON           equ	804	;# 
   529   000325                     T2HLT           equ	805	;# 
   530   000326                     T2CLKCON        equ	806	;# 
   531   000326                     T2CLK           equ	806	;# 
   532   000327                     T2RST           equ	807	;# 
   533   000328                     TMR3            equ	808	;# 
   534   000328                     TMR3L           equ	808	;# 
   535   000329                     TMR3H           equ	809	;# 
   536   00032A                     T3CON           equ	810	;# 
   537   00032A                     TMR3CON         equ	810	;# 
   538   00032B                     T3GCON          equ	811	;# 
   539   00032B                     TMR3GCON        equ	811	;# 
   540   00032C                     T3GATE          equ	812	;# 
   541   00032C                     TMR3GATE        equ	812	;# 
   542   00032D                     T3CLK           equ	813	;# 
   543   00032D                     TMR3CLK         equ	813	;# 
   544   00032D                     PR3             equ	813	;# 
   545   00032E                     T4TMR           equ	814	;# 
   546   00032E                     TMR4            equ	814	;# 
   547   00032F                     T4PR            equ	815	;# 
   548   00032F                     PR4             equ	815	;# 
   549   000330                     T4CON           equ	816	;# 
   550   000331                     T4HLT           equ	817	;# 
   551   000332                     T4CLKCON        equ	818	;# 
   552   000332                     T4CLK           equ	818	;# 
   553   000333                     T4RST           equ	819	;# 
   554   000334                     TMR5            equ	820	;# 
   555   000334                     TMR5L           equ	820	;# 
   556   000335                     TMR5H           equ	821	;# 
   557   000336                     T5CON           equ	822	;# 
   558   000336                     TMR5CON         equ	822	;# 
   559   000337                     T5GCON          equ	823	;# 
   560   000337                     TMR5GCON        equ	823	;# 
   561   000338                     T5GATE          equ	824	;# 
   562   000338                     TMR5GATE        equ	824	;# 
   563   000339                     T5CLK           equ	825	;# 
   564   000339                     TMR5CLK         equ	825	;# 
   565   000339                     PR5             equ	825	;# 
   566   00033A                     T6TMR           equ	826	;# 
   567   00033A                     TMR6            equ	826	;# 
   568   00033B                     T6PR            equ	827	;# 
   569   00033B                     PR6             equ	827	;# 
   570   00033C                     T6CON           equ	828	;# 
   571   00033D                     T6HLT           equ	829	;# 
   572   00033E                     T6CLKCON        equ	830	;# 
   573   00033E                     T6CLK           equ	830	;# 
   574   00033F                     T6RST           equ	831	;# 
   575   000340                     CCPR1           equ	832	;# 
   576   000340                     CCPR1L          equ	832	;# 
   577   000341                     CCPR1H          equ	833	;# 
   578   000342                     CCP1CON         equ	834	;# 
   579   000343                     CCP1CAP         equ	835	;# 
   580   000344                     CCPR2           equ	836	;# 
   581   000344                     CCPR2L          equ	836	;# 
   582   000345                     CCPR2H          equ	837	;# 
   583   000346                     CCP2CON         equ	838	;# 
   584   000347                     CCP2CAP         equ	839	;# 
   585   000348                     CCPR3           equ	840	;# 
   586   000348                     CCPR3L          equ	840	;# 
   587   000349                     CCPR3H          equ	841	;# 
   588   00034A                     CCP3CON         equ	842	;# 
   589   00034B                     CCP3CAP         equ	843	;# 
   590   00034C                     CCPTMRS0        equ	844	;# 
   591   00034F                     CRCDATA         equ	847	;# 
   592   00034F                     CRCDATL         equ	847	;# 
   593   000350                     CRCDATH         equ	848	;# 
   594   000351                     CRCACC          equ	849	;# 
   595   000351                     CRCACCL         equ	849	;# 
   596   000352                     CRCACCH         equ	850	;# 
   597   000353                     CRCSHFT         equ	851	;# 
   598   000353                     CRCSHIFTL       equ	851	;# 
   599   000354                     CRCSHIFTH       equ	852	;# 
   600   000355                     CRCXOR          equ	853	;# 
   601   000355                     CRCXORL         equ	853	;# 
   602   000356                     CRCXORH         equ	854	;# 
   603   000357                     CRCCON0         equ	855	;# 
   604   000358                     CRCCON1         equ	856	;# 
   605   00035A                     SCANLADR        equ	858	;# 
   606   00035A                     SCANLADRL       equ	858	;# 
   607   00035B                     SCANLADRH       equ	859	;# 
   608   00035C                     SCANLADRU       equ	860	;# 
   609   00035D                     SCANHADR        equ	861	;# 
   610   00035D                     SCANHADRL       equ	861	;# 
   611   00035E                     SCANHADRH       equ	862	;# 
   612   00035F                     SCANHADRU       equ	863	;# 
   613   000360                     SCANCON0        equ	864	;# 
   614   000361                     SCANTRIG        equ	865	;# 
   615   000362                     IPR0            equ	866	;# 
   616   000363                     IPR1            equ	867	;# 
   617   000364                     IPR2            equ	868	;# 
   618   000365                     IPR3            equ	869	;# 
   619   000366                     IPR4            equ	870	;# 
   620   000367                     IPR5            equ	871	;# 
   621   000368                     IPR6            equ	872	;# 
   622   000369                     IPR7            equ	873	;# 
   623   00036A                     IPR8            equ	874	;# 
   624   00036B                     IPR9            equ	875	;# 
   625   00036C                     IPR10           equ	876	;# 
   626   00036D                     IPR11           equ	877	;# 
   627   00036E                     IPR12           equ	878	;# 
   628   00036F                     IPR13           equ	879	;# 
   629   000370                     IPR14           equ	880	;# 
   630   000371                     IPR15           equ	881	;# 
   631   000373                     STATUS_CSHAD    equ	883	;# 
   632   000374                     WREG_CSHAD      equ	884	;# 
   633   000375                     BSR_CSHAD       equ	885	;# 
   634   000376                     SHADCON         equ	886	;# 
   635   000377                     STATUS_SHAD     equ	887	;# 
   636   000378                     WREG_SHAD       equ	888	;# 
   637   000379                     BSR_SHAD        equ	889	;# 
   638   00037A                     PCLATH_SHAD     equ	890	;# 
   639   00037B                     PCLATU_SHAD     equ	891	;# 
   640   00037C                     FSR0SH          equ	892	;# 
   641   00037C                     FSR0L_SHAD      equ	892	;# 
   642   00037D                     FSR0H_SHAD      equ	893	;# 
   643   00037E                     FSR1SH          equ	894	;# 
   644   00037E                     FSR1L_SHAD      equ	894	;# 
   645   00037F                     FSR1H_SHAD      equ	895	;# 
   646   000380                     FSR2SH          equ	896	;# 
   647   000380                     FSR2L_SHAD      equ	896	;# 
   648   000381                     FSR2H_SHAD      equ	897	;# 
   649   000382                     PRODSH          equ	898	;# 
   650   000382                     PRODL_SHAD      equ	898	;# 
   651   000383                     PRODH_SHAD      equ	899	;# 
   652   0003BC                     CWG1CLK         equ	956	;# 
   653   0003BC                     CWG1CLKCON      equ	956	;# 
   654   0003BD                     CWG1ISM         equ	957	;# 
   655   0003BD                     CWG1DAT         equ	957	;# 
   656   0003BE                     CWG1DBR         equ	958	;# 
   657   0003BF                     CWG1DBF         equ	959	;# 
   658   0003C0                     CWG1CON0        equ	960	;# 
   659   0003C1                     CWG1CON1        equ	961	;# 
   660   0003C2                     CWG1AS0         equ	962	;# 
   661   0003C3                     CWG1AS1         equ	963	;# 
   662   0003C4                     CWG1STR         equ	964	;# 
   663   0003C5                     CWG2CLK         equ	965	;# 
   664   0003C5                     CWG2CLKCON      equ	965	;# 
   665   0003C6                     CWG2ISM         equ	966	;# 
   666   0003C6                     CWG2DAT         equ	966	;# 
   667   0003C7                     CWG2DBR         equ	967	;# 
   668   0003C8                     CWG2DBF         equ	968	;# 
   669   0003C9                     CWG2CON0        equ	969	;# 
   670   0003CA                     CWG2CON1        equ	970	;# 
   671   0003CB                     CWG2AS0         equ	971	;# 
   672   0003CC                     CWG2AS1         equ	972	;# 
   673   0003CD                     CWG2STR         equ	973	;# 
   674   0003CE                     CWG3CLK         equ	974	;# 
   675   0003CE                     CWG3CLKCON      equ	974	;# 
   676   0003CF                     CWG3ISM         equ	975	;# 
   677   0003CF                     CWG3DAT         equ	975	;# 
   678   0003D0                     CWG3DBR         equ	976	;# 
   679   0003D1                     CWG3DBF         equ	977	;# 
   680   0003D2                     CWG3CON0        equ	978	;# 
   681   0003D3                     CWG3CON1        equ	979	;# 
   682   0003D4                     CWG3AS0         equ	980	;# 
   683   0003D5                     CWG3AS1         equ	981	;# 
   684   0003D6                     CWG3STR         equ	982	;# 
   685   0003D7                     FVRCON          equ	983	;# 
   686   0003D8                     ADCPCON         equ	984	;# 
   687   0003D8                     ADCP            equ	984	;# 
   688   0003D9                     ADLTH           equ	985	;# 
   689   0003D9                     ADLTHL          equ	985	;# 
   690   0003DA                     ADLTHH          equ	986	;# 
   691   0003DB                     ADUTH           equ	987	;# 
   692   0003DB                     ADUTHL          equ	987	;# 
   693   0003DC                     ADUTHH          equ	988	;# 
   694   0003DD                     ADERR           equ	989	;# 
   695   0003DD                     ADERRL          equ	989	;# 
   696   0003DE                     ADERRH          equ	990	;# 
   697   0003DF                     ADSTPT          equ	991	;# 
   698   0003DF                     ADSTPTL         equ	991	;# 
   699   0003E0                     ADSTPTH         equ	992	;# 
   700   0003E1                     ADFLTR          equ	993	;# 
   701   0003E1                     ADFLTRL         equ	993	;# 
   702   0003E2                     ADFLTRH         equ	994	;# 
   703   0003E3                     ADACC           equ	995	;# 
   704   0003E3                     ADACCL          equ	995	;# 
   705   0003E4                     ADACCH          equ	996	;# 
   706   0003E5                     ADACCU          equ	997	;# 
   707   0003E6                     ADCNT           equ	998	;# 
   708   0003E7                     ADRPT           equ	999	;# 
   709   0003E8                     ADPREV          equ	1000	;# 
   710   0003E8                     ADPREVL         equ	1000	;# 
   711   0003E9                     ADPREVH         equ	1001	;# 
   712   0003EA                     ADRES           equ	1002	;# 
   713   0003EA                     ADRESL          equ	1002	;# 
   714   0003EB                     ADRESH          equ	1003	;# 
   715   0003EC                     ADPCH           equ	1004	;# 
   716   0003EE                     ADACQ           equ	1006	;# 
   717   0003EE                     ADACQL          equ	1006	;# 
   718   0003EF                     ADACQH          equ	1007	;# 
   719   0003F0                     ADCAP           equ	1008	;# 
   720   0003F1                     ADPRE           equ	1009	;# 
   721   0003F1                     ADPREL          equ	1009	;# 
   722   0003F2                     ADPREH          equ	1010	;# 
   723   0003F3                     ADCON0          equ	1011	;# 
   724   0003F4                     ADCON1          equ	1012	;# 
   725   0003F5                     ADCON2          equ	1013	;# 
   726   0003F6                     ADCON3          equ	1014	;# 
   727   0003F7                     ADSTAT          equ	1015	;# 
   728   0003F8                     ADREF           equ	1016	;# 
   729   0003F9                     ADACT           equ	1017	;# 
   730   0003FA                     ADCLK           equ	1018	;# 
   731   000400                     ANSELA          equ	1024	;# 
   732   000401                     WPUA            equ	1025	;# 
   733   000402                     ODCONA          equ	1026	;# 
   734   000403                     SLRCONA         equ	1027	;# 
   735   000404                     INLVLA          equ	1028	;# 
   736   000405                     IOCAP           equ	1029	;# 
   737   000406                     IOCAN           equ	1030	;# 
   738   000407                     IOCAF           equ	1031	;# 
   739   000408                     ANSELB          equ	1032	;# 
   740   000409                     WPUB            equ	1033	;# 
   741   00040A                     ODCONB          equ	1034	;# 
   742   00040B                     SLRCONB         equ	1035	;# 
   743   00040C                     INLVLB          equ	1036	;# 
   744   00040D                     IOCBP           equ	1037	;# 
   745   00040E                     IOCBN           equ	1038	;# 
   746   00040F                     IOCBF           equ	1039	;# 
   747   000410                     ANSELC          equ	1040	;# 
   748   000411                     WPUC            equ	1041	;# 
   749   000412                     ODCONC          equ	1042	;# 
   750   000413                     SLRCONC         equ	1043	;# 
   751   000414                     INLVLC          equ	1044	;# 
   752   000415                     IOCCP           equ	1045	;# 
   753   000416                     IOCCN           equ	1046	;# 
   754   000417                     IOCCF           equ	1047	;# 
   755   000418                     ANSELD          equ	1048	;# 
   756   000419                     WPUD            equ	1049	;# 
   757   00041A                     ODCOND          equ	1050	;# 
   758   00041B                     SLRCOND         equ	1051	;# 
   759   00041C                     INLVLD          equ	1052	;# 
   760   000420                     ANSELE          equ	1056	;# 
   761   000421                     WPUE            equ	1057	;# 
   762   000422                     ODCONE          equ	1058	;# 
   763   000423                     SLRCONE         equ	1059	;# 
   764   000424                     INLVLE          equ	1060	;# 
   765   000425                     IOCEP           equ	1061	;# 
   766   000426                     IOCEN           equ	1062	;# 
   767   000427                     IOCEF           equ	1063	;# 
   768   000428                     ANSELF          equ	1064	;# 
   769   000429                     WPUF            equ	1065	;# 
   770   00042A                     ODCONF          equ	1066	;# 
   771   00042B                     SLRCONF         equ	1067	;# 
   772   00042C                     INLVLF          equ	1068	;# 
   773   000440                     NCO1ACC         equ	1088	;# 
   774   000440                     NCO1ACCL        equ	1088	;# 
   775   000441                     NCO1ACCH        equ	1089	;# 
   776   000442                     NCO1ACCU        equ	1090	;# 
   777   000443                     NCO1INC         equ	1091	;# 
   778   000443                     NCO1INCL        equ	1091	;# 
   779   000444                     NCO1INCH        equ	1092	;# 
   780   000445                     NCO1INCU        equ	1093	;# 
   781   000446                     NCO1CON         equ	1094	;# 
   782   000447                     NCO1CLK         equ	1095	;# 
   783   000448                     NCO2ACC         equ	1096	;# 
   784   000448                     NCO2ACCL        equ	1096	;# 
   785   000449                     NCO2ACCH        equ	1097	;# 
   786   00044A                     NCO2ACCU        equ	1098	;# 
   787   00044B                     NCO2INC         equ	1099	;# 
   788   00044B                     NCO2INCL        equ	1099	;# 
   789   00044C                     NCO2INCH        equ	1100	;# 
   790   00044D                     NCO2INCU        equ	1101	;# 
   791   00044E                     NCO2CON         equ	1102	;# 
   792   00044F                     NCO2CLK         equ	1103	;# 
   793   000450                     NCO3ACC         equ	1104	;# 
   794   000450                     NCO3ACCL        equ	1104	;# 
   795   000451                     NCO3ACCH        equ	1105	;# 
   796   000452                     NCO3ACCU        equ	1106	;# 
   797   000453                     NCO3INC         equ	1107	;# 
   798   000453                     NCO3INCL        equ	1107	;# 
   799   000454                     NCO3INCH        equ	1108	;# 
   800   000455                     NCO3INCU        equ	1109	;# 
   801   000456                     NCO3CON         equ	1110	;# 
   802   000457                     NCO3CLK         equ	1111	;# 
   803   000459                     IVTLOCK         equ	1113	;# 
   804   00045A                     IVTAD           equ	1114	;# 
   805   00045A                     IVTADL          equ	1114	;# 
   806   00045B                     IVTADH          equ	1115	;# 
   807   00045C                     IVTADU          equ	1116	;# 
   808   00045D                     IVTBASE         equ	1117	;# 
   809   00045D                     IVTBASEL        equ	1117	;# 
   810   00045E                     IVTBASEH        equ	1118	;# 
   811   00045F                     IVTBASEU        equ	1119	;# 
   812   000460                     PWM1ERS         equ	1120	;# 
   813   000461                     PWM1CLK         equ	1121	;# 
   814   000462                     PWM1LDS         equ	1122	;# 
   815   000463                     PWM1PR          equ	1123	;# 
   816   000463                     PWM1PRL         equ	1123	;# 
   817   000464                     PWM1PRH         equ	1124	;# 
   818   000465                     PWM1CPRE        equ	1125	;# 
   819   000466                     PWM1PIPOS       equ	1126	;# 
   820   000467                     PWM1GIR         equ	1127	;# 
   821   000468                     PWM1GIE         equ	1128	;# 
   822   000469                     PWM1CON         equ	1129	;# 
   823   00046A                     PWM1S1CFG       equ	1130	;# 
   824   00046B                     PWM1S1P1        equ	1131	;# 
   825   00046B                     PWM1S1P1L       equ	1131	;# 
   826   00046C                     PWM1S1P1H       equ	1132	;# 
   827   00046D                     PWM1S1P2        equ	1133	;# 
   828   00046D                     PWM1S1P2L       equ	1133	;# 
   829   00046E                     PWM1S1P2H       equ	1134	;# 
   830   00046F                     PWM2ERS         equ	1135	;# 
   831   000470                     PWM2CLK         equ	1136	;# 
   832   000471                     PWM2LDS         equ	1137	;# 
   833   000472                     PWM2PR          equ	1138	;# 
   834   000472                     PWM2PRL         equ	1138	;# 
   835   000473                     PWM2PRH         equ	1139	;# 
   836   000474                     PWM2CPRE        equ	1140	;# 
   837   000475                     PWM2PIPOS       equ	1141	;# 
   838   000476                     PWM2GIR         equ	1142	;# 
   839   000477                     PWM2GIE         equ	1143	;# 
   840   000478                     PWM2CON         equ	1144	;# 
   841   000479                     PWM2S1CFG       equ	1145	;# 
   842   00047A                     PWM2S1P1        equ	1146	;# 
   843   00047A                     PWM2S1P1L       equ	1146	;# 
   844   00047B                     PWM2S1P1H       equ	1147	;# 
   845   00047C                     PWM2S1P2        equ	1148	;# 
   846   00047C                     PWM2S1P2L       equ	1148	;# 
   847   00047D                     PWM2S1P2H       equ	1149	;# 
   848   00047E                     PWM3ERS         equ	1150	;# 
   849   00047F                     PWM3CLK         equ	1151	;# 
   850   000480                     PWM3LDS         equ	1152	;# 
   851   000481                     PWM3PR          equ	1153	;# 
   852   000481                     PWM3PRL         equ	1153	;# 
   853   000482                     PWM3PRH         equ	1154	;# 
   854   000483                     PWM3CPRE        equ	1155	;# 
   855   000484                     PWM3PIPOS       equ	1156	;# 
   856   000485                     PWM3GIR         equ	1157	;# 
   857   000486                     PWM3GIE         equ	1158	;# 
   858   000487                     PWM3CON         equ	1159	;# 
   859   000488                     PWM3S1CFG       equ	1160	;# 
   860   000489                     PWM3S1P1        equ	1161	;# 
   861   000489                     PWM3S1P1L       equ	1161	;# 
   862   00048A                     PWM3S1P1H       equ	1162	;# 
   863   00048B                     PWM3S1P2        equ	1163	;# 
   864   00048B                     PWM3S1P2L       equ	1163	;# 
   865   00048C                     PWM3S1P2H       equ	1164	;# 
   866   00049C                     PWMLOAD         equ	1180	;# 
   867   00049D                     PWMEN           equ	1181	;# 
   868   00049E                     PIE0            equ	1182	;# 
   869   00049F                     PIE1            equ	1183	;# 
   870   0004A0                     PIE2            equ	1184	;# 
   871   0004A1                     PIE3            equ	1185	;# 
   872   0004A2                     PIE4            equ	1186	;# 
   873   0004A3                     PIE5            equ	1187	;# 
   874   0004A4                     PIE6            equ	1188	;# 
   875   0004A5                     PIE7            equ	1189	;# 
   876   0004A6                     PIE8            equ	1190	;# 
   877   0004A7                     PIE9            equ	1191	;# 
   878   0004A8                     PIE10           equ	1192	;# 
   879   0004A9                     PIE11           equ	1193	;# 
   880   0004AA                     PIE12           equ	1194	;# 
   881   0004AB                     PIE13           equ	1195	;# 
   882   0004AC                     PIE14           equ	1196	;# 
   883   0004AD                     PIE15           equ	1197	;# 
   884   0004AE                     PIR0            equ	1198	;# 
   885   0004AF                     PIR1            equ	1199	;# 
   886   0004B0                     PIR2            equ	1200	;# 
   887   0004B1                     PIR3            equ	1201	;# 
   888   0004B2                     PIR4            equ	1202	;# 
   889   0004B3                     PIR5            equ	1203	;# 
   890   0004B4                     PIR6            equ	1204	;# 
   891   0004B5                     PIR7            equ	1205	;# 
   892   0004B6                     PIR8            equ	1206	;# 
   893   0004B7                     PIR9            equ	1207	;# 
   894   0004B8                     PIR10           equ	1208	;# 
   895   0004B9                     PIR11           equ	1209	;# 
   896   0004BA                     PIR12           equ	1210	;# 
   897   0004BB                     PIR13           equ	1211	;# 
   898   0004BC                     PIR14           equ	1212	;# 
   899   0004BD                     PIR15           equ	1213	;# 
   900   0004BE                     LATA            equ	1214	;# 
   901   0004BF                     LATB            equ	1215	;# 
   902   0004C0                     LATC            equ	1216	;# 
   903   0004C1                     LATD            equ	1217	;# 
   904   0004C2                     LATE            equ	1218	;# 
   905   0004C3                     LATF            equ	1219	;# 
   906   0004C6                     TRISA           equ	1222	;# 
   907   0004C7                     TRISB           equ	1223	;# 
   908   0004C8                     TRISC           equ	1224	;# 
   909   0004C9                     TRISD           equ	1225	;# 
   910   0004CA                     TRISE           equ	1226	;# 
   911   0004CB                     TRISF           equ	1227	;# 
   912   0004CE                     PORTA           equ	1230	;# 
   913   0004CF                     PORTB           equ	1231	;# 
   914   0004D0                     PORTC           equ	1232	;# 
   915   0004D1                     PORTD           equ	1233	;# 
   916   0004D2                     PORTE           equ	1234	;# 
   917   0004D3                     PORTF           equ	1235	;# 
   918   0004D6                     INTCON0         equ	1238	;# 
   919   0004D7                     INTCON1         equ	1239	;# 
   920   0004D8                     STATUS          equ	1240	;# 
   921   0004D9                     FSR2            equ	1241	;# 
   922   0004D9                     FSR2L           equ	1241	;# 
   923   0004DA                     FSR2H           equ	1242	;# 
   924   0004DB                     PLUSW2          equ	1243	;# 
   925   0004DC                     PREINC2         equ	1244	;# 
   926   0004DD                     POSTDEC2        equ	1245	;# 
   927   0004DE                     POSTINC2        equ	1246	;# 
   928   0004DF                     INDF2           equ	1247	;# 
   929   0004E0                     BSR             equ	1248	;# 
   930   0004E1                     FSR1            equ	1249	;# 
   931   0004E1                     FSR1L           equ	1249	;# 
   932   0004E2                     FSR1H           equ	1250	;# 
   933   0004E3                     PLUSW1          equ	1251	;# 
   934   0004E4                     PREINC1         equ	1252	;# 
   935   0004E5                     POSTDEC1        equ	1253	;# 
   936   0004E6                     POSTINC1        equ	1254	;# 
   937   0004E7                     INDF1           equ	1255	;# 
   938   0004E8                     WREG            equ	1256	;# 
   939   0004E9                     FSR0            equ	1257	;# 
   940   0004E9                     FSR0L           equ	1257	;# 
   941   0004EA                     FSR0H           equ	1258	;# 
   942   0004EB                     PLUSW0          equ	1259	;# 
   943   0004EC                     PREINC0         equ	1260	;# 
   944   0004ED                     POSTDEC0        equ	1261	;# 
   945   0004EE                     POSTINC0        equ	1262	;# 
   946   0004EF                     INDF0           equ	1263	;# 
   947   0004F0                     PCON0           equ	1264	;# 
   948   0004F1                     PCON1           equ	1265	;# 
   949   0004F2                     CPUDOZE         equ	1266	;# 
   950   0004F3                     PROD            equ	1267	;# 
   951   0004F3                     PRODL           equ	1267	;# 
   952   0004F4                     PRODH           equ	1268	;# 
   953   0004F5                     TABLAT          equ	1269	;# 
   954   0004F6                     TBLPTR          equ	1270	;# 
   955   0004F6                     TBLPTRL         equ	1270	;# 
   956   0004F7                     TBLPTRH         equ	1271	;# 
   957   0004F8                     TBLPTRU         equ	1272	;# 
   958   0004F9                     PCLAT           equ	1273	;# 
   959   0004F9                     PCL             equ	1273	;# 
   960   0004FA                     PCLATH          equ	1274	;# 
   961   0004FB                     PCLATU          equ	1275	;# 
   962   0004FC                     STKPTR          equ	1276	;# 
   963   0004FD                     TOS             equ	1277	;# 
   964   0004FD                     TOSL            equ	1277	;# 
   965   0004FE                     TOSH            equ	1278	;# 
   966   0004FF                     TOSU            equ	1279	;# 
   967   000039                     CLKRCON         equ	57	;# 
   968   00003A                     CLKRCLK         equ	58	;# 
   969   000040                     NVMCON0         equ	64	;# 
   970   000041                     NVMCON1         equ	65	;# 
   971   000042                     NVMLOCK         equ	66	;# 
   972   000043                     NVMADR          equ	67	;# 
   973   000043                     NVMADRL         equ	67	;# 
   974   000044                     NVMADRH         equ	68	;# 
   975   000045                     NVMADRU         equ	69	;# 
   976   000046                     NVMDAT          equ	70	;# 
   977   000046                     NVMDATL         equ	70	;# 
   978   000047                     NVMDATH         equ	71	;# 
   979   000048                     VREGCON         equ	72	;# 
   980   000049                     BORCON          equ	73	;# 
   981   00004A                     HLVDCON0        equ	74	;# 
   982   00004B                     HLVDCON1        equ	75	;# 
   983   00004C                     ZCDCON          equ	76	;# 
   984   000060                     PMD0            equ	96	;# 
   985   000061                     PMD1            equ	97	;# 
   986   000063                     PMD3            equ	99	;# 
   987   000064                     PMD4            equ	100	;# 
   988   000065                     PMD5            equ	101	;# 
   989   000066                     PMD6            equ	102	;# 
   990   000067                     PMD7            equ	103	;# 
   991   000068                     PMD8            equ	104	;# 
   992   00006A                     MD1CON0         equ	106	;# 
   993   00006B                     MD1CON1         equ	107	;# 
   994   00006C                     MD1SRC          equ	108	;# 
   995   00006D                     MD1CARL         equ	109	;# 
   996   00006E                     MD1CARH         equ	110	;# 
   997   00006F                     CMOUT           equ	111	;# 
   998   000070                     CM1CON0         equ	112	;# 
   999   000071                     CM1CON1         equ	113	;# 
  1000   000072                     CM1NCH          equ	114	;# 
  1001   000073                     CM1PCH          equ	115	;# 
  1002   000074                     CM2CON0         equ	116	;# 
  1003   000075                     CM2CON1         equ	117	;# 
  1004   000076                     CM2NCH          equ	118	;# 
  1005   000077                     CM2PCH          equ	119	;# 
  1006   000078                     WDTCON0         equ	120	;# 
  1007   000079                     WDTCON1         equ	121	;# 
  1008   00007A                     WDTPS           equ	122	;# 
  1009   00007A                     WDTPSL          equ	122	;# 
  1010   00007B                     WDTPSH          equ	123	;# 
  1011   00007C                     WDTTMR          equ	124	;# 
  1012   00007D                     DAC1DAT         equ	125	;# 
  1013   00007D                     DAC1DATL        equ	125	;# 
  1014   00007F                     DAC1CON         equ	127	;# 
  1015   000080                     SPI1RXB         equ	128	;# 
  1016   000081                     SPI1TXB         equ	129	;# 
  1017   000082                     SPI1TCNT        equ	130	;# 
  1018   000082                     SPI1TCNTL       equ	130	;# 
  1019   000083                     SPI1TCNTH       equ	131	;# 
  1020   000084                     SPI1CON0        equ	132	;# 
  1021   000085                     SPI1CON1        equ	133	;# 
  1022   000086                     SPI1CON2        equ	134	;# 
  1023   000087                     SPI1STATUS      equ	135	;# 
  1024   000088                     SPI1TWIDTH      equ	136	;# 
  1025   000089                     SPI1BAUD        equ	137	;# 
  1026   00008A                     SPI1INTF        equ	138	;# 
  1027   00008B                     SPI1INTE        equ	139	;# 
  1028   00008C                     SPI1CLK         equ	140	;# 
  1029   00008D                     SPI2RXB         equ	141	;# 
  1030   00008E                     SPI2TXB         equ	142	;# 
  1031   00008F                     SPI2TCNT        equ	143	;# 
  1032   00008F                     SPI2TCNTL       equ	143	;# 
  1033   000090                     SPI2TCNTH       equ	144	;# 
  1034   000091                     SPI2CON0        equ	145	;# 
  1035   000092                     SPI2CON1        equ	146	;# 
  1036   000093                     SPI2CON2        equ	147	;# 
  1037   000094                     SPI2STATUS      equ	148	;# 
  1038   000095                     SPI2TWIDTH      equ	149	;# 
  1039   000096                     SPI2BAUD        equ	150	;# 
  1040   000097                     SPI2INTF        equ	151	;# 
  1041   000098                     SPI2INTE        equ	152	;# 
  1042   000099                     SPI2CLK         equ	153	;# 
  1043   0000AC                     ACTCON          equ	172	;# 
  1044   0000AD                     OSCCON1         equ	173	;# 
  1045   0000AE                     OSCCON2         equ	174	;# 
  1046   0000AF                     OSCCON3         equ	175	;# 
  1047   0000B0                     OSCTUNE         equ	176	;# 
  1048   0000B1                     OSCFRQ          equ	177	;# 
  1049   0000B1                     OSCFREQ         equ	177	;# 
  1050   0000B2                     OSCSTAT         equ	178	;# 
  1051   0000B2                     OSCSTAT1        equ	178	;# 
  1052   0000B3                     OSCEN           equ	179	;# 
  1053   0000B4                     PRLOCK          equ	180	;# 
  1054   0000B5                     SCANPR          equ	181	;# 
  1055   0000B6                     DMA1PR          equ	182	;# 
  1056   0000B7                     DMA2PR          equ	183	;# 
  1057   0000B8                     DMA3PR          equ	184	;# 
  1058   0000B9                     DMA4PR          equ	185	;# 
  1059   0000BA                     DMA5PR          equ	186	;# 
  1060   0000BB                     DMA6PR          equ	187	;# 
  1061   0000BE                     MAINPR          equ	190	;# 
  1062   0000BF                     ISRPR           equ	191	;# 
  1063   0000D4                     CLCDATA         equ	212	;# 
  1064   0000D5                     CLCSELECT       equ	213	;# 
  1065   0000D6                     CLCnCON         equ	214	;# 
  1066   0000D7                     CLCnPOL         equ	215	;# 
  1067   0000D8                     CLCnSEL0        equ	216	;# 
  1068   0000D9                     CLCnSEL1        equ	217	;# 
  1069   0000DA                     CLCnSEL2        equ	218	;# 
  1070   0000DB                     CLCnSEL3        equ	219	;# 
  1071   0000DC                     CLCnGLS0        equ	220	;# 
  1072   0000DD                     CLCnGLS1        equ	221	;# 
  1073   0000DE                     CLCnGLS2        equ	222	;# 
  1074   0000DF                     CLCnGLS3        equ	223	;# 
  1075   0000E8                     DMASELECT       equ	232	;# 
  1076   0000E9                     DMAnBUF         equ	233	;# 
  1077   0000EA                     DMAnDCNT        equ	234	;# 
  1078   0000EA                     DMAnDCNTL       equ	234	;# 
  1079   0000EB                     DMAnDCNTH       equ	235	;# 
  1080   0000EC                     DMAnDPTR        equ	236	;# 
  1081   0000EC                     DMAnDPTRL       equ	236	;# 
  1082   0000ED                     DMAnDPTRH       equ	237	;# 
  1083   0000EE                     DMAnDSZ         equ	238	;# 
  1084   0000EE                     DMAnDSZL        equ	238	;# 
  1085   0000EF                     DMAnDSZH        equ	239	;# 
  1086   0000F0                     DMAnDSA         equ	240	;# 
  1087   0000F0                     DMAnDSAL        equ	240	;# 
  1088   0000F1                     DMAnDSAH        equ	241	;# 
  1089   0000F2                     DMAnSCNT        equ	242	;# 
  1090   0000F2                     DMAnSCNTL       equ	242	;# 
  1091   0000F3                     DMAnSCNTH       equ	243	;# 
  1092   0000F4                     DMAnSPTR        equ	244	;# 
  1093   0000F4                     DMAnSPTRL       equ	244	;# 
  1094   0000F5                     DMAnSPTRH       equ	245	;# 
  1095   0000F6                     DMAnSPTRU       equ	246	;# 
  1096   0000F7                     DMAnSSZ         equ	247	;# 
  1097   0000F7                     DMAnSSZL        equ	247	;# 
  1098   0000F8                     DMAnSSZH        equ	248	;# 
  1099   0000F9                     DMAnSSA         equ	249	;# 
  1100   0000F9                     DMAnSSAL        equ	249	;# 
  1101   0000FA                     DMAnSSAH        equ	250	;# 
  1102   0000FB                     DMAnSSAU        equ	251	;# 
  1103   0000FC                     DMAnCON0        equ	252	;# 
  1104   0000FD                     DMAnCON1        equ	253	;# 
  1105   0000FE                     DMAnAIRQ        equ	254	;# 
  1106   0000FF                     DMAnSIRQ        equ	255	;# 
  1107   000200                     PPSLOCK         equ	512	;# 
  1108   000201                     RA0PPS          equ	513	;# 
  1109   000202                     RA1PPS          equ	514	;# 
  1110   000203                     RA2PPS          equ	515	;# 
  1111   000204                     RA3PPS          equ	516	;# 
  1112   000205                     RA4PPS          equ	517	;# 
  1113   000206                     RA5PPS          equ	518	;# 
  1114   000207                     RA6PPS          equ	519	;# 
  1115   000208                     RA7PPS          equ	520	;# 
  1116   000209                     RB0PPS          equ	521	;# 
  1117   00020A                     RB1PPS          equ	522	;# 
  1118   00020B                     RB2PPS          equ	523	;# 
  1119   00020C                     RB3PPS          equ	524	;# 
  1120   00020D                     RB4PPS          equ	525	;# 
  1121   00020E                     RB5PPS          equ	526	;# 
  1122   00020F                     RB6PPS          equ	527	;# 
  1123   000210                     RB7PPS          equ	528	;# 
  1124   000211                     RC0PPS          equ	529	;# 
  1125   000212                     RC1PPS          equ	530	;# 
  1126   000213                     RC2PPS          equ	531	;# 
  1127   000214                     RC3PPS          equ	532	;# 
  1128   000215                     RC4PPS          equ	533	;# 
  1129   000216                     RC5PPS          equ	534	;# 
  1130   000217                     RC6PPS          equ	535	;# 
  1131   000218                     RC7PPS          equ	536	;# 
  1132   000219                     RD0PPS          equ	537	;# 
  1133   00021A                     RD1PPS          equ	538	;# 
  1134   00021B                     RD2PPS          equ	539	;# 
  1135   00021C                     RD3PPS          equ	540	;# 
  1136   00021D                     RD4PPS          equ	541	;# 
  1137   00021E                     RD5PPS          equ	542	;# 
  1138   00021F                     RD6PPS          equ	543	;# 
  1139   000220                     RD7PPS          equ	544	;# 
  1140   000221                     RE0PPS          equ	545	;# 
  1141   000222                     RE1PPS          equ	546	;# 
  1142   000223                     RE2PPS          equ	547	;# 
  1143   000229                     RF0PPS          equ	553	;# 
  1144   00022A                     RF1PPS          equ	554	;# 
  1145   00022B                     RF2PPS          equ	555	;# 
  1146   00022C                     RF3PPS          equ	556	;# 
  1147   00022D                     RF4PPS          equ	557	;# 
  1148   00022E                     RF5PPS          equ	558	;# 
  1149   00022F                     RF6PPS          equ	559	;# 
  1150   000230                     RF7PPS          equ	560	;# 
  1151   00023E                     INT0PPS         equ	574	;# 
  1152   00023F                     INT1PPS         equ	575	;# 
  1153   000240                     INT2PPS         equ	576	;# 
  1154   000241                     T0CKIPPS        equ	577	;# 
  1155   000242                     T1CKIPPS        equ	578	;# 
  1156   000243                     T1GPPS          equ	579	;# 
  1157   000244                     T3CKIPPS        equ	580	;# 
  1158   000245                     T3GPPS          equ	581	;# 
  1159   000246                     T5CKIPPS        equ	582	;# 
  1160   000247                     T5GPPS          equ	583	;# 
  1161   000248                     T2INPPS         equ	584	;# 
  1162   000249                     T4INPPS         equ	585	;# 
  1163   00024A                     T6INPPS         equ	586	;# 
  1164   00024F                     CCP1PPS         equ	591	;# 
  1165   000250                     CCP2PPS         equ	592	;# 
  1166   000251                     CCP3PPS         equ	593	;# 
  1167   000253                     PWM1ERSPPS      equ	595	;# 
  1168   000254                     PWM2ERSPPS      equ	596	;# 
  1169   000255                     PWM3ERSPPS      equ	597	;# 
  1170   000257                     PWMIN0PPS       equ	599	;# 
  1171   000258                     PWMIN1PPS       equ	600	;# 
  1172   000259                     SMT1WINPPS      equ	601	;# 
  1173   00025A                     SMT1SIGPPS      equ	602	;# 
  1174   00025B                     CWG1PPS         equ	603	;# 
  1175   00025B                     CWG1INPPS       equ	603	;# 
  1176   00025C                     CWG2PPS         equ	604	;# 
  1177   00025C                     CWG2INPPS       equ	604	;# 
  1178   00025D                     CWG3PPS         equ	605	;# 
  1179   00025D                     CWG3INPPS       equ	605	;# 
  1180   00025E                     MD1CARLPPS      equ	606	;# 
  1181   00025E                     MDCARLPPS       equ	606	;# 
  1182   00025F                     MD1CARHPPS      equ	607	;# 
  1183   00025F                     MDCARHPPS       equ	607	;# 
  1184   000260                     MD1SRCPPS       equ	608	;# 
  1185   000260                     MDSRCPPS        equ	608	;# 
  1186   000261                     CLCIN0PPS       equ	609	;# 
  1187   000262                     CLCIN1PPS       equ	610	;# 
  1188   000263                     CLCIN2PPS       equ	611	;# 
  1189   000264                     CLCIN3PPS       equ	612	;# 
  1190   000265                     CLCIN4PPS       equ	613	;# 
  1191   000266                     CLCIN5PPS       equ	614	;# 
  1192   000267                     CLCIN6PPS       equ	615	;# 
  1193   000268                     CLCIN7PPS       equ	616	;# 
  1194   000269                     ADACTPPS        equ	617	;# 
  1195   00026A                     SPI1SCKPPS      equ	618	;# 
  1196   00026B                     SPI1SDIPPS      equ	619	;# 
  1197   00026C                     SPI1SSPPS       equ	620	;# 
  1198   00026D                     SPI2SCKPPS      equ	621	;# 
  1199   00026E                     SPI2SDIPPS      equ	622	;# 
  1200   00026F                     SPI2SSPPS       equ	623	;# 
  1201   000270                     I2C1SDAPPS      equ	624	;# 
  1202   000271                     I2C1SCLPPS      equ	625	;# 
  1203   000272                     U1RXPPS         equ	626	;# 
  1204   000273                     U1CTSPPS        equ	627	;# 
  1205   000274                     U2RXPPS         equ	628	;# 
  1206   000275                     U2CTSPPS        equ	629	;# 
  1207   000276                     U3RXPPS         equ	630	;# 
  1208   000277                     U3CTSPPS        equ	631	;# 
  1209   000278                     U4RXPPS         equ	632	;# 
  1210   000279                     U4CTSPPS        equ	633	;# 
  1211   00027A                     U5RXPPS         equ	634	;# 
  1212   00027B                     U5CTSPPS        equ	635	;# 
  1213   000286                     RC4I2C          equ	646	;# 
  1214   000287                     RC3I2C          equ	647	;# 
  1215   000288                     RB2I2C          equ	648	;# 
  1216   000289                     RB1I2C          equ	649	;# 
  1217   00028B                     I2C1RXB         equ	651	;# 
  1218   00028C                     I2C1TXB         equ	652	;# 
  1219   00028D                     I2C1CNT         equ	653	;# 
  1220   00028E                     I2C1ADB0        equ	654	;# 
  1221   00028F                     I2C1ADB1        equ	655	;# 
  1222   000290                     I2C1ADR0        equ	656	;# 
  1223   000291                     I2C1ADR1        equ	657	;# 
  1224   000292                     I2C1ADR2        equ	658	;# 
  1225   000293                     I2C1ADR3        equ	659	;# 
  1226   000294                     I2C1CON0        equ	660	;# 
  1227   000295                     I2C1CON1        equ	661	;# 
  1228   000296                     I2C1CON2        equ	662	;# 
  1229   000297                     I2C1ERR         equ	663	;# 
  1230   000298                     I2C1STAT0       equ	664	;# 
  1231   000299                     I2C1STAT1       equ	665	;# 
  1232   00029A                     I2C1PIR         equ	666	;# 
  1233   00029B                     I2C1PIE         equ	667	;# 
  1234   00029C                     I2C1CLK         equ	668	;# 
  1235   00029D                     I2C1BTO         equ	669	;# 
  1236   0002A1                     U1RXB           equ	673	;# 
  1237   0002A1                     U1RXBL          equ	673	;# 
  1238   0002A2                     U1RXCHK         equ	674	;# 
  1239   0002A3                     U1TXB           equ	675	;# 
  1240   0002A3                     U1TXBL          equ	675	;# 
  1241   0002A4                     U1TXCHK         equ	676	;# 
  1242   0002A5                     U1P1            equ	677	;# 
  1243   0002A5                     U1P1L           equ	677	;# 
  1244   0002A6                     U1P1H           equ	678	;# 
  1245   0002A7                     U1P2            equ	679	;# 
  1246   0002A7                     U1P2L           equ	679	;# 
  1247   0002A8                     U1P2H           equ	680	;# 
  1248   0002A9                     U1P3            equ	681	;# 
  1249   0002A9                     U1P3L           equ	681	;# 
  1250   0002AA                     U1P3H           equ	682	;# 
  1251   0002AB                     U1CON0          equ	683	;# 
  1252   0002AC                     U1CON1          equ	684	;# 
  1253   0002AD                     U1CON2          equ	685	;# 
  1254   0002AE                     U1BRG           equ	686	;# 
  1255   0002AE                     U1BRGL          equ	686	;# 
  1256   0002AF                     U1BRGH          equ	687	;# 
  1257   0002B0                     U1FIFO          equ	688	;# 
  1258   0002B1                     U1UIR           equ	689	;# 
  1259   0002B2                     U1ERRIR         equ	690	;# 
  1260   0002B3                     U1ERRIE         equ	691	;# 
  1261   0002B4                     U2RXB           equ	692	;# 
  1262   0002B4                     U2RXBL          equ	692	;# 
  1263   0002B6                     U2TXB           equ	694	;# 
  1264   0002B6                     U2TXBL          equ	694	;# 
  1265   0002B8                     U2P1            equ	696	;# 
  1266   0002B8                     U2P1L           equ	696	;# 
  1267   0002BA                     U2P2            equ	698	;# 
  1268   0002BA                     U2P2L           equ	698	;# 
  1269   0002BC                     U2P3            equ	700	;# 
  1270   0002BC                     U2P3L           equ	700	;# 
  1271   0002BE                     U2CON0          equ	702	;# 
  1272   0002BF                     U2CON1          equ	703	;# 
  1273   0002C0                     U2CON2          equ	704	;# 
  1274   0002C1                     U2BRG           equ	705	;# 
  1275   0002C1                     U2BRGL          equ	705	;# 
  1276   0002C2                     U2BRGH          equ	706	;# 
  1277   0002C3                     U2FIFO          equ	707	;# 
  1278   0002C4                     U2UIR           equ	708	;# 
  1279   0002C5                     U2ERRIR         equ	709	;# 
  1280   0002C6                     U2ERRIE         equ	710	;# 
  1281   0002C7                     U3RXB           equ	711	;# 
  1282   0002C7                     U3RXBL          equ	711	;# 
  1283   0002C9                     U3TXB           equ	713	;# 
  1284   0002C9                     U3TXBL          equ	713	;# 
  1285   0002CB                     U3P1            equ	715	;# 
  1286   0002CB                     U3P1L           equ	715	;# 
  1287   0002CD                     U3P2            equ	717	;# 
  1288   0002CD                     U3P2L           equ	717	;# 
  1289   0002CF                     U3P3            equ	719	;# 
  1290   0002CF                     U3P3L           equ	719	;# 
  1291   0002D1                     U3CON0          equ	721	;# 
  1292   0002D2                     U3CON1          equ	722	;# 
  1293   0002D3                     U3CON2          equ	723	;# 
  1294   0002D4                     U3BRG           equ	724	;# 
  1295   0002D4                     U3BRGL          equ	724	;# 
  1296   0002D5                     U3BRGH          equ	725	;# 
  1297   0002D6                     U3FIFO          equ	726	;# 
  1298   0002D7                     U3UIR           equ	727	;# 
  1299   0002D8                     U3ERRIR         equ	728	;# 
  1300   0002D9                     U3ERRIE         equ	729	;# 
  1301   0002DA                     U4RXB           equ	730	;# 
  1302   0002DA                     U4RXBL          equ	730	;# 
  1303   0002DC                     U4TXB           equ	732	;# 
  1304   0002DC                     U4TXBL          equ	732	;# 
  1305   0002DE                     U4P1            equ	734	;# 
  1306   0002DE                     U4P1L           equ	734	;# 
  1307   0002E0                     U4P2            equ	736	;# 
  1308   0002E0                     U4P2L           equ	736	;# 
  1309   0002E2                     U4P3            equ	738	;# 
  1310   0002E2                     U4P3L           equ	738	;# 
  1311   0002E4                     U4CON0          equ	740	;# 
  1312   0002E5                     U4CON1          equ	741	;# 
  1313   0002E6                     U4CON2          equ	742	;# 
  1314   0002E7                     U4BRG           equ	743	;# 
  1315   0002E7                     U4BRGL          equ	743	;# 
  1316   0002E8                     U4BRGH          equ	744	;# 
  1317   0002E9                     U4FIFO          equ	745	;# 
  1318   0002EA                     U4UIR           equ	746	;# 
  1319   0002EB                     U4ERRIR         equ	747	;# 
  1320   0002EC                     U4ERRIE         equ	748	;# 
  1321   0002ED                     U5RXB           equ	749	;# 
  1322   0002ED                     U5RXBL          equ	749	;# 
  1323   0002EF                     U5TXB           equ	751	;# 
  1324   0002EF                     U5TXBL          equ	751	;# 
  1325   0002F1                     U5P1            equ	753	;# 
  1326   0002F1                     U5P1L           equ	753	;# 
  1327   0002F3                     U5P2            equ	755	;# 
  1328   0002F3                     U5P2L           equ	755	;# 
  1329   0002F5                     U5P3            equ	757	;# 
  1330   0002F5                     U5P3L           equ	757	;# 
  1331   0002F7                     U5CON0          equ	759	;# 
  1332   0002F8                     U5CON1          equ	760	;# 
  1333   0002F9                     U5CON2          equ	761	;# 
  1334   0002FA                     U5BRG           equ	762	;# 
  1335   0002FA                     U5BRGL          equ	762	;# 
  1336   0002FB                     U5BRGH          equ	763	;# 
  1337   0002FC                     U5FIFO          equ	764	;# 
  1338   0002FD                     U5UIR           equ	765	;# 
  1339   0002FE                     U5ERRIR         equ	766	;# 
  1340   0002FF                     U5ERRIE         equ	767	;# 
  1341   000300                     SMT1TMR         equ	768	;# 
  1342   000300                     SMT1TMRL        equ	768	;# 
  1343   000301                     SMT1TMRH        equ	769	;# 
  1344   000302                     SMT1TMRU        equ	770	;# 
  1345   000303                     SMT1CPR         equ	771	;# 
  1346   000303                     SMT1CPRL        equ	771	;# 
  1347   000304                     SMT1CPRH        equ	772	;# 
  1348   000305                     SMT1CPRU        equ	773	;# 
  1349   000306                     SMT1CPW         equ	774	;# 
  1350   000306                     SMT1CPWL        equ	774	;# 
  1351   000307                     SMT1CPWH        equ	775	;# 
  1352   000308                     SMT1CPWU        equ	776	;# 
  1353   000309                     SMT1PR          equ	777	;# 
  1354   000309                     SMT1PRL         equ	777	;# 
  1355   00030A                     SMT1PRH         equ	778	;# 
  1356   00030B                     SMT1PRU         equ	779	;# 
  1357   00030C                     SMT1CON0        equ	780	;# 
  1358   00030D                     SMT1CON1        equ	781	;# 
  1359   00030E                     SMT1STAT        equ	782	;# 
  1360   00030F                     SMT1CLK         equ	783	;# 
  1361   000310                     SMT1SIG         equ	784	;# 
  1362   000311                     SMT1WIN         equ	785	;# 
  1363   000318                     TMR0L           equ	792	;# 
  1364   000318                     TMR0            equ	792	;# 
  1365   000319                     TMR0H           equ	793	;# 
  1366   000319                     PR0             equ	793	;# 
  1367   00031A                     T0CON0          equ	794	;# 
  1368   00031B                     T0CON1          equ	795	;# 
  1369   00031C                     TMR1            equ	796	;# 
  1370   00031C                     TMR1L           equ	796	;# 
  1371   00031D                     TMR1H           equ	797	;# 
  1372   00031E                     T1CON           equ	798	;# 
  1373   00031E                     TMR1CON         equ	798	;# 
  1374   00031F                     T1GCON          equ	799	;# 
  1375   00031F                     TMR1GCON        equ	799	;# 
  1376   000320                     T1GATE          equ	800	;# 
  1377   000320                     TMR1GATE        equ	800	;# 
  1378   000321                     T1CLK           equ	801	;# 
  1379   000321                     TMR1CLK         equ	801	;# 
  1380   000321                     PR1             equ	801	;# 
  1381   000322                     T2TMR           equ	802	;# 
  1382   000322                     TMR2            equ	802	;# 
  1383   000323                     T2PR            equ	803	;# 
  1384   000323                     PR2             equ	803	;# 
  1385   000324                     T2CON           equ	804	;# 
  1386   000325                     T2HLT           equ	805	;# 
  1387   000326                     T2CLKCON        equ	806	;# 
  1388   000326                     T2CLK           equ	806	;# 
  1389   000327                     T2RST           equ	807	;# 
  1390   000328                     TMR3            equ	808	;# 
  1391   000328                     TMR3L           equ	808	;# 
  1392   000329                     TMR3H           equ	809	;# 
  1393   00032A                     T3CON           equ	810	;# 
  1394   00032A                     TMR3CON         equ	810	;# 
  1395   00032B                     T3GCON          equ	811	;# 
  1396   00032B                     TMR3GCON        equ	811	;# 
  1397   00032C                     T3GATE          equ	812	;# 
  1398   00032C                     TMR3GATE        equ	812	;# 
  1399   00032D                     T3CLK           equ	813	;# 
  1400   00032D                     TMR3CLK         equ	813	;# 
  1401   00032D                     PR3             equ	813	;# 
  1402   00032E                     T4TMR           equ	814	;# 
  1403   00032E                     TMR4            equ	814	;# 
  1404   00032F                     T4PR            equ	815	;# 
  1405   00032F                     PR4             equ	815	;# 
  1406   000330                     T4CON           equ	816	;# 
  1407   000331                     T4HLT           equ	817	;# 
  1408   000332                     T4CLKCON        equ	818	;# 
  1409   000332                     T4CLK           equ	818	;# 
  1410   000333                     T4RST           equ	819	;# 
  1411   000334                     TMR5            equ	820	;# 
  1412   000334                     TMR5L           equ	820	;# 
  1413   000335                     TMR5H           equ	821	;# 
  1414   000336                     T5CON           equ	822	;# 
  1415   000336                     TMR5CON         equ	822	;# 
  1416   000337                     T5GCON          equ	823	;# 
  1417   000337                     TMR5GCON        equ	823	;# 
  1418   000338                     T5GATE          equ	824	;# 
  1419   000338                     TMR5GATE        equ	824	;# 
  1420   000339                     T5CLK           equ	825	;# 
  1421   000339                     TMR5CLK         equ	825	;# 
  1422   000339                     PR5             equ	825	;# 
  1423   00033A                     T6TMR           equ	826	;# 
  1424   00033A                     TMR6            equ	826	;# 
  1425   00033B                     T6PR            equ	827	;# 
  1426   00033B                     PR6             equ	827	;# 
  1427   00033C                     T6CON           equ	828	;# 
  1428   00033D                     T6HLT           equ	829	;# 
  1429   00033E                     T6CLKCON        equ	830	;# 
  1430   00033E                     T6CLK           equ	830	;# 
  1431   00033F                     T6RST           equ	831	;# 
  1432   000340                     CCPR1           equ	832	;# 
  1433   000340                     CCPR1L          equ	832	;# 
  1434   000341                     CCPR1H          equ	833	;# 
  1435   000342                     CCP1CON         equ	834	;# 
  1436   000343                     CCP1CAP         equ	835	;# 
  1437   000344                     CCPR2           equ	836	;# 
  1438   000344                     CCPR2L          equ	836	;# 
  1439   000345                     CCPR2H          equ	837	;# 
  1440   000346                     CCP2CON         equ	838	;# 
  1441   000347                     CCP2CAP         equ	839	;# 
  1442   000348                     CCPR3           equ	840	;# 
  1443   000348                     CCPR3L          equ	840	;# 
  1444   000349                     CCPR3H          equ	841	;# 
  1445   00034A                     CCP3CON         equ	842	;# 
  1446   00034B                     CCP3CAP         equ	843	;# 
  1447   00034C                     CCPTMRS0        equ	844	;# 
  1448   00034F                     CRCDATA         equ	847	;# 
  1449   00034F                     CRCDATL         equ	847	;# 
  1450   000350                     CRCDATH         equ	848	;# 
  1451   000351                     CRCACC          equ	849	;# 
  1452   000351                     CRCACCL         equ	849	;# 
  1453   000352                     CRCACCH         equ	850	;# 
  1454   000353                     CRCSHFT         equ	851	;# 
  1455   000353                     CRCSHIFTL       equ	851	;# 
  1456   000354                     CRCSHIFTH       equ	852	;# 
  1457   000355                     CRCXOR          equ	853	;# 
  1458   000355                     CRCXORL         equ	853	;# 
  1459   000356                     CRCXORH         equ	854	;# 
  1460   000357                     CRCCON0         equ	855	;# 
  1461   000358                     CRCCON1         equ	856	;# 
  1462   00035A                     SCANLADR        equ	858	;# 
  1463   00035A                     SCANLADRL       equ	858	;# 
  1464   00035B                     SCANLADRH       equ	859	;# 
  1465   00035C                     SCANLADRU       equ	860	;# 
  1466   00035D                     SCANHADR        equ	861	;# 
  1467   00035D                     SCANHADRL       equ	861	;# 
  1468   00035E                     SCANHADRH       equ	862	;# 
  1469   00035F                     SCANHADRU       equ	863	;# 
  1470   000360                     SCANCON0        equ	864	;# 
  1471   000361                     SCANTRIG        equ	865	;# 
  1472   000362                     IPR0            equ	866	;# 
  1473   000363                     IPR1            equ	867	;# 
  1474   000364                     IPR2            equ	868	;# 
  1475   000365                     IPR3            equ	869	;# 
  1476   000366                     IPR4            equ	870	;# 
  1477   000367                     IPR5            equ	871	;# 
  1478   000368                     IPR6            equ	872	;# 
  1479   000369                     IPR7            equ	873	;# 
  1480   00036A                     IPR8            equ	874	;# 
  1481   00036B                     IPR9            equ	875	;# 
  1482   00036C                     IPR10           equ	876	;# 
  1483   00036D                     IPR11           equ	877	;# 
  1484   00036E                     IPR12           equ	878	;# 
  1485   00036F                     IPR13           equ	879	;# 
  1486   000370                     IPR14           equ	880	;# 
  1487   000371                     IPR15           equ	881	;# 
  1488   000373                     STATUS_CSHAD    equ	883	;# 
  1489   000374                     WREG_CSHAD      equ	884	;# 
  1490   000375                     BSR_CSHAD       equ	885	;# 
  1491   000376                     SHADCON         equ	886	;# 
  1492   000377                     STATUS_SHAD     equ	887	;# 
  1493   000378                     WREG_SHAD       equ	888	;# 
  1494   000379                     BSR_SHAD        equ	889	;# 
  1495   00037A                     PCLATH_SHAD     equ	890	;# 
  1496   00037B                     PCLATU_SHAD     equ	891	;# 
  1497   00037C                     FSR0SH          equ	892	;# 
  1498   00037C                     FSR0L_SHAD      equ	892	;# 
  1499   00037D                     FSR0H_SHAD      equ	893	;# 
  1500   00037E                     FSR1SH          equ	894	;# 
  1501   00037E                     FSR1L_SHAD      equ	894	;# 
  1502   00037F                     FSR1H_SHAD      equ	895	;# 
  1503   000380                     FSR2SH          equ	896	;# 
  1504   000380                     FSR2L_SHAD      equ	896	;# 
  1505   000381                     FSR2H_SHAD      equ	897	;# 
  1506   000382                     PRODSH          equ	898	;# 
  1507   000382                     PRODL_SHAD      equ	898	;# 
  1508   000383                     PRODH_SHAD      equ	899	;# 
  1509   0003BC                     CWG1CLK         equ	956	;# 
  1510   0003BC                     CWG1CLKCON      equ	956	;# 
  1511   0003BD                     CWG1ISM         equ	957	;# 
  1512   0003BD                     CWG1DAT         equ	957	;# 
  1513   0003BE                     CWG1DBR         equ	958	;# 
  1514   0003BF                     CWG1DBF         equ	959	;# 
  1515   0003C0                     CWG1CON0        equ	960	;# 
  1516   0003C1                     CWG1CON1        equ	961	;# 
  1517   0003C2                     CWG1AS0         equ	962	;# 
  1518   0003C3                     CWG1AS1         equ	963	;# 
  1519   0003C4                     CWG1STR         equ	964	;# 
  1520   0003C5                     CWG2CLK         equ	965	;# 
  1521   0003C5                     CWG2CLKCON      equ	965	;# 
  1522   0003C6                     CWG2ISM         equ	966	;# 
  1523   0003C6                     CWG2DAT         equ	966	;# 
  1524   0003C7                     CWG2DBR         equ	967	;# 
  1525   0003C8                     CWG2DBF         equ	968	;# 
  1526   0003C9                     CWG2CON0        equ	969	;# 
  1527   0003CA                     CWG2CON1        equ	970	;# 
  1528   0003CB                     CWG2AS0         equ	971	;# 
  1529   0003CC                     CWG2AS1         equ	972	;# 
  1530   0003CD                     CWG2STR         equ	973	;# 
  1531   0003CE                     CWG3CLK         equ	974	;# 
  1532   0003CE                     CWG3CLKCON      equ	974	;# 
  1533   0003CF                     CWG3ISM         equ	975	;# 
  1534   0003CF                     CWG3DAT         equ	975	;# 
  1535   0003D0                     CWG3DBR         equ	976	;# 
  1536   0003D1                     CWG3DBF         equ	977	;# 
  1537   0003D2                     CWG3CON0        equ	978	;# 
  1538   0003D3                     CWG3CON1        equ	979	;# 
  1539   0003D4                     CWG3AS0         equ	980	;# 
  1540   0003D5                     CWG3AS1         equ	981	;# 
  1541   0003D6                     CWG3STR         equ	982	;# 
  1542   0003D7                     FVRCON          equ	983	;# 
  1543   0003D8                     ADCPCON         equ	984	;# 
  1544   0003D8                     ADCP            equ	984	;# 
  1545   0003D9                     ADLTH           equ	985	;# 
  1546   0003D9                     ADLTHL          equ	985	;# 
  1547   0003DA                     ADLTHH          equ	986	;# 
  1548   0003DB                     ADUTH           equ	987	;# 
  1549   0003DB                     ADUTHL          equ	987	;# 
  1550   0003DC                     ADUTHH          equ	988	;# 
  1551   0003DD                     ADERR           equ	989	;# 
  1552   0003DD                     ADERRL          equ	989	;# 
  1553   0003DE                     ADERRH          equ	990	;# 
  1554   0003DF                     ADSTPT          equ	991	;# 
  1555   0003DF                     ADSTPTL         equ	991	;# 
  1556   0003E0                     ADSTPTH         equ	992	;# 
  1557   0003E1                     ADFLTR          equ	993	;# 
  1558   0003E1                     ADFLTRL         equ	993	;# 
  1559   0003E2                     ADFLTRH         equ	994	;# 
  1560   0003E3                     ADACC           equ	995	;# 
  1561   0003E3                     ADACCL          equ	995	;# 
  1562   0003E4                     ADACCH          equ	996	;# 
  1563   0003E5                     ADACCU          equ	997	;# 
  1564   0003E6                     ADCNT           equ	998	;# 
  1565   0003E7                     ADRPT           equ	999	;# 
  1566   0003E8                     ADPREV          equ	1000	;# 
  1567   0003E8                     ADPREVL         equ	1000	;# 
  1568   0003E9                     ADPREVH         equ	1001	;# 
  1569   0003EA                     ADRES           equ	1002	;# 
  1570   0003EA                     ADRESL          equ	1002	;# 
  1571   0003EB                     ADRESH          equ	1003	;# 
  1572   0003EC                     ADPCH           equ	1004	;# 
  1573   0003EE                     ADACQ           equ	1006	;# 
  1574   0003EE                     ADACQL          equ	1006	;# 
  1575   0003EF                     ADACQH          equ	1007	;# 
  1576   0003F0                     ADCAP           equ	1008	;# 
  1577   0003F1                     ADPRE           equ	1009	;# 
  1578   0003F1                     ADPREL          equ	1009	;# 
  1579   0003F2                     ADPREH          equ	1010	;# 
  1580   0003F3                     ADCON0          equ	1011	;# 
  1581   0003F4                     ADCON1          equ	1012	;# 
  1582   0003F5                     ADCON2          equ	1013	;# 
  1583   0003F6                     ADCON3          equ	1014	;# 
  1584   0003F7                     ADSTAT          equ	1015	;# 
  1585   0003F8                     ADREF           equ	1016	;# 
  1586   0003F9                     ADACT           equ	1017	;# 
  1587   0003FA                     ADCLK           equ	1018	;# 
  1588   000400                     ANSELA          equ	1024	;# 
  1589   000401                     WPUA            equ	1025	;# 
  1590   000402                     ODCONA          equ	1026	;# 
  1591   000403                     SLRCONA         equ	1027	;# 
  1592   000404                     INLVLA          equ	1028	;# 
  1593   000405                     IOCAP           equ	1029	;# 
  1594   000406                     IOCAN           equ	1030	;# 
  1595   000407                     IOCAF           equ	1031	;# 
  1596   000408                     ANSELB          equ	1032	;# 
  1597   000409                     WPUB            equ	1033	;# 
  1598   00040A                     ODCONB          equ	1034	;# 
  1599   00040B                     SLRCONB         equ	1035	;# 
  1600   00040C                     INLVLB          equ	1036	;# 
  1601   00040D                     IOCBP           equ	1037	;# 
  1602   00040E                     IOCBN           equ	1038	;# 
  1603   00040F                     IOCBF           equ	1039	;# 
  1604   000410                     ANSELC          equ	1040	;# 
  1605   000411                     WPUC            equ	1041	;# 
  1606   000412                     ODCONC          equ	1042	;# 
  1607   000413                     SLRCONC         equ	1043	;# 
  1608   000414                     INLVLC          equ	1044	;# 
  1609   000415                     IOCCP           equ	1045	;# 
  1610   000416                     IOCCN           equ	1046	;# 
  1611   000417                     IOCCF           equ	1047	;# 
  1612   000418                     ANSELD          equ	1048	;# 
  1613   000419                     WPUD            equ	1049	;# 
  1614   00041A                     ODCOND          equ	1050	;# 
  1615   00041B                     SLRCOND         equ	1051	;# 
  1616   00041C                     INLVLD          equ	1052	;# 
  1617   000420                     ANSELE          equ	1056	;# 
  1618   000421                     WPUE            equ	1057	;# 
  1619   000422                     ODCONE          equ	1058	;# 
  1620   000423                     SLRCONE         equ	1059	;# 
  1621   000424                     INLVLE          equ	1060	;# 
  1622   000425                     IOCEP           equ	1061	;# 
  1623   000426                     IOCEN           equ	1062	;# 
  1624   000427                     IOCEF           equ	1063	;# 
  1625   000428                     ANSELF          equ	1064	;# 
  1626   000429                     WPUF            equ	1065	;# 
  1627   00042A                     ODCONF          equ	1066	;# 
  1628   00042B                     SLRCONF         equ	1067	;# 
  1629   00042C                     INLVLF          equ	1068	;# 
  1630   000440                     NCO1ACC         equ	1088	;# 
  1631   000440                     NCO1ACCL        equ	1088	;# 
  1632   000441                     NCO1ACCH        equ	1089	;# 
  1633   000442                     NCO1ACCU        equ	1090	;# 
  1634   000443                     NCO1INC         equ	1091	;# 
  1635   000443                     NCO1INCL        equ	1091	;# 
  1636   000444                     NCO1INCH        equ	1092	;# 
  1637   000445                     NCO1INCU        equ	1093	;# 
  1638   000446                     NCO1CON         equ	1094	;# 
  1639   000447                     NCO1CLK         equ	1095	;# 
  1640   000448                     NCO2ACC         equ	1096	;# 
  1641   000448                     NCO2ACCL        equ	1096	;# 
  1642   000449                     NCO2ACCH        equ	1097	;# 
  1643   00044A                     NCO2ACCU        equ	1098	;# 
  1644   00044B                     NCO2INC         equ	1099	;# 
  1645   00044B                     NCO2INCL        equ	1099	;# 
  1646   00044C                     NCO2INCH        equ	1100	;# 
  1647   00044D                     NCO2INCU        equ	1101	;# 
  1648   00044E                     NCO2CON         equ	1102	;# 
  1649   00044F                     NCO2CLK         equ	1103	;# 
  1650   000450                     NCO3ACC         equ	1104	;# 
  1651   000450                     NCO3ACCL        equ	1104	;# 
  1652   000451                     NCO3ACCH        equ	1105	;# 
  1653   000452                     NCO3ACCU        equ	1106	;# 
  1654   000453                     NCO3INC         equ	1107	;# 
  1655   000453                     NCO3INCL        equ	1107	;# 
  1656   000454                     NCO3INCH        equ	1108	;# 
  1657   000455                     NCO3INCU        equ	1109	;# 
  1658   000456                     NCO3CON         equ	1110	;# 
  1659   000457                     NCO3CLK         equ	1111	;# 
  1660   000459                     IVTLOCK         equ	1113	;# 
  1661   00045A                     IVTAD           equ	1114	;# 
  1662   00045A                     IVTADL          equ	1114	;# 
  1663   00045B                     IVTADH          equ	1115	;# 
  1664   00045C                     IVTADU          equ	1116	;# 
  1665   00045D                     IVTBASE         equ	1117	;# 
  1666   00045D                     IVTBASEL        equ	1117	;# 
  1667   00045E                     IVTBASEH        equ	1118	;# 
  1668   00045F                     IVTBASEU        equ	1119	;# 
  1669   000460                     PWM1ERS         equ	1120	;# 
  1670   000461                     PWM1CLK         equ	1121	;# 
  1671   000462                     PWM1LDS         equ	1122	;# 
  1672   000463                     PWM1PR          equ	1123	;# 
  1673   000463                     PWM1PRL         equ	1123	;# 
  1674   000464                     PWM1PRH         equ	1124	;# 
  1675   000465                     PWM1CPRE        equ	1125	;# 
  1676   000466                     PWM1PIPOS       equ	1126	;# 
  1677   000467                     PWM1GIR         equ	1127	;# 
  1678   000468                     PWM1GIE         equ	1128	;# 
  1679   000469                     PWM1CON         equ	1129	;# 
  1680   00046A                     PWM1S1CFG       equ	1130	;# 
  1681   00046B                     PWM1S1P1        equ	1131	;# 
  1682   00046B                     PWM1S1P1L       equ	1131	;# 
  1683   00046C                     PWM1S1P1H       equ	1132	;# 
  1684   00046D                     PWM1S1P2        equ	1133	;# 
  1685   00046D                     PWM1S1P2L       equ	1133	;# 
  1686   00046E                     PWM1S1P2H       equ	1134	;# 
  1687   00046F                     PWM2ERS         equ	1135	;# 
  1688   000470                     PWM2CLK         equ	1136	;# 
  1689   000471                     PWM2LDS         equ	1137	;# 
  1690   000472                     PWM2PR          equ	1138	;# 
  1691   000472                     PWM2PRL         equ	1138	;# 
  1692   000473                     PWM2PRH         equ	1139	;# 
  1693   000474                     PWM2CPRE        equ	1140	;# 
  1694   000475                     PWM2PIPOS       equ	1141	;# 
  1695   000476                     PWM2GIR         equ	1142	;# 
  1696   000477                     PWM2GIE         equ	1143	;# 
  1697   000478                     PWM2CON         equ	1144	;# 
  1698   000479                     PWM2S1CFG       equ	1145	;# 
  1699   00047A                     PWM2S1P1        equ	1146	;# 
  1700   00047A                     PWM2S1P1L       equ	1146	;# 
  1701   00047B                     PWM2S1P1H       equ	1147	;# 
  1702   00047C                     PWM2S1P2        equ	1148	;# 
  1703   00047C                     PWM2S1P2L       equ	1148	;# 
  1704   00047D                     PWM2S1P2H       equ	1149	;# 
  1705   00047E                     PWM3ERS         equ	1150	;# 
  1706   00047F                     PWM3CLK         equ	1151	;# 
  1707   000480                     PWM3LDS         equ	1152	;# 
  1708   000481                     PWM3PR          equ	1153	;# 
  1709   000481                     PWM3PRL         equ	1153	;# 
  1710   000482                     PWM3PRH         equ	1154	;# 
  1711   000483                     PWM3CPRE        equ	1155	;# 
  1712   000484                     PWM3PIPOS       equ	1156	;# 
  1713   000485                     PWM3GIR         equ	1157	;# 
  1714   000486                     PWM3GIE         equ	1158	;# 
  1715   000487                     PWM3CON         equ	1159	;# 
  1716   000488                     PWM3S1CFG       equ	1160	;# 
  1717   000489                     PWM3S1P1        equ	1161	;# 
  1718   000489                     PWM3S1P1L       equ	1161	;# 
  1719   00048A                     PWM3S1P1H       equ	1162	;# 
  1720   00048B                     PWM3S1P2        equ	1163	;# 
  1721   00048B                     PWM3S1P2L       equ	1163	;# 
  1722   00048C                     PWM3S1P2H       equ	1164	;# 
  1723   00049C                     PWMLOAD         equ	1180	;# 
  1724   00049D                     PWMEN           equ	1181	;# 
  1725   00049E                     PIE0            equ	1182	;# 
  1726   00049F                     PIE1            equ	1183	;# 
  1727   0004A0                     PIE2            equ	1184	;# 
  1728   0004A1                     PIE3            equ	1185	;# 
  1729   0004A2                     PIE4            equ	1186	;# 
  1730   0004A3                     PIE5            equ	1187	;# 
  1731   0004A4                     PIE6            equ	1188	;# 
  1732   0004A5                     PIE7            equ	1189	;# 
  1733   0004A6                     PIE8            equ	1190	;# 
  1734   0004A7                     PIE9            equ	1191	;# 
  1735   0004A8                     PIE10           equ	1192	;# 
  1736   0004A9                     PIE11           equ	1193	;# 
  1737   0004AA                     PIE12           equ	1194	;# 
  1738   0004AB                     PIE13           equ	1195	;# 
  1739   0004AC                     PIE14           equ	1196	;# 
  1740   0004AD                     PIE15           equ	1197	;# 
  1741   0004AE                     PIR0            equ	1198	;# 
  1742   0004AF                     PIR1            equ	1199	;# 
  1743   0004B0                     PIR2            equ	1200	;# 
  1744   0004B1                     PIR3            equ	1201	;# 
  1745   0004B2                     PIR4            equ	1202	;# 
  1746   0004B3                     PIR5            equ	1203	;# 
  1747   0004B4                     PIR6            equ	1204	;# 
  1748   0004B5                     PIR7            equ	1205	;# 
  1749   0004B6                     PIR8            equ	1206	;# 
  1750   0004B7                     PIR9            equ	1207	;# 
  1751   0004B8                     PIR10           equ	1208	;# 
  1752   0004B9                     PIR11           equ	1209	;# 
  1753   0004BA                     PIR12           equ	1210	;# 
  1754   0004BB                     PIR13           equ	1211	;# 
  1755   0004BC                     PIR14           equ	1212	;# 
  1756   0004BD                     PIR15           equ	1213	;# 
  1757   0004BE                     LATA            equ	1214	;# 
  1758   0004BF                     LATB            equ	1215	;# 
  1759   0004C0                     LATC            equ	1216	;# 
  1760   0004C1                     LATD            equ	1217	;# 
  1761   0004C2                     LATE            equ	1218	;# 
  1762   0004C3                     LATF            equ	1219	;# 
  1763   0004C6                     TRISA           equ	1222	;# 
  1764   0004C7                     TRISB           equ	1223	;# 
  1765   0004C8                     TRISC           equ	1224	;# 
  1766   0004C9                     TRISD           equ	1225	;# 
  1767   0004CA                     TRISE           equ	1226	;# 
  1768   0004CB                     TRISF           equ	1227	;# 
  1769   0004CE                     PORTA           equ	1230	;# 
  1770   0004CF                     PORTB           equ	1231	;# 
  1771   0004D0                     PORTC           equ	1232	;# 
  1772   0004D1                     PORTD           equ	1233	;# 
  1773   0004D2                     PORTE           equ	1234	;# 
  1774   0004D3                     PORTF           equ	1235	;# 
  1775   0004D6                     INTCON0         equ	1238	;# 
  1776   0004D7                     INTCON1         equ	1239	;# 
  1777   0004D8                     STATUS          equ	1240	;# 
  1778   0004D9                     FSR2            equ	1241	;# 
  1779   0004D9                     FSR2L           equ	1241	;# 
  1780   0004DA                     FSR2H           equ	1242	;# 
  1781   0004DB                     PLUSW2          equ	1243	;# 
  1782   0004DC                     PREINC2         equ	1244	;# 
  1783   0004DD                     POSTDEC2        equ	1245	;# 
  1784   0004DE                     POSTINC2        equ	1246	;# 
  1785   0004DF                     INDF2           equ	1247	;# 
  1786   0004E0                     BSR             equ	1248	;# 
  1787   0004E1                     FSR1            equ	1249	;# 
  1788   0004E1                     FSR1L           equ	1249	;# 
  1789   0004E2                     FSR1H           equ	1250	;# 
  1790   0004E3                     PLUSW1          equ	1251	;# 
  1791   0004E4                     PREINC1         equ	1252	;# 
  1792   0004E5                     POSTDEC1        equ	1253	;# 
  1793   0004E6                     POSTINC1        equ	1254	;# 
  1794   0004E7                     INDF1           equ	1255	;# 
  1795   0004E8                     WREG            equ	1256	;# 
  1796   0004E9                     FSR0            equ	1257	;# 
  1797   0004E9                     FSR0L           equ	1257	;# 
  1798   0004EA                     FSR0H           equ	1258	;# 
  1799   0004EB                     PLUSW0          equ	1259	;# 
  1800   0004EC                     PREINC0         equ	1260	;# 
  1801   0004ED                     POSTDEC0        equ	1261	;# 
  1802   0004EE                     POSTINC0        equ	1262	;# 
  1803   0004EF                     INDF0           equ	1263	;# 
  1804   0004F0                     PCON0           equ	1264	;# 
  1805   0004F1                     PCON1           equ	1265	;# 
  1806   0004F2                     CPUDOZE         equ	1266	;# 
  1807   0004F3                     PROD            equ	1267	;# 
  1808   0004F3                     PRODL           equ	1267	;# 
  1809   0004F4                     PRODH           equ	1268	;# 
  1810   0004F5                     TABLAT          equ	1269	;# 
  1811   0004F6                     TBLPTR          equ	1270	;# 
  1812   0004F6                     TBLPTRL         equ	1270	;# 
  1813   0004F7                     TBLPTRH         equ	1271	;# 
  1814   0004F8                     TBLPTRU         equ	1272	;# 
  1815   0004F9                     PCLAT           equ	1273	;# 
  1816   0004F9                     PCL             equ	1273	;# 
  1817   0004FA                     PCLATH          equ	1274	;# 
  1818   0004FB                     PCLATU          equ	1275	;# 
  1819   0004FC                     STKPTR          equ	1276	;# 
  1820   0004FD                     TOS             equ	1277	;# 
  1821   0004FD                     TOSL            equ	1277	;# 
  1822   0004FE                     TOSH            equ	1278	;# 
  1823   0004FF                     TOSU            equ	1279	;# 
  1824                           
  1825                           	psect	idataCOMRAM
  1826   002AC8                     __pidataCOMRAM:
  1827                           	callstack 0
  1828                           
  1829                           ;initializer for _speed
  1830   002AC8  02                 	db	2
  1831   0000B3                     _OSCEN          set	179
  1832   0000B1                     _OSCFRQ         set	177
  1833   0000AD                     _OSCCON1        set	173
  1834   000240                     _INT2PPS        set	576
  1835   00023F                     _INT1PPS        set	575
  1836   00023E                     _INT0PPS        set	574
  1837   000418                     _ANSELD         set	1048
  1838   000409                     _WPUBbits       set	1033
  1839   000408                     _ANSELBbits     set	1032
  1840   0004B8                     _PIR10bits      set	1208
  1841   0004A8                     _PIE10bits      set	1192
  1842   0004B4                     _PIR6bits       set	1204
  1843   0004A4                     _PIE6bits       set	1188
  1844   0004D6                     _INTCON0bits    set	1238
  1845   0004AF                     _PIR1bits       set	1199
  1846   00049F                     _PIE1bits       set	1183
  1847   0004C7                     _TRISBbits      set	1223
  1848   0004D1                     _PORTD          set	1233
  1849   0004C1                     _LATD           set	1217
  1850   0004C9                     _TRISD          set	1225
  1851   0004C1                     _LATDbits       set	1217
  1852                           
  1853                           	psect	smallconst
  1854   002600                     __psmallconst:
  1855                           	callstack 0
  1856   002600  00                 	db	0
  1857   002601                     STR_2:
  1858   002601  48                 	db	72	;'H'
  1859   002602  6F                 	db	111	;'o'
  1860   002603  6C                 	db	108	;'l'
  1861   002604  61                 	db	97	;'a'
  1862   002605  20                 	db	32
  1863   002606  55                 	db	85	;'U'
  1864   002607  50                 	db	80	;'P'
  1865   002608  43                 	db	67	;'C'
  1866   002609  69                 	db	105	;'i'
  1867   00260A  6E                 	db	110	;'n'
  1868   00260B  6F                 	db	111	;'o'
  1869   00260C  20                 	db	32
  1870   00260D  32                 	db	50	;'2'
  1871   00260E  30                 	db	48	;'0'
  1872   00260F  32                 	db	50	;'2'
  1873   002610  35                 	db	53	;'5'
  1874   002611  00                 	db	0
  1875   002612                     STR_3:
  1876   002612  4B                 	db	75	;'K'
  1877   002613  61                 	db	97	;'a'
  1878   002614  6C                 	db	108	;'l'
  1879   002615  75                 	db	117	;'u'
  1880   002616  6E                 	db	110	;'n'
  1881   002617  20                 	db	32
  1882   002618  4C                 	db	76	;'L'
  1883   002619  61                 	db	97	;'a'
  1884   00261A  75                 	db	117	;'u'
  1885   00261B  20                 	db	32
  1886   00261C  47                 	db	71	;'G'
  1887   00261D  61                 	db	97	;'a'
  1888   00261E  6E                 	db	110	;'n'
  1889   00261F  00                 	db	0
  1890   002620                     STR_1:
  1891   002620  43                 	db	67	;'C'
  1892   002621  75                 	db	117	;'u'
  1893   002622  65                 	db	101	;'e'
  1894   002623  6E                 	db	110	;'n'
  1895   002624  74                 	db	116	;'t'
  1896   002625  61                 	db	97	;'a'
  1897   002626  3A                 	db	58	;':'
  1898   002627  00                 	db	0
  1899   002628  00                 	db	0	; dummy byte at the end
  1900   002600                     __smallconst    set	__psmallconst
  1901   002600                     __mediumconst   set	__psmallconst
  1902   000003                     __activetblptr  equ	3
  1903                           
  1904                           ; #config settings
  1905                           
  1906                           	psect	cinit
  1907   0029A4                     __pcinit:
  1908                           	callstack 0
  1909   0029A4                     start_initialization:
  1910                           	callstack 0
  1911   0029A4                     __initialization:
  1912                           	callstack 0
  1913                           
  1914                           ; Initialize objects allocated to COMRAM (1 bytes)
  1915                           ; load TBLPTR registers with __pidataCOMRAM
  1916   0029A4  0EC8               	movlw	low __pidataCOMRAM
  1917   0029A6  6EF6               	movwf	tblptrl,c
  1918   0029A8  0E2A               	movlw	high __pidataCOMRAM
  1919   0029AA  6EF7               	movwf	tblptrh,c
  1920   0029AC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1921   0029AE  6EF8               	movwf	tblptru,c
  1922   0029B0  0009               	tblrd		*+	;fetch initializer
  1923   0029B2  C4F5 F512          	movff	tablat,__pdataCOMRAM
  1924                           
  1925                           ; Clear objects allocated to COMRAM (3 bytes)
  1926   0029B6  6A11               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1927   0029B8  6A10               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1928   0029BA  6A0F               	clrf	__pbssCOMRAM& (0+255),c
  1929                           
  1930                           ;
  1931                           ; Setup IVTBASE
  1932                           ;
  1933   00045D                     IVTBASEL        equ	1117
  1934   00045E                     IVTBASEH        equ	1118
  1935   00045F                     IVTBASEU        equ	1119
  1936   0029BC  0104               	movlb	4
  1937   0029BE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1938   0029C0  6F5D               	movwf	93,b
  1939   0029C2  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1940   0029C4  6F5E               	movwf	94,b
  1941   0029C6  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1942   0029C8  6F5F               	movwf	95,b
  1943   0029CA                     end_of_initialization:
  1944                           	callstack 0
  1945   0029CA                     __end_of__initialization:
  1946                           	callstack 0
  1947   0029CA  0100               	movlb	0
  1948   0029CC  EF15  F013         	goto	_main	;jump to C main() function
  1949                           
  1950                           	psect	bssCOMRAM
  1951   00050F                     __pbssCOMRAM:
  1952                           	callstack 0
  1953   00050F                     _cuenta:
  1954                           	callstack 0
  1955   00050F                     	ds	2
  1956   000511                     _estado:
  1957                           	callstack 0
  1958   000511                     	ds	1
  1959                           
  1960                           	psect	dataCOMRAM
  1961   000512                     __pdataCOMRAM:
  1962                           	callstack 0
  1963   000512                     _speed:
  1964                           	callstack 0
  1965   000512                     	ds	1
  1966                           
  1967                           	psect	cstackCOMRAM
  1968   000501                     __pcstackCOMRAM:
  1969                           	callstack 0
  1970   000501                     ?___lwmod:
  1971                           	callstack 0
  1972   000501                     ENVIA_NIBBLE@dato:
  1973                           	callstack 0
  1974   000501                     LEER_LCD@aux:
  1975                           	callstack 0
  1976   000501                     ___lwmod@dividend:
  1977                           	callstack 0
  1978   000501                     
  1979                           ; 1 bytes @ 0x0
  1980   000501                     	ds	1
  1981   000502                     ENVIA_CHAR@dato:
  1982                           	callstack 0
  1983   000502                     ENVIA_LCD_CMD@dato:
  1984                           	callstack 0
  1985   000502                     
  1986                           ; 1 bytes @ 0x1
  1987   000502                     	ds	1
  1988   000503                     ENVIA_CHAR@aux:
  1989                           	callstack 0
  1990   000503                     ENVIA_LCD_CMD@aux:
  1991                           	callstack 0
  1992   000503                     ___lwmod@divisor:
  1993                           	callstack 0
  1994                           
  1995                           ; 2 bytes @ 0x2
  1996   000503                     	ds	1
  1997   000504                     POS_CURSOR@columna:
  1998                           	callstack 0
  1999   000504                     CURSOR_ONOFF@estado:
  2000                           	callstack 0
  2001   000504                     ESCRIBE_MENSAJE@cadena:
  2002                           	callstack 0
  2003   000504                     ??_LCD_CONFIG:
  2004                           
  2005                           ; 1 bytes @ 0x3
  2006   000504                     	ds	1
  2007   000505                     POS_CURSOR@fila:
  2008                           	callstack 0
  2009   000505                     ESCRIBE_MENSAJE@tam:
  2010                           	callstack 0
  2011   000505                     ___lwmod@counter:
  2012                           	callstack 0
  2013   000505                     ??_lcd_init:
  2014   000505                     
  2015                           ; 1 bytes @ 0x4
  2016   000505                     	ds	1
  2017   000506                     ?___lwdiv:
  2018                           	callstack 0
  2019   000506                     ___lwdiv@dividend:
  2020                           	callstack 0
  2021   000506                     ??_ESCRIBE_MENSAJE:
  2022                           
  2023                           ; 1 bytes @ 0x5
  2024   000506                     	ds	1
  2025   000507                     ESCRIBE_MENSAJE@i:
  2026                           	callstack 0
  2027                           
  2028                           ; 1 bytes @ 0x6
  2029   000507                     	ds	1
  2030   000508                     ___lwdiv@divisor:
  2031                           	callstack 0
  2032                           
  2033                           ; 2 bytes @ 0x7
  2034   000508                     	ds	2
  2035   00050A                     ___lwdiv@quotient:
  2036                           	callstack 0
  2037   00050A                     
  2038                           ; 1 bytes @ 0x9
  2039   00050A                     	ds	2
  2040   00050C                     ___lwdiv@counter:
  2041                           	callstack 0
  2042                           
  2043                           ; 1 bytes @ 0xB
  2044   00050C                     	ds	1
  2045   00050D                     ??_main:
  2046                           
  2047                           ; 1 bytes @ 0xC
  2048   00050D                     	ds	2
  2049                           
  2050 ;;
  2051 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2052 ;;
  2053 ;; *************** function _main *****************
  2054 ;; Defined at:
  2055 ;;		line 71 in file "maincode04.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;		None
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;		None
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2071 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2073 ;;Total ram usage:        2 bytes
  2074 ;; Hardware stack levels required when called: 5
  2075 ;; This function calls:
  2076 ;;		_BORRAR_LCD
  2077 ;;		_ESCRIBE_MENSAJE
  2078 ;;		_POS_CURSOR
  2079 ;;		_configuro
  2080 ;;		_lcd_init
  2081 ;;		_visualizacion
  2082 ;; This function is called by:
  2083 ;;		Startup code after reset
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text0
  2088   00262A                     __ptext0:
  2089                           	callstack 0
  2090   00262A                     _main:
  2091                           	callstack 122
  2092                           
  2093                           ;maincode04.c: 72:     configuro();
  2094                           
  2095                           ;incstack = 0
  2096   00262A  EC5C  F014         	call	_configuro	;wreg free
  2097                           
  2098                           ; BSR set to: 2
  2099                           ;maincode04.c: 73:     lcd_init();
  2100   00262E  ECFE  F014         	call	_lcd_init	;wreg free
  2101                           
  2102                           ;maincode04.c: 74:     POS_CURSOR(1,0);
  2103   002632  0E00               	movlw	0
  2104   002634  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2105   002636  0E01               	movlw	1
  2106   002638  EC12  F015         	call	_POS_CURSOR
  2107                           
  2108                           ;maincode04.c: 75:     ESCRIBE_MENSAJE("Hola UPCino 2025",16);
  2109   00263C  0E01               	movlw	low STR_2
  2110   00263E  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2111   002640  0E10               	movlw	16
  2112   002642  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2113   002644  ECE8  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2114                           
  2115                           ;maincode04.c: 76:     POS_CURSOR(2,0);
  2116   002648  0E00               	movlw	0
  2117   00264A  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2118   00264C  0E02               	movlw	2
  2119   00264E  EC12  F015         	call	_POS_CURSOR
  2120                           
  2121                           ;maincode04.c: 77:     ESCRIBE_MENSAJE("Kalun Lau Gan",13);
  2122   002652  0E12               	movlw	low STR_3
  2123   002654  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2124   002656  0E0D               	movlw	13
  2125   002658  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2126   00265A  ECE8  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2127                           
  2128                           ;maincode04.c: 78:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
  2129   00265E  0E0B               	movlw	11
  2130   002660  6E0E               	movwf	(??_main+1)^(0+1280),c
  2131   002662  0E26               	movlw	38
  2132   002664  6E0D               	movwf	??_main^(0+1280),c
  2133   002666  0E5E               	movlw	94
  2134   002668                     u287:
  2135   002668  2EE8               	decfsz	wreg,f,c
  2136   00266A  D7FE               	bra	u287
  2137   00266C  2E0D               	decfsz	??_main^(0+1280),f,c
  2138   00266E  D7FC               	bra	u287
  2139   002670  2E0E               	decfsz	(??_main+1)^(0+1280),f,c
  2140   002672  D7FA               	bra	u287
  2141                           
  2142                           ;maincode04.c: 79:     BORRAR_LCD();
  2143   002674  EC60  F015         	call	_BORRAR_LCD	;wreg free
  2144   002678  D01B               	goto	l1256
  2145   00267A                     l1242:
  2146                           
  2147                           ;maincode04.c: 83:                 if(cuenta == 8001){
  2148   00267A  0E41               	movlw	65
  2149   00267C  180F               	xorwf	_cuenta^(0+1280),w,c
  2150   00267E  E108               	bnz	l1246
  2151   002680  0E1F               	movlw	31
  2152   002682  1810               	xorwf	(_cuenta+1)^(0+1280),w,c
  2153   002684  A4D8               	btfss	status,2,c
  2154   002686  D004               	goto	l1246
  2155                           
  2156                           ;maincode04.c: 84:                     cuenta = 0;
  2157   002688  0E00               	movlw	0
  2158   00268A  6E10               	movwf	(_cuenta+1)^(0+1280),c
  2159   00268C  0E00               	movlw	0
  2160   00268E  D00A               	goto	L1
  2161   002690                     l1246:
  2162                           
  2163                           ;maincode04.c: 87:                     cuenta++;
  2164   002690  4A0F               	infsnz	_cuenta^(0+1280),f,c
  2165   002692  2A10               	incf	(_cuenta+1)^(0+1280),f,c
  2166   002694  D014               	goto	l1258
  2167   002696                     l1248:
  2168                           
  2169                           ;maincode04.c: 91:                 if(cuenta == 0){
  2170   002696  500F               	movf	_cuenta^(0+1280),w,c
  2171   002698  1010               	iorwf	(_cuenta+1)^(0+1280),w,c
  2172   00269A  A4D8               	btfss	status,2,c
  2173   00269C  D005               	goto	l1252
  2174                           
  2175                           ;maincode04.c: 92:                     cuenta = 8000;
  2176   00269E  0E1F               	movlw	31
  2177   0026A0  6E10               	movwf	(_cuenta+1)^(0+1280),c
  2178   0026A2  0E40               	movlw	64
  2179   0026A4                     L1:
  2180   0026A4  6E0F               	movwf	_cuenta^(0+1280),c
  2181                           
  2182                           ;maincode04.c: 93:                 }
  2183   0026A6  D00B               	goto	l1258
  2184   0026A8                     l1252:
  2185   0026A8  060F               	decf	_cuenta^(0+1280),f,c
  2186   0026AA  A0D8               	btfss	status,0,c
  2187   0026AC  0610               	decf	(_cuenta+1)^(0+1280),f,c
  2188   0026AE  D007               	goto	l1258
  2189   0026B0                     l1256:
  2190   0026B0  5011               	movf	_estado^(0+1280),w,c
  2191                           
  2192                           ; Switch size 1, requested type "simple"
  2193                           ; Number of cases is 2, Range of values is 0 to 1
  2194                           ; switch strategies available:
  2195                           ; Name         Instructions Cycles
  2196                           ; simple_byte            7     4 (average)
  2197                           ;	Chosen strategy is simple_byte
  2198   0026B2  0A00               	xorlw	0	; case 0
  2199   0026B4  B4D8               	btfsc	status,2,c
  2200   0026B6  D7E1               	goto	l1242
  2201   0026B8  0A01               	xorlw	1	; case 1
  2202   0026BA  B4D8               	btfsc	status,2,c
  2203   0026BC  D7EC               	goto	l1248
  2204   0026BE                     l1258:
  2205                           
  2206                           ;maincode04.c: 97:         visualizacion();
  2207   0026BE  EC7A  F013         	call	_visualizacion	;wreg free
  2208                           
  2209                           ;maincode04.c: 98:         switch(speed){
  2210   0026C2  D010               	goto	l1266
  2211   0026C4                     l1260:
  2212                           
  2213                           ;maincode04.c: 100:                 _delay((unsigned long)((100)*(4000000UL/4000.0)));
  2214   0026C4  0E82               	movlw	130
  2215   0026C6  6E0D               	movwf	??_main^(0+1280),c
  2216   0026C8  0EDE               	movlw	222
  2217   0026CA                     u297:
  2218   0026CA  2EE8               	decfsz	wreg,f,c
  2219   0026CC  D7FE               	bra	u297
  2220   0026CE  2E0D               	decfsz	??_main^(0+1280),f,c
  2221   0026D0  D7FC               	bra	u297
  2222                           
  2223                           ;maincode04.c: 101:                 break;
  2224   0026D2  D7EE               	goto	l1256
  2225   0026D4                     l1262:
  2226                           
  2227                           ;maincode04.c: 103:                 _delay((unsigned long)((10)*(4000000UL/4000.0)));
  2228   0026D4  0E0D               	movlw	13
  2229   0026D6  6E0D               	movwf	??_main^(0+1280),c
  2230   0026D8  0EFC               	movlw	252
  2231   0026DA                     u307:
  2232   0026DA  2EE8               	decfsz	wreg,f,c
  2233   0026DC  D7FE               	bra	u307
  2234   0026DE  2E0D               	decfsz	??_main^(0+1280),f,c
  2235   0026E0  D7FC               	bra	u307
  2236                           
  2237                           ;maincode04.c: 104:                 break;
  2238   0026E2  D7E6               	goto	l1256
  2239   0026E4                     l1266:
  2240   0026E4  5012               	movf	_speed^(0+1280),w,c
  2241                           
  2242                           ; Switch size 1, requested type "simple"
  2243                           ; Number of cases is 2, Range of values is 2 to 3
  2244                           ; switch strategies available:
  2245                           ; Name         Instructions Cycles
  2246                           ; simple_byte            7     4 (average)
  2247                           ;	Chosen strategy is simple_byte
  2248   0026E6  0A02               	xorlw	2	; case 2
  2249   0026E8  B4D8               	btfsc	status,2,c
  2250   0026EA  D7EC               	goto	l1260
  2251   0026EC  0A01               	xorlw	1	; case 3
  2252   0026EE  B4D8               	btfsc	status,2,c
  2253   0026F0  D7F1               	goto	l1262
  2254   0026F2  D7DE               	goto	l1256
  2255   0026F4                     __end_of_main:
  2256                           	callstack 0
  2257                           
  2258 ;; *************** function _visualizacion *****************
  2259 ;; Defined at:
  2260 ;;		line 62 in file "maincode04.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/2
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2278 ;;Total ram usage:        0 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 4
  2281 ;; This function calls:
  2282 ;;		_ENVIA_CHAR
  2283 ;;		_ESCRIBE_MENSAJE
  2284 ;;		_POS_CURSOR
  2285 ;;		___lwdiv
  2286 ;;		___lwmod
  2287 ;; This function is called by:
  2288 ;;		_main
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text1
  2293   0026F4                     __ptext1:
  2294                           	callstack 0
  2295   0026F4                     _visualizacion:
  2296                           	callstack 122
  2297                           
  2298                           ;maincode04.c: 63:     POS_CURSOR(1,0);
  2299                           
  2300                           ;incstack = 0
  2301   0026F4  0E00               	movlw	0
  2302   0026F6  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2303   0026F8  0E01               	movlw	1
  2304   0026FA  EC12  F015         	call	_POS_CURSOR
  2305                           
  2306                           ;maincode04.c: 64:     ESCRIBE_MENSAJE("Cuenta:", 7);
  2307   0026FE  0E20               	movlw	low STR_1
  2308   002700  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2309   002702  0E07               	movlw	7
  2310   002704  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2311   002706  ECE8  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2312                           
  2313                           ;maincode04.c: 65:     ENVIA_CHAR((cuenta / 1000) + 0x30);
  2314   00270A  C50F  F506         	movff	_cuenta,___lwdiv@dividend
  2315   00270E  C510  F507         	movff	_cuenta+1,___lwdiv@dividend+1
  2316   002712  0E03               	movlw	3
  2317   002714  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2318   002716  0EE8               	movlw	232
  2319   002718  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  2320   00271A  EC33  F014         	call	___lwdiv	;wreg free
  2321   00271E  5006               	movf	?___lwdiv^(0+1280),w,c
  2322   002720  0F30               	addlw	48
  2323   002722  ECA0  F014         	call	_ENVIA_CHAR
  2324                           
  2325                           ;maincode04.c: 66:     ENVIA_CHAR(((cuenta % 1000) / 100) + 0x30);
  2326   002726  0E03               	movlw	3
  2327   002728  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2328   00272A  0EE8               	movlw	232
  2329   00272C  6E03               	movwf	___lwmod@divisor^(0+1280),c
  2330   00272E  C50F  F501         	movff	_cuenta,___lwmod@dividend
  2331   002732  C510  F502         	movff	_cuenta+1,___lwmod@dividend+1
  2332   002736  EC7F  F014         	call	___lwmod	;wreg free
  2333   00273A  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  2334   00273E  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  2335   002742  0E00               	movlw	0
  2336   002744  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2337   002746  0E64               	movlw	100
  2338   002748  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  2339   00274A  EC33  F014         	call	___lwdiv	;wreg free
  2340   00274E  5006               	movf	?___lwdiv^(0+1280),w,c
  2341   002750  0F30               	addlw	48
  2342   002752  ECA0  F014         	call	_ENVIA_CHAR
  2343                           
  2344                           ;maincode04.c: 67:     ENVIA_CHAR(((cuenta % 100) / 10) + 0x30);
  2345   002756  0E00               	movlw	0
  2346   002758  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2347   00275A  0E64               	movlw	100
  2348   00275C  6E03               	movwf	___lwmod@divisor^(0+1280),c
  2349   00275E  C50F  F501         	movff	_cuenta,___lwmod@dividend
  2350   002762  C510  F502         	movff	_cuenta+1,___lwmod@dividend+1
  2351   002766  EC7F  F014         	call	___lwmod	;wreg free
  2352   00276A  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  2353   00276E  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  2354   002772  0E00               	movlw	0
  2355   002774  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2356   002776  0E0A               	movlw	10
  2357   002778  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  2358   00277A  EC33  F014         	call	___lwdiv	;wreg free
  2359   00277E  5006               	movf	?___lwdiv^(0+1280),w,c
  2360   002780  0F30               	addlw	48
  2361   002782  ECA0  F014         	call	_ENVIA_CHAR
  2362                           
  2363                           ;maincode04.c: 68:     ENVIA_CHAR((cuenta % 10) + 0x30);
  2364   002786  C50F  F501         	movff	_cuenta,___lwmod@dividend
  2365   00278A  C510  F502         	movff	_cuenta+1,___lwmod@dividend+1
  2366   00278E  0E00               	movlw	0
  2367   002790  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2368   002792  0E0A               	movlw	10
  2369   002794  6E03               	movwf	___lwmod@divisor^(0+1280),c
  2370   002796  EC7F  F014         	call	___lwmod	;wreg free
  2371   00279A  5001               	movf	?___lwmod^(0+1280),w,c
  2372   00279C  0F30               	addlw	48
  2373   00279E  ECA0  F014         	call	_ENVIA_CHAR
  2374   0027A2  0012               	return		;funcret
  2375   0027A4                     __end_of_visualizacion:
  2376                           	callstack 0
  2377                           
  2378 ;; *************** function ___lwmod *****************
  2379 ;; Defined at:
  2380 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  dividend        2    0[COMRAM] unsigned int 
  2383 ;;  divisor         2    2[COMRAM] unsigned int 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  counter         1    4[COMRAM] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  2    0[COMRAM] unsigned int 
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/2
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2398 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2399 ;;Total ram usage:        5 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; Hardware stack levels required when called: 1
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_visualizacion
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text2
  2410   0028FE                     __ptext2:
  2411                           	callstack 0
  2412   0028FE                     ___lwmod:
  2413                           	callstack 124
  2414                           
  2415                           ;incstack = 0
  2416   0028FE  5003               	movf	___lwmod@divisor^(0+1280),w,c
  2417   002900  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  2418   002902  B4D8               	btfsc	status,2,c
  2419   002904  D018               	goto	l684
  2420   002906  0E01               	movlw	1
  2421   002908  6E05               	movwf	___lwmod@counter^(0+1280),c
  2422   00290A  D004               	goto	l1204
  2423   00290C                     l1202:
  2424   00290C  90D8               	bcf	status,0,c
  2425   00290E  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  2426   002910  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  2427   002912  2A05               	incf	___lwmod@counter^(0+1280),f,c
  2428   002914                     l1204:
  2429   002914  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  2430   002916  D7FA               	goto	l1202
  2431   002918                     u240:
  2432   002918  5003               	movf	___lwmod@divisor^(0+1280),w,c
  2433   00291A  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  2434   00291C  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  2435   00291E  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  2436   002920  A0D8               	btfss	status,0,c
  2437   002922  D004               	goto	l1210
  2438   002924  5003               	movf	___lwmod@divisor^(0+1280),w,c
  2439   002926  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  2440   002928  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  2441   00292A  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  2442   00292C                     l1210:
  2443   00292C  90D8               	bcf	status,0,c
  2444   00292E  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  2445   002930  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  2446   002932  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  2447   002934  D7F1               	goto	u240
  2448   002936                     l684:
  2449   002936  C501  F501         	movff	___lwmod@dividend,?___lwmod
  2450   00293A  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  2451   00293E  0012               	return		;funcret
  2452   002940                     __end_of___lwmod:
  2453                           	callstack 0
  2454                           
  2455 ;; *************** function ___lwdiv *****************
  2456 ;; Defined at:
  2457 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  dividend        2    5[COMRAM] unsigned int 
  2460 ;;  divisor         2    7[COMRAM] unsigned int 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  quotient        2    9[COMRAM] unsigned int 
  2463 ;;  counter         1   11[COMRAM] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  2    5[COMRAM] unsigned int 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/2
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2474 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2476 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2477 ;;Total ram usage:        7 bytes
  2478 ;; Hardware stack levels used: 1
  2479 ;; Hardware stack levels required when called: 1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_visualizacion
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text3
  2488   002866                     __ptext3:
  2489                           	callstack 0
  2490   002866                     ___lwdiv:
  2491                           	callstack 124
  2492                           
  2493                           ;incstack = 0
  2494   002866  0E00               	movlw	0
  2495   002868  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  2496   00286A  0E00               	movlw	0
  2497   00286C  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  2498   00286E  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  2499   002870  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  2500   002872  B4D8               	btfsc	status,2,c
  2501   002874  D01C               	goto	l674
  2502   002876  0E01               	movlw	1
  2503   002878  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  2504   00287A  D004               	goto	l1184
  2505   00287C                     l1182:
  2506   00287C  90D8               	bcf	status,0,c
  2507   00287E  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  2508   002880  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  2509   002882  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  2510   002884                     l1184:
  2511   002884  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  2512   002886  D7FA               	goto	l1182
  2513   002888                     u210:
  2514   002888  90D8               	bcf	status,0,c
  2515   00288A  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  2516   00288C  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  2517   00288E  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  2518   002890  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  2519   002892  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  2520   002894  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  2521   002896  A0D8               	btfss	status,0,c
  2522   002898  D005               	goto	l1194
  2523   00289A  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  2524   00289C  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  2525   00289E  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  2526   0028A0  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  2527   0028A2  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  2528   0028A4                     l1194:
  2529   0028A4  90D8               	bcf	status,0,c
  2530   0028A6  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  2531   0028A8  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  2532   0028AA  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  2533   0028AC  D7ED               	goto	u210
  2534   0028AE                     l674:
  2535   0028AE  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  2536   0028B2  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2537   0028B6  0012               	return		;funcret
  2538   0028B8                     __end_of___lwdiv:
  2539                           	callstack 0
  2540                           
  2541 ;; *************** function _POS_CURSOR *****************
  2542 ;; Defined at:
  2543 ;;		line 6 in file "LCD.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  fila            1    wreg     unsigned char 
  2546 ;;  columna         1    3[COMRAM] unsigned char 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  fila            1    4[COMRAM] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/2
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2558 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2559 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2561 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2562 ;;Total ram usage:        2 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 3
  2565 ;; This function calls:
  2566 ;;		_ENVIA_LCD_CMD
  2567 ;; This function is called by:
  2568 ;;		_visualizacion
  2569 ;;		_main
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text4
  2574   002A24                     __ptext4:
  2575                           	callstack 0
  2576   002A24                     _POS_CURSOR:
  2577                           	callstack 122
  2578                           
  2579                           ;incstack = 0
  2580                           ;POS_CURSOR@fila stored from wreg
  2581   002A24  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  2582                           
  2583                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2584   002A26  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  2585   002A28  A4D8               	btfss	status,2,c
  2586   002A2A  D005               	goto	l1164
  2587                           
  2588                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2589   002A2C  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2590   002A2E  0F80               	addlw	128
  2591   002A30  ECB9  F014         	call	_ENVIA_LCD_CMD
  2592                           
  2593                           ;LCD.c: 11:  }
  2594   002A34  0012               	return	
  2595   002A36                     l1164:
  2596   002A36  0E02               	movlw	2
  2597   002A38  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2598   002A3A  A4D8               	btfss	status,2,c
  2599   002A3C  0012               	return	
  2600                           
  2601                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2602   002A3E  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2603   002A40  0FC0               	addlw	192
  2604   002A42  ECB9  F014         	call	_ENVIA_LCD_CMD
  2605   002A46  0012               	return		;funcret
  2606   002A48                     __end_of_POS_CURSOR:
  2607                           	callstack 0
  2608                           
  2609 ;; *************** function _ESCRIBE_MENSAJE *****************
  2610 ;; Defined at:
  2611 ;;		line 41 in file "LCD.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2614 ;;		 -> STR_3(14), STR_2(17), STR_1(8), 
  2615 ;;  tam             1    4[COMRAM] unsigned char 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  i               1    6[COMRAM] unsigned char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/2
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2630 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2631 ;;Total ram usage:        4 bytes
  2632 ;; Hardware stack levels used: 1
  2633 ;; Hardware stack levels required when called: 3
  2634 ;; This function calls:
  2635 ;;		_ENVIA_CHAR
  2636 ;; This function is called by:
  2637 ;;		_visualizacion
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text5
  2643   0029D0                     __ptext5:
  2644                           	callstack 0
  2645   0029D0                     _ESCRIBE_MENSAJE:
  2646                           	callstack 122
  2647                           
  2648                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2649                           
  2650                           ;incstack = 0
  2651   0029D0  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2652                           
  2653                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2654   0029D2  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2655   0029D4  D00E               	goto	l1174
  2656   0029D6                     l1170:
  2657                           
  2658                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2659   0029D6  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  2660   0029D8  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2661   0029DA  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  2662   0029DC  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2663   0029E0                     	if	1	;There is more than 1 active tblptr byte
  2664   0029E0  0E26               	movlw	high __psmallconst
  2665   0029E2  6EF7               	movwf	tblptrh,c
  2666   0029E4                     	endif
  2667   0029E4                     	if	0	;tblptru may be non-zero
  2668   0029E4                     	endif
  2669   0029E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2670   0029E4  0E00               	movlw	low (__psmallconst shr (0+16))
  2671   0029E6  6EF8               	movwf	tblptru,c
  2672   0029E8                     	endif
  2673   0029E8  0008               	tblrd		*
  2674   0029EA  50F5               	movf	tablat,w,c
  2675   0029EC  ECA0  F014         	call	_ENVIA_CHAR
  2676                           
  2677                           ;LCD.c: 47:  }
  2678   0029F0  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  2679   0029F2                     l1174:
  2680   0029F2  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  2681   0029F4  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2682   0029F6  B0D8               	btfsc	status,0,c
  2683   0029F8  0012               	return	
  2684   0029FA  D7ED               	goto	l1170
  2685   0029FC                     __end_of_ESCRIBE_MENSAJE:
  2686                           	callstack 0
  2687                           
  2688 ;; *************** function _ENVIA_CHAR *****************
  2689 ;; Defined at:
  2690 ;;		line 50 in file "LCD.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  dato            1    wreg     unsigned char 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  dato            1    1[COMRAM] unsigned char 
  2695 ;;  aux             1    2[COMRAM] unsigned char 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/2
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2706 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2708 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2709 ;;Total ram usage:        2 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; Hardware stack levels required when called: 2
  2712 ;; This function calls:
  2713 ;;		_ENVIA_NIBBLE
  2714 ;;		_LEER_LCD
  2715 ;; This function is called by:
  2716 ;;		_ESCRIBE_MENSAJE
  2717 ;;		_visualizacion
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           	psect	text6
  2722   002940                     __ptext6:
  2723                           	callstack 0
  2724   002940                     _ENVIA_CHAR:
  2725                           	callstack 122
  2726                           
  2727                           ;incstack = 0
  2728                           ;ENVIA_CHAR@dato stored from wreg
  2729   002940  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2730                           
  2731                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2732   002942  80C1               	bsf	193,0,c	;volatile
  2733                           
  2734                           ;LCD.c: 54:  LEER_LCD();
  2735   002944  ECD2  F013         	call	_LEER_LCD	;wreg free
  2736                           
  2737                           ;LCD.c: 55:  TRISD = 0x00;
  2738   002948  6AC9               	clrf	201,c	;volatile
  2739                           
  2740                           ;LCD.c: 56:         _delay(1200);
  2741   00294A  0EF0               	movlw	240
  2742   00294C                     u317:
  2743   00294C  D000               	nop2	
  2744   00294E  2EE8               	decfsz	wreg,f,c
  2745   002950  D7FD               	bra	u317
  2746                           
  2747                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2748   002952  92C1               	bcf	193,1,c	;volatile
  2749                           
  2750                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2751   002954  94C1               	bcf	193,2,c	;volatile
  2752                           
  2753                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2754   002956  80C1               	bsf	193,0,c	;volatile
  2755                           
  2756                           ;LCD.c: 61:  aux = dato & 0xF0;
  2757   002958  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2758   00295A  0BF0               	andlw	240
  2759   00295C  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2760                           
  2761                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2762   00295E  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2763   002960  EC32  F015         	call	_ENVIA_NIBBLE
  2764                           
  2765                           ;LCD.c: 63:  aux = dato << 4;
  2766   002964  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2767   002966  0BF0               	andlw	240
  2768   002968  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2769                           
  2770                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2771   00296A  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2772   00296C  EC32  F015         	call	_ENVIA_NIBBLE
  2773   002970  0012               	return		;funcret
  2774   002972                     __end_of_ENVIA_CHAR:
  2775                           	callstack 0
  2776                           
  2777 ;; *************** function _lcd_init *****************
  2778 ;; Defined at:
  2779 ;;		line 52 in file "maincode04.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;		None
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;		None
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 3F/2
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2795 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2796 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2797 ;;Total ram usage:        1 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 4
  2800 ;; This function calls:
  2801 ;;		_BORRAR_LCD
  2802 ;;		_CURSOR_HOME
  2803 ;;		_CURSOR_ONOFF
  2804 ;;		_LCD_CONFIG
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text7
  2811   0029FC                     __ptext7:
  2812                           	callstack 0
  2813   0029FC                     _lcd_init:
  2814                           	callstack 122
  2815                           
  2816                           ; BSR set to: 2
  2817                           ;maincode04.c: 53:     TRISD = 0x00;
  2818                           
  2819                           ;incstack = 0
  2820   0029FC  6AC9               	clrf	201,c	;volatile
  2821                           
  2822                           ;maincode04.c: 54:     ANSELD = 0x00;
  2823   0029FE  0104               	movlb	4	; () banked
  2824   002A00  6B18               	clrf	24,b	;volatile
  2825                           
  2826                           ; BSR set to: 4
  2827                           ;maincode04.c: 55:     LCD_CONFIG();
  2828   002A02  EC03  F014         	call	_LCD_CONFIG	;wreg free
  2829                           
  2830                           ;maincode04.c: 56:     _delay((unsigned long)((19)*(4000000UL/4000.0)));
  2831   002A06  0E19               	movlw	25
  2832   002A08  6E05               	movwf	??_lcd_init^(0+1280),c
  2833   002A0A  0EAC               	movlw	172
  2834   002A0C                     u327:
  2835   002A0C  2EE8               	decfsz	wreg,f,c
  2836   002A0E  D7FE               	bra	u327
  2837   002A10  2E05               	decfsz	??_lcd_init^(0+1280),f,c
  2838   002A12  D7FC               	bra	u327
  2839                           
  2840                           ;maincode04.c: 57:     BORRAR_LCD();
  2841   002A14  EC60  F015         	call	_BORRAR_LCD	;wreg free
  2842                           
  2843                           ;maincode04.c: 58:     CURSOR_HOME();
  2844   002A18  EC5C  F015         	call	_CURSOR_HOME	;wreg free
  2845                           
  2846                           ;maincode04.c: 59:     CURSOR_ONOFF(1);
  2847   002A1C  0E01               	movlw	1
  2848   002A1E  EC24  F015         	call	_CURSOR_ONOFF
  2849   002A22  0012               	return		;funcret
  2850   002A24                     __end_of_lcd_init:
  2851                           	callstack 0
  2852                           
  2853 ;; *************** function _LCD_CONFIG *****************
  2854 ;; Defined at:
  2855 ;;		line 72 in file "LCD.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 3F/4
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2872 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2873 ;;Total ram usage:        1 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; Hardware stack levels required when called: 3
  2876 ;; This function calls:
  2877 ;;		_ENVIA_LCD_CMD
  2878 ;;		_ENVIA_NIBBLE
  2879 ;; This function is called by:
  2880 ;;		_lcd_init
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text8
  2885   002806                     __ptext8:
  2886                           	callstack 0
  2887   002806                     _LCD_CONFIG:
  2888                           	callstack 122
  2889                           
  2890                           ; BSR set to: 4
  2891                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  2892                           
  2893                           ;incstack = 0
  2894   002806  90C1               	bcf	193,0,c	;volatile
  2895                           
  2896                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  2897   002808  92C1               	bcf	193,1,c	;volatile
  2898                           
  2899                           ; BSR set to: 4
  2900                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  2901   00280A  0E30               	movlw	48
  2902   00280C  EC32  F015         	call	_ENVIA_NIBBLE
  2903                           
  2904                           ;LCD.c: 77:         _delay(24000);
  2905   002810  0E20               	movlw	32
  2906   002812  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2907   002814  0E2A               	movlw	42
  2908   002816                     u337:
  2909   002816  2EE8               	decfsz	wreg,f,c
  2910   002818  D7FE               	bra	u337
  2911   00281A  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2912   00281C  D7FC               	bra	u337
  2913                           
  2914                           ;LCD.c: 78:         _delay(24000);
  2915   00281E  0E20               	movlw	32
  2916   002820  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2917   002822  0E2A               	movlw	42
  2918   002824                     u347:
  2919   002824  2EE8               	decfsz	wreg,f,c
  2920   002826  D7FE               	bra	u347
  2921   002828  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2922   00282A  D7FC               	bra	u347
  2923                           
  2924                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  2925   00282C  0E30               	movlw	48
  2926   00282E  EC32  F015         	call	_ENVIA_NIBBLE
  2927                           
  2928                           ;LCD.c: 83:  _delay(1200);
  2929   002832  0EF0               	movlw	240
  2930   002834                     u357:
  2931   002834  D000               	nop2	
  2932   002836  2EE8               	decfsz	wreg,f,c
  2933   002838  D7FD               	bra	u357
  2934                           
  2935                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  2936   00283A  0E30               	movlw	48
  2937   00283C  EC32  F015         	call	_ENVIA_NIBBLE
  2938                           
  2939                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  2940   002840  0E20               	movlw	32
  2941   002842  EC32  F015         	call	_ENVIA_NIBBLE
  2942                           
  2943                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  2944   002846  0E01               	movlw	1
  2945   002848  ECB9  F014         	call	_ENVIA_LCD_CMD
  2946                           
  2947                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  2948   00284C  0E28               	movlw	40
  2949   00284E  ECB9  F014         	call	_ENVIA_LCD_CMD
  2950                           
  2951                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  2952   002852  0E0F               	movlw	15
  2953   002854  ECB9  F014         	call	_ENVIA_LCD_CMD
  2954                           
  2955                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  2956   002858  0E06               	movlw	6
  2957   00285A  ECB9  F014         	call	_ENVIA_LCD_CMD
  2958                           
  2959                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  2960   00285E  0E01               	movlw	1
  2961   002860  ECB9  F014         	call	_ENVIA_LCD_CMD
  2962   002864  0012               	return		;funcret
  2963   002866                     __end_of_LCD_CONFIG:
  2964                           	callstack 0
  2965                           
  2966 ;; *************** function _CURSOR_ONOFF *****************
  2967 ;; Defined at:
  2968 ;;		line 35 in file "LCD.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  estado          1    wreg     unsigned char 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  estado          1    3[COMRAM] unsigned char 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/4
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2986 ;;Total ram usage:        1 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; Hardware stack levels required when called: 3
  2989 ;; This function calls:
  2990 ;;		_ENVIA_LCD_CMD
  2991 ;; This function is called by:
  2992 ;;		_lcd_init
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text9
  2997   002A48                     __ptext9:
  2998                           	callstack 0
  2999   002A48                     _CURSOR_ONOFF:
  3000                           	callstack 122
  3001                           
  3002                           ;incstack = 0
  3003                           ;CURSOR_ONOFF@estado stored from wreg
  3004   002A48  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  3005                           
  3006                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  3007   002A4A  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  3008   002A4C  A4D8               	btfss	status,2,c
  3009   002A4E  D003               	goto	l960
  3010   002A50  0E0E               	movlw	14
  3011   002A52  ECB9  F014         	call	_ENVIA_LCD_CMD
  3012   002A56                     l960:
  3013                           
  3014                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  3015   002A56  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  3016   002A58  A4D8               	btfss	status,2,c
  3017   002A5A  0012               	return	
  3018   002A5C  0E0C               	movlw	12
  3019   002A5E  ECB9  F014         	call	_ENVIA_LCD_CMD
  3020   002A62  0012               	return		;funcret
  3021   002A64                     __end_of_CURSOR_ONOFF:
  3022                           	callstack 0
  3023                           
  3024 ;; *************** function _CURSOR_HOME *****************
  3025 ;; Defined at:
  3026 ;;		line 30 in file "LCD.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;		None
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/4
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3044 ;;Total ram usage:        0 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 3
  3047 ;; This function calls:
  3048 ;;		_ENVIA_LCD_CMD
  3049 ;; This function is called by:
  3050 ;;		_lcd_init
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text10
  3055   002AB8                     __ptext10:
  3056                           	callstack 0
  3057   002AB8                     _CURSOR_HOME:
  3058                           	callstack 122
  3059                           
  3060                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  3061                           
  3062                           ;incstack = 0
  3063   002AB8  0E02               	movlw	2
  3064   002ABA  ECB9  F014         	call	_ENVIA_LCD_CMD
  3065   002ABE  0012               	return		;funcret
  3066   002AC0                     __end_of_CURSOR_HOME:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _BORRAR_LCD *****************
  3070 ;; Defined at:
  3071 ;;		line 67 in file "LCD.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/2
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 3
  3092 ;; This function calls:
  3093 ;;		_ENVIA_LCD_CMD
  3094 ;; This function is called by:
  3095 ;;		_lcd_init
  3096 ;;		_main
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text11
  3101   002AC0                     __ptext11:
  3102                           	callstack 0
  3103   002AC0                     _BORRAR_LCD:
  3104                           	callstack 122
  3105                           
  3106                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  3107                           
  3108                           ;incstack = 0
  3109   002AC0  0E01               	movlw	1
  3110   002AC2  ECB9  F014         	call	_ENVIA_LCD_CMD
  3111   002AC6  0012               	return		;funcret
  3112   002AC8                     __end_of_BORRAR_LCD:
  3113                           	callstack 0
  3114                           
  3115 ;; *************** function _ENVIA_LCD_CMD *****************
  3116 ;; Defined at:
  3117 ;;		line 104 in file "LCD.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  dato            1    wreg     unsigned char 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  dato            1    1[COMRAM] unsigned char 
  3122 ;;  aux             1    2[COMRAM] unsigned char 
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, status,2, status,0, cstack
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/2
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3136 ;;Total ram usage:        2 bytes
  3137 ;; Hardware stack levels used: 1
  3138 ;; Hardware stack levels required when called: 2
  3139 ;; This function calls:
  3140 ;;		_ENVIA_NIBBLE
  3141 ;;		_LEER_LCD
  3142 ;; This function is called by:
  3143 ;;		_POS_CURSOR
  3144 ;;		_CURSOR_HOME
  3145 ;;		_CURSOR_ONOFF
  3146 ;;		_BORRAR_LCD
  3147 ;;		_LCD_CONFIG
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text12
  3152   002972                     __ptext12:
  3153                           	callstack 0
  3154   002972                     _ENVIA_LCD_CMD:
  3155                           	callstack 122
  3156                           
  3157                           ;incstack = 0
  3158                           ;ENVIA_LCD_CMD@dato stored from wreg
  3159   002972  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  3160                           
  3161                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  3162   002974  90C1               	bcf	193,0,c	;volatile
  3163                           
  3164                           ;LCD.c: 108:  LEER_LCD();
  3165   002976  ECD2  F013         	call	_LEER_LCD	;wreg free
  3166                           
  3167                           ;LCD.c: 109:  TRISD = 0b00000000;
  3168   00297A  6AC9               	clrf	201,c	;volatile
  3169                           
  3170                           ;LCD.c: 111:         _delay(1200);
  3171   00297C  0EF0               	movlw	240
  3172   00297E                     u367:
  3173   00297E  D000               	nop2	
  3174   002980  2EE8               	decfsz	wreg,f,c
  3175   002982  D7FD               	bra	u367
  3176                           
  3177                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  3178   002984  92C1               	bcf	193,1,c	;volatile
  3179                           
  3180                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  3181   002986  94C1               	bcf	193,2,c	;volatile
  3182                           
  3183                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  3184   002988  90C1               	bcf	193,0,c	;volatile
  3185                           
  3186                           ;LCD.c: 115:  aux = dato & 0xF0;
  3187   00298A  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  3188   00298C  0BF0               	andlw	240
  3189   00298E  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  3190                           
  3191                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  3192   002990  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  3193   002992  EC32  F015         	call	_ENVIA_NIBBLE
  3194                           
  3195                           ;LCD.c: 117:  aux = dato<<4;
  3196   002996  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  3197   002998  0BF0               	andlw	240
  3198   00299A  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  3199                           
  3200                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  3201   00299C  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  3202   00299E  EC32  F015         	call	_ENVIA_NIBBLE
  3203   0029A2  0012               	return		;funcret
  3204   0029A4                     __end_of_ENVIA_LCD_CMD:
  3205                           	callstack 0
  3206                           
  3207 ;; *************** function _LEER_LCD *****************
  3208 ;; Defined at:
  3209 ;;		line 121 in file "LCD.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  aux             1    0[COMRAM] unsigned char 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/2
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3224 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3226 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3227 ;;Total ram usage:        1 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; Hardware stack levels required when called: 1
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_ENVIA_CHAR
  3234 ;;		_ENVIA_LCD_CMD
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           	psect	text13
  3239   0027A4                     __ptext13:
  3240                           	callstack 0
  3241   0027A4                     _LEER_LCD:
  3242                           	callstack 122
  3243                           
  3244                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3245                           
  3246                           ;incstack = 0
  3247   0027A4  0EF8               	movlw	248
  3248   0027A6  6EC9               	movwf	201,c	;volatile
  3249                           
  3250                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  3251   0027A8  90C1               	bcf	193,0,c	;volatile
  3252                           
  3253                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  3254   0027AA  82C1               	bsf	193,1,c	;volatile
  3255                           
  3256                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  3257   0027AC  84C1               	bsf	193,2,c	;volatile
  3258                           
  3259                           ;LCD.c: 128:         _delay(1200);
  3260   0027AE  0EF0               	movlw	240
  3261   0027B0                     u377:
  3262   0027B0  D000               	nop2	
  3263   0027B2  2EE8               	decfsz	wreg,f,c
  3264   0027B4  D7FD               	bra	u377
  3265                           
  3266                           ;LCD.c: 130:  aux = PORTD;
  3267   0027B6  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  3268                           
  3269                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  3270   0027BA  94C1               	bcf	193,2,c	;volatile
  3271                           
  3272                           ;LCD.c: 132:         _delay(1200);
  3273   0027BC  0EF0               	movlw	240
  3274   0027BE                     u387:
  3275   0027BE  D000               	nop2	
  3276   0027C0  2EE8               	decfsz	wreg,f,c
  3277   0027C2  D7FD               	bra	u387
  3278                           
  3279                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  3280   0027C4  84C1               	bsf	193,2,c	;volatile
  3281                           
  3282                           ;LCD.c: 135:         _delay(1200);
  3283   0027C6  0EF0               	movlw	240
  3284   0027C8                     u397:
  3285   0027C8  D000               	nop2	
  3286   0027CA  2EE8               	decfsz	wreg,f,c
  3287   0027CC  D7FD               	bra	u397
  3288   0027CE                     l876:
  3289                           
  3290                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3291   0027CE  94C1               	bcf	193,2,c	;volatile
  3292                           
  3293                           ;LCD.c: 138:  aux = aux & 0x80;
  3294   0027D0  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  3295   0027D2  0B80               	andlw	128
  3296   0027D4  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  3297                           
  3298                           ;LCD.c: 139:  while(aux == 0x80)
  3299   0027D6  D012               	goto	l892
  3300   0027D8                     l67:
  3301                           
  3302                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3303   0027D8  84C1               	bsf	193,2,c	;volatile
  3304                           
  3305                           ;LCD.c: 142:             _delay(1200);
  3306   0027DA  0EF0               	movlw	240
  3307   0027DC                     u407:
  3308   0027DC  D000               	nop2	
  3309   0027DE  2EE8               	decfsz	wreg,f,c
  3310   0027E0  D7FD               	bra	u407
  3311                           
  3312                           ;LCD.c: 143:             aux = PORTD;
  3313   0027E2  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  3314                           
  3315                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3316   0027E6  94C1               	bcf	193,2,c	;volatile
  3317                           
  3318                           ;LCD.c: 145:             _delay(1200);
  3319   0027E8  0EF0               	movlw	240
  3320   0027EA                     u417:
  3321   0027EA  D000               	nop2	
  3322   0027EC  2EE8               	decfsz	wreg,f,c
  3323   0027EE  D7FD               	bra	u417
  3324                           
  3325                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3326   0027F0  84C1               	bsf	193,2,c	;volatile
  3327                           
  3328                           ;LCD.c: 147:             _delay(1200);
  3329   0027F2  0EF0               	movlw	240
  3330   0027F4                     u427:
  3331   0027F4  D000               	nop2	
  3332   0027F6  2EE8               	decfsz	wreg,f,c
  3333   0027F8  D7FD               	bra	u427
  3334   0027FA  D7E9               	goto	l876
  3335   0027FC                     l892:
  3336                           
  3337                           ;LCD.c: 139:  while(aux == 0x80)
  3338   0027FC  0E80               	movlw	128
  3339   0027FE  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  3340   002800  A4D8               	btfss	status,2,c
  3341   002802  0012               	return	
  3342   002804  D7E9               	goto	l67
  3343   002806                     __end_of_LEER_LCD:
  3344                           	callstack 0
  3345                           
  3346 ;; *************** function _ENVIA_NIBBLE *****************
  3347 ;; Defined at:
  3348 ;;		line 93 in file "LCD.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  dato            1    wreg     unsigned char 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  dato            1    0[COMRAM] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/2
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3365 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3366 ;;Total ram usage:        1 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 1
  3369 ;; This function calls:
  3370 ;;		Nothing
  3371 ;; This function is called by:
  3372 ;;		_ENVIA_CHAR
  3373 ;;		_LCD_CONFIG
  3374 ;;		_ENVIA_LCD_CMD
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text14
  3379   002A64                     __ptext14:
  3380                           	callstack 0
  3381   002A64                     _ENVIA_NIBBLE:
  3382                           	callstack 122
  3383                           
  3384                           ;incstack = 0
  3385                           ;ENVIA_NIBBLE@dato stored from wreg
  3386   002A64  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  3387                           
  3388                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3389   002A66  0E0F               	movlw	15
  3390   002A68  16C1               	andwf	193,f,c	;volatile
  3391                           
  3392                           ;LCD.c: 96:  dato &= 0xF0;
  3393   002A6A  0EF0               	movlw	240
  3394   002A6C  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  3395                           
  3396                           ;LCD.c: 97:  LATD|= dato;
  3397   002A6E  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  3398   002A70  12C1               	iorwf	193,f,c	;volatile
  3399                           
  3400                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3401   002A72  84C1               	bsf	193,2,c	;volatile
  3402                           
  3403                           ;LCD.c: 100:         _delay(1200);
  3404   002A74  0EF0               	movlw	240
  3405   002A76                     u437:
  3406   002A76  D000               	nop2	
  3407   002A78  2EE8               	decfsz	wreg,f,c
  3408   002A7A  D7FD               	bra	u437
  3409                           
  3410                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3411   002A7C  94C1               	bcf	193,2,c	;volatile
  3412   002A7E  0012               	return		;funcret
  3413   002A80                     __end_of_ENVIA_NIBBLE:
  3414                           	callstack 0
  3415                           
  3416 ;; *************** function _configuro *****************
  3417 ;; Defined at:
  3418 ;;		line 21 in file "maincode04.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 3F/2
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3436 ;;Total ram usage:        0 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 1
  3439 ;; This function calls:
  3440 ;;		Nothing
  3441 ;; This function is called by:
  3442 ;;		_main
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text15
  3447   0028B8                     __ptext15:
  3448                           	callstack 0
  3449   0028B8                     _configuro:
  3450                           	callstack 125
  3451                           
  3452                           ;maincode04.c: 23:     OSCCON1 = 0x60;
  3453                           
  3454                           ;incstack = 0
  3455   0028B8  0E60               	movlw	96
  3456   0028BA  0100               	movlb	0	; () banked
  3457   0028BC  6FAD               	movwf	173,b	;volatile
  3458                           
  3459                           ;maincode04.c: 24:     OSCFRQ = 0x02;
  3460   0028BE  0E02               	movlw	2
  3461   0028C0  6FB1               	movwf	177,b	;volatile
  3462                           
  3463                           ;maincode04.c: 25:     OSCEN = 0x40;
  3464   0028C2  0E40               	movlw	64
  3465   0028C4  6FB3               	movwf	179,b	;volatile
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;maincode04.c: 27:     TRISBbits.TRISB4 = 1;
  3469   0028C6  88C7               	bsf	199,4,c	;volatile
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;maincode04.c: 28:     ANSELBbits.ANSELB4 = 0;
  3473   0028C8  0104               	movlb	4	; () banked
  3474   0028CA  9908               	bcf	8,4,b	;volatile
  3475                           
  3476                           ; BSR set to: 4
  3477                           ;maincode04.c: 29:     WPUBbits.WPUB4 = 1;
  3478   0028CC  8909               	bsf	9,4,b	;volatile
  3479                           
  3480                           ; BSR set to: 4
  3481                           ;maincode04.c: 30:     TRISBbits.TRISB2 = 1;
  3482   0028CE  84C7               	bsf	199,2,c	;volatile
  3483                           
  3484                           ; BSR set to: 4
  3485                           ;maincode04.c: 31:     ANSELBbits.ANSELB2 = 0;
  3486   0028D0  9508               	bcf	8,2,b	;volatile
  3487                           
  3488                           ; BSR set to: 4
  3489                           ;maincode04.c: 32:     WPUBbits.WPUB2 = 1;
  3490   0028D2  8509               	bsf	9,2,b	;volatile
  3491                           
  3492                           ; BSR set to: 4
  3493                           ;maincode04.c: 33:     TRISBbits.TRISB3 = 1;
  3494   0028D4  86C7               	bsf	199,3,c	;volatile
  3495                           
  3496                           ; BSR set to: 4
  3497                           ;maincode04.c: 34:     ANSELBbits.ANSELB3 = 0;
  3498   0028D6  9708               	bcf	8,3,b	;volatile
  3499                           
  3500                           ; BSR set to: 4
  3501                           ;maincode04.c: 35:     WPUBbits.WPUB3 = 1;
  3502   0028D8  8709               	bsf	9,3,b	;volatile
  3503                           
  3504                           ;maincode04.c: 37:     INT0PPS = 0x08;
  3505   0028DA  0E08               	movlw	8
  3506   0028DC  0102               	movlb	2	; () banked
  3507   0028DE  6F3E               	movwf	62,b	;volatile
  3508                           
  3509                           ; BSR set to: 2
  3510                           ;maincode04.c: 38:     PIE1bits.INT0IE = 1;
  3511   0028E0  809F               	bsf	159,0,c	;volatile
  3512                           
  3513                           ; BSR set to: 2
  3514                           ;maincode04.c: 39:     PIR1bits.INT0IF = 0;
  3515   0028E2  90AF               	bcf	175,0,c	;volatile
  3516                           
  3517                           ; BSR set to: 2
  3518                           ;maincode04.c: 40:     INTCON0bits.INT0EDG = 0;
  3519   0028E4  90D6               	bcf	214,0,c	;volatile
  3520                           
  3521                           ;maincode04.c: 41:     INT1PPS = 0x09;
  3522   0028E6  0E09               	movlw	9
  3523   0028E8  6F3F               	movwf	63,b	;volatile
  3524                           
  3525                           ; BSR set to: 2
  3526                           ;maincode04.c: 42:     PIE6bits.INT1IE = 1;
  3527   0028EA  80A4               	bsf	164,0,c	;volatile
  3528                           
  3529                           ; BSR set to: 2
  3530                           ;maincode04.c: 43:     PIR6bits.INT1IF = 0;
  3531   0028EC  90B4               	bcf	180,0,c	;volatile
  3532                           
  3533                           ; BSR set to: 2
  3534                           ;maincode04.c: 44:     INTCON0bits.INT1EDG = 0;
  3535   0028EE  92D6               	bcf	214,1,c	;volatile
  3536                           
  3537                           ;maincode04.c: 45:     INT2PPS = 0x0C;
  3538   0028F0  0E0C               	movlw	12
  3539   0028F2  6F40               	movwf	64,b	;volatile
  3540                           
  3541                           ; BSR set to: 2
  3542                           ;maincode04.c: 46:     PIE10bits.INT2IE = 1;
  3543   0028F4  80A8               	bsf	168,0,c	;volatile
  3544                           
  3545                           ; BSR set to: 2
  3546                           ;maincode04.c: 47:     PIR10bits.INT2IF = 0;
  3547   0028F6  90B8               	bcf	184,0,c	;volatile
  3548                           
  3549                           ; BSR set to: 2
  3550                           ;maincode04.c: 48:     INTCON0bits.INT2EDG = 0;
  3551   0028F8  94D6               	bcf	214,2,c	;volatile
  3552                           
  3553                           ; BSR set to: 2
  3554                           ;maincode04.c: 49:     INTCON0bits.GIE = 1;
  3555   0028FA  8ED6               	bsf	214,7,c	;volatile
  3556                           
  3557                           ; BSR set to: 2
  3558   0028FC  0012               	return		;funcret
  3559   0028FE                     __end_of_configuro:
  3560                           	callstack 0
  3561                           
  3562 ;; *************** function _INT0_ISR *****************
  3563 ;; Defined at:
  3564 ;;		line 109 in file "maincode04.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; This function calls:
  3585 ;;		Nothing
  3586 ;; This function is called by:
  3587 ;;		Interrupt level 2
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text16
  3592   002A80                     __ptext16:
  3593                           	callstack 0
  3594   002A80                     _INT0_ISR:
  3595                           	callstack 122
  3596                           
  3597                           ;maincode04.c: 110:     PIR1bits.INT0IF = 0;
  3598                           
  3599                           ; BSR set to: 2
  3600                           ;incstack = 0
  3601   002A80  90AF               	bcf	175,0,c	;volatile
  3602                           
  3603                           ;maincode04.c: 111:     if(speed == 2){
  3604   002A82  0E02               	movlw	2
  3605   002A84  1812               	xorwf	_speed^(0+1280),w,c
  3606   002A86  A4D8               	btfss	status,2,c
  3607   002A88  D003               	goto	i2l1148
  3608                           
  3609                           ;maincode04.c: 112:         speed = 3;
  3610   002A8A  0E03               	movlw	3
  3611   002A8C  6E12               	movwf	_speed^(0+1280),c
  3612                           
  3613                           ;maincode04.c: 113:     }
  3614   002A8E  0011               	retfie		f
  3615   002A90                     i2l1148:
  3616                           
  3617                           ;maincode04.c: 115:         speed = 2;
  3618   002A90  0E02               	movlw	2
  3619   002A92  6E12               	movwf	_speed^(0+1280),c
  3620   002A94  0011               	retfie		f
  3621   002A96                     __end_of_INT0_ISR:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function _INT1_ISR *****************
  3625 ;; Defined at:
  3626 ;;		line 119 in file "maincode04.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3644 ;;Total ram usage:        0 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		Interrupt level 2
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text17
  3654   002A98                     __ptext17:
  3655                           	callstack 0
  3656   002A98                     _INT1_ISR:
  3657                           	callstack 122
  3658                           
  3659                           ;maincode04.c: 120:     PIR6bits.INT1IF = 0;
  3660                           
  3661                           ;incstack = 0
  3662   002A98  90B4               	bcf	180,0,c	;volatile
  3663                           
  3664                           ;maincode04.c: 121:     if(estado == 0){
  3665   002A9A  5011               	movf	_estado^(0+1280),w,c
  3666   002A9C  A4D8               	btfss	status,2,c
  3667   002A9E  D003               	goto	i2l173
  3668                           
  3669                           ;maincode04.c: 122:         estado = 1;
  3670   002AA0  0E01               	movlw	1
  3671   002AA2  6E11               	movwf	_estado^(0+1280),c
  3672                           
  3673                           ;maincode04.c: 123:     }
  3674   002AA4  0011               	retfie		f
  3675   002AA6                     i2l173:
  3676                           
  3677                           ;maincode04.c: 125:         estado = 0;
  3678   002AA6  6A11               	clrf	_estado^(0+1280),c
  3679   002AA8  0011               	retfie		f
  3680   002AAA                     __end_of_INT1_ISR:
  3681                           	callstack 0
  3682                           
  3683 ;; *************** function _INT2_ISR *****************
  3684 ;; Defined at:
  3685 ;;		line 129 in file "maincode04.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3703 ;;Total ram usage:        0 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		Interrupt level 2
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text18
  3713   002AAC                     __ptext18:
  3714                           	callstack 0
  3715   002AAC                     _INT2_ISR:
  3716                           	callstack 122
  3717                           
  3718                           ;maincode04.c: 130:     PIR10bits.INT2IF = 0;
  3719                           
  3720                           ;incstack = 0
  3721   002AAC  90B8               	bcf	184,0,c	;volatile
  3722                           
  3723                           ;maincode04.c: 131:     cuenta = 0;
  3724   002AAE  0E00               	movlw	0
  3725   002AB0  6E10               	movwf	(_cuenta+1)^(0+1280),c
  3726   002AB2  0E00               	movlw	0
  3727   002AB4  6E0F               	movwf	_cuenta^(0+1280),c
  3728   002AB6  0011               	retfie		f
  3729   002AB8                     __end_of_INT2_ISR:
  3730                           	callstack 0
  3731                           
  3732                           ;
  3733                           ; H/W Interrupt Vector Table @ 0x8
  3734                           ;
  3735                           
  3736                           	psect	ivt0x8
  3737   000008                     __pivt0x8:
  3738                           	callstack 0
  3739   000008                     ivt0x8_base:
  3740                           	callstack 0
  3741                           
  3742                           ; Vector 0 : SWINT
  3743   000008  0040               	dw	ivt0x8_undefint shr (0+2)
  3744                           
  3745                           ; Vector 1 : HLVD
  3746   00000A  0040               	dw	ivt0x8_undefint shr (0+2)
  3747                           
  3748                           ; Vector 2 : OSF
  3749   00000C  0040               	dw	ivt0x8_undefint shr (0+2)
  3750                           
  3751                           ; Vector 3 : CSW
  3752   00000E  0040               	dw	ivt0x8_undefint shr (0+2)
  3753                           
  3754                           ; Vector 4 : Undefined
  3755   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  3756                           
  3757                           ; Vector 5 : CLC1
  3758   000012  0040               	dw	ivt0x8_undefint shr (0+2)
  3759                           
  3760                           ; Vector 6 : Undefined
  3761   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  3762                           
  3763                           ; Vector 7 : IOC
  3764   000016  0040               	dw	ivt0x8_undefint shr (0+2)
  3765                           
  3766                           ; Vector 8 : INT0
  3767   000018  0AA0               	dw	_INT0_ISR shr (0+2)
  3768                           
  3769                           ; Vector 9 : ZCD
  3770   00001A  0040               	dw	ivt0x8_undefint shr (0+2)
  3771                           
  3772                           ; Vector 10 : AD
  3773   00001C  0040               	dw	ivt0x8_undefint shr (0+2)
  3774                           
  3775                           ; Vector 11 : ACT
  3776   00001E  0040               	dw	ivt0x8_undefint shr (0+2)
  3777                           
  3778                           ; Vector 12 : CMP1
  3779   000020  0040               	dw	ivt0x8_undefint shr (0+2)
  3780                           
  3781                           ; Vector 13 : SMT1
  3782   000022  0040               	dw	ivt0x8_undefint shr (0+2)
  3783                           
  3784                           ; Vector 14 : SMT1PRA
  3785   000024  0040               	dw	ivt0x8_undefint shr (0+2)
  3786                           
  3787                           ; Vector 15 : SMT1PRW
  3788   000026  0040               	dw	ivt0x8_undefint shr (0+2)
  3789                           
  3790                           ; Vector 16 : ADT
  3791   000028  0040               	dw	ivt0x8_undefint shr (0+2)
  3792                           
  3793                           ; Vector 17 : Undefined
  3794   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  3795                           
  3796                           ; Vector 18 : Undefined
  3797   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  3798                           
  3799                           ; Vector 19 : Undefined
  3800   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  3801                           
  3802                           ; Vector 20 : DMA1SCNT
  3803   000030  0040               	dw	ivt0x8_undefint shr (0+2)
  3804                           
  3805                           ; Vector 21 : DMA1DCNT
  3806   000032  0040               	dw	ivt0x8_undefint shr (0+2)
  3807                           
  3808                           ; Vector 22 : DMA1OR
  3809   000034  0040               	dw	ivt0x8_undefint shr (0+2)
  3810                           
  3811                           ; Vector 23 : DMA1A
  3812   000036  0040               	dw	ivt0x8_undefint shr (0+2)
  3813                           
  3814                           ; Vector 24 : SPI1RX
  3815   000038  0040               	dw	ivt0x8_undefint shr (0+2)
  3816                           
  3817                           ; Vector 25 : SPI1TX
  3818   00003A  0040               	dw	ivt0x8_undefint shr (0+2)
  3819                           
  3820                           ; Vector 26 : SPI1
  3821   00003C  0040               	dw	ivt0x8_undefint shr (0+2)
  3822                           
  3823                           ; Vector 27 : TMR2
  3824   00003E  0040               	dw	ivt0x8_undefint shr (0+2)
  3825                           
  3826                           ; Vector 28 : TMR1
  3827   000040  0040               	dw	ivt0x8_undefint shr (0+2)
  3828                           
  3829                           ; Vector 29 : TMR1G
  3830   000042  0040               	dw	ivt0x8_undefint shr (0+2)
  3831                           
  3832                           ; Vector 30 : CCP1
  3833   000044  0040               	dw	ivt0x8_undefint shr (0+2)
  3834                           
  3835                           ; Vector 31 : TMR0
  3836   000046  0040               	dw	ivt0x8_undefint shr (0+2)
  3837                           
  3838                           ; Vector 32 : U1RX
  3839   000048  0040               	dw	ivt0x8_undefint shr (0+2)
  3840                           
  3841                           ; Vector 33 : U1TX
  3842   00004A  0040               	dw	ivt0x8_undefint shr (0+2)
  3843                           
  3844                           ; Vector 34 : U1E
  3845   00004C  0040               	dw	ivt0x8_undefint shr (0+2)
  3846                           
  3847                           ; Vector 35 : U1
  3848   00004E  0040               	dw	ivt0x8_undefint shr (0+2)
  3849                           
  3850                           ; Vector 36 : Undefined
  3851   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  3852                           
  3853                           ; Vector 37 : Undefined
  3854   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  3855                           
  3856                           ; Vector 38 : PWM1PR
  3857   000054  0040               	dw	ivt0x8_undefint shr (0+2)
  3858                           
  3859                           ; Vector 39 : PWM1
  3860   000056  0040               	dw	ivt0x8_undefint shr (0+2)
  3861                           
  3862                           ; Vector 40 : SPI2RX
  3863   000058  0040               	dw	ivt0x8_undefint shr (0+2)
  3864                           
  3865                           ; Vector 41 : SPI2TX
  3866   00005A  0040               	dw	ivt0x8_undefint shr (0+2)
  3867                           
  3868                           ; Vector 42 : SPI2
  3869   00005C  0040               	dw	ivt0x8_undefint shr (0+2)
  3870                           
  3871                           ; Vector 43 : Undefined
  3872   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  3873                           
  3874                           ; Vector 44 : TMR3
  3875   000060  0040               	dw	ivt0x8_undefint shr (0+2)
  3876                           
  3877                           ; Vector 45 : TMR3G
  3878   000062  0040               	dw	ivt0x8_undefint shr (0+2)
  3879                           
  3880                           ; Vector 46 : PWM2PR
  3881   000064  0040               	dw	ivt0x8_undefint shr (0+2)
  3882                           
  3883                           ; Vector 47 : PWM2
  3884   000066  0040               	dw	ivt0x8_undefint shr (0+2)
  3885                           
  3886                           ; Vector 48 : INT1
  3887   000068  0AA6               	dw	_INT1_ISR shr (0+2)
  3888                           
  3889                           ; Vector 49 : CLC2
  3890   00006A  0040               	dw	ivt0x8_undefint shr (0+2)
  3891                           
  3892                           ; Vector 50 : CWG1
  3893   00006C  0040               	dw	ivt0x8_undefint shr (0+2)
  3894                           
  3895                           ; Vector 51 : NCO1
  3896   00006E  0040               	dw	ivt0x8_undefint shr (0+2)
  3897                           
  3898                           ; Vector 52 : DMA2SCNT
  3899   000070  0040               	dw	ivt0x8_undefint shr (0+2)
  3900                           
  3901                           ; Vector 53 : DMA2DCNT
  3902   000072  0040               	dw	ivt0x8_undefint shr (0+2)
  3903                           
  3904                           ; Vector 54 : DMA2OR
  3905   000074  0040               	dw	ivt0x8_undefint shr (0+2)
  3906                           
  3907                           ; Vector 55 : DMA2A
  3908   000076  0040               	dw	ivt0x8_undefint shr (0+2)
  3909                           
  3910                           ; Vector 56 : I2C1RX
  3911   000078  0040               	dw	ivt0x8_undefint shr (0+2)
  3912                           
  3913                           ; Vector 57 : I2C1TX
  3914   00007A  0040               	dw	ivt0x8_undefint shr (0+2)
  3915                           
  3916                           ; Vector 58 : I2C1
  3917   00007C  0040               	dw	ivt0x8_undefint shr (0+2)
  3918                           
  3919                           ; Vector 59 : I2C1E
  3920   00007E  0040               	dw	ivt0x8_undefint shr (0+2)
  3921                           
  3922                           ; Vector 60 : Undefined
  3923   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  3924                           
  3925                           ; Vector 61 : CLC3
  3926   000082  0040               	dw	ivt0x8_undefint shr (0+2)
  3927                           
  3928                           ; Vector 62 : PWM3PR
  3929   000084  0040               	dw	ivt0x8_undefint shr (0+2)
  3930                           
  3931                           ; Vector 63 : PWM3
  3932   000086  0040               	dw	ivt0x8_undefint shr (0+2)
  3933                           
  3934                           ; Vector 64 : U2RX
  3935   000088  0040               	dw	ivt0x8_undefint shr (0+2)
  3936                           
  3937                           ; Vector 65 : U2TX
  3938   00008A  0040               	dw	ivt0x8_undefint shr (0+2)
  3939                           
  3940                           ; Vector 66 : U2E
  3941   00008C  0040               	dw	ivt0x8_undefint shr (0+2)
  3942                           
  3943                           ; Vector 67 : U2
  3944   00008E  0040               	dw	ivt0x8_undefint shr (0+2)
  3945                           
  3946                           ; Vector 68 : TMR5
  3947   000090  0040               	dw	ivt0x8_undefint shr (0+2)
  3948                           
  3949                           ; Vector 69 : TMR5G
  3950   000092  0040               	dw	ivt0x8_undefint shr (0+2)
  3951                           
  3952                           ; Vector 70 : CCP2
  3953   000094  0040               	dw	ivt0x8_undefint shr (0+2)
  3954                           
  3955                           ; Vector 71 : SCAN
  3956   000096  0040               	dw	ivt0x8_undefint shr (0+2)
  3957                           
  3958                           ; Vector 72 : U3RX
  3959   000098  0040               	dw	ivt0x8_undefint shr (0+2)
  3960                           
  3961                           ; Vector 73 : U3TX
  3962   00009A  0040               	dw	ivt0x8_undefint shr (0+2)
  3963                           
  3964                           ; Vector 74 : U3E
  3965   00009C  0040               	dw	ivt0x8_undefint shr (0+2)
  3966                           
  3967                           ; Vector 75 : U3
  3968   00009E  0040               	dw	ivt0x8_undefint shr (0+2)
  3969                           
  3970                           ; Vector 76 : Undefined
  3971   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  3972                           
  3973                           ; Vector 77 : CLC4
  3974   0000A2  0040               	dw	ivt0x8_undefint shr (0+2)
  3975                           
  3976                           ; Vector 78 : Undefined
  3977   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  3978                           
  3979                           ; Vector 79 : Undefined
  3980   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  3981                           
  3982                           ; Vector 80 : INT2
  3983   0000A8  0AAB               	dw	_INT2_ISR shr (0+2)
  3984                           
  3985                           ; Vector 81 : CLC5
  3986   0000AA  0040               	dw	ivt0x8_undefint shr (0+2)
  3987                           
  3988                           ; Vector 82 : CWG2
  3989   0000AC  0040               	dw	ivt0x8_undefint shr (0+2)
  3990                           
  3991                           ; Vector 83 : NCO2
  3992   0000AE  0040               	dw	ivt0x8_undefint shr (0+2)
  3993                           
  3994                           ; Vector 84 : DMA3SCNT
  3995   0000B0  0040               	dw	ivt0x8_undefint shr (0+2)
  3996                           
  3997                           ; Vector 85 : DMA3DCNT
  3998   0000B2  0040               	dw	ivt0x8_undefint shr (0+2)
  3999                           
  4000                           ; Vector 86 : DMA3OR
  4001   0000B4  0040               	dw	ivt0x8_undefint shr (0+2)
  4002                           
  4003                           ; Vector 87 : DMA3A
  4004   0000B6  0040               	dw	ivt0x8_undefint shr (0+2)
  4005                           
  4006                           ; Vector 88 : CCP3
  4007   0000B8  0040               	dw	ivt0x8_undefint shr (0+2)
  4008                           
  4009                           ; Vector 89 : CLC6
  4010   0000BA  0040               	dw	ivt0x8_undefint shr (0+2)
  4011                           
  4012                           ; Vector 90 : CWG3
  4013   0000BC  0040               	dw	ivt0x8_undefint shr (0+2)
  4014                           
  4015                           ; Vector 91 : TMR4
  4016   0000BE  0040               	dw	ivt0x8_undefint shr (0+2)
  4017                           
  4018                           ; Vector 92 : DMA4SCNT
  4019   0000C0  0040               	dw	ivt0x8_undefint shr (0+2)
  4020                           
  4021                           ; Vector 93 : DMA4DCNT
  4022   0000C2  0040               	dw	ivt0x8_undefint shr (0+2)
  4023                           
  4024                           ; Vector 94 : DMA4OR
  4025   0000C4  0040               	dw	ivt0x8_undefint shr (0+2)
  4026                           
  4027                           ; Vector 95 : DMA4A
  4028   0000C6  0040               	dw	ivt0x8_undefint shr (0+2)
  4029                           
  4030                           ; Vector 96 : U4RX
  4031   0000C8  0040               	dw	ivt0x8_undefint shr (0+2)
  4032                           
  4033                           ; Vector 97 : U4TX
  4034   0000CA  0040               	dw	ivt0x8_undefint shr (0+2)
  4035                           
  4036                           ; Vector 98 : U4E
  4037   0000CC  0040               	dw	ivt0x8_undefint shr (0+2)
  4038                           
  4039                           ; Vector 99 : U4
  4040   0000CE  0040               	dw	ivt0x8_undefint shr (0+2)
  4041                           
  4042                           ; Vector 100 : DMA5SCNT
  4043   0000D0  0040               	dw	ivt0x8_undefint shr (0+2)
  4044                           
  4045                           ; Vector 101 : DMA5DCNT
  4046   0000D2  0040               	dw	ivt0x8_undefint shr (0+2)
  4047                           
  4048                           ; Vector 102 : DMA5OR
  4049   0000D4  0040               	dw	ivt0x8_undefint shr (0+2)
  4050                           
  4051                           ; Vector 103 : DMA5A
  4052   0000D6  0040               	dw	ivt0x8_undefint shr (0+2)
  4053                           
  4054                           ; Vector 104 : U5RX
  4055   0000D8  0040               	dw	ivt0x8_undefint shr (0+2)
  4056                           
  4057                           ; Vector 105 : U5TX
  4058   0000DA  0040               	dw	ivt0x8_undefint shr (0+2)
  4059                           
  4060                           ; Vector 106 : U5E
  4061   0000DC  0040               	dw	ivt0x8_undefint shr (0+2)
  4062                           
  4063                           ; Vector 107 : U5
  4064   0000DE  0040               	dw	ivt0x8_undefint shr (0+2)
  4065                           
  4066                           ; Vector 108 : DMA6SCNT
  4067   0000E0  0040               	dw	ivt0x8_undefint shr (0+2)
  4068                           
  4069                           ; Vector 109 : DMA6DCNT
  4070   0000E2  0040               	dw	ivt0x8_undefint shr (0+2)
  4071                           
  4072                           ; Vector 110 : DMA6OR
  4073   0000E4  0040               	dw	ivt0x8_undefint shr (0+2)
  4074                           
  4075                           ; Vector 111 : DMA6A
  4076   0000E6  0040               	dw	ivt0x8_undefint shr (0+2)
  4077                           
  4078                           ; Vector 112 : Undefined
  4079   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  4080                           
  4081                           ; Vector 113 : CLC7
  4082   0000EA  0040               	dw	ivt0x8_undefint shr (0+2)
  4083                           
  4084                           ; Vector 114 : CMP2
  4085   0000EC  0040               	dw	ivt0x8_undefint shr (0+2)
  4086                           
  4087                           ; Vector 115 : NCO3
  4088   0000EE  0040               	dw	ivt0x8_undefint shr (0+2)
  4089                           
  4090                           ; Vector 116 : Undefined
  4091   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  4092                           
  4093                           ; Vector 117 : Undefined
  4094   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  4095                           
  4096                           ; Vector 118 : Undefined
  4097   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  4098                           
  4099                           ; Vector 119 : Undefined
  4100   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  4101                           
  4102                           ; Vector 120 : NVM
  4103   0000F8  0040               	dw	ivt0x8_undefint shr (0+2)
  4104                           
  4105                           ; Vector 121 : CLC8
  4106   0000FA  0040               	dw	ivt0x8_undefint shr (0+2)
  4107                           
  4108                           ; Vector 122 : CRC
  4109   0000FC  0040               	dw	ivt0x8_undefint shr (0+2)
  4110                           
  4111                           ; Vector 123 : TMR6
  4112   0000FE  0040               	dw	ivt0x8_undefint shr (0+2)
  4113   000100                     ivt0x8_undefint:
  4114                           	callstack 0
  4115   000100  00FF               	reset	
  4116                           
  4117                           	psect	rparam
  4118   000001                     ___rparam_used  equ	1
  4119   000000                     ___param_bank   equ	0
  4120   000000                     __Lparam        equ	__Lrparam
  4121   000000                     __Hparam        equ	__Hrparam
  4122                           
  4123                           	psect	config
  4124                           
  4125                           ;Config register CONFIG1 @ 0x300000
  4126                           ;	External Oscillator Selection
  4127                           ;	FEXTOSC = OFF, Oscillator not enabled
  4128                           ;	Reset Oscillator Selection
  4129                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  4130   300000                     	org	3145728
  4131   300000  FC                 	db	252
  4132                           
  4133                           ;Config register CONFIG2 @ 0x300001
  4134                           ;	Clock out Enable bit
  4135                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4136                           ;	PRLOCKED One-Way Set Enable bit
  4137                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  4138                           ;	Clock Switch Enable bit
  4139                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4140                           ;	Fail-Safe Clock Monitor Enable bit
  4141                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4142   300001                     	org	3145729
  4143   300001  FF                 	db	255
  4144                           
  4145                           ;Config register CONFIG3 @ 0x300002
  4146                           ;	MCLR Enable bit
  4147                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4148                           ;	Power-up timer selection bits
  4149                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  4150                           ;	Multi-vector enable bit
  4151                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  4152                           ;	IVTLOCK bit One-way set enable bit
  4153                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  4154                           ;	Low Power BOR Enable bit
  4155                           ;	LPBOREN = OFF, Low-Power BOR disabled
  4156                           ;	Brown-out Reset Enable bits
  4157                           ;	BOREN = OFF, Brown-out Reset disabled
  4158   300002                     	org	3145730
  4159   300002  3D                 	db	61
  4160                           
  4161                           ;Config register CONFIG4 @ 0x300003
  4162                           ;	Brown-out Reset Voltage Selection bits
  4163                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  4164                           ;	ZCD Disable bit
  4165                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  4166                           ;	PPSLOCK bit One-Way Set Enable bit
  4167                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  4168                           ;	Stack Full/Underflow Reset Enable bit
  4169                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4170                           ;	Low Voltage Programming Enable bit
  4171                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  4172                           ;	Extended Instruction Set Enable bit
  4173                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4174   300003                     	org	3145731
  4175   300003  DF                 	db	223
  4176                           
  4177                           ;Config register CONFIG5 @ 0x300004
  4178                           ;	WDT Period selection bits
  4179                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4180                           ;	WDT operating mode
  4181                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4182   300004                     	org	3145732
  4183   300004  9F                 	db	159
  4184                           
  4185                           ;Config register CONFIG6 @ 0x300005
  4186                           ;	WDT Window Select bits
  4187                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4188                           ;	WDT input clock selector
  4189                           ;	WDTCCS = SC, Software Control
  4190   300005                     	org	3145733
  4191   300005  FF                 	db	255
  4192                           
  4193                           ;Config register CONFIG7 @ 0x300006
  4194                           ;	Boot Block Size selection bits
  4195                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4196                           ;	Boot Block enable bit
  4197                           ;	BBEN = OFF, Boot block disabled
  4198                           ;	Storage Area Flash enable bit
  4199                           ;	SAFEN = OFF, SAF disabled
  4200                           ;	Background Debugger
  4201                           ;	DEBUG = OFF, Background Debugger disabled
  4202   300006                     	org	3145734
  4203   300006  FF                 	db	255
  4204                           
  4205                           ;Config register CONFIG8 @ 0x300007
  4206                           ;	Boot Block Write Protection bit
  4207                           ;	WRTB = OFF, Boot Block not Write protected
  4208                           ;	Configuration Register Write Protection bit
  4209                           ;	WRTC = OFF, Configuration registers not Write protected
  4210                           ;	Data EEPROM Write Protection bit
  4211                           ;	WRTD = OFF, Data EEPROM not Write protected
  4212                           ;	SAF Write protection bit
  4213                           ;	WRTSAF = OFF, SAF not Write Protected
  4214                           ;	Application Block write protection bit
  4215                           ;	WRTAPP = OFF, Application Block not write protected
  4216   300007                     	org	3145735
  4217   300007  FF                 	db	255
  4218                           
  4219                           ;Config register CONFIG10 @ 0x300009
  4220                           ;	PFM and Data EEPROM Code Protection bit
  4221                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  4222   300009                     	org	3145737
  4223   300009  FF                 	db	255
  4224                           tosu	equ	0x4FF
  4225                           tosh	equ	0x4FE
  4226                           tosl	equ	0x4FD
  4227                           stkptr	equ	0x4FC
  4228                           pclatu	equ	0x4FB
  4229                           pclath	equ	0x4FA
  4230                           pcl	equ	0x4F9
  4231                           tblptru	equ	0x4F8
  4232                           tblptrh	equ	0x4F7
  4233                           tblptrl	equ	0x4F6
  4234                           tablat	equ	0x4F5
  4235                           prodh	equ	0x4F4
  4236                           prodl	equ	0x4F3
  4237                           indf0	equ	0x4EF
  4238                           postinc0	equ	0x4EE
  4239                           postdec0	equ	0x4ED
  4240                           preinc0	equ	0x4EC
  4241                           plusw0	equ	0x4EB
  4242                           fsr0h	equ	0x4EA
  4243                           fsr0l	equ	0x4E9
  4244                           wreg	equ	0x4E8
  4245                           indf1	equ	0x4E7
  4246                           postinc1	equ	0x4E6
  4247                           postdec1	equ	0x4E5
  4248                           preinc1	equ	0x4E4
  4249                           plusw1	equ	0x4E3
  4250                           fsr1h	equ	0x4E2
  4251                           fsr1l	equ	0x4E1
  4252                           bsr	equ	0x4E0
  4253                           indf2	equ	0x4DF
  4254                           postinc2	equ	0x4DE
  4255                           postdec2	equ	0x4DD
  4256                           preinc2	equ	0x4DC
  4257                           plusw2	equ	0x4DB
  4258                           fsr2h	equ	0x4DA
  4259                           fsr2l	equ	0x4D9
  4260                           status	equ	0x4D8

Data Sizes:
    Strings     39
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      18
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[8]), STR_2(CODE[17]), STR_3(CODE[14]), 


Critical Paths under _main in COMRAM

    _visualizacion->___lwdiv
    ___lwdiv->___lwmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _INT1_ISR in BANK32

    None.

Critical Paths under _INT2_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _INT1_ISR in BANK33

    None.

Critical Paths under _INT2_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _INT1_ISR in BANK34

    None.

Critical Paths under _INT2_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _INT1_ISR in BANK35

    None.

Critical Paths under _INT2_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Critical Paths under _INT1_ISR in BANK36

    None.

Critical Paths under _INT2_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1982
                                             12 COMRAM     2     2      0
                         _BORRAR_LCD
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                           _lcd_init
                      _visualizacion
 ---------------------------------------------------------------------------------
 (1) _visualizacion                                        0     0      0     895
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     165
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     168
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     225
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE                                      4     2      2     217
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _configuro
   _lcd_init
     _BORRAR_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _visualizacion
     _ENVIA_CHAR
     _ESCRIBE_MENSAJE
     _POS_CURSOR
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod

 _INT0_ISR (ROOT)

 _INT1_ISR (ROOT)

 _INT2_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh       1012      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBIGSFRlll       173      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     14      18     18.9%
BITBIGSFRh          87      0       0      0.0%
BITBIGSFRllh         5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      18      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jun 05 21:08:21 2025

                     l67 27D8            ENVIA_CHAR@aux 0503                      l674 28AE  
                    l684 2936                      l960 2A56                      l892 27FC  
                    l876 27CE                      u210 2888                      u240 2918  
                    u307 26DA                      u317 294C                      u407 27DC  
                    u327 2A0C                      u417 27EA                      u337 2816  
                    u427 27F4                      u347 2824                      u437 2A76  
                    u357 2834                      u367 297E                      u287 2668  
                    u377 27B0                      u297 26CA                      u387 27BE  
                    u397 27C8              LEER_LCD@aux 0501                      wreg 04E8  
           ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 0501           ENVIA_CHAR@dato 0502  
                   l1210 292C                     l1202 290C                     l1204 2914  
                   l1170 29D6                     l1242 267A                     l1164 2A36  
                   l1260 26C4                     l1252 26A8                     l1174 29F2  
                   l1182 287C                     l1262 26D4                     l1246 2690  
                   l1184 2884                     l1248 2696                     l1256 26B0  
                   l1194 28A4                     l1266 26E4                     l1258 26BE  
                   STR_1 2620                     STR_2 2601                     STR_3 2612  
                   _LATD 04C1                     _main 262A                     start 0102  
          ?_CURSOR_ONOFF 0501             ___param_bank 0000          ??_ENVIA_LCD_CMD 0502  
       __end_of_LEER_LCD 2806         __end_of_INT0_ISR 2A96         __end_of_INT1_ISR 2AAA  
       __end_of_INT2_ISR 2AB8                    ?_main 0501          __end_of___lwdiv 28B8  
        __end_of___lwmod 2940                    i2l173 2AA6                    _OSCEN 00B3  
                  _PORTD 04D1                    _TRISD 04C9              ?_POS_CURSOR 0504  
                  _speed 0512                    tablat 04F5                    status 04D8  
         ??_CURSOR_ONOFF 0504          __initialization 29A4             __end_of_main 26F4  
        _ESCRIBE_MENSAJE 29D0                   ??_main 050D            __activetblptr 0003  
                 _ANSELD 0418                   i2l1148 2A90                   _OSCFRQ 00B1  
       __end_of_lcd_init 2A24     __end_of_ENVIA_NIBBLE 2A80                ??___lwdiv 050A  
              ??___lwmod 0505                   _cuenta 050F                   _estado 0511  
          _visualizacion 26F4                   isa$std 0001             __pdataCOMRAM 0512  
           __mediumconst 2600                   tblptrh 04F7                   tblptrl 04F6  
                 tblptru 04F8             ??_BORRAR_LCD 0504                ?_LEER_LCD 0501  
             __accesstop 0560  __end_of__initialization 29CA                ?_INT0_ISR 0501  
              ?_INT1_ISR 0501                ?_INT2_ISR 0501             ??_LCD_CONFIG 0504  
          ___rparam_used 0001             ??_ENVIA_CHAR 0502  __end_of_ESCRIBE_MENSAJE 29FC  
         __pcstackCOMRAM 0501           ivt0x8_undefint 0100           ?_visualizacion 0501  
     __end_of_BORRAR_LCD 2AC8         ENVIA_LCD_CMD@aux 0503     __end_of_CURSOR_ONOFF 2A64  
     __end_of_LCD_CONFIG 2866       __end_of_ENVIA_CHAR 2972               ??_LEER_LCD 0501  
       ENVIA_NIBBLE@dato 0501               ??_INT0_ISR 0501               ??_INT1_ISR 0501  
             ??_INT2_ISR 0501                  IVTBASEH 045E                  IVTBASEL 045D  
                IVTBASEU 045F                  _INT0PPS 023E                  _INT1PPS 023F  
                _INT2PPS 0240                  _OSCCON1 00AD             ??_POS_CURSOR 0505  
              ?_lcd_init 0501                  __Hparam 0000                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 0504          ??_visualizacion 050D        __end_of_configuro 28FE  
                ___lwdiv 2866                  ___lwmod 28FE             __psmallconst 2600  
  __end_of_ENVIA_LCD_CMD 29A4                  __pcinit 29A4       __end_of_POS_CURSOR 2A48  
                __ramtop 2600                  __ptext0 262A                  __ptext1 26F4  
                __ptext2 28FE                  __ptext3 2866                  __ptext4 2A24  
                __ptext5 29D0                  __ptext6 2940                  __ptext7 29FC  
                __ptext8 2806                  __ptext9 2A48                _PIE10bits 04A8  
             ??_lcd_init 0505             _ENVIA_NIBBLE 2A64     end_of_initialization 29CA  
              _PIR10bits 04B8                _TRISBbits 04C7             _CURSOR_ONOFF 2A48  
     CURSOR_ONOFF@estado 0504            __pidataCOMRAM 2AC8            ??_CURSOR_HOME 0504  
    start_initialization 29A4               ivt0x8_base 0008        ENVIA_LCD_CMD@dato 0502  
            __pbssCOMRAM 050F      __end_of_CURSOR_HOME 2AC0         ___lwdiv@dividend 0506  
               ?___lwdiv 0506                 ?___lwmod 0501                _configuro 28B8  
            __smallconst 2600         ___lwdiv@quotient 050A                 _LEER_LCD 27A4  
               _INT0_ISR 2A80                 _INT1_ISR 2A98                 _INT2_ISR 2AAC  
               _LATDbits 04C1                 _PIE1bits 049F                 _PIE6bits 04A4  
               _PIR1bits 04AF                 _PIR6bits 04B4    __end_of_visualizacion 27A4  
       ESCRIBE_MENSAJE@i 0507           POS_CURSOR@fila 0505               ?_configuro 0501  
               _WPUBbits 0409              _CURSOR_HOME 2AB8              _INTCON0bits 04D6  
               __Hrparam 0000                 __Lrparam 0000               _ANSELBbits 0408  
               __pivt0x8 0008          ___lwdiv@divisor 0508          ___lwdiv@counter 050C  
               __ptext10 2AB8                 __ptext11 2AC0                 __ptext12 2972  
               __ptext13 27A4                 __ptext14 2A64                 __ptext15 28B8  
               __ptext16 2A80                 __ptext17 2A98                 __ptext18 2AAC  
             _BORRAR_LCD 2AC0                 _lcd_init 29FC               _LCD_CONFIG 2806  
             _ENVIA_CHAR 2940                 isa$xinst 0000            _ENVIA_LCD_CMD 2972  
            ??_configuro 0501        ??_ESCRIBE_MENSAJE 0506                 intlevel2 0000  
  ESCRIBE_MENSAJE@cadena 0504         ___lwmod@dividend 0501           ?_ENVIA_LCD_CMD 0501  
        ___lwmod@divisor 0503          ___lwmod@counter 0505              ?_BORRAR_LCD 0501  
          ?_ENVIA_NIBBLE 0501               _POS_CURSOR 2A24              ?_LCD_CONFIG 0501  
     ESCRIBE_MENSAJE@tam 0505              ?_ENVIA_CHAR 0501        POS_CURSOR@columna 0504  
