

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jun 05 21:14:13 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=4,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=4,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=4,class=CODE,space=0,delta=1
    30                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 04/02/2025 GMT
    36                           ; 
    37                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F57Q43 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   0004E0                     bsr             equ	1248
    70   0004E9                     fsr0            equ	1257
    71   0004EA                     fsr0h           equ	1258
    72   0004E9                     fsr0l           equ	1257
    73   0004E1                     fsr1            equ	1249
    74   0004E2                     fsr1h           equ	1250
    75   0004E1                     fsr1l           equ	1249
    76   0004D9                     fsr2            equ	1241
    77   0004DA                     fsr2h           equ	1242
    78   0004D9                     fsr2l           equ	1241
    79   0004EF                     indf0           equ	1263
    80   0004E7                     indf1           equ	1255
    81   0004DF                     indf2           equ	1247
    82   0004D6                     intcon          equ	1238
    83   000041                     nvmcon          equ	65
    84   0004F9                     pcl             equ	1273
    85   0004FA                     pclath          equ	1274
    86   0004FB                     pclatu          equ	1275
    87   0004EB                     plusw0          equ	1259
    88   0004E3                     plusw1          equ	1251
    89   0004DB                     plusw2          equ	1243
    90   0004ED                     postdec0        equ	1261
    91   0004E5                     postdec1        equ	1253
    92   0004DD                     postdec2        equ	1245
    93   0004EE                     postinc0        equ	1262
    94   0004E6                     postinc1        equ	1254
    95   0004DE                     postinc2        equ	1246
    96   0004EC                     preinc0         equ	1260
    97   0004E4                     preinc1         equ	1252
    98   0004DC                     preinc2         equ	1244
    99   0004F3                     prod            equ	1267
   100   0004F4                     prodh           equ	1268
   101   0004F3                     prodl           equ	1267
   102   0004D8                     status          equ	1240
   103   0004F5                     tablat          equ	1269
   104   0004F6                     tblptr          equ	1270
   105   0004F7                     tblptrh         equ	1271
   106   0004F6                     tblptrl         equ	1270
   107   0004F8                     tblptru         equ	1272
   108   0004FD                     tosl            equ	1277
   109   0004E8                     wreg            equ	1256
   110   000039                     CLKRCON         equ	57	;# 
   111   00003A                     CLKRCLK         equ	58	;# 
   112   000040                     NVMCON0         equ	64	;# 
   113   000041                     NVMCON1         equ	65	;# 
   114   000042                     NVMLOCK         equ	66	;# 
   115   000043                     NVMADR          equ	67	;# 
   116   000043                     NVMADRL         equ	67	;# 
   117   000044                     NVMADRH         equ	68	;# 
   118   000045                     NVMADRU         equ	69	;# 
   119   000046                     NVMDAT          equ	70	;# 
   120   000046                     NVMDATL         equ	70	;# 
   121   000047                     NVMDATH         equ	71	;# 
   122   000048                     VREGCON         equ	72	;# 
   123   000049                     BORCON          equ	73	;# 
   124   00004A                     HLVDCON0        equ	74	;# 
   125   00004B                     HLVDCON1        equ	75	;# 
   126   00004C                     ZCDCON          equ	76	;# 
   127   000060                     PMD0            equ	96	;# 
   128   000061                     PMD1            equ	97	;# 
   129   000063                     PMD3            equ	99	;# 
   130   000064                     PMD4            equ	100	;# 
   131   000065                     PMD5            equ	101	;# 
   132   000066                     PMD6            equ	102	;# 
   133   000067                     PMD7            equ	103	;# 
   134   000068                     PMD8            equ	104	;# 
   135   00006A                     MD1CON0         equ	106	;# 
   136   00006B                     MD1CON1         equ	107	;# 
   137   00006C                     MD1SRC          equ	108	;# 
   138   00006D                     MD1CARL         equ	109	;# 
   139   00006E                     MD1CARH         equ	110	;# 
   140   00006F                     CMOUT           equ	111	;# 
   141   000070                     CM1CON0         equ	112	;# 
   142   000071                     CM1CON1         equ	113	;# 
   143   000072                     CM1NCH          equ	114	;# 
   144   000073                     CM1PCH          equ	115	;# 
   145   000074                     CM2CON0         equ	116	;# 
   146   000075                     CM2CON1         equ	117	;# 
   147   000076                     CM2NCH          equ	118	;# 
   148   000077                     CM2PCH          equ	119	;# 
   149   000078                     WDTCON0         equ	120	;# 
   150   000079                     WDTCON1         equ	121	;# 
   151   00007A                     WDTPS           equ	122	;# 
   152   00007A                     WDTPSL          equ	122	;# 
   153   00007B                     WDTPSH          equ	123	;# 
   154   00007C                     WDTTMR          equ	124	;# 
   155   00007D                     DAC1DAT         equ	125	;# 
   156   00007D                     DAC1DATL        equ	125	;# 
   157   00007F                     DAC1CON         equ	127	;# 
   158   000080                     SPI1RXB         equ	128	;# 
   159   000081                     SPI1TXB         equ	129	;# 
   160   000082                     SPI1TCNT        equ	130	;# 
   161   000082                     SPI1TCNTL       equ	130	;# 
   162   000083                     SPI1TCNTH       equ	131	;# 
   163   000084                     SPI1CON0        equ	132	;# 
   164   000085                     SPI1CON1        equ	133	;# 
   165   000086                     SPI1CON2        equ	134	;# 
   166   000087                     SPI1STATUS      equ	135	;# 
   167   000088                     SPI1TWIDTH      equ	136	;# 
   168   000089                     SPI1BAUD        equ	137	;# 
   169   00008A                     SPI1INTF        equ	138	;# 
   170   00008B                     SPI1INTE        equ	139	;# 
   171   00008C                     SPI1CLK         equ	140	;# 
   172   00008D                     SPI2RXB         equ	141	;# 
   173   00008E                     SPI2TXB         equ	142	;# 
   174   00008F                     SPI2TCNT        equ	143	;# 
   175   00008F                     SPI2TCNTL       equ	143	;# 
   176   000090                     SPI2TCNTH       equ	144	;# 
   177   000091                     SPI2CON0        equ	145	;# 
   178   000092                     SPI2CON1        equ	146	;# 
   179   000093                     SPI2CON2        equ	147	;# 
   180   000094                     SPI2STATUS      equ	148	;# 
   181   000095                     SPI2TWIDTH      equ	149	;# 
   182   000096                     SPI2BAUD        equ	150	;# 
   183   000097                     SPI2INTF        equ	151	;# 
   184   000098                     SPI2INTE        equ	152	;# 
   185   000099                     SPI2CLK         equ	153	;# 
   186   0000AC                     ACTCON          equ	172	;# 
   187   0000AD                     OSCCON1         equ	173	;# 
   188   0000AE                     OSCCON2         equ	174	;# 
   189   0000AF                     OSCCON3         equ	175	;# 
   190   0000B0                     OSCTUNE         equ	176	;# 
   191   0000B1                     OSCFRQ          equ	177	;# 
   192   0000B1                     OSCFREQ         equ	177	;# 
   193   0000B2                     OSCSTAT         equ	178	;# 
   194   0000B2                     OSCSTAT1        equ	178	;# 
   195   0000B3                     OSCEN           equ	179	;# 
   196   0000B4                     PRLOCK          equ	180	;# 
   197   0000B5                     SCANPR          equ	181	;# 
   198   0000B6                     DMA1PR          equ	182	;# 
   199   0000B7                     DMA2PR          equ	183	;# 
   200   0000B8                     DMA3PR          equ	184	;# 
   201   0000B9                     DMA4PR          equ	185	;# 
   202   0000BA                     DMA5PR          equ	186	;# 
   203   0000BB                     DMA6PR          equ	187	;# 
   204   0000BE                     MAINPR          equ	190	;# 
   205   0000BF                     ISRPR           equ	191	;# 
   206   0000D4                     CLCDATA         equ	212	;# 
   207   0000D5                     CLCSELECT       equ	213	;# 
   208   0000D6                     CLCnCON         equ	214	;# 
   209   0000D7                     CLCnPOL         equ	215	;# 
   210   0000D8                     CLCnSEL0        equ	216	;# 
   211   0000D9                     CLCnSEL1        equ	217	;# 
   212   0000DA                     CLCnSEL2        equ	218	;# 
   213   0000DB                     CLCnSEL3        equ	219	;# 
   214   0000DC                     CLCnGLS0        equ	220	;# 
   215   0000DD                     CLCnGLS1        equ	221	;# 
   216   0000DE                     CLCnGLS2        equ	222	;# 
   217   0000DF                     CLCnGLS3        equ	223	;# 
   218   0000E8                     DMASELECT       equ	232	;# 
   219   0000E9                     DMAnBUF         equ	233	;# 
   220   0000EA                     DMAnDCNT        equ	234	;# 
   221   0000EA                     DMAnDCNTL       equ	234	;# 
   222   0000EB                     DMAnDCNTH       equ	235	;# 
   223   0000EC                     DMAnDPTR        equ	236	;# 
   224   0000EC                     DMAnDPTRL       equ	236	;# 
   225   0000ED                     DMAnDPTRH       equ	237	;# 
   226   0000EE                     DMAnDSZ         equ	238	;# 
   227   0000EE                     DMAnDSZL        equ	238	;# 
   228   0000EF                     DMAnDSZH        equ	239	;# 
   229   0000F0                     DMAnDSA         equ	240	;# 
   230   0000F0                     DMAnDSAL        equ	240	;# 
   231   0000F1                     DMAnDSAH        equ	241	;# 
   232   0000F2                     DMAnSCNT        equ	242	;# 
   233   0000F2                     DMAnSCNTL       equ	242	;# 
   234   0000F3                     DMAnSCNTH       equ	243	;# 
   235   0000F4                     DMAnSPTR        equ	244	;# 
   236   0000F4                     DMAnSPTRL       equ	244	;# 
   237   0000F5                     DMAnSPTRH       equ	245	;# 
   238   0000F6                     DMAnSPTRU       equ	246	;# 
   239   0000F7                     DMAnSSZ         equ	247	;# 
   240   0000F7                     DMAnSSZL        equ	247	;# 
   241   0000F8                     DMAnSSZH        equ	248	;# 
   242   0000F9                     DMAnSSA         equ	249	;# 
   243   0000F9                     DMAnSSAL        equ	249	;# 
   244   0000FA                     DMAnSSAH        equ	250	;# 
   245   0000FB                     DMAnSSAU        equ	251	;# 
   246   0000FC                     DMAnCON0        equ	252	;# 
   247   0000FD                     DMAnCON1        equ	253	;# 
   248   0000FE                     DMAnAIRQ        equ	254	;# 
   249   0000FF                     DMAnSIRQ        equ	255	;# 
   250   000200                     PPSLOCK         equ	512	;# 
   251   000201                     RA0PPS          equ	513	;# 
   252   000202                     RA1PPS          equ	514	;# 
   253   000203                     RA2PPS          equ	515	;# 
   254   000204                     RA3PPS          equ	516	;# 
   255   000205                     RA4PPS          equ	517	;# 
   256   000206                     RA5PPS          equ	518	;# 
   257   000207                     RA6PPS          equ	519	;# 
   258   000208                     RA7PPS          equ	520	;# 
   259   000209                     RB0PPS          equ	521	;# 
   260   00020A                     RB1PPS          equ	522	;# 
   261   00020B                     RB2PPS          equ	523	;# 
   262   00020C                     RB3PPS          equ	524	;# 
   263   00020D                     RB4PPS          equ	525	;# 
   264   00020E                     RB5PPS          equ	526	;# 
   265   00020F                     RB6PPS          equ	527	;# 
   266   000210                     RB7PPS          equ	528	;# 
   267   000211                     RC0PPS          equ	529	;# 
   268   000212                     RC1PPS          equ	530	;# 
   269   000213                     RC2PPS          equ	531	;# 
   270   000214                     RC3PPS          equ	532	;# 
   271   000215                     RC4PPS          equ	533	;# 
   272   000216                     RC5PPS          equ	534	;# 
   273   000217                     RC6PPS          equ	535	;# 
   274   000218                     RC7PPS          equ	536	;# 
   275   000219                     RD0PPS          equ	537	;# 
   276   00021A                     RD1PPS          equ	538	;# 
   277   00021B                     RD2PPS          equ	539	;# 
   278   00021C                     RD3PPS          equ	540	;# 
   279   00021D                     RD4PPS          equ	541	;# 
   280   00021E                     RD5PPS          equ	542	;# 
   281   00021F                     RD6PPS          equ	543	;# 
   282   000220                     RD7PPS          equ	544	;# 
   283   000221                     RE0PPS          equ	545	;# 
   284   000222                     RE1PPS          equ	546	;# 
   285   000223                     RE2PPS          equ	547	;# 
   286   000229                     RF0PPS          equ	553	;# 
   287   00022A                     RF1PPS          equ	554	;# 
   288   00022B                     RF2PPS          equ	555	;# 
   289   00022C                     RF3PPS          equ	556	;# 
   290   00022D                     RF4PPS          equ	557	;# 
   291   00022E                     RF5PPS          equ	558	;# 
   292   00022F                     RF6PPS          equ	559	;# 
   293   000230                     RF7PPS          equ	560	;# 
   294   00023E                     INT0PPS         equ	574	;# 
   295   00023F                     INT1PPS         equ	575	;# 
   296   000240                     INT2PPS         equ	576	;# 
   297   000241                     T0CKIPPS        equ	577	;# 
   298   000242                     T1CKIPPS        equ	578	;# 
   299   000243                     T1GPPS          equ	579	;# 
   300   000244                     T3CKIPPS        equ	580	;# 
   301   000245                     T3GPPS          equ	581	;# 
   302   000246                     T5CKIPPS        equ	582	;# 
   303   000247                     T5GPPS          equ	583	;# 
   304   000248                     T2INPPS         equ	584	;# 
   305   000249                     T4INPPS         equ	585	;# 
   306   00024A                     T6INPPS         equ	586	;# 
   307   00024F                     CCP1PPS         equ	591	;# 
   308   000250                     CCP2PPS         equ	592	;# 
   309   000251                     CCP3PPS         equ	593	;# 
   310   000253                     PWM1ERSPPS      equ	595	;# 
   311   000254                     PWM2ERSPPS      equ	596	;# 
   312   000255                     PWM3ERSPPS      equ	597	;# 
   313   000257                     PWMIN0PPS       equ	599	;# 
   314   000258                     PWMIN1PPS       equ	600	;# 
   315   000259                     SMT1WINPPS      equ	601	;# 
   316   00025A                     SMT1SIGPPS      equ	602	;# 
   317   00025B                     CWG1PPS         equ	603	;# 
   318   00025B                     CWG1INPPS       equ	603	;# 
   319   00025C                     CWG2PPS         equ	604	;# 
   320   00025C                     CWG2INPPS       equ	604	;# 
   321   00025D                     CWG3PPS         equ	605	;# 
   322   00025D                     CWG3INPPS       equ	605	;# 
   323   00025E                     MD1CARLPPS      equ	606	;# 
   324   00025E                     MDCARLPPS       equ	606	;# 
   325   00025F                     MD1CARHPPS      equ	607	;# 
   326   00025F                     MDCARHPPS       equ	607	;# 
   327   000260                     MD1SRCPPS       equ	608	;# 
   328   000260                     MDSRCPPS        equ	608	;# 
   329   000261                     CLCIN0PPS       equ	609	;# 
   330   000262                     CLCIN1PPS       equ	610	;# 
   331   000263                     CLCIN2PPS       equ	611	;# 
   332   000264                     CLCIN3PPS       equ	612	;# 
   333   000265                     CLCIN4PPS       equ	613	;# 
   334   000266                     CLCIN5PPS       equ	614	;# 
   335   000267                     CLCIN6PPS       equ	615	;# 
   336   000268                     CLCIN7PPS       equ	616	;# 
   337   000269                     ADACTPPS        equ	617	;# 
   338   00026A                     SPI1SCKPPS      equ	618	;# 
   339   00026B                     SPI1SDIPPS      equ	619	;# 
   340   00026C                     SPI1SSPPS       equ	620	;# 
   341   00026D                     SPI2SCKPPS      equ	621	;# 
   342   00026E                     SPI2SDIPPS      equ	622	;# 
   343   00026F                     SPI2SSPPS       equ	623	;# 
   344   000270                     I2C1SDAPPS      equ	624	;# 
   345   000271                     I2C1SCLPPS      equ	625	;# 
   346   000272                     U1RXPPS         equ	626	;# 
   347   000273                     U1CTSPPS        equ	627	;# 
   348   000274                     U2RXPPS         equ	628	;# 
   349   000275                     U2CTSPPS        equ	629	;# 
   350   000276                     U3RXPPS         equ	630	;# 
   351   000277                     U3CTSPPS        equ	631	;# 
   352   000278                     U4RXPPS         equ	632	;# 
   353   000279                     U4CTSPPS        equ	633	;# 
   354   00027A                     U5RXPPS         equ	634	;# 
   355   00027B                     U5CTSPPS        equ	635	;# 
   356   000286                     RC4I2C          equ	646	;# 
   357   000287                     RC3I2C          equ	647	;# 
   358   000288                     RB2I2C          equ	648	;# 
   359   000289                     RB1I2C          equ	649	;# 
   360   00028B                     I2C1RXB         equ	651	;# 
   361   00028C                     I2C1TXB         equ	652	;# 
   362   00028D                     I2C1CNT         equ	653	;# 
   363   00028E                     I2C1ADB0        equ	654	;# 
   364   00028F                     I2C1ADB1        equ	655	;# 
   365   000290                     I2C1ADR0        equ	656	;# 
   366   000291                     I2C1ADR1        equ	657	;# 
   367   000292                     I2C1ADR2        equ	658	;# 
   368   000293                     I2C1ADR3        equ	659	;# 
   369   000294                     I2C1CON0        equ	660	;# 
   370   000295                     I2C1CON1        equ	661	;# 
   371   000296                     I2C1CON2        equ	662	;# 
   372   000297                     I2C1ERR         equ	663	;# 
   373   000298                     I2C1STAT0       equ	664	;# 
   374   000299                     I2C1STAT1       equ	665	;# 
   375   00029A                     I2C1PIR         equ	666	;# 
   376   00029B                     I2C1PIE         equ	667	;# 
   377   00029C                     I2C1CLK         equ	668	;# 
   378   00029D                     I2C1BTO         equ	669	;# 
   379   0002A1                     U1RXB           equ	673	;# 
   380   0002A1                     U1RXBL          equ	673	;# 
   381   0002A2                     U1RXCHK         equ	674	;# 
   382   0002A3                     U1TXB           equ	675	;# 
   383   0002A3                     U1TXBL          equ	675	;# 
   384   0002A4                     U1TXCHK         equ	676	;# 
   385   0002A5                     U1P1            equ	677	;# 
   386   0002A5                     U1P1L           equ	677	;# 
   387   0002A6                     U1P1H           equ	678	;# 
   388   0002A7                     U1P2            equ	679	;# 
   389   0002A7                     U1P2L           equ	679	;# 
   390   0002A8                     U1P2H           equ	680	;# 
   391   0002A9                     U1P3            equ	681	;# 
   392   0002A9                     U1P3L           equ	681	;# 
   393   0002AA                     U1P3H           equ	682	;# 
   394   0002AB                     U1CON0          equ	683	;# 
   395   0002AC                     U1CON1          equ	684	;# 
   396   0002AD                     U1CON2          equ	685	;# 
   397   0002AE                     U1BRG           equ	686	;# 
   398   0002AE                     U1BRGL          equ	686	;# 
   399   0002AF                     U1BRGH          equ	687	;# 
   400   0002B0                     U1FIFO          equ	688	;# 
   401   0002B1                     U1UIR           equ	689	;# 
   402   0002B2                     U1ERRIR         equ	690	;# 
   403   0002B3                     U1ERRIE         equ	691	;# 
   404   0002B4                     U2RXB           equ	692	;# 
   405   0002B4                     U2RXBL          equ	692	;# 
   406   0002B6                     U2TXB           equ	694	;# 
   407   0002B6                     U2TXBL          equ	694	;# 
   408   0002B8                     U2P1            equ	696	;# 
   409   0002B8                     U2P1L           equ	696	;# 
   410   0002BA                     U2P2            equ	698	;# 
   411   0002BA                     U2P2L           equ	698	;# 
   412   0002BC                     U2P3            equ	700	;# 
   413   0002BC                     U2P3L           equ	700	;# 
   414   0002BE                     U2CON0          equ	702	;# 
   415   0002BF                     U2CON1          equ	703	;# 
   416   0002C0                     U2CON2          equ	704	;# 
   417   0002C1                     U2BRG           equ	705	;# 
   418   0002C1                     U2BRGL          equ	705	;# 
   419   0002C2                     U2BRGH          equ	706	;# 
   420   0002C3                     U2FIFO          equ	707	;# 
   421   0002C4                     U2UIR           equ	708	;# 
   422   0002C5                     U2ERRIR         equ	709	;# 
   423   0002C6                     U2ERRIE         equ	710	;# 
   424   0002C7                     U3RXB           equ	711	;# 
   425   0002C7                     U3RXBL          equ	711	;# 
   426   0002C9                     U3TXB           equ	713	;# 
   427   0002C9                     U3TXBL          equ	713	;# 
   428   0002CB                     U3P1            equ	715	;# 
   429   0002CB                     U3P1L           equ	715	;# 
   430   0002CD                     U3P2            equ	717	;# 
   431   0002CD                     U3P2L           equ	717	;# 
   432   0002CF                     U3P3            equ	719	;# 
   433   0002CF                     U3P3L           equ	719	;# 
   434   0002D1                     U3CON0          equ	721	;# 
   435   0002D2                     U3CON1          equ	722	;# 
   436   0002D3                     U3CON2          equ	723	;# 
   437   0002D4                     U3BRG           equ	724	;# 
   438   0002D4                     U3BRGL          equ	724	;# 
   439   0002D5                     U3BRGH          equ	725	;# 
   440   0002D6                     U3FIFO          equ	726	;# 
   441   0002D7                     U3UIR           equ	727	;# 
   442   0002D8                     U3ERRIR         equ	728	;# 
   443   0002D9                     U3ERRIE         equ	729	;# 
   444   0002DA                     U4RXB           equ	730	;# 
   445   0002DA                     U4RXBL          equ	730	;# 
   446   0002DC                     U4TXB           equ	732	;# 
   447   0002DC                     U4TXBL          equ	732	;# 
   448   0002DE                     U4P1            equ	734	;# 
   449   0002DE                     U4P1L           equ	734	;# 
   450   0002E0                     U4P2            equ	736	;# 
   451   0002E0                     U4P2L           equ	736	;# 
   452   0002E2                     U4P3            equ	738	;# 
   453   0002E2                     U4P3L           equ	738	;# 
   454   0002E4                     U4CON0          equ	740	;# 
   455   0002E5                     U4CON1          equ	741	;# 
   456   0002E6                     U4CON2          equ	742	;# 
   457   0002E7                     U4BRG           equ	743	;# 
   458   0002E7                     U4BRGL          equ	743	;# 
   459   0002E8                     U4BRGH          equ	744	;# 
   460   0002E9                     U4FIFO          equ	745	;# 
   461   0002EA                     U4UIR           equ	746	;# 
   462   0002EB                     U4ERRIR         equ	747	;# 
   463   0002EC                     U4ERRIE         equ	748	;# 
   464   0002ED                     U5RXB           equ	749	;# 
   465   0002ED                     U5RXBL          equ	749	;# 
   466   0002EF                     U5TXB           equ	751	;# 
   467   0002EF                     U5TXBL          equ	751	;# 
   468   0002F1                     U5P1            equ	753	;# 
   469   0002F1                     U5P1L           equ	753	;# 
   470   0002F3                     U5P2            equ	755	;# 
   471   0002F3                     U5P2L           equ	755	;# 
   472   0002F5                     U5P3            equ	757	;# 
   473   0002F5                     U5P3L           equ	757	;# 
   474   0002F7                     U5CON0          equ	759	;# 
   475   0002F8                     U5CON1          equ	760	;# 
   476   0002F9                     U5CON2          equ	761	;# 
   477   0002FA                     U5BRG           equ	762	;# 
   478   0002FA                     U5BRGL          equ	762	;# 
   479   0002FB                     U5BRGH          equ	763	;# 
   480   0002FC                     U5FIFO          equ	764	;# 
   481   0002FD                     U5UIR           equ	765	;# 
   482   0002FE                     U5ERRIR         equ	766	;# 
   483   0002FF                     U5ERRIE         equ	767	;# 
   484   000300                     SMT1TMR         equ	768	;# 
   485   000300                     SMT1TMRL        equ	768	;# 
   486   000301                     SMT1TMRH        equ	769	;# 
   487   000302                     SMT1TMRU        equ	770	;# 
   488   000303                     SMT1CPR         equ	771	;# 
   489   000303                     SMT1CPRL        equ	771	;# 
   490   000304                     SMT1CPRH        equ	772	;# 
   491   000305                     SMT1CPRU        equ	773	;# 
   492   000306                     SMT1CPW         equ	774	;# 
   493   000306                     SMT1CPWL        equ	774	;# 
   494   000307                     SMT1CPWH        equ	775	;# 
   495   000308                     SMT1CPWU        equ	776	;# 
   496   000309                     SMT1PR          equ	777	;# 
   497   000309                     SMT1PRL         equ	777	;# 
   498   00030A                     SMT1PRH         equ	778	;# 
   499   00030B                     SMT1PRU         equ	779	;# 
   500   00030C                     SMT1CON0        equ	780	;# 
   501   00030D                     SMT1CON1        equ	781	;# 
   502   00030E                     SMT1STAT        equ	782	;# 
   503   00030F                     SMT1CLK         equ	783	;# 
   504   000310                     SMT1SIG         equ	784	;# 
   505   000311                     SMT1WIN         equ	785	;# 
   506   000318                     TMR0L           equ	792	;# 
   507   000318                     TMR0            equ	792	;# 
   508   000319                     TMR0H           equ	793	;# 
   509   000319                     PR0             equ	793	;# 
   510   00031A                     T0CON0          equ	794	;# 
   511   00031B                     T0CON1          equ	795	;# 
   512   00031C                     TMR1            equ	796	;# 
   513   00031C                     TMR1L           equ	796	;# 
   514   00031D                     TMR1H           equ	797	;# 
   515   00031E                     T1CON           equ	798	;# 
   516   00031E                     TMR1CON         equ	798	;# 
   517   00031F                     T1GCON          equ	799	;# 
   518   00031F                     TMR1GCON        equ	799	;# 
   519   000320                     T1GATE          equ	800	;# 
   520   000320                     TMR1GATE        equ	800	;# 
   521   000321                     T1CLK           equ	801	;# 
   522   000321                     TMR1CLK         equ	801	;# 
   523   000321                     PR1             equ	801	;# 
   524   000322                     T2TMR           equ	802	;# 
   525   000322                     TMR2            equ	802	;# 
   526   000323                     T2PR            equ	803	;# 
   527   000323                     PR2             equ	803	;# 
   528   000324                     T2CON           equ	804	;# 
   529   000325                     T2HLT           equ	805	;# 
   530   000326                     T2CLKCON        equ	806	;# 
   531   000326                     T2CLK           equ	806	;# 
   532   000327                     T2RST           equ	807	;# 
   533   000328                     TMR3            equ	808	;# 
   534   000328                     TMR3L           equ	808	;# 
   535   000329                     TMR3H           equ	809	;# 
   536   00032A                     T3CON           equ	810	;# 
   537   00032A                     TMR3CON         equ	810	;# 
   538   00032B                     T3GCON          equ	811	;# 
   539   00032B                     TMR3GCON        equ	811	;# 
   540   00032C                     T3GATE          equ	812	;# 
   541   00032C                     TMR3GATE        equ	812	;# 
   542   00032D                     T3CLK           equ	813	;# 
   543   00032D                     TMR3CLK         equ	813	;# 
   544   00032D                     PR3             equ	813	;# 
   545   00032E                     T4TMR           equ	814	;# 
   546   00032E                     TMR4            equ	814	;# 
   547   00032F                     T4PR            equ	815	;# 
   548   00032F                     PR4             equ	815	;# 
   549   000330                     T4CON           equ	816	;# 
   550   000331                     T4HLT           equ	817	;# 
   551   000332                     T4CLKCON        equ	818	;# 
   552   000332                     T4CLK           equ	818	;# 
   553   000333                     T4RST           equ	819	;# 
   554   000334                     TMR5            equ	820	;# 
   555   000334                     TMR5L           equ	820	;# 
   556   000335                     TMR5H           equ	821	;# 
   557   000336                     T5CON           equ	822	;# 
   558   000336                     TMR5CON         equ	822	;# 
   559   000337                     T5GCON          equ	823	;# 
   560   000337                     TMR5GCON        equ	823	;# 
   561   000338                     T5GATE          equ	824	;# 
   562   000338                     TMR5GATE        equ	824	;# 
   563   000339                     T5CLK           equ	825	;# 
   564   000339                     TMR5CLK         equ	825	;# 
   565   000339                     PR5             equ	825	;# 
   566   00033A                     T6TMR           equ	826	;# 
   567   00033A                     TMR6            equ	826	;# 
   568   00033B                     T6PR            equ	827	;# 
   569   00033B                     PR6             equ	827	;# 
   570   00033C                     T6CON           equ	828	;# 
   571   00033D                     T6HLT           equ	829	;# 
   572   00033E                     T6CLKCON        equ	830	;# 
   573   00033E                     T6CLK           equ	830	;# 
   574   00033F                     T6RST           equ	831	;# 
   575   000340                     CCPR1           equ	832	;# 
   576   000340                     CCPR1L          equ	832	;# 
   577   000341                     CCPR1H          equ	833	;# 
   578   000342                     CCP1CON         equ	834	;# 
   579   000343                     CCP1CAP         equ	835	;# 
   580   000344                     CCPR2           equ	836	;# 
   581   000344                     CCPR2L          equ	836	;# 
   582   000345                     CCPR2H          equ	837	;# 
   583   000346                     CCP2CON         equ	838	;# 
   584   000347                     CCP2CAP         equ	839	;# 
   585   000348                     CCPR3           equ	840	;# 
   586   000348                     CCPR3L          equ	840	;# 
   587   000349                     CCPR3H          equ	841	;# 
   588   00034A                     CCP3CON         equ	842	;# 
   589   00034B                     CCP3CAP         equ	843	;# 
   590   00034C                     CCPTMRS0        equ	844	;# 
   591   00034F                     CRCDATA         equ	847	;# 
   592   00034F                     CRCDATL         equ	847	;# 
   593   000350                     CRCDATH         equ	848	;# 
   594   000351                     CRCACC          equ	849	;# 
   595   000351                     CRCACCL         equ	849	;# 
   596   000352                     CRCACCH         equ	850	;# 
   597   000353                     CRCSHFT         equ	851	;# 
   598   000353                     CRCSHIFTL       equ	851	;# 
   599   000354                     CRCSHIFTH       equ	852	;# 
   600   000355                     CRCXOR          equ	853	;# 
   601   000355                     CRCXORL         equ	853	;# 
   602   000356                     CRCXORH         equ	854	;# 
   603   000357                     CRCCON0         equ	855	;# 
   604   000358                     CRCCON1         equ	856	;# 
   605   00035A                     SCANLADR        equ	858	;# 
   606   00035A                     SCANLADRL       equ	858	;# 
   607   00035B                     SCANLADRH       equ	859	;# 
   608   00035C                     SCANLADRU       equ	860	;# 
   609   00035D                     SCANHADR        equ	861	;# 
   610   00035D                     SCANHADRL       equ	861	;# 
   611   00035E                     SCANHADRH       equ	862	;# 
   612   00035F                     SCANHADRU       equ	863	;# 
   613   000360                     SCANCON0        equ	864	;# 
   614   000361                     SCANTRIG        equ	865	;# 
   615   000362                     IPR0            equ	866	;# 
   616   000363                     IPR1            equ	867	;# 
   617   000364                     IPR2            equ	868	;# 
   618   000365                     IPR3            equ	869	;# 
   619   000366                     IPR4            equ	870	;# 
   620   000367                     IPR5            equ	871	;# 
   621   000368                     IPR6            equ	872	;# 
   622   000369                     IPR7            equ	873	;# 
   623   00036A                     IPR8            equ	874	;# 
   624   00036B                     IPR9            equ	875	;# 
   625   00036C                     IPR10           equ	876	;# 
   626   00036D                     IPR11           equ	877	;# 
   627   00036E                     IPR12           equ	878	;# 
   628   00036F                     IPR13           equ	879	;# 
   629   000370                     IPR14           equ	880	;# 
   630   000371                     IPR15           equ	881	;# 
   631   000373                     STATUS_CSHAD    equ	883	;# 
   632   000374                     WREG_CSHAD      equ	884	;# 
   633   000375                     BSR_CSHAD       equ	885	;# 
   634   000376                     SHADCON         equ	886	;# 
   635   000377                     STATUS_SHAD     equ	887	;# 
   636   000378                     WREG_SHAD       equ	888	;# 
   637   000379                     BSR_SHAD        equ	889	;# 
   638   00037A                     PCLATH_SHAD     equ	890	;# 
   639   00037B                     PCLATU_SHAD     equ	891	;# 
   640   00037C                     FSR0SH          equ	892	;# 
   641   00037C                     FSR0L_SHAD      equ	892	;# 
   642   00037D                     FSR0H_SHAD      equ	893	;# 
   643   00037E                     FSR1SH          equ	894	;# 
   644   00037E                     FSR1L_SHAD      equ	894	;# 
   645   00037F                     FSR1H_SHAD      equ	895	;# 
   646   000380                     FSR2SH          equ	896	;# 
   647   000380                     FSR2L_SHAD      equ	896	;# 
   648   000381                     FSR2H_SHAD      equ	897	;# 
   649   000382                     PRODSH          equ	898	;# 
   650   000382                     PRODL_SHAD      equ	898	;# 
   651   000383                     PRODH_SHAD      equ	899	;# 
   652   0003BC                     CWG1CLK         equ	956	;# 
   653   0003BC                     CWG1CLKCON      equ	956	;# 
   654   0003BD                     CWG1ISM         equ	957	;# 
   655   0003BD                     CWG1DAT         equ	957	;# 
   656   0003BE                     CWG1DBR         equ	958	;# 
   657   0003BF                     CWG1DBF         equ	959	;# 
   658   0003C0                     CWG1CON0        equ	960	;# 
   659   0003C1                     CWG1CON1        equ	961	;# 
   660   0003C2                     CWG1AS0         equ	962	;# 
   661   0003C3                     CWG1AS1         equ	963	;# 
   662   0003C4                     CWG1STR         equ	964	;# 
   663   0003C5                     CWG2CLK         equ	965	;# 
   664   0003C5                     CWG2CLKCON      equ	965	;# 
   665   0003C6                     CWG2ISM         equ	966	;# 
   666   0003C6                     CWG2DAT         equ	966	;# 
   667   0003C7                     CWG2DBR         equ	967	;# 
   668   0003C8                     CWG2DBF         equ	968	;# 
   669   0003C9                     CWG2CON0        equ	969	;# 
   670   0003CA                     CWG2CON1        equ	970	;# 
   671   0003CB                     CWG2AS0         equ	971	;# 
   672   0003CC                     CWG2AS1         equ	972	;# 
   673   0003CD                     CWG2STR         equ	973	;# 
   674   0003CE                     CWG3CLK         equ	974	;# 
   675   0003CE                     CWG3CLKCON      equ	974	;# 
   676   0003CF                     CWG3ISM         equ	975	;# 
   677   0003CF                     CWG3DAT         equ	975	;# 
   678   0003D0                     CWG3DBR         equ	976	;# 
   679   0003D1                     CWG3DBF         equ	977	;# 
   680   0003D2                     CWG3CON0        equ	978	;# 
   681   0003D3                     CWG3CON1        equ	979	;# 
   682   0003D4                     CWG3AS0         equ	980	;# 
   683   0003D5                     CWG3AS1         equ	981	;# 
   684   0003D6                     CWG3STR         equ	982	;# 
   685   0003D7                     FVRCON          equ	983	;# 
   686   0003D8                     ADCPCON         equ	984	;# 
   687   0003D8                     ADCP            equ	984	;# 
   688   0003D9                     ADLTH           equ	985	;# 
   689   0003D9                     ADLTHL          equ	985	;# 
   690   0003DA                     ADLTHH          equ	986	;# 
   691   0003DB                     ADUTH           equ	987	;# 
   692   0003DB                     ADUTHL          equ	987	;# 
   693   0003DC                     ADUTHH          equ	988	;# 
   694   0003DD                     ADERR           equ	989	;# 
   695   0003DD                     ADERRL          equ	989	;# 
   696   0003DE                     ADERRH          equ	990	;# 
   697   0003DF                     ADSTPT          equ	991	;# 
   698   0003DF                     ADSTPTL         equ	991	;# 
   699   0003E0                     ADSTPTH         equ	992	;# 
   700   0003E1                     ADFLTR          equ	993	;# 
   701   0003E1                     ADFLTRL         equ	993	;# 
   702   0003E2                     ADFLTRH         equ	994	;# 
   703   0003E3                     ADACC           equ	995	;# 
   704   0003E3                     ADACCL          equ	995	;# 
   705   0003E4                     ADACCH          equ	996	;# 
   706   0003E5                     ADACCU          equ	997	;# 
   707   0003E6                     ADCNT           equ	998	;# 
   708   0003E7                     ADRPT           equ	999	;# 
   709   0003E8                     ADPREV          equ	1000	;# 
   710   0003E8                     ADPREVL         equ	1000	;# 
   711   0003E9                     ADPREVH         equ	1001	;# 
   712   0003EA                     ADRES           equ	1002	;# 
   713   0003EA                     ADRESL          equ	1002	;# 
   714   0003EB                     ADRESH          equ	1003	;# 
   715   0003EC                     ADPCH           equ	1004	;# 
   716   0003EE                     ADACQ           equ	1006	;# 
   717   0003EE                     ADACQL          equ	1006	;# 
   718   0003EF                     ADACQH          equ	1007	;# 
   719   0003F0                     ADCAP           equ	1008	;# 
   720   0003F1                     ADPRE           equ	1009	;# 
   721   0003F1                     ADPREL          equ	1009	;# 
   722   0003F2                     ADPREH          equ	1010	;# 
   723   0003F3                     ADCON0          equ	1011	;# 
   724   0003F4                     ADCON1          equ	1012	;# 
   725   0003F5                     ADCON2          equ	1013	;# 
   726   0003F6                     ADCON3          equ	1014	;# 
   727   0003F7                     ADSTAT          equ	1015	;# 
   728   0003F8                     ADREF           equ	1016	;# 
   729   0003F9                     ADACT           equ	1017	;# 
   730   0003FA                     ADCLK           equ	1018	;# 
   731   000400                     ANSELA          equ	1024	;# 
   732   000401                     WPUA            equ	1025	;# 
   733   000402                     ODCONA          equ	1026	;# 
   734   000403                     SLRCONA         equ	1027	;# 
   735   000404                     INLVLA          equ	1028	;# 
   736   000405                     IOCAP           equ	1029	;# 
   737   000406                     IOCAN           equ	1030	;# 
   738   000407                     IOCAF           equ	1031	;# 
   739   000408                     ANSELB          equ	1032	;# 
   740   000409                     WPUB            equ	1033	;# 
   741   00040A                     ODCONB          equ	1034	;# 
   742   00040B                     SLRCONB         equ	1035	;# 
   743   00040C                     INLVLB          equ	1036	;# 
   744   00040D                     IOCBP           equ	1037	;# 
   745   00040E                     IOCBN           equ	1038	;# 
   746   00040F                     IOCBF           equ	1039	;# 
   747   000410                     ANSELC          equ	1040	;# 
   748   000411                     WPUC            equ	1041	;# 
   749   000412                     ODCONC          equ	1042	;# 
   750   000413                     SLRCONC         equ	1043	;# 
   751   000414                     INLVLC          equ	1044	;# 
   752   000415                     IOCCP           equ	1045	;# 
   753   000416                     IOCCN           equ	1046	;# 
   754   000417                     IOCCF           equ	1047	;# 
   755   000418                     ANSELD          equ	1048	;# 
   756   000419                     WPUD            equ	1049	;# 
   757   00041A                     ODCOND          equ	1050	;# 
   758   00041B                     SLRCOND         equ	1051	;# 
   759   00041C                     INLVLD          equ	1052	;# 
   760   000420                     ANSELE          equ	1056	;# 
   761   000421                     WPUE            equ	1057	;# 
   762   000422                     ODCONE          equ	1058	;# 
   763   000423                     SLRCONE         equ	1059	;# 
   764   000424                     INLVLE          equ	1060	;# 
   765   000425                     IOCEP           equ	1061	;# 
   766   000426                     IOCEN           equ	1062	;# 
   767   000427                     IOCEF           equ	1063	;# 
   768   000428                     ANSELF          equ	1064	;# 
   769   000429                     WPUF            equ	1065	;# 
   770   00042A                     ODCONF          equ	1066	;# 
   771   00042B                     SLRCONF         equ	1067	;# 
   772   00042C                     INLVLF          equ	1068	;# 
   773   000440                     NCO1ACC         equ	1088	;# 
   774   000440                     NCO1ACCL        equ	1088	;# 
   775   000441                     NCO1ACCH        equ	1089	;# 
   776   000442                     NCO1ACCU        equ	1090	;# 
   777   000443                     NCO1INC         equ	1091	;# 
   778   000443                     NCO1INCL        equ	1091	;# 
   779   000444                     NCO1INCH        equ	1092	;# 
   780   000445                     NCO1INCU        equ	1093	;# 
   781   000446                     NCO1CON         equ	1094	;# 
   782   000447                     NCO1CLK         equ	1095	;# 
   783   000448                     NCO2ACC         equ	1096	;# 
   784   000448                     NCO2ACCL        equ	1096	;# 
   785   000449                     NCO2ACCH        equ	1097	;# 
   786   00044A                     NCO2ACCU        equ	1098	;# 
   787   00044B                     NCO2INC         equ	1099	;# 
   788   00044B                     NCO2INCL        equ	1099	;# 
   789   00044C                     NCO2INCH        equ	1100	;# 
   790   00044D                     NCO2INCU        equ	1101	;# 
   791   00044E                     NCO2CON         equ	1102	;# 
   792   00044F                     NCO2CLK         equ	1103	;# 
   793   000450                     NCO3ACC         equ	1104	;# 
   794   000450                     NCO3ACCL        equ	1104	;# 
   795   000451                     NCO3ACCH        equ	1105	;# 
   796   000452                     NCO3ACCU        equ	1106	;# 
   797   000453                     NCO3INC         equ	1107	;# 
   798   000453                     NCO3INCL        equ	1107	;# 
   799   000454                     NCO3INCH        equ	1108	;# 
   800   000455                     NCO3INCU        equ	1109	;# 
   801   000456                     NCO3CON         equ	1110	;# 
   802   000457                     NCO3CLK         equ	1111	;# 
   803   000459                     IVTLOCK         equ	1113	;# 
   804   00045A                     IVTAD           equ	1114	;# 
   805   00045A                     IVTADL          equ	1114	;# 
   806   00045B                     IVTADH          equ	1115	;# 
   807   00045C                     IVTADU          equ	1116	;# 
   808   00045D                     IVTBASE         equ	1117	;# 
   809   00045D                     IVTBASEL        equ	1117	;# 
   810   00045E                     IVTBASEH        equ	1118	;# 
   811   00045F                     IVTBASEU        equ	1119	;# 
   812   000460                     PWM1ERS         equ	1120	;# 
   813   000461                     PWM1CLK         equ	1121	;# 
   814   000462                     PWM1LDS         equ	1122	;# 
   815   000463                     PWM1PR          equ	1123	;# 
   816   000463                     PWM1PRL         equ	1123	;# 
   817   000464                     PWM1PRH         equ	1124	;# 
   818   000465                     PWM1CPRE        equ	1125	;# 
   819   000466                     PWM1PIPOS       equ	1126	;# 
   820   000467                     PWM1GIR         equ	1127	;# 
   821   000468                     PWM1GIE         equ	1128	;# 
   822   000469                     PWM1CON         equ	1129	;# 
   823   00046A                     PWM1S1CFG       equ	1130	;# 
   824   00046B                     PWM1S1P1        equ	1131	;# 
   825   00046B                     PWM1S1P1L       equ	1131	;# 
   826   00046C                     PWM1S1P1H       equ	1132	;# 
   827   00046D                     PWM1S1P2        equ	1133	;# 
   828   00046D                     PWM1S1P2L       equ	1133	;# 
   829   00046E                     PWM1S1P2H       equ	1134	;# 
   830   00046F                     PWM2ERS         equ	1135	;# 
   831   000470                     PWM2CLK         equ	1136	;# 
   832   000471                     PWM2LDS         equ	1137	;# 
   833   000472                     PWM2PR          equ	1138	;# 
   834   000472                     PWM2PRL         equ	1138	;# 
   835   000473                     PWM2PRH         equ	1139	;# 
   836   000474                     PWM2CPRE        equ	1140	;# 
   837   000475                     PWM2PIPOS       equ	1141	;# 
   838   000476                     PWM2GIR         equ	1142	;# 
   839   000477                     PWM2GIE         equ	1143	;# 
   840   000478                     PWM2CON         equ	1144	;# 
   841   000479                     PWM2S1CFG       equ	1145	;# 
   842   00047A                     PWM2S1P1        equ	1146	;# 
   843   00047A                     PWM2S1P1L       equ	1146	;# 
   844   00047B                     PWM2S1P1H       equ	1147	;# 
   845   00047C                     PWM2S1P2        equ	1148	;# 
   846   00047C                     PWM2S1P2L       equ	1148	;# 
   847   00047D                     PWM2S1P2H       equ	1149	;# 
   848   00047E                     PWM3ERS         equ	1150	;# 
   849   00047F                     PWM3CLK         equ	1151	;# 
   850   000480                     PWM3LDS         equ	1152	;# 
   851   000481                     PWM3PR          equ	1153	;# 
   852   000481                     PWM3PRL         equ	1153	;# 
   853   000482                     PWM3PRH         equ	1154	;# 
   854   000483                     PWM3CPRE        equ	1155	;# 
   855   000484                     PWM3PIPOS       equ	1156	;# 
   856   000485                     PWM3GIR         equ	1157	;# 
   857   000486                     PWM3GIE         equ	1158	;# 
   858   000487                     PWM3CON         equ	1159	;# 
   859   000488                     PWM3S1CFG       equ	1160	;# 
   860   000489                     PWM3S1P1        equ	1161	;# 
   861   000489                     PWM3S1P1L       equ	1161	;# 
   862   00048A                     PWM3S1P1H       equ	1162	;# 
   863   00048B                     PWM3S1P2        equ	1163	;# 
   864   00048B                     PWM3S1P2L       equ	1163	;# 
   865   00048C                     PWM3S1P2H       equ	1164	;# 
   866   00049C                     PWMLOAD         equ	1180	;# 
   867   00049D                     PWMEN           equ	1181	;# 
   868   00049E                     PIE0            equ	1182	;# 
   869   00049F                     PIE1            equ	1183	;# 
   870   0004A0                     PIE2            equ	1184	;# 
   871   0004A1                     PIE3            equ	1185	;# 
   872   0004A2                     PIE4            equ	1186	;# 
   873   0004A3                     PIE5            equ	1187	;# 
   874   0004A4                     PIE6            equ	1188	;# 
   875   0004A5                     PIE7            equ	1189	;# 
   876   0004A6                     PIE8            equ	1190	;# 
   877   0004A7                     PIE9            equ	1191	;# 
   878   0004A8                     PIE10           equ	1192	;# 
   879   0004A9                     PIE11           equ	1193	;# 
   880   0004AA                     PIE12           equ	1194	;# 
   881   0004AB                     PIE13           equ	1195	;# 
   882   0004AC                     PIE14           equ	1196	;# 
   883   0004AD                     PIE15           equ	1197	;# 
   884   0004AE                     PIR0            equ	1198	;# 
   885   0004AF                     PIR1            equ	1199	;# 
   886   0004B0                     PIR2            equ	1200	;# 
   887   0004B1                     PIR3            equ	1201	;# 
   888   0004B2                     PIR4            equ	1202	;# 
   889   0004B3                     PIR5            equ	1203	;# 
   890   0004B4                     PIR6            equ	1204	;# 
   891   0004B5                     PIR7            equ	1205	;# 
   892   0004B6                     PIR8            equ	1206	;# 
   893   0004B7                     PIR9            equ	1207	;# 
   894   0004B8                     PIR10           equ	1208	;# 
   895   0004B9                     PIR11           equ	1209	;# 
   896   0004BA                     PIR12           equ	1210	;# 
   897   0004BB                     PIR13           equ	1211	;# 
   898   0004BC                     PIR14           equ	1212	;# 
   899   0004BD                     PIR15           equ	1213	;# 
   900   0004BE                     LATA            equ	1214	;# 
   901   0004BF                     LATB            equ	1215	;# 
   902   0004C0                     LATC            equ	1216	;# 
   903   0004C1                     LATD            equ	1217	;# 
   904   0004C2                     LATE            equ	1218	;# 
   905   0004C3                     LATF            equ	1219	;# 
   906   0004C6                     TRISA           equ	1222	;# 
   907   0004C7                     TRISB           equ	1223	;# 
   908   0004C8                     TRISC           equ	1224	;# 
   909   0004C9                     TRISD           equ	1225	;# 
   910   0004CA                     TRISE           equ	1226	;# 
   911   0004CB                     TRISF           equ	1227	;# 
   912   0004CE                     PORTA           equ	1230	;# 
   913   0004CF                     PORTB           equ	1231	;# 
   914   0004D0                     PORTC           equ	1232	;# 
   915   0004D1                     PORTD           equ	1233	;# 
   916   0004D2                     PORTE           equ	1234	;# 
   917   0004D3                     PORTF           equ	1235	;# 
   918   0004D6                     INTCON0         equ	1238	;# 
   919   0004D7                     INTCON1         equ	1239	;# 
   920   0004D8                     STATUS          equ	1240	;# 
   921   0004D9                     FSR2            equ	1241	;# 
   922   0004D9                     FSR2L           equ	1241	;# 
   923   0004DA                     FSR2H           equ	1242	;# 
   924   0004DB                     PLUSW2          equ	1243	;# 
   925   0004DC                     PREINC2         equ	1244	;# 
   926   0004DD                     POSTDEC2        equ	1245	;# 
   927   0004DE                     POSTINC2        equ	1246	;# 
   928   0004DF                     INDF2           equ	1247	;# 
   929   0004E0                     BSR             equ	1248	;# 
   930   0004E1                     FSR1            equ	1249	;# 
   931   0004E1                     FSR1L           equ	1249	;# 
   932   0004E2                     FSR1H           equ	1250	;# 
   933   0004E3                     PLUSW1          equ	1251	;# 
   934   0004E4                     PREINC1         equ	1252	;# 
   935   0004E5                     POSTDEC1        equ	1253	;# 
   936   0004E6                     POSTINC1        equ	1254	;# 
   937   0004E7                     INDF1           equ	1255	;# 
   938   0004E8                     WREG            equ	1256	;# 
   939   0004E9                     FSR0            equ	1257	;# 
   940   0004E9                     FSR0L           equ	1257	;# 
   941   0004EA                     FSR0H           equ	1258	;# 
   942   0004EB                     PLUSW0          equ	1259	;# 
   943   0004EC                     PREINC0         equ	1260	;# 
   944   0004ED                     POSTDEC0        equ	1261	;# 
   945   0004EE                     POSTINC0        equ	1262	;# 
   946   0004EF                     INDF0           equ	1263	;# 
   947   0004F0                     PCON0           equ	1264	;# 
   948   0004F1                     PCON1           equ	1265	;# 
   949   0004F2                     CPUDOZE         equ	1266	;# 
   950   0004F3                     PROD            equ	1267	;# 
   951   0004F3                     PRODL           equ	1267	;# 
   952   0004F4                     PRODH           equ	1268	;# 
   953   0004F5                     TABLAT          equ	1269	;# 
   954   0004F6                     TBLPTR          equ	1270	;# 
   955   0004F6                     TBLPTRL         equ	1270	;# 
   956   0004F7                     TBLPTRH         equ	1271	;# 
   957   0004F8                     TBLPTRU         equ	1272	;# 
   958   0004F9                     PCLAT           equ	1273	;# 
   959   0004F9                     PCL             equ	1273	;# 
   960   0004FA                     PCLATH          equ	1274	;# 
   961   0004FB                     PCLATU          equ	1275	;# 
   962   0004FC                     STKPTR          equ	1276	;# 
   963   0004FD                     TOS             equ	1277	;# 
   964   0004FD                     TOSL            equ	1277	;# 
   965   0004FE                     TOSH            equ	1278	;# 
   966   0004FF                     TOSU            equ	1279	;# 
   967   000039                     CLKRCON         equ	57	;# 
   968   00003A                     CLKRCLK         equ	58	;# 
   969   000040                     NVMCON0         equ	64	;# 
   970   000041                     NVMCON1         equ	65	;# 
   971   000042                     NVMLOCK         equ	66	;# 
   972   000043                     NVMADR          equ	67	;# 
   973   000043                     NVMADRL         equ	67	;# 
   974   000044                     NVMADRH         equ	68	;# 
   975   000045                     NVMADRU         equ	69	;# 
   976   000046                     NVMDAT          equ	70	;# 
   977   000046                     NVMDATL         equ	70	;# 
   978   000047                     NVMDATH         equ	71	;# 
   979   000048                     VREGCON         equ	72	;# 
   980   000049                     BORCON          equ	73	;# 
   981   00004A                     HLVDCON0        equ	74	;# 
   982   00004B                     HLVDCON1        equ	75	;# 
   983   00004C                     ZCDCON          equ	76	;# 
   984   000060                     PMD0            equ	96	;# 
   985   000061                     PMD1            equ	97	;# 
   986   000063                     PMD3            equ	99	;# 
   987   000064                     PMD4            equ	100	;# 
   988   000065                     PMD5            equ	101	;# 
   989   000066                     PMD6            equ	102	;# 
   990   000067                     PMD7            equ	103	;# 
   991   000068                     PMD8            equ	104	;# 
   992   00006A                     MD1CON0         equ	106	;# 
   993   00006B                     MD1CON1         equ	107	;# 
   994   00006C                     MD1SRC          equ	108	;# 
   995   00006D                     MD1CARL         equ	109	;# 
   996   00006E                     MD1CARH         equ	110	;# 
   997   00006F                     CMOUT           equ	111	;# 
   998   000070                     CM1CON0         equ	112	;# 
   999   000071                     CM1CON1         equ	113	;# 
  1000   000072                     CM1NCH          equ	114	;# 
  1001   000073                     CM1PCH          equ	115	;# 
  1002   000074                     CM2CON0         equ	116	;# 
  1003   000075                     CM2CON1         equ	117	;# 
  1004   000076                     CM2NCH          equ	118	;# 
  1005   000077                     CM2PCH          equ	119	;# 
  1006   000078                     WDTCON0         equ	120	;# 
  1007   000079                     WDTCON1         equ	121	;# 
  1008   00007A                     WDTPS           equ	122	;# 
  1009   00007A                     WDTPSL          equ	122	;# 
  1010   00007B                     WDTPSH          equ	123	;# 
  1011   00007C                     WDTTMR          equ	124	;# 
  1012   00007D                     DAC1DAT         equ	125	;# 
  1013   00007D                     DAC1DATL        equ	125	;# 
  1014   00007F                     DAC1CON         equ	127	;# 
  1015   000080                     SPI1RXB         equ	128	;# 
  1016   000081                     SPI1TXB         equ	129	;# 
  1017   000082                     SPI1TCNT        equ	130	;# 
  1018   000082                     SPI1TCNTL       equ	130	;# 
  1019   000083                     SPI1TCNTH       equ	131	;# 
  1020   000084                     SPI1CON0        equ	132	;# 
  1021   000085                     SPI1CON1        equ	133	;# 
  1022   000086                     SPI1CON2        equ	134	;# 
  1023   000087                     SPI1STATUS      equ	135	;# 
  1024   000088                     SPI1TWIDTH      equ	136	;# 
  1025   000089                     SPI1BAUD        equ	137	;# 
  1026   00008A                     SPI1INTF        equ	138	;# 
  1027   00008B                     SPI1INTE        equ	139	;# 
  1028   00008C                     SPI1CLK         equ	140	;# 
  1029   00008D                     SPI2RXB         equ	141	;# 
  1030   00008E                     SPI2TXB         equ	142	;# 
  1031   00008F                     SPI2TCNT        equ	143	;# 
  1032   00008F                     SPI2TCNTL       equ	143	;# 
  1033   000090                     SPI2TCNTH       equ	144	;# 
  1034   000091                     SPI2CON0        equ	145	;# 
  1035   000092                     SPI2CON1        equ	146	;# 
  1036   000093                     SPI2CON2        equ	147	;# 
  1037   000094                     SPI2STATUS      equ	148	;# 
  1038   000095                     SPI2TWIDTH      equ	149	;# 
  1039   000096                     SPI2BAUD        equ	150	;# 
  1040   000097                     SPI2INTF        equ	151	;# 
  1041   000098                     SPI2INTE        equ	152	;# 
  1042   000099                     SPI2CLK         equ	153	;# 
  1043   0000AC                     ACTCON          equ	172	;# 
  1044   0000AD                     OSCCON1         equ	173	;# 
  1045   0000AE                     OSCCON2         equ	174	;# 
  1046   0000AF                     OSCCON3         equ	175	;# 
  1047   0000B0                     OSCTUNE         equ	176	;# 
  1048   0000B1                     OSCFRQ          equ	177	;# 
  1049   0000B1                     OSCFREQ         equ	177	;# 
  1050   0000B2                     OSCSTAT         equ	178	;# 
  1051   0000B2                     OSCSTAT1        equ	178	;# 
  1052   0000B3                     OSCEN           equ	179	;# 
  1053   0000B4                     PRLOCK          equ	180	;# 
  1054   0000B5                     SCANPR          equ	181	;# 
  1055   0000B6                     DMA1PR          equ	182	;# 
  1056   0000B7                     DMA2PR          equ	183	;# 
  1057   0000B8                     DMA3PR          equ	184	;# 
  1058   0000B9                     DMA4PR          equ	185	;# 
  1059   0000BA                     DMA5PR          equ	186	;# 
  1060   0000BB                     DMA6PR          equ	187	;# 
  1061   0000BE                     MAINPR          equ	190	;# 
  1062   0000BF                     ISRPR           equ	191	;# 
  1063   0000D4                     CLCDATA         equ	212	;# 
  1064   0000D5                     CLCSELECT       equ	213	;# 
  1065   0000D6                     CLCnCON         equ	214	;# 
  1066   0000D7                     CLCnPOL         equ	215	;# 
  1067   0000D8                     CLCnSEL0        equ	216	;# 
  1068   0000D9                     CLCnSEL1        equ	217	;# 
  1069   0000DA                     CLCnSEL2        equ	218	;# 
  1070   0000DB                     CLCnSEL3        equ	219	;# 
  1071   0000DC                     CLCnGLS0        equ	220	;# 
  1072   0000DD                     CLCnGLS1        equ	221	;# 
  1073   0000DE                     CLCnGLS2        equ	222	;# 
  1074   0000DF                     CLCnGLS3        equ	223	;# 
  1075   0000E8                     DMASELECT       equ	232	;# 
  1076   0000E9                     DMAnBUF         equ	233	;# 
  1077   0000EA                     DMAnDCNT        equ	234	;# 
  1078   0000EA                     DMAnDCNTL       equ	234	;# 
  1079   0000EB                     DMAnDCNTH       equ	235	;# 
  1080   0000EC                     DMAnDPTR        equ	236	;# 
  1081   0000EC                     DMAnDPTRL       equ	236	;# 
  1082   0000ED                     DMAnDPTRH       equ	237	;# 
  1083   0000EE                     DMAnDSZ         equ	238	;# 
  1084   0000EE                     DMAnDSZL        equ	238	;# 
  1085   0000EF                     DMAnDSZH        equ	239	;# 
  1086   0000F0                     DMAnDSA         equ	240	;# 
  1087   0000F0                     DMAnDSAL        equ	240	;# 
  1088   0000F1                     DMAnDSAH        equ	241	;# 
  1089   0000F2                     DMAnSCNT        equ	242	;# 
  1090   0000F2                     DMAnSCNTL       equ	242	;# 
  1091   0000F3                     DMAnSCNTH       equ	243	;# 
  1092   0000F4                     DMAnSPTR        equ	244	;# 
  1093   0000F4                     DMAnSPTRL       equ	244	;# 
  1094   0000F5                     DMAnSPTRH       equ	245	;# 
  1095   0000F6                     DMAnSPTRU       equ	246	;# 
  1096   0000F7                     DMAnSSZ         equ	247	;# 
  1097   0000F7                     DMAnSSZL        equ	247	;# 
  1098   0000F8                     DMAnSSZH        equ	248	;# 
  1099   0000F9                     DMAnSSA         equ	249	;# 
  1100   0000F9                     DMAnSSAL        equ	249	;# 
  1101   0000FA                     DMAnSSAH        equ	250	;# 
  1102   0000FB                     DMAnSSAU        equ	251	;# 
  1103   0000FC                     DMAnCON0        equ	252	;# 
  1104   0000FD                     DMAnCON1        equ	253	;# 
  1105   0000FE                     DMAnAIRQ        equ	254	;# 
  1106   0000FF                     DMAnSIRQ        equ	255	;# 
  1107   000200                     PPSLOCK         equ	512	;# 
  1108   000201                     RA0PPS          equ	513	;# 
  1109   000202                     RA1PPS          equ	514	;# 
  1110   000203                     RA2PPS          equ	515	;# 
  1111   000204                     RA3PPS          equ	516	;# 
  1112   000205                     RA4PPS          equ	517	;# 
  1113   000206                     RA5PPS          equ	518	;# 
  1114   000207                     RA6PPS          equ	519	;# 
  1115   000208                     RA7PPS          equ	520	;# 
  1116   000209                     RB0PPS          equ	521	;# 
  1117   00020A                     RB1PPS          equ	522	;# 
  1118   00020B                     RB2PPS          equ	523	;# 
  1119   00020C                     RB3PPS          equ	524	;# 
  1120   00020D                     RB4PPS          equ	525	;# 
  1121   00020E                     RB5PPS          equ	526	;# 
  1122   00020F                     RB6PPS          equ	527	;# 
  1123   000210                     RB7PPS          equ	528	;# 
  1124   000211                     RC0PPS          equ	529	;# 
  1125   000212                     RC1PPS          equ	530	;# 
  1126   000213                     RC2PPS          equ	531	;# 
  1127   000214                     RC3PPS          equ	532	;# 
  1128   000215                     RC4PPS          equ	533	;# 
  1129   000216                     RC5PPS          equ	534	;# 
  1130   000217                     RC6PPS          equ	535	;# 
  1131   000218                     RC7PPS          equ	536	;# 
  1132   000219                     RD0PPS          equ	537	;# 
  1133   00021A                     RD1PPS          equ	538	;# 
  1134   00021B                     RD2PPS          equ	539	;# 
  1135   00021C                     RD3PPS          equ	540	;# 
  1136   00021D                     RD4PPS          equ	541	;# 
  1137   00021E                     RD5PPS          equ	542	;# 
  1138   00021F                     RD6PPS          equ	543	;# 
  1139   000220                     RD7PPS          equ	544	;# 
  1140   000221                     RE0PPS          equ	545	;# 
  1141   000222                     RE1PPS          equ	546	;# 
  1142   000223                     RE2PPS          equ	547	;# 
  1143   000229                     RF0PPS          equ	553	;# 
  1144   00022A                     RF1PPS          equ	554	;# 
  1145   00022B                     RF2PPS          equ	555	;# 
  1146   00022C                     RF3PPS          equ	556	;# 
  1147   00022D                     RF4PPS          equ	557	;# 
  1148   00022E                     RF5PPS          equ	558	;# 
  1149   00022F                     RF6PPS          equ	559	;# 
  1150   000230                     RF7PPS          equ	560	;# 
  1151   00023E                     INT0PPS         equ	574	;# 
  1152   00023F                     INT1PPS         equ	575	;# 
  1153   000240                     INT2PPS         equ	576	;# 
  1154   000241                     T0CKIPPS        equ	577	;# 
  1155   000242                     T1CKIPPS        equ	578	;# 
  1156   000243                     T1GPPS          equ	579	;# 
  1157   000244                     T3CKIPPS        equ	580	;# 
  1158   000245                     T3GPPS          equ	581	;# 
  1159   000246                     T5CKIPPS        equ	582	;# 
  1160   000247                     T5GPPS          equ	583	;# 
  1161   000248                     T2INPPS         equ	584	;# 
  1162   000249                     T4INPPS         equ	585	;# 
  1163   00024A                     T6INPPS         equ	586	;# 
  1164   00024F                     CCP1PPS         equ	591	;# 
  1165   000250                     CCP2PPS         equ	592	;# 
  1166   000251                     CCP3PPS         equ	593	;# 
  1167   000253                     PWM1ERSPPS      equ	595	;# 
  1168   000254                     PWM2ERSPPS      equ	596	;# 
  1169   000255                     PWM3ERSPPS      equ	597	;# 
  1170   000257                     PWMIN0PPS       equ	599	;# 
  1171   000258                     PWMIN1PPS       equ	600	;# 
  1172   000259                     SMT1WINPPS      equ	601	;# 
  1173   00025A                     SMT1SIGPPS      equ	602	;# 
  1174   00025B                     CWG1PPS         equ	603	;# 
  1175   00025B                     CWG1INPPS       equ	603	;# 
  1176   00025C                     CWG2PPS         equ	604	;# 
  1177   00025C                     CWG2INPPS       equ	604	;# 
  1178   00025D                     CWG3PPS         equ	605	;# 
  1179   00025D                     CWG3INPPS       equ	605	;# 
  1180   00025E                     MD1CARLPPS      equ	606	;# 
  1181   00025E                     MDCARLPPS       equ	606	;# 
  1182   00025F                     MD1CARHPPS      equ	607	;# 
  1183   00025F                     MDCARHPPS       equ	607	;# 
  1184   000260                     MD1SRCPPS       equ	608	;# 
  1185   000260                     MDSRCPPS        equ	608	;# 
  1186   000261                     CLCIN0PPS       equ	609	;# 
  1187   000262                     CLCIN1PPS       equ	610	;# 
  1188   000263                     CLCIN2PPS       equ	611	;# 
  1189   000264                     CLCIN3PPS       equ	612	;# 
  1190   000265                     CLCIN4PPS       equ	613	;# 
  1191   000266                     CLCIN5PPS       equ	614	;# 
  1192   000267                     CLCIN6PPS       equ	615	;# 
  1193   000268                     CLCIN7PPS       equ	616	;# 
  1194   000269                     ADACTPPS        equ	617	;# 
  1195   00026A                     SPI1SCKPPS      equ	618	;# 
  1196   00026B                     SPI1SDIPPS      equ	619	;# 
  1197   00026C                     SPI1SSPPS       equ	620	;# 
  1198   00026D                     SPI2SCKPPS      equ	621	;# 
  1199   00026E                     SPI2SDIPPS      equ	622	;# 
  1200   00026F                     SPI2SSPPS       equ	623	;# 
  1201   000270                     I2C1SDAPPS      equ	624	;# 
  1202   000271                     I2C1SCLPPS      equ	625	;# 
  1203   000272                     U1RXPPS         equ	626	;# 
  1204   000273                     U1CTSPPS        equ	627	;# 
  1205   000274                     U2RXPPS         equ	628	;# 
  1206   000275                     U2CTSPPS        equ	629	;# 
  1207   000276                     U3RXPPS         equ	630	;# 
  1208   000277                     U3CTSPPS        equ	631	;# 
  1209   000278                     U4RXPPS         equ	632	;# 
  1210   000279                     U4CTSPPS        equ	633	;# 
  1211   00027A                     U5RXPPS         equ	634	;# 
  1212   00027B                     U5CTSPPS        equ	635	;# 
  1213   000286                     RC4I2C          equ	646	;# 
  1214   000287                     RC3I2C          equ	647	;# 
  1215   000288                     RB2I2C          equ	648	;# 
  1216   000289                     RB1I2C          equ	649	;# 
  1217   00028B                     I2C1RXB         equ	651	;# 
  1218   00028C                     I2C1TXB         equ	652	;# 
  1219   00028D                     I2C1CNT         equ	653	;# 
  1220   00028E                     I2C1ADB0        equ	654	;# 
  1221   00028F                     I2C1ADB1        equ	655	;# 
  1222   000290                     I2C1ADR0        equ	656	;# 
  1223   000291                     I2C1ADR1        equ	657	;# 
  1224   000292                     I2C1ADR2        equ	658	;# 
  1225   000293                     I2C1ADR3        equ	659	;# 
  1226   000294                     I2C1CON0        equ	660	;# 
  1227   000295                     I2C1CON1        equ	661	;# 
  1228   000296                     I2C1CON2        equ	662	;# 
  1229   000297                     I2C1ERR         equ	663	;# 
  1230   000298                     I2C1STAT0       equ	664	;# 
  1231   000299                     I2C1STAT1       equ	665	;# 
  1232   00029A                     I2C1PIR         equ	666	;# 
  1233   00029B                     I2C1PIE         equ	667	;# 
  1234   00029C                     I2C1CLK         equ	668	;# 
  1235   00029D                     I2C1BTO         equ	669	;# 
  1236   0002A1                     U1RXB           equ	673	;# 
  1237   0002A1                     U1RXBL          equ	673	;# 
  1238   0002A2                     U1RXCHK         equ	674	;# 
  1239   0002A3                     U1TXB           equ	675	;# 
  1240   0002A3                     U1TXBL          equ	675	;# 
  1241   0002A4                     U1TXCHK         equ	676	;# 
  1242   0002A5                     U1P1            equ	677	;# 
  1243   0002A5                     U1P1L           equ	677	;# 
  1244   0002A6                     U1P1H           equ	678	;# 
  1245   0002A7                     U1P2            equ	679	;# 
  1246   0002A7                     U1P2L           equ	679	;# 
  1247   0002A8                     U1P2H           equ	680	;# 
  1248   0002A9                     U1P3            equ	681	;# 
  1249   0002A9                     U1P3L           equ	681	;# 
  1250   0002AA                     U1P3H           equ	682	;# 
  1251   0002AB                     U1CON0          equ	683	;# 
  1252   0002AC                     U1CON1          equ	684	;# 
  1253   0002AD                     U1CON2          equ	685	;# 
  1254   0002AE                     U1BRG           equ	686	;# 
  1255   0002AE                     U1BRGL          equ	686	;# 
  1256   0002AF                     U1BRGH          equ	687	;# 
  1257   0002B0                     U1FIFO          equ	688	;# 
  1258   0002B1                     U1UIR           equ	689	;# 
  1259   0002B2                     U1ERRIR         equ	690	;# 
  1260   0002B3                     U1ERRIE         equ	691	;# 
  1261   0002B4                     U2RXB           equ	692	;# 
  1262   0002B4                     U2RXBL          equ	692	;# 
  1263   0002B6                     U2TXB           equ	694	;# 
  1264   0002B6                     U2TXBL          equ	694	;# 
  1265   0002B8                     U2P1            equ	696	;# 
  1266   0002B8                     U2P1L           equ	696	;# 
  1267   0002BA                     U2P2            equ	698	;# 
  1268   0002BA                     U2P2L           equ	698	;# 
  1269   0002BC                     U2P3            equ	700	;# 
  1270   0002BC                     U2P3L           equ	700	;# 
  1271   0002BE                     U2CON0          equ	702	;# 
  1272   0002BF                     U2CON1          equ	703	;# 
  1273   0002C0                     U2CON2          equ	704	;# 
  1274   0002C1                     U2BRG           equ	705	;# 
  1275   0002C1                     U2BRGL          equ	705	;# 
  1276   0002C2                     U2BRGH          equ	706	;# 
  1277   0002C3                     U2FIFO          equ	707	;# 
  1278   0002C4                     U2UIR           equ	708	;# 
  1279   0002C5                     U2ERRIR         equ	709	;# 
  1280   0002C6                     U2ERRIE         equ	710	;# 
  1281   0002C7                     U3RXB           equ	711	;# 
  1282   0002C7                     U3RXBL          equ	711	;# 
  1283   0002C9                     U3TXB           equ	713	;# 
  1284   0002C9                     U3TXBL          equ	713	;# 
  1285   0002CB                     U3P1            equ	715	;# 
  1286   0002CB                     U3P1L           equ	715	;# 
  1287   0002CD                     U3P2            equ	717	;# 
  1288   0002CD                     U3P2L           equ	717	;# 
  1289   0002CF                     U3P3            equ	719	;# 
  1290   0002CF                     U3P3L           equ	719	;# 
  1291   0002D1                     U3CON0          equ	721	;# 
  1292   0002D2                     U3CON1          equ	722	;# 
  1293   0002D3                     U3CON2          equ	723	;# 
  1294   0002D4                     U3BRG           equ	724	;# 
  1295   0002D4                     U3BRGL          equ	724	;# 
  1296   0002D5                     U3BRGH          equ	725	;# 
  1297   0002D6                     U3FIFO          equ	726	;# 
  1298   0002D7                     U3UIR           equ	727	;# 
  1299   0002D8                     U3ERRIR         equ	728	;# 
  1300   0002D9                     U3ERRIE         equ	729	;# 
  1301   0002DA                     U4RXB           equ	730	;# 
  1302   0002DA                     U4RXBL          equ	730	;# 
  1303   0002DC                     U4TXB           equ	732	;# 
  1304   0002DC                     U4TXBL          equ	732	;# 
  1305   0002DE                     U4P1            equ	734	;# 
  1306   0002DE                     U4P1L           equ	734	;# 
  1307   0002E0                     U4P2            equ	736	;# 
  1308   0002E0                     U4P2L           equ	736	;# 
  1309   0002E2                     U4P3            equ	738	;# 
  1310   0002E2                     U4P3L           equ	738	;# 
  1311   0002E4                     U4CON0          equ	740	;# 
  1312   0002E5                     U4CON1          equ	741	;# 
  1313   0002E6                     U4CON2          equ	742	;# 
  1314   0002E7                     U4BRG           equ	743	;# 
  1315   0002E7                     U4BRGL          equ	743	;# 
  1316   0002E8                     U4BRGH          equ	744	;# 
  1317   0002E9                     U4FIFO          equ	745	;# 
  1318   0002EA                     U4UIR           equ	746	;# 
  1319   0002EB                     U4ERRIR         equ	747	;# 
  1320   0002EC                     U4ERRIE         equ	748	;# 
  1321   0002ED                     U5RXB           equ	749	;# 
  1322   0002ED                     U5RXBL          equ	749	;# 
  1323   0002EF                     U5TXB           equ	751	;# 
  1324   0002EF                     U5TXBL          equ	751	;# 
  1325   0002F1                     U5P1            equ	753	;# 
  1326   0002F1                     U5P1L           equ	753	;# 
  1327   0002F3                     U5P2            equ	755	;# 
  1328   0002F3                     U5P2L           equ	755	;# 
  1329   0002F5                     U5P3            equ	757	;# 
  1330   0002F5                     U5P3L           equ	757	;# 
  1331   0002F7                     U5CON0          equ	759	;# 
  1332   0002F8                     U5CON1          equ	760	;# 
  1333   0002F9                     U5CON2          equ	761	;# 
  1334   0002FA                     U5BRG           equ	762	;# 
  1335   0002FA                     U5BRGL          equ	762	;# 
  1336   0002FB                     U5BRGH          equ	763	;# 
  1337   0002FC                     U5FIFO          equ	764	;# 
  1338   0002FD                     U5UIR           equ	765	;# 
  1339   0002FE                     U5ERRIR         equ	766	;# 
  1340   0002FF                     U5ERRIE         equ	767	;# 
  1341   000300                     SMT1TMR         equ	768	;# 
  1342   000300                     SMT1TMRL        equ	768	;# 
  1343   000301                     SMT1TMRH        equ	769	;# 
  1344   000302                     SMT1TMRU        equ	770	;# 
  1345   000303                     SMT1CPR         equ	771	;# 
  1346   000303                     SMT1CPRL        equ	771	;# 
  1347   000304                     SMT1CPRH        equ	772	;# 
  1348   000305                     SMT1CPRU        equ	773	;# 
  1349   000306                     SMT1CPW         equ	774	;# 
  1350   000306                     SMT1CPWL        equ	774	;# 
  1351   000307                     SMT1CPWH        equ	775	;# 
  1352   000308                     SMT1CPWU        equ	776	;# 
  1353   000309                     SMT1PR          equ	777	;# 
  1354   000309                     SMT1PRL         equ	777	;# 
  1355   00030A                     SMT1PRH         equ	778	;# 
  1356   00030B                     SMT1PRU         equ	779	;# 
  1357   00030C                     SMT1CON0        equ	780	;# 
  1358   00030D                     SMT1CON1        equ	781	;# 
  1359   00030E                     SMT1STAT        equ	782	;# 
  1360   00030F                     SMT1CLK         equ	783	;# 
  1361   000310                     SMT1SIG         equ	784	;# 
  1362   000311                     SMT1WIN         equ	785	;# 
  1363   000318                     TMR0L           equ	792	;# 
  1364   000318                     TMR0            equ	792	;# 
  1365   000319                     TMR0H           equ	793	;# 
  1366   000319                     PR0             equ	793	;# 
  1367   00031A                     T0CON0          equ	794	;# 
  1368   00031B                     T0CON1          equ	795	;# 
  1369   00031C                     TMR1            equ	796	;# 
  1370   00031C                     TMR1L           equ	796	;# 
  1371   00031D                     TMR1H           equ	797	;# 
  1372   00031E                     T1CON           equ	798	;# 
  1373   00031E                     TMR1CON         equ	798	;# 
  1374   00031F                     T1GCON          equ	799	;# 
  1375   00031F                     TMR1GCON        equ	799	;# 
  1376   000320                     T1GATE          equ	800	;# 
  1377   000320                     TMR1GATE        equ	800	;# 
  1378   000321                     T1CLK           equ	801	;# 
  1379   000321                     TMR1CLK         equ	801	;# 
  1380   000321                     PR1             equ	801	;# 
  1381   000322                     T2TMR           equ	802	;# 
  1382   000322                     TMR2            equ	802	;# 
  1383   000323                     T2PR            equ	803	;# 
  1384   000323                     PR2             equ	803	;# 
  1385   000324                     T2CON           equ	804	;# 
  1386   000325                     T2HLT           equ	805	;# 
  1387   000326                     T2CLKCON        equ	806	;# 
  1388   000326                     T2CLK           equ	806	;# 
  1389   000327                     T2RST           equ	807	;# 
  1390   000328                     TMR3            equ	808	;# 
  1391   000328                     TMR3L           equ	808	;# 
  1392   000329                     TMR3H           equ	809	;# 
  1393   00032A                     T3CON           equ	810	;# 
  1394   00032A                     TMR3CON         equ	810	;# 
  1395   00032B                     T3GCON          equ	811	;# 
  1396   00032B                     TMR3GCON        equ	811	;# 
  1397   00032C                     T3GATE          equ	812	;# 
  1398   00032C                     TMR3GATE        equ	812	;# 
  1399   00032D                     T3CLK           equ	813	;# 
  1400   00032D                     TMR3CLK         equ	813	;# 
  1401   00032D                     PR3             equ	813	;# 
  1402   00032E                     T4TMR           equ	814	;# 
  1403   00032E                     TMR4            equ	814	;# 
  1404   00032F                     T4PR            equ	815	;# 
  1405   00032F                     PR4             equ	815	;# 
  1406   000330                     T4CON           equ	816	;# 
  1407   000331                     T4HLT           equ	817	;# 
  1408   000332                     T4CLKCON        equ	818	;# 
  1409   000332                     T4CLK           equ	818	;# 
  1410   000333                     T4RST           equ	819	;# 
  1411   000334                     TMR5            equ	820	;# 
  1412   000334                     TMR5L           equ	820	;# 
  1413   000335                     TMR5H           equ	821	;# 
  1414   000336                     T5CON           equ	822	;# 
  1415   000336                     TMR5CON         equ	822	;# 
  1416   000337                     T5GCON          equ	823	;# 
  1417   000337                     TMR5GCON        equ	823	;# 
  1418   000338                     T5GATE          equ	824	;# 
  1419   000338                     TMR5GATE        equ	824	;# 
  1420   000339                     T5CLK           equ	825	;# 
  1421   000339                     TMR5CLK         equ	825	;# 
  1422   000339                     PR5             equ	825	;# 
  1423   00033A                     T6TMR           equ	826	;# 
  1424   00033A                     TMR6            equ	826	;# 
  1425   00033B                     T6PR            equ	827	;# 
  1426   00033B                     PR6             equ	827	;# 
  1427   00033C                     T6CON           equ	828	;# 
  1428   00033D                     T6HLT           equ	829	;# 
  1429   00033E                     T6CLKCON        equ	830	;# 
  1430   00033E                     T6CLK           equ	830	;# 
  1431   00033F                     T6RST           equ	831	;# 
  1432   000340                     CCPR1           equ	832	;# 
  1433   000340                     CCPR1L          equ	832	;# 
  1434   000341                     CCPR1H          equ	833	;# 
  1435   000342                     CCP1CON         equ	834	;# 
  1436   000343                     CCP1CAP         equ	835	;# 
  1437   000344                     CCPR2           equ	836	;# 
  1438   000344                     CCPR2L          equ	836	;# 
  1439   000345                     CCPR2H          equ	837	;# 
  1440   000346                     CCP2CON         equ	838	;# 
  1441   000347                     CCP2CAP         equ	839	;# 
  1442   000348                     CCPR3           equ	840	;# 
  1443   000348                     CCPR3L          equ	840	;# 
  1444   000349                     CCPR3H          equ	841	;# 
  1445   00034A                     CCP3CON         equ	842	;# 
  1446   00034B                     CCP3CAP         equ	843	;# 
  1447   00034C                     CCPTMRS0        equ	844	;# 
  1448   00034F                     CRCDATA         equ	847	;# 
  1449   00034F                     CRCDATL         equ	847	;# 
  1450   000350                     CRCDATH         equ	848	;# 
  1451   000351                     CRCACC          equ	849	;# 
  1452   000351                     CRCACCL         equ	849	;# 
  1453   000352                     CRCACCH         equ	850	;# 
  1454   000353                     CRCSHFT         equ	851	;# 
  1455   000353                     CRCSHIFTL       equ	851	;# 
  1456   000354                     CRCSHIFTH       equ	852	;# 
  1457   000355                     CRCXOR          equ	853	;# 
  1458   000355                     CRCXORL         equ	853	;# 
  1459   000356                     CRCXORH         equ	854	;# 
  1460   000357                     CRCCON0         equ	855	;# 
  1461   000358                     CRCCON1         equ	856	;# 
  1462   00035A                     SCANLADR        equ	858	;# 
  1463   00035A                     SCANLADRL       equ	858	;# 
  1464   00035B                     SCANLADRH       equ	859	;# 
  1465   00035C                     SCANLADRU       equ	860	;# 
  1466   00035D                     SCANHADR        equ	861	;# 
  1467   00035D                     SCANHADRL       equ	861	;# 
  1468   00035E                     SCANHADRH       equ	862	;# 
  1469   00035F                     SCANHADRU       equ	863	;# 
  1470   000360                     SCANCON0        equ	864	;# 
  1471   000361                     SCANTRIG        equ	865	;# 
  1472   000362                     IPR0            equ	866	;# 
  1473   000363                     IPR1            equ	867	;# 
  1474   000364                     IPR2            equ	868	;# 
  1475   000365                     IPR3            equ	869	;# 
  1476   000366                     IPR4            equ	870	;# 
  1477   000367                     IPR5            equ	871	;# 
  1478   000368                     IPR6            equ	872	;# 
  1479   000369                     IPR7            equ	873	;# 
  1480   00036A                     IPR8            equ	874	;# 
  1481   00036B                     IPR9            equ	875	;# 
  1482   00036C                     IPR10           equ	876	;# 
  1483   00036D                     IPR11           equ	877	;# 
  1484   00036E                     IPR12           equ	878	;# 
  1485   00036F                     IPR13           equ	879	;# 
  1486   000370                     IPR14           equ	880	;# 
  1487   000371                     IPR15           equ	881	;# 
  1488   000373                     STATUS_CSHAD    equ	883	;# 
  1489   000374                     WREG_CSHAD      equ	884	;# 
  1490   000375                     BSR_CSHAD       equ	885	;# 
  1491   000376                     SHADCON         equ	886	;# 
  1492   000377                     STATUS_SHAD     equ	887	;# 
  1493   000378                     WREG_SHAD       equ	888	;# 
  1494   000379                     BSR_SHAD        equ	889	;# 
  1495   00037A                     PCLATH_SHAD     equ	890	;# 
  1496   00037B                     PCLATU_SHAD     equ	891	;# 
  1497   00037C                     FSR0SH          equ	892	;# 
  1498   00037C                     FSR0L_SHAD      equ	892	;# 
  1499   00037D                     FSR0H_SHAD      equ	893	;# 
  1500   00037E                     FSR1SH          equ	894	;# 
  1501   00037E                     FSR1L_SHAD      equ	894	;# 
  1502   00037F                     FSR1H_SHAD      equ	895	;# 
  1503   000380                     FSR2SH          equ	896	;# 
  1504   000380                     FSR2L_SHAD      equ	896	;# 
  1505   000381                     FSR2H_SHAD      equ	897	;# 
  1506   000382                     PRODSH          equ	898	;# 
  1507   000382                     PRODL_SHAD      equ	898	;# 
  1508   000383                     PRODH_SHAD      equ	899	;# 
  1509   0003BC                     CWG1CLK         equ	956	;# 
  1510   0003BC                     CWG1CLKCON      equ	956	;# 
  1511   0003BD                     CWG1ISM         equ	957	;# 
  1512   0003BD                     CWG1DAT         equ	957	;# 
  1513   0003BE                     CWG1DBR         equ	958	;# 
  1514   0003BF                     CWG1DBF         equ	959	;# 
  1515   0003C0                     CWG1CON0        equ	960	;# 
  1516   0003C1                     CWG1CON1        equ	961	;# 
  1517   0003C2                     CWG1AS0         equ	962	;# 
  1518   0003C3                     CWG1AS1         equ	963	;# 
  1519   0003C4                     CWG1STR         equ	964	;# 
  1520   0003C5                     CWG2CLK         equ	965	;# 
  1521   0003C5                     CWG2CLKCON      equ	965	;# 
  1522   0003C6                     CWG2ISM         equ	966	;# 
  1523   0003C6                     CWG2DAT         equ	966	;# 
  1524   0003C7                     CWG2DBR         equ	967	;# 
  1525   0003C8                     CWG2DBF         equ	968	;# 
  1526   0003C9                     CWG2CON0        equ	969	;# 
  1527   0003CA                     CWG2CON1        equ	970	;# 
  1528   0003CB                     CWG2AS0         equ	971	;# 
  1529   0003CC                     CWG2AS1         equ	972	;# 
  1530   0003CD                     CWG2STR         equ	973	;# 
  1531   0003CE                     CWG3CLK         equ	974	;# 
  1532   0003CE                     CWG3CLKCON      equ	974	;# 
  1533   0003CF                     CWG3ISM         equ	975	;# 
  1534   0003CF                     CWG3DAT         equ	975	;# 
  1535   0003D0                     CWG3DBR         equ	976	;# 
  1536   0003D1                     CWG3DBF         equ	977	;# 
  1537   0003D2                     CWG3CON0        equ	978	;# 
  1538   0003D3                     CWG3CON1        equ	979	;# 
  1539   0003D4                     CWG3AS0         equ	980	;# 
  1540   0003D5                     CWG3AS1         equ	981	;# 
  1541   0003D6                     CWG3STR         equ	982	;# 
  1542   0003D7                     FVRCON          equ	983	;# 
  1543   0003D8                     ADCPCON         equ	984	;# 
  1544   0003D8                     ADCP            equ	984	;# 
  1545   0003D9                     ADLTH           equ	985	;# 
  1546   0003D9                     ADLTHL          equ	985	;# 
  1547   0003DA                     ADLTHH          equ	986	;# 
  1548   0003DB                     ADUTH           equ	987	;# 
  1549   0003DB                     ADUTHL          equ	987	;# 
  1550   0003DC                     ADUTHH          equ	988	;# 
  1551   0003DD                     ADERR           equ	989	;# 
  1552   0003DD                     ADERRL          equ	989	;# 
  1553   0003DE                     ADERRH          equ	990	;# 
  1554   0003DF                     ADSTPT          equ	991	;# 
  1555   0003DF                     ADSTPTL         equ	991	;# 
  1556   0003E0                     ADSTPTH         equ	992	;# 
  1557   0003E1                     ADFLTR          equ	993	;# 
  1558   0003E1                     ADFLTRL         equ	993	;# 
  1559   0003E2                     ADFLTRH         equ	994	;# 
  1560   0003E3                     ADACC           equ	995	;# 
  1561   0003E3                     ADACCL          equ	995	;# 
  1562   0003E4                     ADACCH          equ	996	;# 
  1563   0003E5                     ADACCU          equ	997	;# 
  1564   0003E6                     ADCNT           equ	998	;# 
  1565   0003E7                     ADRPT           equ	999	;# 
  1566   0003E8                     ADPREV          equ	1000	;# 
  1567   0003E8                     ADPREVL         equ	1000	;# 
  1568   0003E9                     ADPREVH         equ	1001	;# 
  1569   0003EA                     ADRES           equ	1002	;# 
  1570   0003EA                     ADRESL          equ	1002	;# 
  1571   0003EB                     ADRESH          equ	1003	;# 
  1572   0003EC                     ADPCH           equ	1004	;# 
  1573   0003EE                     ADACQ           equ	1006	;# 
  1574   0003EE                     ADACQL          equ	1006	;# 
  1575   0003EF                     ADACQH          equ	1007	;# 
  1576   0003F0                     ADCAP           equ	1008	;# 
  1577   0003F1                     ADPRE           equ	1009	;# 
  1578   0003F1                     ADPREL          equ	1009	;# 
  1579   0003F2                     ADPREH          equ	1010	;# 
  1580   0003F3                     ADCON0          equ	1011	;# 
  1581   0003F4                     ADCON1          equ	1012	;# 
  1582   0003F5                     ADCON2          equ	1013	;# 
  1583   0003F6                     ADCON3          equ	1014	;# 
  1584   0003F7                     ADSTAT          equ	1015	;# 
  1585   0003F8                     ADREF           equ	1016	;# 
  1586   0003F9                     ADACT           equ	1017	;# 
  1587   0003FA                     ADCLK           equ	1018	;# 
  1588   000400                     ANSELA          equ	1024	;# 
  1589   000401                     WPUA            equ	1025	;# 
  1590   000402                     ODCONA          equ	1026	;# 
  1591   000403                     SLRCONA         equ	1027	;# 
  1592   000404                     INLVLA          equ	1028	;# 
  1593   000405                     IOCAP           equ	1029	;# 
  1594   000406                     IOCAN           equ	1030	;# 
  1595   000407                     IOCAF           equ	1031	;# 
  1596   000408                     ANSELB          equ	1032	;# 
  1597   000409                     WPUB            equ	1033	;# 
  1598   00040A                     ODCONB          equ	1034	;# 
  1599   00040B                     SLRCONB         equ	1035	;# 
  1600   00040C                     INLVLB          equ	1036	;# 
  1601   00040D                     IOCBP           equ	1037	;# 
  1602   00040E                     IOCBN           equ	1038	;# 
  1603   00040F                     IOCBF           equ	1039	;# 
  1604   000410                     ANSELC          equ	1040	;# 
  1605   000411                     WPUC            equ	1041	;# 
  1606   000412                     ODCONC          equ	1042	;# 
  1607   000413                     SLRCONC         equ	1043	;# 
  1608   000414                     INLVLC          equ	1044	;# 
  1609   000415                     IOCCP           equ	1045	;# 
  1610   000416                     IOCCN           equ	1046	;# 
  1611   000417                     IOCCF           equ	1047	;# 
  1612   000418                     ANSELD          equ	1048	;# 
  1613   000419                     WPUD            equ	1049	;# 
  1614   00041A                     ODCOND          equ	1050	;# 
  1615   00041B                     SLRCOND         equ	1051	;# 
  1616   00041C                     INLVLD          equ	1052	;# 
  1617   000420                     ANSELE          equ	1056	;# 
  1618   000421                     WPUE            equ	1057	;# 
  1619   000422                     ODCONE          equ	1058	;# 
  1620   000423                     SLRCONE         equ	1059	;# 
  1621   000424                     INLVLE          equ	1060	;# 
  1622   000425                     IOCEP           equ	1061	;# 
  1623   000426                     IOCEN           equ	1062	;# 
  1624   000427                     IOCEF           equ	1063	;# 
  1625   000428                     ANSELF          equ	1064	;# 
  1626   000429                     WPUF            equ	1065	;# 
  1627   00042A                     ODCONF          equ	1066	;# 
  1628   00042B                     SLRCONF         equ	1067	;# 
  1629   00042C                     INLVLF          equ	1068	;# 
  1630   000440                     NCO1ACC         equ	1088	;# 
  1631   000440                     NCO1ACCL        equ	1088	;# 
  1632   000441                     NCO1ACCH        equ	1089	;# 
  1633   000442                     NCO1ACCU        equ	1090	;# 
  1634   000443                     NCO1INC         equ	1091	;# 
  1635   000443                     NCO1INCL        equ	1091	;# 
  1636   000444                     NCO1INCH        equ	1092	;# 
  1637   000445                     NCO1INCU        equ	1093	;# 
  1638   000446                     NCO1CON         equ	1094	;# 
  1639   000447                     NCO1CLK         equ	1095	;# 
  1640   000448                     NCO2ACC         equ	1096	;# 
  1641   000448                     NCO2ACCL        equ	1096	;# 
  1642   000449                     NCO2ACCH        equ	1097	;# 
  1643   00044A                     NCO2ACCU        equ	1098	;# 
  1644   00044B                     NCO2INC         equ	1099	;# 
  1645   00044B                     NCO2INCL        equ	1099	;# 
  1646   00044C                     NCO2INCH        equ	1100	;# 
  1647   00044D                     NCO2INCU        equ	1101	;# 
  1648   00044E                     NCO2CON         equ	1102	;# 
  1649   00044F                     NCO2CLK         equ	1103	;# 
  1650   000450                     NCO3ACC         equ	1104	;# 
  1651   000450                     NCO3ACCL        equ	1104	;# 
  1652   000451                     NCO3ACCH        equ	1105	;# 
  1653   000452                     NCO3ACCU        equ	1106	;# 
  1654   000453                     NCO3INC         equ	1107	;# 
  1655   000453                     NCO3INCL        equ	1107	;# 
  1656   000454                     NCO3INCH        equ	1108	;# 
  1657   000455                     NCO3INCU        equ	1109	;# 
  1658   000456                     NCO3CON         equ	1110	;# 
  1659   000457                     NCO3CLK         equ	1111	;# 
  1660   000459                     IVTLOCK         equ	1113	;# 
  1661   00045A                     IVTAD           equ	1114	;# 
  1662   00045A                     IVTADL          equ	1114	;# 
  1663   00045B                     IVTADH          equ	1115	;# 
  1664   00045C                     IVTADU          equ	1116	;# 
  1665   00045D                     IVTBASE         equ	1117	;# 
  1666   00045D                     IVTBASEL        equ	1117	;# 
  1667   00045E                     IVTBASEH        equ	1118	;# 
  1668   00045F                     IVTBASEU        equ	1119	;# 
  1669   000460                     PWM1ERS         equ	1120	;# 
  1670   000461                     PWM1CLK         equ	1121	;# 
  1671   000462                     PWM1LDS         equ	1122	;# 
  1672   000463                     PWM1PR          equ	1123	;# 
  1673   000463                     PWM1PRL         equ	1123	;# 
  1674   000464                     PWM1PRH         equ	1124	;# 
  1675   000465                     PWM1CPRE        equ	1125	;# 
  1676   000466                     PWM1PIPOS       equ	1126	;# 
  1677   000467                     PWM1GIR         equ	1127	;# 
  1678   000468                     PWM1GIE         equ	1128	;# 
  1679   000469                     PWM1CON         equ	1129	;# 
  1680   00046A                     PWM1S1CFG       equ	1130	;# 
  1681   00046B                     PWM1S1P1        equ	1131	;# 
  1682   00046B                     PWM1S1P1L       equ	1131	;# 
  1683   00046C                     PWM1S1P1H       equ	1132	;# 
  1684   00046D                     PWM1S1P2        equ	1133	;# 
  1685   00046D                     PWM1S1P2L       equ	1133	;# 
  1686   00046E                     PWM1S1P2H       equ	1134	;# 
  1687   00046F                     PWM2ERS         equ	1135	;# 
  1688   000470                     PWM2CLK         equ	1136	;# 
  1689   000471                     PWM2LDS         equ	1137	;# 
  1690   000472                     PWM2PR          equ	1138	;# 
  1691   000472                     PWM2PRL         equ	1138	;# 
  1692   000473                     PWM2PRH         equ	1139	;# 
  1693   000474                     PWM2CPRE        equ	1140	;# 
  1694   000475                     PWM2PIPOS       equ	1141	;# 
  1695   000476                     PWM2GIR         equ	1142	;# 
  1696   000477                     PWM2GIE         equ	1143	;# 
  1697   000478                     PWM2CON         equ	1144	;# 
  1698   000479                     PWM2S1CFG       equ	1145	;# 
  1699   00047A                     PWM2S1P1        equ	1146	;# 
  1700   00047A                     PWM2S1P1L       equ	1146	;# 
  1701   00047B                     PWM2S1P1H       equ	1147	;# 
  1702   00047C                     PWM2S1P2        equ	1148	;# 
  1703   00047C                     PWM2S1P2L       equ	1148	;# 
  1704   00047D                     PWM2S1P2H       equ	1149	;# 
  1705   00047E                     PWM3ERS         equ	1150	;# 
  1706   00047F                     PWM3CLK         equ	1151	;# 
  1707   000480                     PWM3LDS         equ	1152	;# 
  1708   000481                     PWM3PR          equ	1153	;# 
  1709   000481                     PWM3PRL         equ	1153	;# 
  1710   000482                     PWM3PRH         equ	1154	;# 
  1711   000483                     PWM3CPRE        equ	1155	;# 
  1712   000484                     PWM3PIPOS       equ	1156	;# 
  1713   000485                     PWM3GIR         equ	1157	;# 
  1714   000486                     PWM3GIE         equ	1158	;# 
  1715   000487                     PWM3CON         equ	1159	;# 
  1716   000488                     PWM3S1CFG       equ	1160	;# 
  1717   000489                     PWM3S1P1        equ	1161	;# 
  1718   000489                     PWM3S1P1L       equ	1161	;# 
  1719   00048A                     PWM3S1P1H       equ	1162	;# 
  1720   00048B                     PWM3S1P2        equ	1163	;# 
  1721   00048B                     PWM3S1P2L       equ	1163	;# 
  1722   00048C                     PWM3S1P2H       equ	1164	;# 
  1723   00049C                     PWMLOAD         equ	1180	;# 
  1724   00049D                     PWMEN           equ	1181	;# 
  1725   00049E                     PIE0            equ	1182	;# 
  1726   00049F                     PIE1            equ	1183	;# 
  1727   0004A0                     PIE2            equ	1184	;# 
  1728   0004A1                     PIE3            equ	1185	;# 
  1729   0004A2                     PIE4            equ	1186	;# 
  1730   0004A3                     PIE5            equ	1187	;# 
  1731   0004A4                     PIE6            equ	1188	;# 
  1732   0004A5                     PIE7            equ	1189	;# 
  1733   0004A6                     PIE8            equ	1190	;# 
  1734   0004A7                     PIE9            equ	1191	;# 
  1735   0004A8                     PIE10           equ	1192	;# 
  1736   0004A9                     PIE11           equ	1193	;# 
  1737   0004AA                     PIE12           equ	1194	;# 
  1738   0004AB                     PIE13           equ	1195	;# 
  1739   0004AC                     PIE14           equ	1196	;# 
  1740   0004AD                     PIE15           equ	1197	;# 
  1741   0004AE                     PIR0            equ	1198	;# 
  1742   0004AF                     PIR1            equ	1199	;# 
  1743   0004B0                     PIR2            equ	1200	;# 
  1744   0004B1                     PIR3            equ	1201	;# 
  1745   0004B2                     PIR4            equ	1202	;# 
  1746   0004B3                     PIR5            equ	1203	;# 
  1747   0004B4                     PIR6            equ	1204	;# 
  1748   0004B5                     PIR7            equ	1205	;# 
  1749   0004B6                     PIR8            equ	1206	;# 
  1750   0004B7                     PIR9            equ	1207	;# 
  1751   0004B8                     PIR10           equ	1208	;# 
  1752   0004B9                     PIR11           equ	1209	;# 
  1753   0004BA                     PIR12           equ	1210	;# 
  1754   0004BB                     PIR13           equ	1211	;# 
  1755   0004BC                     PIR14           equ	1212	;# 
  1756   0004BD                     PIR15           equ	1213	;# 
  1757   0004BE                     LATA            equ	1214	;# 
  1758   0004BF                     LATB            equ	1215	;# 
  1759   0004C0                     LATC            equ	1216	;# 
  1760   0004C1                     LATD            equ	1217	;# 
  1761   0004C2                     LATE            equ	1218	;# 
  1762   0004C3                     LATF            equ	1219	;# 
  1763   0004C6                     TRISA           equ	1222	;# 
  1764   0004C7                     TRISB           equ	1223	;# 
  1765   0004C8                     TRISC           equ	1224	;# 
  1766   0004C9                     TRISD           equ	1225	;# 
  1767   0004CA                     TRISE           equ	1226	;# 
  1768   0004CB                     TRISF           equ	1227	;# 
  1769   0004CE                     PORTA           equ	1230	;# 
  1770   0004CF                     PORTB           equ	1231	;# 
  1771   0004D0                     PORTC           equ	1232	;# 
  1772   0004D1                     PORTD           equ	1233	;# 
  1773   0004D2                     PORTE           equ	1234	;# 
  1774   0004D3                     PORTF           equ	1235	;# 
  1775   0004D6                     INTCON0         equ	1238	;# 
  1776   0004D7                     INTCON1         equ	1239	;# 
  1777   0004D8                     STATUS          equ	1240	;# 
  1778   0004D9                     FSR2            equ	1241	;# 
  1779   0004D9                     FSR2L           equ	1241	;# 
  1780   0004DA                     FSR2H           equ	1242	;# 
  1781   0004DB                     PLUSW2          equ	1243	;# 
  1782   0004DC                     PREINC2         equ	1244	;# 
  1783   0004DD                     POSTDEC2        equ	1245	;# 
  1784   0004DE                     POSTINC2        equ	1246	;# 
  1785   0004DF                     INDF2           equ	1247	;# 
  1786   0004E0                     BSR             equ	1248	;# 
  1787   0004E1                     FSR1            equ	1249	;# 
  1788   0004E1                     FSR1L           equ	1249	;# 
  1789   0004E2                     FSR1H           equ	1250	;# 
  1790   0004E3                     PLUSW1          equ	1251	;# 
  1791   0004E4                     PREINC1         equ	1252	;# 
  1792   0004E5                     POSTDEC1        equ	1253	;# 
  1793   0004E6                     POSTINC1        equ	1254	;# 
  1794   0004E7                     INDF1           equ	1255	;# 
  1795   0004E8                     WREG            equ	1256	;# 
  1796   0004E9                     FSR0            equ	1257	;# 
  1797   0004E9                     FSR0L           equ	1257	;# 
  1798   0004EA                     FSR0H           equ	1258	;# 
  1799   0004EB                     PLUSW0          equ	1259	;# 
  1800   0004EC                     PREINC0         equ	1260	;# 
  1801   0004ED                     POSTDEC0        equ	1261	;# 
  1802   0004EE                     POSTINC0        equ	1262	;# 
  1803   0004EF                     INDF0           equ	1263	;# 
  1804   0004F0                     PCON0           equ	1264	;# 
  1805   0004F1                     PCON1           equ	1265	;# 
  1806   0004F2                     CPUDOZE         equ	1266	;# 
  1807   0004F3                     PROD            equ	1267	;# 
  1808   0004F3                     PRODL           equ	1267	;# 
  1809   0004F4                     PRODH           equ	1268	;# 
  1810   0004F5                     TABLAT          equ	1269	;# 
  1811   0004F6                     TBLPTR          equ	1270	;# 
  1812   0004F6                     TBLPTRL         equ	1270	;# 
  1813   0004F7                     TBLPTRH         equ	1271	;# 
  1814   0004F8                     TBLPTRU         equ	1272	;# 
  1815   0004F9                     PCLAT           equ	1273	;# 
  1816   0004F9                     PCL             equ	1273	;# 
  1817   0004FA                     PCLATH          equ	1274	;# 
  1818   0004FB                     PCLATU          equ	1275	;# 
  1819   0004FC                     STKPTR          equ	1276	;# 
  1820   0004FD                     TOS             equ	1277	;# 
  1821   0004FD                     TOSL            equ	1277	;# 
  1822   0004FE                     TOSH            equ	1278	;# 
  1823   0004FF                     TOSU            equ	1279	;# 
  1824                           
  1825                           	psect	idataCOMRAM
  1826   002AF8                     __pidataCOMRAM:
  1827                           	callstack 0
  1828                           
  1829                           ;initializer for _speed
  1830   002AF8  02                 	db	2
  1831   0000B3                     _OSCEN          set	179
  1832   0000B1                     _OSCFRQ         set	177
  1833   0000AD                     _OSCCON1        set	173
  1834   000240                     _INT2PPS        set	576
  1835   00023F                     _INT1PPS        set	575
  1836   00023E                     _INT0PPS        set	574
  1837   000418                     _ANSELD         set	1048
  1838   000409                     _WPUBbits       set	1033
  1839   000408                     _ANSELBbits     set	1032
  1840   0004B8                     _PIR10bits      set	1208
  1841   0004A8                     _PIE10bits      set	1192
  1842   0004B4                     _PIR6bits       set	1204
  1843   0004A4                     _PIE6bits       set	1188
  1844   0004D6                     _INTCON0bits    set	1238
  1845   0004AF                     _PIR1bits       set	1199
  1846   00049F                     _PIE1bits       set	1183
  1847   0004C7                     _TRISBbits      set	1223
  1848   0004D1                     _PORTD          set	1233
  1849   0004C1                     _LATD           set	1217
  1850   0004C9                     _TRISD          set	1225
  1851   0004C1                     _LATDbits       set	1217
  1852                           
  1853                           	psect	smallconst
  1854   002600                     __psmallconst:
  1855                           	callstack 0
  1856   002600  00                 	db	0
  1857   002601                     STR_2:
  1858   002601  48                 	db	72	;'H'
  1859   002602  6F                 	db	111	;'o'
  1860   002603  6C                 	db	108	;'l'
  1861   002604  61                 	db	97	;'a'
  1862   002605  20                 	db	32
  1863   002606  55                 	db	85	;'U'
  1864   002607  50                 	db	80	;'P'
  1865   002608  43                 	db	67	;'C'
  1866   002609  69                 	db	105	;'i'
  1867   00260A  6E                 	db	110	;'n'
  1868   00260B  6F                 	db	111	;'o'
  1869   00260C  20                 	db	32
  1870   00260D  32                 	db	50	;'2'
  1871   00260E  30                 	db	48	;'0'
  1872   00260F  32                 	db	50	;'2'
  1873   002610  35                 	db	53	;'5'
  1874   002611  00                 	db	0
  1875   002612                     STR_3:
  1876   002612  4B                 	db	75	;'K'
  1877   002613  61                 	db	97	;'a'
  1878   002614  6C                 	db	108	;'l'
  1879   002615  75                 	db	117	;'u'
  1880   002616  6E                 	db	110	;'n'
  1881   002617  20                 	db	32
  1882   002618  4C                 	db	76	;'L'
  1883   002619  61                 	db	97	;'a'
  1884   00261A  75                 	db	117	;'u'
  1885   00261B  20                 	db	32
  1886   00261C  47                 	db	71	;'G'
  1887   00261D  61                 	db	97	;'a'
  1888   00261E  6E                 	db	110	;'n'
  1889   00261F  00                 	db	0
  1890   002620                     STR_1:
  1891   002620  43                 	db	67	;'C'
  1892   002621  75                 	db	117	;'u'
  1893   002622  65                 	db	101	;'e'
  1894   002623  6E                 	db	110	;'n'
  1895   002624  74                 	db	116	;'t'
  1896   002625  61                 	db	97	;'a'
  1897   002626  3A                 	db	58	;':'
  1898   002627  00                 	db	0
  1899   002628  00                 	db	0	; dummy byte at the end
  1900   002600                     __smallconst    set	__psmallconst
  1901   002600                     __mediumconst   set	__psmallconst
  1902   000003                     __activetblptr  equ	3
  1903                           
  1904                           ; #config settings
  1905                           
  1906                           	psect	cinit
  1907   0029A8                     __pcinit:
  1908                           	callstack 0
  1909   0029A8                     start_initialization:
  1910                           	callstack 0
  1911   0029A8                     __initialization:
  1912                           	callstack 0
  1913                           
  1914                           ; Initialize objects allocated to COMRAM (1 bytes)
  1915                           ; load TBLPTR registers with __pidataCOMRAM
  1916   0029A8  0EF8               	movlw	low __pidataCOMRAM
  1917   0029AA  6EF6               	movwf	tblptrl,c
  1918   0029AC  0E2A               	movlw	high __pidataCOMRAM
  1919   0029AE  6EF7               	movwf	tblptrh,c
  1920   0029B0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1921   0029B2  6EF8               	movwf	tblptru,c
  1922   0029B4  0009               	tblrd		*+	;fetch initializer
  1923   0029B6  C4F5 F515          	movff	tablat,__pdataCOMRAM
  1924                           
  1925                           ; Clear objects allocated to COMRAM (3 bytes)
  1926   0029BA  6A14               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1927   0029BC  6A13               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1928   0029BE  6A12               	clrf	__pbssCOMRAM& (0+255),c
  1929                           
  1930                           ;
  1931                           ; Setup IVTBASE
  1932                           ;
  1933   00045D                     IVTBASEL        equ	1117
  1934   00045E                     IVTBASEH        equ	1118
  1935   00045F                     IVTBASEU        equ	1119
  1936   0029C0  0104               	movlb	4
  1937   0029C2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1938   0029C4  6F5D               	movwf	93,b
  1939   0029C6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1940   0029C8  6F5E               	movwf	94,b
  1941   0029CA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1942   0029CC  6F5F               	movwf	95,b
  1943   0029CE                     end_of_initialization:
  1944                           	callstack 0
  1945   0029CE                     __end_of__initialization:
  1946                           	callstack 0
  1947   0029CE  0100               	movlb	0
  1948   0029D0  EF15  F013         	goto	_main	;jump to C main() function
  1949                           
  1950                           	psect	bssCOMRAM
  1951   000512                     __pbssCOMRAM:
  1952                           	callstack 0
  1953   000512                     _cuenta:
  1954                           	callstack 0
  1955   000512                     	ds	2
  1956   000514                     _estado:
  1957                           	callstack 0
  1958   000514                     	ds	1
  1959                           
  1960                           	psect	dataCOMRAM
  1961   000515                     __pdataCOMRAM:
  1962                           	callstack 0
  1963   000515                     _speed:
  1964                           	callstack 0
  1965   000515                     	ds	1
  1966                           
  1967                           	psect	cstackCOMRAM
  1968   000501                     __pcstackCOMRAM:
  1969                           	callstack 0
  1970   000501                     ??_INT0_ISR:
  1971                           
  1972                           ; 1 bytes @ 0x0
  1973   000501                     	ds	1
  1974   000502                     ??_INT1_ISR:
  1975                           
  1976                           ; 1 bytes @ 0x1
  1977   000502                     	ds	1
  1978   000503                     ??_INT2_ISR:
  1979                           
  1980                           ; 1 bytes @ 0x2
  1981   000503                     	ds	1
  1982   000504                     ?___lwmod:
  1983                           	callstack 0
  1984   000504                     ENVIA_NIBBLE@dato:
  1985                           	callstack 0
  1986   000504                     LEER_LCD@aux:
  1987                           	callstack 0
  1988   000504                     ___lwmod@dividend:
  1989                           	callstack 0
  1990   000504                     
  1991                           ; 1 bytes @ 0x3
  1992   000504                     	ds	1
  1993   000505                     ENVIA_CHAR@dato:
  1994                           	callstack 0
  1995   000505                     ENVIA_LCD_CMD@dato:
  1996                           	callstack 0
  1997   000505                     
  1998                           ; 1 bytes @ 0x4
  1999   000505                     	ds	1
  2000   000506                     ENVIA_CHAR@aux:
  2001                           	callstack 0
  2002   000506                     ENVIA_LCD_CMD@aux:
  2003                           	callstack 0
  2004   000506                     ___lwmod@divisor:
  2005                           	callstack 0
  2006                           
  2007                           ; 2 bytes @ 0x5
  2008   000506                     	ds	1
  2009   000507                     POS_CURSOR@columna:
  2010                           	callstack 0
  2011   000507                     CURSOR_ONOFF@estado:
  2012                           	callstack 0
  2013   000507                     ESCRIBE_MENSAJE@cadena:
  2014                           	callstack 0
  2015   000507                     ??_LCD_CONFIG:
  2016                           
  2017                           ; 1 bytes @ 0x6
  2018   000507                     	ds	1
  2019   000508                     POS_CURSOR@fila:
  2020                           	callstack 0
  2021   000508                     ESCRIBE_MENSAJE@tam:
  2022                           	callstack 0
  2023   000508                     ___lwmod@counter:
  2024                           	callstack 0
  2025   000508                     ??_lcd_init:
  2026   000508                     
  2027                           ; 1 bytes @ 0x7
  2028   000508                     	ds	1
  2029   000509                     ?___lwdiv:
  2030                           	callstack 0
  2031   000509                     ___lwdiv@dividend:
  2032                           	callstack 0
  2033   000509                     ??_ESCRIBE_MENSAJE:
  2034                           
  2035                           ; 1 bytes @ 0x8
  2036   000509                     	ds	1
  2037   00050A                     ESCRIBE_MENSAJE@i:
  2038                           	callstack 0
  2039                           
  2040                           ; 1 bytes @ 0x9
  2041   00050A                     	ds	1
  2042   00050B                     ___lwdiv@divisor:
  2043                           	callstack 0
  2044                           
  2045                           ; 2 bytes @ 0xA
  2046   00050B                     	ds	2
  2047   00050D                     ___lwdiv@quotient:
  2048                           	callstack 0
  2049   00050D                     
  2050                           ; 1 bytes @ 0xC
  2051   00050D                     	ds	2
  2052   00050F                     ___lwdiv@counter:
  2053                           	callstack 0
  2054                           
  2055                           ; 1 bytes @ 0xE
  2056   00050F                     	ds	1
  2057   000510                     ??_main:
  2058                           
  2059                           ; 1 bytes @ 0xF
  2060   000510                     	ds	2
  2061                           
  2062 ;;
  2063 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2064 ;;
  2065 ;; *************** function _main *****************
  2066 ;; Defined at:
  2067 ;;		line 71 in file "maincode04.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2083 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2084 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2085 ;;Total ram usage:        2 bytes
  2086 ;; Hardware stack levels required when called: 5
  2087 ;; This function calls:
  2088 ;;		_BORRAR_LCD
  2089 ;;		_ESCRIBE_MENSAJE
  2090 ;;		_POS_CURSOR
  2091 ;;		_configuro
  2092 ;;		_lcd_init
  2093 ;;		_visualizacion
  2094 ;; This function is called by:
  2095 ;;		Startup code after reset
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text0
  2100   00262A                     __ptext0:
  2101                           	callstack 0
  2102   00262A                     _main:
  2103                           	callstack 122
  2104                           
  2105                           ;maincode04.c: 72:     configuro();
  2106                           
  2107                           ;incstack = 0
  2108   00262A  EC5E  F014         	call	_configuro	;wreg free
  2109                           
  2110                           ; BSR set to: 2
  2111                           ;maincode04.c: 73:     lcd_init();
  2112   00262E  EC00  F015         	call	_lcd_init	;wreg free
  2113                           
  2114                           ;maincode04.c: 74:     POS_CURSOR(1,0);
  2115   002632  0E00               	movlw	0
  2116   002634  6E07               	movwf	POS_CURSOR@columna^(0+1280),c
  2117   002636  0E01               	movlw	1
  2118   002638  EC14  F015         	call	_POS_CURSOR
  2119                           
  2120                           ;maincode04.c: 75:     ESCRIBE_MENSAJE("Hola UPCino 2025",16);
  2121   00263C  0E01               	movlw	low STR_2
  2122   00263E  6E07               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2123   002640  0E10               	movlw	16
  2124   002642  6E08               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2125   002644  ECEA  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2126                           
  2127                           ;maincode04.c: 76:     POS_CURSOR(2,0);
  2128   002648  0E00               	movlw	0
  2129   00264A  6E07               	movwf	POS_CURSOR@columna^(0+1280),c
  2130   00264C  0E02               	movlw	2
  2131   00264E  EC14  F015         	call	_POS_CURSOR
  2132                           
  2133                           ;maincode04.c: 77:     ESCRIBE_MENSAJE("Kalun Lau Gan",13);
  2134   002652  0E12               	movlw	low STR_3
  2135   002654  6E07               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2136   002656  0E0D               	movlw	13
  2137   002658  6E08               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2138   00265A  ECEA  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2139                           
  2140                           ;maincode04.c: 78:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
  2141   00265E  0E0B               	movlw	11
  2142   002660  6E11               	movwf	(??_main+1)^(0+1280),c
  2143   002662  0E26               	movlw	38
  2144   002664  6E10               	movwf	??_main^(0+1280),c
  2145   002666  0E5E               	movlw	94
  2146   002668                     u287:
  2147   002668  2EE8               	decfsz	wreg,f,c
  2148   00266A  D7FE               	bra	u287
  2149   00266C  2E10               	decfsz	??_main^(0+1280),f,c
  2150   00266E  D7FC               	bra	u287
  2151   002670  2E11               	decfsz	(??_main+1)^(0+1280),f,c
  2152   002672  D7FA               	bra	u287
  2153                           
  2154                           ;maincode04.c: 79:     BORRAR_LCD();
  2155   002674  EC78  F015         	call	_BORRAR_LCD	;wreg free
  2156   002678  D01B               	goto	l1262
  2157   00267A                     l1248:
  2158                           
  2159                           ;maincode04.c: 83:                 if(cuenta == 8001){
  2160   00267A  0E41               	movlw	65
  2161   00267C  1812               	xorwf	_cuenta^(0+1280),w,c
  2162   00267E  E108               	bnz	l1252
  2163   002680  0E1F               	movlw	31
  2164   002682  1813               	xorwf	(_cuenta+1)^(0+1280),w,c
  2165   002684  A4D8               	btfss	status,2,c
  2166   002686  D004               	goto	l1252
  2167                           
  2168                           ;maincode04.c: 84:                     cuenta = 0;
  2169   002688  0E00               	movlw	0
  2170   00268A  6E13               	movwf	(_cuenta+1)^(0+1280),c
  2171   00268C  0E00               	movlw	0
  2172   00268E  D00A               	goto	L1
  2173   002690                     l1252:
  2174                           
  2175                           ;maincode04.c: 87:                     cuenta++;
  2176   002690  4A12               	infsnz	_cuenta^(0+1280),f,c
  2177   002692  2A13               	incf	(_cuenta+1)^(0+1280),f,c
  2178   002694  D014               	goto	l1264
  2179   002696                     l1254:
  2180                           
  2181                           ;maincode04.c: 91:                 if(cuenta == 0){
  2182   002696  5012               	movf	_cuenta^(0+1280),w,c
  2183   002698  1013               	iorwf	(_cuenta+1)^(0+1280),w,c
  2184   00269A  A4D8               	btfss	status,2,c
  2185   00269C  D005               	goto	l1258
  2186                           
  2187                           ;maincode04.c: 92:                     cuenta = 8000;
  2188   00269E  0E1F               	movlw	31
  2189   0026A0  6E13               	movwf	(_cuenta+1)^(0+1280),c
  2190   0026A2  0E40               	movlw	64
  2191   0026A4                     L1:
  2192   0026A4  6E12               	movwf	_cuenta^(0+1280),c
  2193                           
  2194                           ;maincode04.c: 93:                 }
  2195   0026A6  D00B               	goto	l1264
  2196   0026A8                     l1258:
  2197   0026A8  0612               	decf	_cuenta^(0+1280),f,c
  2198   0026AA  A0D8               	btfss	status,0,c
  2199   0026AC  0613               	decf	(_cuenta+1)^(0+1280),f,c
  2200   0026AE  D007               	goto	l1264
  2201   0026B0                     l1262:
  2202   0026B0  5014               	movf	_estado^(0+1280),w,c
  2203                           
  2204                           ; Switch size 1, requested type "simple"
  2205                           ; Number of cases is 2, Range of values is 0 to 1
  2206                           ; switch strategies available:
  2207                           ; Name         Instructions Cycles
  2208                           ; simple_byte            7     4 (average)
  2209                           ;	Chosen strategy is simple_byte
  2210   0026B2  0A00               	xorlw	0	; case 0
  2211   0026B4  B4D8               	btfsc	status,2,c
  2212   0026B6  D7E1               	goto	l1248
  2213   0026B8  0A01               	xorlw	1	; case 1
  2214   0026BA  B4D8               	btfsc	status,2,c
  2215   0026BC  D7EC               	goto	l1254
  2216   0026BE                     l1264:
  2217                           
  2218                           ;maincode04.c: 97:         visualizacion();
  2219   0026BE  EC7C  F013         	call	_visualizacion	;wreg free
  2220                           
  2221                           ;maincode04.c: 98:         switch(speed){
  2222   0026C2  D012               	goto	l1272
  2223   0026C4                     l1266:
  2224                           
  2225                           ;maincode04.c: 100:                 _delay((unsigned long)((200)*(4000000UL/4000.0)));
  2226   0026C4  0E02               	movlw	2
  2227   0026C6  6E11               	movwf	(??_main+1)^(0+1280),c
  2228   0026C8  0E04               	movlw	4
  2229   0026CA  6E10               	movwf	??_main^(0+1280),c
  2230   0026CC  0EBA               	movlw	186
  2231   0026CE                     u297:
  2232   0026CE  2EE8               	decfsz	wreg,f,c
  2233   0026D0  D7FE               	bra	u297
  2234   0026D2  2E10               	decfsz	??_main^(0+1280),f,c
  2235   0026D4  D7FC               	bra	u297
  2236   0026D6  2E11               	decfsz	(??_main+1)^(0+1280),f,c
  2237   0026D8  D7FA               	bra	u297
  2238   0026DA  D000               	nop2	
  2239                           
  2240                           ;maincode04.c: 101:                 break;
  2241   0026DC  D7E9               	goto	l1262
  2242   0026DE                     l1268:
  2243                           
  2244                           ;maincode04.c: 103:                 _delay((unsigned long)((1)*(4000000UL/4000.0)));
  2245   0026DE  0EC8               	movlw	200
  2246   0026E0                     u307:
  2247   0026E0  D000               	nop2	
  2248   0026E2  2EE8               	decfsz	wreg,f,c
  2249   0026E4  D7FD               	bra	u307
  2250                           
  2251                           ;maincode04.c: 104:                 break;
  2252   0026E6  D7E4               	goto	l1262
  2253   0026E8                     l1272:
  2254   0026E8  5015               	movf	_speed^(0+1280),w,c
  2255                           
  2256                           ; Switch size 1, requested type "simple"
  2257                           ; Number of cases is 2, Range of values is 2 to 3
  2258                           ; switch strategies available:
  2259                           ; Name         Instructions Cycles
  2260                           ; simple_byte            7     4 (average)
  2261                           ;	Chosen strategy is simple_byte
  2262   0026EA  0A02               	xorlw	2	; case 2
  2263   0026EC  B4D8               	btfsc	status,2,c
  2264   0026EE  D7EA               	goto	l1266
  2265   0026F0  0A01               	xorlw	1	; case 3
  2266   0026F2  B4D8               	btfsc	status,2,c
  2267   0026F4  D7F4               	goto	l1268
  2268   0026F6  D7DC               	goto	l1262
  2269   0026F8                     __end_of_main:
  2270                           	callstack 0
  2271                           
  2272 ;; *************** function _visualizacion *****************
  2273 ;; Defined at:
  2274 ;;		line 62 in file "maincode04.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/2
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels used: 1
  2294 ;; Hardware stack levels required when called: 4
  2295 ;; This function calls:
  2296 ;;		_ENVIA_CHAR
  2297 ;;		_ESCRIBE_MENSAJE
  2298 ;;		_POS_CURSOR
  2299 ;;		___lwdiv
  2300 ;;		___lwmod
  2301 ;; This function is called by:
  2302 ;;		_main
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text1
  2307   0026F8                     __ptext1:
  2308                           	callstack 0
  2309   0026F8                     _visualizacion:
  2310                           	callstack 122
  2311                           
  2312                           ;maincode04.c: 63:     POS_CURSOR(1,0);
  2313                           
  2314                           ;incstack = 0
  2315   0026F8  0E00               	movlw	0
  2316   0026FA  6E07               	movwf	POS_CURSOR@columna^(0+1280),c
  2317   0026FC  0E01               	movlw	1
  2318   0026FE  EC14  F015         	call	_POS_CURSOR
  2319                           
  2320                           ;maincode04.c: 64:     ESCRIBE_MENSAJE("Cuenta:", 7);
  2321   002702  0E20               	movlw	low STR_1
  2322   002704  6E07               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2323   002706  0E07               	movlw	7
  2324   002708  6E08               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2325   00270A  ECEA  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2326                           
  2327                           ;maincode04.c: 65:     ENVIA_CHAR((cuenta / 1000) + 0x30);
  2328   00270E  C512  F509         	movff	_cuenta,___lwdiv@dividend
  2329   002712  C513  F50A         	movff	_cuenta+1,___lwdiv@dividend+1
  2330   002716  0E03               	movlw	3
  2331   002718  6E0C               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2332   00271A  0EE8               	movlw	232
  2333   00271C  6E0B               	movwf	___lwdiv@divisor^(0+1280),c
  2334   00271E  EC35  F014         	call	___lwdiv	;wreg free
  2335   002722  5009               	movf	?___lwdiv^(0+1280),w,c
  2336   002724  0F30               	addlw	48
  2337   002726  ECA2  F014         	call	_ENVIA_CHAR
  2338                           
  2339                           ;maincode04.c: 66:     ENVIA_CHAR(((cuenta % 1000) / 100) + 0x30);
  2340   00272A  0E03               	movlw	3
  2341   00272C  6E07               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2342   00272E  0EE8               	movlw	232
  2343   002730  6E06               	movwf	___lwmod@divisor^(0+1280),c
  2344   002732  C512  F504         	movff	_cuenta,___lwmod@dividend
  2345   002736  C513  F505         	movff	_cuenta+1,___lwmod@dividend+1
  2346   00273A  EC81  F014         	call	___lwmod	;wreg free
  2347   00273E  C504  F509         	movff	?___lwmod,___lwdiv@dividend
  2348   002742  C505  F50A         	movff	?___lwmod+1,___lwdiv@dividend+1
  2349   002746  0E00               	movlw	0
  2350   002748  6E0C               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2351   00274A  0E64               	movlw	100
  2352   00274C  6E0B               	movwf	___lwdiv@divisor^(0+1280),c
  2353   00274E  EC35  F014         	call	___lwdiv	;wreg free
  2354   002752  5009               	movf	?___lwdiv^(0+1280),w,c
  2355   002754  0F30               	addlw	48
  2356   002756  ECA2  F014         	call	_ENVIA_CHAR
  2357                           
  2358                           ;maincode04.c: 67:     ENVIA_CHAR(((cuenta % 100) / 10) + 0x30);
  2359   00275A  0E00               	movlw	0
  2360   00275C  6E07               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2361   00275E  0E64               	movlw	100
  2362   002760  6E06               	movwf	___lwmod@divisor^(0+1280),c
  2363   002762  C512  F504         	movff	_cuenta,___lwmod@dividend
  2364   002766  C513  F505         	movff	_cuenta+1,___lwmod@dividend+1
  2365   00276A  EC81  F014         	call	___lwmod	;wreg free
  2366   00276E  C504  F509         	movff	?___lwmod,___lwdiv@dividend
  2367   002772  C505  F50A         	movff	?___lwmod+1,___lwdiv@dividend+1
  2368   002776  0E00               	movlw	0
  2369   002778  6E0C               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2370   00277A  0E0A               	movlw	10
  2371   00277C  6E0B               	movwf	___lwdiv@divisor^(0+1280),c
  2372   00277E  EC35  F014         	call	___lwdiv	;wreg free
  2373   002782  5009               	movf	?___lwdiv^(0+1280),w,c
  2374   002784  0F30               	addlw	48
  2375   002786  ECA2  F014         	call	_ENVIA_CHAR
  2376                           
  2377                           ;maincode04.c: 68:     ENVIA_CHAR((cuenta % 10) + 0x30);
  2378   00278A  C512  F504         	movff	_cuenta,___lwmod@dividend
  2379   00278E  C513  F505         	movff	_cuenta+1,___lwmod@dividend+1
  2380   002792  0E00               	movlw	0
  2381   002794  6E07               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2382   002796  0E0A               	movlw	10
  2383   002798  6E06               	movwf	___lwmod@divisor^(0+1280),c
  2384   00279A  EC81  F014         	call	___lwmod	;wreg free
  2385   00279E  5004               	movf	?___lwmod^(0+1280),w,c
  2386   0027A0  0F30               	addlw	48
  2387   0027A2  ECA2  F014         	call	_ENVIA_CHAR
  2388   0027A6  0012               	return		;funcret
  2389   0027A8                     __end_of_visualizacion:
  2390                           	callstack 0
  2391                           
  2392 ;; *************** function ___lwmod *****************
  2393 ;; Defined at:
  2394 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  dividend        2    3[COMRAM] unsigned int 
  2397 ;;  divisor         2    5[COMRAM] unsigned int 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  counter         1    7[COMRAM] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  2    3[COMRAM] unsigned int 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/2
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2409 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2412 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2413 ;;Total ram usage:        5 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 1
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_visualizacion
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text2
  2424   002902                     __ptext2:
  2425                           	callstack 0
  2426   002902                     ___lwmod:
  2427                           	callstack 124
  2428                           
  2429                           ;incstack = 0
  2430   002902  5006               	movf	___lwmod@divisor^(0+1280),w,c
  2431   002904  1007               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  2432   002906  B4D8               	btfsc	status,2,c
  2433   002908  D018               	goto	l684
  2434   00290A  0E01               	movlw	1
  2435   00290C  6E08               	movwf	___lwmod@counter^(0+1280),c
  2436   00290E  D004               	goto	l1210
  2437   002910                     l1208:
  2438   002910  90D8               	bcf	status,0,c
  2439   002912  3606               	rlcf	___lwmod@divisor^(0+1280),f,c
  2440   002914  3607               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  2441   002916  2A08               	incf	___lwmod@counter^(0+1280),f,c
  2442   002918                     l1210:
  2443   002918  AE07               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  2444   00291A  D7FA               	goto	l1208
  2445   00291C                     u240:
  2446   00291C  5006               	movf	___lwmod@divisor^(0+1280),w,c
  2447   00291E  5C04               	subwf	___lwmod@dividend^(0+1280),w,c
  2448   002920  5007               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  2449   002922  5805               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  2450   002924  A0D8               	btfss	status,0,c
  2451   002926  D004               	goto	l1216
  2452   002928  5006               	movf	___lwmod@divisor^(0+1280),w,c
  2453   00292A  5E04               	subwf	___lwmod@dividend^(0+1280),f,c
  2454   00292C  5007               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  2455   00292E  5A05               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  2456   002930                     l1216:
  2457   002930  90D8               	bcf	status,0,c
  2458   002932  3207               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  2459   002934  3206               	rrcf	___lwmod@divisor^(0+1280),f,c
  2460   002936  2E08               	decfsz	___lwmod@counter^(0+1280),f,c
  2461   002938  D7F1               	goto	u240
  2462   00293A                     l684:
  2463   00293A  C504  F504         	movff	___lwmod@dividend,?___lwmod
  2464   00293E  C505  F505         	movff	___lwmod@dividend+1,?___lwmod+1
  2465   002942  0012               	return		;funcret
  2466   002944                     __end_of___lwmod:
  2467                           	callstack 0
  2468                           
  2469 ;; *************** function ___lwdiv *****************
  2470 ;; Defined at:
  2471 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  dividend        2    8[COMRAM] unsigned int 
  2474 ;;  divisor         2   10[COMRAM] unsigned int 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  quotient        2   12[COMRAM] unsigned int 
  2477 ;;  counter         1   14[COMRAM] unsigned char 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  2    8[COMRAM] unsigned int 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/2
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2488 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2490 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2491 ;;Total ram usage:        7 bytes
  2492 ;; Hardware stack levels used: 1
  2493 ;; Hardware stack levels required when called: 1
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_visualizacion
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text3
  2502   00286A                     __ptext3:
  2503                           	callstack 0
  2504   00286A                     ___lwdiv:
  2505                           	callstack 124
  2506                           
  2507                           ;incstack = 0
  2508   00286A  0E00               	movlw	0
  2509   00286C  6E0E               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  2510   00286E  0E00               	movlw	0
  2511   002870  6E0D               	movwf	___lwdiv@quotient^(0+1280),c
  2512   002872  500B               	movf	___lwdiv@divisor^(0+1280),w,c
  2513   002874  100C               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  2514   002876  B4D8               	btfsc	status,2,c
  2515   002878  D01C               	goto	l674
  2516   00287A  0E01               	movlw	1
  2517   00287C  6E0F               	movwf	___lwdiv@counter^(0+1280),c
  2518   00287E  D004               	goto	l1190
  2519   002880                     l1188:
  2520   002880  90D8               	bcf	status,0,c
  2521   002882  360B               	rlcf	___lwdiv@divisor^(0+1280),f,c
  2522   002884  360C               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  2523   002886  2A0F               	incf	___lwdiv@counter^(0+1280),f,c
  2524   002888                     l1190:
  2525   002888  AE0C               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  2526   00288A  D7FA               	goto	l1188
  2527   00288C                     u210:
  2528   00288C  90D8               	bcf	status,0,c
  2529   00288E  360D               	rlcf	___lwdiv@quotient^(0+1280),f,c
  2530   002890  360E               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  2531   002892  500B               	movf	___lwdiv@divisor^(0+1280),w,c
  2532   002894  5C09               	subwf	___lwdiv@dividend^(0+1280),w,c
  2533   002896  500C               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  2534   002898  580A               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  2535   00289A  A0D8               	btfss	status,0,c
  2536   00289C  D005               	goto	l1200
  2537   00289E  500B               	movf	___lwdiv@divisor^(0+1280),w,c
  2538   0028A0  5E09               	subwf	___lwdiv@dividend^(0+1280),f,c
  2539   0028A2  500C               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  2540   0028A4  5A0A               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  2541   0028A6  800D               	bsf	___lwdiv@quotient^(0+1280),0,c
  2542   0028A8                     l1200:
  2543   0028A8  90D8               	bcf	status,0,c
  2544   0028AA  320C               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  2545   0028AC  320B               	rrcf	___lwdiv@divisor^(0+1280),f,c
  2546   0028AE  2E0F               	decfsz	___lwdiv@counter^(0+1280),f,c
  2547   0028B0  D7ED               	goto	u210
  2548   0028B2                     l674:
  2549   0028B2  C50D  F509         	movff	___lwdiv@quotient,?___lwdiv
  2550   0028B6  C50E  F50A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2551   0028BA  0012               	return		;funcret
  2552   0028BC                     __end_of___lwdiv:
  2553                           	callstack 0
  2554                           
  2555 ;; *************** function _POS_CURSOR *****************
  2556 ;; Defined at:
  2557 ;;		line 6 in file "LCD.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  fila            1    wreg     unsigned char 
  2560 ;;  columna         1    6[COMRAM] unsigned char 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  fila            1    7[COMRAM] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/2
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2572 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2575 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2576 ;;Total ram usage:        2 bytes
  2577 ;; Hardware stack levels used: 1
  2578 ;; Hardware stack levels required when called: 3
  2579 ;; This function calls:
  2580 ;;		_ENVIA_LCD_CMD
  2581 ;; This function is called by:
  2582 ;;		_visualizacion
  2583 ;;		_main
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text4
  2588   002A28                     __ptext4:
  2589                           	callstack 0
  2590   002A28                     _POS_CURSOR:
  2591                           	callstack 122
  2592                           
  2593                           ;incstack = 0
  2594                           ;POS_CURSOR@fila stored from wreg
  2595   002A28  6E08               	movwf	POS_CURSOR@fila^(0+1280),c
  2596                           
  2597                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2598   002A2A  0408               	decf	POS_CURSOR@fila^(0+1280),w,c
  2599   002A2C  A4D8               	btfss	status,2,c
  2600   002A2E  D005               	goto	l1170
  2601                           
  2602                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2603   002A30  5007               	movf	POS_CURSOR@columna^(0+1280),w,c
  2604   002A32  0F80               	addlw	128
  2605   002A34  ECBB  F014         	call	_ENVIA_LCD_CMD
  2606                           
  2607                           ;LCD.c: 11:  }
  2608   002A38  0012               	return	
  2609   002A3A                     l1170:
  2610   002A3A  0E02               	movlw	2
  2611   002A3C  1808               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2612   002A3E  A4D8               	btfss	status,2,c
  2613   002A40  0012               	return	
  2614                           
  2615                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2616   002A42  5007               	movf	POS_CURSOR@columna^(0+1280),w,c
  2617   002A44  0FC0               	addlw	192
  2618   002A46  ECBB  F014         	call	_ENVIA_LCD_CMD
  2619   002A4A  0012               	return		;funcret
  2620   002A4C                     __end_of_POS_CURSOR:
  2621                           	callstack 0
  2622                           
  2623 ;; *************** function _ESCRIBE_MENSAJE *****************
  2624 ;; Defined at:
  2625 ;;		line 41 in file "LCD.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  cadena          1    6[COMRAM] PTR const unsigned char 
  2628 ;;		 -> STR_3(14), STR_2(17), STR_1(8), 
  2629 ;;  tam             1    7[COMRAM] unsigned char 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  i               1    9[COMRAM] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/2
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2643 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2644 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2645 ;;Total ram usage:        4 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 3
  2648 ;; This function calls:
  2649 ;;		_ENVIA_CHAR
  2650 ;; This function is called by:
  2651 ;;		_visualizacion
  2652 ;;		_main
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text5
  2657   0029D4                     __ptext5:
  2658                           	callstack 0
  2659   0029D4                     _ESCRIBE_MENSAJE:
  2660                           	callstack 122
  2661                           
  2662                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2663                           
  2664                           ;incstack = 0
  2665   0029D4  6A0A               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2666                           
  2667                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2668   0029D6  6A0A               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2669   0029D8  D00E               	goto	l1180
  2670   0029DA                     l1176:
  2671                           
  2672                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2673   0029DA  5007               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  2674   0029DC  240A               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2675   0029DE  6E09               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  2676   0029E0  C509  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2677   0029E4                     	if	1	;There is more than 1 active tblptr byte
  2678   0029E4  0E26               	movlw	high __psmallconst
  2679   0029E6  6EF7               	movwf	tblptrh,c
  2680   0029E8                     	endif
  2681   0029E8                     	if	0	;tblptru may be non-zero
  2682   0029E8                     	endif
  2683   0029E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2684   0029E8  0E00               	movlw	low (__psmallconst shr (0+16))
  2685   0029EA  6EF8               	movwf	tblptru,c
  2686   0029EC                     	endif
  2687   0029EC  0008               	tblrd		*
  2688   0029EE  50F5               	movf	tablat,w,c
  2689   0029F0  ECA2  F014         	call	_ENVIA_CHAR
  2690                           
  2691                           ;LCD.c: 47:  }
  2692   0029F4  2A0A               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  2693   0029F6                     l1180:
  2694   0029F6  5008               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  2695   0029F8  5C0A               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2696   0029FA  B0D8               	btfsc	status,0,c
  2697   0029FC  0012               	return	
  2698   0029FE  D7ED               	goto	l1176
  2699   002A00                     __end_of_ESCRIBE_MENSAJE:
  2700                           	callstack 0
  2701                           
  2702 ;; *************** function _ENVIA_CHAR *****************
  2703 ;; Defined at:
  2704 ;;		line 50 in file "LCD.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  dato            1    wreg     unsigned char 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  dato            1    4[COMRAM] unsigned char 
  2709 ;;  aux             1    5[COMRAM] unsigned char 
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1    wreg      void 
  2712 ;; Registers used:
  2713 ;;		wreg, status,2, status,0, cstack
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/2
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2722 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2723 ;;Total ram usage:        2 bytes
  2724 ;; Hardware stack levels used: 1
  2725 ;; Hardware stack levels required when called: 2
  2726 ;; This function calls:
  2727 ;;		_ENVIA_NIBBLE
  2728 ;;		_LEER_LCD
  2729 ;; This function is called by:
  2730 ;;		_ESCRIBE_MENSAJE
  2731 ;;		_visualizacion
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text6
  2736   002944                     __ptext6:
  2737                           	callstack 0
  2738   002944                     _ENVIA_CHAR:
  2739                           	callstack 122
  2740                           
  2741                           ;incstack = 0
  2742                           ;ENVIA_CHAR@dato stored from wreg
  2743   002944  6E05               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2744                           
  2745                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2746   002946  80C1               	bsf	193,0,c	;volatile
  2747                           
  2748                           ;LCD.c: 54:  LEER_LCD();
  2749   002948  ECD4  F013         	call	_LEER_LCD	;wreg free
  2750                           
  2751                           ;LCD.c: 55:  TRISD = 0x00;
  2752   00294C  6AC9               	clrf	201,c	;volatile
  2753                           
  2754                           ;LCD.c: 56:         _delay(1200);
  2755   00294E  0EF0               	movlw	240
  2756   002950                     u317:
  2757   002950  D000               	nop2	
  2758   002952  2EE8               	decfsz	wreg,f,c
  2759   002954  D7FD               	bra	u317
  2760                           
  2761                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2762   002956  92C1               	bcf	193,1,c	;volatile
  2763                           
  2764                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2765   002958  94C1               	bcf	193,2,c	;volatile
  2766                           
  2767                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2768   00295A  80C1               	bsf	193,0,c	;volatile
  2769                           
  2770                           ;LCD.c: 61:  aux = dato & 0xF0;
  2771   00295C  5005               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2772   00295E  0BF0               	andlw	240
  2773   002960  6E06               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2774                           
  2775                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2776   002962  5006               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2777   002964  EC57  F015         	call	_ENVIA_NIBBLE
  2778                           
  2779                           ;LCD.c: 63:  aux = dato << 4;
  2780   002968  3805               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2781   00296A  0BF0               	andlw	240
  2782   00296C  6E06               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2783                           
  2784                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2785   00296E  5006               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2786   002970  EC57  F015         	call	_ENVIA_NIBBLE
  2787   002974  0012               	return		;funcret
  2788   002976                     __end_of_ENVIA_CHAR:
  2789                           	callstack 0
  2790                           
  2791 ;; *************** function _lcd_init *****************
  2792 ;; Defined at:
  2793 ;;		line 52 in file "maincode04.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0, cstack
  2802 ;; Tracked objects:
  2803 ;;		On entry : 3F/2
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2809 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2811 ;;Total ram usage:        1 bytes
  2812 ;; Hardware stack levels used: 1
  2813 ;; Hardware stack levels required when called: 4
  2814 ;; This function calls:
  2815 ;;		_BORRAR_LCD
  2816 ;;		_CURSOR_HOME
  2817 ;;		_CURSOR_ONOFF
  2818 ;;		_LCD_CONFIG
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text7
  2825   002A00                     __ptext7:
  2826                           	callstack 0
  2827   002A00                     _lcd_init:
  2828                           	callstack 122
  2829                           
  2830                           ; BSR set to: 2
  2831                           ;maincode04.c: 53:     TRISD = 0x00;
  2832                           
  2833                           ;incstack = 0
  2834   002A00  6AC9               	clrf	201,c	;volatile
  2835                           
  2836                           ;maincode04.c: 54:     ANSELD = 0x00;
  2837   002A02  0104               	movlb	4	; () banked
  2838   002A04  6B18               	clrf	24,b	;volatile
  2839                           
  2840                           ; BSR set to: 4
  2841                           ;maincode04.c: 55:     LCD_CONFIG();
  2842   002A06  EC05  F014         	call	_LCD_CONFIG	;wreg free
  2843                           
  2844                           ;maincode04.c: 56:     _delay((unsigned long)((19)*(4000000UL/4000.0)));
  2845   002A0A  0E19               	movlw	25
  2846   002A0C  6E08               	movwf	??_lcd_init^(0+1280),c
  2847   002A0E  0EAC               	movlw	172
  2848   002A10                     u327:
  2849   002A10  2EE8               	decfsz	wreg,f,c
  2850   002A12  D7FE               	bra	u327
  2851   002A14  2E08               	decfsz	??_lcd_init^(0+1280),f,c
  2852   002A16  D7FC               	bra	u327
  2853                           
  2854                           ;maincode04.c: 57:     BORRAR_LCD();
  2855   002A18  EC78  F015         	call	_BORRAR_LCD	;wreg free
  2856                           
  2857                           ;maincode04.c: 58:     CURSOR_HOME();
  2858   002A1C  EC74  F015         	call	_CURSOR_HOME	;wreg free
  2859                           
  2860                           ;maincode04.c: 59:     CURSOR_ONOFF(1);
  2861   002A20  0E01               	movlw	1
  2862   002A22  EC49  F015         	call	_CURSOR_ONOFF
  2863   002A26  0012               	return		;funcret
  2864   002A28                     __end_of_lcd_init:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function _LCD_CONFIG *****************
  2868 ;; Defined at:
  2869 ;;		line 72 in file "LCD.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 3F/4
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2886 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2887 ;;Total ram usage:        1 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 3
  2890 ;; This function calls:
  2891 ;;		_ENVIA_LCD_CMD
  2892 ;;		_ENVIA_NIBBLE
  2893 ;; This function is called by:
  2894 ;;		_lcd_init
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text8
  2899   00280A                     __ptext8:
  2900                           	callstack 0
  2901   00280A                     _LCD_CONFIG:
  2902                           	callstack 122
  2903                           
  2904                           ; BSR set to: 4
  2905                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  2906                           
  2907                           ;incstack = 0
  2908   00280A  90C1               	bcf	193,0,c	;volatile
  2909                           
  2910                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  2911   00280C  92C1               	bcf	193,1,c	;volatile
  2912                           
  2913                           ; BSR set to: 4
  2914                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  2915   00280E  0E30               	movlw	48
  2916   002810  EC57  F015         	call	_ENVIA_NIBBLE
  2917                           
  2918                           ;LCD.c: 77:         _delay(24000);
  2919   002814  0E20               	movlw	32
  2920   002816  6E07               	movwf	??_LCD_CONFIG^(0+1280),c
  2921   002818  0E2A               	movlw	42
  2922   00281A                     u337:
  2923   00281A  2EE8               	decfsz	wreg,f,c
  2924   00281C  D7FE               	bra	u337
  2925   00281E  2E07               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2926   002820  D7FC               	bra	u337
  2927                           
  2928                           ;LCD.c: 78:         _delay(24000);
  2929   002822  0E20               	movlw	32
  2930   002824  6E07               	movwf	??_LCD_CONFIG^(0+1280),c
  2931   002826  0E2A               	movlw	42
  2932   002828                     u347:
  2933   002828  2EE8               	decfsz	wreg,f,c
  2934   00282A  D7FE               	bra	u347
  2935   00282C  2E07               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2936   00282E  D7FC               	bra	u347
  2937                           
  2938                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  2939   002830  0E30               	movlw	48
  2940   002832  EC57  F015         	call	_ENVIA_NIBBLE
  2941                           
  2942                           ;LCD.c: 83:  _delay(1200);
  2943   002836  0EF0               	movlw	240
  2944   002838                     u357:
  2945   002838  D000               	nop2	
  2946   00283A  2EE8               	decfsz	wreg,f,c
  2947   00283C  D7FD               	bra	u357
  2948                           
  2949                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  2950   00283E  0E30               	movlw	48
  2951   002840  EC57  F015         	call	_ENVIA_NIBBLE
  2952                           
  2953                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  2954   002844  0E20               	movlw	32
  2955   002846  EC57  F015         	call	_ENVIA_NIBBLE
  2956                           
  2957                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  2958   00284A  0E01               	movlw	1
  2959   00284C  ECBB  F014         	call	_ENVIA_LCD_CMD
  2960                           
  2961                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  2962   002850  0E28               	movlw	40
  2963   002852  ECBB  F014         	call	_ENVIA_LCD_CMD
  2964                           
  2965                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  2966   002856  0E0F               	movlw	15
  2967   002858  ECBB  F014         	call	_ENVIA_LCD_CMD
  2968                           
  2969                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  2970   00285C  0E06               	movlw	6
  2971   00285E  ECBB  F014         	call	_ENVIA_LCD_CMD
  2972                           
  2973                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  2974   002862  0E01               	movlw	1
  2975   002864  ECBB  F014         	call	_ENVIA_LCD_CMD
  2976   002868  0012               	return		;funcret
  2977   00286A                     __end_of_LCD_CONFIG:
  2978                           	callstack 0
  2979                           
  2980 ;; *************** function _CURSOR_ONOFF *****************
  2981 ;; Defined at:
  2982 ;;		line 35 in file "LCD.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  estado          1    wreg     unsigned char 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  estado          1    6[COMRAM] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2, status,0, cstack
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/4
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2999 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3000 ;;Total ram usage:        1 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; Hardware stack levels required when called: 3
  3003 ;; This function calls:
  3004 ;;		_ENVIA_LCD_CMD
  3005 ;; This function is called by:
  3006 ;;		_lcd_init
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text9
  3011   002A92                     __ptext9:
  3012                           	callstack 0
  3013   002A92                     _CURSOR_ONOFF:
  3014                           	callstack 122
  3015                           
  3016                           ;incstack = 0
  3017                           ;CURSOR_ONOFF@estado stored from wreg
  3018   002A92  6E07               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  3019                           
  3020                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  3021   002A94  5007               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  3022   002A96  A4D8               	btfss	status,2,c
  3023   002A98  D003               	goto	l960
  3024   002A9A  0E0E               	movlw	14
  3025   002A9C  ECBB  F014         	call	_ENVIA_LCD_CMD
  3026   002AA0                     l960:
  3027                           
  3028                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  3029   002AA0  0407               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  3030   002AA2  A4D8               	btfss	status,2,c
  3031   002AA4  0012               	return	
  3032   002AA6  0E0C               	movlw	12
  3033   002AA8  ECBB  F014         	call	_ENVIA_LCD_CMD
  3034   002AAC  0012               	return		;funcret
  3035   002AAE                     __end_of_CURSOR_ONOFF:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function _CURSOR_HOME *****************
  3039 ;; Defined at:
  3040 ;;		line 30 in file "LCD.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;		None
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/4
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3058 ;;Total ram usage:        0 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 3
  3061 ;; This function calls:
  3062 ;;		_ENVIA_LCD_CMD
  3063 ;; This function is called by:
  3064 ;;		_lcd_init
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text10
  3069   002AE8                     __ptext10:
  3070                           	callstack 0
  3071   002AE8                     _CURSOR_HOME:
  3072                           	callstack 122
  3073                           
  3074                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  3075                           
  3076                           ;incstack = 0
  3077   002AE8  0E02               	movlw	2
  3078   002AEA  ECBB  F014         	call	_ENVIA_LCD_CMD
  3079   002AEE  0012               	return		;funcret
  3080   002AF0                     __end_of_CURSOR_HOME:
  3081                           	callstack 0
  3082                           
  3083 ;; *************** function _BORRAR_LCD *****************
  3084 ;; Defined at:
  3085 ;;		line 67 in file "LCD.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/2
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3103 ;;Total ram usage:        0 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; Hardware stack levels required when called: 3
  3106 ;; This function calls:
  3107 ;;		_ENVIA_LCD_CMD
  3108 ;; This function is called by:
  3109 ;;		_lcd_init
  3110 ;;		_main
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text11
  3115   002AF0                     __ptext11:
  3116                           	callstack 0
  3117   002AF0                     _BORRAR_LCD:
  3118                           	callstack 122
  3119                           
  3120                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  3121                           
  3122                           ;incstack = 0
  3123   002AF0  0E01               	movlw	1
  3124   002AF2  ECBB  F014         	call	_ENVIA_LCD_CMD
  3125   002AF6  0012               	return		;funcret
  3126   002AF8                     __end_of_BORRAR_LCD:
  3127                           	callstack 0
  3128                           
  3129 ;; *************** function _ENVIA_LCD_CMD *****************
  3130 ;; Defined at:
  3131 ;;		line 104 in file "LCD.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  dato            1    wreg     unsigned char 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;  dato            1    4[COMRAM] unsigned char 
  3136 ;;  aux             1    5[COMRAM] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      void 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/2
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3150 ;;Total ram usage:        2 bytes
  3151 ;; Hardware stack levels used: 1
  3152 ;; Hardware stack levels required when called: 2
  3153 ;; This function calls:
  3154 ;;		_ENVIA_NIBBLE
  3155 ;;		_LEER_LCD
  3156 ;; This function is called by:
  3157 ;;		_POS_CURSOR
  3158 ;;		_CURSOR_HOME
  3159 ;;		_CURSOR_ONOFF
  3160 ;;		_BORRAR_LCD
  3161 ;;		_LCD_CONFIG
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           	psect	text12
  3166   002976                     __ptext12:
  3167                           	callstack 0
  3168   002976                     _ENVIA_LCD_CMD:
  3169                           	callstack 122
  3170                           
  3171                           ;incstack = 0
  3172                           ;ENVIA_LCD_CMD@dato stored from wreg
  3173   002976  6E05               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  3174                           
  3175                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  3176   002978  90C1               	bcf	193,0,c	;volatile
  3177                           
  3178                           ;LCD.c: 108:  LEER_LCD();
  3179   00297A  ECD4  F013         	call	_LEER_LCD	;wreg free
  3180                           
  3181                           ;LCD.c: 109:  TRISD = 0b00000000;
  3182   00297E  6AC9               	clrf	201,c	;volatile
  3183                           
  3184                           ;LCD.c: 111:         _delay(1200);
  3185   002980  0EF0               	movlw	240
  3186   002982                     u367:
  3187   002982  D000               	nop2	
  3188   002984  2EE8               	decfsz	wreg,f,c
  3189   002986  D7FD               	bra	u367
  3190                           
  3191                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  3192   002988  92C1               	bcf	193,1,c	;volatile
  3193                           
  3194                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  3195   00298A  94C1               	bcf	193,2,c	;volatile
  3196                           
  3197                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  3198   00298C  90C1               	bcf	193,0,c	;volatile
  3199                           
  3200                           ;LCD.c: 115:  aux = dato & 0xF0;
  3201   00298E  5005               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  3202   002990  0BF0               	andlw	240
  3203   002992  6E06               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  3204                           
  3205                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  3206   002994  5006               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  3207   002996  EC57  F015         	call	_ENVIA_NIBBLE
  3208                           
  3209                           ;LCD.c: 117:  aux = dato<<4;
  3210   00299A  3805               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  3211   00299C  0BF0               	andlw	240
  3212   00299E  6E06               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  3213                           
  3214                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  3215   0029A0  5006               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  3216   0029A2  EC57  F015         	call	_ENVIA_NIBBLE
  3217   0029A6  0012               	return		;funcret
  3218   0029A8                     __end_of_ENVIA_LCD_CMD:
  3219                           	callstack 0
  3220                           
  3221 ;; *************** function _LEER_LCD *****************
  3222 ;; Defined at:
  3223 ;;		line 121 in file "LCD.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;		None
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  aux             1    3[COMRAM] unsigned char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/2
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3240 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3241 ;;Total ram usage:        1 bytes
  3242 ;; Hardware stack levels used: 1
  3243 ;; Hardware stack levels required when called: 1
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_ENVIA_CHAR
  3248 ;;		_ENVIA_LCD_CMD
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text13
  3253   0027A8                     __ptext13:
  3254                           	callstack 0
  3255   0027A8                     _LEER_LCD:
  3256                           	callstack 122
  3257                           
  3258                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3259                           
  3260                           ;incstack = 0
  3261   0027A8  0EF8               	movlw	248
  3262   0027AA  6EC9               	movwf	201,c	;volatile
  3263                           
  3264                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  3265   0027AC  90C1               	bcf	193,0,c	;volatile
  3266                           
  3267                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  3268   0027AE  82C1               	bsf	193,1,c	;volatile
  3269                           
  3270                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  3271   0027B0  84C1               	bsf	193,2,c	;volatile
  3272                           
  3273                           ;LCD.c: 128:         _delay(1200);
  3274   0027B2  0EF0               	movlw	240
  3275   0027B4                     u377:
  3276   0027B4  D000               	nop2	
  3277   0027B6  2EE8               	decfsz	wreg,f,c
  3278   0027B8  D7FD               	bra	u377
  3279                           
  3280                           ;LCD.c: 130:  aux = PORTD;
  3281   0027BA  C4D1 F504          	movff	1233,LEER_LCD@aux	;volatile
  3282                           
  3283                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  3284   0027BE  94C1               	bcf	193,2,c	;volatile
  3285                           
  3286                           ;LCD.c: 132:         _delay(1200);
  3287   0027C0  0EF0               	movlw	240
  3288   0027C2                     u387:
  3289   0027C2  D000               	nop2	
  3290   0027C4  2EE8               	decfsz	wreg,f,c
  3291   0027C6  D7FD               	bra	u387
  3292                           
  3293                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  3294   0027C8  84C1               	bsf	193,2,c	;volatile
  3295                           
  3296                           ;LCD.c: 135:         _delay(1200);
  3297   0027CA  0EF0               	movlw	240
  3298   0027CC                     u397:
  3299   0027CC  D000               	nop2	
  3300   0027CE  2EE8               	decfsz	wreg,f,c
  3301   0027D0  D7FD               	bra	u397
  3302   0027D2                     l876:
  3303                           
  3304                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3305   0027D2  94C1               	bcf	193,2,c	;volatile
  3306                           
  3307                           ;LCD.c: 138:  aux = aux & 0x80;
  3308   0027D4  5004               	movf	LEER_LCD@aux^(0+1280),w,c
  3309   0027D6  0B80               	andlw	128
  3310   0027D8  6E04               	movwf	LEER_LCD@aux^(0+1280),c
  3311                           
  3312                           ;LCD.c: 139:  while(aux == 0x80)
  3313   0027DA  D012               	goto	l892
  3314   0027DC                     l67:
  3315                           
  3316                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3317   0027DC  84C1               	bsf	193,2,c	;volatile
  3318                           
  3319                           ;LCD.c: 142:             _delay(1200);
  3320   0027DE  0EF0               	movlw	240
  3321   0027E0                     u407:
  3322   0027E0  D000               	nop2	
  3323   0027E2  2EE8               	decfsz	wreg,f,c
  3324   0027E4  D7FD               	bra	u407
  3325                           
  3326                           ;LCD.c: 143:             aux = PORTD;
  3327   0027E6  C4D1 F504          	movff	1233,LEER_LCD@aux	;volatile
  3328                           
  3329                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3330   0027EA  94C1               	bcf	193,2,c	;volatile
  3331                           
  3332                           ;LCD.c: 145:             _delay(1200);
  3333   0027EC  0EF0               	movlw	240
  3334   0027EE                     u417:
  3335   0027EE  D000               	nop2	
  3336   0027F0  2EE8               	decfsz	wreg,f,c
  3337   0027F2  D7FD               	bra	u417
  3338                           
  3339                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3340   0027F4  84C1               	bsf	193,2,c	;volatile
  3341                           
  3342                           ;LCD.c: 147:             _delay(1200);
  3343   0027F6  0EF0               	movlw	240
  3344   0027F8                     u427:
  3345   0027F8  D000               	nop2	
  3346   0027FA  2EE8               	decfsz	wreg,f,c
  3347   0027FC  D7FD               	bra	u427
  3348   0027FE  D7E9               	goto	l876
  3349   002800                     l892:
  3350                           
  3351                           ;LCD.c: 139:  while(aux == 0x80)
  3352   002800  0E80               	movlw	128
  3353   002802  1804               	xorwf	LEER_LCD@aux^(0+1280),w,c
  3354   002804  A4D8               	btfss	status,2,c
  3355   002806  0012               	return	
  3356   002808  D7E9               	goto	l67
  3357   00280A                     __end_of_LEER_LCD:
  3358                           	callstack 0
  3359                           
  3360 ;; *************** function _ENVIA_NIBBLE *****************
  3361 ;; Defined at:
  3362 ;;		line 93 in file "LCD.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  dato            1    wreg     unsigned char 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  dato            1    3[COMRAM] unsigned char 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, status,2, status,0
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/2
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3380 ;;Total ram usage:        1 bytes
  3381 ;; Hardware stack levels used: 1
  3382 ;; Hardware stack levels required when called: 1
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_ENVIA_CHAR
  3387 ;;		_LCD_CONFIG
  3388 ;;		_ENVIA_LCD_CMD
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text14
  3393   002AAE                     __ptext14:
  3394                           	callstack 0
  3395   002AAE                     _ENVIA_NIBBLE:
  3396                           	callstack 122
  3397                           
  3398                           ;incstack = 0
  3399                           ;ENVIA_NIBBLE@dato stored from wreg
  3400   002AAE  6E04               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  3401                           
  3402                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3403   002AB0  0E0F               	movlw	15
  3404   002AB2  16C1               	andwf	193,f,c	;volatile
  3405                           
  3406                           ;LCD.c: 96:  dato &= 0xF0;
  3407   002AB4  0EF0               	movlw	240
  3408   002AB6  1604               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  3409                           
  3410                           ;LCD.c: 97:  LATD|= dato;
  3411   002AB8  5004               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  3412   002ABA  12C1               	iorwf	193,f,c	;volatile
  3413                           
  3414                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3415   002ABC  84C1               	bsf	193,2,c	;volatile
  3416                           
  3417                           ;LCD.c: 100:         _delay(1200);
  3418   002ABE  0EF0               	movlw	240
  3419   002AC0                     u437:
  3420   002AC0  D000               	nop2	
  3421   002AC2  2EE8               	decfsz	wreg,f,c
  3422   002AC4  D7FD               	bra	u437
  3423                           
  3424                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3425   002AC6  94C1               	bcf	193,2,c	;volatile
  3426   002AC8  0012               	return		;funcret
  3427   002ACA                     __end_of_ENVIA_NIBBLE:
  3428                           	callstack 0
  3429                           
  3430 ;; *************** function _configuro *****************
  3431 ;; Defined at:
  3432 ;;		line 21 in file "maincode04.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;		None
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  1    wreg      void 
  3439 ;; Registers used:
  3440 ;;		wreg, status,2
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 3F/2
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3450 ;;Total ram usage:        0 bytes
  3451 ;; Hardware stack levels used: 1
  3452 ;; Hardware stack levels required when called: 1
  3453 ;; This function calls:
  3454 ;;		Nothing
  3455 ;; This function is called by:
  3456 ;;		_main
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           	psect	text15
  3461   0028BC                     __ptext15:
  3462                           	callstack 0
  3463   0028BC                     _configuro:
  3464                           	callstack 125
  3465                           
  3466                           ;maincode04.c: 23:     OSCCON1 = 0x60;
  3467                           
  3468                           ;incstack = 0
  3469   0028BC  0E60               	movlw	96
  3470   0028BE  0100               	movlb	0	; () banked
  3471   0028C0  6FAD               	movwf	173,b	;volatile
  3472                           
  3473                           ;maincode04.c: 24:     OSCFRQ = 0x02;
  3474   0028C2  0E02               	movlw	2
  3475   0028C4  6FB1               	movwf	177,b	;volatile
  3476                           
  3477                           ;maincode04.c: 25:     OSCEN = 0x40;
  3478   0028C6  0E40               	movlw	64
  3479   0028C8  6FB3               	movwf	179,b	;volatile
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;maincode04.c: 27:     TRISBbits.TRISB4 = 1;
  3483   0028CA  88C7               	bsf	199,4,c	;volatile
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;maincode04.c: 28:     ANSELBbits.ANSELB4 = 0;
  3487   0028CC  0104               	movlb	4	; () banked
  3488   0028CE  9908               	bcf	8,4,b	;volatile
  3489                           
  3490                           ; BSR set to: 4
  3491                           ;maincode04.c: 29:     WPUBbits.WPUB4 = 1;
  3492   0028D0  8909               	bsf	9,4,b	;volatile
  3493                           
  3494                           ; BSR set to: 4
  3495                           ;maincode04.c: 30:     TRISBbits.TRISB2 = 1;
  3496   0028D2  84C7               	bsf	199,2,c	;volatile
  3497                           
  3498                           ; BSR set to: 4
  3499                           ;maincode04.c: 31:     ANSELBbits.ANSELB2 = 0;
  3500   0028D4  9508               	bcf	8,2,b	;volatile
  3501                           
  3502                           ; BSR set to: 4
  3503                           ;maincode04.c: 32:     WPUBbits.WPUB2 = 1;
  3504   0028D6  8509               	bsf	9,2,b	;volatile
  3505                           
  3506                           ; BSR set to: 4
  3507                           ;maincode04.c: 33:     TRISBbits.TRISB3 = 1;
  3508   0028D8  86C7               	bsf	199,3,c	;volatile
  3509                           
  3510                           ; BSR set to: 4
  3511                           ;maincode04.c: 34:     ANSELBbits.ANSELB3 = 0;
  3512   0028DA  9708               	bcf	8,3,b	;volatile
  3513                           
  3514                           ; BSR set to: 4
  3515                           ;maincode04.c: 35:     WPUBbits.WPUB3 = 1;
  3516   0028DC  8709               	bsf	9,3,b	;volatile
  3517                           
  3518                           ;maincode04.c: 37:     INT0PPS = 0x0A;
  3519   0028DE  0E0A               	movlw	10
  3520   0028E0  0102               	movlb	2	; () banked
  3521   0028E2  6F3E               	movwf	62,b	;volatile
  3522                           
  3523                           ; BSR set to: 2
  3524                           ;maincode04.c: 38:     PIE1bits.INT0IE = 1;
  3525   0028E4  809F               	bsf	159,0,c	;volatile
  3526                           
  3527                           ; BSR set to: 2
  3528                           ;maincode04.c: 39:     PIR1bits.INT0IF = 0;
  3529   0028E6  90AF               	bcf	175,0,c	;volatile
  3530                           
  3531                           ; BSR set to: 2
  3532                           ;maincode04.c: 40:     INTCON0bits.INT0EDG = 0;
  3533   0028E8  90D6               	bcf	214,0,c	;volatile
  3534                           
  3535                           ;maincode04.c: 41:     INT1PPS = 0x0B;
  3536   0028EA  0E0B               	movlw	11
  3537   0028EC  6F3F               	movwf	63,b	;volatile
  3538                           
  3539                           ; BSR set to: 2
  3540                           ;maincode04.c: 42:     PIE6bits.INT1IE = 1;
  3541   0028EE  80A4               	bsf	164,0,c	;volatile
  3542                           
  3543                           ; BSR set to: 2
  3544                           ;maincode04.c: 43:     PIR6bits.INT1IF = 0;
  3545   0028F0  90B4               	bcf	180,0,c	;volatile
  3546                           
  3547                           ; BSR set to: 2
  3548                           ;maincode04.c: 44:     INTCON0bits.INT1EDG = 0;
  3549   0028F2  92D6               	bcf	214,1,c	;volatile
  3550                           
  3551                           ;maincode04.c: 45:     INT2PPS = 0x0C;
  3552   0028F4  0E0C               	movlw	12
  3553   0028F6  6F40               	movwf	64,b	;volatile
  3554                           
  3555                           ; BSR set to: 2
  3556                           ;maincode04.c: 46:     PIE10bits.INT2IE = 1;
  3557   0028F8  80A8               	bsf	168,0,c	;volatile
  3558                           
  3559                           ; BSR set to: 2
  3560                           ;maincode04.c: 47:     PIR10bits.INT2IF = 0;
  3561   0028FA  90B8               	bcf	184,0,c	;volatile
  3562                           
  3563                           ; BSR set to: 2
  3564                           ;maincode04.c: 48:     INTCON0bits.INT2EDG = 0;
  3565   0028FC  94D6               	bcf	214,2,c	;volatile
  3566                           
  3567                           ; BSR set to: 2
  3568                           ;maincode04.c: 49:     INTCON0bits.GIE = 1;
  3569   0028FE  8ED6               	bsf	214,7,c	;volatile
  3570                           
  3571                           ; BSR set to: 2
  3572   002900  0012               	return		;funcret
  3573   002902                     __end_of_configuro:
  3574                           	callstack 0
  3575                           
  3576 ;; *************** function _INT0_ISR *****************
  3577 ;; Defined at:
  3578 ;;		line 109 in file "maincode04.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;		None
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;		None
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      void 
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3594 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3595 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3596 ;;Total ram usage:        1 bytes
  3597 ;; Hardware stack levels used: 1
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		Interrupt level 2
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text16
  3606   002A4C                     __ptext16:
  3607                           	callstack 0
  3608   002A4C                     _INT0_ISR:
  3609                           	callstack 122
  3610                           
  3611                           ;maincode04.c: 110:     PIR1bits.INT0IF = 0;
  3612                           
  3613                           ; BSR set to: 2
  3614                           ;incstack = 0
  3615   002A4C  90AF               	bcf	175,0,c	;volatile
  3616                           
  3617                           ;maincode04.c: 111:     if(speed == 2){
  3618   002A4E  0E02               	movlw	2
  3619   002A50  1815               	xorwf	_speed^(0+1280),w,c
  3620   002A52  A4D8               	btfss	status,2,c
  3621   002A54  D002               	goto	i2l1148
  3622                           
  3623                           ;maincode04.c: 112:         speed = 3;
  3624   002A56  0E03               	movlw	3
  3625   002A58  D001               	goto	L2
  3626   002A5A                     i2l1148:
  3627                           
  3628                           ;maincode04.c: 115:         speed = 2;
  3629   002A5A  0E02               	movlw	2
  3630   002A5C                     L2:
  3631   002A5C  6E15               	movwf	_speed^(0+1280),c
  3632                           
  3633                           ;maincode04.c: 117:     _delay((unsigned long)((50)*(4000000UL/4000.0)));
  3634   002A5E  0E41               	movlw	65
  3635   002A60  6E01               	movwf	??_INT0_ISR^(0+1280),c
  3636   002A62  0EEE               	movlw	238
  3637   002A64                     i2u44_47:
  3638   002A64  2EE8               	decfsz	wreg,f,c
  3639   002A66  D7FE               	bra	i2u44_47
  3640   002A68  2E01               	decfsz	??_INT0_ISR^(0+1280),f,c
  3641   002A6A  D7FC               	bra	i2u44_47
  3642   002A6C  D000               	nop2	
  3643   002A6E  0011               	retfie		f
  3644   002A70                     __end_of_INT0_ISR:
  3645                           	callstack 0
  3646                           
  3647 ;; *************** function _INT1_ISR *****************
  3648 ;; Defined at:
  3649 ;;		line 120 in file "maincode04.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;		None
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;		None
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      void 
  3656 ;; Registers used:
  3657 ;;		wreg, status,2
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3667 ;;Total ram usage:        1 bytes
  3668 ;; Hardware stack levels used: 1
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		Interrupt level 2
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text17
  3677   002A70                     __ptext17:
  3678                           	callstack 0
  3679   002A70                     _INT1_ISR:
  3680                           	callstack 122
  3681                           
  3682                           ;maincode04.c: 121:     PIR6bits.INT1IF = 0;
  3683                           
  3684                           ;incstack = 0
  3685   002A70  90B4               	bcf	180,0,c	;volatile
  3686                           
  3687                           ;maincode04.c: 122:     if(estado == 0){
  3688   002A72  5014               	movf	_estado^(0+1280),w,c
  3689   002A74  A4D8               	btfss	status,2,c
  3690   002A76  D003               	goto	i2l173
  3691                           
  3692                           ;maincode04.c: 123:         estado = 1;
  3693   002A78  0E01               	movlw	1
  3694   002A7A  6E14               	movwf	_estado^(0+1280),c
  3695                           
  3696                           ;maincode04.c: 124:     }
  3697   002A7C  D001               	goto	i2l1158
  3698   002A7E                     i2l173:
  3699                           
  3700                           ;maincode04.c: 126:         estado = 0;
  3701   002A7E  6A14               	clrf	_estado^(0+1280),c
  3702   002A80                     i2l1158:
  3703                           
  3704                           ;maincode04.c: 128:     _delay((unsigned long)((50)*(4000000UL/4000.0)));
  3705   002A80  0E41               	movlw	65
  3706   002A82  6E02               	movwf	??_INT1_ISR^(0+1280),c
  3707   002A84  0EEE               	movlw	238
  3708   002A86                     i2u45_47:
  3709   002A86  2EE8               	decfsz	wreg,f,c
  3710   002A88  D7FE               	bra	i2u45_47
  3711   002A8A  2E02               	decfsz	??_INT1_ISR^(0+1280),f,c
  3712   002A8C  D7FC               	bra	i2u45_47
  3713   002A8E  D000               	nop2	
  3714   002A90  0011               	retfie		f
  3715   002A92                     __end_of_INT1_ISR:
  3716                           	callstack 0
  3717                           
  3718 ;; *************** function _INT2_ISR *****************
  3719 ;; Defined at:
  3720 ;;		line 131 in file "maincode04.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;		None
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;		None
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      void 
  3727 ;; Registers used:
  3728 ;;		wreg, status,2
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3737 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3738 ;;Total ram usage:        1 bytes
  3739 ;; Hardware stack levels used: 1
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		Interrupt level 2
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text18
  3748   002ACC                     __ptext18:
  3749                           	callstack 0
  3750   002ACC                     _INT2_ISR:
  3751                           	callstack 122
  3752                           
  3753                           ;maincode04.c: 132:     PIR10bits.INT2IF = 0;
  3754                           
  3755                           ;incstack = 0
  3756   002ACC  90B8               	bcf	184,0,c	;volatile
  3757                           
  3758                           ;maincode04.c: 133:     cuenta = 0;
  3759   002ACE  0E00               	movlw	0
  3760   002AD0  6E13               	movwf	(_cuenta+1)^(0+1280),c
  3761   002AD2  0E00               	movlw	0
  3762   002AD4  6E12               	movwf	_cuenta^(0+1280),c
  3763                           
  3764                           ;maincode04.c: 134:     _delay((unsigned long)((50)*(4000000UL/4000.0)));
  3765   002AD6  0E41               	movlw	65
  3766   002AD8  6E03               	movwf	??_INT2_ISR^(0+1280),c
  3767   002ADA  0EEE               	movlw	238
  3768   002ADC                     i2u46_47:
  3769   002ADC  2EE8               	decfsz	wreg,f,c
  3770   002ADE  D7FE               	bra	i2u46_47
  3771   002AE0  2E03               	decfsz	??_INT2_ISR^(0+1280),f,c
  3772   002AE2  D7FC               	bra	i2u46_47
  3773   002AE4  D000               	nop2	
  3774   002AE6  0011               	retfie		f
  3775   002AE8                     __end_of_INT2_ISR:
  3776                           	callstack 0
  3777                           
  3778                           ;
  3779                           ; H/W Interrupt Vector Table @ 0x8
  3780                           ;
  3781                           
  3782                           	psect	ivt0x8
  3783   000008                     __pivt0x8:
  3784                           	callstack 0
  3785   000008                     ivt0x8_base:
  3786                           	callstack 0
  3787                           
  3788                           ; Vector 0 : SWINT
  3789   000008  0040               	dw	ivt0x8_undefint shr (0+2)
  3790                           
  3791                           ; Vector 1 : HLVD
  3792   00000A  0040               	dw	ivt0x8_undefint shr (0+2)
  3793                           
  3794                           ; Vector 2 : OSF
  3795   00000C  0040               	dw	ivt0x8_undefint shr (0+2)
  3796                           
  3797                           ; Vector 3 : CSW
  3798   00000E  0040               	dw	ivt0x8_undefint shr (0+2)
  3799                           
  3800                           ; Vector 4 : Undefined
  3801   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  3802                           
  3803                           ; Vector 5 : CLC1
  3804   000012  0040               	dw	ivt0x8_undefint shr (0+2)
  3805                           
  3806                           ; Vector 6 : Undefined
  3807   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  3808                           
  3809                           ; Vector 7 : IOC
  3810   000016  0040               	dw	ivt0x8_undefint shr (0+2)
  3811                           
  3812                           ; Vector 8 : INT0
  3813   000018  0A93               	dw	_INT0_ISR shr (0+2)
  3814                           
  3815                           ; Vector 9 : ZCD
  3816   00001A  0040               	dw	ivt0x8_undefint shr (0+2)
  3817                           
  3818                           ; Vector 10 : AD
  3819   00001C  0040               	dw	ivt0x8_undefint shr (0+2)
  3820                           
  3821                           ; Vector 11 : ACT
  3822   00001E  0040               	dw	ivt0x8_undefint shr (0+2)
  3823                           
  3824                           ; Vector 12 : CMP1
  3825   000020  0040               	dw	ivt0x8_undefint shr (0+2)
  3826                           
  3827                           ; Vector 13 : SMT1
  3828   000022  0040               	dw	ivt0x8_undefint shr (0+2)
  3829                           
  3830                           ; Vector 14 : SMT1PRA
  3831   000024  0040               	dw	ivt0x8_undefint shr (0+2)
  3832                           
  3833                           ; Vector 15 : SMT1PRW
  3834   000026  0040               	dw	ivt0x8_undefint shr (0+2)
  3835                           
  3836                           ; Vector 16 : ADT
  3837   000028  0040               	dw	ivt0x8_undefint shr (0+2)
  3838                           
  3839                           ; Vector 17 : Undefined
  3840   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  3841                           
  3842                           ; Vector 18 : Undefined
  3843   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  3844                           
  3845                           ; Vector 19 : Undefined
  3846   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  3847                           
  3848                           ; Vector 20 : DMA1SCNT
  3849   000030  0040               	dw	ivt0x8_undefint shr (0+2)
  3850                           
  3851                           ; Vector 21 : DMA1DCNT
  3852   000032  0040               	dw	ivt0x8_undefint shr (0+2)
  3853                           
  3854                           ; Vector 22 : DMA1OR
  3855   000034  0040               	dw	ivt0x8_undefint shr (0+2)
  3856                           
  3857                           ; Vector 23 : DMA1A
  3858   000036  0040               	dw	ivt0x8_undefint shr (0+2)
  3859                           
  3860                           ; Vector 24 : SPI1RX
  3861   000038  0040               	dw	ivt0x8_undefint shr (0+2)
  3862                           
  3863                           ; Vector 25 : SPI1TX
  3864   00003A  0040               	dw	ivt0x8_undefint shr (0+2)
  3865                           
  3866                           ; Vector 26 : SPI1
  3867   00003C  0040               	dw	ivt0x8_undefint shr (0+2)
  3868                           
  3869                           ; Vector 27 : TMR2
  3870   00003E  0040               	dw	ivt0x8_undefint shr (0+2)
  3871                           
  3872                           ; Vector 28 : TMR1
  3873   000040  0040               	dw	ivt0x8_undefint shr (0+2)
  3874                           
  3875                           ; Vector 29 : TMR1G
  3876   000042  0040               	dw	ivt0x8_undefint shr (0+2)
  3877                           
  3878                           ; Vector 30 : CCP1
  3879   000044  0040               	dw	ivt0x8_undefint shr (0+2)
  3880                           
  3881                           ; Vector 31 : TMR0
  3882   000046  0040               	dw	ivt0x8_undefint shr (0+2)
  3883                           
  3884                           ; Vector 32 : U1RX
  3885   000048  0040               	dw	ivt0x8_undefint shr (0+2)
  3886                           
  3887                           ; Vector 33 : U1TX
  3888   00004A  0040               	dw	ivt0x8_undefint shr (0+2)
  3889                           
  3890                           ; Vector 34 : U1E
  3891   00004C  0040               	dw	ivt0x8_undefint shr (0+2)
  3892                           
  3893                           ; Vector 35 : U1
  3894   00004E  0040               	dw	ivt0x8_undefint shr (0+2)
  3895                           
  3896                           ; Vector 36 : Undefined
  3897   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  3898                           
  3899                           ; Vector 37 : Undefined
  3900   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  3901                           
  3902                           ; Vector 38 : PWM1PR
  3903   000054  0040               	dw	ivt0x8_undefint shr (0+2)
  3904                           
  3905                           ; Vector 39 : PWM1
  3906   000056  0040               	dw	ivt0x8_undefint shr (0+2)
  3907                           
  3908                           ; Vector 40 : SPI2RX
  3909   000058  0040               	dw	ivt0x8_undefint shr (0+2)
  3910                           
  3911                           ; Vector 41 : SPI2TX
  3912   00005A  0040               	dw	ivt0x8_undefint shr (0+2)
  3913                           
  3914                           ; Vector 42 : SPI2
  3915   00005C  0040               	dw	ivt0x8_undefint shr (0+2)
  3916                           
  3917                           ; Vector 43 : Undefined
  3918   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  3919                           
  3920                           ; Vector 44 : TMR3
  3921   000060  0040               	dw	ivt0x8_undefint shr (0+2)
  3922                           
  3923                           ; Vector 45 : TMR3G
  3924   000062  0040               	dw	ivt0x8_undefint shr (0+2)
  3925                           
  3926                           ; Vector 46 : PWM2PR
  3927   000064  0040               	dw	ivt0x8_undefint shr (0+2)
  3928                           
  3929                           ; Vector 47 : PWM2
  3930   000066  0040               	dw	ivt0x8_undefint shr (0+2)
  3931                           
  3932                           ; Vector 48 : INT1
  3933   000068  0A9C               	dw	_INT1_ISR shr (0+2)
  3934                           
  3935                           ; Vector 49 : CLC2
  3936   00006A  0040               	dw	ivt0x8_undefint shr (0+2)
  3937                           
  3938                           ; Vector 50 : CWG1
  3939   00006C  0040               	dw	ivt0x8_undefint shr (0+2)
  3940                           
  3941                           ; Vector 51 : NCO1
  3942   00006E  0040               	dw	ivt0x8_undefint shr (0+2)
  3943                           
  3944                           ; Vector 52 : DMA2SCNT
  3945   000070  0040               	dw	ivt0x8_undefint shr (0+2)
  3946                           
  3947                           ; Vector 53 : DMA2DCNT
  3948   000072  0040               	dw	ivt0x8_undefint shr (0+2)
  3949                           
  3950                           ; Vector 54 : DMA2OR
  3951   000074  0040               	dw	ivt0x8_undefint shr (0+2)
  3952                           
  3953                           ; Vector 55 : DMA2A
  3954   000076  0040               	dw	ivt0x8_undefint shr (0+2)
  3955                           
  3956                           ; Vector 56 : I2C1RX
  3957   000078  0040               	dw	ivt0x8_undefint shr (0+2)
  3958                           
  3959                           ; Vector 57 : I2C1TX
  3960   00007A  0040               	dw	ivt0x8_undefint shr (0+2)
  3961                           
  3962                           ; Vector 58 : I2C1
  3963   00007C  0040               	dw	ivt0x8_undefint shr (0+2)
  3964                           
  3965                           ; Vector 59 : I2C1E
  3966   00007E  0040               	dw	ivt0x8_undefint shr (0+2)
  3967                           
  3968                           ; Vector 60 : Undefined
  3969   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  3970                           
  3971                           ; Vector 61 : CLC3
  3972   000082  0040               	dw	ivt0x8_undefint shr (0+2)
  3973                           
  3974                           ; Vector 62 : PWM3PR
  3975   000084  0040               	dw	ivt0x8_undefint shr (0+2)
  3976                           
  3977                           ; Vector 63 : PWM3
  3978   000086  0040               	dw	ivt0x8_undefint shr (0+2)
  3979                           
  3980                           ; Vector 64 : U2RX
  3981   000088  0040               	dw	ivt0x8_undefint shr (0+2)
  3982                           
  3983                           ; Vector 65 : U2TX
  3984   00008A  0040               	dw	ivt0x8_undefint shr (0+2)
  3985                           
  3986                           ; Vector 66 : U2E
  3987   00008C  0040               	dw	ivt0x8_undefint shr (0+2)
  3988                           
  3989                           ; Vector 67 : U2
  3990   00008E  0040               	dw	ivt0x8_undefint shr (0+2)
  3991                           
  3992                           ; Vector 68 : TMR5
  3993   000090  0040               	dw	ivt0x8_undefint shr (0+2)
  3994                           
  3995                           ; Vector 69 : TMR5G
  3996   000092  0040               	dw	ivt0x8_undefint shr (0+2)
  3997                           
  3998                           ; Vector 70 : CCP2
  3999   000094  0040               	dw	ivt0x8_undefint shr (0+2)
  4000                           
  4001                           ; Vector 71 : SCAN
  4002   000096  0040               	dw	ivt0x8_undefint shr (0+2)
  4003                           
  4004                           ; Vector 72 : U3RX
  4005   000098  0040               	dw	ivt0x8_undefint shr (0+2)
  4006                           
  4007                           ; Vector 73 : U3TX
  4008   00009A  0040               	dw	ivt0x8_undefint shr (0+2)
  4009                           
  4010                           ; Vector 74 : U3E
  4011   00009C  0040               	dw	ivt0x8_undefint shr (0+2)
  4012                           
  4013                           ; Vector 75 : U3
  4014   00009E  0040               	dw	ivt0x8_undefint shr (0+2)
  4015                           
  4016                           ; Vector 76 : Undefined
  4017   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  4018                           
  4019                           ; Vector 77 : CLC4
  4020   0000A2  0040               	dw	ivt0x8_undefint shr (0+2)
  4021                           
  4022                           ; Vector 78 : Undefined
  4023   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  4024                           
  4025                           ; Vector 79 : Undefined
  4026   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  4027                           
  4028                           ; Vector 80 : INT2
  4029   0000A8  0AB3               	dw	_INT2_ISR shr (0+2)
  4030                           
  4031                           ; Vector 81 : CLC5
  4032   0000AA  0040               	dw	ivt0x8_undefint shr (0+2)
  4033                           
  4034                           ; Vector 82 : CWG2
  4035   0000AC  0040               	dw	ivt0x8_undefint shr (0+2)
  4036                           
  4037                           ; Vector 83 : NCO2
  4038   0000AE  0040               	dw	ivt0x8_undefint shr (0+2)
  4039                           
  4040                           ; Vector 84 : DMA3SCNT
  4041   0000B0  0040               	dw	ivt0x8_undefint shr (0+2)
  4042                           
  4043                           ; Vector 85 : DMA3DCNT
  4044   0000B2  0040               	dw	ivt0x8_undefint shr (0+2)
  4045                           
  4046                           ; Vector 86 : DMA3OR
  4047   0000B4  0040               	dw	ivt0x8_undefint shr (0+2)
  4048                           
  4049                           ; Vector 87 : DMA3A
  4050   0000B6  0040               	dw	ivt0x8_undefint shr (0+2)
  4051                           
  4052                           ; Vector 88 : CCP3
  4053   0000B8  0040               	dw	ivt0x8_undefint shr (0+2)
  4054                           
  4055                           ; Vector 89 : CLC6
  4056   0000BA  0040               	dw	ivt0x8_undefint shr (0+2)
  4057                           
  4058                           ; Vector 90 : CWG3
  4059   0000BC  0040               	dw	ivt0x8_undefint shr (0+2)
  4060                           
  4061                           ; Vector 91 : TMR4
  4062   0000BE  0040               	dw	ivt0x8_undefint shr (0+2)
  4063                           
  4064                           ; Vector 92 : DMA4SCNT
  4065   0000C0  0040               	dw	ivt0x8_undefint shr (0+2)
  4066                           
  4067                           ; Vector 93 : DMA4DCNT
  4068   0000C2  0040               	dw	ivt0x8_undefint shr (0+2)
  4069                           
  4070                           ; Vector 94 : DMA4OR
  4071   0000C4  0040               	dw	ivt0x8_undefint shr (0+2)
  4072                           
  4073                           ; Vector 95 : DMA4A
  4074   0000C6  0040               	dw	ivt0x8_undefint shr (0+2)
  4075                           
  4076                           ; Vector 96 : U4RX
  4077   0000C8  0040               	dw	ivt0x8_undefint shr (0+2)
  4078                           
  4079                           ; Vector 97 : U4TX
  4080   0000CA  0040               	dw	ivt0x8_undefint shr (0+2)
  4081                           
  4082                           ; Vector 98 : U4E
  4083   0000CC  0040               	dw	ivt0x8_undefint shr (0+2)
  4084                           
  4085                           ; Vector 99 : U4
  4086   0000CE  0040               	dw	ivt0x8_undefint shr (0+2)
  4087                           
  4088                           ; Vector 100 : DMA5SCNT
  4089   0000D0  0040               	dw	ivt0x8_undefint shr (0+2)
  4090                           
  4091                           ; Vector 101 : DMA5DCNT
  4092   0000D2  0040               	dw	ivt0x8_undefint shr (0+2)
  4093                           
  4094                           ; Vector 102 : DMA5OR
  4095   0000D4  0040               	dw	ivt0x8_undefint shr (0+2)
  4096                           
  4097                           ; Vector 103 : DMA5A
  4098   0000D6  0040               	dw	ivt0x8_undefint shr (0+2)
  4099                           
  4100                           ; Vector 104 : U5RX
  4101   0000D8  0040               	dw	ivt0x8_undefint shr (0+2)
  4102                           
  4103                           ; Vector 105 : U5TX
  4104   0000DA  0040               	dw	ivt0x8_undefint shr (0+2)
  4105                           
  4106                           ; Vector 106 : U5E
  4107   0000DC  0040               	dw	ivt0x8_undefint shr (0+2)
  4108                           
  4109                           ; Vector 107 : U5
  4110   0000DE  0040               	dw	ivt0x8_undefint shr (0+2)
  4111                           
  4112                           ; Vector 108 : DMA6SCNT
  4113   0000E0  0040               	dw	ivt0x8_undefint shr (0+2)
  4114                           
  4115                           ; Vector 109 : DMA6DCNT
  4116   0000E2  0040               	dw	ivt0x8_undefint shr (0+2)
  4117                           
  4118                           ; Vector 110 : DMA6OR
  4119   0000E4  0040               	dw	ivt0x8_undefint shr (0+2)
  4120                           
  4121                           ; Vector 111 : DMA6A
  4122   0000E6  0040               	dw	ivt0x8_undefint shr (0+2)
  4123                           
  4124                           ; Vector 112 : Undefined
  4125   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  4126                           
  4127                           ; Vector 113 : CLC7
  4128   0000EA  0040               	dw	ivt0x8_undefint shr (0+2)
  4129                           
  4130                           ; Vector 114 : CMP2
  4131   0000EC  0040               	dw	ivt0x8_undefint shr (0+2)
  4132                           
  4133                           ; Vector 115 : NCO3
  4134   0000EE  0040               	dw	ivt0x8_undefint shr (0+2)
  4135                           
  4136                           ; Vector 116 : Undefined
  4137   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  4138                           
  4139                           ; Vector 117 : Undefined
  4140   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  4141                           
  4142                           ; Vector 118 : Undefined
  4143   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  4144                           
  4145                           ; Vector 119 : Undefined
  4146   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  4147                           
  4148                           ; Vector 120 : NVM
  4149   0000F8  0040               	dw	ivt0x8_undefint shr (0+2)
  4150                           
  4151                           ; Vector 121 : CLC8
  4152   0000FA  0040               	dw	ivt0x8_undefint shr (0+2)
  4153                           
  4154                           ; Vector 122 : CRC
  4155   0000FC  0040               	dw	ivt0x8_undefint shr (0+2)
  4156                           
  4157                           ; Vector 123 : TMR6
  4158   0000FE  0040               	dw	ivt0x8_undefint shr (0+2)
  4159   000100                     ivt0x8_undefint:
  4160                           	callstack 0
  4161   000100  00FF               	reset	
  4162                           
  4163                           	psect	rparam
  4164   000001                     ___rparam_used  equ	1
  4165   000000                     ___param_bank   equ	0
  4166   000000                     __Lparam        equ	__Lrparam
  4167   000000                     __Hparam        equ	__Hrparam
  4168                           
  4169                           	psect	config
  4170                           
  4171                           ;Config register CONFIG1 @ 0x300000
  4172                           ;	External Oscillator Selection
  4173                           ;	FEXTOSC = OFF, Oscillator not enabled
  4174                           ;	Reset Oscillator Selection
  4175                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  4176   300000                     	org	3145728
  4177   300000  FC                 	db	252
  4178                           
  4179                           ;Config register CONFIG2 @ 0x300001
  4180                           ;	Clock out Enable bit
  4181                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4182                           ;	PRLOCKED One-Way Set Enable bit
  4183                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  4184                           ;	Clock Switch Enable bit
  4185                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4186                           ;	Fail-Safe Clock Monitor Enable bit
  4187                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4188   300001                     	org	3145729
  4189   300001  FF                 	db	255
  4190                           
  4191                           ;Config register CONFIG3 @ 0x300002
  4192                           ;	MCLR Enable bit
  4193                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4194                           ;	Power-up timer selection bits
  4195                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  4196                           ;	Multi-vector enable bit
  4197                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  4198                           ;	IVTLOCK bit One-way set enable bit
  4199                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  4200                           ;	Low Power BOR Enable bit
  4201                           ;	LPBOREN = OFF, Low-Power BOR disabled
  4202                           ;	Brown-out Reset Enable bits
  4203                           ;	BOREN = OFF, Brown-out Reset disabled
  4204   300002                     	org	3145730
  4205   300002  3D                 	db	61
  4206                           
  4207                           ;Config register CONFIG4 @ 0x300003
  4208                           ;	Brown-out Reset Voltage Selection bits
  4209                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  4210                           ;	ZCD Disable bit
  4211                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  4212                           ;	PPSLOCK bit One-Way Set Enable bit
  4213                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  4214                           ;	Stack Full/Underflow Reset Enable bit
  4215                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4216                           ;	Low Voltage Programming Enable bit
  4217                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  4218                           ;	Extended Instruction Set Enable bit
  4219                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4220   300003                     	org	3145731
  4221   300003  DF                 	db	223
  4222                           
  4223                           ;Config register CONFIG5 @ 0x300004
  4224                           ;	WDT Period selection bits
  4225                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4226                           ;	WDT operating mode
  4227                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4228   300004                     	org	3145732
  4229   300004  9F                 	db	159
  4230                           
  4231                           ;Config register CONFIG6 @ 0x300005
  4232                           ;	WDT Window Select bits
  4233                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4234                           ;	WDT input clock selector
  4235                           ;	WDTCCS = SC, Software Control
  4236   300005                     	org	3145733
  4237   300005  FF                 	db	255
  4238                           
  4239                           ;Config register CONFIG7 @ 0x300006
  4240                           ;	Boot Block Size selection bits
  4241                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4242                           ;	Boot Block enable bit
  4243                           ;	BBEN = OFF, Boot block disabled
  4244                           ;	Storage Area Flash enable bit
  4245                           ;	SAFEN = OFF, SAF disabled
  4246                           ;	Background Debugger
  4247                           ;	DEBUG = OFF, Background Debugger disabled
  4248   300006                     	org	3145734
  4249   300006  FF                 	db	255
  4250                           
  4251                           ;Config register CONFIG8 @ 0x300007
  4252                           ;	Boot Block Write Protection bit
  4253                           ;	WRTB = OFF, Boot Block not Write protected
  4254                           ;	Configuration Register Write Protection bit
  4255                           ;	WRTC = OFF, Configuration registers not Write protected
  4256                           ;	Data EEPROM Write Protection bit
  4257                           ;	WRTD = OFF, Data EEPROM not Write protected
  4258                           ;	SAF Write protection bit
  4259                           ;	WRTSAF = OFF, SAF not Write Protected
  4260                           ;	Application Block write protection bit
  4261                           ;	WRTAPP = OFF, Application Block not write protected
  4262   300007                     	org	3145735
  4263   300007  FF                 	db	255
  4264                           
  4265                           ;Config register CONFIG10 @ 0x300009
  4266                           ;	PFM and Data EEPROM Code Protection bit
  4267                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  4268   300009                     	org	3145737
  4269   300009  FF                 	db	255
  4270                           tosu	equ	0x4FF
  4271                           tosh	equ	0x4FE
  4272                           tosl	equ	0x4FD
  4273                           stkptr	equ	0x4FC
  4274                           pclatu	equ	0x4FB
  4275                           pclath	equ	0x4FA
  4276                           pcl	equ	0x4F9
  4277                           tblptru	equ	0x4F8
  4278                           tblptrh	equ	0x4F7
  4279                           tblptrl	equ	0x4F6
  4280                           tablat	equ	0x4F5
  4281                           prodh	equ	0x4F4
  4282                           prodl	equ	0x4F3
  4283                           indf0	equ	0x4EF
  4284                           postinc0	equ	0x4EE
  4285                           postdec0	equ	0x4ED
  4286                           preinc0	equ	0x4EC
  4287                           plusw0	equ	0x4EB
  4288                           fsr0h	equ	0x4EA
  4289                           fsr0l	equ	0x4E9
  4290                           wreg	equ	0x4E8
  4291                           indf1	equ	0x4E7
  4292                           postinc1	equ	0x4E6
  4293                           postdec1	equ	0x4E5
  4294                           preinc1	equ	0x4E4
  4295                           plusw1	equ	0x4E3
  4296                           fsr1h	equ	0x4E2
  4297                           fsr1l	equ	0x4E1
  4298                           bsr	equ	0x4E0
  4299                           indf2	equ	0x4DF
  4300                           postinc2	equ	0x4DE
  4301                           postdec2	equ	0x4DD
  4302                           preinc2	equ	0x4DC
  4303                           plusw2	equ	0x4DB
  4304                           fsr2h	equ	0x4DA
  4305                           fsr2l	equ	0x4D9
  4306                           status	equ	0x4D8

Data Sizes:
    Strings     39
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      21
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[8]), STR_2(CODE[17]), STR_3(CODE[14]), 


Critical Paths under _main in COMRAM

    _visualizacion->___lwdiv
    ___lwdiv->___lwmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _INT1_ISR in BANK32

    None.

Critical Paths under _INT2_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _INT1_ISR in BANK33

    None.

Critical Paths under _INT2_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _INT1_ISR in BANK34

    None.

Critical Paths under _INT2_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _INT1_ISR in BANK35

    None.

Critical Paths under _INT2_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Critical Paths under _INT1_ISR in BANK36

    None.

Critical Paths under _INT2_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1982
                                             15 COMRAM     2     2      0
                         _BORRAR_LCD
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                           _lcd_init
                      _visualizacion
 ---------------------------------------------------------------------------------
 (1) _visualizacion                                        0     0      0     895
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     165
                                              3 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     168
                                              8 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     225
                                              6 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE                                      4     2      2     217
                                              6 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              4 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              7 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              6 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              6 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              4 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _configuro
   _lcd_init
     _BORRAR_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _visualizacion
     _ENVIA_CHAR
     _ESCRIBE_MENSAJE
     _POS_CURSOR
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod

 _INT0_ISR (ROOT)

 _INT1_ISR (ROOT)

 _INT2_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh       1012      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBIGSFRlll       173      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     17      21     22.1%
BITBIGSFRh          87      0       0      0.0%
BITBIGSFRllh         5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      21      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jun 05 21:14:13 2025

                     l67 27DC            ENVIA_CHAR@aux 0506                      l674 28B2  
                    l684 293A                      l960 2AA0                      l892 2800  
                    l876 27D2                      u210 288C                      u240 291C  
                    u307 26E0                      u317 2950                      u407 27E0  
                    u327 2A10                      u417 27EE                      u337 281A  
                    u427 27F8                      u347 2828                      u437 2AC0  
                    u357 2838                      u367 2982                      u287 2668  
                    u377 27B4                      u297 26CE                      u387 27C2  
                    u397 27CC              LEER_LCD@aux 0504                      wreg 04E8  
           ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 0504           ENVIA_CHAR@dato 0505  
                   l1200 28A8                     l1210 2918                     l1216 2930  
                   l1208 2910                     l1170 2A3A                     l1180 29F6  
                   l1252 2690                     l1190 2888                     l1254 2696  
                   l1262 26B0                     l1176 29DA                     l1272 26E8  
                   l1264 26BE                     l1248 267A                     l1266 26C4  
                   l1258 26A8                     l1188 2880                     l1268 26DE  
                   STR_1 2620                     STR_2 2601                     STR_3 2612  
                   _LATD 04C1                     _main 262A                     start 0102  
          ?_CURSOR_ONOFF 0501             ___param_bank 0000          ??_ENVIA_LCD_CMD 0505  
       __end_of_LEER_LCD 280A         __end_of_INT0_ISR 2A70         __end_of_INT1_ISR 2A92  
       __end_of_INT2_ISR 2AE8                    ?_main 0501          __end_of___lwdiv 28BC  
        __end_of___lwmod 2944                    i2l173 2A7E                    _OSCEN 00B3  
                  _PORTD 04D1                    _TRISD 04C9              ?_POS_CURSOR 0507  
                  _speed 0515                    tablat 04F5                    status 04D8  
         ??_CURSOR_ONOFF 0507          __initialization 29A8             __end_of_main 26F8  
        _ESCRIBE_MENSAJE 29D4                   ??_main 0510            __activetblptr 0003  
                 _ANSELD 0418                   i2l1148 2A5A                   i2l1158 2A80  
                 _OSCFRQ 00B1         __end_of_lcd_init 2A28     __end_of_ENVIA_NIBBLE 2ACA  
              ??___lwdiv 050D                ??___lwmod 0508                   _cuenta 0512  
                 _estado 0514            _visualizacion 26F8                   isa$std 0001  
           __pdataCOMRAM 0515             __mediumconst 2600                   tblptrh 04F7  
                 tblptrl 04F6                   tblptru 04F8             ??_BORRAR_LCD 0507  
              ?_LEER_LCD 0501               __accesstop 0560  __end_of__initialization 29CE  
              ?_INT0_ISR 0501                ?_INT1_ISR 0501                ?_INT2_ISR 0501  
           ??_LCD_CONFIG 0507            ___rparam_used 0001             ??_ENVIA_CHAR 0505  
__end_of_ESCRIBE_MENSAJE 2A00           __pcstackCOMRAM 0501           ivt0x8_undefint 0100  
         ?_visualizacion 0501       __end_of_BORRAR_LCD 2AF8         ENVIA_LCD_CMD@aux 0506  
   __end_of_CURSOR_ONOFF 2AAE       __end_of_LCD_CONFIG 286A       __end_of_ENVIA_CHAR 2976  
             ??_LEER_LCD 0504         ENVIA_NIBBLE@dato 0504               ??_INT0_ISR 0501  
             ??_INT1_ISR 0502               ??_INT2_ISR 0503                  IVTBASEH 045E  
                IVTBASEL 045D                  IVTBASEU 045F                  _INT0PPS 023E  
                _INT1PPS 023F                  _INT2PPS 0240                  _OSCCON1 00AD  
                i2u44_47 2A64                  i2u45_47 2A86                  i2u46_47 2ADC  
           ??_POS_CURSOR 0508                ?_lcd_init 0501                  __Hparam 0000  
                __Lparam 0000         ?_ESCRIBE_MENSAJE 0507          ??_visualizacion 0510  
      __end_of_configuro 2902                  ___lwdiv 286A                  ___lwmod 2902  
           __psmallconst 2600    __end_of_ENVIA_LCD_CMD 29A8                  __pcinit 29A8  
     __end_of_POS_CURSOR 2A4C                  __ramtop 2600                  __ptext0 262A  
                __ptext1 26F8                  __ptext2 2902                  __ptext3 286A  
                __ptext4 2A28                  __ptext5 29D4                  __ptext6 2944  
                __ptext7 2A00                  __ptext8 280A                  __ptext9 2A92  
              _PIE10bits 04A8               ??_lcd_init 0508             _ENVIA_NIBBLE 2AAE  
   end_of_initialization 29CE                _PIR10bits 04B8                _TRISBbits 04C7  
           _CURSOR_ONOFF 2A92       CURSOR_ONOFF@estado 0507            __pidataCOMRAM 2AF8  
          ??_CURSOR_HOME 0507      start_initialization 29A8               ivt0x8_base 0008  
      ENVIA_LCD_CMD@dato 0505              __pbssCOMRAM 0512      __end_of_CURSOR_HOME 2AF0  
       ___lwdiv@dividend 0509                 ?___lwdiv 0509                 ?___lwmod 0504  
              _configuro 28BC              __smallconst 2600         ___lwdiv@quotient 050D  
               _LEER_LCD 27A8                 _INT0_ISR 2A4C                 _INT1_ISR 2A70  
               _INT2_ISR 2ACC                 _LATDbits 04C1                 _PIE1bits 049F  
               _PIE6bits 04A4                 _PIR1bits 04AF                 _PIR6bits 04B4  
  __end_of_visualizacion 27A8         ESCRIBE_MENSAJE@i 050A           POS_CURSOR@fila 0508  
             ?_configuro 0501                 _WPUBbits 0409              _CURSOR_HOME 2AE8  
            _INTCON0bits 04D6                 __Hrparam 0000                 __Lrparam 0000  
             _ANSELBbits 0408                 __pivt0x8 0008          ___lwdiv@divisor 050B  
        ___lwdiv@counter 050F                 __ptext10 2AE8                 __ptext11 2AF0  
               __ptext12 2976                 __ptext13 27A8                 __ptext14 2AAE  
               __ptext15 28BC                 __ptext16 2A4C                 __ptext17 2A70  
               __ptext18 2ACC               _BORRAR_LCD 2AF0                 _lcd_init 2A00  
             _LCD_CONFIG 280A               _ENVIA_CHAR 2944                 isa$xinst 0000  
          _ENVIA_LCD_CMD 2976              ??_configuro 0504        ??_ESCRIBE_MENSAJE 0509  
               intlevel2 0000    ESCRIBE_MENSAJE@cadena 0507         ___lwmod@dividend 0504  
         ?_ENVIA_LCD_CMD 0501          ___lwmod@divisor 0506          ___lwmod@counter 0508  
            ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501               _POS_CURSOR 2A28  
            ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 0508              ?_ENVIA_CHAR 0501  
      POS_CURSOR@columna 0507  
