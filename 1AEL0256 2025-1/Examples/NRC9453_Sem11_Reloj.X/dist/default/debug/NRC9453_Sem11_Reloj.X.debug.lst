

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jun 12 15:40:48 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Generated 04/02/2025 GMT
    30                           ; 
    31                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F57Q43 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   0004E0                     bsr             equ	1248
    64   0004E9                     fsr0            equ	1257
    65   0004EA                     fsr0h           equ	1258
    66   0004E9                     fsr0l           equ	1257
    67   0004E1                     fsr1            equ	1249
    68   0004E2                     fsr1h           equ	1250
    69   0004E1                     fsr1l           equ	1249
    70   0004D9                     fsr2            equ	1241
    71   0004DA                     fsr2h           equ	1242
    72   0004D9                     fsr2l           equ	1241
    73   0004EF                     indf0           equ	1263
    74   0004E7                     indf1           equ	1255
    75   0004DF                     indf2           equ	1247
    76   0004D6                     intcon          equ	1238
    77   000041                     nvmcon          equ	65
    78   0004F9                     pcl             equ	1273
    79   0004FA                     pclath          equ	1274
    80   0004FB                     pclatu          equ	1275
    81   0004EB                     plusw0          equ	1259
    82   0004E3                     plusw1          equ	1251
    83   0004DB                     plusw2          equ	1243
    84   0004ED                     postdec0        equ	1261
    85   0004E5                     postdec1        equ	1253
    86   0004DD                     postdec2        equ	1245
    87   0004EE                     postinc0        equ	1262
    88   0004E6                     postinc1        equ	1254
    89   0004DE                     postinc2        equ	1246
    90   0004EC                     preinc0         equ	1260
    91   0004E4                     preinc1         equ	1252
    92   0004DC                     preinc2         equ	1244
    93   0004F3                     prod            equ	1267
    94   0004F4                     prodh           equ	1268
    95   0004F3                     prodl           equ	1267
    96   0004D8                     status          equ	1240
    97   0004F5                     tablat          equ	1269
    98   0004F6                     tblptr          equ	1270
    99   0004F7                     tblptrh         equ	1271
   100   0004F6                     tblptrl         equ	1270
   101   0004F8                     tblptru         equ	1272
   102   0004FD                     tosl            equ	1277
   103   0004E8                     wreg            equ	1256
   104   000039                     CLKRCON         equ	57	;# 
   105   00003A                     CLKRCLK         equ	58	;# 
   106   000040                     NVMCON0         equ	64	;# 
   107   000041                     NVMCON1         equ	65	;# 
   108   000042                     NVMLOCK         equ	66	;# 
   109   000043                     NVMADR          equ	67	;# 
   110   000043                     NVMADRL         equ	67	;# 
   111   000044                     NVMADRH         equ	68	;# 
   112   000045                     NVMADRU         equ	69	;# 
   113   000046                     NVMDAT          equ	70	;# 
   114   000046                     NVMDATL         equ	70	;# 
   115   000047                     NVMDATH         equ	71	;# 
   116   000048                     VREGCON         equ	72	;# 
   117   000049                     BORCON          equ	73	;# 
   118   00004A                     HLVDCON0        equ	74	;# 
   119   00004B                     HLVDCON1        equ	75	;# 
   120   00004C                     ZCDCON          equ	76	;# 
   121   000060                     PMD0            equ	96	;# 
   122   000061                     PMD1            equ	97	;# 
   123   000063                     PMD3            equ	99	;# 
   124   000064                     PMD4            equ	100	;# 
   125   000065                     PMD5            equ	101	;# 
   126   000066                     PMD6            equ	102	;# 
   127   000067                     PMD7            equ	103	;# 
   128   000068                     PMD8            equ	104	;# 
   129   00006A                     MD1CON0         equ	106	;# 
   130   00006B                     MD1CON1         equ	107	;# 
   131   00006C                     MD1SRC          equ	108	;# 
   132   00006D                     MD1CARL         equ	109	;# 
   133   00006E                     MD1CARH         equ	110	;# 
   134   00006F                     CMOUT           equ	111	;# 
   135   000070                     CM1CON0         equ	112	;# 
   136   000071                     CM1CON1         equ	113	;# 
   137   000072                     CM1NCH          equ	114	;# 
   138   000073                     CM1PCH          equ	115	;# 
   139   000074                     CM2CON0         equ	116	;# 
   140   000075                     CM2CON1         equ	117	;# 
   141   000076                     CM2NCH          equ	118	;# 
   142   000077                     CM2PCH          equ	119	;# 
   143   000078                     WDTCON0         equ	120	;# 
   144   000079                     WDTCON1         equ	121	;# 
   145   00007A                     WDTPS           equ	122	;# 
   146   00007A                     WDTPSL          equ	122	;# 
   147   00007B                     WDTPSH          equ	123	;# 
   148   00007C                     WDTTMR          equ	124	;# 
   149   00007D                     DAC1DAT         equ	125	;# 
   150   00007D                     DAC1DATL        equ	125	;# 
   151   00007F                     DAC1CON         equ	127	;# 
   152   000080                     SPI1RXB         equ	128	;# 
   153   000081                     SPI1TXB         equ	129	;# 
   154   000082                     SPI1TCNT        equ	130	;# 
   155   000082                     SPI1TCNTL       equ	130	;# 
   156   000083                     SPI1TCNTH       equ	131	;# 
   157   000084                     SPI1CON0        equ	132	;# 
   158   000085                     SPI1CON1        equ	133	;# 
   159   000086                     SPI1CON2        equ	134	;# 
   160   000087                     SPI1STATUS      equ	135	;# 
   161   000088                     SPI1TWIDTH      equ	136	;# 
   162   000089                     SPI1BAUD        equ	137	;# 
   163   00008A                     SPI1INTF        equ	138	;# 
   164   00008B                     SPI1INTE        equ	139	;# 
   165   00008C                     SPI1CLK         equ	140	;# 
   166   00008D                     SPI2RXB         equ	141	;# 
   167   00008E                     SPI2TXB         equ	142	;# 
   168   00008F                     SPI2TCNT        equ	143	;# 
   169   00008F                     SPI2TCNTL       equ	143	;# 
   170   000090                     SPI2TCNTH       equ	144	;# 
   171   000091                     SPI2CON0        equ	145	;# 
   172   000092                     SPI2CON1        equ	146	;# 
   173   000093                     SPI2CON2        equ	147	;# 
   174   000094                     SPI2STATUS      equ	148	;# 
   175   000095                     SPI2TWIDTH      equ	149	;# 
   176   000096                     SPI2BAUD        equ	150	;# 
   177   000097                     SPI2INTF        equ	151	;# 
   178   000098                     SPI2INTE        equ	152	;# 
   179   000099                     SPI2CLK         equ	153	;# 
   180   0000AC                     ACTCON          equ	172	;# 
   181   0000AD                     OSCCON1         equ	173	;# 
   182   0000AE                     OSCCON2         equ	174	;# 
   183   0000AF                     OSCCON3         equ	175	;# 
   184   0000B0                     OSCTUNE         equ	176	;# 
   185   0000B1                     OSCFRQ          equ	177	;# 
   186   0000B1                     OSCFREQ         equ	177	;# 
   187   0000B2                     OSCSTAT         equ	178	;# 
   188   0000B2                     OSCSTAT1        equ	178	;# 
   189   0000B3                     OSCEN           equ	179	;# 
   190   0000B4                     PRLOCK          equ	180	;# 
   191   0000B5                     SCANPR          equ	181	;# 
   192   0000B6                     DMA1PR          equ	182	;# 
   193   0000B7                     DMA2PR          equ	183	;# 
   194   0000B8                     DMA3PR          equ	184	;# 
   195   0000B9                     DMA4PR          equ	185	;# 
   196   0000BA                     DMA5PR          equ	186	;# 
   197   0000BB                     DMA6PR          equ	187	;# 
   198   0000BE                     MAINPR          equ	190	;# 
   199   0000BF                     ISRPR           equ	191	;# 
   200   0000D4                     CLCDATA         equ	212	;# 
   201   0000D5                     CLCSELECT       equ	213	;# 
   202   0000D6                     CLCnCON         equ	214	;# 
   203   0000D7                     CLCnPOL         equ	215	;# 
   204   0000D8                     CLCnSEL0        equ	216	;# 
   205   0000D9                     CLCnSEL1        equ	217	;# 
   206   0000DA                     CLCnSEL2        equ	218	;# 
   207   0000DB                     CLCnSEL3        equ	219	;# 
   208   0000DC                     CLCnGLS0        equ	220	;# 
   209   0000DD                     CLCnGLS1        equ	221	;# 
   210   0000DE                     CLCnGLS2        equ	222	;# 
   211   0000DF                     CLCnGLS3        equ	223	;# 
   212   0000E8                     DMASELECT       equ	232	;# 
   213   0000E9                     DMAnBUF         equ	233	;# 
   214   0000EA                     DMAnDCNT        equ	234	;# 
   215   0000EA                     DMAnDCNTL       equ	234	;# 
   216   0000EB                     DMAnDCNTH       equ	235	;# 
   217   0000EC                     DMAnDPTR        equ	236	;# 
   218   0000EC                     DMAnDPTRL       equ	236	;# 
   219   0000ED                     DMAnDPTRH       equ	237	;# 
   220   0000EE                     DMAnDSZ         equ	238	;# 
   221   0000EE                     DMAnDSZL        equ	238	;# 
   222   0000EF                     DMAnDSZH        equ	239	;# 
   223   0000F0                     DMAnDSA         equ	240	;# 
   224   0000F0                     DMAnDSAL        equ	240	;# 
   225   0000F1                     DMAnDSAH        equ	241	;# 
   226   0000F2                     DMAnSCNT        equ	242	;# 
   227   0000F2                     DMAnSCNTL       equ	242	;# 
   228   0000F3                     DMAnSCNTH       equ	243	;# 
   229   0000F4                     DMAnSPTR        equ	244	;# 
   230   0000F4                     DMAnSPTRL       equ	244	;# 
   231   0000F5                     DMAnSPTRH       equ	245	;# 
   232   0000F6                     DMAnSPTRU       equ	246	;# 
   233   0000F7                     DMAnSSZ         equ	247	;# 
   234   0000F7                     DMAnSSZL        equ	247	;# 
   235   0000F8                     DMAnSSZH        equ	248	;# 
   236   0000F9                     DMAnSSA         equ	249	;# 
   237   0000F9                     DMAnSSAL        equ	249	;# 
   238   0000FA                     DMAnSSAH        equ	250	;# 
   239   0000FB                     DMAnSSAU        equ	251	;# 
   240   0000FC                     DMAnCON0        equ	252	;# 
   241   0000FD                     DMAnCON1        equ	253	;# 
   242   0000FE                     DMAnAIRQ        equ	254	;# 
   243   0000FF                     DMAnSIRQ        equ	255	;# 
   244   000200                     PPSLOCK         equ	512	;# 
   245   000201                     RA0PPS          equ	513	;# 
   246   000202                     RA1PPS          equ	514	;# 
   247   000203                     RA2PPS          equ	515	;# 
   248   000204                     RA3PPS          equ	516	;# 
   249   000205                     RA4PPS          equ	517	;# 
   250   000206                     RA5PPS          equ	518	;# 
   251   000207                     RA6PPS          equ	519	;# 
   252   000208                     RA7PPS          equ	520	;# 
   253   000209                     RB0PPS          equ	521	;# 
   254   00020A                     RB1PPS          equ	522	;# 
   255   00020B                     RB2PPS          equ	523	;# 
   256   00020C                     RB3PPS          equ	524	;# 
   257   00020D                     RB4PPS          equ	525	;# 
   258   00020E                     RB5PPS          equ	526	;# 
   259   00020F                     RB6PPS          equ	527	;# 
   260   000210                     RB7PPS          equ	528	;# 
   261   000211                     RC0PPS          equ	529	;# 
   262   000212                     RC1PPS          equ	530	;# 
   263   000213                     RC2PPS          equ	531	;# 
   264   000214                     RC3PPS          equ	532	;# 
   265   000215                     RC4PPS          equ	533	;# 
   266   000216                     RC5PPS          equ	534	;# 
   267   000217                     RC6PPS          equ	535	;# 
   268   000218                     RC7PPS          equ	536	;# 
   269   000219                     RD0PPS          equ	537	;# 
   270   00021A                     RD1PPS          equ	538	;# 
   271   00021B                     RD2PPS          equ	539	;# 
   272   00021C                     RD3PPS          equ	540	;# 
   273   00021D                     RD4PPS          equ	541	;# 
   274   00021E                     RD5PPS          equ	542	;# 
   275   00021F                     RD6PPS          equ	543	;# 
   276   000220                     RD7PPS          equ	544	;# 
   277   000221                     RE0PPS          equ	545	;# 
   278   000222                     RE1PPS          equ	546	;# 
   279   000223                     RE2PPS          equ	547	;# 
   280   000229                     RF0PPS          equ	553	;# 
   281   00022A                     RF1PPS          equ	554	;# 
   282   00022B                     RF2PPS          equ	555	;# 
   283   00022C                     RF3PPS          equ	556	;# 
   284   00022D                     RF4PPS          equ	557	;# 
   285   00022E                     RF5PPS          equ	558	;# 
   286   00022F                     RF6PPS          equ	559	;# 
   287   000230                     RF7PPS          equ	560	;# 
   288   00023E                     INT0PPS         equ	574	;# 
   289   00023F                     INT1PPS         equ	575	;# 
   290   000240                     INT2PPS         equ	576	;# 
   291   000241                     T0CKIPPS        equ	577	;# 
   292   000242                     T1CKIPPS        equ	578	;# 
   293   000243                     T1GPPS          equ	579	;# 
   294   000244                     T3CKIPPS        equ	580	;# 
   295   000245                     T3GPPS          equ	581	;# 
   296   000246                     T5CKIPPS        equ	582	;# 
   297   000247                     T5GPPS          equ	583	;# 
   298   000248                     T2INPPS         equ	584	;# 
   299   000249                     T4INPPS         equ	585	;# 
   300   00024A                     T6INPPS         equ	586	;# 
   301   00024F                     CCP1PPS         equ	591	;# 
   302   000250                     CCP2PPS         equ	592	;# 
   303   000251                     CCP3PPS         equ	593	;# 
   304   000253                     PWM1ERSPPS      equ	595	;# 
   305   000254                     PWM2ERSPPS      equ	596	;# 
   306   000255                     PWM3ERSPPS      equ	597	;# 
   307   000257                     PWMIN0PPS       equ	599	;# 
   308   000258                     PWMIN1PPS       equ	600	;# 
   309   000259                     SMT1WINPPS      equ	601	;# 
   310   00025A                     SMT1SIGPPS      equ	602	;# 
   311   00025B                     CWG1PPS         equ	603	;# 
   312   00025B                     CWG1INPPS       equ	603	;# 
   313   00025C                     CWG2PPS         equ	604	;# 
   314   00025C                     CWG2INPPS       equ	604	;# 
   315   00025D                     CWG3PPS         equ	605	;# 
   316   00025D                     CWG3INPPS       equ	605	;# 
   317   00025E                     MD1CARLPPS      equ	606	;# 
   318   00025E                     MDCARLPPS       equ	606	;# 
   319   00025F                     MD1CARHPPS      equ	607	;# 
   320   00025F                     MDCARHPPS       equ	607	;# 
   321   000260                     MD1SRCPPS       equ	608	;# 
   322   000260                     MDSRCPPS        equ	608	;# 
   323   000261                     CLCIN0PPS       equ	609	;# 
   324   000262                     CLCIN1PPS       equ	610	;# 
   325   000263                     CLCIN2PPS       equ	611	;# 
   326   000264                     CLCIN3PPS       equ	612	;# 
   327   000265                     CLCIN4PPS       equ	613	;# 
   328   000266                     CLCIN5PPS       equ	614	;# 
   329   000267                     CLCIN6PPS       equ	615	;# 
   330   000268                     CLCIN7PPS       equ	616	;# 
   331   000269                     ADACTPPS        equ	617	;# 
   332   00026A                     SPI1SCKPPS      equ	618	;# 
   333   00026B                     SPI1SDIPPS      equ	619	;# 
   334   00026C                     SPI1SSPPS       equ	620	;# 
   335   00026D                     SPI2SCKPPS      equ	621	;# 
   336   00026E                     SPI2SDIPPS      equ	622	;# 
   337   00026F                     SPI2SSPPS       equ	623	;# 
   338   000270                     I2C1SDAPPS      equ	624	;# 
   339   000271                     I2C1SCLPPS      equ	625	;# 
   340   000272                     U1RXPPS         equ	626	;# 
   341   000273                     U1CTSPPS        equ	627	;# 
   342   000274                     U2RXPPS         equ	628	;# 
   343   000275                     U2CTSPPS        equ	629	;# 
   344   000276                     U3RXPPS         equ	630	;# 
   345   000277                     U3CTSPPS        equ	631	;# 
   346   000278                     U4RXPPS         equ	632	;# 
   347   000279                     U4CTSPPS        equ	633	;# 
   348   00027A                     U5RXPPS         equ	634	;# 
   349   00027B                     U5CTSPPS        equ	635	;# 
   350   000286                     RC4I2C          equ	646	;# 
   351   000287                     RC3I2C          equ	647	;# 
   352   000288                     RB2I2C          equ	648	;# 
   353   000289                     RB1I2C          equ	649	;# 
   354   00028B                     I2C1RXB         equ	651	;# 
   355   00028C                     I2C1TXB         equ	652	;# 
   356   00028D                     I2C1CNT         equ	653	;# 
   357   00028E                     I2C1ADB0        equ	654	;# 
   358   00028F                     I2C1ADB1        equ	655	;# 
   359   000290                     I2C1ADR0        equ	656	;# 
   360   000291                     I2C1ADR1        equ	657	;# 
   361   000292                     I2C1ADR2        equ	658	;# 
   362   000293                     I2C1ADR3        equ	659	;# 
   363   000294                     I2C1CON0        equ	660	;# 
   364   000295                     I2C1CON1        equ	661	;# 
   365   000296                     I2C1CON2        equ	662	;# 
   366   000297                     I2C1ERR         equ	663	;# 
   367   000298                     I2C1STAT0       equ	664	;# 
   368   000299                     I2C1STAT1       equ	665	;# 
   369   00029A                     I2C1PIR         equ	666	;# 
   370   00029B                     I2C1PIE         equ	667	;# 
   371   00029C                     I2C1CLK         equ	668	;# 
   372   00029D                     I2C1BTO         equ	669	;# 
   373   0002A1                     U1RXB           equ	673	;# 
   374   0002A1                     U1RXBL          equ	673	;# 
   375   0002A2                     U1RXCHK         equ	674	;# 
   376   0002A3                     U1TXB           equ	675	;# 
   377   0002A3                     U1TXBL          equ	675	;# 
   378   0002A4                     U1TXCHK         equ	676	;# 
   379   0002A5                     U1P1            equ	677	;# 
   380   0002A5                     U1P1L           equ	677	;# 
   381   0002A6                     U1P1H           equ	678	;# 
   382   0002A7                     U1P2            equ	679	;# 
   383   0002A7                     U1P2L           equ	679	;# 
   384   0002A8                     U1P2H           equ	680	;# 
   385   0002A9                     U1P3            equ	681	;# 
   386   0002A9                     U1P3L           equ	681	;# 
   387   0002AA                     U1P3H           equ	682	;# 
   388   0002AB                     U1CON0          equ	683	;# 
   389   0002AC                     U1CON1          equ	684	;# 
   390   0002AD                     U1CON2          equ	685	;# 
   391   0002AE                     U1BRG           equ	686	;# 
   392   0002AE                     U1BRGL          equ	686	;# 
   393   0002AF                     U1BRGH          equ	687	;# 
   394   0002B0                     U1FIFO          equ	688	;# 
   395   0002B1                     U1UIR           equ	689	;# 
   396   0002B2                     U1ERRIR         equ	690	;# 
   397   0002B3                     U1ERRIE         equ	691	;# 
   398   0002B4                     U2RXB           equ	692	;# 
   399   0002B4                     U2RXBL          equ	692	;# 
   400   0002B6                     U2TXB           equ	694	;# 
   401   0002B6                     U2TXBL          equ	694	;# 
   402   0002B8                     U2P1            equ	696	;# 
   403   0002B8                     U2P1L           equ	696	;# 
   404   0002BA                     U2P2            equ	698	;# 
   405   0002BA                     U2P2L           equ	698	;# 
   406   0002BC                     U2P3            equ	700	;# 
   407   0002BC                     U2P3L           equ	700	;# 
   408   0002BE                     U2CON0          equ	702	;# 
   409   0002BF                     U2CON1          equ	703	;# 
   410   0002C0                     U2CON2          equ	704	;# 
   411   0002C1                     U2BRG           equ	705	;# 
   412   0002C1                     U2BRGL          equ	705	;# 
   413   0002C2                     U2BRGH          equ	706	;# 
   414   0002C3                     U2FIFO          equ	707	;# 
   415   0002C4                     U2UIR           equ	708	;# 
   416   0002C5                     U2ERRIR         equ	709	;# 
   417   0002C6                     U2ERRIE         equ	710	;# 
   418   0002C7                     U3RXB           equ	711	;# 
   419   0002C7                     U3RXBL          equ	711	;# 
   420   0002C9                     U3TXB           equ	713	;# 
   421   0002C9                     U3TXBL          equ	713	;# 
   422   0002CB                     U3P1            equ	715	;# 
   423   0002CB                     U3P1L           equ	715	;# 
   424   0002CD                     U3P2            equ	717	;# 
   425   0002CD                     U3P2L           equ	717	;# 
   426   0002CF                     U3P3            equ	719	;# 
   427   0002CF                     U3P3L           equ	719	;# 
   428   0002D1                     U3CON0          equ	721	;# 
   429   0002D2                     U3CON1          equ	722	;# 
   430   0002D3                     U3CON2          equ	723	;# 
   431   0002D4                     U3BRG           equ	724	;# 
   432   0002D4                     U3BRGL          equ	724	;# 
   433   0002D5                     U3BRGH          equ	725	;# 
   434   0002D6                     U3FIFO          equ	726	;# 
   435   0002D7                     U3UIR           equ	727	;# 
   436   0002D8                     U3ERRIR         equ	728	;# 
   437   0002D9                     U3ERRIE         equ	729	;# 
   438   0002DA                     U4RXB           equ	730	;# 
   439   0002DA                     U4RXBL          equ	730	;# 
   440   0002DC                     U4TXB           equ	732	;# 
   441   0002DC                     U4TXBL          equ	732	;# 
   442   0002DE                     U4P1            equ	734	;# 
   443   0002DE                     U4P1L           equ	734	;# 
   444   0002E0                     U4P2            equ	736	;# 
   445   0002E0                     U4P2L           equ	736	;# 
   446   0002E2                     U4P3            equ	738	;# 
   447   0002E2                     U4P3L           equ	738	;# 
   448   0002E4                     U4CON0          equ	740	;# 
   449   0002E5                     U4CON1          equ	741	;# 
   450   0002E6                     U4CON2          equ	742	;# 
   451   0002E7                     U4BRG           equ	743	;# 
   452   0002E7                     U4BRGL          equ	743	;# 
   453   0002E8                     U4BRGH          equ	744	;# 
   454   0002E9                     U4FIFO          equ	745	;# 
   455   0002EA                     U4UIR           equ	746	;# 
   456   0002EB                     U4ERRIR         equ	747	;# 
   457   0002EC                     U4ERRIE         equ	748	;# 
   458   0002ED                     U5RXB           equ	749	;# 
   459   0002ED                     U5RXBL          equ	749	;# 
   460   0002EF                     U5TXB           equ	751	;# 
   461   0002EF                     U5TXBL          equ	751	;# 
   462   0002F1                     U5P1            equ	753	;# 
   463   0002F1                     U5P1L           equ	753	;# 
   464   0002F3                     U5P2            equ	755	;# 
   465   0002F3                     U5P2L           equ	755	;# 
   466   0002F5                     U5P3            equ	757	;# 
   467   0002F5                     U5P3L           equ	757	;# 
   468   0002F7                     U5CON0          equ	759	;# 
   469   0002F8                     U5CON1          equ	760	;# 
   470   0002F9                     U5CON2          equ	761	;# 
   471   0002FA                     U5BRG           equ	762	;# 
   472   0002FA                     U5BRGL          equ	762	;# 
   473   0002FB                     U5BRGH          equ	763	;# 
   474   0002FC                     U5FIFO          equ	764	;# 
   475   0002FD                     U5UIR           equ	765	;# 
   476   0002FE                     U5ERRIR         equ	766	;# 
   477   0002FF                     U5ERRIE         equ	767	;# 
   478   000300                     SMT1TMR         equ	768	;# 
   479   000300                     SMT1TMRL        equ	768	;# 
   480   000301                     SMT1TMRH        equ	769	;# 
   481   000302                     SMT1TMRU        equ	770	;# 
   482   000303                     SMT1CPR         equ	771	;# 
   483   000303                     SMT1CPRL        equ	771	;# 
   484   000304                     SMT1CPRH        equ	772	;# 
   485   000305                     SMT1CPRU        equ	773	;# 
   486   000306                     SMT1CPW         equ	774	;# 
   487   000306                     SMT1CPWL        equ	774	;# 
   488   000307                     SMT1CPWH        equ	775	;# 
   489   000308                     SMT1CPWU        equ	776	;# 
   490   000309                     SMT1PR          equ	777	;# 
   491   000309                     SMT1PRL         equ	777	;# 
   492   00030A                     SMT1PRH         equ	778	;# 
   493   00030B                     SMT1PRU         equ	779	;# 
   494   00030C                     SMT1CON0        equ	780	;# 
   495   00030D                     SMT1CON1        equ	781	;# 
   496   00030E                     SMT1STAT        equ	782	;# 
   497   00030F                     SMT1CLK         equ	783	;# 
   498   000310                     SMT1SIG         equ	784	;# 
   499   000311                     SMT1WIN         equ	785	;# 
   500   000318                     TMR0L           equ	792	;# 
   501   000318                     TMR0            equ	792	;# 
   502   000319                     TMR0H           equ	793	;# 
   503   000319                     PR0             equ	793	;# 
   504   00031A                     T0CON0          equ	794	;# 
   505   00031B                     T0CON1          equ	795	;# 
   506   00031C                     TMR1            equ	796	;# 
   507   00031C                     TMR1L           equ	796	;# 
   508   00031D                     TMR1H           equ	797	;# 
   509   00031E                     T1CON           equ	798	;# 
   510   00031E                     TMR1CON         equ	798	;# 
   511   00031F                     T1GCON          equ	799	;# 
   512   00031F                     TMR1GCON        equ	799	;# 
   513   000320                     T1GATE          equ	800	;# 
   514   000320                     TMR1GATE        equ	800	;# 
   515   000321                     T1CLK           equ	801	;# 
   516   000321                     TMR1CLK         equ	801	;# 
   517   000321                     PR1             equ	801	;# 
   518   000322                     T2TMR           equ	802	;# 
   519   000322                     TMR2            equ	802	;# 
   520   000323                     T2PR            equ	803	;# 
   521   000323                     PR2             equ	803	;# 
   522   000324                     T2CON           equ	804	;# 
   523   000325                     T2HLT           equ	805	;# 
   524   000326                     T2CLKCON        equ	806	;# 
   525   000326                     T2CLK           equ	806	;# 
   526   000327                     T2RST           equ	807	;# 
   527   000328                     TMR3            equ	808	;# 
   528   000328                     TMR3L           equ	808	;# 
   529   000329                     TMR3H           equ	809	;# 
   530   00032A                     T3CON           equ	810	;# 
   531   00032A                     TMR3CON         equ	810	;# 
   532   00032B                     T3GCON          equ	811	;# 
   533   00032B                     TMR3GCON        equ	811	;# 
   534   00032C                     T3GATE          equ	812	;# 
   535   00032C                     TMR3GATE        equ	812	;# 
   536   00032D                     T3CLK           equ	813	;# 
   537   00032D                     TMR3CLK         equ	813	;# 
   538   00032D                     PR3             equ	813	;# 
   539   00032E                     T4TMR           equ	814	;# 
   540   00032E                     TMR4            equ	814	;# 
   541   00032F                     T4PR            equ	815	;# 
   542   00032F                     PR4             equ	815	;# 
   543   000330                     T4CON           equ	816	;# 
   544   000331                     T4HLT           equ	817	;# 
   545   000332                     T4CLKCON        equ	818	;# 
   546   000332                     T4CLK           equ	818	;# 
   547   000333                     T4RST           equ	819	;# 
   548   000334                     TMR5            equ	820	;# 
   549   000334                     TMR5L           equ	820	;# 
   550   000335                     TMR5H           equ	821	;# 
   551   000336                     T5CON           equ	822	;# 
   552   000336                     TMR5CON         equ	822	;# 
   553   000337                     T5GCON          equ	823	;# 
   554   000337                     TMR5GCON        equ	823	;# 
   555   000338                     T5GATE          equ	824	;# 
   556   000338                     TMR5GATE        equ	824	;# 
   557   000339                     T5CLK           equ	825	;# 
   558   000339                     TMR5CLK         equ	825	;# 
   559   000339                     PR5             equ	825	;# 
   560   00033A                     T6TMR           equ	826	;# 
   561   00033A                     TMR6            equ	826	;# 
   562   00033B                     T6PR            equ	827	;# 
   563   00033B                     PR6             equ	827	;# 
   564   00033C                     T6CON           equ	828	;# 
   565   00033D                     T6HLT           equ	829	;# 
   566   00033E                     T6CLKCON        equ	830	;# 
   567   00033E                     T6CLK           equ	830	;# 
   568   00033F                     T6RST           equ	831	;# 
   569   000340                     CCPR1           equ	832	;# 
   570   000340                     CCPR1L          equ	832	;# 
   571   000341                     CCPR1H          equ	833	;# 
   572   000342                     CCP1CON         equ	834	;# 
   573   000343                     CCP1CAP         equ	835	;# 
   574   000344                     CCPR2           equ	836	;# 
   575   000344                     CCPR2L          equ	836	;# 
   576   000345                     CCPR2H          equ	837	;# 
   577   000346                     CCP2CON         equ	838	;# 
   578   000347                     CCP2CAP         equ	839	;# 
   579   000348                     CCPR3           equ	840	;# 
   580   000348                     CCPR3L          equ	840	;# 
   581   000349                     CCPR3H          equ	841	;# 
   582   00034A                     CCP3CON         equ	842	;# 
   583   00034B                     CCP3CAP         equ	843	;# 
   584   00034C                     CCPTMRS0        equ	844	;# 
   585   00034F                     CRCDATA         equ	847	;# 
   586   00034F                     CRCDATL         equ	847	;# 
   587   000350                     CRCDATH         equ	848	;# 
   588   000351                     CRCACC          equ	849	;# 
   589   000351                     CRCACCL         equ	849	;# 
   590   000352                     CRCACCH         equ	850	;# 
   591   000353                     CRCSHFT         equ	851	;# 
   592   000353                     CRCSHIFTL       equ	851	;# 
   593   000354                     CRCSHIFTH       equ	852	;# 
   594   000355                     CRCXOR          equ	853	;# 
   595   000355                     CRCXORL         equ	853	;# 
   596   000356                     CRCXORH         equ	854	;# 
   597   000357                     CRCCON0         equ	855	;# 
   598   000358                     CRCCON1         equ	856	;# 
   599   00035A                     SCANLADR        equ	858	;# 
   600   00035A                     SCANLADRL       equ	858	;# 
   601   00035B                     SCANLADRH       equ	859	;# 
   602   00035C                     SCANLADRU       equ	860	;# 
   603   00035D                     SCANHADR        equ	861	;# 
   604   00035D                     SCANHADRL       equ	861	;# 
   605   00035E                     SCANHADRH       equ	862	;# 
   606   00035F                     SCANHADRU       equ	863	;# 
   607   000360                     SCANCON0        equ	864	;# 
   608   000361                     SCANTRIG        equ	865	;# 
   609   000362                     IPR0            equ	866	;# 
   610   000363                     IPR1            equ	867	;# 
   611   000364                     IPR2            equ	868	;# 
   612   000365                     IPR3            equ	869	;# 
   613   000366                     IPR4            equ	870	;# 
   614   000367                     IPR5            equ	871	;# 
   615   000368                     IPR6            equ	872	;# 
   616   000369                     IPR7            equ	873	;# 
   617   00036A                     IPR8            equ	874	;# 
   618   00036B                     IPR9            equ	875	;# 
   619   00036C                     IPR10           equ	876	;# 
   620   00036D                     IPR11           equ	877	;# 
   621   00036E                     IPR12           equ	878	;# 
   622   00036F                     IPR13           equ	879	;# 
   623   000370                     IPR14           equ	880	;# 
   624   000371                     IPR15           equ	881	;# 
   625   000373                     STATUS_CSHAD    equ	883	;# 
   626   000374                     WREG_CSHAD      equ	884	;# 
   627   000375                     BSR_CSHAD       equ	885	;# 
   628   000376                     SHADCON         equ	886	;# 
   629   000377                     STATUS_SHAD     equ	887	;# 
   630   000378                     WREG_SHAD       equ	888	;# 
   631   000379                     BSR_SHAD        equ	889	;# 
   632   00037A                     PCLATH_SHAD     equ	890	;# 
   633   00037B                     PCLATU_SHAD     equ	891	;# 
   634   00037C                     FSR0SH          equ	892	;# 
   635   00037C                     FSR0L_SHAD      equ	892	;# 
   636   00037D                     FSR0H_SHAD      equ	893	;# 
   637   00037E                     FSR1SH          equ	894	;# 
   638   00037E                     FSR1L_SHAD      equ	894	;# 
   639   00037F                     FSR1H_SHAD      equ	895	;# 
   640   000380                     FSR2SH          equ	896	;# 
   641   000380                     FSR2L_SHAD      equ	896	;# 
   642   000381                     FSR2H_SHAD      equ	897	;# 
   643   000382                     PRODSH          equ	898	;# 
   644   000382                     PRODL_SHAD      equ	898	;# 
   645   000383                     PRODH_SHAD      equ	899	;# 
   646   0003BC                     CWG1CLK         equ	956	;# 
   647   0003BC                     CWG1CLKCON      equ	956	;# 
   648   0003BD                     CWG1ISM         equ	957	;# 
   649   0003BD                     CWG1DAT         equ	957	;# 
   650   0003BE                     CWG1DBR         equ	958	;# 
   651   0003BF                     CWG1DBF         equ	959	;# 
   652   0003C0                     CWG1CON0        equ	960	;# 
   653   0003C1                     CWG1CON1        equ	961	;# 
   654   0003C2                     CWG1AS0         equ	962	;# 
   655   0003C3                     CWG1AS1         equ	963	;# 
   656   0003C4                     CWG1STR         equ	964	;# 
   657   0003C5                     CWG2CLK         equ	965	;# 
   658   0003C5                     CWG2CLKCON      equ	965	;# 
   659   0003C6                     CWG2ISM         equ	966	;# 
   660   0003C6                     CWG2DAT         equ	966	;# 
   661   0003C7                     CWG2DBR         equ	967	;# 
   662   0003C8                     CWG2DBF         equ	968	;# 
   663   0003C9                     CWG2CON0        equ	969	;# 
   664   0003CA                     CWG2CON1        equ	970	;# 
   665   0003CB                     CWG2AS0         equ	971	;# 
   666   0003CC                     CWG2AS1         equ	972	;# 
   667   0003CD                     CWG2STR         equ	973	;# 
   668   0003CE                     CWG3CLK         equ	974	;# 
   669   0003CE                     CWG3CLKCON      equ	974	;# 
   670   0003CF                     CWG3ISM         equ	975	;# 
   671   0003CF                     CWG3DAT         equ	975	;# 
   672   0003D0                     CWG3DBR         equ	976	;# 
   673   0003D1                     CWG3DBF         equ	977	;# 
   674   0003D2                     CWG3CON0        equ	978	;# 
   675   0003D3                     CWG3CON1        equ	979	;# 
   676   0003D4                     CWG3AS0         equ	980	;# 
   677   0003D5                     CWG3AS1         equ	981	;# 
   678   0003D6                     CWG3STR         equ	982	;# 
   679   0003D7                     FVRCON          equ	983	;# 
   680   0003D8                     ADCPCON         equ	984	;# 
   681   0003D8                     ADCP            equ	984	;# 
   682   0003D9                     ADLTH           equ	985	;# 
   683   0003D9                     ADLTHL          equ	985	;# 
   684   0003DA                     ADLTHH          equ	986	;# 
   685   0003DB                     ADUTH           equ	987	;# 
   686   0003DB                     ADUTHL          equ	987	;# 
   687   0003DC                     ADUTHH          equ	988	;# 
   688   0003DD                     ADERR           equ	989	;# 
   689   0003DD                     ADERRL          equ	989	;# 
   690   0003DE                     ADERRH          equ	990	;# 
   691   0003DF                     ADSTPT          equ	991	;# 
   692   0003DF                     ADSTPTL         equ	991	;# 
   693   0003E0                     ADSTPTH         equ	992	;# 
   694   0003E1                     ADFLTR          equ	993	;# 
   695   0003E1                     ADFLTRL         equ	993	;# 
   696   0003E2                     ADFLTRH         equ	994	;# 
   697   0003E3                     ADACC           equ	995	;# 
   698   0003E3                     ADACCL          equ	995	;# 
   699   0003E4                     ADACCH          equ	996	;# 
   700   0003E5                     ADACCU          equ	997	;# 
   701   0003E6                     ADCNT           equ	998	;# 
   702   0003E7                     ADRPT           equ	999	;# 
   703   0003E8                     ADPREV          equ	1000	;# 
   704   0003E8                     ADPREVL         equ	1000	;# 
   705   0003E9                     ADPREVH         equ	1001	;# 
   706   0003EA                     ADRES           equ	1002	;# 
   707   0003EA                     ADRESL          equ	1002	;# 
   708   0003EB                     ADRESH          equ	1003	;# 
   709   0003EC                     ADPCH           equ	1004	;# 
   710   0003EE                     ADACQ           equ	1006	;# 
   711   0003EE                     ADACQL          equ	1006	;# 
   712   0003EF                     ADACQH          equ	1007	;# 
   713   0003F0                     ADCAP           equ	1008	;# 
   714   0003F1                     ADPRE           equ	1009	;# 
   715   0003F1                     ADPREL          equ	1009	;# 
   716   0003F2                     ADPREH          equ	1010	;# 
   717   0003F3                     ADCON0          equ	1011	;# 
   718   0003F4                     ADCON1          equ	1012	;# 
   719   0003F5                     ADCON2          equ	1013	;# 
   720   0003F6                     ADCON3          equ	1014	;# 
   721   0003F7                     ADSTAT          equ	1015	;# 
   722   0003F8                     ADREF           equ	1016	;# 
   723   0003F9                     ADACT           equ	1017	;# 
   724   0003FA                     ADCLK           equ	1018	;# 
   725   000400                     ANSELA          equ	1024	;# 
   726   000401                     WPUA            equ	1025	;# 
   727   000402                     ODCONA          equ	1026	;# 
   728   000403                     SLRCONA         equ	1027	;# 
   729   000404                     INLVLA          equ	1028	;# 
   730   000405                     IOCAP           equ	1029	;# 
   731   000406                     IOCAN           equ	1030	;# 
   732   000407                     IOCAF           equ	1031	;# 
   733   000408                     ANSELB          equ	1032	;# 
   734   000409                     WPUB            equ	1033	;# 
   735   00040A                     ODCONB          equ	1034	;# 
   736   00040B                     SLRCONB         equ	1035	;# 
   737   00040C                     INLVLB          equ	1036	;# 
   738   00040D                     IOCBP           equ	1037	;# 
   739   00040E                     IOCBN           equ	1038	;# 
   740   00040F                     IOCBF           equ	1039	;# 
   741   000410                     ANSELC          equ	1040	;# 
   742   000411                     WPUC            equ	1041	;# 
   743   000412                     ODCONC          equ	1042	;# 
   744   000413                     SLRCONC         equ	1043	;# 
   745   000414                     INLVLC          equ	1044	;# 
   746   000415                     IOCCP           equ	1045	;# 
   747   000416                     IOCCN           equ	1046	;# 
   748   000417                     IOCCF           equ	1047	;# 
   749   000418                     ANSELD          equ	1048	;# 
   750   000419                     WPUD            equ	1049	;# 
   751   00041A                     ODCOND          equ	1050	;# 
   752   00041B                     SLRCOND         equ	1051	;# 
   753   00041C                     INLVLD          equ	1052	;# 
   754   000420                     ANSELE          equ	1056	;# 
   755   000421                     WPUE            equ	1057	;# 
   756   000422                     ODCONE          equ	1058	;# 
   757   000423                     SLRCONE         equ	1059	;# 
   758   000424                     INLVLE          equ	1060	;# 
   759   000425                     IOCEP           equ	1061	;# 
   760   000426                     IOCEN           equ	1062	;# 
   761   000427                     IOCEF           equ	1063	;# 
   762   000428                     ANSELF          equ	1064	;# 
   763   000429                     WPUF            equ	1065	;# 
   764   00042A                     ODCONF          equ	1066	;# 
   765   00042B                     SLRCONF         equ	1067	;# 
   766   00042C                     INLVLF          equ	1068	;# 
   767   000440                     NCO1ACC         equ	1088	;# 
   768   000440                     NCO1ACCL        equ	1088	;# 
   769   000441                     NCO1ACCH        equ	1089	;# 
   770   000442                     NCO1ACCU        equ	1090	;# 
   771   000443                     NCO1INC         equ	1091	;# 
   772   000443                     NCO1INCL        equ	1091	;# 
   773   000444                     NCO1INCH        equ	1092	;# 
   774   000445                     NCO1INCU        equ	1093	;# 
   775   000446                     NCO1CON         equ	1094	;# 
   776   000447                     NCO1CLK         equ	1095	;# 
   777   000448                     NCO2ACC         equ	1096	;# 
   778   000448                     NCO2ACCL        equ	1096	;# 
   779   000449                     NCO2ACCH        equ	1097	;# 
   780   00044A                     NCO2ACCU        equ	1098	;# 
   781   00044B                     NCO2INC         equ	1099	;# 
   782   00044B                     NCO2INCL        equ	1099	;# 
   783   00044C                     NCO2INCH        equ	1100	;# 
   784   00044D                     NCO2INCU        equ	1101	;# 
   785   00044E                     NCO2CON         equ	1102	;# 
   786   00044F                     NCO2CLK         equ	1103	;# 
   787   000450                     NCO3ACC         equ	1104	;# 
   788   000450                     NCO3ACCL        equ	1104	;# 
   789   000451                     NCO3ACCH        equ	1105	;# 
   790   000452                     NCO3ACCU        equ	1106	;# 
   791   000453                     NCO3INC         equ	1107	;# 
   792   000453                     NCO3INCL        equ	1107	;# 
   793   000454                     NCO3INCH        equ	1108	;# 
   794   000455                     NCO3INCU        equ	1109	;# 
   795   000456                     NCO3CON         equ	1110	;# 
   796   000457                     NCO3CLK         equ	1111	;# 
   797   000459                     IVTLOCK         equ	1113	;# 
   798   00045A                     IVTAD           equ	1114	;# 
   799   00045A                     IVTADL          equ	1114	;# 
   800   00045B                     IVTADH          equ	1115	;# 
   801   00045C                     IVTADU          equ	1116	;# 
   802   00045D                     IVTBASE         equ	1117	;# 
   803   00045D                     IVTBASEL        equ	1117	;# 
   804   00045E                     IVTBASEH        equ	1118	;# 
   805   00045F                     IVTBASEU        equ	1119	;# 
   806   000460                     PWM1ERS         equ	1120	;# 
   807   000461                     PWM1CLK         equ	1121	;# 
   808   000462                     PWM1LDS         equ	1122	;# 
   809   000463                     PWM1PR          equ	1123	;# 
   810   000463                     PWM1PRL         equ	1123	;# 
   811   000464                     PWM1PRH         equ	1124	;# 
   812   000465                     PWM1CPRE        equ	1125	;# 
   813   000466                     PWM1PIPOS       equ	1126	;# 
   814   000467                     PWM1GIR         equ	1127	;# 
   815   000468                     PWM1GIE         equ	1128	;# 
   816   000469                     PWM1CON         equ	1129	;# 
   817   00046A                     PWM1S1CFG       equ	1130	;# 
   818   00046B                     PWM1S1P1        equ	1131	;# 
   819   00046B                     PWM1S1P1L       equ	1131	;# 
   820   00046C                     PWM1S1P1H       equ	1132	;# 
   821   00046D                     PWM1S1P2        equ	1133	;# 
   822   00046D                     PWM1S1P2L       equ	1133	;# 
   823   00046E                     PWM1S1P2H       equ	1134	;# 
   824   00046F                     PWM2ERS         equ	1135	;# 
   825   000470                     PWM2CLK         equ	1136	;# 
   826   000471                     PWM2LDS         equ	1137	;# 
   827   000472                     PWM2PR          equ	1138	;# 
   828   000472                     PWM2PRL         equ	1138	;# 
   829   000473                     PWM2PRH         equ	1139	;# 
   830   000474                     PWM2CPRE        equ	1140	;# 
   831   000475                     PWM2PIPOS       equ	1141	;# 
   832   000476                     PWM2GIR         equ	1142	;# 
   833   000477                     PWM2GIE         equ	1143	;# 
   834   000478                     PWM2CON         equ	1144	;# 
   835   000479                     PWM2S1CFG       equ	1145	;# 
   836   00047A                     PWM2S1P1        equ	1146	;# 
   837   00047A                     PWM2S1P1L       equ	1146	;# 
   838   00047B                     PWM2S1P1H       equ	1147	;# 
   839   00047C                     PWM2S1P2        equ	1148	;# 
   840   00047C                     PWM2S1P2L       equ	1148	;# 
   841   00047D                     PWM2S1P2H       equ	1149	;# 
   842   00047E                     PWM3ERS         equ	1150	;# 
   843   00047F                     PWM3CLK         equ	1151	;# 
   844   000480                     PWM3LDS         equ	1152	;# 
   845   000481                     PWM3PR          equ	1153	;# 
   846   000481                     PWM3PRL         equ	1153	;# 
   847   000482                     PWM3PRH         equ	1154	;# 
   848   000483                     PWM3CPRE        equ	1155	;# 
   849   000484                     PWM3PIPOS       equ	1156	;# 
   850   000485                     PWM3GIR         equ	1157	;# 
   851   000486                     PWM3GIE         equ	1158	;# 
   852   000487                     PWM3CON         equ	1159	;# 
   853   000488                     PWM3S1CFG       equ	1160	;# 
   854   000489                     PWM3S1P1        equ	1161	;# 
   855   000489                     PWM3S1P1L       equ	1161	;# 
   856   00048A                     PWM3S1P1H       equ	1162	;# 
   857   00048B                     PWM3S1P2        equ	1163	;# 
   858   00048B                     PWM3S1P2L       equ	1163	;# 
   859   00048C                     PWM3S1P2H       equ	1164	;# 
   860   00049C                     PWMLOAD         equ	1180	;# 
   861   00049D                     PWMEN           equ	1181	;# 
   862   00049E                     PIE0            equ	1182	;# 
   863   00049F                     PIE1            equ	1183	;# 
   864   0004A0                     PIE2            equ	1184	;# 
   865   0004A1                     PIE3            equ	1185	;# 
   866   0004A2                     PIE4            equ	1186	;# 
   867   0004A3                     PIE5            equ	1187	;# 
   868   0004A4                     PIE6            equ	1188	;# 
   869   0004A5                     PIE7            equ	1189	;# 
   870   0004A6                     PIE8            equ	1190	;# 
   871   0004A7                     PIE9            equ	1191	;# 
   872   0004A8                     PIE10           equ	1192	;# 
   873   0004A9                     PIE11           equ	1193	;# 
   874   0004AA                     PIE12           equ	1194	;# 
   875   0004AB                     PIE13           equ	1195	;# 
   876   0004AC                     PIE14           equ	1196	;# 
   877   0004AD                     PIE15           equ	1197	;# 
   878   0004AE                     PIR0            equ	1198	;# 
   879   0004AF                     PIR1            equ	1199	;# 
   880   0004B0                     PIR2            equ	1200	;# 
   881   0004B1                     PIR3            equ	1201	;# 
   882   0004B2                     PIR4            equ	1202	;# 
   883   0004B3                     PIR5            equ	1203	;# 
   884   0004B4                     PIR6            equ	1204	;# 
   885   0004B5                     PIR7            equ	1205	;# 
   886   0004B6                     PIR8            equ	1206	;# 
   887   0004B7                     PIR9            equ	1207	;# 
   888   0004B8                     PIR10           equ	1208	;# 
   889   0004B9                     PIR11           equ	1209	;# 
   890   0004BA                     PIR12           equ	1210	;# 
   891   0004BB                     PIR13           equ	1211	;# 
   892   0004BC                     PIR14           equ	1212	;# 
   893   0004BD                     PIR15           equ	1213	;# 
   894   0004BE                     LATA            equ	1214	;# 
   895   0004BF                     LATB            equ	1215	;# 
   896   0004C0                     LATC            equ	1216	;# 
   897   0004C1                     LATD            equ	1217	;# 
   898   0004C2                     LATE            equ	1218	;# 
   899   0004C3                     LATF            equ	1219	;# 
   900   0004C6                     TRISA           equ	1222	;# 
   901   0004C7                     TRISB           equ	1223	;# 
   902   0004C8                     TRISC           equ	1224	;# 
   903   0004C9                     TRISD           equ	1225	;# 
   904   0004CA                     TRISE           equ	1226	;# 
   905   0004CB                     TRISF           equ	1227	;# 
   906   0004CE                     PORTA           equ	1230	;# 
   907   0004CF                     PORTB           equ	1231	;# 
   908   0004D0                     PORTC           equ	1232	;# 
   909   0004D1                     PORTD           equ	1233	;# 
   910   0004D2                     PORTE           equ	1234	;# 
   911   0004D3                     PORTF           equ	1235	;# 
   912   0004D6                     INTCON0         equ	1238	;# 
   913   0004D7                     INTCON1         equ	1239	;# 
   914   0004D8                     STATUS          equ	1240	;# 
   915   0004D9                     FSR2            equ	1241	;# 
   916   0004D9                     FSR2L           equ	1241	;# 
   917   0004DA                     FSR2H           equ	1242	;# 
   918   0004DB                     PLUSW2          equ	1243	;# 
   919   0004DC                     PREINC2         equ	1244	;# 
   920   0004DD                     POSTDEC2        equ	1245	;# 
   921   0004DE                     POSTINC2        equ	1246	;# 
   922   0004DF                     INDF2           equ	1247	;# 
   923   0004E0                     BSR             equ	1248	;# 
   924   0004E1                     FSR1            equ	1249	;# 
   925   0004E1                     FSR1L           equ	1249	;# 
   926   0004E2                     FSR1H           equ	1250	;# 
   927   0004E3                     PLUSW1          equ	1251	;# 
   928   0004E4                     PREINC1         equ	1252	;# 
   929   0004E5                     POSTDEC1        equ	1253	;# 
   930   0004E6                     POSTINC1        equ	1254	;# 
   931   0004E7                     INDF1           equ	1255	;# 
   932   0004E8                     WREG            equ	1256	;# 
   933   0004E9                     FSR0            equ	1257	;# 
   934   0004E9                     FSR0L           equ	1257	;# 
   935   0004EA                     FSR0H           equ	1258	;# 
   936   0004EB                     PLUSW0          equ	1259	;# 
   937   0004EC                     PREINC0         equ	1260	;# 
   938   0004ED                     POSTDEC0        equ	1261	;# 
   939   0004EE                     POSTINC0        equ	1262	;# 
   940   0004EF                     INDF0           equ	1263	;# 
   941   0004F0                     PCON0           equ	1264	;# 
   942   0004F1                     PCON1           equ	1265	;# 
   943   0004F2                     CPUDOZE         equ	1266	;# 
   944   0004F3                     PROD            equ	1267	;# 
   945   0004F3                     PRODL           equ	1267	;# 
   946   0004F4                     PRODH           equ	1268	;# 
   947   0004F5                     TABLAT          equ	1269	;# 
   948   0004F6                     TBLPTR          equ	1270	;# 
   949   0004F6                     TBLPTRL         equ	1270	;# 
   950   0004F7                     TBLPTRH         equ	1271	;# 
   951   0004F8                     TBLPTRU         equ	1272	;# 
   952   0004F9                     PCLAT           equ	1273	;# 
   953   0004F9                     PCL             equ	1273	;# 
   954   0004FA                     PCLATH          equ	1274	;# 
   955   0004FB                     PCLATU          equ	1275	;# 
   956   0004FC                     STKPTR          equ	1276	;# 
   957   0004FD                     TOS             equ	1277	;# 
   958   0004FD                     TOSL            equ	1277	;# 
   959   0004FE                     TOSH            equ	1278	;# 
   960   0004FF                     TOSU            equ	1279	;# 
   961   000039                     CLKRCON         equ	57	;# 
   962   00003A                     CLKRCLK         equ	58	;# 
   963   000040                     NVMCON0         equ	64	;# 
   964   000041                     NVMCON1         equ	65	;# 
   965   000042                     NVMLOCK         equ	66	;# 
   966   000043                     NVMADR          equ	67	;# 
   967   000043                     NVMADRL         equ	67	;# 
   968   000044                     NVMADRH         equ	68	;# 
   969   000045                     NVMADRU         equ	69	;# 
   970   000046                     NVMDAT          equ	70	;# 
   971   000046                     NVMDATL         equ	70	;# 
   972   000047                     NVMDATH         equ	71	;# 
   973   000048                     VREGCON         equ	72	;# 
   974   000049                     BORCON          equ	73	;# 
   975   00004A                     HLVDCON0        equ	74	;# 
   976   00004B                     HLVDCON1        equ	75	;# 
   977   00004C                     ZCDCON          equ	76	;# 
   978   000060                     PMD0            equ	96	;# 
   979   000061                     PMD1            equ	97	;# 
   980   000063                     PMD3            equ	99	;# 
   981   000064                     PMD4            equ	100	;# 
   982   000065                     PMD5            equ	101	;# 
   983   000066                     PMD6            equ	102	;# 
   984   000067                     PMD7            equ	103	;# 
   985   000068                     PMD8            equ	104	;# 
   986   00006A                     MD1CON0         equ	106	;# 
   987   00006B                     MD1CON1         equ	107	;# 
   988   00006C                     MD1SRC          equ	108	;# 
   989   00006D                     MD1CARL         equ	109	;# 
   990   00006E                     MD1CARH         equ	110	;# 
   991   00006F                     CMOUT           equ	111	;# 
   992   000070                     CM1CON0         equ	112	;# 
   993   000071                     CM1CON1         equ	113	;# 
   994   000072                     CM1NCH          equ	114	;# 
   995   000073                     CM1PCH          equ	115	;# 
   996   000074                     CM2CON0         equ	116	;# 
   997   000075                     CM2CON1         equ	117	;# 
   998   000076                     CM2NCH          equ	118	;# 
   999   000077                     CM2PCH          equ	119	;# 
  1000   000078                     WDTCON0         equ	120	;# 
  1001   000079                     WDTCON1         equ	121	;# 
  1002   00007A                     WDTPS           equ	122	;# 
  1003   00007A                     WDTPSL          equ	122	;# 
  1004   00007B                     WDTPSH          equ	123	;# 
  1005   00007C                     WDTTMR          equ	124	;# 
  1006   00007D                     DAC1DAT         equ	125	;# 
  1007   00007D                     DAC1DATL        equ	125	;# 
  1008   00007F                     DAC1CON         equ	127	;# 
  1009   000080                     SPI1RXB         equ	128	;# 
  1010   000081                     SPI1TXB         equ	129	;# 
  1011   000082                     SPI1TCNT        equ	130	;# 
  1012   000082                     SPI1TCNTL       equ	130	;# 
  1013   000083                     SPI1TCNTH       equ	131	;# 
  1014   000084                     SPI1CON0        equ	132	;# 
  1015   000085                     SPI1CON1        equ	133	;# 
  1016   000086                     SPI1CON2        equ	134	;# 
  1017   000087                     SPI1STATUS      equ	135	;# 
  1018   000088                     SPI1TWIDTH      equ	136	;# 
  1019   000089                     SPI1BAUD        equ	137	;# 
  1020   00008A                     SPI1INTF        equ	138	;# 
  1021   00008B                     SPI1INTE        equ	139	;# 
  1022   00008C                     SPI1CLK         equ	140	;# 
  1023   00008D                     SPI2RXB         equ	141	;# 
  1024   00008E                     SPI2TXB         equ	142	;# 
  1025   00008F                     SPI2TCNT        equ	143	;# 
  1026   00008F                     SPI2TCNTL       equ	143	;# 
  1027   000090                     SPI2TCNTH       equ	144	;# 
  1028   000091                     SPI2CON0        equ	145	;# 
  1029   000092                     SPI2CON1        equ	146	;# 
  1030   000093                     SPI2CON2        equ	147	;# 
  1031   000094                     SPI2STATUS      equ	148	;# 
  1032   000095                     SPI2TWIDTH      equ	149	;# 
  1033   000096                     SPI2BAUD        equ	150	;# 
  1034   000097                     SPI2INTF        equ	151	;# 
  1035   000098                     SPI2INTE        equ	152	;# 
  1036   000099                     SPI2CLK         equ	153	;# 
  1037   0000AC                     ACTCON          equ	172	;# 
  1038   0000AD                     OSCCON1         equ	173	;# 
  1039   0000AE                     OSCCON2         equ	174	;# 
  1040   0000AF                     OSCCON3         equ	175	;# 
  1041   0000B0                     OSCTUNE         equ	176	;# 
  1042   0000B1                     OSCFRQ          equ	177	;# 
  1043   0000B1                     OSCFREQ         equ	177	;# 
  1044   0000B2                     OSCSTAT         equ	178	;# 
  1045   0000B2                     OSCSTAT1        equ	178	;# 
  1046   0000B3                     OSCEN           equ	179	;# 
  1047   0000B4                     PRLOCK          equ	180	;# 
  1048   0000B5                     SCANPR          equ	181	;# 
  1049   0000B6                     DMA1PR          equ	182	;# 
  1050   0000B7                     DMA2PR          equ	183	;# 
  1051   0000B8                     DMA3PR          equ	184	;# 
  1052   0000B9                     DMA4PR          equ	185	;# 
  1053   0000BA                     DMA5PR          equ	186	;# 
  1054   0000BB                     DMA6PR          equ	187	;# 
  1055   0000BE                     MAINPR          equ	190	;# 
  1056   0000BF                     ISRPR           equ	191	;# 
  1057   0000D4                     CLCDATA         equ	212	;# 
  1058   0000D5                     CLCSELECT       equ	213	;# 
  1059   0000D6                     CLCnCON         equ	214	;# 
  1060   0000D7                     CLCnPOL         equ	215	;# 
  1061   0000D8                     CLCnSEL0        equ	216	;# 
  1062   0000D9                     CLCnSEL1        equ	217	;# 
  1063   0000DA                     CLCnSEL2        equ	218	;# 
  1064   0000DB                     CLCnSEL3        equ	219	;# 
  1065   0000DC                     CLCnGLS0        equ	220	;# 
  1066   0000DD                     CLCnGLS1        equ	221	;# 
  1067   0000DE                     CLCnGLS2        equ	222	;# 
  1068   0000DF                     CLCnGLS3        equ	223	;# 
  1069   0000E8                     DMASELECT       equ	232	;# 
  1070   0000E9                     DMAnBUF         equ	233	;# 
  1071   0000EA                     DMAnDCNT        equ	234	;# 
  1072   0000EA                     DMAnDCNTL       equ	234	;# 
  1073   0000EB                     DMAnDCNTH       equ	235	;# 
  1074   0000EC                     DMAnDPTR        equ	236	;# 
  1075   0000EC                     DMAnDPTRL       equ	236	;# 
  1076   0000ED                     DMAnDPTRH       equ	237	;# 
  1077   0000EE                     DMAnDSZ         equ	238	;# 
  1078   0000EE                     DMAnDSZL        equ	238	;# 
  1079   0000EF                     DMAnDSZH        equ	239	;# 
  1080   0000F0                     DMAnDSA         equ	240	;# 
  1081   0000F0                     DMAnDSAL        equ	240	;# 
  1082   0000F1                     DMAnDSAH        equ	241	;# 
  1083   0000F2                     DMAnSCNT        equ	242	;# 
  1084   0000F2                     DMAnSCNTL       equ	242	;# 
  1085   0000F3                     DMAnSCNTH       equ	243	;# 
  1086   0000F4                     DMAnSPTR        equ	244	;# 
  1087   0000F4                     DMAnSPTRL       equ	244	;# 
  1088   0000F5                     DMAnSPTRH       equ	245	;# 
  1089   0000F6                     DMAnSPTRU       equ	246	;# 
  1090   0000F7                     DMAnSSZ         equ	247	;# 
  1091   0000F7                     DMAnSSZL        equ	247	;# 
  1092   0000F8                     DMAnSSZH        equ	248	;# 
  1093   0000F9                     DMAnSSA         equ	249	;# 
  1094   0000F9                     DMAnSSAL        equ	249	;# 
  1095   0000FA                     DMAnSSAH        equ	250	;# 
  1096   0000FB                     DMAnSSAU        equ	251	;# 
  1097   0000FC                     DMAnCON0        equ	252	;# 
  1098   0000FD                     DMAnCON1        equ	253	;# 
  1099   0000FE                     DMAnAIRQ        equ	254	;# 
  1100   0000FF                     DMAnSIRQ        equ	255	;# 
  1101   000200                     PPSLOCK         equ	512	;# 
  1102   000201                     RA0PPS          equ	513	;# 
  1103   000202                     RA1PPS          equ	514	;# 
  1104   000203                     RA2PPS          equ	515	;# 
  1105   000204                     RA3PPS          equ	516	;# 
  1106   000205                     RA4PPS          equ	517	;# 
  1107   000206                     RA5PPS          equ	518	;# 
  1108   000207                     RA6PPS          equ	519	;# 
  1109   000208                     RA7PPS          equ	520	;# 
  1110   000209                     RB0PPS          equ	521	;# 
  1111   00020A                     RB1PPS          equ	522	;# 
  1112   00020B                     RB2PPS          equ	523	;# 
  1113   00020C                     RB3PPS          equ	524	;# 
  1114   00020D                     RB4PPS          equ	525	;# 
  1115   00020E                     RB5PPS          equ	526	;# 
  1116   00020F                     RB6PPS          equ	527	;# 
  1117   000210                     RB7PPS          equ	528	;# 
  1118   000211                     RC0PPS          equ	529	;# 
  1119   000212                     RC1PPS          equ	530	;# 
  1120   000213                     RC2PPS          equ	531	;# 
  1121   000214                     RC3PPS          equ	532	;# 
  1122   000215                     RC4PPS          equ	533	;# 
  1123   000216                     RC5PPS          equ	534	;# 
  1124   000217                     RC6PPS          equ	535	;# 
  1125   000218                     RC7PPS          equ	536	;# 
  1126   000219                     RD0PPS          equ	537	;# 
  1127   00021A                     RD1PPS          equ	538	;# 
  1128   00021B                     RD2PPS          equ	539	;# 
  1129   00021C                     RD3PPS          equ	540	;# 
  1130   00021D                     RD4PPS          equ	541	;# 
  1131   00021E                     RD5PPS          equ	542	;# 
  1132   00021F                     RD6PPS          equ	543	;# 
  1133   000220                     RD7PPS          equ	544	;# 
  1134   000221                     RE0PPS          equ	545	;# 
  1135   000222                     RE1PPS          equ	546	;# 
  1136   000223                     RE2PPS          equ	547	;# 
  1137   000229                     RF0PPS          equ	553	;# 
  1138   00022A                     RF1PPS          equ	554	;# 
  1139   00022B                     RF2PPS          equ	555	;# 
  1140   00022C                     RF3PPS          equ	556	;# 
  1141   00022D                     RF4PPS          equ	557	;# 
  1142   00022E                     RF5PPS          equ	558	;# 
  1143   00022F                     RF6PPS          equ	559	;# 
  1144   000230                     RF7PPS          equ	560	;# 
  1145   00023E                     INT0PPS         equ	574	;# 
  1146   00023F                     INT1PPS         equ	575	;# 
  1147   000240                     INT2PPS         equ	576	;# 
  1148   000241                     T0CKIPPS        equ	577	;# 
  1149   000242                     T1CKIPPS        equ	578	;# 
  1150   000243                     T1GPPS          equ	579	;# 
  1151   000244                     T3CKIPPS        equ	580	;# 
  1152   000245                     T3GPPS          equ	581	;# 
  1153   000246                     T5CKIPPS        equ	582	;# 
  1154   000247                     T5GPPS          equ	583	;# 
  1155   000248                     T2INPPS         equ	584	;# 
  1156   000249                     T4INPPS         equ	585	;# 
  1157   00024A                     T6INPPS         equ	586	;# 
  1158   00024F                     CCP1PPS         equ	591	;# 
  1159   000250                     CCP2PPS         equ	592	;# 
  1160   000251                     CCP3PPS         equ	593	;# 
  1161   000253                     PWM1ERSPPS      equ	595	;# 
  1162   000254                     PWM2ERSPPS      equ	596	;# 
  1163   000255                     PWM3ERSPPS      equ	597	;# 
  1164   000257                     PWMIN0PPS       equ	599	;# 
  1165   000258                     PWMIN1PPS       equ	600	;# 
  1166   000259                     SMT1WINPPS      equ	601	;# 
  1167   00025A                     SMT1SIGPPS      equ	602	;# 
  1168   00025B                     CWG1PPS         equ	603	;# 
  1169   00025B                     CWG1INPPS       equ	603	;# 
  1170   00025C                     CWG2PPS         equ	604	;# 
  1171   00025C                     CWG2INPPS       equ	604	;# 
  1172   00025D                     CWG3PPS         equ	605	;# 
  1173   00025D                     CWG3INPPS       equ	605	;# 
  1174   00025E                     MD1CARLPPS      equ	606	;# 
  1175   00025E                     MDCARLPPS       equ	606	;# 
  1176   00025F                     MD1CARHPPS      equ	607	;# 
  1177   00025F                     MDCARHPPS       equ	607	;# 
  1178   000260                     MD1SRCPPS       equ	608	;# 
  1179   000260                     MDSRCPPS        equ	608	;# 
  1180   000261                     CLCIN0PPS       equ	609	;# 
  1181   000262                     CLCIN1PPS       equ	610	;# 
  1182   000263                     CLCIN2PPS       equ	611	;# 
  1183   000264                     CLCIN3PPS       equ	612	;# 
  1184   000265                     CLCIN4PPS       equ	613	;# 
  1185   000266                     CLCIN5PPS       equ	614	;# 
  1186   000267                     CLCIN6PPS       equ	615	;# 
  1187   000268                     CLCIN7PPS       equ	616	;# 
  1188   000269                     ADACTPPS        equ	617	;# 
  1189   00026A                     SPI1SCKPPS      equ	618	;# 
  1190   00026B                     SPI1SDIPPS      equ	619	;# 
  1191   00026C                     SPI1SSPPS       equ	620	;# 
  1192   00026D                     SPI2SCKPPS      equ	621	;# 
  1193   00026E                     SPI2SDIPPS      equ	622	;# 
  1194   00026F                     SPI2SSPPS       equ	623	;# 
  1195   000270                     I2C1SDAPPS      equ	624	;# 
  1196   000271                     I2C1SCLPPS      equ	625	;# 
  1197   000272                     U1RXPPS         equ	626	;# 
  1198   000273                     U1CTSPPS        equ	627	;# 
  1199   000274                     U2RXPPS         equ	628	;# 
  1200   000275                     U2CTSPPS        equ	629	;# 
  1201   000276                     U3RXPPS         equ	630	;# 
  1202   000277                     U3CTSPPS        equ	631	;# 
  1203   000278                     U4RXPPS         equ	632	;# 
  1204   000279                     U4CTSPPS        equ	633	;# 
  1205   00027A                     U5RXPPS         equ	634	;# 
  1206   00027B                     U5CTSPPS        equ	635	;# 
  1207   000286                     RC4I2C          equ	646	;# 
  1208   000287                     RC3I2C          equ	647	;# 
  1209   000288                     RB2I2C          equ	648	;# 
  1210   000289                     RB1I2C          equ	649	;# 
  1211   00028B                     I2C1RXB         equ	651	;# 
  1212   00028C                     I2C1TXB         equ	652	;# 
  1213   00028D                     I2C1CNT         equ	653	;# 
  1214   00028E                     I2C1ADB0        equ	654	;# 
  1215   00028F                     I2C1ADB1        equ	655	;# 
  1216   000290                     I2C1ADR0        equ	656	;# 
  1217   000291                     I2C1ADR1        equ	657	;# 
  1218   000292                     I2C1ADR2        equ	658	;# 
  1219   000293                     I2C1ADR3        equ	659	;# 
  1220   000294                     I2C1CON0        equ	660	;# 
  1221   000295                     I2C1CON1        equ	661	;# 
  1222   000296                     I2C1CON2        equ	662	;# 
  1223   000297                     I2C1ERR         equ	663	;# 
  1224   000298                     I2C1STAT0       equ	664	;# 
  1225   000299                     I2C1STAT1       equ	665	;# 
  1226   00029A                     I2C1PIR         equ	666	;# 
  1227   00029B                     I2C1PIE         equ	667	;# 
  1228   00029C                     I2C1CLK         equ	668	;# 
  1229   00029D                     I2C1BTO         equ	669	;# 
  1230   0002A1                     U1RXB           equ	673	;# 
  1231   0002A1                     U1RXBL          equ	673	;# 
  1232   0002A2                     U1RXCHK         equ	674	;# 
  1233   0002A3                     U1TXB           equ	675	;# 
  1234   0002A3                     U1TXBL          equ	675	;# 
  1235   0002A4                     U1TXCHK         equ	676	;# 
  1236   0002A5                     U1P1            equ	677	;# 
  1237   0002A5                     U1P1L           equ	677	;# 
  1238   0002A6                     U1P1H           equ	678	;# 
  1239   0002A7                     U1P2            equ	679	;# 
  1240   0002A7                     U1P2L           equ	679	;# 
  1241   0002A8                     U1P2H           equ	680	;# 
  1242   0002A9                     U1P3            equ	681	;# 
  1243   0002A9                     U1P3L           equ	681	;# 
  1244   0002AA                     U1P3H           equ	682	;# 
  1245   0002AB                     U1CON0          equ	683	;# 
  1246   0002AC                     U1CON1          equ	684	;# 
  1247   0002AD                     U1CON2          equ	685	;# 
  1248   0002AE                     U1BRG           equ	686	;# 
  1249   0002AE                     U1BRGL          equ	686	;# 
  1250   0002AF                     U1BRGH          equ	687	;# 
  1251   0002B0                     U1FIFO          equ	688	;# 
  1252   0002B1                     U1UIR           equ	689	;# 
  1253   0002B2                     U1ERRIR         equ	690	;# 
  1254   0002B3                     U1ERRIE         equ	691	;# 
  1255   0002B4                     U2RXB           equ	692	;# 
  1256   0002B4                     U2RXBL          equ	692	;# 
  1257   0002B6                     U2TXB           equ	694	;# 
  1258   0002B6                     U2TXBL          equ	694	;# 
  1259   0002B8                     U2P1            equ	696	;# 
  1260   0002B8                     U2P1L           equ	696	;# 
  1261   0002BA                     U2P2            equ	698	;# 
  1262   0002BA                     U2P2L           equ	698	;# 
  1263   0002BC                     U2P3            equ	700	;# 
  1264   0002BC                     U2P3L           equ	700	;# 
  1265   0002BE                     U2CON0          equ	702	;# 
  1266   0002BF                     U2CON1          equ	703	;# 
  1267   0002C0                     U2CON2          equ	704	;# 
  1268   0002C1                     U2BRG           equ	705	;# 
  1269   0002C1                     U2BRGL          equ	705	;# 
  1270   0002C2                     U2BRGH          equ	706	;# 
  1271   0002C3                     U2FIFO          equ	707	;# 
  1272   0002C4                     U2UIR           equ	708	;# 
  1273   0002C5                     U2ERRIR         equ	709	;# 
  1274   0002C6                     U2ERRIE         equ	710	;# 
  1275   0002C7                     U3RXB           equ	711	;# 
  1276   0002C7                     U3RXBL          equ	711	;# 
  1277   0002C9                     U3TXB           equ	713	;# 
  1278   0002C9                     U3TXBL          equ	713	;# 
  1279   0002CB                     U3P1            equ	715	;# 
  1280   0002CB                     U3P1L           equ	715	;# 
  1281   0002CD                     U3P2            equ	717	;# 
  1282   0002CD                     U3P2L           equ	717	;# 
  1283   0002CF                     U3P3            equ	719	;# 
  1284   0002CF                     U3P3L           equ	719	;# 
  1285   0002D1                     U3CON0          equ	721	;# 
  1286   0002D2                     U3CON1          equ	722	;# 
  1287   0002D3                     U3CON2          equ	723	;# 
  1288   0002D4                     U3BRG           equ	724	;# 
  1289   0002D4                     U3BRGL          equ	724	;# 
  1290   0002D5                     U3BRGH          equ	725	;# 
  1291   0002D6                     U3FIFO          equ	726	;# 
  1292   0002D7                     U3UIR           equ	727	;# 
  1293   0002D8                     U3ERRIR         equ	728	;# 
  1294   0002D9                     U3ERRIE         equ	729	;# 
  1295   0002DA                     U4RXB           equ	730	;# 
  1296   0002DA                     U4RXBL          equ	730	;# 
  1297   0002DC                     U4TXB           equ	732	;# 
  1298   0002DC                     U4TXBL          equ	732	;# 
  1299   0002DE                     U4P1            equ	734	;# 
  1300   0002DE                     U4P1L           equ	734	;# 
  1301   0002E0                     U4P2            equ	736	;# 
  1302   0002E0                     U4P2L           equ	736	;# 
  1303   0002E2                     U4P3            equ	738	;# 
  1304   0002E2                     U4P3L           equ	738	;# 
  1305   0002E4                     U4CON0          equ	740	;# 
  1306   0002E5                     U4CON1          equ	741	;# 
  1307   0002E6                     U4CON2          equ	742	;# 
  1308   0002E7                     U4BRG           equ	743	;# 
  1309   0002E7                     U4BRGL          equ	743	;# 
  1310   0002E8                     U4BRGH          equ	744	;# 
  1311   0002E9                     U4FIFO          equ	745	;# 
  1312   0002EA                     U4UIR           equ	746	;# 
  1313   0002EB                     U4ERRIR         equ	747	;# 
  1314   0002EC                     U4ERRIE         equ	748	;# 
  1315   0002ED                     U5RXB           equ	749	;# 
  1316   0002ED                     U5RXBL          equ	749	;# 
  1317   0002EF                     U5TXB           equ	751	;# 
  1318   0002EF                     U5TXBL          equ	751	;# 
  1319   0002F1                     U5P1            equ	753	;# 
  1320   0002F1                     U5P1L           equ	753	;# 
  1321   0002F3                     U5P2            equ	755	;# 
  1322   0002F3                     U5P2L           equ	755	;# 
  1323   0002F5                     U5P3            equ	757	;# 
  1324   0002F5                     U5P3L           equ	757	;# 
  1325   0002F7                     U5CON0          equ	759	;# 
  1326   0002F8                     U5CON1          equ	760	;# 
  1327   0002F9                     U5CON2          equ	761	;# 
  1328   0002FA                     U5BRG           equ	762	;# 
  1329   0002FA                     U5BRGL          equ	762	;# 
  1330   0002FB                     U5BRGH          equ	763	;# 
  1331   0002FC                     U5FIFO          equ	764	;# 
  1332   0002FD                     U5UIR           equ	765	;# 
  1333   0002FE                     U5ERRIR         equ	766	;# 
  1334   0002FF                     U5ERRIE         equ	767	;# 
  1335   000300                     SMT1TMR         equ	768	;# 
  1336   000300                     SMT1TMRL        equ	768	;# 
  1337   000301                     SMT1TMRH        equ	769	;# 
  1338   000302                     SMT1TMRU        equ	770	;# 
  1339   000303                     SMT1CPR         equ	771	;# 
  1340   000303                     SMT1CPRL        equ	771	;# 
  1341   000304                     SMT1CPRH        equ	772	;# 
  1342   000305                     SMT1CPRU        equ	773	;# 
  1343   000306                     SMT1CPW         equ	774	;# 
  1344   000306                     SMT1CPWL        equ	774	;# 
  1345   000307                     SMT1CPWH        equ	775	;# 
  1346   000308                     SMT1CPWU        equ	776	;# 
  1347   000309                     SMT1PR          equ	777	;# 
  1348   000309                     SMT1PRL         equ	777	;# 
  1349   00030A                     SMT1PRH         equ	778	;# 
  1350   00030B                     SMT1PRU         equ	779	;# 
  1351   00030C                     SMT1CON0        equ	780	;# 
  1352   00030D                     SMT1CON1        equ	781	;# 
  1353   00030E                     SMT1STAT        equ	782	;# 
  1354   00030F                     SMT1CLK         equ	783	;# 
  1355   000310                     SMT1SIG         equ	784	;# 
  1356   000311                     SMT1WIN         equ	785	;# 
  1357   000318                     TMR0L           equ	792	;# 
  1358   000318                     TMR0            equ	792	;# 
  1359   000319                     TMR0H           equ	793	;# 
  1360   000319                     PR0             equ	793	;# 
  1361   00031A                     T0CON0          equ	794	;# 
  1362   00031B                     T0CON1          equ	795	;# 
  1363   00031C                     TMR1            equ	796	;# 
  1364   00031C                     TMR1L           equ	796	;# 
  1365   00031D                     TMR1H           equ	797	;# 
  1366   00031E                     T1CON           equ	798	;# 
  1367   00031E                     TMR1CON         equ	798	;# 
  1368   00031F                     T1GCON          equ	799	;# 
  1369   00031F                     TMR1GCON        equ	799	;# 
  1370   000320                     T1GATE          equ	800	;# 
  1371   000320                     TMR1GATE        equ	800	;# 
  1372   000321                     T1CLK           equ	801	;# 
  1373   000321                     TMR1CLK         equ	801	;# 
  1374   000321                     PR1             equ	801	;# 
  1375   000322                     T2TMR           equ	802	;# 
  1376   000322                     TMR2            equ	802	;# 
  1377   000323                     T2PR            equ	803	;# 
  1378   000323                     PR2             equ	803	;# 
  1379   000324                     T2CON           equ	804	;# 
  1380   000325                     T2HLT           equ	805	;# 
  1381   000326                     T2CLKCON        equ	806	;# 
  1382   000326                     T2CLK           equ	806	;# 
  1383   000327                     T2RST           equ	807	;# 
  1384   000328                     TMR3            equ	808	;# 
  1385   000328                     TMR3L           equ	808	;# 
  1386   000329                     TMR3H           equ	809	;# 
  1387   00032A                     T3CON           equ	810	;# 
  1388   00032A                     TMR3CON         equ	810	;# 
  1389   00032B                     T3GCON          equ	811	;# 
  1390   00032B                     TMR3GCON        equ	811	;# 
  1391   00032C                     T3GATE          equ	812	;# 
  1392   00032C                     TMR3GATE        equ	812	;# 
  1393   00032D                     T3CLK           equ	813	;# 
  1394   00032D                     TMR3CLK         equ	813	;# 
  1395   00032D                     PR3             equ	813	;# 
  1396   00032E                     T4TMR           equ	814	;# 
  1397   00032E                     TMR4            equ	814	;# 
  1398   00032F                     T4PR            equ	815	;# 
  1399   00032F                     PR4             equ	815	;# 
  1400   000330                     T4CON           equ	816	;# 
  1401   000331                     T4HLT           equ	817	;# 
  1402   000332                     T4CLKCON        equ	818	;# 
  1403   000332                     T4CLK           equ	818	;# 
  1404   000333                     T4RST           equ	819	;# 
  1405   000334                     TMR5            equ	820	;# 
  1406   000334                     TMR5L           equ	820	;# 
  1407   000335                     TMR5H           equ	821	;# 
  1408   000336                     T5CON           equ	822	;# 
  1409   000336                     TMR5CON         equ	822	;# 
  1410   000337                     T5GCON          equ	823	;# 
  1411   000337                     TMR5GCON        equ	823	;# 
  1412   000338                     T5GATE          equ	824	;# 
  1413   000338                     TMR5GATE        equ	824	;# 
  1414   000339                     T5CLK           equ	825	;# 
  1415   000339                     TMR5CLK         equ	825	;# 
  1416   000339                     PR5             equ	825	;# 
  1417   00033A                     T6TMR           equ	826	;# 
  1418   00033A                     TMR6            equ	826	;# 
  1419   00033B                     T6PR            equ	827	;# 
  1420   00033B                     PR6             equ	827	;# 
  1421   00033C                     T6CON           equ	828	;# 
  1422   00033D                     T6HLT           equ	829	;# 
  1423   00033E                     T6CLKCON        equ	830	;# 
  1424   00033E                     T6CLK           equ	830	;# 
  1425   00033F                     T6RST           equ	831	;# 
  1426   000340                     CCPR1           equ	832	;# 
  1427   000340                     CCPR1L          equ	832	;# 
  1428   000341                     CCPR1H          equ	833	;# 
  1429   000342                     CCP1CON         equ	834	;# 
  1430   000343                     CCP1CAP         equ	835	;# 
  1431   000344                     CCPR2           equ	836	;# 
  1432   000344                     CCPR2L          equ	836	;# 
  1433   000345                     CCPR2H          equ	837	;# 
  1434   000346                     CCP2CON         equ	838	;# 
  1435   000347                     CCP2CAP         equ	839	;# 
  1436   000348                     CCPR3           equ	840	;# 
  1437   000348                     CCPR3L          equ	840	;# 
  1438   000349                     CCPR3H          equ	841	;# 
  1439   00034A                     CCP3CON         equ	842	;# 
  1440   00034B                     CCP3CAP         equ	843	;# 
  1441   00034C                     CCPTMRS0        equ	844	;# 
  1442   00034F                     CRCDATA         equ	847	;# 
  1443   00034F                     CRCDATL         equ	847	;# 
  1444   000350                     CRCDATH         equ	848	;# 
  1445   000351                     CRCACC          equ	849	;# 
  1446   000351                     CRCACCL         equ	849	;# 
  1447   000352                     CRCACCH         equ	850	;# 
  1448   000353                     CRCSHFT         equ	851	;# 
  1449   000353                     CRCSHIFTL       equ	851	;# 
  1450   000354                     CRCSHIFTH       equ	852	;# 
  1451   000355                     CRCXOR          equ	853	;# 
  1452   000355                     CRCXORL         equ	853	;# 
  1453   000356                     CRCXORH         equ	854	;# 
  1454   000357                     CRCCON0         equ	855	;# 
  1455   000358                     CRCCON1         equ	856	;# 
  1456   00035A                     SCANLADR        equ	858	;# 
  1457   00035A                     SCANLADRL       equ	858	;# 
  1458   00035B                     SCANLADRH       equ	859	;# 
  1459   00035C                     SCANLADRU       equ	860	;# 
  1460   00035D                     SCANHADR        equ	861	;# 
  1461   00035D                     SCANHADRL       equ	861	;# 
  1462   00035E                     SCANHADRH       equ	862	;# 
  1463   00035F                     SCANHADRU       equ	863	;# 
  1464   000360                     SCANCON0        equ	864	;# 
  1465   000361                     SCANTRIG        equ	865	;# 
  1466   000362                     IPR0            equ	866	;# 
  1467   000363                     IPR1            equ	867	;# 
  1468   000364                     IPR2            equ	868	;# 
  1469   000365                     IPR3            equ	869	;# 
  1470   000366                     IPR4            equ	870	;# 
  1471   000367                     IPR5            equ	871	;# 
  1472   000368                     IPR6            equ	872	;# 
  1473   000369                     IPR7            equ	873	;# 
  1474   00036A                     IPR8            equ	874	;# 
  1475   00036B                     IPR9            equ	875	;# 
  1476   00036C                     IPR10           equ	876	;# 
  1477   00036D                     IPR11           equ	877	;# 
  1478   00036E                     IPR12           equ	878	;# 
  1479   00036F                     IPR13           equ	879	;# 
  1480   000370                     IPR14           equ	880	;# 
  1481   000371                     IPR15           equ	881	;# 
  1482   000373                     STATUS_CSHAD    equ	883	;# 
  1483   000374                     WREG_CSHAD      equ	884	;# 
  1484   000375                     BSR_CSHAD       equ	885	;# 
  1485   000376                     SHADCON         equ	886	;# 
  1486   000377                     STATUS_SHAD     equ	887	;# 
  1487   000378                     WREG_SHAD       equ	888	;# 
  1488   000379                     BSR_SHAD        equ	889	;# 
  1489   00037A                     PCLATH_SHAD     equ	890	;# 
  1490   00037B                     PCLATU_SHAD     equ	891	;# 
  1491   00037C                     FSR0SH          equ	892	;# 
  1492   00037C                     FSR0L_SHAD      equ	892	;# 
  1493   00037D                     FSR0H_SHAD      equ	893	;# 
  1494   00037E                     FSR1SH          equ	894	;# 
  1495   00037E                     FSR1L_SHAD      equ	894	;# 
  1496   00037F                     FSR1H_SHAD      equ	895	;# 
  1497   000380                     FSR2SH          equ	896	;# 
  1498   000380                     FSR2L_SHAD      equ	896	;# 
  1499   000381                     FSR2H_SHAD      equ	897	;# 
  1500   000382                     PRODSH          equ	898	;# 
  1501   000382                     PRODL_SHAD      equ	898	;# 
  1502   000383                     PRODH_SHAD      equ	899	;# 
  1503   0003BC                     CWG1CLK         equ	956	;# 
  1504   0003BC                     CWG1CLKCON      equ	956	;# 
  1505   0003BD                     CWG1ISM         equ	957	;# 
  1506   0003BD                     CWG1DAT         equ	957	;# 
  1507   0003BE                     CWG1DBR         equ	958	;# 
  1508   0003BF                     CWG1DBF         equ	959	;# 
  1509   0003C0                     CWG1CON0        equ	960	;# 
  1510   0003C1                     CWG1CON1        equ	961	;# 
  1511   0003C2                     CWG1AS0         equ	962	;# 
  1512   0003C3                     CWG1AS1         equ	963	;# 
  1513   0003C4                     CWG1STR         equ	964	;# 
  1514   0003C5                     CWG2CLK         equ	965	;# 
  1515   0003C5                     CWG2CLKCON      equ	965	;# 
  1516   0003C6                     CWG2ISM         equ	966	;# 
  1517   0003C6                     CWG2DAT         equ	966	;# 
  1518   0003C7                     CWG2DBR         equ	967	;# 
  1519   0003C8                     CWG2DBF         equ	968	;# 
  1520   0003C9                     CWG2CON0        equ	969	;# 
  1521   0003CA                     CWG2CON1        equ	970	;# 
  1522   0003CB                     CWG2AS0         equ	971	;# 
  1523   0003CC                     CWG2AS1         equ	972	;# 
  1524   0003CD                     CWG2STR         equ	973	;# 
  1525   0003CE                     CWG3CLK         equ	974	;# 
  1526   0003CE                     CWG3CLKCON      equ	974	;# 
  1527   0003CF                     CWG3ISM         equ	975	;# 
  1528   0003CF                     CWG3DAT         equ	975	;# 
  1529   0003D0                     CWG3DBR         equ	976	;# 
  1530   0003D1                     CWG3DBF         equ	977	;# 
  1531   0003D2                     CWG3CON0        equ	978	;# 
  1532   0003D3                     CWG3CON1        equ	979	;# 
  1533   0003D4                     CWG3AS0         equ	980	;# 
  1534   0003D5                     CWG3AS1         equ	981	;# 
  1535   0003D6                     CWG3STR         equ	982	;# 
  1536   0003D7                     FVRCON          equ	983	;# 
  1537   0003D8                     ADCPCON         equ	984	;# 
  1538   0003D8                     ADCP            equ	984	;# 
  1539   0003D9                     ADLTH           equ	985	;# 
  1540   0003D9                     ADLTHL          equ	985	;# 
  1541   0003DA                     ADLTHH          equ	986	;# 
  1542   0003DB                     ADUTH           equ	987	;# 
  1543   0003DB                     ADUTHL          equ	987	;# 
  1544   0003DC                     ADUTHH          equ	988	;# 
  1545   0003DD                     ADERR           equ	989	;# 
  1546   0003DD                     ADERRL          equ	989	;# 
  1547   0003DE                     ADERRH          equ	990	;# 
  1548   0003DF                     ADSTPT          equ	991	;# 
  1549   0003DF                     ADSTPTL         equ	991	;# 
  1550   0003E0                     ADSTPTH         equ	992	;# 
  1551   0003E1                     ADFLTR          equ	993	;# 
  1552   0003E1                     ADFLTRL         equ	993	;# 
  1553   0003E2                     ADFLTRH         equ	994	;# 
  1554   0003E3                     ADACC           equ	995	;# 
  1555   0003E3                     ADACCL          equ	995	;# 
  1556   0003E4                     ADACCH          equ	996	;# 
  1557   0003E5                     ADACCU          equ	997	;# 
  1558   0003E6                     ADCNT           equ	998	;# 
  1559   0003E7                     ADRPT           equ	999	;# 
  1560   0003E8                     ADPREV          equ	1000	;# 
  1561   0003E8                     ADPREVL         equ	1000	;# 
  1562   0003E9                     ADPREVH         equ	1001	;# 
  1563   0003EA                     ADRES           equ	1002	;# 
  1564   0003EA                     ADRESL          equ	1002	;# 
  1565   0003EB                     ADRESH          equ	1003	;# 
  1566   0003EC                     ADPCH           equ	1004	;# 
  1567   0003EE                     ADACQ           equ	1006	;# 
  1568   0003EE                     ADACQL          equ	1006	;# 
  1569   0003EF                     ADACQH          equ	1007	;# 
  1570   0003F0                     ADCAP           equ	1008	;# 
  1571   0003F1                     ADPRE           equ	1009	;# 
  1572   0003F1                     ADPREL          equ	1009	;# 
  1573   0003F2                     ADPREH          equ	1010	;# 
  1574   0003F3                     ADCON0          equ	1011	;# 
  1575   0003F4                     ADCON1          equ	1012	;# 
  1576   0003F5                     ADCON2          equ	1013	;# 
  1577   0003F6                     ADCON3          equ	1014	;# 
  1578   0003F7                     ADSTAT          equ	1015	;# 
  1579   0003F8                     ADREF           equ	1016	;# 
  1580   0003F9                     ADACT           equ	1017	;# 
  1581   0003FA                     ADCLK           equ	1018	;# 
  1582   000400                     ANSELA          equ	1024	;# 
  1583   000401                     WPUA            equ	1025	;# 
  1584   000402                     ODCONA          equ	1026	;# 
  1585   000403                     SLRCONA         equ	1027	;# 
  1586   000404                     INLVLA          equ	1028	;# 
  1587   000405                     IOCAP           equ	1029	;# 
  1588   000406                     IOCAN           equ	1030	;# 
  1589   000407                     IOCAF           equ	1031	;# 
  1590   000408                     ANSELB          equ	1032	;# 
  1591   000409                     WPUB            equ	1033	;# 
  1592   00040A                     ODCONB          equ	1034	;# 
  1593   00040B                     SLRCONB         equ	1035	;# 
  1594   00040C                     INLVLB          equ	1036	;# 
  1595   00040D                     IOCBP           equ	1037	;# 
  1596   00040E                     IOCBN           equ	1038	;# 
  1597   00040F                     IOCBF           equ	1039	;# 
  1598   000410                     ANSELC          equ	1040	;# 
  1599   000411                     WPUC            equ	1041	;# 
  1600   000412                     ODCONC          equ	1042	;# 
  1601   000413                     SLRCONC         equ	1043	;# 
  1602   000414                     INLVLC          equ	1044	;# 
  1603   000415                     IOCCP           equ	1045	;# 
  1604   000416                     IOCCN           equ	1046	;# 
  1605   000417                     IOCCF           equ	1047	;# 
  1606   000418                     ANSELD          equ	1048	;# 
  1607   000419                     WPUD            equ	1049	;# 
  1608   00041A                     ODCOND          equ	1050	;# 
  1609   00041B                     SLRCOND         equ	1051	;# 
  1610   00041C                     INLVLD          equ	1052	;# 
  1611   000420                     ANSELE          equ	1056	;# 
  1612   000421                     WPUE            equ	1057	;# 
  1613   000422                     ODCONE          equ	1058	;# 
  1614   000423                     SLRCONE         equ	1059	;# 
  1615   000424                     INLVLE          equ	1060	;# 
  1616   000425                     IOCEP           equ	1061	;# 
  1617   000426                     IOCEN           equ	1062	;# 
  1618   000427                     IOCEF           equ	1063	;# 
  1619   000428                     ANSELF          equ	1064	;# 
  1620   000429                     WPUF            equ	1065	;# 
  1621   00042A                     ODCONF          equ	1066	;# 
  1622   00042B                     SLRCONF         equ	1067	;# 
  1623   00042C                     INLVLF          equ	1068	;# 
  1624   000440                     NCO1ACC         equ	1088	;# 
  1625   000440                     NCO1ACCL        equ	1088	;# 
  1626   000441                     NCO1ACCH        equ	1089	;# 
  1627   000442                     NCO1ACCU        equ	1090	;# 
  1628   000443                     NCO1INC         equ	1091	;# 
  1629   000443                     NCO1INCL        equ	1091	;# 
  1630   000444                     NCO1INCH        equ	1092	;# 
  1631   000445                     NCO1INCU        equ	1093	;# 
  1632   000446                     NCO1CON         equ	1094	;# 
  1633   000447                     NCO1CLK         equ	1095	;# 
  1634   000448                     NCO2ACC         equ	1096	;# 
  1635   000448                     NCO2ACCL        equ	1096	;# 
  1636   000449                     NCO2ACCH        equ	1097	;# 
  1637   00044A                     NCO2ACCU        equ	1098	;# 
  1638   00044B                     NCO2INC         equ	1099	;# 
  1639   00044B                     NCO2INCL        equ	1099	;# 
  1640   00044C                     NCO2INCH        equ	1100	;# 
  1641   00044D                     NCO2INCU        equ	1101	;# 
  1642   00044E                     NCO2CON         equ	1102	;# 
  1643   00044F                     NCO2CLK         equ	1103	;# 
  1644   000450                     NCO3ACC         equ	1104	;# 
  1645   000450                     NCO3ACCL        equ	1104	;# 
  1646   000451                     NCO3ACCH        equ	1105	;# 
  1647   000452                     NCO3ACCU        equ	1106	;# 
  1648   000453                     NCO3INC         equ	1107	;# 
  1649   000453                     NCO3INCL        equ	1107	;# 
  1650   000454                     NCO3INCH        equ	1108	;# 
  1651   000455                     NCO3INCU        equ	1109	;# 
  1652   000456                     NCO3CON         equ	1110	;# 
  1653   000457                     NCO3CLK         equ	1111	;# 
  1654   000459                     IVTLOCK         equ	1113	;# 
  1655   00045A                     IVTAD           equ	1114	;# 
  1656   00045A                     IVTADL          equ	1114	;# 
  1657   00045B                     IVTADH          equ	1115	;# 
  1658   00045C                     IVTADU          equ	1116	;# 
  1659   00045D                     IVTBASE         equ	1117	;# 
  1660   00045D                     IVTBASEL        equ	1117	;# 
  1661   00045E                     IVTBASEH        equ	1118	;# 
  1662   00045F                     IVTBASEU        equ	1119	;# 
  1663   000460                     PWM1ERS         equ	1120	;# 
  1664   000461                     PWM1CLK         equ	1121	;# 
  1665   000462                     PWM1LDS         equ	1122	;# 
  1666   000463                     PWM1PR          equ	1123	;# 
  1667   000463                     PWM1PRL         equ	1123	;# 
  1668   000464                     PWM1PRH         equ	1124	;# 
  1669   000465                     PWM1CPRE        equ	1125	;# 
  1670   000466                     PWM1PIPOS       equ	1126	;# 
  1671   000467                     PWM1GIR         equ	1127	;# 
  1672   000468                     PWM1GIE         equ	1128	;# 
  1673   000469                     PWM1CON         equ	1129	;# 
  1674   00046A                     PWM1S1CFG       equ	1130	;# 
  1675   00046B                     PWM1S1P1        equ	1131	;# 
  1676   00046B                     PWM1S1P1L       equ	1131	;# 
  1677   00046C                     PWM1S1P1H       equ	1132	;# 
  1678   00046D                     PWM1S1P2        equ	1133	;# 
  1679   00046D                     PWM1S1P2L       equ	1133	;# 
  1680   00046E                     PWM1S1P2H       equ	1134	;# 
  1681   00046F                     PWM2ERS         equ	1135	;# 
  1682   000470                     PWM2CLK         equ	1136	;# 
  1683   000471                     PWM2LDS         equ	1137	;# 
  1684   000472                     PWM2PR          equ	1138	;# 
  1685   000472                     PWM2PRL         equ	1138	;# 
  1686   000473                     PWM2PRH         equ	1139	;# 
  1687   000474                     PWM2CPRE        equ	1140	;# 
  1688   000475                     PWM2PIPOS       equ	1141	;# 
  1689   000476                     PWM2GIR         equ	1142	;# 
  1690   000477                     PWM2GIE         equ	1143	;# 
  1691   000478                     PWM2CON         equ	1144	;# 
  1692   000479                     PWM2S1CFG       equ	1145	;# 
  1693   00047A                     PWM2S1P1        equ	1146	;# 
  1694   00047A                     PWM2S1P1L       equ	1146	;# 
  1695   00047B                     PWM2S1P1H       equ	1147	;# 
  1696   00047C                     PWM2S1P2        equ	1148	;# 
  1697   00047C                     PWM2S1P2L       equ	1148	;# 
  1698   00047D                     PWM2S1P2H       equ	1149	;# 
  1699   00047E                     PWM3ERS         equ	1150	;# 
  1700   00047F                     PWM3CLK         equ	1151	;# 
  1701   000480                     PWM3LDS         equ	1152	;# 
  1702   000481                     PWM3PR          equ	1153	;# 
  1703   000481                     PWM3PRL         equ	1153	;# 
  1704   000482                     PWM3PRH         equ	1154	;# 
  1705   000483                     PWM3CPRE        equ	1155	;# 
  1706   000484                     PWM3PIPOS       equ	1156	;# 
  1707   000485                     PWM3GIR         equ	1157	;# 
  1708   000486                     PWM3GIE         equ	1158	;# 
  1709   000487                     PWM3CON         equ	1159	;# 
  1710   000488                     PWM3S1CFG       equ	1160	;# 
  1711   000489                     PWM3S1P1        equ	1161	;# 
  1712   000489                     PWM3S1P1L       equ	1161	;# 
  1713   00048A                     PWM3S1P1H       equ	1162	;# 
  1714   00048B                     PWM3S1P2        equ	1163	;# 
  1715   00048B                     PWM3S1P2L       equ	1163	;# 
  1716   00048C                     PWM3S1P2H       equ	1164	;# 
  1717   00049C                     PWMLOAD         equ	1180	;# 
  1718   00049D                     PWMEN           equ	1181	;# 
  1719   00049E                     PIE0            equ	1182	;# 
  1720   00049F                     PIE1            equ	1183	;# 
  1721   0004A0                     PIE2            equ	1184	;# 
  1722   0004A1                     PIE3            equ	1185	;# 
  1723   0004A2                     PIE4            equ	1186	;# 
  1724   0004A3                     PIE5            equ	1187	;# 
  1725   0004A4                     PIE6            equ	1188	;# 
  1726   0004A5                     PIE7            equ	1189	;# 
  1727   0004A6                     PIE8            equ	1190	;# 
  1728   0004A7                     PIE9            equ	1191	;# 
  1729   0004A8                     PIE10           equ	1192	;# 
  1730   0004A9                     PIE11           equ	1193	;# 
  1731   0004AA                     PIE12           equ	1194	;# 
  1732   0004AB                     PIE13           equ	1195	;# 
  1733   0004AC                     PIE14           equ	1196	;# 
  1734   0004AD                     PIE15           equ	1197	;# 
  1735   0004AE                     PIR0            equ	1198	;# 
  1736   0004AF                     PIR1            equ	1199	;# 
  1737   0004B0                     PIR2            equ	1200	;# 
  1738   0004B1                     PIR3            equ	1201	;# 
  1739   0004B2                     PIR4            equ	1202	;# 
  1740   0004B3                     PIR5            equ	1203	;# 
  1741   0004B4                     PIR6            equ	1204	;# 
  1742   0004B5                     PIR7            equ	1205	;# 
  1743   0004B6                     PIR8            equ	1206	;# 
  1744   0004B7                     PIR9            equ	1207	;# 
  1745   0004B8                     PIR10           equ	1208	;# 
  1746   0004B9                     PIR11           equ	1209	;# 
  1747   0004BA                     PIR12           equ	1210	;# 
  1748   0004BB                     PIR13           equ	1211	;# 
  1749   0004BC                     PIR14           equ	1212	;# 
  1750   0004BD                     PIR15           equ	1213	;# 
  1751   0004BE                     LATA            equ	1214	;# 
  1752   0004BF                     LATB            equ	1215	;# 
  1753   0004C0                     LATC            equ	1216	;# 
  1754   0004C1                     LATD            equ	1217	;# 
  1755   0004C2                     LATE            equ	1218	;# 
  1756   0004C3                     LATF            equ	1219	;# 
  1757   0004C6                     TRISA           equ	1222	;# 
  1758   0004C7                     TRISB           equ	1223	;# 
  1759   0004C8                     TRISC           equ	1224	;# 
  1760   0004C9                     TRISD           equ	1225	;# 
  1761   0004CA                     TRISE           equ	1226	;# 
  1762   0004CB                     TRISF           equ	1227	;# 
  1763   0004CE                     PORTA           equ	1230	;# 
  1764   0004CF                     PORTB           equ	1231	;# 
  1765   0004D0                     PORTC           equ	1232	;# 
  1766   0004D1                     PORTD           equ	1233	;# 
  1767   0004D2                     PORTE           equ	1234	;# 
  1768   0004D3                     PORTF           equ	1235	;# 
  1769   0004D6                     INTCON0         equ	1238	;# 
  1770   0004D7                     INTCON1         equ	1239	;# 
  1771   0004D8                     STATUS          equ	1240	;# 
  1772   0004D9                     FSR2            equ	1241	;# 
  1773   0004D9                     FSR2L           equ	1241	;# 
  1774   0004DA                     FSR2H           equ	1242	;# 
  1775   0004DB                     PLUSW2          equ	1243	;# 
  1776   0004DC                     PREINC2         equ	1244	;# 
  1777   0004DD                     POSTDEC2        equ	1245	;# 
  1778   0004DE                     POSTINC2        equ	1246	;# 
  1779   0004DF                     INDF2           equ	1247	;# 
  1780   0004E0                     BSR             equ	1248	;# 
  1781   0004E1                     FSR1            equ	1249	;# 
  1782   0004E1                     FSR1L           equ	1249	;# 
  1783   0004E2                     FSR1H           equ	1250	;# 
  1784   0004E3                     PLUSW1          equ	1251	;# 
  1785   0004E4                     PREINC1         equ	1252	;# 
  1786   0004E5                     POSTDEC1        equ	1253	;# 
  1787   0004E6                     POSTINC1        equ	1254	;# 
  1788   0004E7                     INDF1           equ	1255	;# 
  1789   0004E8                     WREG            equ	1256	;# 
  1790   0004E9                     FSR0            equ	1257	;# 
  1791   0004E9                     FSR0L           equ	1257	;# 
  1792   0004EA                     FSR0H           equ	1258	;# 
  1793   0004EB                     PLUSW0          equ	1259	;# 
  1794   0004EC                     PREINC0         equ	1260	;# 
  1795   0004ED                     POSTDEC0        equ	1261	;# 
  1796   0004EE                     POSTINC0        equ	1262	;# 
  1797   0004EF                     INDF0           equ	1263	;# 
  1798   0004F0                     PCON0           equ	1264	;# 
  1799   0004F1                     PCON1           equ	1265	;# 
  1800   0004F2                     CPUDOZE         equ	1266	;# 
  1801   0004F3                     PROD            equ	1267	;# 
  1802   0004F3                     PRODL           equ	1267	;# 
  1803   0004F4                     PRODH           equ	1268	;# 
  1804   0004F5                     TABLAT          equ	1269	;# 
  1805   0004F6                     TBLPTR          equ	1270	;# 
  1806   0004F6                     TBLPTRL         equ	1270	;# 
  1807   0004F7                     TBLPTRH         equ	1271	;# 
  1808   0004F8                     TBLPTRU         equ	1272	;# 
  1809   0004F9                     PCLAT           equ	1273	;# 
  1810   0004F9                     PCL             equ	1273	;# 
  1811   0004FA                     PCLATH          equ	1274	;# 
  1812   0004FB                     PCLATU          equ	1275	;# 
  1813   0004FC                     STKPTR          equ	1276	;# 
  1814   0004FD                     TOS             equ	1277	;# 
  1815   0004FD                     TOSL            equ	1277	;# 
  1816   0004FE                     TOSH            equ	1278	;# 
  1817   0004FF                     TOSU            equ	1279	;# 
  1818   0000B3                     _OSCEN          set	179
  1819   0000B1                     _OSCFRQ         set	177
  1820   0000AD                     _OSCCON1        set	173
  1821   0003EB                     _ADRESH         set	1003
  1822   0003EC                     _ADPCH          set	1004
  1823   0003F3                     _ADCON0bits     set	1011
  1824   000428                     _ANSELFbits     set	1064
  1825   000418                     _ANSELD         set	1048
  1826   000400                     _ANSELAbits     set	1024
  1827   0004C3                     _LATFbits       set	1219
  1828   0004CB                     _TRISFbits      set	1227
  1829   0004C6                     _TRISAbits      set	1222
  1830   0004D1                     _PORTD          set	1233
  1831   0004C1                     _LATD           set	1217
  1832   0004C9                     _TRISD          set	1225
  1833   0004C1                     _LATDbits       set	1217
  1834                           
  1835                           	psect	smallconst
  1836   002600                     __psmallconst:
  1837                           	callstack 0
  1838   002600  00                 	db	0
  1839   002601                     STR_2:
  1840   002601  55                 	db	85	;'U'
  1841   002602  50                 	db	80	;'P'
  1842   002603  43                 	db	67	;'C'
  1843   002604  20                 	db	32
  1844   002605  4D                 	db	77	;'M'
  1845   002606  49                 	db	73	;'I'
  1846   002607  43                 	db	67	;'C'
  1847   002608  52                 	db	82	;'R'
  1848   002609  4F                 	db	79	;'O'
  1849   00260A  20                 	db	32
  1850   00260B  32                 	db	50	;'2'
  1851   00260C  30                 	db	48	;'0'
  1852   00260D  32                 	db	50	;'2'
  1853   00260E  35                 	db	53	;'5'
  1854   00260F  2D                 	db	45
  1855   002610  31                 	db	49	;'1'
  1856   002611  00                 	db	0
  1857   002612                     STR_1:
  1858   002612  4C                 	db	76	;'L'
  1859   002613  45                 	db	69	;'E'
  1860   002614  43                 	db	67	;'C'
  1861   002615  54                 	db	84	;'T'
  1862   002616  55                 	db	85	;'U'
  1863   002617  52                 	db	82	;'R'
  1864   002618  41                 	db	65	;'A'
  1865   002619  20                 	db	32
  1866   00261A  41                 	db	65	;'A'
  1867   00261B  44                 	db	68	;'D'
  1868   00261C  43                 	db	67	;'C'
  1869   00261D  20                 	db	32
  1870   00261E  43                 	db	67	;'C'
  1871   00261F  48                 	db	72	;'H'
  1872   002620  30                 	db	48	;'0'
  1873   002621  00                 	db	0
  1874   002622                     STR_3:
  1875   002622  41                 	db	65	;'A'
  1876   002623  44                 	db	68	;'D'
  1877   002624  43                 	db	67	;'C'
  1878   002625  20                 	db	32
  1879   002626  43                 	db	67	;'C'
  1880   002627  48                 	db	72	;'H'
  1881   002628  30                 	db	48	;'0'
  1882   002629  3A                 	db	58	;':'
  1883   00262A  00                 	db	0
  1884   00262B  00                 	db	0	; dummy byte at the end
  1885   002600                     __smallconst    set	__psmallconst
  1886   002600                     __mediumconst   set	__psmallconst
  1887   000001                     __activetblptr  equ	1
  1888                           
  1889                           ; #config settings
  1890                           
  1891                           	psect	cinit
  1892   002A62                     __pcinit:
  1893                           	callstack 0
  1894   002A62                     start_initialization:
  1895                           	callstack 0
  1896   002A62                     __initialization:
  1897                           	callstack 0
  1898                           
  1899                           ; Clear objects allocated to COMRAM (2 bytes)
  1900   002A62  6A0E               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1901   002A64  6A0D               	clrf	__pbssCOMRAM& (0+255),c
  1902   002A66                     end_of_initialization:
  1903                           	callstack 0
  1904   002A66                     __end_of__initialization:
  1905                           	callstack 0
  1906   002A66  0E00               	movlw	low (__Lsmallconst shr (0+16))
  1907   002A68  6EF8               	movwf	tblptru,c
  1908   002A6A  0E26               	movlw	high __Lsmallconst
  1909   002A6C  6EF7               	movwf	tblptrh,c
  1910   002A6E  0100               	movlb	0
  1911   002A70  EF16  F013         	goto	_main	;jump to C main() function
  1912                           
  1913                           	psect	bssCOMRAM
  1914   00050D                     __pbssCOMRAM:
  1915                           	callstack 0
  1916   00050D                     _lectura_ADC:
  1917                           	callstack 0
  1918   00050D                     	ds	2
  1919                           
  1920                           	psect	cstackCOMRAM
  1921   000501                     __pcstackCOMRAM:
  1922                           	callstack 0
  1923   000501                     ?___lwmod:
  1924                           	callstack 0
  1925   000501                     ENVIA_NIBBLE@dato:
  1926                           	callstack 0
  1927   000501                     LEER_LCD@aux:
  1928                           	callstack 0
  1929   000501                     ___lwmod@dividend:
  1930                           	callstack 0
  1931   000501                     
  1932                           ; 1 bytes @ 0x0
  1933   000501                     	ds	1
  1934   000502                     ENVIA_CHAR@dato:
  1935                           	callstack 0
  1936   000502                     ENVIA_LCD_CMD@dato:
  1937                           	callstack 0
  1938   000502                     
  1939                           ; 1 bytes @ 0x1
  1940   000502                     	ds	1
  1941   000503                     ENVIA_CHAR@aux:
  1942                           	callstack 0
  1943   000503                     ENVIA_LCD_CMD@aux:
  1944                           	callstack 0
  1945   000503                     ___lwmod@divisor:
  1946                           	callstack 0
  1947                           
  1948                           ; 2 bytes @ 0x2
  1949   000503                     	ds	1
  1950   000504                     POS_CURSOR@columna:
  1951                           	callstack 0
  1952   000504                     CURSOR_ONOFF@estado:
  1953                           	callstack 0
  1954   000504                     ESCRIBE_MENSAJE@cadena:
  1955                           	callstack 0
  1956   000504                     ??_LCD_CONFIG:
  1957                           
  1958                           ; 1 bytes @ 0x3
  1959   000504                     	ds	1
  1960   000505                     POS_CURSOR@fila:
  1961                           	callstack 0
  1962   000505                     ESCRIBE_MENSAJE@tam:
  1963                           	callstack 0
  1964   000505                     ___lwmod@counter:
  1965                           	callstack 0
  1966   000505                     ??_lcd_init:
  1967   000505                     
  1968                           ; 1 bytes @ 0x4
  1969   000505                     	ds	1
  1970   000506                     ?___lwdiv:
  1971                           	callstack 0
  1972   000506                     ___lwdiv@dividend:
  1973                           	callstack 0
  1974   000506                     ??_ESCRIBE_MENSAJE:
  1975                           
  1976                           ; 1 bytes @ 0x5
  1977   000506                     	ds	1
  1978   000507                     ESCRIBE_MENSAJE@i:
  1979                           	callstack 0
  1980                           
  1981                           ; 1 bytes @ 0x6
  1982   000507                     	ds	1
  1983   000508                     ___lwdiv@divisor:
  1984                           	callstack 0
  1985   000508                     ??_splash_screen:
  1986                           
  1987                           ; 1 bytes @ 0x7
  1988   000508                     	ds	2
  1989   00050A                     ___lwdiv@quotient:
  1990                           	callstack 0
  1991   00050A                     
  1992                           ; 1 bytes @ 0x9
  1993   00050A                     	ds	2
  1994   00050C                     ___lwdiv@counter:
  1995                           	callstack 0
  1996                           
  1997                           ; 1 bytes @ 0xB
  1998   00050C                     	ds	1
  1999   00050D                     
  2000                           ; 1 bytes @ 0xC
  2001 ;;
  2002 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2003 ;;
  2004 ;; *************** function _main *****************
  2005 ;; Defined at:
  2006 ;;		line 53 in file "maincode02.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2024 ;;Total ram usage:        0 bytes
  2025 ;; Hardware stack levels required when called: 4
  2026 ;; This function calls:
  2027 ;;		_ENVIA_CHAR
  2028 ;;		_ESCRIBE_MENSAJE
  2029 ;;		_POS_CURSOR
  2030 ;;		___lwdiv
  2031 ;;		___lwmod
  2032 ;;		_configuro
  2033 ;;		_lcd_init
  2034 ;;		_splash_screen
  2035 ;; This function is called by:
  2036 ;;		Startup code after reset
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text0
  2041   00262C                     __ptext0:
  2042                           	callstack 0
  2043   00262C                     _main:
  2044                           	callstack 123
  2045   00262C                     
  2046                           ;maincode02.c: 54:     configuro();
  2047   00262C  EC12  F015         	call	_configuro	;wreg free
  2048   002630                     
  2049                           ;maincode02.c: 55:     lcd_init();
  2050   002630  ECFB  F014         	call	_lcd_init	;wreg free
  2051   002634                     
  2052                           ;maincode02.c: 56:     splash_screen();
  2053   002634  EC58  F014         	call	_splash_screen	;wreg free
  2054   002638                     l1152:
  2055                           
  2056                           ;maincode02.c: 58:         ADCON0bits.GO_nDONE = 1;
  2057   002638  0103               	movlb	3	; () banked
  2058   00263A  81F3               	bsf	243,0,b	;volatile
  2059   00263C                     l133:
  2060                           
  2061                           ; BSR set to: 3
  2062   00263C  B1F3               	btfsc	243,0,b	;volatile
  2063   00263E  EF23  F013         	goto	u281
  2064   002642  EF25  F013         	goto	u280
  2065   002646                     u281:
  2066   002646  EF1E  F013         	goto	l133
  2067   00264A                     u280:
  2068   00264A                     
  2069                           ; BSR set to: 3
  2070                           ;maincode02.c: 60:         lectura_ADC = ADRESH;
  2071   00264A  C3EB F50D          	movff	1003,_lectura_ADC	;volatile
  2072   00264E  6A0E               	clrf	(_lectura_ADC+1)^(0+1280),c
  2073   002650                     
  2074                           ; BSR set to: 3
  2075                           ;maincode02.c: 61:         POS_CURSOR(1,0);
  2076   002650  0E00               	movlw	0
  2077   002652  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2078   002654  0E01               	movlw	1
  2079   002656  EC7C  F014         	call	_POS_CURSOR
  2080   00265A                     
  2081                           ;maincode02.c: 62:         ESCRIBE_MENSAJE("ADC CH0:", 8);
  2082   00265A  0E22               	movlw	low STR_3
  2083   00265C  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2084   00265E  0E08               	movlw	8
  2085   002660  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2086   002662  ECCB  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2087   002666                     
  2088                           ;maincode02.c: 63:         ENVIA_CHAR((lectura_ADC/1000)+0x30);
  2089   002666  C50D  F506         	movff	_lectura_ADC,___lwdiv@dividend
  2090   00266A  C50E  F507         	movff	_lectura_ADC+1,___lwdiv@dividend+1
  2091   00266E  0E03               	movlw	3
  2092   002670  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2093   002672  0EE8               	movlw	232
  2094   002674  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  2095   002676  EC83  F013         	call	___lwdiv	;wreg free
  2096   00267A  5006               	movf	?___lwdiv^(0+1280),w,c
  2097   00267C  0F30               	addlw	48
  2098   00267E  EC99  F014         	call	_ENVIA_CHAR
  2099   002682                     
  2100                           ;maincode02.c: 64:         ENVIA_CHAR(((lectura_ADC%1000)/100)+0x30);
  2101   002682  0E03               	movlw	3
  2102   002684  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2103   002686  0EE8               	movlw	232
  2104   002688  6E03               	movwf	___lwmod@divisor^(0+1280),c
  2105   00268A  C50D  F501         	movff	_lectura_ADC,___lwmod@dividend
  2106   00268E  C50E  F502         	movff	_lectura_ADC+1,___lwmod@dividend+1
  2107   002692  ECF6  F013         	call	___lwmod	;wreg free
  2108   002696  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  2109   00269A  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  2110   00269E  0E00               	movlw	0
  2111   0026A0  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2112   0026A2  0E64               	movlw	100
  2113   0026A4  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  2114   0026A6  EC83  F013         	call	___lwdiv	;wreg free
  2115   0026AA  5006               	movf	?___lwdiv^(0+1280),w,c
  2116   0026AC  0F30               	addlw	48
  2117   0026AE  EC99  F014         	call	_ENVIA_CHAR
  2118   0026B2                     
  2119                           ;maincode02.c: 65:         ENVIA_CHAR(((lectura_ADC%100)/10)+0x30);
  2120   0026B2  0E00               	movlw	0
  2121   0026B4  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2122   0026B6  0E64               	movlw	100
  2123   0026B8  6E03               	movwf	___lwmod@divisor^(0+1280),c
  2124   0026BA  C50D  F501         	movff	_lectura_ADC,___lwmod@dividend
  2125   0026BE  C50E  F502         	movff	_lectura_ADC+1,___lwmod@dividend+1
  2126   0026C2  ECF6  F013         	call	___lwmod	;wreg free
  2127   0026C6  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  2128   0026CA  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  2129   0026CE  0E00               	movlw	0
  2130   0026D0  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2131   0026D2  0E0A               	movlw	10
  2132   0026D4  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  2133   0026D6  EC83  F013         	call	___lwdiv	;wreg free
  2134   0026DA  5006               	movf	?___lwdiv^(0+1280),w,c
  2135   0026DC  0F30               	addlw	48
  2136   0026DE  EC99  F014         	call	_ENVIA_CHAR
  2137   0026E2                     
  2138                           ;maincode02.c: 66:         ENVIA_CHAR((lectura_ADC%10)+0x30);
  2139   0026E2  C50D  F501         	movff	_lectura_ADC,___lwmod@dividend
  2140   0026E6  C50E  F502         	movff	_lectura_ADC+1,___lwmod@dividend+1
  2141   0026EA  0E00               	movlw	0
  2142   0026EC  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2143   0026EE  0E0A               	movlw	10
  2144   0026F0  6E03               	movwf	___lwmod@divisor^(0+1280),c
  2145   0026F2  ECF6  F013         	call	___lwmod	;wreg free
  2146   0026F6  5001               	movf	?___lwmod^(0+1280),w,c
  2147   0026F8  0F30               	addlw	48
  2148   0026FA  EC99  F014         	call	_ENVIA_CHAR
  2149   0026FE  EF1C  F013         	goto	l1152
  2150   002702  EFFE  F0FF         	goto	start
  2151   002706                     __end_of_main:
  2152                           	callstack 0
  2153                           
  2154 ;; *************** function _splash_screen *****************
  2155 ;; Defined at:
  2156 ;;		line 42 in file "maincode02.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2174 ;;Total ram usage:        2 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 3
  2177 ;; This function calls:
  2178 ;;		_BORRAR_LCD
  2179 ;;		_ESCRIBE_MENSAJE
  2180 ;;		_POS_CURSOR
  2181 ;; This function is called by:
  2182 ;;		_main
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text1
  2187   0028B0                     __ptext1:
  2188                           	callstack 0
  2189   0028B0                     _splash_screen:
  2190                           	callstack 123
  2191   0028B0                     
  2192                           ;maincode02.c: 43:     POS_CURSOR(1,0);
  2193   0028B0  0E00               	movlw	0
  2194   0028B2  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2195   0028B4  0E01               	movlw	1
  2196   0028B6  EC7C  F014         	call	_POS_CURSOR
  2197   0028BA                     
  2198                           ;maincode02.c: 44:     ESCRIBE_MENSAJE("LECTURA ADC CH0", 15);
  2199   0028BA  0E12               	movlw	low STR_1
  2200   0028BC  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2201   0028BE  0E0F               	movlw	15
  2202   0028C0  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2203   0028C2  ECCB  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2204   0028C6                     
  2205                           ;maincode02.c: 45:     POS_CURSOR(2,0);
  2206   0028C6  0E00               	movlw	0
  2207   0028C8  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2208   0028CA  0E02               	movlw	2
  2209   0028CC  EC7C  F014         	call	_POS_CURSOR
  2210                           
  2211                           ;maincode02.c: 46:     ESCRIBE_MENSAJE("UPC MICRO 2025-1", 16);
  2212   0028D0  0E01               	movlw	low STR_2
  2213   0028D2  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2214   0028D4  0E10               	movlw	16
  2215   0028D6  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2216   0028D8  ECCB  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2217   0028DC                     
  2218                           ;maincode02.c: 47:     _delay((unsigned long)((3000)*(32000000UL/4000.0)));
  2219   0028DC  0E7A               	movlw	122
  2220   0028DE  6E09               	movwf	(??_splash_screen+1)^(0+1280),c
  2221   0028E0  0EC1               	movlw	193
  2222   0028E2  6E08               	movwf	??_splash_screen^(0+1280),c
  2223   0028E4  0E82               	movlw	130
  2224   0028E6                     u297:
  2225   0028E6  2EE8               	decfsz	wreg,f,c
  2226   0028E8  D7FE               	bra	u297
  2227   0028EA  2E08               	decfsz	??_splash_screen^(0+1280),f,c
  2228   0028EC  D7FC               	bra	u297
  2229   0028EE  2E09               	decfsz	(??_splash_screen+1)^(0+1280),f,c
  2230   0028F0  D7FA               	bra	u297
  2231   0028F2                     
  2232                           ;maincode02.c: 48:     BORRAR_LCD();
  2233   0028F2  EC3E  F015         	call	_BORRAR_LCD	;wreg free
  2234   0028F6  0012               	return		;funcret
  2235   0028F8                     __end_of_splash_screen:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function _POS_CURSOR *****************
  2239 ;; Defined at:
  2240 ;;		line 6 in file "LCD.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  fila            1    wreg     unsigned char 
  2243 ;;  columna         1    3[COMRAM] unsigned char 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  fila            1    4[COMRAM] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2255 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2259 ;;Total ram usage:        2 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 2
  2262 ;; This function calls:
  2263 ;;		_ENVIA_LCD_CMD
  2264 ;; This function is called by:
  2265 ;;		_splash_screen
  2266 ;;		_main
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text2
  2271   0028F8                     __ptext2:
  2272                           	callstack 0
  2273   0028F8                     _POS_CURSOR:
  2274                           	callstack 123
  2275                           
  2276                           ;incstack = 0
  2277                           ;POS_CURSOR@fila stored from wreg
  2278   0028F8  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  2279   0028FA                     
  2280                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2281   0028FA  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  2282   0028FC  A4D8               	btfss	status,2,c
  2283   0028FE  EF83  F014         	goto	u191
  2284   002902  EF85  F014         	goto	u190
  2285   002906                     u191:
  2286   002906  EF8B  F014         	goto	l1086
  2287   00290A                     u190:
  2288   00290A                     
  2289                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2290   00290A  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2291   00290C  0F80               	addlw	128
  2292   00290E  ECB2  F014         	call	_ENVIA_LCD_CMD
  2293                           
  2294                           ;LCD.c: 11:  }
  2295   002912  EF98  F014         	goto	l24
  2296   002916                     l1086:
  2297   002916  0E02               	movlw	2
  2298   002918  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2299   00291A  A4D8               	btfss	status,2,c
  2300   00291C  EF92  F014         	goto	u201
  2301   002920  EF94  F014         	goto	u200
  2302   002924                     u201:
  2303   002924  EF98  F014         	goto	l24
  2304   002928                     u200:
  2305   002928                     
  2306                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2307   002928  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2308   00292A  0FC0               	addlw	192
  2309   00292C  ECB2  F014         	call	_ENVIA_LCD_CMD
  2310   002930                     l24:
  2311   002930  0012               	return		;funcret
  2312   002932                     __end_of_POS_CURSOR:
  2313                           	callstack 0
  2314                           
  2315 ;; *************** function _ESCRIBE_MENSAJE *****************
  2316 ;; Defined at:
  2317 ;;		line 41 in file "LCD.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2320 ;;		 -> STR_3(9), STR_2(17), STR_1(16), 
  2321 ;;  tam             1    4[COMRAM] unsigned char 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  i               1    6[COMRAM] unsigned char 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      void 
  2326 ;; Registers used:
  2327 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2336 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2337 ;;Total ram usage:        4 bytes
  2338 ;; Hardware stack levels used: 1
  2339 ;; Hardware stack levels required when called: 2
  2340 ;; This function calls:
  2341 ;;		_ENVIA_CHAR
  2342 ;; This function is called by:
  2343 ;;		_splash_screen
  2344 ;;		_main
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text3
  2349   002996                     __ptext3:
  2350                           	callstack 0
  2351   002996                     _ESCRIBE_MENSAJE:
  2352                           	callstack 123
  2353   002996                     
  2354                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2355   002996  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2356                           
  2357                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2358   002998  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2359   00299A  EFD9  F014         	goto	l1096
  2360   00299E                     l1092:
  2361                           
  2362                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2363   00299E  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  2364   0029A0  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2365   0029A2  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  2366   0029A4  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2367   0029A8                     	if	0	;There is only one active tblptr byte
  2368   0029A8                     	endif
  2369   0029A8                     	if	0	;tblptru may be non-zero
  2370   0029A8                     	endif
  2371   0029A8                     	if	0	;tblptru may be non-zero
  2372   0029A8                     	endif
  2373   0029A8  0008               	tblrd		*
  2374   0029AA  50F5               	movf	tablat,w,c
  2375   0029AC  EC99  F014         	call	_ENVIA_CHAR
  2376   0029B0                     
  2377                           ;LCD.c: 47:  }
  2378   0029B0  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  2379   0029B2                     l1096:
  2380   0029B2  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  2381   0029B4  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2382   0029B6  A0D8               	btfss	status,0,c
  2383   0029B8  EFE0  F014         	goto	u211
  2384   0029BC  EFE2  F014         	goto	u210
  2385   0029C0                     u211:
  2386   0029C0  EFCF  F014         	goto	l1092
  2387   0029C4                     u210:
  2388   0029C4  0012               	return		;funcret
  2389   0029C6                     __end_of_ESCRIBE_MENSAJE:
  2390                           	callstack 0
  2391                           
  2392 ;; *************** function _ENVIA_CHAR *****************
  2393 ;; Defined at:
  2394 ;;		line 50 in file "LCD.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  dato            1    wreg     unsigned char 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  dato            1    1[COMRAM] unsigned char 
  2399 ;;  aux             1    2[COMRAM] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2412 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2413 ;;Total ram usage:        2 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 1
  2416 ;; This function calls:
  2417 ;;		_ENVIA_NIBBLE
  2418 ;;		_LEER_LCD
  2419 ;; This function is called by:
  2420 ;;		_ESCRIBE_MENSAJE
  2421 ;;		_main
  2422 ;;		_GENERACARACTER
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text4
  2427   002932                     __ptext4:
  2428                           	callstack 0
  2429   002932                     _ENVIA_CHAR:
  2430                           	callstack 123
  2431                           
  2432                           ;incstack = 0
  2433                           ;ENVIA_CHAR@dato stored from wreg
  2434   002932  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2435   002934                     
  2436                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2437   002934  80C1               	bsf	193,0,c	;volatile
  2438   002936                     
  2439                           ;LCD.c: 54:  LEER_LCD();
  2440   002936  ECBD  F013         	call	_LEER_LCD	;wreg free
  2441   00293A                     
  2442                           ;LCD.c: 55:  TRISD = 0x00;
  2443   00293A  6AC9               	clrf	201,c	;volatile
  2444   00293C                     
  2445                           ;LCD.c: 56:         _delay(1200);
  2446   00293C  0EF0               	movlw	240
  2447   00293E                     u307:
  2448   00293E  D000               	nop2	
  2449   002940  2EE8               	decfsz	wreg,f,c
  2450   002942  D7FD               	bra	u307
  2451   002944                     
  2452                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2453   002944  92C1               	bcf	193,1,c	;volatile
  2454   002946                     
  2455                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2456   002946  94C1               	bcf	193,2,c	;volatile
  2457   002948                     
  2458                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2459   002948  80C1               	bsf	193,0,c	;volatile
  2460   00294A                     
  2461                           ;LCD.c: 61:  aux = dato & 0xF0;
  2462   00294A  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2463   00294C  0BF0               	andlw	240
  2464   00294E  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2465   002950                     
  2466                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2467   002950  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2468   002952  EC23  F015         	call	_ENVIA_NIBBLE
  2469   002956                     
  2470                           ;LCD.c: 63:  aux = dato << 4;
  2471   002956  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2472   002958  0BF0               	andlw	240
  2473   00295A  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2474   00295C                     
  2475                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2476   00295C  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2477   00295E  EC23  F015         	call	_ENVIA_NIBBLE
  2478   002962  0012               	return		;funcret
  2479   002964                     __end_of_ENVIA_CHAR:
  2480                           	callstack 0
  2481                           
  2482 ;; *************** function _lcd_init *****************
  2483 ;; Defined at:
  2484 ;;		line 29 in file "maincode02.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2502 ;;Total ram usage:        1 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; Hardware stack levels required when called: 3
  2505 ;; This function calls:
  2506 ;;		_BORRAR_LCD
  2507 ;;		_CURSOR_HOME
  2508 ;;		_CURSOR_ONOFF
  2509 ;;		_LCD_CONFIG
  2510 ;; This function is called by:
  2511 ;;		_main
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text5
  2516   0029F6                     __ptext5:
  2517                           	callstack 0
  2518   0029F6                     _lcd_init:
  2519                           	callstack 123
  2520   0029F6                     
  2521                           ;maincode02.c: 30:     TRISD = 0x00;
  2522   0029F6  6AC9               	clrf	201,c	;volatile
  2523                           
  2524                           ;maincode02.c: 31:     ANSELD = 0x00;
  2525   0029F8  0104               	movlb	4	; () banked
  2526   0029FA  6B18               	clrf	24,b	;volatile
  2527                           
  2528                           ;maincode02.c: 32:     TRISFbits.TRISF0 = 0;
  2529   0029FC  90CB               	bcf	203,0,c	;volatile
  2530                           
  2531                           ;maincode02.c: 33:     ANSELFbits.ANSELF0 = 0;
  2532   0029FE  9128               	bcf	40,0,b	;volatile
  2533   002A00                     
  2534                           ; BSR set to: 4
  2535                           ;maincode02.c: 34:     LCD_CONFIG();
  2536   002A00  EC28  F014         	call	_LCD_CONFIG	;wreg free
  2537   002A04                     
  2538                           ;maincode02.c: 35:     _delay((unsigned long)((19)*(32000000UL/4000.0)));
  2539   002A04  0EC6               	movlw	198
  2540   002A06  6E05               	movwf	??_lcd_init^(0+1280),c
  2541   002A08  0E66               	movlw	102
  2542   002A0A                     u317:
  2543   002A0A  2EE8               	decfsz	wreg,f,c
  2544   002A0C  D7FE               	bra	u317
  2545   002A0E  2E05               	decfsz	??_lcd_init^(0+1280),f,c
  2546   002A10  D7FC               	bra	u317
  2547   002A12                     
  2548                           ;maincode02.c: 36:     BORRAR_LCD();
  2549   002A12  EC3E  F015         	call	_BORRAR_LCD	;wreg free
  2550   002A16                     
  2551                           ;maincode02.c: 37:     CURSOR_HOME();
  2552   002A16  EC3A  F015         	call	_CURSOR_HOME	;wreg free
  2553   002A1A                     
  2554                           ;maincode02.c: 38:     CURSOR_ONOFF(1);
  2555   002A1A  0E01               	movlw	1
  2556   002A1C  ECE3  F014         	call	_CURSOR_ONOFF
  2557   002A20                     
  2558                           ;maincode02.c: 39:     LATFbits.LATF0 = 1;
  2559   002A20  80C3               	bsf	195,0,c	;volatile
  2560   002A22  0012               	return		;funcret
  2561   002A24                     __end_of_lcd_init:
  2562                           	callstack 0
  2563                           
  2564 ;; *************** function _LCD_CONFIG *****************
  2565 ;; Defined at:
  2566 ;;		line 72 in file "LCD.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;		None
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, status,0, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2582 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2583 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2584 ;;Total ram usage:        1 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 2
  2587 ;; This function calls:
  2588 ;;		_ENVIA_LCD_CMD
  2589 ;;		_ENVIA_NIBBLE
  2590 ;; This function is called by:
  2591 ;;		_lcd_init
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text6
  2596   002850                     __ptext6:
  2597                           	callstack 0
  2598   002850                     _LCD_CONFIG:
  2599                           	callstack 123
  2600   002850                     
  2601                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  2602   002850  90C1               	bcf	193,0,c	;volatile
  2603                           
  2604                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  2605   002852  92C1               	bcf	193,1,c	;volatile
  2606   002854                     
  2607                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  2608   002854  0E30               	movlw	48
  2609   002856  EC23  F015         	call	_ENVIA_NIBBLE
  2610   00285A                     
  2611                           ;LCD.c: 77:         _delay(24000);
  2612   00285A  0E20               	movlw	32
  2613   00285C  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2614   00285E  0E2A               	movlw	42
  2615   002860                     u327:
  2616   002860  2EE8               	decfsz	wreg,f,c
  2617   002862  D7FE               	bra	u327
  2618   002864  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2619   002866  D7FC               	bra	u327
  2620   002868                     
  2621                           ;LCD.c: 78:         _delay(24000);
  2622   002868  0E20               	movlw	32
  2623   00286A  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2624   00286C  0E2A               	movlw	42
  2625   00286E                     u337:
  2626   00286E  2EE8               	decfsz	wreg,f,c
  2627   002870  D7FE               	bra	u337
  2628   002872  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2629   002874  D7FC               	bra	u337
  2630                           
  2631                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  2632   002876  0E30               	movlw	48
  2633   002878  EC23  F015         	call	_ENVIA_NIBBLE
  2634   00287C                     
  2635                           ;LCD.c: 83:  _delay(1200);
  2636   00287C  0EF0               	movlw	240
  2637   00287E                     u347:
  2638   00287E  D000               	nop2	
  2639   002880  2EE8               	decfsz	wreg,f,c
  2640   002882  D7FD               	bra	u347
  2641   002884                     
  2642                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  2643   002884  0E30               	movlw	48
  2644   002886  EC23  F015         	call	_ENVIA_NIBBLE
  2645   00288A                     
  2646                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  2647   00288A  0E20               	movlw	32
  2648   00288C  EC23  F015         	call	_ENVIA_NIBBLE
  2649   002890                     
  2650                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  2651   002890  0E01               	movlw	1
  2652   002892  ECB2  F014         	call	_ENVIA_LCD_CMD
  2653   002896                     
  2654                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  2655   002896  0E28               	movlw	40
  2656   002898  ECB2  F014         	call	_ENVIA_LCD_CMD
  2657   00289C                     
  2658                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  2659   00289C  0E0F               	movlw	15
  2660   00289E  ECB2  F014         	call	_ENVIA_LCD_CMD
  2661   0028A2                     
  2662                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  2663   0028A2  0E06               	movlw	6
  2664   0028A4  ECB2  F014         	call	_ENVIA_LCD_CMD
  2665   0028A8                     
  2666                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  2667   0028A8  0E01               	movlw	1
  2668   0028AA  ECB2  F014         	call	_ENVIA_LCD_CMD
  2669   0028AE  0012               	return		;funcret
  2670   0028B0                     __end_of_LCD_CONFIG:
  2671                           	callstack 0
  2672                           
  2673 ;; *************** function _CURSOR_ONOFF *****************
  2674 ;; Defined at:
  2675 ;;		line 35 in file "LCD.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  estado          1    wreg     unsigned char 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  estado          1    3[COMRAM] unsigned char 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0, cstack
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2693 ;;Total ram usage:        1 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; Hardware stack levels required when called: 2
  2696 ;; This function calls:
  2697 ;;		_ENVIA_LCD_CMD
  2698 ;; This function is called by:
  2699 ;;		_lcd_init
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text7
  2704   0029C6                     __ptext7:
  2705                           	callstack 0
  2706   0029C6                     _CURSOR_ONOFF:
  2707                           	callstack 123
  2708                           
  2709                           ;incstack = 0
  2710                           ;CURSOR_ONOFF@estado stored from wreg
  2711   0029C6  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  2712   0029C8                     
  2713                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  2714   0029C8  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  2715   0029CA  A4D8               	btfss	status,2,c
  2716   0029CC  EFEA  F014         	goto	u41
  2717   0029D0  EFEC  F014         	goto	u40
  2718   0029D4                     u41:
  2719   0029D4  EFEF  F014         	goto	l918
  2720   0029D8                     u40:
  2721   0029D8  0E0E               	movlw	14
  2722   0029DA  ECB2  F014         	call	_ENVIA_LCD_CMD
  2723   0029DE                     l918:
  2724                           
  2725                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2726   0029DE  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  2727   0029E0  A4D8               	btfss	status,2,c
  2728   0029E2  EFF5  F014         	goto	u51
  2729   0029E6  EFF7  F014         	goto	u50
  2730   0029EA                     u51:
  2731   0029EA  EFFA  F014         	goto	l42
  2732   0029EE                     u50:
  2733   0029EE  0E0C               	movlw	12
  2734   0029F0  ECB2  F014         	call	_ENVIA_LCD_CMD
  2735   0029F4                     l42:
  2736   0029F4  0012               	return		;funcret
  2737   0029F6                     __end_of_CURSOR_ONOFF:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _CURSOR_HOME *****************
  2741 ;; Defined at:
  2742 ;;		line 30 in file "LCD.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;		None
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2760 ;;Total ram usage:        0 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; Hardware stack levels required when called: 2
  2763 ;; This function calls:
  2764 ;;		_ENVIA_LCD_CMD
  2765 ;; This function is called by:
  2766 ;;		_lcd_init
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text8
  2771   002A74                     __ptext8:
  2772                           	callstack 0
  2773   002A74                     _CURSOR_HOME:
  2774                           	callstack 123
  2775   002A74                     
  2776                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  2777   002A74  0E02               	movlw	2
  2778   002A76  ECB2  F014         	call	_ENVIA_LCD_CMD
  2779   002A7A  0012               	return		;funcret
  2780   002A7C                     __end_of_CURSOR_HOME:
  2781                           	callstack 0
  2782                           
  2783 ;; *************** function _BORRAR_LCD *****************
  2784 ;; Defined at:
  2785 ;;		line 67 in file "LCD.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2803 ;;Total ram usage:        0 bytes
  2804 ;; Hardware stack levels used: 1
  2805 ;; Hardware stack levels required when called: 2
  2806 ;; This function calls:
  2807 ;;		_ENVIA_LCD_CMD
  2808 ;; This function is called by:
  2809 ;;		_lcd_init
  2810 ;;		_splash_screen
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text9
  2815   002A7C                     __ptext9:
  2816                           	callstack 0
  2817   002A7C                     _BORRAR_LCD:
  2818                           	callstack 123
  2819   002A7C                     
  2820                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  2821   002A7C  0E01               	movlw	1
  2822   002A7E  ECB2  F014         	call	_ENVIA_LCD_CMD
  2823   002A82  0012               	return		;funcret
  2824   002A84                     __end_of_BORRAR_LCD:
  2825                           	callstack 0
  2826                           
  2827 ;; *************** function _ENVIA_LCD_CMD *****************
  2828 ;; Defined at:
  2829 ;;		line 104 in file "LCD.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  dato            1    wreg     unsigned char 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  dato            1    1[COMRAM] unsigned char 
  2834 ;;  aux             1    2[COMRAM] unsigned char 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      void 
  2837 ;; Registers used:
  2838 ;;		wreg, status,2, status,0, cstack
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2845 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2848 ;;Total ram usage:        2 bytes
  2849 ;; Hardware stack levels used: 1
  2850 ;; Hardware stack levels required when called: 1
  2851 ;; This function calls:
  2852 ;;		_ENVIA_NIBBLE
  2853 ;;		_LEER_LCD
  2854 ;; This function is called by:
  2855 ;;		_POS_CURSOR
  2856 ;;		_CURSOR_HOME
  2857 ;;		_CURSOR_ONOFF
  2858 ;;		_BORRAR_LCD
  2859 ;;		_LCD_CONFIG
  2860 ;;		_BLINK_CURSOR
  2861 ;;		_DISPLAY_ONOFF
  2862 ;;		_GENERACARACTER
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text10
  2867   002964                     __ptext10:
  2868                           	callstack 0
  2869   002964                     _ENVIA_LCD_CMD:
  2870                           	callstack 123
  2871                           
  2872                           ;incstack = 0
  2873                           ;ENVIA_LCD_CMD@dato stored from wreg
  2874   002964  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  2875   002966                     
  2876                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2877   002966  90C1               	bcf	193,0,c	;volatile
  2878   002968                     
  2879                           ;LCD.c: 108:  LEER_LCD();
  2880   002968  ECBD  F013         	call	_LEER_LCD	;wreg free
  2881   00296C                     
  2882                           ;LCD.c: 109:  TRISD = 0b00000000;
  2883   00296C  6AC9               	clrf	201,c	;volatile
  2884   00296E                     
  2885                           ;LCD.c: 111:         _delay(1200);
  2886   00296E  0EF0               	movlw	240
  2887   002970                     u357:
  2888   002970  D000               	nop2	
  2889   002972  2EE8               	decfsz	wreg,f,c
  2890   002974  D7FD               	bra	u357
  2891   002976                     
  2892                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2893   002976  92C1               	bcf	193,1,c	;volatile
  2894   002978                     
  2895                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2896   002978  94C1               	bcf	193,2,c	;volatile
  2897   00297A                     
  2898                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2899   00297A  90C1               	bcf	193,0,c	;volatile
  2900   00297C                     
  2901                           ;LCD.c: 115:  aux = dato & 0xF0;
  2902   00297C  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2903   00297E  0BF0               	andlw	240
  2904   002980  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2905   002982                     
  2906                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2907   002982  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2908   002984  EC23  F015         	call	_ENVIA_NIBBLE
  2909   002988                     
  2910                           ;LCD.c: 117:  aux = dato<<4;
  2911   002988  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2912   00298A  0BF0               	andlw	240
  2913   00298C  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2914   00298E                     
  2915                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2916   00298E  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2917   002990  EC23  F015         	call	_ENVIA_NIBBLE
  2918   002994  0012               	return		;funcret
  2919   002996                     __end_of_ENVIA_LCD_CMD:
  2920                           	callstack 0
  2921                           
  2922 ;; *************** function _LEER_LCD *****************
  2923 ;; Defined at:
  2924 ;;		line 121 in file "LCD.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  aux             1    0[COMRAM] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2941 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2942 ;;Total ram usage:        1 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_ENVIA_CHAR
  2948 ;;		_ENVIA_LCD_CMD
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text11
  2953   00277A                     __ptext11:
  2954                           	callstack 0
  2955   00277A                     _LEER_LCD:
  2956                           	callstack 123
  2957   00277A                     
  2958                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  2959   00277A  0EF8               	movlw	248
  2960   00277C  6EC9               	movwf	201,c	;volatile
  2961   00277E                     
  2962                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  2963   00277E  90C1               	bcf	193,0,c	;volatile
  2964   002780                     
  2965                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  2966   002780  82C1               	bsf	193,1,c	;volatile
  2967   002782                     
  2968                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  2969   002782  84C1               	bsf	193,2,c	;volatile
  2970   002784                     
  2971                           ;LCD.c: 128:         _delay(1200);
  2972   002784  0EF0               	movlw	240
  2973   002786                     u367:
  2974   002786  D000               	nop2	
  2975   002788  2EE8               	decfsz	wreg,f,c
  2976   00278A  D7FD               	bra	u367
  2977   00278C                     
  2978                           ;LCD.c: 130:  aux = PORTD;
  2979   00278C  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2980   002790                     
  2981                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  2982   002790  94C1               	bcf	193,2,c	;volatile
  2983   002792                     
  2984                           ;LCD.c: 132:         _delay(1200);
  2985   002792  0EF0               	movlw	240
  2986   002794                     u377:
  2987   002794  D000               	nop2	
  2988   002796  2EE8               	decfsz	wreg,f,c
  2989   002798  D7FD               	bra	u377
  2990   00279A                     
  2991                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  2992   00279A  84C1               	bsf	193,2,c	;volatile
  2993   00279C                     
  2994                           ;LCD.c: 135:         _delay(1200);
  2995   00279C  0EF0               	movlw	240
  2996   00279E                     u387:
  2997   00279E  D000               	nop2	
  2998   0027A0  2EE8               	decfsz	wreg,f,c
  2999   0027A2  D7FD               	bra	u387
  3000   0027A4                     
  3001                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3002   0027A4  94C1               	bcf	193,2,c	;volatile
  3003   0027A6                     l836:
  3004                           
  3005                           ;LCD.c: 138:  aux = aux & 0x80;
  3006   0027A6  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  3007   0027A8  0B80               	andlw	128
  3008   0027AA  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  3009                           
  3010                           ;LCD.c: 139:  while(aux == 0x80)
  3011   0027AC  EFEC  F013         	goto	l850
  3012   0027B0                     l67:
  3013                           
  3014                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3015   0027B0  84C1               	bsf	193,2,c	;volatile
  3016   0027B2                     
  3017                           ;LCD.c: 142:             _delay(1200);
  3018   0027B2  0EF0               	movlw	240
  3019   0027B4                     u397:
  3020   0027B4  D000               	nop2	
  3021   0027B6  2EE8               	decfsz	wreg,f,c
  3022   0027B8  D7FD               	bra	u397
  3023   0027BA                     
  3024                           ;LCD.c: 143:             aux = PORTD;
  3025   0027BA  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  3026   0027BE                     
  3027                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3028   0027BE  94C1               	bcf	193,2,c	;volatile
  3029                           
  3030                           ;LCD.c: 145:             _delay(1200);
  3031   0027C0  0EF0               	movlw	240
  3032   0027C2                     u407:
  3033   0027C2  D000               	nop2	
  3034   0027C4  2EE8               	decfsz	wreg,f,c
  3035   0027C6  D7FD               	bra	u407
  3036   0027C8                     
  3037                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3038   0027C8  84C1               	bsf	193,2,c	;volatile
  3039                           
  3040                           ;LCD.c: 147:             _delay(1200);
  3041   0027CA  0EF0               	movlw	240
  3042   0027CC                     u417:
  3043   0027CC  D000               	nop2	
  3044   0027CE  2EE8               	decfsz	wreg,f,c
  3045   0027D0  D7FD               	bra	u417
  3046   0027D2                     
  3047                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  3048   0027D2  94C1               	bcf	193,2,c	;volatile
  3049   0027D4  EFD3  F013         	goto	l836
  3050   0027D8                     l850:
  3051                           
  3052                           ;LCD.c: 139:  while(aux == 0x80)
  3053   0027D8  0E80               	movlw	128
  3054   0027DA  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  3055   0027DC  B4D8               	btfsc	status,2,c
  3056   0027DE  EFF3  F013         	goto	u11
  3057   0027E2  EFF5  F013         	goto	u10
  3058   0027E6                     u11:
  3059   0027E6  EFD8  F013         	goto	l67
  3060   0027EA                     u10:
  3061   0027EA  0012               	return		;funcret
  3062   0027EC                     __end_of_LEER_LCD:
  3063                           	callstack 0
  3064                           
  3065 ;; *************** function _ENVIA_NIBBLE *****************
  3066 ;; Defined at:
  3067 ;;		line 93 in file "LCD.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  dato            1    wreg     unsigned char 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  dato            1    0[COMRAM] unsigned char 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      void 
  3074 ;; Registers used:
  3075 ;;		wreg, status,2, status,0
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3085 ;;Total ram usage:        1 bytes
  3086 ;; Hardware stack levels used: 1
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_ENVIA_CHAR
  3091 ;;		_LCD_CONFIG
  3092 ;;		_ENVIA_LCD_CMD
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text12
  3097   002A46                     __ptext12:
  3098                           	callstack 0
  3099   002A46                     _ENVIA_NIBBLE:
  3100                           	callstack 123
  3101                           
  3102                           ;incstack = 0
  3103                           ;ENVIA_NIBBLE@dato stored from wreg
  3104   002A46  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  3105   002A48                     
  3106                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3107   002A48  0E0F               	movlw	15
  3108   002A4A  16C1               	andwf	193,f,c	;volatile
  3109                           
  3110                           ;LCD.c: 96:  dato &= 0xF0;
  3111   002A4C  0EF0               	movlw	240
  3112   002A4E  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  3113                           
  3114                           ;LCD.c: 97:  LATD|= dato;
  3115   002A50  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  3116   002A52  12C1               	iorwf	193,f,c	;volatile
  3117   002A54                     
  3118                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3119   002A54  84C1               	bsf	193,2,c	;volatile
  3120   002A56                     
  3121                           ;LCD.c: 100:         _delay(1200);
  3122   002A56  0EF0               	movlw	240
  3123   002A58                     u427:
  3124   002A58  D000               	nop2	
  3125   002A5A  2EE8               	decfsz	wreg,f,c
  3126   002A5C  D7FD               	bra	u427
  3127   002A5E                     
  3128                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3129   002A5E  94C1               	bcf	193,2,c	;volatile
  3130   002A60  0012               	return		;funcret
  3131   002A62                     __end_of_ENVIA_NIBBLE:
  3132                           	callstack 0
  3133                           
  3134 ;; *************** function _configuro *****************
  3135 ;; Defined at:
  3136 ;;		line 14 in file "maincode02.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;		None
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;		None
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      void 
  3143 ;; Registers used:
  3144 ;;		wreg, status,2
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3154 ;;Total ram usage:        0 bytes
  3155 ;; Hardware stack levels used: 1
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_main
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text13
  3164   002A24                     __ptext13:
  3165                           	callstack 0
  3166   002A24                     _configuro:
  3167                           	callstack 126
  3168   002A24                     
  3169                           ;maincode02.c: 16:     OSCCON1 = 0x60;
  3170   002A24  0E60               	movlw	96
  3171   002A26  0100               	movlb	0	; () banked
  3172   002A28  6FAD               	movwf	173,b	;volatile
  3173                           
  3174                           ;maincode02.c: 17:     OSCFRQ = 0x06;
  3175   002A2A  0E06               	movlw	6
  3176   002A2C  6FB1               	movwf	177,b	;volatile
  3177                           
  3178                           ;maincode02.c: 18:     OSCEN = 0x40;
  3179   002A2E  0E40               	movlw	64
  3180   002A30  6FB3               	movwf	179,b	;volatile
  3181   002A32                     
  3182                           ; BSR set to: 0
  3183                           ;maincode02.c: 20:     TRISAbits.TRISA0 = 1;
  3184   002A32  80C6               	bsf	198,0,c	;volatile
  3185   002A34                     
  3186                           ; BSR set to: 0
  3187                           ;maincode02.c: 21:     ANSELAbits.ANSELA0 = 1;
  3188   002A34  0104               	movlb	4	; () banked
  3189   002A36  8100               	bsf	0,0,b	;volatile
  3190   002A38                     
  3191                           ; BSR set to: 4
  3192                           ;maincode02.c: 22:     ADCON0bits.CS = 1;
  3193   002A38  0103               	movlb	3	; () banked
  3194   002A3A  89F3               	bsf	243,4,b	;volatile
  3195   002A3C                     
  3196                           ; BSR set to: 3
  3197                           ;maincode02.c: 24:     ADPCH = 0x00;
  3198   002A3C  6BEC               	clrf	236,b	;volatile
  3199                           
  3200                           ;maincode02.c: 25:     ADCON0bits.ADFM = 0;
  3201   002A3E  0EF3               	movlw	-13
  3202   002A40  17F3               	andwf	243,f,b	;volatile
  3203   002A42                     
  3204                           ; BSR set to: 3
  3205                           ;maincode02.c: 26:     ADCON0bits.ADON = 1;
  3206   002A42  8FF3               	bsf	243,7,b	;volatile
  3207   002A44                     
  3208                           ; BSR set to: 3
  3209   002A44  0012               	return		;funcret
  3210   002A46                     __end_of_configuro:
  3211                           	callstack 0
  3212                           
  3213 ;; *************** function ___lwmod *****************
  3214 ;; Defined at:
  3215 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  dividend        2    0[COMRAM] unsigned int 
  3218 ;;  divisor         2    2[COMRAM] unsigned int 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  counter         1    4[COMRAM] unsigned char 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  2    0[COMRAM] unsigned int 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3233 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3234 ;;Total ram usage:        5 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_main
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text14
  3244   0027EC                     __ptext14:
  3245                           	callstack 0
  3246   0027EC                     ___lwmod:
  3247                           	callstack 126
  3248   0027EC  5003               	movf	___lwmod@divisor^(0+1280),w,c
  3249   0027EE  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  3250   0027F0  B4D8               	btfsc	status,2,c
  3251   0027F2  EFFD  F013         	goto	u251
  3252   0027F6  EFFF  F013         	goto	u250
  3253   0027FA                     u251:
  3254   0027FA  EF23  F014         	goto	l642
  3255   0027FE                     u250:
  3256   0027FE  0E01               	movlw	1
  3257   002800  6E05               	movwf	___lwmod@counter^(0+1280),c
  3258   002802  EF07  F014         	goto	l1136
  3259   002806                     l1134:
  3260   002806  90D8               	bcf	status,0,c
  3261   002808  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  3262   00280A  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  3263   00280C  2A05               	incf	___lwmod@counter^(0+1280),f,c
  3264   00280E                     l1136:
  3265   00280E  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  3266   002810  EF0C  F014         	goto	u261
  3267   002814  EF0E  F014         	goto	u260
  3268   002818                     u261:
  3269   002818  EF03  F014         	goto	l1134
  3270   00281C                     u260:
  3271   00281C                     l1138:
  3272   00281C  5003               	movf	___lwmod@divisor^(0+1280),w,c
  3273   00281E  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  3274   002820  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  3275   002822  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  3276   002824  A0D8               	btfss	status,0,c
  3277   002826  EF17  F014         	goto	u271
  3278   00282A  EF19  F014         	goto	u270
  3279   00282E                     u271:
  3280   00282E  EF1D  F014         	goto	l1142
  3281   002832                     u270:
  3282   002832  5003               	movf	___lwmod@divisor^(0+1280),w,c
  3283   002834  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  3284   002836  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  3285   002838  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  3286   00283A                     l1142:
  3287   00283A  90D8               	bcf	status,0,c
  3288   00283C  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  3289   00283E  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  3290   002840  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  3291   002842  EF0E  F014         	goto	l1138
  3292   002846                     l642:
  3293   002846  C501  F501         	movff	___lwmod@dividend,?___lwmod
  3294   00284A  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  3295   00284E  0012               	return		;funcret
  3296   002850                     __end_of___lwmod:
  3297                           	callstack 0
  3298                           
  3299 ;; *************** function ___lwdiv *****************
  3300 ;; Defined at:
  3301 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  dividend        2    5[COMRAM] unsigned int 
  3304 ;;  divisor         2    7[COMRAM] unsigned int 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  quotient        2    9[COMRAM] unsigned int 
  3307 ;;  counter         1   11[COMRAM] unsigned char 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  2    5[COMRAM] unsigned int 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3318 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3320 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3321 ;;Total ram usage:        7 bytes
  3322 ;; Hardware stack levels used: 1
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text15
  3331   002706                     __ptext15:
  3332                           	callstack 0
  3333   002706                     ___lwdiv:
  3334                           	callstack 126
  3335   002706  0E00               	movlw	0
  3336   002708  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  3337   00270A  0E00               	movlw	0
  3338   00270C  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  3339   00270E  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  3340   002710  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  3341   002712  B4D8               	btfsc	status,2,c
  3342   002714  EF8E  F013         	goto	u221
  3343   002718  EF90  F013         	goto	u220
  3344   00271C                     u221:
  3345   00271C  EFB8  F013         	goto	l632
  3346   002720                     u220:
  3347   002720  0E01               	movlw	1
  3348   002722  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  3349   002724  EF98  F013         	goto	l1116
  3350   002728                     l1114:
  3351   002728  90D8               	bcf	status,0,c
  3352   00272A  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  3353   00272C  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  3354   00272E  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  3355   002730                     l1116:
  3356   002730  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  3357   002732  EF9D  F013         	goto	u231
  3358   002736  EF9F  F013         	goto	u230
  3359   00273A                     u231:
  3360   00273A  EF94  F013         	goto	l1114
  3361   00273E                     u230:
  3362   00273E                     l1118:
  3363   00273E  90D8               	bcf	status,0,c
  3364   002740  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  3365   002742  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  3366   002744  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  3367   002746  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  3368   002748  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  3369   00274A  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  3370   00274C  A0D8               	btfss	status,0,c
  3371   00274E  EFAB  F013         	goto	u241
  3372   002752  EFAD  F013         	goto	u240
  3373   002756                     u241:
  3374   002756  EFB2  F013         	goto	l1126
  3375   00275A                     u240:
  3376   00275A  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  3377   00275C  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  3378   00275E  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  3379   002760  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  3380   002762  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  3381   002764                     l1126:
  3382   002764  90D8               	bcf	status,0,c
  3383   002766  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  3384   002768  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  3385   00276A  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  3386   00276C  EF9F  F013         	goto	l1118
  3387   002770                     l632:
  3388   002770  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  3389   002774  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3390   002778  0012               	return		;funcret
  3391   00277A                     __end_of___lwdiv:
  3392                           	callstack 0
  3393                           
  3394                           	psect	rparam
  3395   000001                     ___rparam_used  equ	1
  3396   000000                     ___param_bank   equ	0
  3397   000000                     __Lparam        equ	__Lrparam
  3398   000000                     __Hparam        equ	__Hrparam
  3399                           
  3400                           	psect	config
  3401                           
  3402                           ;Config register CONFIG1 @ 0x300000
  3403                           ;	External Oscillator Selection
  3404                           ;	FEXTOSC = OFF, Oscillator not enabled
  3405                           ;	Reset Oscillator Selection
  3406                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3407   300000                     	org	3145728
  3408   300000  FC                 	db	252
  3409                           
  3410                           ;Config register CONFIG2 @ 0x300001
  3411                           ;	Clock out Enable bit
  3412                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3413                           ;	PRLOCKED One-Way Set Enable bit
  3414                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3415                           ;	Clock Switch Enable bit
  3416                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3417                           ;	Fail-Safe Clock Monitor Enable bit
  3418                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3419   300001                     	org	3145729
  3420   300001  FF                 	db	255
  3421                           
  3422                           ;Config register CONFIG3 @ 0x300002
  3423                           ;	MCLR Enable bit
  3424                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3425                           ;	Power-up timer selection bits
  3426                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  3427                           ;	Multi-vector enable bit
  3428                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3429                           ;	IVTLOCK bit One-way set enable bit
  3430                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3431                           ;	Low Power BOR Enable bit
  3432                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3433                           ;	Brown-out Reset Enable bits
  3434                           ;	BOREN = OFF, Brown-out Reset disabled
  3435   300002                     	org	3145730
  3436   300002  3D                 	db	61
  3437                           
  3438                           ;Config register CONFIG4 @ 0x300003
  3439                           ;	Brown-out Reset Voltage Selection bits
  3440                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3441                           ;	ZCD Disable bit
  3442                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3443                           ;	PPSLOCK bit One-Way Set Enable bit
  3444                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3445                           ;	Stack Full/Underflow Reset Enable bit
  3446                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3447                           ;	Low Voltage Programming Enable bit
  3448                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3449                           ;	Extended Instruction Set Enable bit
  3450                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3451   300003                     	org	3145731
  3452   300003  DF                 	db	223
  3453                           
  3454                           ;Config register CONFIG5 @ 0x300004
  3455                           ;	WDT Period selection bits
  3456                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3457                           ;	WDT operating mode
  3458                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3459   300004                     	org	3145732
  3460   300004  9F                 	db	159
  3461                           
  3462                           ;Config register CONFIG6 @ 0x300005
  3463                           ;	WDT Window Select bits
  3464                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3465                           ;	WDT input clock selector
  3466                           ;	WDTCCS = SC, Software Control
  3467   300005                     	org	3145733
  3468   300005  FF                 	db	255
  3469                           
  3470                           ;Config register CONFIG7 @ 0x300006
  3471                           ;	Boot Block Size selection bits
  3472                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3473                           ;	Boot Block enable bit
  3474                           ;	BBEN = OFF, Boot block disabled
  3475                           ;	Storage Area Flash enable bit
  3476                           ;	SAFEN = OFF, SAF disabled
  3477                           ;	Background Debugger
  3478                           ;	DEBUG = OFF, Background Debugger disabled
  3479   300006                     	org	3145734
  3480   300006  FF                 	db	255
  3481                           
  3482                           ;Config register CONFIG8 @ 0x300007
  3483                           ;	Boot Block Write Protection bit
  3484                           ;	WRTB = OFF, Boot Block not Write protected
  3485                           ;	Configuration Register Write Protection bit
  3486                           ;	WRTC = OFF, Configuration registers not Write protected
  3487                           ;	Data EEPROM Write Protection bit
  3488                           ;	WRTD = OFF, Data EEPROM not Write protected
  3489                           ;	SAF Write protection bit
  3490                           ;	WRTSAF = OFF, SAF not Write Protected
  3491                           ;	Application Block write protection bit
  3492                           ;	WRTAPP = OFF, Application Block not write protected
  3493   300007                     	org	3145735
  3494   300007  FF                 	db	255
  3495                           
  3496                           ;Config register CONFIG10 @ 0x300009
  3497                           ;	PFM and Data EEPROM Code Protection bit
  3498                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3499   300009                     	org	3145737
  3500   300009  FF                 	db	255
  3501                           tosu	equ	0x4FF
  3502                           tosh	equ	0x4FE
  3503                           tosl	equ	0x4FD
  3504                           stkptr	equ	0x4FC
  3505                           pclatu	equ	0x4FB
  3506                           pclath	equ	0x4FA
  3507                           pcl	equ	0x4F9
  3508                           tblptru	equ	0x4F8
  3509                           tblptrh	equ	0x4F7
  3510                           tblptrl	equ	0x4F6
  3511                           tablat	equ	0x4F5
  3512                           prodh	equ	0x4F4
  3513                           prodl	equ	0x4F3
  3514                           indf0	equ	0x4EF
  3515                           postinc0	equ	0x4EE
  3516                           postdec0	equ	0x4ED
  3517                           preinc0	equ	0x4EC
  3518                           plusw0	equ	0x4EB
  3519                           fsr0h	equ	0x4EA
  3520                           fsr0l	equ	0x4E9
  3521                           wreg	equ	0x4E8
  3522                           indf1	equ	0x4E7
  3523                           postinc1	equ	0x4E6
  3524                           postdec1	equ	0x4E5
  3525                           preinc1	equ	0x4E4
  3526                           plusw1	equ	0x4E3
  3527                           fsr1h	equ	0x4E2
  3528                           fsr1l	equ	0x4E1
  3529                           bsr	equ	0x4E0
  3530                           indf2	equ	0x4DF
  3531                           postinc2	equ	0x4DE
  3532                           postdec2	equ	0x4DD
  3533                           preinc2	equ	0x4DC
  3534                           plusw2	equ	0x4DB
  3535                           fsr2h	equ	0x4DA
  3536                           fsr2l	equ	0x4D9
  3537                           status	equ	0x4D8

Data Sizes:
    Strings     42
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      14
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[16]), STR_2(CODE[17]), STR_3(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    _splash_screen->_ESCRIBE_MENSAJE
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    ___lwdiv->___lwmod

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1982
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___lwdiv
                            ___lwmod
                          _configuro
                           _lcd_init
                      _splash_screen
 ---------------------------------------------------------------------------------
 (1) _splash_screen                                        2     2      0     562
                                              7 COMRAM     2     2      0
                         _BORRAR_LCD
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     225
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE                                      4     2      2     217
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     165
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     168
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _configuro
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _splash_screen
     _BORRAR_LCD
     _ESCRIBE_MENSAJE
     _POS_CURSOR

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh        831      0       0      0.0%
BITBIGSFRh         268      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBIGSFRlll       173      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     12      14     14.7%
BITBIGSFRllh         5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      14      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jun 12 15:40:48 2025

                     l24 2930                       l42 29F4                       l51 2962  
                     l60 2A60                       l37 2A7A                       l54 2A82  
                     l63 2994                       l48 29C4                       l57 28AE  
                     l67 27B0                       l69 27EA                       u10 27EA  
                     u11 27E6                       u40 29D8                       u41 29D4  
                     u50 29EE                       u51 29EA            _splash_screen 28B0  
          ENVIA_CHAR@aux 0503                      l122 2A22                      l125 28F6  
                    l133 263C                      l119 2A44                      l135 264A  
                    l632 2770                      l642 2846                      l820 2782  
                    l900 2956                      l830 279A                      l822 2784  
                    l814 277A                      l902 295C                      l639 2778  
                    l840 27BA                      l832 279C                      l824 278C  
                    l816 277E                      l912 2A74                      l920 29EE  
                    l649 284E                      l842 27BE                      l850 27D8  
                    l834 27A4                      l826 2790                      l818 2780  
                    l930 2A7C                      l914 29C8                      l852 2A48  
                    l844 27C8                      l836 27A6                      l828 2792  
                    l860 2966                      l916 29D8                      l940 287C  
                    l932 2850                      l854 2A54                      l846 27D2  
                    l838 27B2                      l870 2978                      l862 2968  
                    l918 29DE                      l950 289C                      l942 2884  
                    l934 2854                      l960 2A34                      l856 2A56  
                    l880 298E                      l872 297A                      l864 296C  
                    l952 28A2                      l944 288A                      l936 285A  
                    l962 2A38                      l858 2A5E                      l874 297C  
                    l866 296E                      l954 28A8                      l946 2890  
                    l938 2868                      l970 2A00                      l890 2944  
                    l882 2934                      l964 2A3C                      l956 2A24  
                    l876 2982                      l868 2976                      l948 2896  
                    l980 2A20                      l972 2A04                      l892 2946  
                    l884 2936                      l966 2A42                      l958 2A32  
                    l878 2988                      l974 2A12                      l894 2948  
                    l886 293A                      l976 2A16                      l968 29F6  
                    l896 294A                      l888 293C                      l978 2A1A  
                    l898 2950                      u200 2928                      u201 2924  
                    u210 29C4                      u211 29C0                      u220 2720  
                    u221 271C                      u230 273E                      u231 273A  
                    u240 275A                      u241 2756                      u250 27FE  
                    u251 27FA                      u307 293E                      u260 281C  
                    u261 2818                      u317 2A0A                      u270 2832  
                    u190 290A                      u271 282E                      u407 27C2  
                    u327 2860                      u191 2906                      u280 264A  
                    u417 27CC                      u337 286E                      u281 2646  
                    u427 2A58                      u347 287E                      u357 2970  
                    u367 2786                      u377 2794                      u297 28E6  
                    u387 279E                      u397 27B4              LEER_LCD@aux 0501  
                    wreg 04E8             ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 0501  
         ENVIA_CHAR@dato 0502                     l1100 28BA                     l1110 270E  
                   l1102 28C6                     l1120 2744                     l1112 2720  
                   l1104 28DC                     l1122 275A                     l1114 2728  
                   l1130 27EC                     l1106 28F2                     l1124 2762  
                   l1116 2730                     l1108 2706                     l1140 2832  
                   l1132 27FE                     l1126 2764                     l1118 273E  
                   l1142 283A                     l1134 2806                     l1150 2634  
                   l1128 276A                     l1144 2840                     l1136 280E  
                   l1160 2682                     l1152 2638                     l1138 281C  
                   l1090 2996                     l1082 28FA                     l1162 26B2  
                   l1154 2650                     l1146 262C                     l1092 299E  
                   l1084 290A                     l1164 26E2                     l1156 265A  
                   l1148 2630                     l1094 29B0                     l1086 2916  
                   l1158 2666                     l1096 29B2                     l1088 2928  
                   l1098 28B0                     STR_1 2612                     STR_2 2601  
                   STR_3 2622                     _LATD 04C1                     _main 262C  
                   start FFFC            ?_CURSOR_ONOFF 0501             ___param_bank 0000  
        ??_ENVIA_LCD_CMD 0502         __end_of_LEER_LCD 27EC           ?_splash_screen 0501  
                  ?_main 0501                    _ADPCH 03EC          __end_of___lwdiv 277A  
        __end_of___lwmod 2850                    _OSCEN 00B3                    _PORTD 04D1  
                  _TRISD 04C9              ?_POS_CURSOR 0504                    tablat 04F5  
                  status 04D8           ??_CURSOR_ONOFF 0504          __initialization 2A62  
           __end_of_main 2706          _ESCRIBE_MENSAJE 2996                   ??_main 050D  
          __activetblptr 0001                   _ADRESH 03EB                   _ANSELD 0418  
                 _OSCFRQ 00B1         __end_of_lcd_init 2A24          ??_splash_screen 0508  
   __end_of_ENVIA_NIBBLE 2A62                ??___lwdiv 050A                ??___lwmod 0505  
                 isa$std 0001             __mediumconst 2600                   tblptrh 04F7  
                 tblptrl 04F6                   tblptru 04F8             ??_BORRAR_LCD 0504  
              ?_LEER_LCD 0501               __accesstop 0560  __end_of__initialization 2A66  
           ??_LCD_CONFIG 0504            ___rparam_used 0001             ??_ENVIA_CHAR 0502  
__end_of_ESCRIBE_MENSAJE 29C6           __pcstackCOMRAM 0501       __end_of_BORRAR_LCD 2A84  
       ENVIA_LCD_CMD@aux 0503     __end_of_CURSOR_ONOFF 29F6       __end_of_LCD_CONFIG 28B0  
     __end_of_ENVIA_CHAR 2964               ??_LEER_LCD 0501         ENVIA_NIBBLE@dato 0501  
                _OSCCON1 00AD             ??_POS_CURSOR 0505                ?_lcd_init 0501  
                __Hparam 0000                  __Lparam 0000         ?_ESCRIBE_MENSAJE 0504  
      __end_of_configuro 2A46                  ___lwdiv 2706                  ___lwmod 27EC  
           __psmallconst 2600    __end_of_ENVIA_LCD_CMD 2996                  __pcinit 2A62  
     __end_of_POS_CURSOR 2932                  __ramtop 2600                  __ptext0 262C  
                __ptext1 28B0                  __ptext2 28F8                  __ptext3 2996  
                __ptext4 2932                  __ptext5 29F6                  __ptext6 2850  
                __ptext7 29C6                  __ptext8 2A74                  __ptext9 2A7C  
             ??_lcd_init 0505             _ENVIA_NIBBLE 2A46     end_of_initialization 2A66  
              _TRISAbits 04C6                _TRISFbits 04CB             _CURSOR_ONOFF 29C6  
     CURSOR_ONOFF@estado 0504    __end_of_splash_screen 28F8            ??_CURSOR_HOME 0504  
    start_initialization 2A62        ENVIA_LCD_CMD@dato 0502              __pbssCOMRAM 050D  
    __end_of_CURSOR_HOME 2A7C         ___lwdiv@dividend 0506                 ?___lwdiv 0506  
               ?___lwmod 0501                _configuro 2A24              __smallconst 2600  
       ___lwdiv@quotient 050A                 _LEER_LCD 277A                 _LATDbits 04C1  
               _LATFbits 04C3         ESCRIBE_MENSAJE@i 0507           POS_CURSOR@fila 0505  
             ?_configuro 0501               _ADCON0bits 03F3              _CURSOR_HOME 2A74  
            _lectura_ADC 050D                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 2600               _ANSELAbits 0400               _ANSELFbits 0428  
        ___lwdiv@divisor 0508          ___lwdiv@counter 050C                 __ptext10 2964  
               __ptext11 277A                 __ptext12 2A46                 __ptext13 2A24  
               __ptext14 27EC                 __ptext15 2706               _BORRAR_LCD 2A7C  
               _lcd_init 29F6               _LCD_CONFIG 2850               _ENVIA_CHAR 2932  
               isa$xinst 0000            _ENVIA_LCD_CMD 2964              ??_configuro 0501  
      ??_ESCRIBE_MENSAJE 0506    ESCRIBE_MENSAJE@cadena 0504         ___lwmod@dividend 0501  
         ?_ENVIA_LCD_CMD 0501          ___lwmod@divisor 0503          ___lwmod@counter 0505  
            ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501               _POS_CURSOR 28F8  
            ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 0505              ?_ENVIA_CHAR 0501  
      POS_CURSOR@columna 0504  
