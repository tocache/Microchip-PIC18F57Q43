

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jun 05 16:31:53 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text15,global,reloc=4,class=CODE,space=0,delta=1
    25                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Generated 04/02/2025 GMT
    31                           ; 
    32                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F57Q43 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   0004E0                     bsr             equ	1248
    65   0004E9                     fsr0            equ	1257
    66   0004EA                     fsr0h           equ	1258
    67   0004E9                     fsr0l           equ	1257
    68   0004E1                     fsr1            equ	1249
    69   0004E2                     fsr1h           equ	1250
    70   0004E1                     fsr1l           equ	1249
    71   0004D9                     fsr2            equ	1241
    72   0004DA                     fsr2h           equ	1242
    73   0004D9                     fsr2l           equ	1241
    74   0004EF                     indf0           equ	1263
    75   0004E7                     indf1           equ	1255
    76   0004DF                     indf2           equ	1247
    77   0004D6                     intcon          equ	1238
    78   000041                     nvmcon          equ	65
    79   0004F9                     pcl             equ	1273
    80   0004FA                     pclath          equ	1274
    81   0004FB                     pclatu          equ	1275
    82   0004EB                     plusw0          equ	1259
    83   0004E3                     plusw1          equ	1251
    84   0004DB                     plusw2          equ	1243
    85   0004ED                     postdec0        equ	1261
    86   0004E5                     postdec1        equ	1253
    87   0004DD                     postdec2        equ	1245
    88   0004EE                     postinc0        equ	1262
    89   0004E6                     postinc1        equ	1254
    90   0004DE                     postinc2        equ	1246
    91   0004EC                     preinc0         equ	1260
    92   0004E4                     preinc1         equ	1252
    93   0004DC                     preinc2         equ	1244
    94   0004F3                     prod            equ	1267
    95   0004F4                     prodh           equ	1268
    96   0004F3                     prodl           equ	1267
    97   0004D8                     status          equ	1240
    98   0004F5                     tablat          equ	1269
    99   0004F6                     tblptr          equ	1270
   100   0004F7                     tblptrh         equ	1271
   101   0004F6                     tblptrl         equ	1270
   102   0004F8                     tblptru         equ	1272
   103   0004FD                     tosl            equ	1277
   104   0004E8                     wreg            equ	1256
   105   000039                     CLKRCON         equ	57	;# 
   106   00003A                     CLKRCLK         equ	58	;# 
   107   000040                     NVMCON0         equ	64	;# 
   108   000041                     NVMCON1         equ	65	;# 
   109   000042                     NVMLOCK         equ	66	;# 
   110   000043                     NVMADR          equ	67	;# 
   111   000043                     NVMADRL         equ	67	;# 
   112   000044                     NVMADRH         equ	68	;# 
   113   000045                     NVMADRU         equ	69	;# 
   114   000046                     NVMDAT          equ	70	;# 
   115   000046                     NVMDATL         equ	70	;# 
   116   000047                     NVMDATH         equ	71	;# 
   117   000048                     VREGCON         equ	72	;# 
   118   000049                     BORCON          equ	73	;# 
   119   00004A                     HLVDCON0        equ	74	;# 
   120   00004B                     HLVDCON1        equ	75	;# 
   121   00004C                     ZCDCON          equ	76	;# 
   122   000060                     PMD0            equ	96	;# 
   123   000061                     PMD1            equ	97	;# 
   124   000063                     PMD3            equ	99	;# 
   125   000064                     PMD4            equ	100	;# 
   126   000065                     PMD5            equ	101	;# 
   127   000066                     PMD6            equ	102	;# 
   128   000067                     PMD7            equ	103	;# 
   129   000068                     PMD8            equ	104	;# 
   130   00006A                     MD1CON0         equ	106	;# 
   131   00006B                     MD1CON1         equ	107	;# 
   132   00006C                     MD1SRC          equ	108	;# 
   133   00006D                     MD1CARL         equ	109	;# 
   134   00006E                     MD1CARH         equ	110	;# 
   135   00006F                     CMOUT           equ	111	;# 
   136   000070                     CM1CON0         equ	112	;# 
   137   000071                     CM1CON1         equ	113	;# 
   138   000072                     CM1NCH          equ	114	;# 
   139   000073                     CM1PCH          equ	115	;# 
   140   000074                     CM2CON0         equ	116	;# 
   141   000075                     CM2CON1         equ	117	;# 
   142   000076                     CM2NCH          equ	118	;# 
   143   000077                     CM2PCH          equ	119	;# 
   144   000078                     WDTCON0         equ	120	;# 
   145   000079                     WDTCON1         equ	121	;# 
   146   00007A                     WDTPS           equ	122	;# 
   147   00007A                     WDTPSL          equ	122	;# 
   148   00007B                     WDTPSH          equ	123	;# 
   149   00007C                     WDTTMR          equ	124	;# 
   150   00007D                     DAC1DAT         equ	125	;# 
   151   00007D                     DAC1DATL        equ	125	;# 
   152   00007F                     DAC1CON         equ	127	;# 
   153   000080                     SPI1RXB         equ	128	;# 
   154   000081                     SPI1TXB         equ	129	;# 
   155   000082                     SPI1TCNT        equ	130	;# 
   156   000082                     SPI1TCNTL       equ	130	;# 
   157   000083                     SPI1TCNTH       equ	131	;# 
   158   000084                     SPI1CON0        equ	132	;# 
   159   000085                     SPI1CON1        equ	133	;# 
   160   000086                     SPI1CON2        equ	134	;# 
   161   000087                     SPI1STATUS      equ	135	;# 
   162   000088                     SPI1TWIDTH      equ	136	;# 
   163   000089                     SPI1BAUD        equ	137	;# 
   164   00008A                     SPI1INTF        equ	138	;# 
   165   00008B                     SPI1INTE        equ	139	;# 
   166   00008C                     SPI1CLK         equ	140	;# 
   167   00008D                     SPI2RXB         equ	141	;# 
   168   00008E                     SPI2TXB         equ	142	;# 
   169   00008F                     SPI2TCNT        equ	143	;# 
   170   00008F                     SPI2TCNTL       equ	143	;# 
   171   000090                     SPI2TCNTH       equ	144	;# 
   172   000091                     SPI2CON0        equ	145	;# 
   173   000092                     SPI2CON1        equ	146	;# 
   174   000093                     SPI2CON2        equ	147	;# 
   175   000094                     SPI2STATUS      equ	148	;# 
   176   000095                     SPI2TWIDTH      equ	149	;# 
   177   000096                     SPI2BAUD        equ	150	;# 
   178   000097                     SPI2INTF        equ	151	;# 
   179   000098                     SPI2INTE        equ	152	;# 
   180   000099                     SPI2CLK         equ	153	;# 
   181   0000AC                     ACTCON          equ	172	;# 
   182   0000AD                     OSCCON1         equ	173	;# 
   183   0000AE                     OSCCON2         equ	174	;# 
   184   0000AF                     OSCCON3         equ	175	;# 
   185   0000B0                     OSCTUNE         equ	176	;# 
   186   0000B1                     OSCFRQ          equ	177	;# 
   187   0000B1                     OSCFREQ         equ	177	;# 
   188   0000B2                     OSCSTAT         equ	178	;# 
   189   0000B2                     OSCSTAT1        equ	178	;# 
   190   0000B3                     OSCEN           equ	179	;# 
   191   0000B4                     PRLOCK          equ	180	;# 
   192   0000B5                     SCANPR          equ	181	;# 
   193   0000B6                     DMA1PR          equ	182	;# 
   194   0000B7                     DMA2PR          equ	183	;# 
   195   0000B8                     DMA3PR          equ	184	;# 
   196   0000B9                     DMA4PR          equ	185	;# 
   197   0000BA                     DMA5PR          equ	186	;# 
   198   0000BB                     DMA6PR          equ	187	;# 
   199   0000BE                     MAINPR          equ	190	;# 
   200   0000BF                     ISRPR           equ	191	;# 
   201   0000D4                     CLCDATA         equ	212	;# 
   202   0000D5                     CLCSELECT       equ	213	;# 
   203   0000D6                     CLCnCON         equ	214	;# 
   204   0000D7                     CLCnPOL         equ	215	;# 
   205   0000D8                     CLCnSEL0        equ	216	;# 
   206   0000D9                     CLCnSEL1        equ	217	;# 
   207   0000DA                     CLCnSEL2        equ	218	;# 
   208   0000DB                     CLCnSEL3        equ	219	;# 
   209   0000DC                     CLCnGLS0        equ	220	;# 
   210   0000DD                     CLCnGLS1        equ	221	;# 
   211   0000DE                     CLCnGLS2        equ	222	;# 
   212   0000DF                     CLCnGLS3        equ	223	;# 
   213   0000E8                     DMASELECT       equ	232	;# 
   214   0000E9                     DMAnBUF         equ	233	;# 
   215   0000EA                     DMAnDCNT        equ	234	;# 
   216   0000EA                     DMAnDCNTL       equ	234	;# 
   217   0000EB                     DMAnDCNTH       equ	235	;# 
   218   0000EC                     DMAnDPTR        equ	236	;# 
   219   0000EC                     DMAnDPTRL       equ	236	;# 
   220   0000ED                     DMAnDPTRH       equ	237	;# 
   221   0000EE                     DMAnDSZ         equ	238	;# 
   222   0000EE                     DMAnDSZL        equ	238	;# 
   223   0000EF                     DMAnDSZH        equ	239	;# 
   224   0000F0                     DMAnDSA         equ	240	;# 
   225   0000F0                     DMAnDSAL        equ	240	;# 
   226   0000F1                     DMAnDSAH        equ	241	;# 
   227   0000F2                     DMAnSCNT        equ	242	;# 
   228   0000F2                     DMAnSCNTL       equ	242	;# 
   229   0000F3                     DMAnSCNTH       equ	243	;# 
   230   0000F4                     DMAnSPTR        equ	244	;# 
   231   0000F4                     DMAnSPTRL       equ	244	;# 
   232   0000F5                     DMAnSPTRH       equ	245	;# 
   233   0000F6                     DMAnSPTRU       equ	246	;# 
   234   0000F7                     DMAnSSZ         equ	247	;# 
   235   0000F7                     DMAnSSZL        equ	247	;# 
   236   0000F8                     DMAnSSZH        equ	248	;# 
   237   0000F9                     DMAnSSA         equ	249	;# 
   238   0000F9                     DMAnSSAL        equ	249	;# 
   239   0000FA                     DMAnSSAH        equ	250	;# 
   240   0000FB                     DMAnSSAU        equ	251	;# 
   241   0000FC                     DMAnCON0        equ	252	;# 
   242   0000FD                     DMAnCON1        equ	253	;# 
   243   0000FE                     DMAnAIRQ        equ	254	;# 
   244   0000FF                     DMAnSIRQ        equ	255	;# 
   245   000200                     PPSLOCK         equ	512	;# 
   246   000201                     RA0PPS          equ	513	;# 
   247   000202                     RA1PPS          equ	514	;# 
   248   000203                     RA2PPS          equ	515	;# 
   249   000204                     RA3PPS          equ	516	;# 
   250   000205                     RA4PPS          equ	517	;# 
   251   000206                     RA5PPS          equ	518	;# 
   252   000207                     RA6PPS          equ	519	;# 
   253   000208                     RA7PPS          equ	520	;# 
   254   000209                     RB0PPS          equ	521	;# 
   255   00020A                     RB1PPS          equ	522	;# 
   256   00020B                     RB2PPS          equ	523	;# 
   257   00020C                     RB3PPS          equ	524	;# 
   258   00020D                     RB4PPS          equ	525	;# 
   259   00020E                     RB5PPS          equ	526	;# 
   260   00020F                     RB6PPS          equ	527	;# 
   261   000210                     RB7PPS          equ	528	;# 
   262   000211                     RC0PPS          equ	529	;# 
   263   000212                     RC1PPS          equ	530	;# 
   264   000213                     RC2PPS          equ	531	;# 
   265   000214                     RC3PPS          equ	532	;# 
   266   000215                     RC4PPS          equ	533	;# 
   267   000216                     RC5PPS          equ	534	;# 
   268   000217                     RC6PPS          equ	535	;# 
   269   000218                     RC7PPS          equ	536	;# 
   270   000219                     RD0PPS          equ	537	;# 
   271   00021A                     RD1PPS          equ	538	;# 
   272   00021B                     RD2PPS          equ	539	;# 
   273   00021C                     RD3PPS          equ	540	;# 
   274   00021D                     RD4PPS          equ	541	;# 
   275   00021E                     RD5PPS          equ	542	;# 
   276   00021F                     RD6PPS          equ	543	;# 
   277   000220                     RD7PPS          equ	544	;# 
   278   000221                     RE0PPS          equ	545	;# 
   279   000222                     RE1PPS          equ	546	;# 
   280   000223                     RE2PPS          equ	547	;# 
   281   000229                     RF0PPS          equ	553	;# 
   282   00022A                     RF1PPS          equ	554	;# 
   283   00022B                     RF2PPS          equ	555	;# 
   284   00022C                     RF3PPS          equ	556	;# 
   285   00022D                     RF4PPS          equ	557	;# 
   286   00022E                     RF5PPS          equ	558	;# 
   287   00022F                     RF6PPS          equ	559	;# 
   288   000230                     RF7PPS          equ	560	;# 
   289   00023E                     INT0PPS         equ	574	;# 
   290   00023F                     INT1PPS         equ	575	;# 
   291   000240                     INT2PPS         equ	576	;# 
   292   000241                     T0CKIPPS        equ	577	;# 
   293   000242                     T1CKIPPS        equ	578	;# 
   294   000243                     T1GPPS          equ	579	;# 
   295   000244                     T3CKIPPS        equ	580	;# 
   296   000245                     T3GPPS          equ	581	;# 
   297   000246                     T5CKIPPS        equ	582	;# 
   298   000247                     T5GPPS          equ	583	;# 
   299   000248                     T2INPPS         equ	584	;# 
   300   000249                     T4INPPS         equ	585	;# 
   301   00024A                     T6INPPS         equ	586	;# 
   302   00024F                     CCP1PPS         equ	591	;# 
   303   000250                     CCP2PPS         equ	592	;# 
   304   000251                     CCP3PPS         equ	593	;# 
   305   000253                     PWM1ERSPPS      equ	595	;# 
   306   000254                     PWM2ERSPPS      equ	596	;# 
   307   000255                     PWM3ERSPPS      equ	597	;# 
   308   000257                     PWMIN0PPS       equ	599	;# 
   309   000258                     PWMIN1PPS       equ	600	;# 
   310   000259                     SMT1WINPPS      equ	601	;# 
   311   00025A                     SMT1SIGPPS      equ	602	;# 
   312   00025B                     CWG1PPS         equ	603	;# 
   313   00025B                     CWG1INPPS       equ	603	;# 
   314   00025C                     CWG2PPS         equ	604	;# 
   315   00025C                     CWG2INPPS       equ	604	;# 
   316   00025D                     CWG3PPS         equ	605	;# 
   317   00025D                     CWG3INPPS       equ	605	;# 
   318   00025E                     MD1CARLPPS      equ	606	;# 
   319   00025E                     MDCARLPPS       equ	606	;# 
   320   00025F                     MD1CARHPPS      equ	607	;# 
   321   00025F                     MDCARHPPS       equ	607	;# 
   322   000260                     MD1SRCPPS       equ	608	;# 
   323   000260                     MDSRCPPS        equ	608	;# 
   324   000261                     CLCIN0PPS       equ	609	;# 
   325   000262                     CLCIN1PPS       equ	610	;# 
   326   000263                     CLCIN2PPS       equ	611	;# 
   327   000264                     CLCIN3PPS       equ	612	;# 
   328   000265                     CLCIN4PPS       equ	613	;# 
   329   000266                     CLCIN5PPS       equ	614	;# 
   330   000267                     CLCIN6PPS       equ	615	;# 
   331   000268                     CLCIN7PPS       equ	616	;# 
   332   000269                     ADACTPPS        equ	617	;# 
   333   00026A                     SPI1SCKPPS      equ	618	;# 
   334   00026B                     SPI1SDIPPS      equ	619	;# 
   335   00026C                     SPI1SSPPS       equ	620	;# 
   336   00026D                     SPI2SCKPPS      equ	621	;# 
   337   00026E                     SPI2SDIPPS      equ	622	;# 
   338   00026F                     SPI2SSPPS       equ	623	;# 
   339   000270                     I2C1SDAPPS      equ	624	;# 
   340   000271                     I2C1SCLPPS      equ	625	;# 
   341   000272                     U1RXPPS         equ	626	;# 
   342   000273                     U1CTSPPS        equ	627	;# 
   343   000274                     U2RXPPS         equ	628	;# 
   344   000275                     U2CTSPPS        equ	629	;# 
   345   000276                     U3RXPPS         equ	630	;# 
   346   000277                     U3CTSPPS        equ	631	;# 
   347   000278                     U4RXPPS         equ	632	;# 
   348   000279                     U4CTSPPS        equ	633	;# 
   349   00027A                     U5RXPPS         equ	634	;# 
   350   00027B                     U5CTSPPS        equ	635	;# 
   351   000286                     RC4I2C          equ	646	;# 
   352   000287                     RC3I2C          equ	647	;# 
   353   000288                     RB2I2C          equ	648	;# 
   354   000289                     RB1I2C          equ	649	;# 
   355   00028B                     I2C1RXB         equ	651	;# 
   356   00028C                     I2C1TXB         equ	652	;# 
   357   00028D                     I2C1CNT         equ	653	;# 
   358   00028E                     I2C1ADB0        equ	654	;# 
   359   00028F                     I2C1ADB1        equ	655	;# 
   360   000290                     I2C1ADR0        equ	656	;# 
   361   000291                     I2C1ADR1        equ	657	;# 
   362   000292                     I2C1ADR2        equ	658	;# 
   363   000293                     I2C1ADR3        equ	659	;# 
   364   000294                     I2C1CON0        equ	660	;# 
   365   000295                     I2C1CON1        equ	661	;# 
   366   000296                     I2C1CON2        equ	662	;# 
   367   000297                     I2C1ERR         equ	663	;# 
   368   000298                     I2C1STAT0       equ	664	;# 
   369   000299                     I2C1STAT1       equ	665	;# 
   370   00029A                     I2C1PIR         equ	666	;# 
   371   00029B                     I2C1PIE         equ	667	;# 
   372   00029C                     I2C1CLK         equ	668	;# 
   373   00029D                     I2C1BTO         equ	669	;# 
   374   0002A1                     U1RXB           equ	673	;# 
   375   0002A1                     U1RXBL          equ	673	;# 
   376   0002A2                     U1RXCHK         equ	674	;# 
   377   0002A3                     U1TXB           equ	675	;# 
   378   0002A3                     U1TXBL          equ	675	;# 
   379   0002A4                     U1TXCHK         equ	676	;# 
   380   0002A5                     U1P1            equ	677	;# 
   381   0002A5                     U1P1L           equ	677	;# 
   382   0002A6                     U1P1H           equ	678	;# 
   383   0002A7                     U1P2            equ	679	;# 
   384   0002A7                     U1P2L           equ	679	;# 
   385   0002A8                     U1P2H           equ	680	;# 
   386   0002A9                     U1P3            equ	681	;# 
   387   0002A9                     U1P3L           equ	681	;# 
   388   0002AA                     U1P3H           equ	682	;# 
   389   0002AB                     U1CON0          equ	683	;# 
   390   0002AC                     U1CON1          equ	684	;# 
   391   0002AD                     U1CON2          equ	685	;# 
   392   0002AE                     U1BRG           equ	686	;# 
   393   0002AE                     U1BRGL          equ	686	;# 
   394   0002AF                     U1BRGH          equ	687	;# 
   395   0002B0                     U1FIFO          equ	688	;# 
   396   0002B1                     U1UIR           equ	689	;# 
   397   0002B2                     U1ERRIR         equ	690	;# 
   398   0002B3                     U1ERRIE         equ	691	;# 
   399   0002B4                     U2RXB           equ	692	;# 
   400   0002B4                     U2RXBL          equ	692	;# 
   401   0002B6                     U2TXB           equ	694	;# 
   402   0002B6                     U2TXBL          equ	694	;# 
   403   0002B8                     U2P1            equ	696	;# 
   404   0002B8                     U2P1L           equ	696	;# 
   405   0002BA                     U2P2            equ	698	;# 
   406   0002BA                     U2P2L           equ	698	;# 
   407   0002BC                     U2P3            equ	700	;# 
   408   0002BC                     U2P3L           equ	700	;# 
   409   0002BE                     U2CON0          equ	702	;# 
   410   0002BF                     U2CON1          equ	703	;# 
   411   0002C0                     U2CON2          equ	704	;# 
   412   0002C1                     U2BRG           equ	705	;# 
   413   0002C1                     U2BRGL          equ	705	;# 
   414   0002C2                     U2BRGH          equ	706	;# 
   415   0002C3                     U2FIFO          equ	707	;# 
   416   0002C4                     U2UIR           equ	708	;# 
   417   0002C5                     U2ERRIR         equ	709	;# 
   418   0002C6                     U2ERRIE         equ	710	;# 
   419   0002C7                     U3RXB           equ	711	;# 
   420   0002C7                     U3RXBL          equ	711	;# 
   421   0002C9                     U3TXB           equ	713	;# 
   422   0002C9                     U3TXBL          equ	713	;# 
   423   0002CB                     U3P1            equ	715	;# 
   424   0002CB                     U3P1L           equ	715	;# 
   425   0002CD                     U3P2            equ	717	;# 
   426   0002CD                     U3P2L           equ	717	;# 
   427   0002CF                     U3P3            equ	719	;# 
   428   0002CF                     U3P3L           equ	719	;# 
   429   0002D1                     U3CON0          equ	721	;# 
   430   0002D2                     U3CON1          equ	722	;# 
   431   0002D3                     U3CON2          equ	723	;# 
   432   0002D4                     U3BRG           equ	724	;# 
   433   0002D4                     U3BRGL          equ	724	;# 
   434   0002D5                     U3BRGH          equ	725	;# 
   435   0002D6                     U3FIFO          equ	726	;# 
   436   0002D7                     U3UIR           equ	727	;# 
   437   0002D8                     U3ERRIR         equ	728	;# 
   438   0002D9                     U3ERRIE         equ	729	;# 
   439   0002DA                     U4RXB           equ	730	;# 
   440   0002DA                     U4RXBL          equ	730	;# 
   441   0002DC                     U4TXB           equ	732	;# 
   442   0002DC                     U4TXBL          equ	732	;# 
   443   0002DE                     U4P1            equ	734	;# 
   444   0002DE                     U4P1L           equ	734	;# 
   445   0002E0                     U4P2            equ	736	;# 
   446   0002E0                     U4P2L           equ	736	;# 
   447   0002E2                     U4P3            equ	738	;# 
   448   0002E2                     U4P3L           equ	738	;# 
   449   0002E4                     U4CON0          equ	740	;# 
   450   0002E5                     U4CON1          equ	741	;# 
   451   0002E6                     U4CON2          equ	742	;# 
   452   0002E7                     U4BRG           equ	743	;# 
   453   0002E7                     U4BRGL          equ	743	;# 
   454   0002E8                     U4BRGH          equ	744	;# 
   455   0002E9                     U4FIFO          equ	745	;# 
   456   0002EA                     U4UIR           equ	746	;# 
   457   0002EB                     U4ERRIR         equ	747	;# 
   458   0002EC                     U4ERRIE         equ	748	;# 
   459   0002ED                     U5RXB           equ	749	;# 
   460   0002ED                     U5RXBL          equ	749	;# 
   461   0002EF                     U5TXB           equ	751	;# 
   462   0002EF                     U5TXBL          equ	751	;# 
   463   0002F1                     U5P1            equ	753	;# 
   464   0002F1                     U5P1L           equ	753	;# 
   465   0002F3                     U5P2            equ	755	;# 
   466   0002F3                     U5P2L           equ	755	;# 
   467   0002F5                     U5P3            equ	757	;# 
   468   0002F5                     U5P3L           equ	757	;# 
   469   0002F7                     U5CON0          equ	759	;# 
   470   0002F8                     U5CON1          equ	760	;# 
   471   0002F9                     U5CON2          equ	761	;# 
   472   0002FA                     U5BRG           equ	762	;# 
   473   0002FA                     U5BRGL          equ	762	;# 
   474   0002FB                     U5BRGH          equ	763	;# 
   475   0002FC                     U5FIFO          equ	764	;# 
   476   0002FD                     U5UIR           equ	765	;# 
   477   0002FE                     U5ERRIR         equ	766	;# 
   478   0002FF                     U5ERRIE         equ	767	;# 
   479   000300                     SMT1TMR         equ	768	;# 
   480   000300                     SMT1TMRL        equ	768	;# 
   481   000301                     SMT1TMRH        equ	769	;# 
   482   000302                     SMT1TMRU        equ	770	;# 
   483   000303                     SMT1CPR         equ	771	;# 
   484   000303                     SMT1CPRL        equ	771	;# 
   485   000304                     SMT1CPRH        equ	772	;# 
   486   000305                     SMT1CPRU        equ	773	;# 
   487   000306                     SMT1CPW         equ	774	;# 
   488   000306                     SMT1CPWL        equ	774	;# 
   489   000307                     SMT1CPWH        equ	775	;# 
   490   000308                     SMT1CPWU        equ	776	;# 
   491   000309                     SMT1PR          equ	777	;# 
   492   000309                     SMT1PRL         equ	777	;# 
   493   00030A                     SMT1PRH         equ	778	;# 
   494   00030B                     SMT1PRU         equ	779	;# 
   495   00030C                     SMT1CON0        equ	780	;# 
   496   00030D                     SMT1CON1        equ	781	;# 
   497   00030E                     SMT1STAT        equ	782	;# 
   498   00030F                     SMT1CLK         equ	783	;# 
   499   000310                     SMT1SIG         equ	784	;# 
   500   000311                     SMT1WIN         equ	785	;# 
   501   000318                     TMR0L           equ	792	;# 
   502   000318                     TMR0            equ	792	;# 
   503   000319                     TMR0H           equ	793	;# 
   504   000319                     PR0             equ	793	;# 
   505   00031A                     T0CON0          equ	794	;# 
   506   00031B                     T0CON1          equ	795	;# 
   507   00031C                     TMR1            equ	796	;# 
   508   00031C                     TMR1L           equ	796	;# 
   509   00031D                     TMR1H           equ	797	;# 
   510   00031E                     T1CON           equ	798	;# 
   511   00031E                     TMR1CON         equ	798	;# 
   512   00031F                     T1GCON          equ	799	;# 
   513   00031F                     TMR1GCON        equ	799	;# 
   514   000320                     T1GATE          equ	800	;# 
   515   000320                     TMR1GATE        equ	800	;# 
   516   000321                     T1CLK           equ	801	;# 
   517   000321                     TMR1CLK         equ	801	;# 
   518   000321                     PR1             equ	801	;# 
   519   000322                     T2TMR           equ	802	;# 
   520   000322                     TMR2            equ	802	;# 
   521   000323                     T2PR            equ	803	;# 
   522   000323                     PR2             equ	803	;# 
   523   000324                     T2CON           equ	804	;# 
   524   000325                     T2HLT           equ	805	;# 
   525   000326                     T2CLKCON        equ	806	;# 
   526   000326                     T2CLK           equ	806	;# 
   527   000327                     T2RST           equ	807	;# 
   528   000328                     TMR3            equ	808	;# 
   529   000328                     TMR3L           equ	808	;# 
   530   000329                     TMR3H           equ	809	;# 
   531   00032A                     T3CON           equ	810	;# 
   532   00032A                     TMR3CON         equ	810	;# 
   533   00032B                     T3GCON          equ	811	;# 
   534   00032B                     TMR3GCON        equ	811	;# 
   535   00032C                     T3GATE          equ	812	;# 
   536   00032C                     TMR3GATE        equ	812	;# 
   537   00032D                     T3CLK           equ	813	;# 
   538   00032D                     TMR3CLK         equ	813	;# 
   539   00032D                     PR3             equ	813	;# 
   540   00032E                     T4TMR           equ	814	;# 
   541   00032E                     TMR4            equ	814	;# 
   542   00032F                     T4PR            equ	815	;# 
   543   00032F                     PR4             equ	815	;# 
   544   000330                     T4CON           equ	816	;# 
   545   000331                     T4HLT           equ	817	;# 
   546   000332                     T4CLKCON        equ	818	;# 
   547   000332                     T4CLK           equ	818	;# 
   548   000333                     T4RST           equ	819	;# 
   549   000334                     TMR5            equ	820	;# 
   550   000334                     TMR5L           equ	820	;# 
   551   000335                     TMR5H           equ	821	;# 
   552   000336                     T5CON           equ	822	;# 
   553   000336                     TMR5CON         equ	822	;# 
   554   000337                     T5GCON          equ	823	;# 
   555   000337                     TMR5GCON        equ	823	;# 
   556   000338                     T5GATE          equ	824	;# 
   557   000338                     TMR5GATE        equ	824	;# 
   558   000339                     T5CLK           equ	825	;# 
   559   000339                     TMR5CLK         equ	825	;# 
   560   000339                     PR5             equ	825	;# 
   561   00033A                     T6TMR           equ	826	;# 
   562   00033A                     TMR6            equ	826	;# 
   563   00033B                     T6PR            equ	827	;# 
   564   00033B                     PR6             equ	827	;# 
   565   00033C                     T6CON           equ	828	;# 
   566   00033D                     T6HLT           equ	829	;# 
   567   00033E                     T6CLKCON        equ	830	;# 
   568   00033E                     T6CLK           equ	830	;# 
   569   00033F                     T6RST           equ	831	;# 
   570   000340                     CCPR1           equ	832	;# 
   571   000340                     CCPR1L          equ	832	;# 
   572   000341                     CCPR1H          equ	833	;# 
   573   000342                     CCP1CON         equ	834	;# 
   574   000343                     CCP1CAP         equ	835	;# 
   575   000344                     CCPR2           equ	836	;# 
   576   000344                     CCPR2L          equ	836	;# 
   577   000345                     CCPR2H          equ	837	;# 
   578   000346                     CCP2CON         equ	838	;# 
   579   000347                     CCP2CAP         equ	839	;# 
   580   000348                     CCPR3           equ	840	;# 
   581   000348                     CCPR3L          equ	840	;# 
   582   000349                     CCPR3H          equ	841	;# 
   583   00034A                     CCP3CON         equ	842	;# 
   584   00034B                     CCP3CAP         equ	843	;# 
   585   00034C                     CCPTMRS0        equ	844	;# 
   586   00034F                     CRCDATA         equ	847	;# 
   587   00034F                     CRCDATL         equ	847	;# 
   588   000350                     CRCDATH         equ	848	;# 
   589   000351                     CRCACC          equ	849	;# 
   590   000351                     CRCACCL         equ	849	;# 
   591   000352                     CRCACCH         equ	850	;# 
   592   000353                     CRCSHFT         equ	851	;# 
   593   000353                     CRCSHIFTL       equ	851	;# 
   594   000354                     CRCSHIFTH       equ	852	;# 
   595   000355                     CRCXOR          equ	853	;# 
   596   000355                     CRCXORL         equ	853	;# 
   597   000356                     CRCXORH         equ	854	;# 
   598   000357                     CRCCON0         equ	855	;# 
   599   000358                     CRCCON1         equ	856	;# 
   600   00035A                     SCANLADR        equ	858	;# 
   601   00035A                     SCANLADRL       equ	858	;# 
   602   00035B                     SCANLADRH       equ	859	;# 
   603   00035C                     SCANLADRU       equ	860	;# 
   604   00035D                     SCANHADR        equ	861	;# 
   605   00035D                     SCANHADRL       equ	861	;# 
   606   00035E                     SCANHADRH       equ	862	;# 
   607   00035F                     SCANHADRU       equ	863	;# 
   608   000360                     SCANCON0        equ	864	;# 
   609   000361                     SCANTRIG        equ	865	;# 
   610   000362                     IPR0            equ	866	;# 
   611   000363                     IPR1            equ	867	;# 
   612   000364                     IPR2            equ	868	;# 
   613   000365                     IPR3            equ	869	;# 
   614   000366                     IPR4            equ	870	;# 
   615   000367                     IPR5            equ	871	;# 
   616   000368                     IPR6            equ	872	;# 
   617   000369                     IPR7            equ	873	;# 
   618   00036A                     IPR8            equ	874	;# 
   619   00036B                     IPR9            equ	875	;# 
   620   00036C                     IPR10           equ	876	;# 
   621   00036D                     IPR11           equ	877	;# 
   622   00036E                     IPR12           equ	878	;# 
   623   00036F                     IPR13           equ	879	;# 
   624   000370                     IPR14           equ	880	;# 
   625   000371                     IPR15           equ	881	;# 
   626   000373                     STATUS_CSHAD    equ	883	;# 
   627   000374                     WREG_CSHAD      equ	884	;# 
   628   000375                     BSR_CSHAD       equ	885	;# 
   629   000376                     SHADCON         equ	886	;# 
   630   000377                     STATUS_SHAD     equ	887	;# 
   631   000378                     WREG_SHAD       equ	888	;# 
   632   000379                     BSR_SHAD        equ	889	;# 
   633   00037A                     PCLATH_SHAD     equ	890	;# 
   634   00037B                     PCLATU_SHAD     equ	891	;# 
   635   00037C                     FSR0SH          equ	892	;# 
   636   00037C                     FSR0L_SHAD      equ	892	;# 
   637   00037D                     FSR0H_SHAD      equ	893	;# 
   638   00037E                     FSR1SH          equ	894	;# 
   639   00037E                     FSR1L_SHAD      equ	894	;# 
   640   00037F                     FSR1H_SHAD      equ	895	;# 
   641   000380                     FSR2SH          equ	896	;# 
   642   000380                     FSR2L_SHAD      equ	896	;# 
   643   000381                     FSR2H_SHAD      equ	897	;# 
   644   000382                     PRODSH          equ	898	;# 
   645   000382                     PRODL_SHAD      equ	898	;# 
   646   000383                     PRODH_SHAD      equ	899	;# 
   647   0003BC                     CWG1CLK         equ	956	;# 
   648   0003BC                     CWG1CLKCON      equ	956	;# 
   649   0003BD                     CWG1ISM         equ	957	;# 
   650   0003BD                     CWG1DAT         equ	957	;# 
   651   0003BE                     CWG1DBR         equ	958	;# 
   652   0003BF                     CWG1DBF         equ	959	;# 
   653   0003C0                     CWG1CON0        equ	960	;# 
   654   0003C1                     CWG1CON1        equ	961	;# 
   655   0003C2                     CWG1AS0         equ	962	;# 
   656   0003C3                     CWG1AS1         equ	963	;# 
   657   0003C4                     CWG1STR         equ	964	;# 
   658   0003C5                     CWG2CLK         equ	965	;# 
   659   0003C5                     CWG2CLKCON      equ	965	;# 
   660   0003C6                     CWG2ISM         equ	966	;# 
   661   0003C6                     CWG2DAT         equ	966	;# 
   662   0003C7                     CWG2DBR         equ	967	;# 
   663   0003C8                     CWG2DBF         equ	968	;# 
   664   0003C9                     CWG2CON0        equ	969	;# 
   665   0003CA                     CWG2CON1        equ	970	;# 
   666   0003CB                     CWG2AS0         equ	971	;# 
   667   0003CC                     CWG2AS1         equ	972	;# 
   668   0003CD                     CWG2STR         equ	973	;# 
   669   0003CE                     CWG3CLK         equ	974	;# 
   670   0003CE                     CWG3CLKCON      equ	974	;# 
   671   0003CF                     CWG3ISM         equ	975	;# 
   672   0003CF                     CWG3DAT         equ	975	;# 
   673   0003D0                     CWG3DBR         equ	976	;# 
   674   0003D1                     CWG3DBF         equ	977	;# 
   675   0003D2                     CWG3CON0        equ	978	;# 
   676   0003D3                     CWG3CON1        equ	979	;# 
   677   0003D4                     CWG3AS0         equ	980	;# 
   678   0003D5                     CWG3AS1         equ	981	;# 
   679   0003D6                     CWG3STR         equ	982	;# 
   680   0003D7                     FVRCON          equ	983	;# 
   681   0003D8                     ADCPCON         equ	984	;# 
   682   0003D8                     ADCP            equ	984	;# 
   683   0003D9                     ADLTH           equ	985	;# 
   684   0003D9                     ADLTHL          equ	985	;# 
   685   0003DA                     ADLTHH          equ	986	;# 
   686   0003DB                     ADUTH           equ	987	;# 
   687   0003DB                     ADUTHL          equ	987	;# 
   688   0003DC                     ADUTHH          equ	988	;# 
   689   0003DD                     ADERR           equ	989	;# 
   690   0003DD                     ADERRL          equ	989	;# 
   691   0003DE                     ADERRH          equ	990	;# 
   692   0003DF                     ADSTPT          equ	991	;# 
   693   0003DF                     ADSTPTL         equ	991	;# 
   694   0003E0                     ADSTPTH         equ	992	;# 
   695   0003E1                     ADFLTR          equ	993	;# 
   696   0003E1                     ADFLTRL         equ	993	;# 
   697   0003E2                     ADFLTRH         equ	994	;# 
   698   0003E3                     ADACC           equ	995	;# 
   699   0003E3                     ADACCL          equ	995	;# 
   700   0003E4                     ADACCH          equ	996	;# 
   701   0003E5                     ADACCU          equ	997	;# 
   702   0003E6                     ADCNT           equ	998	;# 
   703   0003E7                     ADRPT           equ	999	;# 
   704   0003E8                     ADPREV          equ	1000	;# 
   705   0003E8                     ADPREVL         equ	1000	;# 
   706   0003E9                     ADPREVH         equ	1001	;# 
   707   0003EA                     ADRES           equ	1002	;# 
   708   0003EA                     ADRESL          equ	1002	;# 
   709   0003EB                     ADRESH          equ	1003	;# 
   710   0003EC                     ADPCH           equ	1004	;# 
   711   0003EE                     ADACQ           equ	1006	;# 
   712   0003EE                     ADACQL          equ	1006	;# 
   713   0003EF                     ADACQH          equ	1007	;# 
   714   0003F0                     ADCAP           equ	1008	;# 
   715   0003F1                     ADPRE           equ	1009	;# 
   716   0003F1                     ADPREL          equ	1009	;# 
   717   0003F2                     ADPREH          equ	1010	;# 
   718   0003F3                     ADCON0          equ	1011	;# 
   719   0003F4                     ADCON1          equ	1012	;# 
   720   0003F5                     ADCON2          equ	1013	;# 
   721   0003F6                     ADCON3          equ	1014	;# 
   722   0003F7                     ADSTAT          equ	1015	;# 
   723   0003F8                     ADREF           equ	1016	;# 
   724   0003F9                     ADACT           equ	1017	;# 
   725   0003FA                     ADCLK           equ	1018	;# 
   726   000400                     ANSELA          equ	1024	;# 
   727   000401                     WPUA            equ	1025	;# 
   728   000402                     ODCONA          equ	1026	;# 
   729   000403                     SLRCONA         equ	1027	;# 
   730   000404                     INLVLA          equ	1028	;# 
   731   000405                     IOCAP           equ	1029	;# 
   732   000406                     IOCAN           equ	1030	;# 
   733   000407                     IOCAF           equ	1031	;# 
   734   000408                     ANSELB          equ	1032	;# 
   735   000409                     WPUB            equ	1033	;# 
   736   00040A                     ODCONB          equ	1034	;# 
   737   00040B                     SLRCONB         equ	1035	;# 
   738   00040C                     INLVLB          equ	1036	;# 
   739   00040D                     IOCBP           equ	1037	;# 
   740   00040E                     IOCBN           equ	1038	;# 
   741   00040F                     IOCBF           equ	1039	;# 
   742   000410                     ANSELC          equ	1040	;# 
   743   000411                     WPUC            equ	1041	;# 
   744   000412                     ODCONC          equ	1042	;# 
   745   000413                     SLRCONC         equ	1043	;# 
   746   000414                     INLVLC          equ	1044	;# 
   747   000415                     IOCCP           equ	1045	;# 
   748   000416                     IOCCN           equ	1046	;# 
   749   000417                     IOCCF           equ	1047	;# 
   750   000418                     ANSELD          equ	1048	;# 
   751   000419                     WPUD            equ	1049	;# 
   752   00041A                     ODCOND          equ	1050	;# 
   753   00041B                     SLRCOND         equ	1051	;# 
   754   00041C                     INLVLD          equ	1052	;# 
   755   000420                     ANSELE          equ	1056	;# 
   756   000421                     WPUE            equ	1057	;# 
   757   000422                     ODCONE          equ	1058	;# 
   758   000423                     SLRCONE         equ	1059	;# 
   759   000424                     INLVLE          equ	1060	;# 
   760   000425                     IOCEP           equ	1061	;# 
   761   000426                     IOCEN           equ	1062	;# 
   762   000427                     IOCEF           equ	1063	;# 
   763   000428                     ANSELF          equ	1064	;# 
   764   000429                     WPUF            equ	1065	;# 
   765   00042A                     ODCONF          equ	1066	;# 
   766   00042B                     SLRCONF         equ	1067	;# 
   767   00042C                     INLVLF          equ	1068	;# 
   768   000440                     NCO1ACC         equ	1088	;# 
   769   000440                     NCO1ACCL        equ	1088	;# 
   770   000441                     NCO1ACCH        equ	1089	;# 
   771   000442                     NCO1ACCU        equ	1090	;# 
   772   000443                     NCO1INC         equ	1091	;# 
   773   000443                     NCO1INCL        equ	1091	;# 
   774   000444                     NCO1INCH        equ	1092	;# 
   775   000445                     NCO1INCU        equ	1093	;# 
   776   000446                     NCO1CON         equ	1094	;# 
   777   000447                     NCO1CLK         equ	1095	;# 
   778   000448                     NCO2ACC         equ	1096	;# 
   779   000448                     NCO2ACCL        equ	1096	;# 
   780   000449                     NCO2ACCH        equ	1097	;# 
   781   00044A                     NCO2ACCU        equ	1098	;# 
   782   00044B                     NCO2INC         equ	1099	;# 
   783   00044B                     NCO2INCL        equ	1099	;# 
   784   00044C                     NCO2INCH        equ	1100	;# 
   785   00044D                     NCO2INCU        equ	1101	;# 
   786   00044E                     NCO2CON         equ	1102	;# 
   787   00044F                     NCO2CLK         equ	1103	;# 
   788   000450                     NCO3ACC         equ	1104	;# 
   789   000450                     NCO3ACCL        equ	1104	;# 
   790   000451                     NCO3ACCH        equ	1105	;# 
   791   000452                     NCO3ACCU        equ	1106	;# 
   792   000453                     NCO3INC         equ	1107	;# 
   793   000453                     NCO3INCL        equ	1107	;# 
   794   000454                     NCO3INCH        equ	1108	;# 
   795   000455                     NCO3INCU        equ	1109	;# 
   796   000456                     NCO3CON         equ	1110	;# 
   797   000457                     NCO3CLK         equ	1111	;# 
   798   000459                     IVTLOCK         equ	1113	;# 
   799   00045A                     IVTAD           equ	1114	;# 
   800   00045A                     IVTADL          equ	1114	;# 
   801   00045B                     IVTADH          equ	1115	;# 
   802   00045C                     IVTADU          equ	1116	;# 
   803   00045D                     IVTBASE         equ	1117	;# 
   804   00045D                     IVTBASEL        equ	1117	;# 
   805   00045E                     IVTBASEH        equ	1118	;# 
   806   00045F                     IVTBASEU        equ	1119	;# 
   807   000460                     PWM1ERS         equ	1120	;# 
   808   000461                     PWM1CLK         equ	1121	;# 
   809   000462                     PWM1LDS         equ	1122	;# 
   810   000463                     PWM1PR          equ	1123	;# 
   811   000463                     PWM1PRL         equ	1123	;# 
   812   000464                     PWM1PRH         equ	1124	;# 
   813   000465                     PWM1CPRE        equ	1125	;# 
   814   000466                     PWM1PIPOS       equ	1126	;# 
   815   000467                     PWM1GIR         equ	1127	;# 
   816   000468                     PWM1GIE         equ	1128	;# 
   817   000469                     PWM1CON         equ	1129	;# 
   818   00046A                     PWM1S1CFG       equ	1130	;# 
   819   00046B                     PWM1S1P1        equ	1131	;# 
   820   00046B                     PWM1S1P1L       equ	1131	;# 
   821   00046C                     PWM1S1P1H       equ	1132	;# 
   822   00046D                     PWM1S1P2        equ	1133	;# 
   823   00046D                     PWM1S1P2L       equ	1133	;# 
   824   00046E                     PWM1S1P2H       equ	1134	;# 
   825   00046F                     PWM2ERS         equ	1135	;# 
   826   000470                     PWM2CLK         equ	1136	;# 
   827   000471                     PWM2LDS         equ	1137	;# 
   828   000472                     PWM2PR          equ	1138	;# 
   829   000472                     PWM2PRL         equ	1138	;# 
   830   000473                     PWM2PRH         equ	1139	;# 
   831   000474                     PWM2CPRE        equ	1140	;# 
   832   000475                     PWM2PIPOS       equ	1141	;# 
   833   000476                     PWM2GIR         equ	1142	;# 
   834   000477                     PWM2GIE         equ	1143	;# 
   835   000478                     PWM2CON         equ	1144	;# 
   836   000479                     PWM2S1CFG       equ	1145	;# 
   837   00047A                     PWM2S1P1        equ	1146	;# 
   838   00047A                     PWM2S1P1L       equ	1146	;# 
   839   00047B                     PWM2S1P1H       equ	1147	;# 
   840   00047C                     PWM2S1P2        equ	1148	;# 
   841   00047C                     PWM2S1P2L       equ	1148	;# 
   842   00047D                     PWM2S1P2H       equ	1149	;# 
   843   00047E                     PWM3ERS         equ	1150	;# 
   844   00047F                     PWM3CLK         equ	1151	;# 
   845   000480                     PWM3LDS         equ	1152	;# 
   846   000481                     PWM3PR          equ	1153	;# 
   847   000481                     PWM3PRL         equ	1153	;# 
   848   000482                     PWM3PRH         equ	1154	;# 
   849   000483                     PWM3CPRE        equ	1155	;# 
   850   000484                     PWM3PIPOS       equ	1156	;# 
   851   000485                     PWM3GIR         equ	1157	;# 
   852   000486                     PWM3GIE         equ	1158	;# 
   853   000487                     PWM3CON         equ	1159	;# 
   854   000488                     PWM3S1CFG       equ	1160	;# 
   855   000489                     PWM3S1P1        equ	1161	;# 
   856   000489                     PWM3S1P1L       equ	1161	;# 
   857   00048A                     PWM3S1P1H       equ	1162	;# 
   858   00048B                     PWM3S1P2        equ	1163	;# 
   859   00048B                     PWM3S1P2L       equ	1163	;# 
   860   00048C                     PWM3S1P2H       equ	1164	;# 
   861   00049C                     PWMLOAD         equ	1180	;# 
   862   00049D                     PWMEN           equ	1181	;# 
   863   00049E                     PIE0            equ	1182	;# 
   864   00049F                     PIE1            equ	1183	;# 
   865   0004A0                     PIE2            equ	1184	;# 
   866   0004A1                     PIE3            equ	1185	;# 
   867   0004A2                     PIE4            equ	1186	;# 
   868   0004A3                     PIE5            equ	1187	;# 
   869   0004A4                     PIE6            equ	1188	;# 
   870   0004A5                     PIE7            equ	1189	;# 
   871   0004A6                     PIE8            equ	1190	;# 
   872   0004A7                     PIE9            equ	1191	;# 
   873   0004A8                     PIE10           equ	1192	;# 
   874   0004A9                     PIE11           equ	1193	;# 
   875   0004AA                     PIE12           equ	1194	;# 
   876   0004AB                     PIE13           equ	1195	;# 
   877   0004AC                     PIE14           equ	1196	;# 
   878   0004AD                     PIE15           equ	1197	;# 
   879   0004AE                     PIR0            equ	1198	;# 
   880   0004AF                     PIR1            equ	1199	;# 
   881   0004B0                     PIR2            equ	1200	;# 
   882   0004B1                     PIR3            equ	1201	;# 
   883   0004B2                     PIR4            equ	1202	;# 
   884   0004B3                     PIR5            equ	1203	;# 
   885   0004B4                     PIR6            equ	1204	;# 
   886   0004B5                     PIR7            equ	1205	;# 
   887   0004B6                     PIR8            equ	1206	;# 
   888   0004B7                     PIR9            equ	1207	;# 
   889   0004B8                     PIR10           equ	1208	;# 
   890   0004B9                     PIR11           equ	1209	;# 
   891   0004BA                     PIR12           equ	1210	;# 
   892   0004BB                     PIR13           equ	1211	;# 
   893   0004BC                     PIR14           equ	1212	;# 
   894   0004BD                     PIR15           equ	1213	;# 
   895   0004BE                     LATA            equ	1214	;# 
   896   0004BF                     LATB            equ	1215	;# 
   897   0004C0                     LATC            equ	1216	;# 
   898   0004C1                     LATD            equ	1217	;# 
   899   0004C2                     LATE            equ	1218	;# 
   900   0004C3                     LATF            equ	1219	;# 
   901   0004C6                     TRISA           equ	1222	;# 
   902   0004C7                     TRISB           equ	1223	;# 
   903   0004C8                     TRISC           equ	1224	;# 
   904   0004C9                     TRISD           equ	1225	;# 
   905   0004CA                     TRISE           equ	1226	;# 
   906   0004CB                     TRISF           equ	1227	;# 
   907   0004CE                     PORTA           equ	1230	;# 
   908   0004CF                     PORTB           equ	1231	;# 
   909   0004D0                     PORTC           equ	1232	;# 
   910   0004D1                     PORTD           equ	1233	;# 
   911   0004D2                     PORTE           equ	1234	;# 
   912   0004D3                     PORTF           equ	1235	;# 
   913   0004D6                     INTCON0         equ	1238	;# 
   914   0004D7                     INTCON1         equ	1239	;# 
   915   0004D8                     STATUS          equ	1240	;# 
   916   0004D9                     FSR2            equ	1241	;# 
   917   0004D9                     FSR2L           equ	1241	;# 
   918   0004DA                     FSR2H           equ	1242	;# 
   919   0004DB                     PLUSW2          equ	1243	;# 
   920   0004DC                     PREINC2         equ	1244	;# 
   921   0004DD                     POSTDEC2        equ	1245	;# 
   922   0004DE                     POSTINC2        equ	1246	;# 
   923   0004DF                     INDF2           equ	1247	;# 
   924   0004E0                     BSR             equ	1248	;# 
   925   0004E1                     FSR1            equ	1249	;# 
   926   0004E1                     FSR1L           equ	1249	;# 
   927   0004E2                     FSR1H           equ	1250	;# 
   928   0004E3                     PLUSW1          equ	1251	;# 
   929   0004E4                     PREINC1         equ	1252	;# 
   930   0004E5                     POSTDEC1        equ	1253	;# 
   931   0004E6                     POSTINC1        equ	1254	;# 
   932   0004E7                     INDF1           equ	1255	;# 
   933   0004E8                     WREG            equ	1256	;# 
   934   0004E9                     FSR0            equ	1257	;# 
   935   0004E9                     FSR0L           equ	1257	;# 
   936   0004EA                     FSR0H           equ	1258	;# 
   937   0004EB                     PLUSW0          equ	1259	;# 
   938   0004EC                     PREINC0         equ	1260	;# 
   939   0004ED                     POSTDEC0        equ	1261	;# 
   940   0004EE                     POSTINC0        equ	1262	;# 
   941   0004EF                     INDF0           equ	1263	;# 
   942   0004F0                     PCON0           equ	1264	;# 
   943   0004F1                     PCON1           equ	1265	;# 
   944   0004F2                     CPUDOZE         equ	1266	;# 
   945   0004F3                     PROD            equ	1267	;# 
   946   0004F3                     PRODL           equ	1267	;# 
   947   0004F4                     PRODH           equ	1268	;# 
   948   0004F5                     TABLAT          equ	1269	;# 
   949   0004F6                     TBLPTR          equ	1270	;# 
   950   0004F6                     TBLPTRL         equ	1270	;# 
   951   0004F7                     TBLPTRH         equ	1271	;# 
   952   0004F8                     TBLPTRU         equ	1272	;# 
   953   0004F9                     PCLAT           equ	1273	;# 
   954   0004F9                     PCL             equ	1273	;# 
   955   0004FA                     PCLATH          equ	1274	;# 
   956   0004FB                     PCLATU          equ	1275	;# 
   957   0004FC                     STKPTR          equ	1276	;# 
   958   0004FD                     TOS             equ	1277	;# 
   959   0004FD                     TOSL            equ	1277	;# 
   960   0004FE                     TOSH            equ	1278	;# 
   961   0004FF                     TOSU            equ	1279	;# 
   962   000039                     CLKRCON         equ	57	;# 
   963   00003A                     CLKRCLK         equ	58	;# 
   964   000040                     NVMCON0         equ	64	;# 
   965   000041                     NVMCON1         equ	65	;# 
   966   000042                     NVMLOCK         equ	66	;# 
   967   000043                     NVMADR          equ	67	;# 
   968   000043                     NVMADRL         equ	67	;# 
   969   000044                     NVMADRH         equ	68	;# 
   970   000045                     NVMADRU         equ	69	;# 
   971   000046                     NVMDAT          equ	70	;# 
   972   000046                     NVMDATL         equ	70	;# 
   973   000047                     NVMDATH         equ	71	;# 
   974   000048                     VREGCON         equ	72	;# 
   975   000049                     BORCON          equ	73	;# 
   976   00004A                     HLVDCON0        equ	74	;# 
   977   00004B                     HLVDCON1        equ	75	;# 
   978   00004C                     ZCDCON          equ	76	;# 
   979   000060                     PMD0            equ	96	;# 
   980   000061                     PMD1            equ	97	;# 
   981   000063                     PMD3            equ	99	;# 
   982   000064                     PMD4            equ	100	;# 
   983   000065                     PMD5            equ	101	;# 
   984   000066                     PMD6            equ	102	;# 
   985   000067                     PMD7            equ	103	;# 
   986   000068                     PMD8            equ	104	;# 
   987   00006A                     MD1CON0         equ	106	;# 
   988   00006B                     MD1CON1         equ	107	;# 
   989   00006C                     MD1SRC          equ	108	;# 
   990   00006D                     MD1CARL         equ	109	;# 
   991   00006E                     MD1CARH         equ	110	;# 
   992   00006F                     CMOUT           equ	111	;# 
   993   000070                     CM1CON0         equ	112	;# 
   994   000071                     CM1CON1         equ	113	;# 
   995   000072                     CM1NCH          equ	114	;# 
   996   000073                     CM1PCH          equ	115	;# 
   997   000074                     CM2CON0         equ	116	;# 
   998   000075                     CM2CON1         equ	117	;# 
   999   000076                     CM2NCH          equ	118	;# 
  1000   000077                     CM2PCH          equ	119	;# 
  1001   000078                     WDTCON0         equ	120	;# 
  1002   000079                     WDTCON1         equ	121	;# 
  1003   00007A                     WDTPS           equ	122	;# 
  1004   00007A                     WDTPSL          equ	122	;# 
  1005   00007B                     WDTPSH          equ	123	;# 
  1006   00007C                     WDTTMR          equ	124	;# 
  1007   00007D                     DAC1DAT         equ	125	;# 
  1008   00007D                     DAC1DATL        equ	125	;# 
  1009   00007F                     DAC1CON         equ	127	;# 
  1010   000080                     SPI1RXB         equ	128	;# 
  1011   000081                     SPI1TXB         equ	129	;# 
  1012   000082                     SPI1TCNT        equ	130	;# 
  1013   000082                     SPI1TCNTL       equ	130	;# 
  1014   000083                     SPI1TCNTH       equ	131	;# 
  1015   000084                     SPI1CON0        equ	132	;# 
  1016   000085                     SPI1CON1        equ	133	;# 
  1017   000086                     SPI1CON2        equ	134	;# 
  1018   000087                     SPI1STATUS      equ	135	;# 
  1019   000088                     SPI1TWIDTH      equ	136	;# 
  1020   000089                     SPI1BAUD        equ	137	;# 
  1021   00008A                     SPI1INTF        equ	138	;# 
  1022   00008B                     SPI1INTE        equ	139	;# 
  1023   00008C                     SPI1CLK         equ	140	;# 
  1024   00008D                     SPI2RXB         equ	141	;# 
  1025   00008E                     SPI2TXB         equ	142	;# 
  1026   00008F                     SPI2TCNT        equ	143	;# 
  1027   00008F                     SPI2TCNTL       equ	143	;# 
  1028   000090                     SPI2TCNTH       equ	144	;# 
  1029   000091                     SPI2CON0        equ	145	;# 
  1030   000092                     SPI2CON1        equ	146	;# 
  1031   000093                     SPI2CON2        equ	147	;# 
  1032   000094                     SPI2STATUS      equ	148	;# 
  1033   000095                     SPI2TWIDTH      equ	149	;# 
  1034   000096                     SPI2BAUD        equ	150	;# 
  1035   000097                     SPI2INTF        equ	151	;# 
  1036   000098                     SPI2INTE        equ	152	;# 
  1037   000099                     SPI2CLK         equ	153	;# 
  1038   0000AC                     ACTCON          equ	172	;# 
  1039   0000AD                     OSCCON1         equ	173	;# 
  1040   0000AE                     OSCCON2         equ	174	;# 
  1041   0000AF                     OSCCON3         equ	175	;# 
  1042   0000B0                     OSCTUNE         equ	176	;# 
  1043   0000B1                     OSCFRQ          equ	177	;# 
  1044   0000B1                     OSCFREQ         equ	177	;# 
  1045   0000B2                     OSCSTAT         equ	178	;# 
  1046   0000B2                     OSCSTAT1        equ	178	;# 
  1047   0000B3                     OSCEN           equ	179	;# 
  1048   0000B4                     PRLOCK          equ	180	;# 
  1049   0000B5                     SCANPR          equ	181	;# 
  1050   0000B6                     DMA1PR          equ	182	;# 
  1051   0000B7                     DMA2PR          equ	183	;# 
  1052   0000B8                     DMA3PR          equ	184	;# 
  1053   0000B9                     DMA4PR          equ	185	;# 
  1054   0000BA                     DMA5PR          equ	186	;# 
  1055   0000BB                     DMA6PR          equ	187	;# 
  1056   0000BE                     MAINPR          equ	190	;# 
  1057   0000BF                     ISRPR           equ	191	;# 
  1058   0000D4                     CLCDATA         equ	212	;# 
  1059   0000D5                     CLCSELECT       equ	213	;# 
  1060   0000D6                     CLCnCON         equ	214	;# 
  1061   0000D7                     CLCnPOL         equ	215	;# 
  1062   0000D8                     CLCnSEL0        equ	216	;# 
  1063   0000D9                     CLCnSEL1        equ	217	;# 
  1064   0000DA                     CLCnSEL2        equ	218	;# 
  1065   0000DB                     CLCnSEL3        equ	219	;# 
  1066   0000DC                     CLCnGLS0        equ	220	;# 
  1067   0000DD                     CLCnGLS1        equ	221	;# 
  1068   0000DE                     CLCnGLS2        equ	222	;# 
  1069   0000DF                     CLCnGLS3        equ	223	;# 
  1070   0000E8                     DMASELECT       equ	232	;# 
  1071   0000E9                     DMAnBUF         equ	233	;# 
  1072   0000EA                     DMAnDCNT        equ	234	;# 
  1073   0000EA                     DMAnDCNTL       equ	234	;# 
  1074   0000EB                     DMAnDCNTH       equ	235	;# 
  1075   0000EC                     DMAnDPTR        equ	236	;# 
  1076   0000EC                     DMAnDPTRL       equ	236	;# 
  1077   0000ED                     DMAnDPTRH       equ	237	;# 
  1078   0000EE                     DMAnDSZ         equ	238	;# 
  1079   0000EE                     DMAnDSZL        equ	238	;# 
  1080   0000EF                     DMAnDSZH        equ	239	;# 
  1081   0000F0                     DMAnDSA         equ	240	;# 
  1082   0000F0                     DMAnDSAL        equ	240	;# 
  1083   0000F1                     DMAnDSAH        equ	241	;# 
  1084   0000F2                     DMAnSCNT        equ	242	;# 
  1085   0000F2                     DMAnSCNTL       equ	242	;# 
  1086   0000F3                     DMAnSCNTH       equ	243	;# 
  1087   0000F4                     DMAnSPTR        equ	244	;# 
  1088   0000F4                     DMAnSPTRL       equ	244	;# 
  1089   0000F5                     DMAnSPTRH       equ	245	;# 
  1090   0000F6                     DMAnSPTRU       equ	246	;# 
  1091   0000F7                     DMAnSSZ         equ	247	;# 
  1092   0000F7                     DMAnSSZL        equ	247	;# 
  1093   0000F8                     DMAnSSZH        equ	248	;# 
  1094   0000F9                     DMAnSSA         equ	249	;# 
  1095   0000F9                     DMAnSSAL        equ	249	;# 
  1096   0000FA                     DMAnSSAH        equ	250	;# 
  1097   0000FB                     DMAnSSAU        equ	251	;# 
  1098   0000FC                     DMAnCON0        equ	252	;# 
  1099   0000FD                     DMAnCON1        equ	253	;# 
  1100   0000FE                     DMAnAIRQ        equ	254	;# 
  1101   0000FF                     DMAnSIRQ        equ	255	;# 
  1102   000200                     PPSLOCK         equ	512	;# 
  1103   000201                     RA0PPS          equ	513	;# 
  1104   000202                     RA1PPS          equ	514	;# 
  1105   000203                     RA2PPS          equ	515	;# 
  1106   000204                     RA3PPS          equ	516	;# 
  1107   000205                     RA4PPS          equ	517	;# 
  1108   000206                     RA5PPS          equ	518	;# 
  1109   000207                     RA6PPS          equ	519	;# 
  1110   000208                     RA7PPS          equ	520	;# 
  1111   000209                     RB0PPS          equ	521	;# 
  1112   00020A                     RB1PPS          equ	522	;# 
  1113   00020B                     RB2PPS          equ	523	;# 
  1114   00020C                     RB3PPS          equ	524	;# 
  1115   00020D                     RB4PPS          equ	525	;# 
  1116   00020E                     RB5PPS          equ	526	;# 
  1117   00020F                     RB6PPS          equ	527	;# 
  1118   000210                     RB7PPS          equ	528	;# 
  1119   000211                     RC0PPS          equ	529	;# 
  1120   000212                     RC1PPS          equ	530	;# 
  1121   000213                     RC2PPS          equ	531	;# 
  1122   000214                     RC3PPS          equ	532	;# 
  1123   000215                     RC4PPS          equ	533	;# 
  1124   000216                     RC5PPS          equ	534	;# 
  1125   000217                     RC6PPS          equ	535	;# 
  1126   000218                     RC7PPS          equ	536	;# 
  1127   000219                     RD0PPS          equ	537	;# 
  1128   00021A                     RD1PPS          equ	538	;# 
  1129   00021B                     RD2PPS          equ	539	;# 
  1130   00021C                     RD3PPS          equ	540	;# 
  1131   00021D                     RD4PPS          equ	541	;# 
  1132   00021E                     RD5PPS          equ	542	;# 
  1133   00021F                     RD6PPS          equ	543	;# 
  1134   000220                     RD7PPS          equ	544	;# 
  1135   000221                     RE0PPS          equ	545	;# 
  1136   000222                     RE1PPS          equ	546	;# 
  1137   000223                     RE2PPS          equ	547	;# 
  1138   000229                     RF0PPS          equ	553	;# 
  1139   00022A                     RF1PPS          equ	554	;# 
  1140   00022B                     RF2PPS          equ	555	;# 
  1141   00022C                     RF3PPS          equ	556	;# 
  1142   00022D                     RF4PPS          equ	557	;# 
  1143   00022E                     RF5PPS          equ	558	;# 
  1144   00022F                     RF6PPS          equ	559	;# 
  1145   000230                     RF7PPS          equ	560	;# 
  1146   00023E                     INT0PPS         equ	574	;# 
  1147   00023F                     INT1PPS         equ	575	;# 
  1148   000240                     INT2PPS         equ	576	;# 
  1149   000241                     T0CKIPPS        equ	577	;# 
  1150   000242                     T1CKIPPS        equ	578	;# 
  1151   000243                     T1GPPS          equ	579	;# 
  1152   000244                     T3CKIPPS        equ	580	;# 
  1153   000245                     T3GPPS          equ	581	;# 
  1154   000246                     T5CKIPPS        equ	582	;# 
  1155   000247                     T5GPPS          equ	583	;# 
  1156   000248                     T2INPPS         equ	584	;# 
  1157   000249                     T4INPPS         equ	585	;# 
  1158   00024A                     T6INPPS         equ	586	;# 
  1159   00024F                     CCP1PPS         equ	591	;# 
  1160   000250                     CCP2PPS         equ	592	;# 
  1161   000251                     CCP3PPS         equ	593	;# 
  1162   000253                     PWM1ERSPPS      equ	595	;# 
  1163   000254                     PWM2ERSPPS      equ	596	;# 
  1164   000255                     PWM3ERSPPS      equ	597	;# 
  1165   000257                     PWMIN0PPS       equ	599	;# 
  1166   000258                     PWMIN1PPS       equ	600	;# 
  1167   000259                     SMT1WINPPS      equ	601	;# 
  1168   00025A                     SMT1SIGPPS      equ	602	;# 
  1169   00025B                     CWG1PPS         equ	603	;# 
  1170   00025B                     CWG1INPPS       equ	603	;# 
  1171   00025C                     CWG2PPS         equ	604	;# 
  1172   00025C                     CWG2INPPS       equ	604	;# 
  1173   00025D                     CWG3PPS         equ	605	;# 
  1174   00025D                     CWG3INPPS       equ	605	;# 
  1175   00025E                     MD1CARLPPS      equ	606	;# 
  1176   00025E                     MDCARLPPS       equ	606	;# 
  1177   00025F                     MD1CARHPPS      equ	607	;# 
  1178   00025F                     MDCARHPPS       equ	607	;# 
  1179   000260                     MD1SRCPPS       equ	608	;# 
  1180   000260                     MDSRCPPS        equ	608	;# 
  1181   000261                     CLCIN0PPS       equ	609	;# 
  1182   000262                     CLCIN1PPS       equ	610	;# 
  1183   000263                     CLCIN2PPS       equ	611	;# 
  1184   000264                     CLCIN3PPS       equ	612	;# 
  1185   000265                     CLCIN4PPS       equ	613	;# 
  1186   000266                     CLCIN5PPS       equ	614	;# 
  1187   000267                     CLCIN6PPS       equ	615	;# 
  1188   000268                     CLCIN7PPS       equ	616	;# 
  1189   000269                     ADACTPPS        equ	617	;# 
  1190   00026A                     SPI1SCKPPS      equ	618	;# 
  1191   00026B                     SPI1SDIPPS      equ	619	;# 
  1192   00026C                     SPI1SSPPS       equ	620	;# 
  1193   00026D                     SPI2SCKPPS      equ	621	;# 
  1194   00026E                     SPI2SDIPPS      equ	622	;# 
  1195   00026F                     SPI2SSPPS       equ	623	;# 
  1196   000270                     I2C1SDAPPS      equ	624	;# 
  1197   000271                     I2C1SCLPPS      equ	625	;# 
  1198   000272                     U1RXPPS         equ	626	;# 
  1199   000273                     U1CTSPPS        equ	627	;# 
  1200   000274                     U2RXPPS         equ	628	;# 
  1201   000275                     U2CTSPPS        equ	629	;# 
  1202   000276                     U3RXPPS         equ	630	;# 
  1203   000277                     U3CTSPPS        equ	631	;# 
  1204   000278                     U4RXPPS         equ	632	;# 
  1205   000279                     U4CTSPPS        equ	633	;# 
  1206   00027A                     U5RXPPS         equ	634	;# 
  1207   00027B                     U5CTSPPS        equ	635	;# 
  1208   000286                     RC4I2C          equ	646	;# 
  1209   000287                     RC3I2C          equ	647	;# 
  1210   000288                     RB2I2C          equ	648	;# 
  1211   000289                     RB1I2C          equ	649	;# 
  1212   00028B                     I2C1RXB         equ	651	;# 
  1213   00028C                     I2C1TXB         equ	652	;# 
  1214   00028D                     I2C1CNT         equ	653	;# 
  1215   00028E                     I2C1ADB0        equ	654	;# 
  1216   00028F                     I2C1ADB1        equ	655	;# 
  1217   000290                     I2C1ADR0        equ	656	;# 
  1218   000291                     I2C1ADR1        equ	657	;# 
  1219   000292                     I2C1ADR2        equ	658	;# 
  1220   000293                     I2C1ADR3        equ	659	;# 
  1221   000294                     I2C1CON0        equ	660	;# 
  1222   000295                     I2C1CON1        equ	661	;# 
  1223   000296                     I2C1CON2        equ	662	;# 
  1224   000297                     I2C1ERR         equ	663	;# 
  1225   000298                     I2C1STAT0       equ	664	;# 
  1226   000299                     I2C1STAT1       equ	665	;# 
  1227   00029A                     I2C1PIR         equ	666	;# 
  1228   00029B                     I2C1PIE         equ	667	;# 
  1229   00029C                     I2C1CLK         equ	668	;# 
  1230   00029D                     I2C1BTO         equ	669	;# 
  1231   0002A1                     U1RXB           equ	673	;# 
  1232   0002A1                     U1RXBL          equ	673	;# 
  1233   0002A2                     U1RXCHK         equ	674	;# 
  1234   0002A3                     U1TXB           equ	675	;# 
  1235   0002A3                     U1TXBL          equ	675	;# 
  1236   0002A4                     U1TXCHK         equ	676	;# 
  1237   0002A5                     U1P1            equ	677	;# 
  1238   0002A5                     U1P1L           equ	677	;# 
  1239   0002A6                     U1P1H           equ	678	;# 
  1240   0002A7                     U1P2            equ	679	;# 
  1241   0002A7                     U1P2L           equ	679	;# 
  1242   0002A8                     U1P2H           equ	680	;# 
  1243   0002A9                     U1P3            equ	681	;# 
  1244   0002A9                     U1P3L           equ	681	;# 
  1245   0002AA                     U1P3H           equ	682	;# 
  1246   0002AB                     U1CON0          equ	683	;# 
  1247   0002AC                     U1CON1          equ	684	;# 
  1248   0002AD                     U1CON2          equ	685	;# 
  1249   0002AE                     U1BRG           equ	686	;# 
  1250   0002AE                     U1BRGL          equ	686	;# 
  1251   0002AF                     U1BRGH          equ	687	;# 
  1252   0002B0                     U1FIFO          equ	688	;# 
  1253   0002B1                     U1UIR           equ	689	;# 
  1254   0002B2                     U1ERRIR         equ	690	;# 
  1255   0002B3                     U1ERRIE         equ	691	;# 
  1256   0002B4                     U2RXB           equ	692	;# 
  1257   0002B4                     U2RXBL          equ	692	;# 
  1258   0002B6                     U2TXB           equ	694	;# 
  1259   0002B6                     U2TXBL          equ	694	;# 
  1260   0002B8                     U2P1            equ	696	;# 
  1261   0002B8                     U2P1L           equ	696	;# 
  1262   0002BA                     U2P2            equ	698	;# 
  1263   0002BA                     U2P2L           equ	698	;# 
  1264   0002BC                     U2P3            equ	700	;# 
  1265   0002BC                     U2P3L           equ	700	;# 
  1266   0002BE                     U2CON0          equ	702	;# 
  1267   0002BF                     U2CON1          equ	703	;# 
  1268   0002C0                     U2CON2          equ	704	;# 
  1269   0002C1                     U2BRG           equ	705	;# 
  1270   0002C1                     U2BRGL          equ	705	;# 
  1271   0002C2                     U2BRGH          equ	706	;# 
  1272   0002C3                     U2FIFO          equ	707	;# 
  1273   0002C4                     U2UIR           equ	708	;# 
  1274   0002C5                     U2ERRIR         equ	709	;# 
  1275   0002C6                     U2ERRIE         equ	710	;# 
  1276   0002C7                     U3RXB           equ	711	;# 
  1277   0002C7                     U3RXBL          equ	711	;# 
  1278   0002C9                     U3TXB           equ	713	;# 
  1279   0002C9                     U3TXBL          equ	713	;# 
  1280   0002CB                     U3P1            equ	715	;# 
  1281   0002CB                     U3P1L           equ	715	;# 
  1282   0002CD                     U3P2            equ	717	;# 
  1283   0002CD                     U3P2L           equ	717	;# 
  1284   0002CF                     U3P3            equ	719	;# 
  1285   0002CF                     U3P3L           equ	719	;# 
  1286   0002D1                     U3CON0          equ	721	;# 
  1287   0002D2                     U3CON1          equ	722	;# 
  1288   0002D3                     U3CON2          equ	723	;# 
  1289   0002D4                     U3BRG           equ	724	;# 
  1290   0002D4                     U3BRGL          equ	724	;# 
  1291   0002D5                     U3BRGH          equ	725	;# 
  1292   0002D6                     U3FIFO          equ	726	;# 
  1293   0002D7                     U3UIR           equ	727	;# 
  1294   0002D8                     U3ERRIR         equ	728	;# 
  1295   0002D9                     U3ERRIE         equ	729	;# 
  1296   0002DA                     U4RXB           equ	730	;# 
  1297   0002DA                     U4RXBL          equ	730	;# 
  1298   0002DC                     U4TXB           equ	732	;# 
  1299   0002DC                     U4TXBL          equ	732	;# 
  1300   0002DE                     U4P1            equ	734	;# 
  1301   0002DE                     U4P1L           equ	734	;# 
  1302   0002E0                     U4P2            equ	736	;# 
  1303   0002E0                     U4P2L           equ	736	;# 
  1304   0002E2                     U4P3            equ	738	;# 
  1305   0002E2                     U4P3L           equ	738	;# 
  1306   0002E4                     U4CON0          equ	740	;# 
  1307   0002E5                     U4CON1          equ	741	;# 
  1308   0002E6                     U4CON2          equ	742	;# 
  1309   0002E7                     U4BRG           equ	743	;# 
  1310   0002E7                     U4BRGL          equ	743	;# 
  1311   0002E8                     U4BRGH          equ	744	;# 
  1312   0002E9                     U4FIFO          equ	745	;# 
  1313   0002EA                     U4UIR           equ	746	;# 
  1314   0002EB                     U4ERRIR         equ	747	;# 
  1315   0002EC                     U4ERRIE         equ	748	;# 
  1316   0002ED                     U5RXB           equ	749	;# 
  1317   0002ED                     U5RXBL          equ	749	;# 
  1318   0002EF                     U5TXB           equ	751	;# 
  1319   0002EF                     U5TXBL          equ	751	;# 
  1320   0002F1                     U5P1            equ	753	;# 
  1321   0002F1                     U5P1L           equ	753	;# 
  1322   0002F3                     U5P2            equ	755	;# 
  1323   0002F3                     U5P2L           equ	755	;# 
  1324   0002F5                     U5P3            equ	757	;# 
  1325   0002F5                     U5P3L           equ	757	;# 
  1326   0002F7                     U5CON0          equ	759	;# 
  1327   0002F8                     U5CON1          equ	760	;# 
  1328   0002F9                     U5CON2          equ	761	;# 
  1329   0002FA                     U5BRG           equ	762	;# 
  1330   0002FA                     U5BRGL          equ	762	;# 
  1331   0002FB                     U5BRGH          equ	763	;# 
  1332   0002FC                     U5FIFO          equ	764	;# 
  1333   0002FD                     U5UIR           equ	765	;# 
  1334   0002FE                     U5ERRIR         equ	766	;# 
  1335   0002FF                     U5ERRIE         equ	767	;# 
  1336   000300                     SMT1TMR         equ	768	;# 
  1337   000300                     SMT1TMRL        equ	768	;# 
  1338   000301                     SMT1TMRH        equ	769	;# 
  1339   000302                     SMT1TMRU        equ	770	;# 
  1340   000303                     SMT1CPR         equ	771	;# 
  1341   000303                     SMT1CPRL        equ	771	;# 
  1342   000304                     SMT1CPRH        equ	772	;# 
  1343   000305                     SMT1CPRU        equ	773	;# 
  1344   000306                     SMT1CPW         equ	774	;# 
  1345   000306                     SMT1CPWL        equ	774	;# 
  1346   000307                     SMT1CPWH        equ	775	;# 
  1347   000308                     SMT1CPWU        equ	776	;# 
  1348   000309                     SMT1PR          equ	777	;# 
  1349   000309                     SMT1PRL         equ	777	;# 
  1350   00030A                     SMT1PRH         equ	778	;# 
  1351   00030B                     SMT1PRU         equ	779	;# 
  1352   00030C                     SMT1CON0        equ	780	;# 
  1353   00030D                     SMT1CON1        equ	781	;# 
  1354   00030E                     SMT1STAT        equ	782	;# 
  1355   00030F                     SMT1CLK         equ	783	;# 
  1356   000310                     SMT1SIG         equ	784	;# 
  1357   000311                     SMT1WIN         equ	785	;# 
  1358   000318                     TMR0L           equ	792	;# 
  1359   000318                     TMR0            equ	792	;# 
  1360   000319                     TMR0H           equ	793	;# 
  1361   000319                     PR0             equ	793	;# 
  1362   00031A                     T0CON0          equ	794	;# 
  1363   00031B                     T0CON1          equ	795	;# 
  1364   00031C                     TMR1            equ	796	;# 
  1365   00031C                     TMR1L           equ	796	;# 
  1366   00031D                     TMR1H           equ	797	;# 
  1367   00031E                     T1CON           equ	798	;# 
  1368   00031E                     TMR1CON         equ	798	;# 
  1369   00031F                     T1GCON          equ	799	;# 
  1370   00031F                     TMR1GCON        equ	799	;# 
  1371   000320                     T1GATE          equ	800	;# 
  1372   000320                     TMR1GATE        equ	800	;# 
  1373   000321                     T1CLK           equ	801	;# 
  1374   000321                     TMR1CLK         equ	801	;# 
  1375   000321                     PR1             equ	801	;# 
  1376   000322                     T2TMR           equ	802	;# 
  1377   000322                     TMR2            equ	802	;# 
  1378   000323                     T2PR            equ	803	;# 
  1379   000323                     PR2             equ	803	;# 
  1380   000324                     T2CON           equ	804	;# 
  1381   000325                     T2HLT           equ	805	;# 
  1382   000326                     T2CLKCON        equ	806	;# 
  1383   000326                     T2CLK           equ	806	;# 
  1384   000327                     T2RST           equ	807	;# 
  1385   000328                     TMR3            equ	808	;# 
  1386   000328                     TMR3L           equ	808	;# 
  1387   000329                     TMR3H           equ	809	;# 
  1388   00032A                     T3CON           equ	810	;# 
  1389   00032A                     TMR3CON         equ	810	;# 
  1390   00032B                     T3GCON          equ	811	;# 
  1391   00032B                     TMR3GCON        equ	811	;# 
  1392   00032C                     T3GATE          equ	812	;# 
  1393   00032C                     TMR3GATE        equ	812	;# 
  1394   00032D                     T3CLK           equ	813	;# 
  1395   00032D                     TMR3CLK         equ	813	;# 
  1396   00032D                     PR3             equ	813	;# 
  1397   00032E                     T4TMR           equ	814	;# 
  1398   00032E                     TMR4            equ	814	;# 
  1399   00032F                     T4PR            equ	815	;# 
  1400   00032F                     PR4             equ	815	;# 
  1401   000330                     T4CON           equ	816	;# 
  1402   000331                     T4HLT           equ	817	;# 
  1403   000332                     T4CLKCON        equ	818	;# 
  1404   000332                     T4CLK           equ	818	;# 
  1405   000333                     T4RST           equ	819	;# 
  1406   000334                     TMR5            equ	820	;# 
  1407   000334                     TMR5L           equ	820	;# 
  1408   000335                     TMR5H           equ	821	;# 
  1409   000336                     T5CON           equ	822	;# 
  1410   000336                     TMR5CON         equ	822	;# 
  1411   000337                     T5GCON          equ	823	;# 
  1412   000337                     TMR5GCON        equ	823	;# 
  1413   000338                     T5GATE          equ	824	;# 
  1414   000338                     TMR5GATE        equ	824	;# 
  1415   000339                     T5CLK           equ	825	;# 
  1416   000339                     TMR5CLK         equ	825	;# 
  1417   000339                     PR5             equ	825	;# 
  1418   00033A                     T6TMR           equ	826	;# 
  1419   00033A                     TMR6            equ	826	;# 
  1420   00033B                     T6PR            equ	827	;# 
  1421   00033B                     PR6             equ	827	;# 
  1422   00033C                     T6CON           equ	828	;# 
  1423   00033D                     T6HLT           equ	829	;# 
  1424   00033E                     T6CLKCON        equ	830	;# 
  1425   00033E                     T6CLK           equ	830	;# 
  1426   00033F                     T6RST           equ	831	;# 
  1427   000340                     CCPR1           equ	832	;# 
  1428   000340                     CCPR1L          equ	832	;# 
  1429   000341                     CCPR1H          equ	833	;# 
  1430   000342                     CCP1CON         equ	834	;# 
  1431   000343                     CCP1CAP         equ	835	;# 
  1432   000344                     CCPR2           equ	836	;# 
  1433   000344                     CCPR2L          equ	836	;# 
  1434   000345                     CCPR2H          equ	837	;# 
  1435   000346                     CCP2CON         equ	838	;# 
  1436   000347                     CCP2CAP         equ	839	;# 
  1437   000348                     CCPR3           equ	840	;# 
  1438   000348                     CCPR3L          equ	840	;# 
  1439   000349                     CCPR3H          equ	841	;# 
  1440   00034A                     CCP3CON         equ	842	;# 
  1441   00034B                     CCP3CAP         equ	843	;# 
  1442   00034C                     CCPTMRS0        equ	844	;# 
  1443   00034F                     CRCDATA         equ	847	;# 
  1444   00034F                     CRCDATL         equ	847	;# 
  1445   000350                     CRCDATH         equ	848	;# 
  1446   000351                     CRCACC          equ	849	;# 
  1447   000351                     CRCACCL         equ	849	;# 
  1448   000352                     CRCACCH         equ	850	;# 
  1449   000353                     CRCSHFT         equ	851	;# 
  1450   000353                     CRCSHIFTL       equ	851	;# 
  1451   000354                     CRCSHIFTH       equ	852	;# 
  1452   000355                     CRCXOR          equ	853	;# 
  1453   000355                     CRCXORL         equ	853	;# 
  1454   000356                     CRCXORH         equ	854	;# 
  1455   000357                     CRCCON0         equ	855	;# 
  1456   000358                     CRCCON1         equ	856	;# 
  1457   00035A                     SCANLADR        equ	858	;# 
  1458   00035A                     SCANLADRL       equ	858	;# 
  1459   00035B                     SCANLADRH       equ	859	;# 
  1460   00035C                     SCANLADRU       equ	860	;# 
  1461   00035D                     SCANHADR        equ	861	;# 
  1462   00035D                     SCANHADRL       equ	861	;# 
  1463   00035E                     SCANHADRH       equ	862	;# 
  1464   00035F                     SCANHADRU       equ	863	;# 
  1465   000360                     SCANCON0        equ	864	;# 
  1466   000361                     SCANTRIG        equ	865	;# 
  1467   000362                     IPR0            equ	866	;# 
  1468   000363                     IPR1            equ	867	;# 
  1469   000364                     IPR2            equ	868	;# 
  1470   000365                     IPR3            equ	869	;# 
  1471   000366                     IPR4            equ	870	;# 
  1472   000367                     IPR5            equ	871	;# 
  1473   000368                     IPR6            equ	872	;# 
  1474   000369                     IPR7            equ	873	;# 
  1475   00036A                     IPR8            equ	874	;# 
  1476   00036B                     IPR9            equ	875	;# 
  1477   00036C                     IPR10           equ	876	;# 
  1478   00036D                     IPR11           equ	877	;# 
  1479   00036E                     IPR12           equ	878	;# 
  1480   00036F                     IPR13           equ	879	;# 
  1481   000370                     IPR14           equ	880	;# 
  1482   000371                     IPR15           equ	881	;# 
  1483   000373                     STATUS_CSHAD    equ	883	;# 
  1484   000374                     WREG_CSHAD      equ	884	;# 
  1485   000375                     BSR_CSHAD       equ	885	;# 
  1486   000376                     SHADCON         equ	886	;# 
  1487   000377                     STATUS_SHAD     equ	887	;# 
  1488   000378                     WREG_SHAD       equ	888	;# 
  1489   000379                     BSR_SHAD        equ	889	;# 
  1490   00037A                     PCLATH_SHAD     equ	890	;# 
  1491   00037B                     PCLATU_SHAD     equ	891	;# 
  1492   00037C                     FSR0SH          equ	892	;# 
  1493   00037C                     FSR0L_SHAD      equ	892	;# 
  1494   00037D                     FSR0H_SHAD      equ	893	;# 
  1495   00037E                     FSR1SH          equ	894	;# 
  1496   00037E                     FSR1L_SHAD      equ	894	;# 
  1497   00037F                     FSR1H_SHAD      equ	895	;# 
  1498   000380                     FSR2SH          equ	896	;# 
  1499   000380                     FSR2L_SHAD      equ	896	;# 
  1500   000381                     FSR2H_SHAD      equ	897	;# 
  1501   000382                     PRODSH          equ	898	;# 
  1502   000382                     PRODL_SHAD      equ	898	;# 
  1503   000383                     PRODH_SHAD      equ	899	;# 
  1504   0003BC                     CWG1CLK         equ	956	;# 
  1505   0003BC                     CWG1CLKCON      equ	956	;# 
  1506   0003BD                     CWG1ISM         equ	957	;# 
  1507   0003BD                     CWG1DAT         equ	957	;# 
  1508   0003BE                     CWG1DBR         equ	958	;# 
  1509   0003BF                     CWG1DBF         equ	959	;# 
  1510   0003C0                     CWG1CON0        equ	960	;# 
  1511   0003C1                     CWG1CON1        equ	961	;# 
  1512   0003C2                     CWG1AS0         equ	962	;# 
  1513   0003C3                     CWG1AS1         equ	963	;# 
  1514   0003C4                     CWG1STR         equ	964	;# 
  1515   0003C5                     CWG2CLK         equ	965	;# 
  1516   0003C5                     CWG2CLKCON      equ	965	;# 
  1517   0003C6                     CWG2ISM         equ	966	;# 
  1518   0003C6                     CWG2DAT         equ	966	;# 
  1519   0003C7                     CWG2DBR         equ	967	;# 
  1520   0003C8                     CWG2DBF         equ	968	;# 
  1521   0003C9                     CWG2CON0        equ	969	;# 
  1522   0003CA                     CWG2CON1        equ	970	;# 
  1523   0003CB                     CWG2AS0         equ	971	;# 
  1524   0003CC                     CWG2AS1         equ	972	;# 
  1525   0003CD                     CWG2STR         equ	973	;# 
  1526   0003CE                     CWG3CLK         equ	974	;# 
  1527   0003CE                     CWG3CLKCON      equ	974	;# 
  1528   0003CF                     CWG3ISM         equ	975	;# 
  1529   0003CF                     CWG3DAT         equ	975	;# 
  1530   0003D0                     CWG3DBR         equ	976	;# 
  1531   0003D1                     CWG3DBF         equ	977	;# 
  1532   0003D2                     CWG3CON0        equ	978	;# 
  1533   0003D3                     CWG3CON1        equ	979	;# 
  1534   0003D4                     CWG3AS0         equ	980	;# 
  1535   0003D5                     CWG3AS1         equ	981	;# 
  1536   0003D6                     CWG3STR         equ	982	;# 
  1537   0003D7                     FVRCON          equ	983	;# 
  1538   0003D8                     ADCPCON         equ	984	;# 
  1539   0003D8                     ADCP            equ	984	;# 
  1540   0003D9                     ADLTH           equ	985	;# 
  1541   0003D9                     ADLTHL          equ	985	;# 
  1542   0003DA                     ADLTHH          equ	986	;# 
  1543   0003DB                     ADUTH           equ	987	;# 
  1544   0003DB                     ADUTHL          equ	987	;# 
  1545   0003DC                     ADUTHH          equ	988	;# 
  1546   0003DD                     ADERR           equ	989	;# 
  1547   0003DD                     ADERRL          equ	989	;# 
  1548   0003DE                     ADERRH          equ	990	;# 
  1549   0003DF                     ADSTPT          equ	991	;# 
  1550   0003DF                     ADSTPTL         equ	991	;# 
  1551   0003E0                     ADSTPTH         equ	992	;# 
  1552   0003E1                     ADFLTR          equ	993	;# 
  1553   0003E1                     ADFLTRL         equ	993	;# 
  1554   0003E2                     ADFLTRH         equ	994	;# 
  1555   0003E3                     ADACC           equ	995	;# 
  1556   0003E3                     ADACCL          equ	995	;# 
  1557   0003E4                     ADACCH          equ	996	;# 
  1558   0003E5                     ADACCU          equ	997	;# 
  1559   0003E6                     ADCNT           equ	998	;# 
  1560   0003E7                     ADRPT           equ	999	;# 
  1561   0003E8                     ADPREV          equ	1000	;# 
  1562   0003E8                     ADPREVL         equ	1000	;# 
  1563   0003E9                     ADPREVH         equ	1001	;# 
  1564   0003EA                     ADRES           equ	1002	;# 
  1565   0003EA                     ADRESL          equ	1002	;# 
  1566   0003EB                     ADRESH          equ	1003	;# 
  1567   0003EC                     ADPCH           equ	1004	;# 
  1568   0003EE                     ADACQ           equ	1006	;# 
  1569   0003EE                     ADACQL          equ	1006	;# 
  1570   0003EF                     ADACQH          equ	1007	;# 
  1571   0003F0                     ADCAP           equ	1008	;# 
  1572   0003F1                     ADPRE           equ	1009	;# 
  1573   0003F1                     ADPREL          equ	1009	;# 
  1574   0003F2                     ADPREH          equ	1010	;# 
  1575   0003F3                     ADCON0          equ	1011	;# 
  1576   0003F4                     ADCON1          equ	1012	;# 
  1577   0003F5                     ADCON2          equ	1013	;# 
  1578   0003F6                     ADCON3          equ	1014	;# 
  1579   0003F7                     ADSTAT          equ	1015	;# 
  1580   0003F8                     ADREF           equ	1016	;# 
  1581   0003F9                     ADACT           equ	1017	;# 
  1582   0003FA                     ADCLK           equ	1018	;# 
  1583   000400                     ANSELA          equ	1024	;# 
  1584   000401                     WPUA            equ	1025	;# 
  1585   000402                     ODCONA          equ	1026	;# 
  1586   000403                     SLRCONA         equ	1027	;# 
  1587   000404                     INLVLA          equ	1028	;# 
  1588   000405                     IOCAP           equ	1029	;# 
  1589   000406                     IOCAN           equ	1030	;# 
  1590   000407                     IOCAF           equ	1031	;# 
  1591   000408                     ANSELB          equ	1032	;# 
  1592   000409                     WPUB            equ	1033	;# 
  1593   00040A                     ODCONB          equ	1034	;# 
  1594   00040B                     SLRCONB         equ	1035	;# 
  1595   00040C                     INLVLB          equ	1036	;# 
  1596   00040D                     IOCBP           equ	1037	;# 
  1597   00040E                     IOCBN           equ	1038	;# 
  1598   00040F                     IOCBF           equ	1039	;# 
  1599   000410                     ANSELC          equ	1040	;# 
  1600   000411                     WPUC            equ	1041	;# 
  1601   000412                     ODCONC          equ	1042	;# 
  1602   000413                     SLRCONC         equ	1043	;# 
  1603   000414                     INLVLC          equ	1044	;# 
  1604   000415                     IOCCP           equ	1045	;# 
  1605   000416                     IOCCN           equ	1046	;# 
  1606   000417                     IOCCF           equ	1047	;# 
  1607   000418                     ANSELD          equ	1048	;# 
  1608   000419                     WPUD            equ	1049	;# 
  1609   00041A                     ODCOND          equ	1050	;# 
  1610   00041B                     SLRCOND         equ	1051	;# 
  1611   00041C                     INLVLD          equ	1052	;# 
  1612   000420                     ANSELE          equ	1056	;# 
  1613   000421                     WPUE            equ	1057	;# 
  1614   000422                     ODCONE          equ	1058	;# 
  1615   000423                     SLRCONE         equ	1059	;# 
  1616   000424                     INLVLE          equ	1060	;# 
  1617   000425                     IOCEP           equ	1061	;# 
  1618   000426                     IOCEN           equ	1062	;# 
  1619   000427                     IOCEF           equ	1063	;# 
  1620   000428                     ANSELF          equ	1064	;# 
  1621   000429                     WPUF            equ	1065	;# 
  1622   00042A                     ODCONF          equ	1066	;# 
  1623   00042B                     SLRCONF         equ	1067	;# 
  1624   00042C                     INLVLF          equ	1068	;# 
  1625   000440                     NCO1ACC         equ	1088	;# 
  1626   000440                     NCO1ACCL        equ	1088	;# 
  1627   000441                     NCO1ACCH        equ	1089	;# 
  1628   000442                     NCO1ACCU        equ	1090	;# 
  1629   000443                     NCO1INC         equ	1091	;# 
  1630   000443                     NCO1INCL        equ	1091	;# 
  1631   000444                     NCO1INCH        equ	1092	;# 
  1632   000445                     NCO1INCU        equ	1093	;# 
  1633   000446                     NCO1CON         equ	1094	;# 
  1634   000447                     NCO1CLK         equ	1095	;# 
  1635   000448                     NCO2ACC         equ	1096	;# 
  1636   000448                     NCO2ACCL        equ	1096	;# 
  1637   000449                     NCO2ACCH        equ	1097	;# 
  1638   00044A                     NCO2ACCU        equ	1098	;# 
  1639   00044B                     NCO2INC         equ	1099	;# 
  1640   00044B                     NCO2INCL        equ	1099	;# 
  1641   00044C                     NCO2INCH        equ	1100	;# 
  1642   00044D                     NCO2INCU        equ	1101	;# 
  1643   00044E                     NCO2CON         equ	1102	;# 
  1644   00044F                     NCO2CLK         equ	1103	;# 
  1645   000450                     NCO3ACC         equ	1104	;# 
  1646   000450                     NCO3ACCL        equ	1104	;# 
  1647   000451                     NCO3ACCH        equ	1105	;# 
  1648   000452                     NCO3ACCU        equ	1106	;# 
  1649   000453                     NCO3INC         equ	1107	;# 
  1650   000453                     NCO3INCL        equ	1107	;# 
  1651   000454                     NCO3INCH        equ	1108	;# 
  1652   000455                     NCO3INCU        equ	1109	;# 
  1653   000456                     NCO3CON         equ	1110	;# 
  1654   000457                     NCO3CLK         equ	1111	;# 
  1655   000459                     IVTLOCK         equ	1113	;# 
  1656   00045A                     IVTAD           equ	1114	;# 
  1657   00045A                     IVTADL          equ	1114	;# 
  1658   00045B                     IVTADH          equ	1115	;# 
  1659   00045C                     IVTADU          equ	1116	;# 
  1660   00045D                     IVTBASE         equ	1117	;# 
  1661   00045D                     IVTBASEL        equ	1117	;# 
  1662   00045E                     IVTBASEH        equ	1118	;# 
  1663   00045F                     IVTBASEU        equ	1119	;# 
  1664   000460                     PWM1ERS         equ	1120	;# 
  1665   000461                     PWM1CLK         equ	1121	;# 
  1666   000462                     PWM1LDS         equ	1122	;# 
  1667   000463                     PWM1PR          equ	1123	;# 
  1668   000463                     PWM1PRL         equ	1123	;# 
  1669   000464                     PWM1PRH         equ	1124	;# 
  1670   000465                     PWM1CPRE        equ	1125	;# 
  1671   000466                     PWM1PIPOS       equ	1126	;# 
  1672   000467                     PWM1GIR         equ	1127	;# 
  1673   000468                     PWM1GIE         equ	1128	;# 
  1674   000469                     PWM1CON         equ	1129	;# 
  1675   00046A                     PWM1S1CFG       equ	1130	;# 
  1676   00046B                     PWM1S1P1        equ	1131	;# 
  1677   00046B                     PWM1S1P1L       equ	1131	;# 
  1678   00046C                     PWM1S1P1H       equ	1132	;# 
  1679   00046D                     PWM1S1P2        equ	1133	;# 
  1680   00046D                     PWM1S1P2L       equ	1133	;# 
  1681   00046E                     PWM1S1P2H       equ	1134	;# 
  1682   00046F                     PWM2ERS         equ	1135	;# 
  1683   000470                     PWM2CLK         equ	1136	;# 
  1684   000471                     PWM2LDS         equ	1137	;# 
  1685   000472                     PWM2PR          equ	1138	;# 
  1686   000472                     PWM2PRL         equ	1138	;# 
  1687   000473                     PWM2PRH         equ	1139	;# 
  1688   000474                     PWM2CPRE        equ	1140	;# 
  1689   000475                     PWM2PIPOS       equ	1141	;# 
  1690   000476                     PWM2GIR         equ	1142	;# 
  1691   000477                     PWM2GIE         equ	1143	;# 
  1692   000478                     PWM2CON         equ	1144	;# 
  1693   000479                     PWM2S1CFG       equ	1145	;# 
  1694   00047A                     PWM2S1P1        equ	1146	;# 
  1695   00047A                     PWM2S1P1L       equ	1146	;# 
  1696   00047B                     PWM2S1P1H       equ	1147	;# 
  1697   00047C                     PWM2S1P2        equ	1148	;# 
  1698   00047C                     PWM2S1P2L       equ	1148	;# 
  1699   00047D                     PWM2S1P2H       equ	1149	;# 
  1700   00047E                     PWM3ERS         equ	1150	;# 
  1701   00047F                     PWM3CLK         equ	1151	;# 
  1702   000480                     PWM3LDS         equ	1152	;# 
  1703   000481                     PWM3PR          equ	1153	;# 
  1704   000481                     PWM3PRL         equ	1153	;# 
  1705   000482                     PWM3PRH         equ	1154	;# 
  1706   000483                     PWM3CPRE        equ	1155	;# 
  1707   000484                     PWM3PIPOS       equ	1156	;# 
  1708   000485                     PWM3GIR         equ	1157	;# 
  1709   000486                     PWM3GIE         equ	1158	;# 
  1710   000487                     PWM3CON         equ	1159	;# 
  1711   000488                     PWM3S1CFG       equ	1160	;# 
  1712   000489                     PWM3S1P1        equ	1161	;# 
  1713   000489                     PWM3S1P1L       equ	1161	;# 
  1714   00048A                     PWM3S1P1H       equ	1162	;# 
  1715   00048B                     PWM3S1P2        equ	1163	;# 
  1716   00048B                     PWM3S1P2L       equ	1163	;# 
  1717   00048C                     PWM3S1P2H       equ	1164	;# 
  1718   00049C                     PWMLOAD         equ	1180	;# 
  1719   00049D                     PWMEN           equ	1181	;# 
  1720   00049E                     PIE0            equ	1182	;# 
  1721   00049F                     PIE1            equ	1183	;# 
  1722   0004A0                     PIE2            equ	1184	;# 
  1723   0004A1                     PIE3            equ	1185	;# 
  1724   0004A2                     PIE4            equ	1186	;# 
  1725   0004A3                     PIE5            equ	1187	;# 
  1726   0004A4                     PIE6            equ	1188	;# 
  1727   0004A5                     PIE7            equ	1189	;# 
  1728   0004A6                     PIE8            equ	1190	;# 
  1729   0004A7                     PIE9            equ	1191	;# 
  1730   0004A8                     PIE10           equ	1192	;# 
  1731   0004A9                     PIE11           equ	1193	;# 
  1732   0004AA                     PIE12           equ	1194	;# 
  1733   0004AB                     PIE13           equ	1195	;# 
  1734   0004AC                     PIE14           equ	1196	;# 
  1735   0004AD                     PIE15           equ	1197	;# 
  1736   0004AE                     PIR0            equ	1198	;# 
  1737   0004AF                     PIR1            equ	1199	;# 
  1738   0004B0                     PIR2            equ	1200	;# 
  1739   0004B1                     PIR3            equ	1201	;# 
  1740   0004B2                     PIR4            equ	1202	;# 
  1741   0004B3                     PIR5            equ	1203	;# 
  1742   0004B4                     PIR6            equ	1204	;# 
  1743   0004B5                     PIR7            equ	1205	;# 
  1744   0004B6                     PIR8            equ	1206	;# 
  1745   0004B7                     PIR9            equ	1207	;# 
  1746   0004B8                     PIR10           equ	1208	;# 
  1747   0004B9                     PIR11           equ	1209	;# 
  1748   0004BA                     PIR12           equ	1210	;# 
  1749   0004BB                     PIR13           equ	1211	;# 
  1750   0004BC                     PIR14           equ	1212	;# 
  1751   0004BD                     PIR15           equ	1213	;# 
  1752   0004BE                     LATA            equ	1214	;# 
  1753   0004BF                     LATB            equ	1215	;# 
  1754   0004C0                     LATC            equ	1216	;# 
  1755   0004C1                     LATD            equ	1217	;# 
  1756   0004C2                     LATE            equ	1218	;# 
  1757   0004C3                     LATF            equ	1219	;# 
  1758   0004C6                     TRISA           equ	1222	;# 
  1759   0004C7                     TRISB           equ	1223	;# 
  1760   0004C8                     TRISC           equ	1224	;# 
  1761   0004C9                     TRISD           equ	1225	;# 
  1762   0004CA                     TRISE           equ	1226	;# 
  1763   0004CB                     TRISF           equ	1227	;# 
  1764   0004CE                     PORTA           equ	1230	;# 
  1765   0004CF                     PORTB           equ	1231	;# 
  1766   0004D0                     PORTC           equ	1232	;# 
  1767   0004D1                     PORTD           equ	1233	;# 
  1768   0004D2                     PORTE           equ	1234	;# 
  1769   0004D3                     PORTF           equ	1235	;# 
  1770   0004D6                     INTCON0         equ	1238	;# 
  1771   0004D7                     INTCON1         equ	1239	;# 
  1772   0004D8                     STATUS          equ	1240	;# 
  1773   0004D9                     FSR2            equ	1241	;# 
  1774   0004D9                     FSR2L           equ	1241	;# 
  1775   0004DA                     FSR2H           equ	1242	;# 
  1776   0004DB                     PLUSW2          equ	1243	;# 
  1777   0004DC                     PREINC2         equ	1244	;# 
  1778   0004DD                     POSTDEC2        equ	1245	;# 
  1779   0004DE                     POSTINC2        equ	1246	;# 
  1780   0004DF                     INDF2           equ	1247	;# 
  1781   0004E0                     BSR             equ	1248	;# 
  1782   0004E1                     FSR1            equ	1249	;# 
  1783   0004E1                     FSR1L           equ	1249	;# 
  1784   0004E2                     FSR1H           equ	1250	;# 
  1785   0004E3                     PLUSW1          equ	1251	;# 
  1786   0004E4                     PREINC1         equ	1252	;# 
  1787   0004E5                     POSTDEC1        equ	1253	;# 
  1788   0004E6                     POSTINC1        equ	1254	;# 
  1789   0004E7                     INDF1           equ	1255	;# 
  1790   0004E8                     WREG            equ	1256	;# 
  1791   0004E9                     FSR0            equ	1257	;# 
  1792   0004E9                     FSR0L           equ	1257	;# 
  1793   0004EA                     FSR0H           equ	1258	;# 
  1794   0004EB                     PLUSW0          equ	1259	;# 
  1795   0004EC                     PREINC0         equ	1260	;# 
  1796   0004ED                     POSTDEC0        equ	1261	;# 
  1797   0004EE                     POSTINC0        equ	1262	;# 
  1798   0004EF                     INDF0           equ	1263	;# 
  1799   0004F0                     PCON0           equ	1264	;# 
  1800   0004F1                     PCON1           equ	1265	;# 
  1801   0004F2                     CPUDOZE         equ	1266	;# 
  1802   0004F3                     PROD            equ	1267	;# 
  1803   0004F3                     PRODL           equ	1267	;# 
  1804   0004F4                     PRODH           equ	1268	;# 
  1805   0004F5                     TABLAT          equ	1269	;# 
  1806   0004F6                     TBLPTR          equ	1270	;# 
  1807   0004F6                     TBLPTRL         equ	1270	;# 
  1808   0004F7                     TBLPTRH         equ	1271	;# 
  1809   0004F8                     TBLPTRU         equ	1272	;# 
  1810   0004F9                     PCLAT           equ	1273	;# 
  1811   0004F9                     PCL             equ	1273	;# 
  1812   0004FA                     PCLATH          equ	1274	;# 
  1813   0004FB                     PCLATU          equ	1275	;# 
  1814   0004FC                     STKPTR          equ	1276	;# 
  1815   0004FD                     TOS             equ	1277	;# 
  1816   0004FD                     TOSL            equ	1277	;# 
  1817   0004FE                     TOSH            equ	1278	;# 
  1818   0004FF                     TOSU            equ	1279	;# 
  1819   0000B3                     _OSCEN          set	179
  1820   0000B1                     _OSCFRQ         set	177
  1821   0000AD                     _OSCCON1        set	173
  1822   00023F                     _INT1PPS        set	575
  1823   000418                     _ANSELD         set	1048
  1824   000409                     _WPUBbits       set	1033
  1825   000408                     _ANSELBbits     set	1032
  1826   0004D6                     _INTCON0bits    set	1238
  1827   0004B4                     _PIR6bits       set	1204
  1828   0004A4                     _PIE6bits       set	1188
  1829   0004C7                     _TRISBbits      set	1223
  1830   0004D1                     _PORTD          set	1233
  1831   0004C1                     _LATD           set	1217
  1832   0004C9                     _TRISD          set	1225
  1833   0004C1                     _LATDbits       set	1217
  1834                           
  1835                           	psect	smallconst
  1836   002600                     __psmallconst:
  1837                           	callstack 0
  1838   002600  00                 	db	0
  1839   002601                     STR_1:
  1840   002601  4D                 	db	77	;'M'
  1841   002602  69                 	db	105	;'i'
  1842   002603  63                 	db	99	;'c'
  1843   002604  72                 	db	114	;'r'
  1844   002605  6F                 	db	111	;'o'
  1845   002606  62                 	db	98	;'b'
  1846   002607  69                 	db	105	;'i'
  1847   002608  6F                 	db	111	;'o'
  1848   002609  20                 	db	32
  1849   00260A  55                 	db	85	;'U'
  1850   00260B  50                 	db	80	;'P'
  1851   00260C  43                 	db	67	;'C'
  1852   00260D  69                 	db	105	;'i'
  1853   00260E  6E                 	db	110	;'n'
  1854   00260F  6F                 	db	111	;'o'
  1855   002610  00                 	db	0
  1856   002611                     STR_2:
  1857   002611  4B                 	db	75	;'K'
  1858   002612  61                 	db	97	;'a'
  1859   002613  6C                 	db	108	;'l'
  1860   002614  75                 	db	117	;'u'
  1861   002615  6E                 	db	110	;'n'
  1862   002616  20                 	db	32
  1863   002617  4C                 	db	76	;'L'
  1864   002618  61                 	db	97	;'a'
  1865   002619  75                 	db	117	;'u'
  1866   00261A  20                 	db	32
  1867   00261B  47                 	db	71	;'G'
  1868   00261C  61                 	db	97	;'a'
  1869   00261D  6E                 	db	110	;'n'
  1870   00261E  00                 	db	0
  1871   00261F                     STR_3:
  1872   00261F  43                 	db	67	;'C'
  1873   002620  75                 	db	117	;'u'
  1874   002621  65                 	db	101	;'e'
  1875   002622  6E                 	db	110	;'n'
  1876   002623  74                 	db	116	;'t'
  1877   002624  61                 	db	97	;'a'
  1878   002625  3A                 	db	58	;':'
  1879   002626  00                 	db	0
  1880   002627  00                 	db	0	; dummy byte at the end
  1881   002600                     __smallconst    set	__psmallconst
  1882   002600                     __mediumconst   set	__psmallconst
  1883   000001                     __activetblptr  equ	1
  1884                           
  1885                           ; #config settings
  1886                           
  1887                           	psect	cinit
  1888   002904                     __pcinit:
  1889                           	callstack 0
  1890   002904                     start_initialization:
  1891                           	callstack 0
  1892   002904                     __initialization:
  1893                           	callstack 0
  1894                           
  1895                           ; Clear objects allocated to COMRAM (1 bytes)
  1896   002904  6A0C               	clrf	__pbssCOMRAM& (0+255),c
  1897                           
  1898                           ;
  1899                           ; Setup IVTBASE
  1900                           ;
  1901   00045D                     IVTBASEL        equ	1117
  1902   00045E                     IVTBASEH        equ	1118
  1903   00045F                     IVTBASEU        equ	1119
  1904   002906  0104               	movlb	4
  1905   002908  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1906   00290A  6F5D               	movwf	93,b
  1907   00290C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1908   00290E  6F5E               	movwf	94,b
  1909   002910  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1910   002912  6F5F               	movwf	95,b
  1911   002914                     end_of_initialization:
  1912                           	callstack 0
  1913   002914                     __end_of__initialization:
  1914                           	callstack 0
  1915   002914  0E00               	movlw	low (__Lsmallconst shr (0+16))
  1916   002916  6EF8               	movwf	tblptru,c
  1917   002918  0E26               	movlw	high __Lsmallconst
  1918   00291A  6EF7               	movwf	tblptrh,c
  1919   00291C  0100               	movlb	0
  1920   00291E  EF14  F013         	goto	_main	;jump to C main() function
  1921                           
  1922                           	psect	bssCOMRAM
  1923   00050C                     __pbssCOMRAM:
  1924                           	callstack 0
  1925   00050C                     _cuenta:
  1926                           	callstack 0
  1927   00050C                     	ds	1
  1928                           
  1929                           	psect	cstackCOMRAM
  1930   000501                     __pcstackCOMRAM:
  1931                           	callstack 0
  1932   000501                     ??_INT1_ISR:
  1933                           
  1934                           ; 1 bytes @ 0x0
  1935   000501                     	ds	1
  1936   000502                     ENVIA_NIBBLE@dato:
  1937                           	callstack 0
  1938   000502                     LEER_LCD@aux:
  1939                           	callstack 0
  1940   000502                     ___lbmod@divisor:
  1941                           	callstack 0
  1942   000502                     
  1943                           ; 1 bytes @ 0x1
  1944   000502                     	ds	1
  1945   000503                     ENVIA_CHAR@dato:
  1946                           	callstack 0
  1947   000503                     ENVIA_LCD_CMD@dato:
  1948                           	callstack 0
  1949   000503                     ___lbmod@dividend:
  1950                           	callstack 0
  1951   000503                     
  1952                           ; 1 bytes @ 0x2
  1953   000503                     	ds	1
  1954   000504                     ENVIA_CHAR@aux:
  1955                           	callstack 0
  1956   000504                     ENVIA_LCD_CMD@aux:
  1957                           	callstack 0
  1958   000504                     ___lbmod@counter:
  1959                           	callstack 0
  1960                           
  1961                           ; 1 bytes @ 0x3
  1962   000504                     	ds	1
  1963   000505                     POS_CURSOR@columna:
  1964                           	callstack 0
  1965   000505                     CURSOR_ONOFF@estado:
  1966                           	callstack 0
  1967   000505                     ESCRIBE_MENSAJE@cadena:
  1968                           	callstack 0
  1969   000505                     ___lbmod@rem:
  1970                           	callstack 0
  1971   000505                     ??_LCD_CONFIG:
  1972                           
  1973                           ; 1 bytes @ 0x4
  1974   000505                     	ds	1
  1975   000506                     POS_CURSOR@fila:
  1976                           	callstack 0
  1977   000506                     ESCRIBE_MENSAJE@tam:
  1978                           	callstack 0
  1979   000506                     ___lbdiv@divisor:
  1980                           	callstack 0
  1981   000506                     ??_lcd_init:
  1982                           
  1983                           ; 1 bytes @ 0x5
  1984   000506                     	ds	1
  1985   000507                     ___lbdiv@dividend:
  1986                           	callstack 0
  1987   000507                     ??_ESCRIBE_MENSAJE:
  1988   000507                     
  1989                           ; 1 bytes @ 0x6
  1990   000507                     	ds	1
  1991   000508                     ESCRIBE_MENSAJE@i:
  1992                           	callstack 0
  1993   000508                     ___lbdiv@counter:
  1994                           	callstack 0
  1995                           
  1996                           ; 1 bytes @ 0x7
  1997   000508                     	ds	1
  1998   000509                     ___lbdiv@quotient:
  1999                           	callstack 0
  2000                           
  2001                           ; 1 bytes @ 0x8
  2002   000509                     	ds	1
  2003   00050A                     ??_main:
  2004                           
  2005                           ; 1 bytes @ 0x9
  2006   00050A                     	ds	2
  2007                           
  2008 ;;
  2009 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2010 ;;
  2011 ;; *************** function _main *****************
  2012 ;; Defined at:
  2013 ;;		line 42 in file "maincode04.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;		None
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  x_var           1    0        unsigned char 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2029 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2030 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2031 ;;Total ram usage:        2 bytes
  2032 ;; Hardware stack levels required when called: 5
  2033 ;; This function calls:
  2034 ;;		_BORRAR_LCD
  2035 ;;		_ENVIA_CHAR
  2036 ;;		_ESCRIBE_MENSAJE
  2037 ;;		_POS_CURSOR
  2038 ;;		___lbdiv
  2039 ;;		___lbmod
  2040 ;;		_configuro
  2041 ;;		_lcd_init
  2042 ;; This function is called by:
  2043 ;;		Startup code after reset
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text0
  2048   002628                     __ptext0:
  2049                           	callstack 0
  2050   002628                     _main:
  2051                           	callstack 122
  2052                           
  2053                           ;maincode04.c: 43:     configuro();
  2054                           
  2055                           ;incstack = 0
  2056   002628  EC3B  F014         	call	_configuro	;wreg free
  2057                           
  2058                           ; BSR set to: 2
  2059                           ;maincode04.c: 44:     lcd_init();
  2060   00262C  EC12  F014         	call	_lcd_init	;wreg free
  2061                           
  2062                           ;maincode04.c: 45:     POS_CURSOR(1,0);
  2063   002630  0E00               	movlw	0
  2064   002632  6E05               	movwf	POS_CURSOR@columna^(0+1280),c
  2065   002634  0E01               	movlw	1
  2066   002636  EC4E  F014         	call	_POS_CURSOR
  2067                           
  2068                           ;maincode04.c: 46:     ESCRIBE_MENSAJE("Microbio UPCino", 15);
  2069   00263A  0E01               	movlw	low STR_1
  2070   00263C  6E05               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2071   00263E  0E0F               	movlw	15
  2072   002640  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2073   002642  EC60  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2074                           
  2075                           ;maincode04.c: 47:     POS_CURSOR(2,0);
  2076   002646  0E00               	movlw	0
  2077   002648  6E05               	movwf	POS_CURSOR@columna^(0+1280),c
  2078   00264A  0E02               	movlw	2
  2079   00264C  EC4E  F014         	call	_POS_CURSOR
  2080                           
  2081                           ;maincode04.c: 48:     ESCRIBE_MENSAJE("Kalun Lau Gan", 13);
  2082   002650  0E11               	movlw	low STR_2
  2083   002652  6E05               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2084   002654  0E0D               	movlw	13
  2085   002656  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2086   002658  EC60  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2087                           
  2088                           ;maincode04.c: 49:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
  2089   00265C  0E0B               	movlw	11
  2090   00265E  6E0B               	movwf	(??_main+1)^(0+1280),c
  2091   002660  0E26               	movlw	38
  2092   002662  6E0A               	movwf	??_main^(0+1280),c
  2093   002664  0E5E               	movlw	94
  2094   002666                     u197:
  2095   002666  2EE8               	decfsz	wreg,f,c
  2096   002668  D7FE               	bra	u197
  2097   00266A  2E0A               	decfsz	??_main^(0+1280),f,c
  2098   00266C  D7FC               	bra	u197
  2099   00266E  2E0B               	decfsz	(??_main+1)^(0+1280),f,c
  2100   002670  D7FA               	bra	u197
  2101                           
  2102                           ;maincode04.c: 50:     BORRAR_LCD();
  2103   002672  ECB1  F014         	call	_BORRAR_LCD	;wreg free
  2104   002676                     l1139:
  2105                           
  2106                           ;maincode04.c: 52:         unsigned char x_var;;maincode04.c: 53:         POS_CURSOR(1,0
      +                          );
  2107   002676  0E00               	movlw	0
  2108   002678  6E05               	movwf	POS_CURSOR@columna^(0+1280),c
  2109   00267A  0E01               	movlw	1
  2110   00267C  EC4E  F014         	call	_POS_CURSOR
  2111                           
  2112                           ;maincode04.c: 54:         ESCRIBE_MENSAJE("Cuenta:", 7);
  2113   002680  0E1F               	movlw	low STR_3
  2114   002682  6E05               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2115   002684  0E07               	movlw	7
  2116   002686  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2117   002688  EC60  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2118                           
  2119                           ;maincode04.c: 55:         ENVIA_CHAR((cuenta / 100) + 0x30);
  2120   00268C  0E64               	movlw	100
  2121   00268E  6E06               	movwf	___lbdiv@divisor^(0+1280),c
  2122   002690  500C               	movf	_cuenta^(0+1280),w,c
  2123   002692  ECC4  F013         	call	___lbdiv
  2124   002696  0F30               	addlw	48
  2125   002698  ECF9  F013         	call	_ENVIA_CHAR
  2126                           
  2127                           ;maincode04.c: 56:         ENVIA_CHAR(((cuenta % 100) / 10) + 0x30);
  2128   00269C  0E0A               	movlw	10
  2129   00269E  6E06               	movwf	___lbdiv@divisor^(0+1280),c
  2130   0026A0  0E64               	movlw	100
  2131   0026A2  6E02               	movwf	___lbmod@divisor^(0+1280),c
  2132   0026A4  500C               	movf	_cuenta^(0+1280),w,c
  2133   0026A6  EC27  F014         	call	___lbmod
  2134   0026AA  ECC4  F013         	call	___lbdiv
  2135   0026AE  0F30               	addlw	48
  2136   0026B0  ECF9  F013         	call	_ENVIA_CHAR
  2137                           
  2138                           ;maincode04.c: 57:         ENVIA_CHAR((cuenta % 10) + 0x30);
  2139   0026B4  0E0A               	movlw	10
  2140   0026B6  6E02               	movwf	___lbmod@divisor^(0+1280),c
  2141   0026B8  500C               	movf	_cuenta^(0+1280),w,c
  2142   0026BA  EC27  F014         	call	___lbmod
  2143   0026BE  0F30               	addlw	48
  2144   0026C0  ECF9  F013         	call	_ENVIA_CHAR
  2145   0026C4  D7D8               	goto	l1139
  2146   0026C6                     __end_of_main:
  2147                           	callstack 0
  2148                           
  2149 ;; *************** function _lcd_init *****************
  2150 ;; Defined at:
  2151 ;;		line 32 in file "maincode04.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 3F/2
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2167 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2169 ;;Total ram usage:        1 bytes
  2170 ;; Hardware stack levels used: 1
  2171 ;; Hardware stack levels required when called: 4
  2172 ;; This function calls:
  2173 ;;		_BORRAR_LCD
  2174 ;;		_CURSOR_HOME
  2175 ;;		_CURSOR_ONOFF
  2176 ;;		_LCD_CONFIG
  2177 ;; This function is called by:
  2178 ;;		_main
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text1
  2183   002824                     __ptext1:
  2184                           	callstack 0
  2185   002824                     _lcd_init:
  2186                           	callstack 122
  2187                           
  2188                           ; BSR set to: 2
  2189                           ;maincode04.c: 33:     TRISD = 0x00;
  2190                           
  2191                           ;incstack = 0
  2192   002824  6AC9               	clrf	201,c	;volatile
  2193                           
  2194                           ;maincode04.c: 34:     ANSELD = 0x00;
  2195   002826  0104               	movlb	4	; () banked
  2196   002828  6B18               	clrf	24,b	;volatile
  2197                           
  2198                           ; BSR set to: 4
  2199                           ;maincode04.c: 35:     LCD_CONFIG();
  2200   00282A  EC94  F013         	call	_LCD_CONFIG	;wreg free
  2201                           
  2202                           ;maincode04.c: 36:     _delay((unsigned long)((18)*(4000000UL/4000.0)));
  2203   00282E  0E18               	movlw	24
  2204   002830  6E06               	movwf	??_lcd_init^(0+1280),c
  2205   002832  0E5F               	movlw	95
  2206   002834                     u207:
  2207   002834  2EE8               	decfsz	wreg,f,c
  2208   002836  D7FE               	bra	u207
  2209   002838  2E06               	decfsz	??_lcd_init^(0+1280),f,c
  2210   00283A  D7FC               	bra	u207
  2211   00283C  0000               	nop	
  2212                           
  2213                           ;maincode04.c: 37:     BORRAR_LCD();
  2214   00283E  ECB1  F014         	call	_BORRAR_LCD	;wreg free
  2215                           
  2216                           ;maincode04.c: 38:     CURSOR_HOME();
  2217   002842  ECAD  F014         	call	_CURSOR_HOME	;wreg free
  2218                           
  2219                           ;maincode04.c: 39:     CURSOR_ONOFF(1);
  2220   002846  0E01               	movlw	1
  2221   002848  EC91  F014         	call	_CURSOR_ONOFF
  2222   00284C  0012               	return		;funcret
  2223   00284E                     __end_of_lcd_init:
  2224                           	callstack 0
  2225                           
  2226 ;; *************** function _LCD_CONFIG *****************
  2227 ;; Defined at:
  2228 ;;		line 72 in file "LCD.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, status,2, status,0, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 3F/4
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2246 ;;Total ram usage:        1 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; Hardware stack levels required when called: 3
  2249 ;; This function calls:
  2250 ;;		_ENVIA_LCD_CMD
  2251 ;;		_ENVIA_NIBBLE
  2252 ;; This function is called by:
  2253 ;;		_lcd_init
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text2
  2258   002728                     __ptext2:
  2259                           	callstack 0
  2260   002728                     _LCD_CONFIG:
  2261                           	callstack 122
  2262                           
  2263                           ; BSR set to: 4
  2264                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  2265                           
  2266                           ;incstack = 0
  2267   002728  90C1               	bcf	193,0,c	;volatile
  2268                           
  2269                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  2270   00272A  92C1               	bcf	193,1,c	;volatile
  2271                           
  2272                           ; BSR set to: 4
  2273                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  2274   00272C  0E30               	movlw	48
  2275   00272E  EC9F  F014         	call	_ENVIA_NIBBLE
  2276                           
  2277                           ;LCD.c: 77:         _delay(24000);
  2278   002732  0E20               	movlw	32
  2279   002734  6E05               	movwf	??_LCD_CONFIG^(0+1280),c
  2280   002736  0E2A               	movlw	42
  2281   002738                     u217:
  2282   002738  2EE8               	decfsz	wreg,f,c
  2283   00273A  D7FE               	bra	u217
  2284   00273C  2E05               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2285   00273E  D7FC               	bra	u217
  2286                           
  2287                           ;LCD.c: 78:         _delay(24000);
  2288   002740  0E20               	movlw	32
  2289   002742  6E05               	movwf	??_LCD_CONFIG^(0+1280),c
  2290   002744  0E2A               	movlw	42
  2291   002746                     u227:
  2292   002746  2EE8               	decfsz	wreg,f,c
  2293   002748  D7FE               	bra	u227
  2294   00274A  2E05               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2295   00274C  D7FC               	bra	u227
  2296                           
  2297                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  2298   00274E  0E30               	movlw	48
  2299   002750  EC9F  F014         	call	_ENVIA_NIBBLE
  2300                           
  2301                           ;LCD.c: 83:  _delay(1200);
  2302   002754  0EF0               	movlw	240
  2303   002756                     u237:
  2304   002756  D000               	nop2	
  2305   002758  2EE8               	decfsz	wreg,f,c
  2306   00275A  D7FD               	bra	u237
  2307                           
  2308                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  2309   00275C  0E30               	movlw	48
  2310   00275E  EC9F  F014         	call	_ENVIA_NIBBLE
  2311                           
  2312                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  2313   002762  0E20               	movlw	32
  2314   002764  EC9F  F014         	call	_ENVIA_NIBBLE
  2315                           
  2316                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  2317   002768  0E01               	movlw	1
  2318   00276A  ECE0  F013         	call	_ENVIA_LCD_CMD
  2319                           
  2320                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  2321   00276E  0E28               	movlw	40
  2322   002770  ECE0  F013         	call	_ENVIA_LCD_CMD
  2323                           
  2324                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  2325   002774  0E0F               	movlw	15
  2326   002776  ECE0  F013         	call	_ENVIA_LCD_CMD
  2327                           
  2328                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  2329   00277A  0E06               	movlw	6
  2330   00277C  ECE0  F013         	call	_ENVIA_LCD_CMD
  2331                           
  2332                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  2333   002780  0E01               	movlw	1
  2334   002782  ECE0  F013         	call	_ENVIA_LCD_CMD
  2335   002786  0012               	return		;funcret
  2336   002788                     __end_of_LCD_CONFIG:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function _CURSOR_ONOFF *****************
  2340 ;; Defined at:
  2341 ;;		line 35 in file "LCD.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  estado          1    wreg     unsigned char 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  estado          1    4[COMRAM] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/4
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2359 ;;Total ram usage:        1 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; Hardware stack levels required when called: 3
  2362 ;; This function calls:
  2363 ;;		_ENVIA_LCD_CMD
  2364 ;; This function is called by:
  2365 ;;		_lcd_init
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text3
  2370   002922                     __ptext3:
  2371                           	callstack 0
  2372   002922                     _CURSOR_ONOFF:
  2373                           	callstack 122
  2374                           
  2375                           ;incstack = 0
  2376                           ;CURSOR_ONOFF@estado stored from wreg
  2377   002922  6E05               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  2378                           
  2379                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  2380   002924  5005               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  2381   002926  A4D8               	btfss	status,2,c
  2382   002928  D003               	goto	l887
  2383   00292A  0E0E               	movlw	14
  2384   00292C  ECE0  F013         	call	_ENVIA_LCD_CMD
  2385   002930                     l887:
  2386                           
  2387                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2388   002930  0405               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  2389   002932  A4D8               	btfss	status,2,c
  2390   002934  0012               	return	
  2391   002936  0E0C               	movlw	12
  2392   002938  ECE0  F013         	call	_ENVIA_LCD_CMD
  2393   00293C  0012               	return		;funcret
  2394   00293E                     __end_of_CURSOR_ONOFF:
  2395                           	callstack 0
  2396                           
  2397 ;; *************** function _CURSOR_HOME *****************
  2398 ;; Defined at:
  2399 ;;		line 30 in file "LCD.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/4
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2417 ;;Total ram usage:        0 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 3
  2420 ;; This function calls:
  2421 ;;		_ENVIA_LCD_CMD
  2422 ;; This function is called by:
  2423 ;;		_lcd_init
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text4
  2428   00295A                     __ptext4:
  2429                           	callstack 0
  2430   00295A                     _CURSOR_HOME:
  2431                           	callstack 122
  2432                           
  2433                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  2434                           
  2435                           ;incstack = 0
  2436   00295A  0E02               	movlw	2
  2437   00295C  ECE0  F013         	call	_ENVIA_LCD_CMD
  2438   002960  0012               	return		;funcret
  2439   002962                     __end_of_CURSOR_HOME:
  2440                           	callstack 0
  2441                           
  2442 ;; *************** function _BORRAR_LCD *****************
  2443 ;; Defined at:
  2444 ;;		line 67 in file "LCD.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/2
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2462 ;;Total ram usage:        0 bytes
  2463 ;; Hardware stack levels used: 1
  2464 ;; Hardware stack levels required when called: 3
  2465 ;; This function calls:
  2466 ;;		_ENVIA_LCD_CMD
  2467 ;; This function is called by:
  2468 ;;		_lcd_init
  2469 ;;		_main
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text5
  2474   002962                     __ptext5:
  2475                           	callstack 0
  2476   002962                     _BORRAR_LCD:
  2477                           	callstack 122
  2478                           
  2479                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  2480                           
  2481                           ;incstack = 0
  2482   002962  0E01               	movlw	1
  2483   002964  ECE0  F013         	call	_ENVIA_LCD_CMD
  2484   002968  0012               	return		;funcret
  2485   00296A                     __end_of_BORRAR_LCD:
  2486                           	callstack 0
  2487                           
  2488 ;; *************** function _configuro *****************
  2489 ;; Defined at:
  2490 ;;		line 15 in file "maincode04.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 3F/2
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2508 ;;Total ram usage:        0 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; Hardware stack levels required when called: 1
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_main
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text6
  2519   002876                     __ptext6:
  2520                           	callstack 0
  2521   002876                     _configuro:
  2522                           	callstack 125
  2523                           
  2524                           ;maincode04.c: 17:     OSCCON1 = 0x60;
  2525                           
  2526                           ;incstack = 0
  2527   002876  0E60               	movlw	96
  2528   002878  0100               	movlb	0	; () banked
  2529   00287A  6FAD               	movwf	173,b	;volatile
  2530                           
  2531                           ;maincode04.c: 18:     OSCFRQ = 0x02;
  2532   00287C  0E02               	movlw	2
  2533   00287E  6FB1               	movwf	177,b	;volatile
  2534                           
  2535                           ;maincode04.c: 19:     OSCEN = 0x40;
  2536   002880  0E40               	movlw	64
  2537   002882  6FB3               	movwf	179,b	;volatile
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;maincode04.c: 21:     TRISBbits.TRISB4 = 1;
  2541   002884  88C7               	bsf	199,4,c	;volatile
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;maincode04.c: 22:     ANSELBbits.ANSELB4 = 0;
  2545   002886  0104               	movlb	4	; () banked
  2546   002888  9908               	bcf	8,4,b	;volatile
  2547                           
  2548                           ; BSR set to: 4
  2549                           ;maincode04.c: 23:     WPUBbits.WPUB4 = 1;
  2550   00288A  8909               	bsf	9,4,b	;volatile
  2551                           
  2552                           ;maincode04.c: 25:     INT1PPS = 0x0C;
  2553   00288C  0E0C               	movlw	12
  2554   00288E  0102               	movlb	2	; () banked
  2555   002890  6F3F               	movwf	63,b	;volatile
  2556                           
  2557                           ; BSR set to: 2
  2558                           ;maincode04.c: 26:     PIE6bits.INT1IE = 1;
  2559   002892  80A4               	bsf	164,0,c	;volatile
  2560                           
  2561                           ; BSR set to: 2
  2562                           ;maincode04.c: 27:     PIR6bits.INT1IF = 0;
  2563   002894  90B4               	bcf	180,0,c	;volatile
  2564                           
  2565                           ; BSR set to: 2
  2566                           ;maincode04.c: 28:     INTCON0bits.INT1EDG = 0;
  2567   002896  92D6               	bcf	214,1,c	;volatile
  2568                           
  2569                           ; BSR set to: 2
  2570                           ;maincode04.c: 29:     INTCON0bits.GIE = 1;
  2571   002898  8ED6               	bsf	214,7,c	;volatile
  2572                           
  2573                           ; BSR set to: 2
  2574   00289A  0012               	return		;funcret
  2575   00289C                     __end_of_configuro:
  2576                           	callstack 0
  2577                           
  2578 ;; *************** function ___lbmod *****************
  2579 ;; Defined at:
  2580 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lbmod.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  dividend        1    wreg     unsigned char 
  2583 ;;  divisor         1    1[COMRAM] unsigned char 
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  dividend        1    2[COMRAM] unsigned char 
  2586 ;;  rem             1    4[COMRAM] unsigned char 
  2587 ;;  counter         1    3[COMRAM] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      unsigned char 
  2590 ;; Registers used:
  2591 ;;		wreg, status,2, status,0
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/2
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2597 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2598 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2600 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2601 ;;Total ram usage:        4 bytes
  2602 ;; Hardware stack levels used: 1
  2603 ;; Hardware stack levels required when called: 1
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text7
  2612   00284E                     __ptext7:
  2613                           	callstack 0
  2614   00284E                     ___lbmod:
  2615                           	callstack 125
  2616                           
  2617                           ; BSR set to: 2
  2618                           ;incstack = 0
  2619                           ;___lbmod@dividend stored from wreg
  2620   00284E  6E03               	movwf	___lbmod@dividend^(0+1280),c
  2621   002850  0E08               	movlw	8
  2622   002852  6E04               	movwf	___lbmod@counter^(0+1280),c
  2623   002854  6A05               	clrf	___lbmod@rem^(0+1280),c
  2624   002856                     l1109:
  2625   002856  90D8               	bcf	status,0,c
  2626   002858  3403               	rlcf	___lbmod@dividend^(0+1280),w,c
  2627   00285A  3405               	rlcf	___lbmod@rem^(0+1280),w,c
  2628   00285C  6E05               	movwf	___lbmod@rem^(0+1280),c
  2629   00285E  90D8               	bcf	status,0,c
  2630   002860  3603               	rlcf	___lbmod@dividend^(0+1280),f,c
  2631   002862  5002               	movf	___lbmod@divisor^(0+1280),w,c
  2632   002864  5C05               	subwf	___lbmod@rem^(0+1280),w,c
  2633   002866  A0D8               	btfss	status,0,c
  2634   002868  D002               	goto	l1117
  2635   00286A  5002               	movf	___lbmod@divisor^(0+1280),w,c
  2636   00286C  5E05               	subwf	___lbmod@rem^(0+1280),f,c
  2637   00286E                     l1117:
  2638   00286E  2E04               	decfsz	___lbmod@counter^(0+1280),f,c
  2639   002870  D7F2               	goto	l1109
  2640   002872  5005               	movf	___lbmod@rem^(0+1280),w,c
  2641   002874  0012               	return		;funcret
  2642   002876                     __end_of___lbmod:
  2643                           	callstack 0
  2644                           
  2645 ;; *************** function ___lbdiv *****************
  2646 ;; Defined at:
  2647 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lbdiv.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  dividend        1    wreg     unsigned char 
  2650 ;;  divisor         1    5[COMRAM] unsigned char 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  dividend        1    6[COMRAM] unsigned char 
  2653 ;;  quotient        1    8[COMRAM] unsigned char 
  2654 ;;  counter         1    7[COMRAM] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      unsigned char 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/2
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2664 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2665 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2667 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2668 ;;Total ram usage:        4 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; Hardware stack levels required when called: 1
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text8
  2679   002788                     __ptext8:
  2680                           	callstack 0
  2681   002788                     ___lbdiv:
  2682                           	callstack 125
  2683                           
  2684                           ;incstack = 0
  2685                           ;___lbdiv@dividend stored from wreg
  2686   002788  6E07               	movwf	___lbdiv@dividend^(0+1280),c
  2687   00278A  6A09               	clrf	___lbdiv@quotient^(0+1280),c
  2688   00278C  5006               	movf	___lbdiv@divisor^(0+1280),w,c
  2689   00278E  B4D8               	btfsc	status,2,c
  2690   002790  D015               	goto	l1101
  2691   002792  0E01               	movlw	1
  2692   002794  6E08               	movwf	___lbdiv@counter^(0+1280),c
  2693   002796  D003               	goto	l1089
  2694   002798                     l1085:
  2695   002798  90D8               	bcf	status,0,c
  2696   00279A  3606               	rlcf	___lbdiv@divisor^(0+1280),f,c
  2697   00279C  2A08               	incf	___lbdiv@counter^(0+1280),f,c
  2698   00279E                     l1089:
  2699   00279E  AE06               	btfss	___lbdiv@divisor^(0+1280),7,c
  2700   0027A0  D7FB               	goto	l1085
  2701   0027A2                     u160:
  2702   0027A2  90D8               	bcf	status,0,c
  2703   0027A4  3609               	rlcf	___lbdiv@quotient^(0+1280),f,c
  2704   0027A6  5006               	movf	___lbdiv@divisor^(0+1280),w,c
  2705   0027A8  5C07               	subwf	___lbdiv@dividend^(0+1280),w,c
  2706   0027AA  A0D8               	btfss	status,0,c
  2707   0027AC  D003               	goto	l1097
  2708   0027AE  5006               	movf	___lbdiv@divisor^(0+1280),w,c
  2709   0027B0  5E07               	subwf	___lbdiv@dividend^(0+1280),f,c
  2710   0027B2  8009               	bsf	___lbdiv@quotient^(0+1280),0,c
  2711   0027B4                     l1097:
  2712   0027B4  90D8               	bcf	status,0,c
  2713   0027B6  3206               	rrcf	___lbdiv@divisor^(0+1280),f,c
  2714   0027B8  2E08               	decfsz	___lbdiv@counter^(0+1280),f,c
  2715   0027BA  D7F3               	goto	u160
  2716   0027BC                     l1101:
  2717   0027BC  5009               	movf	___lbdiv@quotient^(0+1280),w,c
  2718   0027BE  0012               	return		;funcret
  2719   0027C0                     __end_of___lbdiv:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function _POS_CURSOR *****************
  2723 ;; Defined at:
  2724 ;;		line 6 in file "LCD.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  fila            1    wreg     unsigned char 
  2727 ;;  columna         1    4[COMRAM] unsigned char 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  fila            1    5[COMRAM] unsigned char 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, status,2, status,0, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/2
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2739 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2742 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2743 ;;Total ram usage:        2 bytes
  2744 ;; Hardware stack levels used: 1
  2745 ;; Hardware stack levels required when called: 3
  2746 ;; This function calls:
  2747 ;;		_ENVIA_LCD_CMD
  2748 ;; This function is called by:
  2749 ;;		_main
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text9
  2754   00289C                     __ptext9:
  2755                           	callstack 0
  2756   00289C                     _POS_CURSOR:
  2757                           	callstack 123
  2758                           
  2759                           ;incstack = 0
  2760                           ;POS_CURSOR@fila stored from wreg
  2761   00289C  6E06               	movwf	POS_CURSOR@fila^(0+1280),c
  2762                           
  2763                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2764   00289E  0406               	decf	POS_CURSOR@fila^(0+1280),w,c
  2765   0028A0  A4D8               	btfss	status,2,c
  2766   0028A2  D005               	goto	l1067
  2767                           
  2768                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2769   0028A4  5005               	movf	POS_CURSOR@columna^(0+1280),w,c
  2770   0028A6  0F80               	addlw	128
  2771   0028A8  ECE0  F013         	call	_ENVIA_LCD_CMD
  2772                           
  2773                           ;LCD.c: 11:  }
  2774   0028AC  0012               	return	
  2775   0028AE                     l1067:
  2776   0028AE  0E02               	movlw	2
  2777   0028B0  1806               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2778   0028B2  A4D8               	btfss	status,2,c
  2779   0028B4  0012               	return	
  2780                           
  2781                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2782   0028B6  5005               	movf	POS_CURSOR@columna^(0+1280),w,c
  2783   0028B8  0FC0               	addlw	192
  2784   0028BA  ECE0  F013         	call	_ENVIA_LCD_CMD
  2785   0028BE  0012               	return		;funcret
  2786   0028C0                     __end_of_POS_CURSOR:
  2787                           	callstack 0
  2788                           
  2789 ;; *************** function _ENVIA_LCD_CMD *****************
  2790 ;; Defined at:
  2791 ;;		line 104 in file "LCD.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  dato            1    wreg     unsigned char 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  dato            1    2[COMRAM] unsigned char 
  2796 ;;  aux             1    3[COMRAM] unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/4
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2810 ;;Total ram usage:        2 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; Hardware stack levels required when called: 2
  2813 ;; This function calls:
  2814 ;;		_ENVIA_NIBBLE
  2815 ;;		_LEER_LCD
  2816 ;; This function is called by:
  2817 ;;		_POS_CURSOR
  2818 ;;		_CURSOR_HOME
  2819 ;;		_CURSOR_ONOFF
  2820 ;;		_BORRAR_LCD
  2821 ;;		_LCD_CONFIG
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text10
  2826   0027C0                     __ptext10:
  2827                           	callstack 0
  2828   0027C0                     _ENVIA_LCD_CMD:
  2829                           	callstack 122
  2830                           
  2831                           ;incstack = 0
  2832                           ;ENVIA_LCD_CMD@dato stored from wreg
  2833   0027C0  6E03               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  2834                           
  2835                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2836   0027C2  90C1               	bcf	193,0,c	;volatile
  2837                           
  2838                           ;LCD.c: 108:  LEER_LCD();
  2839   0027C4  EC63  F013         	call	_LEER_LCD	;wreg free
  2840                           
  2841                           ;LCD.c: 109:  TRISD = 0b00000000;
  2842   0027C8  6AC9               	clrf	201,c	;volatile
  2843                           
  2844                           ;LCD.c: 111:         _delay(1200);
  2845   0027CA  0EF0               	movlw	240
  2846   0027CC                     u247:
  2847   0027CC  D000               	nop2	
  2848   0027CE  2EE8               	decfsz	wreg,f,c
  2849   0027D0  D7FD               	bra	u247
  2850                           
  2851                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2852   0027D2  92C1               	bcf	193,1,c	;volatile
  2853                           
  2854                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2855   0027D4  94C1               	bcf	193,2,c	;volatile
  2856                           
  2857                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2858   0027D6  90C1               	bcf	193,0,c	;volatile
  2859                           
  2860                           ;LCD.c: 115:  aux = dato & 0xF0;
  2861   0027D8  5003               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2862   0027DA  0BF0               	andlw	240
  2863   0027DC  6E04               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2864                           
  2865                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2866   0027DE  5004               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2867   0027E0  EC9F  F014         	call	_ENVIA_NIBBLE
  2868                           
  2869                           ;LCD.c: 117:  aux = dato<<4;
  2870   0027E4  3803               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2871   0027E6  0BF0               	andlw	240
  2872   0027E8  6E04               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2873                           
  2874                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2875   0027EA  5004               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2876   0027EC  EC9F  F014         	call	_ENVIA_NIBBLE
  2877   0027F0  0012               	return		;funcret
  2878   0027F2                     __end_of_ENVIA_LCD_CMD:
  2879                           	callstack 0
  2880                           
  2881 ;; *************** function _ESCRIBE_MENSAJE *****************
  2882 ;; Defined at:
  2883 ;;		line 41 in file "LCD.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  cadena          1    4[COMRAM] PTR const unsigned char 
  2886 ;;		 -> STR_3(8), STR_2(14), STR_1(16), 
  2887 ;;  tam             1    5[COMRAM] unsigned char 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  i               1    7[COMRAM] unsigned char 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/2
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2903 ;;Total ram usage:        4 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; Hardware stack levels required when called: 3
  2906 ;; This function calls:
  2907 ;;		_ENVIA_CHAR
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text11
  2914   0028C0                     __ptext11:
  2915                           	callstack 0
  2916   0028C0                     _ESCRIBE_MENSAJE:
  2917                           	callstack 123
  2918                           
  2919                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2920                           
  2921                           ;incstack = 0
  2922   0028C0  6A08               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2923                           
  2924                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2925   0028C2  6A08               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2926   0028C4  D00A               	goto	l1077
  2927   0028C6                     l1073:
  2928                           
  2929                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2930   0028C6  5005               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  2931   0028C8  2408               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2932   0028CA  6E07               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  2933   0028CC  C507  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2934   0028D0                     	if	0	;There is only one active tblptr byte
  2935   0028D0                     	endif
  2936   0028D0                     	if	0	;tblptru may be non-zero
  2937   0028D0                     	endif
  2938   0028D0                     	if	0	;tblptru may be non-zero
  2939   0028D0                     	endif
  2940   0028D0  0008               	tblrd		*
  2941   0028D2  50F5               	movf	tablat,w,c
  2942   0028D4  ECF9  F013         	call	_ENVIA_CHAR
  2943                           
  2944                           ;LCD.c: 47:  }
  2945   0028D8  2A08               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  2946   0028DA                     l1077:
  2947   0028DA  5006               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  2948   0028DC  5C08               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2949   0028DE  B0D8               	btfsc	status,0,c
  2950   0028E0  0012               	return	
  2951   0028E2  D7F1               	goto	l1073
  2952   0028E4                     __end_of_ESCRIBE_MENSAJE:
  2953                           	callstack 0
  2954                           
  2955 ;; *************** function _ENVIA_CHAR *****************
  2956 ;; Defined at:
  2957 ;;		line 50 in file "LCD.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  dato            1    wreg     unsigned char 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  dato            1    2[COMRAM] unsigned char 
  2962 ;;  aux             1    3[COMRAM] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/2
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2975 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2976 ;;Total ram usage:        2 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; Hardware stack levels required when called: 2
  2979 ;; This function calls:
  2980 ;;		_ENVIA_NIBBLE
  2981 ;;		_LEER_LCD
  2982 ;; This function is called by:
  2983 ;;		_ESCRIBE_MENSAJE
  2984 ;;		_main
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text12
  2989   0027F2                     __ptext12:
  2990                           	callstack 0
  2991   0027F2                     _ENVIA_CHAR:
  2992                           	callstack 123
  2993                           
  2994                           ;incstack = 0
  2995                           ;ENVIA_CHAR@dato stored from wreg
  2996   0027F2  6E03               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2997                           
  2998                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2999   0027F4  80C1               	bsf	193,0,c	;volatile
  3000                           
  3001                           ;LCD.c: 54:  LEER_LCD();
  3002   0027F6  EC63  F013         	call	_LEER_LCD	;wreg free
  3003                           
  3004                           ;LCD.c: 55:  TRISD = 0x00;
  3005   0027FA  6AC9               	clrf	201,c	;volatile
  3006                           
  3007                           ;LCD.c: 56:         _delay(1200);
  3008   0027FC  0EF0               	movlw	240
  3009   0027FE                     u257:
  3010   0027FE  D000               	nop2	
  3011   002800  2EE8               	decfsz	wreg,f,c
  3012   002802  D7FD               	bra	u257
  3013                           
  3014                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  3015   002804  92C1               	bcf	193,1,c	;volatile
  3016                           
  3017                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  3018   002806  94C1               	bcf	193,2,c	;volatile
  3019                           
  3020                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  3021   002808  80C1               	bsf	193,0,c	;volatile
  3022                           
  3023                           ;LCD.c: 61:  aux = dato & 0xF0;
  3024   00280A  5003               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  3025   00280C  0BF0               	andlw	240
  3026   00280E  6E04               	movwf	ENVIA_CHAR@aux^(0+1280),c
  3027                           
  3028                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  3029   002810  5004               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  3030   002812  EC9F  F014         	call	_ENVIA_NIBBLE
  3031                           
  3032                           ;LCD.c: 63:  aux = dato << 4;
  3033   002816  3803               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  3034   002818  0BF0               	andlw	240
  3035   00281A  6E04               	movwf	ENVIA_CHAR@aux^(0+1280),c
  3036                           
  3037                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  3038   00281C  5004               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  3039   00281E  EC9F  F014         	call	_ENVIA_NIBBLE
  3040   002822  0012               	return		;funcret
  3041   002824                     __end_of_ENVIA_CHAR:
  3042                           	callstack 0
  3043                           
  3044 ;; *************** function _LEER_LCD *****************
  3045 ;; Defined at:
  3046 ;;		line 121 in file "LCD.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  aux             1    1[COMRAM] unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/4
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3061 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3063 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3064 ;;Total ram usage:        1 bytes
  3065 ;; Hardware stack levels used: 1
  3066 ;; Hardware stack levels required when called: 1
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_ENVIA_CHAR
  3071 ;;		_ENVIA_LCD_CMD
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text13
  3076   0026C6                     __ptext13:
  3077                           	callstack 0
  3078   0026C6                     _LEER_LCD:
  3079                           	callstack 122
  3080                           
  3081                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3082                           
  3083                           ;incstack = 0
  3084   0026C6  0EF8               	movlw	248
  3085   0026C8  6EC9               	movwf	201,c	;volatile
  3086                           
  3087                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  3088   0026CA  90C1               	bcf	193,0,c	;volatile
  3089                           
  3090                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  3091   0026CC  82C1               	bsf	193,1,c	;volatile
  3092                           
  3093                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  3094   0026CE  84C1               	bsf	193,2,c	;volatile
  3095                           
  3096                           ;LCD.c: 128:         _delay(1200);
  3097   0026D0  0EF0               	movlw	240
  3098   0026D2                     u267:
  3099   0026D2  D000               	nop2	
  3100   0026D4  2EE8               	decfsz	wreg,f,c
  3101   0026D6  D7FD               	bra	u267
  3102                           
  3103                           ;LCD.c: 130:  aux = PORTD;
  3104   0026D8  C4D1 F502          	movff	1233,LEER_LCD@aux	;volatile
  3105                           
  3106                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  3107   0026DC  94C1               	bcf	193,2,c	;volatile
  3108                           
  3109                           ;LCD.c: 132:         _delay(1200);
  3110   0026DE  0EF0               	movlw	240
  3111   0026E0                     u277:
  3112   0026E0  D000               	nop2	
  3113   0026E2  2EE8               	decfsz	wreg,f,c
  3114   0026E4  D7FD               	bra	u277
  3115                           
  3116                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  3117   0026E6  84C1               	bsf	193,2,c	;volatile
  3118                           
  3119                           ;LCD.c: 135:         _delay(1200);
  3120   0026E8  0EF0               	movlw	240
  3121   0026EA                     u287:
  3122   0026EA  D000               	nop2	
  3123   0026EC  2EE8               	decfsz	wreg,f,c
  3124   0026EE  D7FD               	bra	u287
  3125   0026F0                     l833:
  3126                           
  3127                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3128   0026F0  94C1               	bcf	193,2,c	;volatile
  3129                           
  3130                           ;LCD.c: 138:  aux = aux & 0x80;
  3131   0026F2  5002               	movf	LEER_LCD@aux^(0+1280),w,c
  3132   0026F4  0B80               	andlw	128
  3133   0026F6  6E02               	movwf	LEER_LCD@aux^(0+1280),c
  3134                           
  3135                           ;LCD.c: 139:  while(aux == 0x80)
  3136   0026F8  D012               	goto	l849
  3137   0026FA                     l67:
  3138                           
  3139                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3140   0026FA  84C1               	bsf	193,2,c	;volatile
  3141                           
  3142                           ;LCD.c: 142:             _delay(1200);
  3143   0026FC  0EF0               	movlw	240
  3144   0026FE                     u297:
  3145   0026FE  D000               	nop2	
  3146   002700  2EE8               	decfsz	wreg,f,c
  3147   002702  D7FD               	bra	u297
  3148                           
  3149                           ;LCD.c: 143:             aux = PORTD;
  3150   002704  C4D1 F502          	movff	1233,LEER_LCD@aux	;volatile
  3151                           
  3152                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3153   002708  94C1               	bcf	193,2,c	;volatile
  3154                           
  3155                           ;LCD.c: 145:             _delay(1200);
  3156   00270A  0EF0               	movlw	240
  3157   00270C                     u307:
  3158   00270C  D000               	nop2	
  3159   00270E  2EE8               	decfsz	wreg,f,c
  3160   002710  D7FD               	bra	u307
  3161                           
  3162                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3163   002712  84C1               	bsf	193,2,c	;volatile
  3164                           
  3165                           ;LCD.c: 147:             _delay(1200);
  3166   002714  0EF0               	movlw	240
  3167   002716                     u317:
  3168   002716  D000               	nop2	
  3169   002718  2EE8               	decfsz	wreg,f,c
  3170   00271A  D7FD               	bra	u317
  3171   00271C  D7E9               	goto	l833
  3172   00271E                     l849:
  3173                           
  3174                           ;LCD.c: 139:  while(aux == 0x80)
  3175   00271E  0E80               	movlw	128
  3176   002720  1802               	xorwf	LEER_LCD@aux^(0+1280),w,c
  3177   002722  A4D8               	btfss	status,2,c
  3178   002724  0012               	return	
  3179   002726  D7E9               	goto	l67
  3180   002728                     __end_of_LEER_LCD:
  3181                           	callstack 0
  3182                           
  3183 ;; *************** function _ENVIA_NIBBLE *****************
  3184 ;; Defined at:
  3185 ;;		line 93 in file "LCD.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  dato            1    wreg     unsigned char 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  dato            1    1[COMRAM] unsigned char 
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/4
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3203 ;;Total ram usage:        1 bytes
  3204 ;; Hardware stack levels used: 1
  3205 ;; Hardware stack levels required when called: 1
  3206 ;; This function calls:
  3207 ;;		Nothing
  3208 ;; This function is called by:
  3209 ;;		_ENVIA_CHAR
  3210 ;;		_LCD_CONFIG
  3211 ;;		_ENVIA_LCD_CMD
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text14
  3216   00293E                     __ptext14:
  3217                           	callstack 0
  3218   00293E                     _ENVIA_NIBBLE:
  3219                           	callstack 123
  3220                           
  3221                           ;incstack = 0
  3222                           ;ENVIA_NIBBLE@dato stored from wreg
  3223   00293E  6E02               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  3224                           
  3225                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3226   002940  0E0F               	movlw	15
  3227   002942  16C1               	andwf	193,f,c	;volatile
  3228                           
  3229                           ;LCD.c: 96:  dato &= 0xF0;
  3230   002944  0EF0               	movlw	240
  3231   002946  1602               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  3232                           
  3233                           ;LCD.c: 97:  LATD|= dato;
  3234   002948  5002               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  3235   00294A  12C1               	iorwf	193,f,c	;volatile
  3236                           
  3237                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3238   00294C  84C1               	bsf	193,2,c	;volatile
  3239                           
  3240                           ;LCD.c: 100:         _delay(1200);
  3241   00294E  0EF0               	movlw	240
  3242   002950                     u327:
  3243   002950  D000               	nop2	
  3244   002952  2EE8               	decfsz	wreg,f,c
  3245   002954  D7FD               	bra	u327
  3246                           
  3247                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3248   002956  94C1               	bcf	193,2,c	;volatile
  3249   002958  0012               	return		;funcret
  3250   00295A                     __end_of_ENVIA_NIBBLE:
  3251                           	callstack 0
  3252                           
  3253 ;; *************** function _INT1_ISR *****************
  3254 ;; Defined at:
  3255 ;;		line 61 in file "maincode04.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3271 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3272 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3273 ;;Total ram usage:        1 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; This function calls:
  3276 ;;		Nothing
  3277 ;; This function is called by:
  3278 ;;		Interrupt level 2
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text15
  3283   0028E4                     __ptext15:
  3284                           	callstack 0
  3285   0028E4                     _INT1_ISR:
  3286                           	callstack 122
  3287                           
  3288                           ;maincode04.c: 62:     PIR6bits.INT1IF = 0;
  3289                           
  3290                           ;incstack = 0
  3291   0028E4  90B4               	bcf	180,0,c	;volatile
  3292                           
  3293                           ;maincode04.c: 63:     if(cuenta == 128){
  3294   0028E6  0E80               	movlw	128
  3295   0028E8  180C               	xorwf	_cuenta^(0+1280),w,c
  3296   0028EA  A4D8               	btfss	status,2,c
  3297   0028EC  D002               	goto	i2l1059
  3298                           
  3299                           ;maincode04.c: 64:         cuenta = 0;
  3300   0028EE  6A0C               	clrf	_cuenta^(0+1280),c
  3301                           
  3302                           ;maincode04.c: 65:     }
  3303   0028F0  D001               	goto	i2l1061
  3304   0028F2                     i2l1059:
  3305                           
  3306                           ;maincode04.c: 67:         cuenta++;
  3307   0028F2  2A0C               	incf	_cuenta^(0+1280),f,c
  3308   0028F4                     i2l1061:
  3309                           
  3310                           ;maincode04.c: 69:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  3311   0028F4  0E14               	movlw	20
  3312   0028F6  6E01               	movwf	??_INT1_ISR^(0+1280),c
  3313   0028F8  0E7A               	movlw	122
  3314   0028FA                     i2u33_47:
  3315   0028FA  2EE8               	decfsz	wreg,f,c
  3316   0028FC  D7FE               	bra	i2u33_47
  3317   0028FE  2E01               	decfsz	??_INT1_ISR^(0+1280),f,c
  3318   002900  D7FC               	bra	i2u33_47
  3319   002902  0011               	retfie		f
  3320   002904                     __end_of_INT1_ISR:
  3321                           	callstack 0
  3322                           
  3323                           ;
  3324                           ; H/W Interrupt Vector Table @ 0x8
  3325                           ;
  3326                           
  3327                           	psect	ivt0x8
  3328   000008                     __pivt0x8:
  3329                           	callstack 0
  3330   000008                     ivt0x8_base:
  3331                           	callstack 0
  3332                           
  3333                           ; Vector 0 : SWINT
  3334   000008  0040               	dw	ivt0x8_undefint shr (0+2)
  3335                           
  3336                           ; Vector 1 : HLVD
  3337   00000A  0040               	dw	ivt0x8_undefint shr (0+2)
  3338                           
  3339                           ; Vector 2 : OSF
  3340   00000C  0040               	dw	ivt0x8_undefint shr (0+2)
  3341                           
  3342                           ; Vector 3 : CSW
  3343   00000E  0040               	dw	ivt0x8_undefint shr (0+2)
  3344                           
  3345                           ; Vector 4 : Undefined
  3346   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  3347                           
  3348                           ; Vector 5 : CLC1
  3349   000012  0040               	dw	ivt0x8_undefint shr (0+2)
  3350                           
  3351                           ; Vector 6 : Undefined
  3352   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  3353                           
  3354                           ; Vector 7 : IOC
  3355   000016  0040               	dw	ivt0x8_undefint shr (0+2)
  3356                           
  3357                           ; Vector 8 : INT0
  3358   000018  0040               	dw	ivt0x8_undefint shr (0+2)
  3359                           
  3360                           ; Vector 9 : ZCD
  3361   00001A  0040               	dw	ivt0x8_undefint shr (0+2)
  3362                           
  3363                           ; Vector 10 : AD
  3364   00001C  0040               	dw	ivt0x8_undefint shr (0+2)
  3365                           
  3366                           ; Vector 11 : ACT
  3367   00001E  0040               	dw	ivt0x8_undefint shr (0+2)
  3368                           
  3369                           ; Vector 12 : CMP1
  3370   000020  0040               	dw	ivt0x8_undefint shr (0+2)
  3371                           
  3372                           ; Vector 13 : SMT1
  3373   000022  0040               	dw	ivt0x8_undefint shr (0+2)
  3374                           
  3375                           ; Vector 14 : SMT1PRA
  3376   000024  0040               	dw	ivt0x8_undefint shr (0+2)
  3377                           
  3378                           ; Vector 15 : SMT1PRW
  3379   000026  0040               	dw	ivt0x8_undefint shr (0+2)
  3380                           
  3381                           ; Vector 16 : ADT
  3382   000028  0040               	dw	ivt0x8_undefint shr (0+2)
  3383                           
  3384                           ; Vector 17 : Undefined
  3385   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  3386                           
  3387                           ; Vector 18 : Undefined
  3388   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  3389                           
  3390                           ; Vector 19 : Undefined
  3391   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  3392                           
  3393                           ; Vector 20 : DMA1SCNT
  3394   000030  0040               	dw	ivt0x8_undefint shr (0+2)
  3395                           
  3396                           ; Vector 21 : DMA1DCNT
  3397   000032  0040               	dw	ivt0x8_undefint shr (0+2)
  3398                           
  3399                           ; Vector 22 : DMA1OR
  3400   000034  0040               	dw	ivt0x8_undefint shr (0+2)
  3401                           
  3402                           ; Vector 23 : DMA1A
  3403   000036  0040               	dw	ivt0x8_undefint shr (0+2)
  3404                           
  3405                           ; Vector 24 : SPI1RX
  3406   000038  0040               	dw	ivt0x8_undefint shr (0+2)
  3407                           
  3408                           ; Vector 25 : SPI1TX
  3409   00003A  0040               	dw	ivt0x8_undefint shr (0+2)
  3410                           
  3411                           ; Vector 26 : SPI1
  3412   00003C  0040               	dw	ivt0x8_undefint shr (0+2)
  3413                           
  3414                           ; Vector 27 : TMR2
  3415   00003E  0040               	dw	ivt0x8_undefint shr (0+2)
  3416                           
  3417                           ; Vector 28 : TMR1
  3418   000040  0040               	dw	ivt0x8_undefint shr (0+2)
  3419                           
  3420                           ; Vector 29 : TMR1G
  3421   000042  0040               	dw	ivt0x8_undefint shr (0+2)
  3422                           
  3423                           ; Vector 30 : CCP1
  3424   000044  0040               	dw	ivt0x8_undefint shr (0+2)
  3425                           
  3426                           ; Vector 31 : TMR0
  3427   000046  0040               	dw	ivt0x8_undefint shr (0+2)
  3428                           
  3429                           ; Vector 32 : U1RX
  3430   000048  0040               	dw	ivt0x8_undefint shr (0+2)
  3431                           
  3432                           ; Vector 33 : U1TX
  3433   00004A  0040               	dw	ivt0x8_undefint shr (0+2)
  3434                           
  3435                           ; Vector 34 : U1E
  3436   00004C  0040               	dw	ivt0x8_undefint shr (0+2)
  3437                           
  3438                           ; Vector 35 : U1
  3439   00004E  0040               	dw	ivt0x8_undefint shr (0+2)
  3440                           
  3441                           ; Vector 36 : Undefined
  3442   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  3443                           
  3444                           ; Vector 37 : Undefined
  3445   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  3446                           
  3447                           ; Vector 38 : PWM1PR
  3448   000054  0040               	dw	ivt0x8_undefint shr (0+2)
  3449                           
  3450                           ; Vector 39 : PWM1
  3451   000056  0040               	dw	ivt0x8_undefint shr (0+2)
  3452                           
  3453                           ; Vector 40 : SPI2RX
  3454   000058  0040               	dw	ivt0x8_undefint shr (0+2)
  3455                           
  3456                           ; Vector 41 : SPI2TX
  3457   00005A  0040               	dw	ivt0x8_undefint shr (0+2)
  3458                           
  3459                           ; Vector 42 : SPI2
  3460   00005C  0040               	dw	ivt0x8_undefint shr (0+2)
  3461                           
  3462                           ; Vector 43 : Undefined
  3463   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  3464                           
  3465                           ; Vector 44 : TMR3
  3466   000060  0040               	dw	ivt0x8_undefint shr (0+2)
  3467                           
  3468                           ; Vector 45 : TMR3G
  3469   000062  0040               	dw	ivt0x8_undefint shr (0+2)
  3470                           
  3471                           ; Vector 46 : PWM2PR
  3472   000064  0040               	dw	ivt0x8_undefint shr (0+2)
  3473                           
  3474                           ; Vector 47 : PWM2
  3475   000066  0040               	dw	ivt0x8_undefint shr (0+2)
  3476                           
  3477                           ; Vector 48 : INT1
  3478   000068  0A39               	dw	_INT1_ISR shr (0+2)
  3479                           
  3480                           ; Vector 49 : CLC2
  3481   00006A  0040               	dw	ivt0x8_undefint shr (0+2)
  3482                           
  3483                           ; Vector 50 : CWG1
  3484   00006C  0040               	dw	ivt0x8_undefint shr (0+2)
  3485                           
  3486                           ; Vector 51 : NCO1
  3487   00006E  0040               	dw	ivt0x8_undefint shr (0+2)
  3488                           
  3489                           ; Vector 52 : DMA2SCNT
  3490   000070  0040               	dw	ivt0x8_undefint shr (0+2)
  3491                           
  3492                           ; Vector 53 : DMA2DCNT
  3493   000072  0040               	dw	ivt0x8_undefint shr (0+2)
  3494                           
  3495                           ; Vector 54 : DMA2OR
  3496   000074  0040               	dw	ivt0x8_undefint shr (0+2)
  3497                           
  3498                           ; Vector 55 : DMA2A
  3499   000076  0040               	dw	ivt0x8_undefint shr (0+2)
  3500                           
  3501                           ; Vector 56 : I2C1RX
  3502   000078  0040               	dw	ivt0x8_undefint shr (0+2)
  3503                           
  3504                           ; Vector 57 : I2C1TX
  3505   00007A  0040               	dw	ivt0x8_undefint shr (0+2)
  3506                           
  3507                           ; Vector 58 : I2C1
  3508   00007C  0040               	dw	ivt0x8_undefint shr (0+2)
  3509                           
  3510                           ; Vector 59 : I2C1E
  3511   00007E  0040               	dw	ivt0x8_undefint shr (0+2)
  3512                           
  3513                           ; Vector 60 : Undefined
  3514   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  3515                           
  3516                           ; Vector 61 : CLC3
  3517   000082  0040               	dw	ivt0x8_undefint shr (0+2)
  3518                           
  3519                           ; Vector 62 : PWM3PR
  3520   000084  0040               	dw	ivt0x8_undefint shr (0+2)
  3521                           
  3522                           ; Vector 63 : PWM3
  3523   000086  0040               	dw	ivt0x8_undefint shr (0+2)
  3524                           
  3525                           ; Vector 64 : U2RX
  3526   000088  0040               	dw	ivt0x8_undefint shr (0+2)
  3527                           
  3528                           ; Vector 65 : U2TX
  3529   00008A  0040               	dw	ivt0x8_undefint shr (0+2)
  3530                           
  3531                           ; Vector 66 : U2E
  3532   00008C  0040               	dw	ivt0x8_undefint shr (0+2)
  3533                           
  3534                           ; Vector 67 : U2
  3535   00008E  0040               	dw	ivt0x8_undefint shr (0+2)
  3536                           
  3537                           ; Vector 68 : TMR5
  3538   000090  0040               	dw	ivt0x8_undefint shr (0+2)
  3539                           
  3540                           ; Vector 69 : TMR5G
  3541   000092  0040               	dw	ivt0x8_undefint shr (0+2)
  3542                           
  3543                           ; Vector 70 : CCP2
  3544   000094  0040               	dw	ivt0x8_undefint shr (0+2)
  3545                           
  3546                           ; Vector 71 : SCAN
  3547   000096  0040               	dw	ivt0x8_undefint shr (0+2)
  3548                           
  3549                           ; Vector 72 : U3RX
  3550   000098  0040               	dw	ivt0x8_undefint shr (0+2)
  3551                           
  3552                           ; Vector 73 : U3TX
  3553   00009A  0040               	dw	ivt0x8_undefint shr (0+2)
  3554                           
  3555                           ; Vector 74 : U3E
  3556   00009C  0040               	dw	ivt0x8_undefint shr (0+2)
  3557                           
  3558                           ; Vector 75 : U3
  3559   00009E  0040               	dw	ivt0x8_undefint shr (0+2)
  3560                           
  3561                           ; Vector 76 : Undefined
  3562   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  3563                           
  3564                           ; Vector 77 : CLC4
  3565   0000A2  0040               	dw	ivt0x8_undefint shr (0+2)
  3566                           
  3567                           ; Vector 78 : Undefined
  3568   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  3569                           
  3570                           ; Vector 79 : Undefined
  3571   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  3572                           
  3573                           ; Vector 80 : INT2
  3574   0000A8  0040               	dw	ivt0x8_undefint shr (0+2)
  3575                           
  3576                           ; Vector 81 : CLC5
  3577   0000AA  0040               	dw	ivt0x8_undefint shr (0+2)
  3578                           
  3579                           ; Vector 82 : CWG2
  3580   0000AC  0040               	dw	ivt0x8_undefint shr (0+2)
  3581                           
  3582                           ; Vector 83 : NCO2
  3583   0000AE  0040               	dw	ivt0x8_undefint shr (0+2)
  3584                           
  3585                           ; Vector 84 : DMA3SCNT
  3586   0000B0  0040               	dw	ivt0x8_undefint shr (0+2)
  3587                           
  3588                           ; Vector 85 : DMA3DCNT
  3589   0000B2  0040               	dw	ivt0x8_undefint shr (0+2)
  3590                           
  3591                           ; Vector 86 : DMA3OR
  3592   0000B4  0040               	dw	ivt0x8_undefint shr (0+2)
  3593                           
  3594                           ; Vector 87 : DMA3A
  3595   0000B6  0040               	dw	ivt0x8_undefint shr (0+2)
  3596                           
  3597                           ; Vector 88 : CCP3
  3598   0000B8  0040               	dw	ivt0x8_undefint shr (0+2)
  3599                           
  3600                           ; Vector 89 : CLC6
  3601   0000BA  0040               	dw	ivt0x8_undefint shr (0+2)
  3602                           
  3603                           ; Vector 90 : CWG3
  3604   0000BC  0040               	dw	ivt0x8_undefint shr (0+2)
  3605                           
  3606                           ; Vector 91 : TMR4
  3607   0000BE  0040               	dw	ivt0x8_undefint shr (0+2)
  3608                           
  3609                           ; Vector 92 : DMA4SCNT
  3610   0000C0  0040               	dw	ivt0x8_undefint shr (0+2)
  3611                           
  3612                           ; Vector 93 : DMA4DCNT
  3613   0000C2  0040               	dw	ivt0x8_undefint shr (0+2)
  3614                           
  3615                           ; Vector 94 : DMA4OR
  3616   0000C4  0040               	dw	ivt0x8_undefint shr (0+2)
  3617                           
  3618                           ; Vector 95 : DMA4A
  3619   0000C6  0040               	dw	ivt0x8_undefint shr (0+2)
  3620                           
  3621                           ; Vector 96 : U4RX
  3622   0000C8  0040               	dw	ivt0x8_undefint shr (0+2)
  3623                           
  3624                           ; Vector 97 : U4TX
  3625   0000CA  0040               	dw	ivt0x8_undefint shr (0+2)
  3626                           
  3627                           ; Vector 98 : U4E
  3628   0000CC  0040               	dw	ivt0x8_undefint shr (0+2)
  3629                           
  3630                           ; Vector 99 : U4
  3631   0000CE  0040               	dw	ivt0x8_undefint shr (0+2)
  3632                           
  3633                           ; Vector 100 : DMA5SCNT
  3634   0000D0  0040               	dw	ivt0x8_undefint shr (0+2)
  3635                           
  3636                           ; Vector 101 : DMA5DCNT
  3637   0000D2  0040               	dw	ivt0x8_undefint shr (0+2)
  3638                           
  3639                           ; Vector 102 : DMA5OR
  3640   0000D4  0040               	dw	ivt0x8_undefint shr (0+2)
  3641                           
  3642                           ; Vector 103 : DMA5A
  3643   0000D6  0040               	dw	ivt0x8_undefint shr (0+2)
  3644                           
  3645                           ; Vector 104 : U5RX
  3646   0000D8  0040               	dw	ivt0x8_undefint shr (0+2)
  3647                           
  3648                           ; Vector 105 : U5TX
  3649   0000DA  0040               	dw	ivt0x8_undefint shr (0+2)
  3650                           
  3651                           ; Vector 106 : U5E
  3652   0000DC  0040               	dw	ivt0x8_undefint shr (0+2)
  3653                           
  3654                           ; Vector 107 : U5
  3655   0000DE  0040               	dw	ivt0x8_undefint shr (0+2)
  3656                           
  3657                           ; Vector 108 : DMA6SCNT
  3658   0000E0  0040               	dw	ivt0x8_undefint shr (0+2)
  3659                           
  3660                           ; Vector 109 : DMA6DCNT
  3661   0000E2  0040               	dw	ivt0x8_undefint shr (0+2)
  3662                           
  3663                           ; Vector 110 : DMA6OR
  3664   0000E4  0040               	dw	ivt0x8_undefint shr (0+2)
  3665                           
  3666                           ; Vector 111 : DMA6A
  3667   0000E6  0040               	dw	ivt0x8_undefint shr (0+2)
  3668                           
  3669                           ; Vector 112 : Undefined
  3670   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  3671                           
  3672                           ; Vector 113 : CLC7
  3673   0000EA  0040               	dw	ivt0x8_undefint shr (0+2)
  3674                           
  3675                           ; Vector 114 : CMP2
  3676   0000EC  0040               	dw	ivt0x8_undefint shr (0+2)
  3677                           
  3678                           ; Vector 115 : NCO3
  3679   0000EE  0040               	dw	ivt0x8_undefint shr (0+2)
  3680                           
  3681                           ; Vector 116 : Undefined
  3682   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  3683                           
  3684                           ; Vector 117 : Undefined
  3685   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  3686                           
  3687                           ; Vector 118 : Undefined
  3688   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  3689                           
  3690                           ; Vector 119 : Undefined
  3691   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  3692                           
  3693                           ; Vector 120 : NVM
  3694   0000F8  0040               	dw	ivt0x8_undefint shr (0+2)
  3695                           
  3696                           ; Vector 121 : CLC8
  3697   0000FA  0040               	dw	ivt0x8_undefint shr (0+2)
  3698                           
  3699                           ; Vector 122 : CRC
  3700   0000FC  0040               	dw	ivt0x8_undefint shr (0+2)
  3701                           
  3702                           ; Vector 123 : TMR6
  3703   0000FE  0040               	dw	ivt0x8_undefint shr (0+2)
  3704   000100                     ivt0x8_undefint:
  3705                           	callstack 0
  3706   000100  00FF               	reset	
  3707                           
  3708                           	psect	rparam
  3709   000001                     ___rparam_used  equ	1
  3710   000000                     ___param_bank   equ	0
  3711   000000                     __Lparam        equ	__Lrparam
  3712   000000                     __Hparam        equ	__Hrparam
  3713                           
  3714                           	psect	config
  3715                           
  3716                           ;Config register CONFIG1 @ 0x300000
  3717                           ;	External Oscillator Selection
  3718                           ;	FEXTOSC = OFF, Oscillator not enabled
  3719                           ;	Reset Oscillator Selection
  3720                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3721   300000                     	org	3145728
  3722   300000  FC                 	db	252
  3723                           
  3724                           ;Config register CONFIG2 @ 0x300001
  3725                           ;	Clock out Enable bit
  3726                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3727                           ;	PRLOCKED One-Way Set Enable bit
  3728                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3729                           ;	Clock Switch Enable bit
  3730                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3731                           ;	Fail-Safe Clock Monitor Enable bit
  3732                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3733   300001                     	org	3145729
  3734   300001  FF                 	db	255
  3735                           
  3736                           ;Config register CONFIG3 @ 0x300002
  3737                           ;	MCLR Enable bit
  3738                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3739                           ;	Power-up timer selection bits
  3740                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  3741                           ;	Multi-vector enable bit
  3742                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3743                           ;	IVTLOCK bit One-way set enable bit
  3744                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3745                           ;	Low Power BOR Enable bit
  3746                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3747                           ;	Brown-out Reset Enable bits
  3748                           ;	BOREN = OFF, Brown-out Reset disabled
  3749   300002                     	org	3145730
  3750   300002  3D                 	db	61
  3751                           
  3752                           ;Config register CONFIG4 @ 0x300003
  3753                           ;	Brown-out Reset Voltage Selection bits
  3754                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3755                           ;	ZCD Disable bit
  3756                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3757                           ;	PPSLOCK bit One-Way Set Enable bit
  3758                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3759                           ;	Stack Full/Underflow Reset Enable bit
  3760                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3761                           ;	Low Voltage Programming Enable bit
  3762                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3763                           ;	Extended Instruction Set Enable bit
  3764                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3765   300003                     	org	3145731
  3766   300003  DF                 	db	223
  3767                           
  3768                           ;Config register CONFIG5 @ 0x300004
  3769                           ;	WDT Period selection bits
  3770                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3771                           ;	WDT operating mode
  3772                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3773   300004                     	org	3145732
  3774   300004  9F                 	db	159
  3775                           
  3776                           ;Config register CONFIG6 @ 0x300005
  3777                           ;	WDT Window Select bits
  3778                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3779                           ;	WDT input clock selector
  3780                           ;	WDTCCS = SC, Software Control
  3781   300005                     	org	3145733
  3782   300005  FF                 	db	255
  3783                           
  3784                           ;Config register CONFIG7 @ 0x300006
  3785                           ;	Boot Block Size selection bits
  3786                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3787                           ;	Boot Block enable bit
  3788                           ;	BBEN = OFF, Boot block disabled
  3789                           ;	Storage Area Flash enable bit
  3790                           ;	SAFEN = OFF, SAF disabled
  3791                           ;	Background Debugger
  3792                           ;	DEBUG = OFF, Background Debugger disabled
  3793   300006                     	org	3145734
  3794   300006  FF                 	db	255
  3795                           
  3796                           ;Config register CONFIG8 @ 0x300007
  3797                           ;	Boot Block Write Protection bit
  3798                           ;	WRTB = OFF, Boot Block not Write protected
  3799                           ;	Configuration Register Write Protection bit
  3800                           ;	WRTC = OFF, Configuration registers not Write protected
  3801                           ;	Data EEPROM Write Protection bit
  3802                           ;	WRTD = OFF, Data EEPROM not Write protected
  3803                           ;	SAF Write protection bit
  3804                           ;	WRTSAF = OFF, SAF not Write Protected
  3805                           ;	Application Block write protection bit
  3806                           ;	WRTAPP = OFF, Application Block not write protected
  3807   300007                     	org	3145735
  3808   300007  FF                 	db	255
  3809                           
  3810                           ;Config register CONFIG10 @ 0x300009
  3811                           ;	PFM and Data EEPROM Code Protection bit
  3812                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3813   300009                     	org	3145737
  3814   300009  FF                 	db	255
  3815                           tosu	equ	0x4FF
  3816                           tosh	equ	0x4FE
  3817                           tosl	equ	0x4FD
  3818                           stkptr	equ	0x4FC
  3819                           pclatu	equ	0x4FB
  3820                           pclath	equ	0x4FA
  3821                           pcl	equ	0x4F9
  3822                           tblptru	equ	0x4F8
  3823                           tblptrh	equ	0x4F7
  3824                           tblptrl	equ	0x4F6
  3825                           tablat	equ	0x4F5
  3826                           prodh	equ	0x4F4
  3827                           prodl	equ	0x4F3
  3828                           indf0	equ	0x4EF
  3829                           postinc0	equ	0x4EE
  3830                           postdec0	equ	0x4ED
  3831                           preinc0	equ	0x4EC
  3832                           plusw0	equ	0x4EB
  3833                           fsr0h	equ	0x4EA
  3834                           fsr0l	equ	0x4E9
  3835                           wreg	equ	0x4E8
  3836                           indf1	equ	0x4E7
  3837                           postinc1	equ	0x4E6
  3838                           postdec1	equ	0x4E5
  3839                           preinc1	equ	0x4E4
  3840                           plusw1	equ	0x4E3
  3841                           fsr1h	equ	0x4E2
  3842                           fsr1l	equ	0x4E1
  3843                           bsr	equ	0x4E0
  3844                           indf2	equ	0x4DF
  3845                           postinc2	equ	0x4DE
  3846                           postdec2	equ	0x4DD
  3847                           preinc2	equ	0x4DC
  3848                           plusw2	equ	0x4DB
  3849                           fsr2h	equ	0x4DA
  3850                           fsr2l	equ	0x4D9
  3851                           status	equ	0x4D8

Data Sizes:
    Strings     38
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      12
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), STR_2(CODE[14]), STR_3(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->___lbdiv
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    ___lbdiv->___lbmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT1_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT1_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT1_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT1_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT1_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1548
                                              9 COMRAM     2     2      0
                         _BORRAR_LCD
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___lbdiv
                            ___lbmod
                          _configuro
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              5 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              4 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              4 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     169
                                              1 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     172
                                              5 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     225
                                              4 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              2 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     217
                                              4 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              2 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
   ___lbdiv
     ___lbmod (ARG)
   ___lbmod
   _configuro
   _lcd_init
     _BORRAR_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 _INT1_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRh        1100      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBIGSFRll        173      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     11      12     12.6%
BITBIGSFRlh          5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      12      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jun 05 16:31:53 2025

                     l67 26FA            ENVIA_CHAR@aux 0504                      l833 26F0  
                    l849 271E                      l887 2930                      u207 2834  
                    u160 27A2                      u217 2738                      u307 270C  
                    u227 2746                      u317 2716                      u237 2756  
                    u327 2950                      u247 27CC                      u257 27FE  
                    u267 26D2                      u277 26E0                      u197 2666  
                    u287 26EA                      u297 26FE              LEER_LCD@aux 0502  
                    wreg 04E8             ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 0502  
         ENVIA_CHAR@dato 0503                     l1101 27BC                     l1117 286E  
                   l1109 2856                     l1073 28C6                     l1067 28AE  
                   l1139 2676                     l1077 28DA                     l1085 2798  
                   l1097 27B4                     l1089 279E                     STR_1 2601  
                   STR_2 2611                     STR_3 261F                     _LATD 04C1  
                   _main 2628                     start 0102            ?_CURSOR_ONOFF 0501  
           ___param_bank 0000          ??_ENVIA_LCD_CMD 0503         __end_of_LEER_LCD 2728  
       __end_of_INT1_ISR 2904                    ?_main 0501          __end_of___lbdiv 27C0  
        __end_of___lbmod 2876                    _OSCEN 00B3                    _PORTD 04D1  
                  _TRISD 04C9              ?_POS_CURSOR 0505                    tablat 04F5  
                  status 04D8          ___lbdiv@divisor 0506          ___lbdiv@counter 0508  
         ??_CURSOR_ONOFF 0505          __initialization 2904             __end_of_main 26C6  
        _ESCRIBE_MENSAJE 28C0                   ??_main 050A            __activetblptr 0001  
                 _ANSELD 0418                   i2l1061 28F4                   i2l1059 28F2  
                 _OSCFRQ 00B1         __end_of_lcd_init 284E                ??___lbdiv 0507  
   __end_of_ENVIA_NIBBLE 295A                ??___lbmod 0503                   _cuenta 050C  
                 isa$std 0001             __mediumconst 2600                   tblptrh 04F7  
                 tblptrl 04F6                   tblptru 04F8             ??_BORRAR_LCD 0505  
       ___lbdiv@dividend 0507          ___lbmod@divisor 0502                ?_LEER_LCD 0501  
             __accesstop 0560  __end_of__initialization 2914          ___lbmod@counter 0504  
              ?_INT1_ISR 0501             ??_LCD_CONFIG 0505            ___rparam_used 0001  
           ??_ENVIA_CHAR 0503  __end_of_ESCRIBE_MENSAJE 28E4           __pcstackCOMRAM 0501  
         ivt0x8_undefint 0100       __end_of_BORRAR_LCD 296A         ___lbdiv@quotient 0509  
       ENVIA_LCD_CMD@aux 0504     __end_of_CURSOR_ONOFF 293E       __end_of_LCD_CONFIG 2788  
     __end_of_ENVIA_CHAR 2824               ??_LEER_LCD 0502         ENVIA_NIBBLE@dato 0502  
             ??_INT1_ISR 0501                  IVTBASEH 045E                  IVTBASEL 045D  
                IVTBASEU 045F                  _INT1PPS 023F                  _OSCCON1 00AD  
                i2u33_47 28FA             ??_POS_CURSOR 0506                ?_lcd_init 0501  
                __Hparam 0000                  __Lparam 0000         ?_ESCRIBE_MENSAJE 0505  
      __end_of_configuro 289C                  ___lbdiv 2788                  ___lbmod 284E  
           __psmallconst 2600    __end_of_ENVIA_LCD_CMD 27F2                  __pcinit 2904  
     __end_of_POS_CURSOR 28C0                  __ramtop 2600                  __ptext0 2628  
                __ptext1 2824                  __ptext2 2728                  __ptext3 2922  
                __ptext4 295A                  __ptext5 2962                  __ptext6 2876  
                __ptext7 284E                  __ptext8 2788                  __ptext9 289C  
             ??_lcd_init 0506             _ENVIA_NIBBLE 293E     end_of_initialization 2914  
       ___lbmod@dividend 0503                _TRISBbits 04C7              ___lbmod@rem 0505  
           _CURSOR_ONOFF 2922       CURSOR_ONOFF@estado 0505            ??_CURSOR_HOME 0505  
    start_initialization 2904               ivt0x8_base 0008        ENVIA_LCD_CMD@dato 0503  
            __pbssCOMRAM 050C      __end_of_CURSOR_HOME 2962                 ?___lbdiv 0506  
               ?___lbmod 0502                _configuro 2876              __smallconst 2600  
               _LEER_LCD 26C6                 _INT1_ISR 28E4                 _LATDbits 04C1  
               _PIE6bits 04A4                 _PIR6bits 04B4         ESCRIBE_MENSAJE@i 0508  
         POS_CURSOR@fila 0506               ?_configuro 0501                 _WPUBbits 0409  
            _CURSOR_HOME 295A              _INTCON0bits 04D6                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 2600               _ANSELBbits 0408  
               __pivt0x8 0008                 __ptext10 27C0                 __ptext11 28C0  
               __ptext12 27F2                 __ptext13 26C6                 __ptext14 293E  
               __ptext15 28E4               _BORRAR_LCD 2962                 _lcd_init 2824  
             _LCD_CONFIG 2728               _ENVIA_CHAR 27F2                 isa$xinst 0000  
          _ENVIA_LCD_CMD 27C0              ??_configuro 0502        ??_ESCRIBE_MENSAJE 0507  
               intlevel2 0000    ESCRIBE_MENSAJE@cadena 0505           ?_ENVIA_LCD_CMD 0501  
            ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501               _POS_CURSOR 289C  
            ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 0506              ?_ENVIA_CHAR 0501  
      POS_CURSOR@columna 0505  
