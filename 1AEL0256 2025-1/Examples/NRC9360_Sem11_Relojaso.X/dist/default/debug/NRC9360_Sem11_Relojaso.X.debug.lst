

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Jun 13 16:39:20 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Generated 04/02/2025 GMT
    33                           ; 
    34                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F57Q43 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   0004E0                     bsr             equ	1248
    67   0004E9                     fsr0            equ	1257
    68   0004EA                     fsr0h           equ	1258
    69   0004E9                     fsr0l           equ	1257
    70   0004E1                     fsr1            equ	1249
    71   0004E2                     fsr1h           equ	1250
    72   0004E1                     fsr1l           equ	1249
    73   0004D9                     fsr2            equ	1241
    74   0004DA                     fsr2h           equ	1242
    75   0004D9                     fsr2l           equ	1241
    76   0004EF                     indf0           equ	1263
    77   0004E7                     indf1           equ	1255
    78   0004DF                     indf2           equ	1247
    79   0004D6                     intcon          equ	1238
    80   000041                     nvmcon          equ	65
    81   0004F9                     pcl             equ	1273
    82   0004FA                     pclath          equ	1274
    83   0004FB                     pclatu          equ	1275
    84   0004EB                     plusw0          equ	1259
    85   0004E3                     plusw1          equ	1251
    86   0004DB                     plusw2          equ	1243
    87   0004ED                     postdec0        equ	1261
    88   0004E5                     postdec1        equ	1253
    89   0004DD                     postdec2        equ	1245
    90   0004EE                     postinc0        equ	1262
    91   0004E6                     postinc1        equ	1254
    92   0004DE                     postinc2        equ	1246
    93   0004EC                     preinc0         equ	1260
    94   0004E4                     preinc1         equ	1252
    95   0004DC                     preinc2         equ	1244
    96   0004F3                     prod            equ	1267
    97   0004F4                     prodh           equ	1268
    98   0004F3                     prodl           equ	1267
    99   0004D8                     status          equ	1240
   100   0004F5                     tablat          equ	1269
   101   0004F6                     tblptr          equ	1270
   102   0004F7                     tblptrh         equ	1271
   103   0004F6                     tblptrl         equ	1270
   104   0004F8                     tblptru         equ	1272
   105   0004FD                     tosl            equ	1277
   106   0004E8                     wreg            equ	1256
   107   000039                     CLKRCON         equ	57	;# 
   108   00003A                     CLKRCLK         equ	58	;# 
   109   000040                     NVMCON0         equ	64	;# 
   110   000041                     NVMCON1         equ	65	;# 
   111   000042                     NVMLOCK         equ	66	;# 
   112   000043                     NVMADR          equ	67	;# 
   113   000043                     NVMADRL         equ	67	;# 
   114   000044                     NVMADRH         equ	68	;# 
   115   000045                     NVMADRU         equ	69	;# 
   116   000046                     NVMDAT          equ	70	;# 
   117   000046                     NVMDATL         equ	70	;# 
   118   000047                     NVMDATH         equ	71	;# 
   119   000048                     VREGCON         equ	72	;# 
   120   000049                     BORCON          equ	73	;# 
   121   00004A                     HLVDCON0        equ	74	;# 
   122   00004B                     HLVDCON1        equ	75	;# 
   123   00004C                     ZCDCON          equ	76	;# 
   124   000060                     PMD0            equ	96	;# 
   125   000061                     PMD1            equ	97	;# 
   126   000063                     PMD3            equ	99	;# 
   127   000064                     PMD4            equ	100	;# 
   128   000065                     PMD5            equ	101	;# 
   129   000066                     PMD6            equ	102	;# 
   130   000067                     PMD7            equ	103	;# 
   131   000068                     PMD8            equ	104	;# 
   132   00006A                     MD1CON0         equ	106	;# 
   133   00006B                     MD1CON1         equ	107	;# 
   134   00006C                     MD1SRC          equ	108	;# 
   135   00006D                     MD1CARL         equ	109	;# 
   136   00006E                     MD1CARH         equ	110	;# 
   137   00006F                     CMOUT           equ	111	;# 
   138   000070                     CM1CON0         equ	112	;# 
   139   000071                     CM1CON1         equ	113	;# 
   140   000072                     CM1NCH          equ	114	;# 
   141   000073                     CM1PCH          equ	115	;# 
   142   000074                     CM2CON0         equ	116	;# 
   143   000075                     CM2CON1         equ	117	;# 
   144   000076                     CM2NCH          equ	118	;# 
   145   000077                     CM2PCH          equ	119	;# 
   146   000078                     WDTCON0         equ	120	;# 
   147   000079                     WDTCON1         equ	121	;# 
   148   00007A                     WDTPS           equ	122	;# 
   149   00007A                     WDTPSL          equ	122	;# 
   150   00007B                     WDTPSH          equ	123	;# 
   151   00007C                     WDTTMR          equ	124	;# 
   152   00007D                     DAC1DAT         equ	125	;# 
   153   00007D                     DAC1DATL        equ	125	;# 
   154   00007F                     DAC1CON         equ	127	;# 
   155   000080                     SPI1RXB         equ	128	;# 
   156   000081                     SPI1TXB         equ	129	;# 
   157   000082                     SPI1TCNT        equ	130	;# 
   158   000082                     SPI1TCNTL       equ	130	;# 
   159   000083                     SPI1TCNTH       equ	131	;# 
   160   000084                     SPI1CON0        equ	132	;# 
   161   000085                     SPI1CON1        equ	133	;# 
   162   000086                     SPI1CON2        equ	134	;# 
   163   000087                     SPI1STATUS      equ	135	;# 
   164   000088                     SPI1TWIDTH      equ	136	;# 
   165   000089                     SPI1BAUD        equ	137	;# 
   166   00008A                     SPI1INTF        equ	138	;# 
   167   00008B                     SPI1INTE        equ	139	;# 
   168   00008C                     SPI1CLK         equ	140	;# 
   169   00008D                     SPI2RXB         equ	141	;# 
   170   00008E                     SPI2TXB         equ	142	;# 
   171   00008F                     SPI2TCNT        equ	143	;# 
   172   00008F                     SPI2TCNTL       equ	143	;# 
   173   000090                     SPI2TCNTH       equ	144	;# 
   174   000091                     SPI2CON0        equ	145	;# 
   175   000092                     SPI2CON1        equ	146	;# 
   176   000093                     SPI2CON2        equ	147	;# 
   177   000094                     SPI2STATUS      equ	148	;# 
   178   000095                     SPI2TWIDTH      equ	149	;# 
   179   000096                     SPI2BAUD        equ	150	;# 
   180   000097                     SPI2INTF        equ	151	;# 
   181   000098                     SPI2INTE        equ	152	;# 
   182   000099                     SPI2CLK         equ	153	;# 
   183   0000AC                     ACTCON          equ	172	;# 
   184   0000AD                     OSCCON1         equ	173	;# 
   185   0000AE                     OSCCON2         equ	174	;# 
   186   0000AF                     OSCCON3         equ	175	;# 
   187   0000B0                     OSCTUNE         equ	176	;# 
   188   0000B1                     OSCFRQ          equ	177	;# 
   189   0000B1                     OSCFREQ         equ	177	;# 
   190   0000B2                     OSCSTAT         equ	178	;# 
   191   0000B2                     OSCSTAT1        equ	178	;# 
   192   0000B3                     OSCEN           equ	179	;# 
   193   0000B4                     PRLOCK          equ	180	;# 
   194   0000B5                     SCANPR          equ	181	;# 
   195   0000B6                     DMA1PR          equ	182	;# 
   196   0000B7                     DMA2PR          equ	183	;# 
   197   0000B8                     DMA3PR          equ	184	;# 
   198   0000B9                     DMA4PR          equ	185	;# 
   199   0000BA                     DMA5PR          equ	186	;# 
   200   0000BB                     DMA6PR          equ	187	;# 
   201   0000BE                     MAINPR          equ	190	;# 
   202   0000BF                     ISRPR           equ	191	;# 
   203   0000D4                     CLCDATA         equ	212	;# 
   204   0000D5                     CLCSELECT       equ	213	;# 
   205   0000D6                     CLCnCON         equ	214	;# 
   206   0000D7                     CLCnPOL         equ	215	;# 
   207   0000D8                     CLCnSEL0        equ	216	;# 
   208   0000D9                     CLCnSEL1        equ	217	;# 
   209   0000DA                     CLCnSEL2        equ	218	;# 
   210   0000DB                     CLCnSEL3        equ	219	;# 
   211   0000DC                     CLCnGLS0        equ	220	;# 
   212   0000DD                     CLCnGLS1        equ	221	;# 
   213   0000DE                     CLCnGLS2        equ	222	;# 
   214   0000DF                     CLCnGLS3        equ	223	;# 
   215   0000E8                     DMASELECT       equ	232	;# 
   216   0000E9                     DMAnBUF         equ	233	;# 
   217   0000EA                     DMAnDCNT        equ	234	;# 
   218   0000EA                     DMAnDCNTL       equ	234	;# 
   219   0000EB                     DMAnDCNTH       equ	235	;# 
   220   0000EC                     DMAnDPTR        equ	236	;# 
   221   0000EC                     DMAnDPTRL       equ	236	;# 
   222   0000ED                     DMAnDPTRH       equ	237	;# 
   223   0000EE                     DMAnDSZ         equ	238	;# 
   224   0000EE                     DMAnDSZL        equ	238	;# 
   225   0000EF                     DMAnDSZH        equ	239	;# 
   226   0000F0                     DMAnDSA         equ	240	;# 
   227   0000F0                     DMAnDSAL        equ	240	;# 
   228   0000F1                     DMAnDSAH        equ	241	;# 
   229   0000F2                     DMAnSCNT        equ	242	;# 
   230   0000F2                     DMAnSCNTL       equ	242	;# 
   231   0000F3                     DMAnSCNTH       equ	243	;# 
   232   0000F4                     DMAnSPTR        equ	244	;# 
   233   0000F4                     DMAnSPTRL       equ	244	;# 
   234   0000F5                     DMAnSPTRH       equ	245	;# 
   235   0000F6                     DMAnSPTRU       equ	246	;# 
   236   0000F7                     DMAnSSZ         equ	247	;# 
   237   0000F7                     DMAnSSZL        equ	247	;# 
   238   0000F8                     DMAnSSZH        equ	248	;# 
   239   0000F9                     DMAnSSA         equ	249	;# 
   240   0000F9                     DMAnSSAL        equ	249	;# 
   241   0000FA                     DMAnSSAH        equ	250	;# 
   242   0000FB                     DMAnSSAU        equ	251	;# 
   243   0000FC                     DMAnCON0        equ	252	;# 
   244   0000FD                     DMAnCON1        equ	253	;# 
   245   0000FE                     DMAnAIRQ        equ	254	;# 
   246   0000FF                     DMAnSIRQ        equ	255	;# 
   247   000200                     PPSLOCK         equ	512	;# 
   248   000201                     RA0PPS          equ	513	;# 
   249   000202                     RA1PPS          equ	514	;# 
   250   000203                     RA2PPS          equ	515	;# 
   251   000204                     RA3PPS          equ	516	;# 
   252   000205                     RA4PPS          equ	517	;# 
   253   000206                     RA5PPS          equ	518	;# 
   254   000207                     RA6PPS          equ	519	;# 
   255   000208                     RA7PPS          equ	520	;# 
   256   000209                     RB0PPS          equ	521	;# 
   257   00020A                     RB1PPS          equ	522	;# 
   258   00020B                     RB2PPS          equ	523	;# 
   259   00020C                     RB3PPS          equ	524	;# 
   260   00020D                     RB4PPS          equ	525	;# 
   261   00020E                     RB5PPS          equ	526	;# 
   262   00020F                     RB6PPS          equ	527	;# 
   263   000210                     RB7PPS          equ	528	;# 
   264   000211                     RC0PPS          equ	529	;# 
   265   000212                     RC1PPS          equ	530	;# 
   266   000213                     RC2PPS          equ	531	;# 
   267   000214                     RC3PPS          equ	532	;# 
   268   000215                     RC4PPS          equ	533	;# 
   269   000216                     RC5PPS          equ	534	;# 
   270   000217                     RC6PPS          equ	535	;# 
   271   000218                     RC7PPS          equ	536	;# 
   272   000219                     RD0PPS          equ	537	;# 
   273   00021A                     RD1PPS          equ	538	;# 
   274   00021B                     RD2PPS          equ	539	;# 
   275   00021C                     RD3PPS          equ	540	;# 
   276   00021D                     RD4PPS          equ	541	;# 
   277   00021E                     RD5PPS          equ	542	;# 
   278   00021F                     RD6PPS          equ	543	;# 
   279   000220                     RD7PPS          equ	544	;# 
   280   000221                     RE0PPS          equ	545	;# 
   281   000222                     RE1PPS          equ	546	;# 
   282   000223                     RE2PPS          equ	547	;# 
   283   000229                     RF0PPS          equ	553	;# 
   284   00022A                     RF1PPS          equ	554	;# 
   285   00022B                     RF2PPS          equ	555	;# 
   286   00022C                     RF3PPS          equ	556	;# 
   287   00022D                     RF4PPS          equ	557	;# 
   288   00022E                     RF5PPS          equ	558	;# 
   289   00022F                     RF6PPS          equ	559	;# 
   290   000230                     RF7PPS          equ	560	;# 
   291   00023E                     INT0PPS         equ	574	;# 
   292   00023F                     INT1PPS         equ	575	;# 
   293   000240                     INT2PPS         equ	576	;# 
   294   000241                     T0CKIPPS        equ	577	;# 
   295   000242                     T1CKIPPS        equ	578	;# 
   296   000243                     T1GPPS          equ	579	;# 
   297   000244                     T3CKIPPS        equ	580	;# 
   298   000245                     T3GPPS          equ	581	;# 
   299   000246                     T5CKIPPS        equ	582	;# 
   300   000247                     T5GPPS          equ	583	;# 
   301   000248                     T2INPPS         equ	584	;# 
   302   000249                     T4INPPS         equ	585	;# 
   303   00024A                     T6INPPS         equ	586	;# 
   304   00024F                     CCP1PPS         equ	591	;# 
   305   000250                     CCP2PPS         equ	592	;# 
   306   000251                     CCP3PPS         equ	593	;# 
   307   000253                     PWM1ERSPPS      equ	595	;# 
   308   000254                     PWM2ERSPPS      equ	596	;# 
   309   000255                     PWM3ERSPPS      equ	597	;# 
   310   000257                     PWMIN0PPS       equ	599	;# 
   311   000258                     PWMIN1PPS       equ	600	;# 
   312   000259                     SMT1WINPPS      equ	601	;# 
   313   00025A                     SMT1SIGPPS      equ	602	;# 
   314   00025B                     CWG1PPS         equ	603	;# 
   315   00025B                     CWG1INPPS       equ	603	;# 
   316   00025C                     CWG2PPS         equ	604	;# 
   317   00025C                     CWG2INPPS       equ	604	;# 
   318   00025D                     CWG3PPS         equ	605	;# 
   319   00025D                     CWG3INPPS       equ	605	;# 
   320   00025E                     MD1CARLPPS      equ	606	;# 
   321   00025E                     MDCARLPPS       equ	606	;# 
   322   00025F                     MD1CARHPPS      equ	607	;# 
   323   00025F                     MDCARHPPS       equ	607	;# 
   324   000260                     MD1SRCPPS       equ	608	;# 
   325   000260                     MDSRCPPS        equ	608	;# 
   326   000261                     CLCIN0PPS       equ	609	;# 
   327   000262                     CLCIN1PPS       equ	610	;# 
   328   000263                     CLCIN2PPS       equ	611	;# 
   329   000264                     CLCIN3PPS       equ	612	;# 
   330   000265                     CLCIN4PPS       equ	613	;# 
   331   000266                     CLCIN5PPS       equ	614	;# 
   332   000267                     CLCIN6PPS       equ	615	;# 
   333   000268                     CLCIN7PPS       equ	616	;# 
   334   000269                     ADACTPPS        equ	617	;# 
   335   00026A                     SPI1SCKPPS      equ	618	;# 
   336   00026B                     SPI1SDIPPS      equ	619	;# 
   337   00026C                     SPI1SSPPS       equ	620	;# 
   338   00026D                     SPI2SCKPPS      equ	621	;# 
   339   00026E                     SPI2SDIPPS      equ	622	;# 
   340   00026F                     SPI2SSPPS       equ	623	;# 
   341   000270                     I2C1SDAPPS      equ	624	;# 
   342   000271                     I2C1SCLPPS      equ	625	;# 
   343   000272                     U1RXPPS         equ	626	;# 
   344   000273                     U1CTSPPS        equ	627	;# 
   345   000274                     U2RXPPS         equ	628	;# 
   346   000275                     U2CTSPPS        equ	629	;# 
   347   000276                     U3RXPPS         equ	630	;# 
   348   000277                     U3CTSPPS        equ	631	;# 
   349   000278                     U4RXPPS         equ	632	;# 
   350   000279                     U4CTSPPS        equ	633	;# 
   351   00027A                     U5RXPPS         equ	634	;# 
   352   00027B                     U5CTSPPS        equ	635	;# 
   353   000286                     RC4I2C          equ	646	;# 
   354   000287                     RC3I2C          equ	647	;# 
   355   000288                     RB2I2C          equ	648	;# 
   356   000289                     RB1I2C          equ	649	;# 
   357   00028B                     I2C1RXB         equ	651	;# 
   358   00028C                     I2C1TXB         equ	652	;# 
   359   00028D                     I2C1CNT         equ	653	;# 
   360   00028E                     I2C1ADB0        equ	654	;# 
   361   00028F                     I2C1ADB1        equ	655	;# 
   362   000290                     I2C1ADR0        equ	656	;# 
   363   000291                     I2C1ADR1        equ	657	;# 
   364   000292                     I2C1ADR2        equ	658	;# 
   365   000293                     I2C1ADR3        equ	659	;# 
   366   000294                     I2C1CON0        equ	660	;# 
   367   000295                     I2C1CON1        equ	661	;# 
   368   000296                     I2C1CON2        equ	662	;# 
   369   000297                     I2C1ERR         equ	663	;# 
   370   000298                     I2C1STAT0       equ	664	;# 
   371   000299                     I2C1STAT1       equ	665	;# 
   372   00029A                     I2C1PIR         equ	666	;# 
   373   00029B                     I2C1PIE         equ	667	;# 
   374   00029C                     I2C1CLK         equ	668	;# 
   375   00029D                     I2C1BTO         equ	669	;# 
   376   0002A1                     U1RXB           equ	673	;# 
   377   0002A1                     U1RXBL          equ	673	;# 
   378   0002A2                     U1RXCHK         equ	674	;# 
   379   0002A3                     U1TXB           equ	675	;# 
   380   0002A3                     U1TXBL          equ	675	;# 
   381   0002A4                     U1TXCHK         equ	676	;# 
   382   0002A5                     U1P1            equ	677	;# 
   383   0002A5                     U1P1L           equ	677	;# 
   384   0002A6                     U1P1H           equ	678	;# 
   385   0002A7                     U1P2            equ	679	;# 
   386   0002A7                     U1P2L           equ	679	;# 
   387   0002A8                     U1P2H           equ	680	;# 
   388   0002A9                     U1P3            equ	681	;# 
   389   0002A9                     U1P3L           equ	681	;# 
   390   0002AA                     U1P3H           equ	682	;# 
   391   0002AB                     U1CON0          equ	683	;# 
   392   0002AC                     U1CON1          equ	684	;# 
   393   0002AD                     U1CON2          equ	685	;# 
   394   0002AE                     U1BRG           equ	686	;# 
   395   0002AE                     U1BRGL          equ	686	;# 
   396   0002AF                     U1BRGH          equ	687	;# 
   397   0002B0                     U1FIFO          equ	688	;# 
   398   0002B1                     U1UIR           equ	689	;# 
   399   0002B2                     U1ERRIR         equ	690	;# 
   400   0002B3                     U1ERRIE         equ	691	;# 
   401   0002B4                     U2RXB           equ	692	;# 
   402   0002B4                     U2RXBL          equ	692	;# 
   403   0002B6                     U2TXB           equ	694	;# 
   404   0002B6                     U2TXBL          equ	694	;# 
   405   0002B8                     U2P1            equ	696	;# 
   406   0002B8                     U2P1L           equ	696	;# 
   407   0002BA                     U2P2            equ	698	;# 
   408   0002BA                     U2P2L           equ	698	;# 
   409   0002BC                     U2P3            equ	700	;# 
   410   0002BC                     U2P3L           equ	700	;# 
   411   0002BE                     U2CON0          equ	702	;# 
   412   0002BF                     U2CON1          equ	703	;# 
   413   0002C0                     U2CON2          equ	704	;# 
   414   0002C1                     U2BRG           equ	705	;# 
   415   0002C1                     U2BRGL          equ	705	;# 
   416   0002C2                     U2BRGH          equ	706	;# 
   417   0002C3                     U2FIFO          equ	707	;# 
   418   0002C4                     U2UIR           equ	708	;# 
   419   0002C5                     U2ERRIR         equ	709	;# 
   420   0002C6                     U2ERRIE         equ	710	;# 
   421   0002C7                     U3RXB           equ	711	;# 
   422   0002C7                     U3RXBL          equ	711	;# 
   423   0002C9                     U3TXB           equ	713	;# 
   424   0002C9                     U3TXBL          equ	713	;# 
   425   0002CB                     U3P1            equ	715	;# 
   426   0002CB                     U3P1L           equ	715	;# 
   427   0002CD                     U3P2            equ	717	;# 
   428   0002CD                     U3P2L           equ	717	;# 
   429   0002CF                     U3P3            equ	719	;# 
   430   0002CF                     U3P3L           equ	719	;# 
   431   0002D1                     U3CON0          equ	721	;# 
   432   0002D2                     U3CON1          equ	722	;# 
   433   0002D3                     U3CON2          equ	723	;# 
   434   0002D4                     U3BRG           equ	724	;# 
   435   0002D4                     U3BRGL          equ	724	;# 
   436   0002D5                     U3BRGH          equ	725	;# 
   437   0002D6                     U3FIFO          equ	726	;# 
   438   0002D7                     U3UIR           equ	727	;# 
   439   0002D8                     U3ERRIR         equ	728	;# 
   440   0002D9                     U3ERRIE         equ	729	;# 
   441   0002DA                     U4RXB           equ	730	;# 
   442   0002DA                     U4RXBL          equ	730	;# 
   443   0002DC                     U4TXB           equ	732	;# 
   444   0002DC                     U4TXBL          equ	732	;# 
   445   0002DE                     U4P1            equ	734	;# 
   446   0002DE                     U4P1L           equ	734	;# 
   447   0002E0                     U4P2            equ	736	;# 
   448   0002E0                     U4P2L           equ	736	;# 
   449   0002E2                     U4P3            equ	738	;# 
   450   0002E2                     U4P3L           equ	738	;# 
   451   0002E4                     U4CON0          equ	740	;# 
   452   0002E5                     U4CON1          equ	741	;# 
   453   0002E6                     U4CON2          equ	742	;# 
   454   0002E7                     U4BRG           equ	743	;# 
   455   0002E7                     U4BRGL          equ	743	;# 
   456   0002E8                     U4BRGH          equ	744	;# 
   457   0002E9                     U4FIFO          equ	745	;# 
   458   0002EA                     U4UIR           equ	746	;# 
   459   0002EB                     U4ERRIR         equ	747	;# 
   460   0002EC                     U4ERRIE         equ	748	;# 
   461   0002ED                     U5RXB           equ	749	;# 
   462   0002ED                     U5RXBL          equ	749	;# 
   463   0002EF                     U5TXB           equ	751	;# 
   464   0002EF                     U5TXBL          equ	751	;# 
   465   0002F1                     U5P1            equ	753	;# 
   466   0002F1                     U5P1L           equ	753	;# 
   467   0002F3                     U5P2            equ	755	;# 
   468   0002F3                     U5P2L           equ	755	;# 
   469   0002F5                     U5P3            equ	757	;# 
   470   0002F5                     U5P3L           equ	757	;# 
   471   0002F7                     U5CON0          equ	759	;# 
   472   0002F8                     U5CON1          equ	760	;# 
   473   0002F9                     U5CON2          equ	761	;# 
   474   0002FA                     U5BRG           equ	762	;# 
   475   0002FA                     U5BRGL          equ	762	;# 
   476   0002FB                     U5BRGH          equ	763	;# 
   477   0002FC                     U5FIFO          equ	764	;# 
   478   0002FD                     U5UIR           equ	765	;# 
   479   0002FE                     U5ERRIR         equ	766	;# 
   480   0002FF                     U5ERRIE         equ	767	;# 
   481   000300                     SMT1TMR         equ	768	;# 
   482   000300                     SMT1TMRL        equ	768	;# 
   483   000301                     SMT1TMRH        equ	769	;# 
   484   000302                     SMT1TMRU        equ	770	;# 
   485   000303                     SMT1CPR         equ	771	;# 
   486   000303                     SMT1CPRL        equ	771	;# 
   487   000304                     SMT1CPRH        equ	772	;# 
   488   000305                     SMT1CPRU        equ	773	;# 
   489   000306                     SMT1CPW         equ	774	;# 
   490   000306                     SMT1CPWL        equ	774	;# 
   491   000307                     SMT1CPWH        equ	775	;# 
   492   000308                     SMT1CPWU        equ	776	;# 
   493   000309                     SMT1PR          equ	777	;# 
   494   000309                     SMT1PRL         equ	777	;# 
   495   00030A                     SMT1PRH         equ	778	;# 
   496   00030B                     SMT1PRU         equ	779	;# 
   497   00030C                     SMT1CON0        equ	780	;# 
   498   00030D                     SMT1CON1        equ	781	;# 
   499   00030E                     SMT1STAT        equ	782	;# 
   500   00030F                     SMT1CLK         equ	783	;# 
   501   000310                     SMT1SIG         equ	784	;# 
   502   000311                     SMT1WIN         equ	785	;# 
   503   000318                     TMR0L           equ	792	;# 
   504   000318                     TMR0            equ	792	;# 
   505   000319                     TMR0H           equ	793	;# 
   506   000319                     PR0             equ	793	;# 
   507   00031A                     T0CON0          equ	794	;# 
   508   00031B                     T0CON1          equ	795	;# 
   509   00031C                     TMR1            equ	796	;# 
   510   00031C                     TMR1L           equ	796	;# 
   511   00031D                     TMR1H           equ	797	;# 
   512   00031E                     T1CON           equ	798	;# 
   513   00031E                     TMR1CON         equ	798	;# 
   514   00031F                     T1GCON          equ	799	;# 
   515   00031F                     TMR1GCON        equ	799	;# 
   516   000320                     T1GATE          equ	800	;# 
   517   000320                     TMR1GATE        equ	800	;# 
   518   000321                     T1CLK           equ	801	;# 
   519   000321                     TMR1CLK         equ	801	;# 
   520   000321                     PR1             equ	801	;# 
   521   000322                     T2TMR           equ	802	;# 
   522   000322                     TMR2            equ	802	;# 
   523   000323                     T2PR            equ	803	;# 
   524   000323                     PR2             equ	803	;# 
   525   000324                     T2CON           equ	804	;# 
   526   000325                     T2HLT           equ	805	;# 
   527   000326                     T2CLKCON        equ	806	;# 
   528   000326                     T2CLK           equ	806	;# 
   529   000327                     T2RST           equ	807	;# 
   530   000328                     TMR3            equ	808	;# 
   531   000328                     TMR3L           equ	808	;# 
   532   000329                     TMR3H           equ	809	;# 
   533   00032A                     T3CON           equ	810	;# 
   534   00032A                     TMR3CON         equ	810	;# 
   535   00032B                     T3GCON          equ	811	;# 
   536   00032B                     TMR3GCON        equ	811	;# 
   537   00032C                     T3GATE          equ	812	;# 
   538   00032C                     TMR3GATE        equ	812	;# 
   539   00032D                     T3CLK           equ	813	;# 
   540   00032D                     TMR3CLK         equ	813	;# 
   541   00032D                     PR3             equ	813	;# 
   542   00032E                     T4TMR           equ	814	;# 
   543   00032E                     TMR4            equ	814	;# 
   544   00032F                     T4PR            equ	815	;# 
   545   00032F                     PR4             equ	815	;# 
   546   000330                     T4CON           equ	816	;# 
   547   000331                     T4HLT           equ	817	;# 
   548   000332                     T4CLKCON        equ	818	;# 
   549   000332                     T4CLK           equ	818	;# 
   550   000333                     T4RST           equ	819	;# 
   551   000334                     TMR5            equ	820	;# 
   552   000334                     TMR5L           equ	820	;# 
   553   000335                     TMR5H           equ	821	;# 
   554   000336                     T5CON           equ	822	;# 
   555   000336                     TMR5CON         equ	822	;# 
   556   000337                     T5GCON          equ	823	;# 
   557   000337                     TMR5GCON        equ	823	;# 
   558   000338                     T5GATE          equ	824	;# 
   559   000338                     TMR5GATE        equ	824	;# 
   560   000339                     T5CLK           equ	825	;# 
   561   000339                     TMR5CLK         equ	825	;# 
   562   000339                     PR5             equ	825	;# 
   563   00033A                     T6TMR           equ	826	;# 
   564   00033A                     TMR6            equ	826	;# 
   565   00033B                     T6PR            equ	827	;# 
   566   00033B                     PR6             equ	827	;# 
   567   00033C                     T6CON           equ	828	;# 
   568   00033D                     T6HLT           equ	829	;# 
   569   00033E                     T6CLKCON        equ	830	;# 
   570   00033E                     T6CLK           equ	830	;# 
   571   00033F                     T6RST           equ	831	;# 
   572   000340                     CCPR1           equ	832	;# 
   573   000340                     CCPR1L          equ	832	;# 
   574   000341                     CCPR1H          equ	833	;# 
   575   000342                     CCP1CON         equ	834	;# 
   576   000343                     CCP1CAP         equ	835	;# 
   577   000344                     CCPR2           equ	836	;# 
   578   000344                     CCPR2L          equ	836	;# 
   579   000345                     CCPR2H          equ	837	;# 
   580   000346                     CCP2CON         equ	838	;# 
   581   000347                     CCP2CAP         equ	839	;# 
   582   000348                     CCPR3           equ	840	;# 
   583   000348                     CCPR3L          equ	840	;# 
   584   000349                     CCPR3H          equ	841	;# 
   585   00034A                     CCP3CON         equ	842	;# 
   586   00034B                     CCP3CAP         equ	843	;# 
   587   00034C                     CCPTMRS0        equ	844	;# 
   588   00034F                     CRCDATA         equ	847	;# 
   589   00034F                     CRCDATL         equ	847	;# 
   590   000350                     CRCDATH         equ	848	;# 
   591   000351                     CRCACC          equ	849	;# 
   592   000351                     CRCACCL         equ	849	;# 
   593   000352                     CRCACCH         equ	850	;# 
   594   000353                     CRCSHFT         equ	851	;# 
   595   000353                     CRCSHIFTL       equ	851	;# 
   596   000354                     CRCSHIFTH       equ	852	;# 
   597   000355                     CRCXOR          equ	853	;# 
   598   000355                     CRCXORL         equ	853	;# 
   599   000356                     CRCXORH         equ	854	;# 
   600   000357                     CRCCON0         equ	855	;# 
   601   000358                     CRCCON1         equ	856	;# 
   602   00035A                     SCANLADR        equ	858	;# 
   603   00035A                     SCANLADRL       equ	858	;# 
   604   00035B                     SCANLADRH       equ	859	;# 
   605   00035C                     SCANLADRU       equ	860	;# 
   606   00035D                     SCANHADR        equ	861	;# 
   607   00035D                     SCANHADRL       equ	861	;# 
   608   00035E                     SCANHADRH       equ	862	;# 
   609   00035F                     SCANHADRU       equ	863	;# 
   610   000360                     SCANCON0        equ	864	;# 
   611   000361                     SCANTRIG        equ	865	;# 
   612   000362                     IPR0            equ	866	;# 
   613   000363                     IPR1            equ	867	;# 
   614   000364                     IPR2            equ	868	;# 
   615   000365                     IPR3            equ	869	;# 
   616   000366                     IPR4            equ	870	;# 
   617   000367                     IPR5            equ	871	;# 
   618   000368                     IPR6            equ	872	;# 
   619   000369                     IPR7            equ	873	;# 
   620   00036A                     IPR8            equ	874	;# 
   621   00036B                     IPR9            equ	875	;# 
   622   00036C                     IPR10           equ	876	;# 
   623   00036D                     IPR11           equ	877	;# 
   624   00036E                     IPR12           equ	878	;# 
   625   00036F                     IPR13           equ	879	;# 
   626   000370                     IPR14           equ	880	;# 
   627   000371                     IPR15           equ	881	;# 
   628   000373                     STATUS_CSHAD    equ	883	;# 
   629   000374                     WREG_CSHAD      equ	884	;# 
   630   000375                     BSR_CSHAD       equ	885	;# 
   631   000376                     SHADCON         equ	886	;# 
   632   000377                     STATUS_SHAD     equ	887	;# 
   633   000378                     WREG_SHAD       equ	888	;# 
   634   000379                     BSR_SHAD        equ	889	;# 
   635   00037A                     PCLATH_SHAD     equ	890	;# 
   636   00037B                     PCLATU_SHAD     equ	891	;# 
   637   00037C                     FSR0SH          equ	892	;# 
   638   00037C                     FSR0L_SHAD      equ	892	;# 
   639   00037D                     FSR0H_SHAD      equ	893	;# 
   640   00037E                     FSR1SH          equ	894	;# 
   641   00037E                     FSR1L_SHAD      equ	894	;# 
   642   00037F                     FSR1H_SHAD      equ	895	;# 
   643   000380                     FSR2SH          equ	896	;# 
   644   000380                     FSR2L_SHAD      equ	896	;# 
   645   000381                     FSR2H_SHAD      equ	897	;# 
   646   000382                     PRODSH          equ	898	;# 
   647   000382                     PRODL_SHAD      equ	898	;# 
   648   000383                     PRODH_SHAD      equ	899	;# 
   649   0003BC                     CWG1CLK         equ	956	;# 
   650   0003BC                     CWG1CLKCON      equ	956	;# 
   651   0003BD                     CWG1ISM         equ	957	;# 
   652   0003BD                     CWG1DAT         equ	957	;# 
   653   0003BE                     CWG1DBR         equ	958	;# 
   654   0003BF                     CWG1DBF         equ	959	;# 
   655   0003C0                     CWG1CON0        equ	960	;# 
   656   0003C1                     CWG1CON1        equ	961	;# 
   657   0003C2                     CWG1AS0         equ	962	;# 
   658   0003C3                     CWG1AS1         equ	963	;# 
   659   0003C4                     CWG1STR         equ	964	;# 
   660   0003C5                     CWG2CLK         equ	965	;# 
   661   0003C5                     CWG2CLKCON      equ	965	;# 
   662   0003C6                     CWG2ISM         equ	966	;# 
   663   0003C6                     CWG2DAT         equ	966	;# 
   664   0003C7                     CWG2DBR         equ	967	;# 
   665   0003C8                     CWG2DBF         equ	968	;# 
   666   0003C9                     CWG2CON0        equ	969	;# 
   667   0003CA                     CWG2CON1        equ	970	;# 
   668   0003CB                     CWG2AS0         equ	971	;# 
   669   0003CC                     CWG2AS1         equ	972	;# 
   670   0003CD                     CWG2STR         equ	973	;# 
   671   0003CE                     CWG3CLK         equ	974	;# 
   672   0003CE                     CWG3CLKCON      equ	974	;# 
   673   0003CF                     CWG3ISM         equ	975	;# 
   674   0003CF                     CWG3DAT         equ	975	;# 
   675   0003D0                     CWG3DBR         equ	976	;# 
   676   0003D1                     CWG3DBF         equ	977	;# 
   677   0003D2                     CWG3CON0        equ	978	;# 
   678   0003D3                     CWG3CON1        equ	979	;# 
   679   0003D4                     CWG3AS0         equ	980	;# 
   680   0003D5                     CWG3AS1         equ	981	;# 
   681   0003D6                     CWG3STR         equ	982	;# 
   682   0003D7                     FVRCON          equ	983	;# 
   683   0003D8                     ADCPCON         equ	984	;# 
   684   0003D8                     ADCP            equ	984	;# 
   685   0003D9                     ADLTH           equ	985	;# 
   686   0003D9                     ADLTHL          equ	985	;# 
   687   0003DA                     ADLTHH          equ	986	;# 
   688   0003DB                     ADUTH           equ	987	;# 
   689   0003DB                     ADUTHL          equ	987	;# 
   690   0003DC                     ADUTHH          equ	988	;# 
   691   0003DD                     ADERR           equ	989	;# 
   692   0003DD                     ADERRL          equ	989	;# 
   693   0003DE                     ADERRH          equ	990	;# 
   694   0003DF                     ADSTPT          equ	991	;# 
   695   0003DF                     ADSTPTL         equ	991	;# 
   696   0003E0                     ADSTPTH         equ	992	;# 
   697   0003E1                     ADFLTR          equ	993	;# 
   698   0003E1                     ADFLTRL         equ	993	;# 
   699   0003E2                     ADFLTRH         equ	994	;# 
   700   0003E3                     ADACC           equ	995	;# 
   701   0003E3                     ADACCL          equ	995	;# 
   702   0003E4                     ADACCH          equ	996	;# 
   703   0003E5                     ADACCU          equ	997	;# 
   704   0003E6                     ADCNT           equ	998	;# 
   705   0003E7                     ADRPT           equ	999	;# 
   706   0003E8                     ADPREV          equ	1000	;# 
   707   0003E8                     ADPREVL         equ	1000	;# 
   708   0003E9                     ADPREVH         equ	1001	;# 
   709   0003EA                     ADRES           equ	1002	;# 
   710   0003EA                     ADRESL          equ	1002	;# 
   711   0003EB                     ADRESH          equ	1003	;# 
   712   0003EC                     ADPCH           equ	1004	;# 
   713   0003EE                     ADACQ           equ	1006	;# 
   714   0003EE                     ADACQL          equ	1006	;# 
   715   0003EF                     ADACQH          equ	1007	;# 
   716   0003F0                     ADCAP           equ	1008	;# 
   717   0003F1                     ADPRE           equ	1009	;# 
   718   0003F1                     ADPREL          equ	1009	;# 
   719   0003F2                     ADPREH          equ	1010	;# 
   720   0003F3                     ADCON0          equ	1011	;# 
   721   0003F4                     ADCON1          equ	1012	;# 
   722   0003F5                     ADCON2          equ	1013	;# 
   723   0003F6                     ADCON3          equ	1014	;# 
   724   0003F7                     ADSTAT          equ	1015	;# 
   725   0003F8                     ADREF           equ	1016	;# 
   726   0003F9                     ADACT           equ	1017	;# 
   727   0003FA                     ADCLK           equ	1018	;# 
   728   000400                     ANSELA          equ	1024	;# 
   729   000401                     WPUA            equ	1025	;# 
   730   000402                     ODCONA          equ	1026	;# 
   731   000403                     SLRCONA         equ	1027	;# 
   732   000404                     INLVLA          equ	1028	;# 
   733   000405                     IOCAP           equ	1029	;# 
   734   000406                     IOCAN           equ	1030	;# 
   735   000407                     IOCAF           equ	1031	;# 
   736   000408                     ANSELB          equ	1032	;# 
   737   000409                     WPUB            equ	1033	;# 
   738   00040A                     ODCONB          equ	1034	;# 
   739   00040B                     SLRCONB         equ	1035	;# 
   740   00040C                     INLVLB          equ	1036	;# 
   741   00040D                     IOCBP           equ	1037	;# 
   742   00040E                     IOCBN           equ	1038	;# 
   743   00040F                     IOCBF           equ	1039	;# 
   744   000410                     ANSELC          equ	1040	;# 
   745   000411                     WPUC            equ	1041	;# 
   746   000412                     ODCONC          equ	1042	;# 
   747   000413                     SLRCONC         equ	1043	;# 
   748   000414                     INLVLC          equ	1044	;# 
   749   000415                     IOCCP           equ	1045	;# 
   750   000416                     IOCCN           equ	1046	;# 
   751   000417                     IOCCF           equ	1047	;# 
   752   000418                     ANSELD          equ	1048	;# 
   753   000419                     WPUD            equ	1049	;# 
   754   00041A                     ODCOND          equ	1050	;# 
   755   00041B                     SLRCOND         equ	1051	;# 
   756   00041C                     INLVLD          equ	1052	;# 
   757   000420                     ANSELE          equ	1056	;# 
   758   000421                     WPUE            equ	1057	;# 
   759   000422                     ODCONE          equ	1058	;# 
   760   000423                     SLRCONE         equ	1059	;# 
   761   000424                     INLVLE          equ	1060	;# 
   762   000425                     IOCEP           equ	1061	;# 
   763   000426                     IOCEN           equ	1062	;# 
   764   000427                     IOCEF           equ	1063	;# 
   765   000428                     ANSELF          equ	1064	;# 
   766   000429                     WPUF            equ	1065	;# 
   767   00042A                     ODCONF          equ	1066	;# 
   768   00042B                     SLRCONF         equ	1067	;# 
   769   00042C                     INLVLF          equ	1068	;# 
   770   000440                     NCO1ACC         equ	1088	;# 
   771   000440                     NCO1ACCL        equ	1088	;# 
   772   000441                     NCO1ACCH        equ	1089	;# 
   773   000442                     NCO1ACCU        equ	1090	;# 
   774   000443                     NCO1INC         equ	1091	;# 
   775   000443                     NCO1INCL        equ	1091	;# 
   776   000444                     NCO1INCH        equ	1092	;# 
   777   000445                     NCO1INCU        equ	1093	;# 
   778   000446                     NCO1CON         equ	1094	;# 
   779   000447                     NCO1CLK         equ	1095	;# 
   780   000448                     NCO2ACC         equ	1096	;# 
   781   000448                     NCO2ACCL        equ	1096	;# 
   782   000449                     NCO2ACCH        equ	1097	;# 
   783   00044A                     NCO2ACCU        equ	1098	;# 
   784   00044B                     NCO2INC         equ	1099	;# 
   785   00044B                     NCO2INCL        equ	1099	;# 
   786   00044C                     NCO2INCH        equ	1100	;# 
   787   00044D                     NCO2INCU        equ	1101	;# 
   788   00044E                     NCO2CON         equ	1102	;# 
   789   00044F                     NCO2CLK         equ	1103	;# 
   790   000450                     NCO3ACC         equ	1104	;# 
   791   000450                     NCO3ACCL        equ	1104	;# 
   792   000451                     NCO3ACCH        equ	1105	;# 
   793   000452                     NCO3ACCU        equ	1106	;# 
   794   000453                     NCO3INC         equ	1107	;# 
   795   000453                     NCO3INCL        equ	1107	;# 
   796   000454                     NCO3INCH        equ	1108	;# 
   797   000455                     NCO3INCU        equ	1109	;# 
   798   000456                     NCO3CON         equ	1110	;# 
   799   000457                     NCO3CLK         equ	1111	;# 
   800   000459                     IVTLOCK         equ	1113	;# 
   801   00045A                     IVTAD           equ	1114	;# 
   802   00045A                     IVTADL          equ	1114	;# 
   803   00045B                     IVTADH          equ	1115	;# 
   804   00045C                     IVTADU          equ	1116	;# 
   805   00045D                     IVTBASE         equ	1117	;# 
   806   00045D                     IVTBASEL        equ	1117	;# 
   807   00045E                     IVTBASEH        equ	1118	;# 
   808   00045F                     IVTBASEU        equ	1119	;# 
   809   000460                     PWM1ERS         equ	1120	;# 
   810   000461                     PWM1CLK         equ	1121	;# 
   811   000462                     PWM1LDS         equ	1122	;# 
   812   000463                     PWM1PR          equ	1123	;# 
   813   000463                     PWM1PRL         equ	1123	;# 
   814   000464                     PWM1PRH         equ	1124	;# 
   815   000465                     PWM1CPRE        equ	1125	;# 
   816   000466                     PWM1PIPOS       equ	1126	;# 
   817   000467                     PWM1GIR         equ	1127	;# 
   818   000468                     PWM1GIE         equ	1128	;# 
   819   000469                     PWM1CON         equ	1129	;# 
   820   00046A                     PWM1S1CFG       equ	1130	;# 
   821   00046B                     PWM1S1P1        equ	1131	;# 
   822   00046B                     PWM1S1P1L       equ	1131	;# 
   823   00046C                     PWM1S1P1H       equ	1132	;# 
   824   00046D                     PWM1S1P2        equ	1133	;# 
   825   00046D                     PWM1S1P2L       equ	1133	;# 
   826   00046E                     PWM1S1P2H       equ	1134	;# 
   827   00046F                     PWM2ERS         equ	1135	;# 
   828   000470                     PWM2CLK         equ	1136	;# 
   829   000471                     PWM2LDS         equ	1137	;# 
   830   000472                     PWM2PR          equ	1138	;# 
   831   000472                     PWM2PRL         equ	1138	;# 
   832   000473                     PWM2PRH         equ	1139	;# 
   833   000474                     PWM2CPRE        equ	1140	;# 
   834   000475                     PWM2PIPOS       equ	1141	;# 
   835   000476                     PWM2GIR         equ	1142	;# 
   836   000477                     PWM2GIE         equ	1143	;# 
   837   000478                     PWM2CON         equ	1144	;# 
   838   000479                     PWM2S1CFG       equ	1145	;# 
   839   00047A                     PWM2S1P1        equ	1146	;# 
   840   00047A                     PWM2S1P1L       equ	1146	;# 
   841   00047B                     PWM2S1P1H       equ	1147	;# 
   842   00047C                     PWM2S1P2        equ	1148	;# 
   843   00047C                     PWM2S1P2L       equ	1148	;# 
   844   00047D                     PWM2S1P2H       equ	1149	;# 
   845   00047E                     PWM3ERS         equ	1150	;# 
   846   00047F                     PWM3CLK         equ	1151	;# 
   847   000480                     PWM3LDS         equ	1152	;# 
   848   000481                     PWM3PR          equ	1153	;# 
   849   000481                     PWM3PRL         equ	1153	;# 
   850   000482                     PWM3PRH         equ	1154	;# 
   851   000483                     PWM3CPRE        equ	1155	;# 
   852   000484                     PWM3PIPOS       equ	1156	;# 
   853   000485                     PWM3GIR         equ	1157	;# 
   854   000486                     PWM3GIE         equ	1158	;# 
   855   000487                     PWM3CON         equ	1159	;# 
   856   000488                     PWM3S1CFG       equ	1160	;# 
   857   000489                     PWM3S1P1        equ	1161	;# 
   858   000489                     PWM3S1P1L       equ	1161	;# 
   859   00048A                     PWM3S1P1H       equ	1162	;# 
   860   00048B                     PWM3S1P2        equ	1163	;# 
   861   00048B                     PWM3S1P2L       equ	1163	;# 
   862   00048C                     PWM3S1P2H       equ	1164	;# 
   863   00049C                     PWMLOAD         equ	1180	;# 
   864   00049D                     PWMEN           equ	1181	;# 
   865   00049E                     PIE0            equ	1182	;# 
   866   00049F                     PIE1            equ	1183	;# 
   867   0004A0                     PIE2            equ	1184	;# 
   868   0004A1                     PIE3            equ	1185	;# 
   869   0004A2                     PIE4            equ	1186	;# 
   870   0004A3                     PIE5            equ	1187	;# 
   871   0004A4                     PIE6            equ	1188	;# 
   872   0004A5                     PIE7            equ	1189	;# 
   873   0004A6                     PIE8            equ	1190	;# 
   874   0004A7                     PIE9            equ	1191	;# 
   875   0004A8                     PIE10           equ	1192	;# 
   876   0004A9                     PIE11           equ	1193	;# 
   877   0004AA                     PIE12           equ	1194	;# 
   878   0004AB                     PIE13           equ	1195	;# 
   879   0004AC                     PIE14           equ	1196	;# 
   880   0004AD                     PIE15           equ	1197	;# 
   881   0004AE                     PIR0            equ	1198	;# 
   882   0004AF                     PIR1            equ	1199	;# 
   883   0004B0                     PIR2            equ	1200	;# 
   884   0004B1                     PIR3            equ	1201	;# 
   885   0004B2                     PIR4            equ	1202	;# 
   886   0004B3                     PIR5            equ	1203	;# 
   887   0004B4                     PIR6            equ	1204	;# 
   888   0004B5                     PIR7            equ	1205	;# 
   889   0004B6                     PIR8            equ	1206	;# 
   890   0004B7                     PIR9            equ	1207	;# 
   891   0004B8                     PIR10           equ	1208	;# 
   892   0004B9                     PIR11           equ	1209	;# 
   893   0004BA                     PIR12           equ	1210	;# 
   894   0004BB                     PIR13           equ	1211	;# 
   895   0004BC                     PIR14           equ	1212	;# 
   896   0004BD                     PIR15           equ	1213	;# 
   897   0004BE                     LATA            equ	1214	;# 
   898   0004BF                     LATB            equ	1215	;# 
   899   0004C0                     LATC            equ	1216	;# 
   900   0004C1                     LATD            equ	1217	;# 
   901   0004C2                     LATE            equ	1218	;# 
   902   0004C3                     LATF            equ	1219	;# 
   903   0004C6                     TRISA           equ	1222	;# 
   904   0004C7                     TRISB           equ	1223	;# 
   905   0004C8                     TRISC           equ	1224	;# 
   906   0004C9                     TRISD           equ	1225	;# 
   907   0004CA                     TRISE           equ	1226	;# 
   908   0004CB                     TRISF           equ	1227	;# 
   909   0004CE                     PORTA           equ	1230	;# 
   910   0004CF                     PORTB           equ	1231	;# 
   911   0004D0                     PORTC           equ	1232	;# 
   912   0004D1                     PORTD           equ	1233	;# 
   913   0004D2                     PORTE           equ	1234	;# 
   914   0004D3                     PORTF           equ	1235	;# 
   915   0004D6                     INTCON0         equ	1238	;# 
   916   0004D7                     INTCON1         equ	1239	;# 
   917   0004D8                     STATUS          equ	1240	;# 
   918   0004D9                     FSR2            equ	1241	;# 
   919   0004D9                     FSR2L           equ	1241	;# 
   920   0004DA                     FSR2H           equ	1242	;# 
   921   0004DB                     PLUSW2          equ	1243	;# 
   922   0004DC                     PREINC2         equ	1244	;# 
   923   0004DD                     POSTDEC2        equ	1245	;# 
   924   0004DE                     POSTINC2        equ	1246	;# 
   925   0004DF                     INDF2           equ	1247	;# 
   926   0004E0                     BSR             equ	1248	;# 
   927   0004E1                     FSR1            equ	1249	;# 
   928   0004E1                     FSR1L           equ	1249	;# 
   929   0004E2                     FSR1H           equ	1250	;# 
   930   0004E3                     PLUSW1          equ	1251	;# 
   931   0004E4                     PREINC1         equ	1252	;# 
   932   0004E5                     POSTDEC1        equ	1253	;# 
   933   0004E6                     POSTINC1        equ	1254	;# 
   934   0004E7                     INDF1           equ	1255	;# 
   935   0004E8                     WREG            equ	1256	;# 
   936   0004E9                     FSR0            equ	1257	;# 
   937   0004E9                     FSR0L           equ	1257	;# 
   938   0004EA                     FSR0H           equ	1258	;# 
   939   0004EB                     PLUSW0          equ	1259	;# 
   940   0004EC                     PREINC0         equ	1260	;# 
   941   0004ED                     POSTDEC0        equ	1261	;# 
   942   0004EE                     POSTINC0        equ	1262	;# 
   943   0004EF                     INDF0           equ	1263	;# 
   944   0004F0                     PCON0           equ	1264	;# 
   945   0004F1                     PCON1           equ	1265	;# 
   946   0004F2                     CPUDOZE         equ	1266	;# 
   947   0004F3                     PROD            equ	1267	;# 
   948   0004F3                     PRODL           equ	1267	;# 
   949   0004F4                     PRODH           equ	1268	;# 
   950   0004F5                     TABLAT          equ	1269	;# 
   951   0004F6                     TBLPTR          equ	1270	;# 
   952   0004F6                     TBLPTRL         equ	1270	;# 
   953   0004F7                     TBLPTRH         equ	1271	;# 
   954   0004F8                     TBLPTRU         equ	1272	;# 
   955   0004F9                     PCLAT           equ	1273	;# 
   956   0004F9                     PCL             equ	1273	;# 
   957   0004FA                     PCLATH          equ	1274	;# 
   958   0004FB                     PCLATU          equ	1275	;# 
   959   0004FC                     STKPTR          equ	1276	;# 
   960   0004FD                     TOS             equ	1277	;# 
   961   0004FD                     TOSL            equ	1277	;# 
   962   0004FE                     TOSH            equ	1278	;# 
   963   0004FF                     TOSU            equ	1279	;# 
   964   000039                     CLKRCON         equ	57	;# 
   965   00003A                     CLKRCLK         equ	58	;# 
   966   000040                     NVMCON0         equ	64	;# 
   967   000041                     NVMCON1         equ	65	;# 
   968   000042                     NVMLOCK         equ	66	;# 
   969   000043                     NVMADR          equ	67	;# 
   970   000043                     NVMADRL         equ	67	;# 
   971   000044                     NVMADRH         equ	68	;# 
   972   000045                     NVMADRU         equ	69	;# 
   973   000046                     NVMDAT          equ	70	;# 
   974   000046                     NVMDATL         equ	70	;# 
   975   000047                     NVMDATH         equ	71	;# 
   976   000048                     VREGCON         equ	72	;# 
   977   000049                     BORCON          equ	73	;# 
   978   00004A                     HLVDCON0        equ	74	;# 
   979   00004B                     HLVDCON1        equ	75	;# 
   980   00004C                     ZCDCON          equ	76	;# 
   981   000060                     PMD0            equ	96	;# 
   982   000061                     PMD1            equ	97	;# 
   983   000063                     PMD3            equ	99	;# 
   984   000064                     PMD4            equ	100	;# 
   985   000065                     PMD5            equ	101	;# 
   986   000066                     PMD6            equ	102	;# 
   987   000067                     PMD7            equ	103	;# 
   988   000068                     PMD8            equ	104	;# 
   989   00006A                     MD1CON0         equ	106	;# 
   990   00006B                     MD1CON1         equ	107	;# 
   991   00006C                     MD1SRC          equ	108	;# 
   992   00006D                     MD1CARL         equ	109	;# 
   993   00006E                     MD1CARH         equ	110	;# 
   994   00006F                     CMOUT           equ	111	;# 
   995   000070                     CM1CON0         equ	112	;# 
   996   000071                     CM1CON1         equ	113	;# 
   997   000072                     CM1NCH          equ	114	;# 
   998   000073                     CM1PCH          equ	115	;# 
   999   000074                     CM2CON0         equ	116	;# 
  1000   000075                     CM2CON1         equ	117	;# 
  1001   000076                     CM2NCH          equ	118	;# 
  1002   000077                     CM2PCH          equ	119	;# 
  1003   000078                     WDTCON0         equ	120	;# 
  1004   000079                     WDTCON1         equ	121	;# 
  1005   00007A                     WDTPS           equ	122	;# 
  1006   00007A                     WDTPSL          equ	122	;# 
  1007   00007B                     WDTPSH          equ	123	;# 
  1008   00007C                     WDTTMR          equ	124	;# 
  1009   00007D                     DAC1DAT         equ	125	;# 
  1010   00007D                     DAC1DATL        equ	125	;# 
  1011   00007F                     DAC1CON         equ	127	;# 
  1012   000080                     SPI1RXB         equ	128	;# 
  1013   000081                     SPI1TXB         equ	129	;# 
  1014   000082                     SPI1TCNT        equ	130	;# 
  1015   000082                     SPI1TCNTL       equ	130	;# 
  1016   000083                     SPI1TCNTH       equ	131	;# 
  1017   000084                     SPI1CON0        equ	132	;# 
  1018   000085                     SPI1CON1        equ	133	;# 
  1019   000086                     SPI1CON2        equ	134	;# 
  1020   000087                     SPI1STATUS      equ	135	;# 
  1021   000088                     SPI1TWIDTH      equ	136	;# 
  1022   000089                     SPI1BAUD        equ	137	;# 
  1023   00008A                     SPI1INTF        equ	138	;# 
  1024   00008B                     SPI1INTE        equ	139	;# 
  1025   00008C                     SPI1CLK         equ	140	;# 
  1026   00008D                     SPI2RXB         equ	141	;# 
  1027   00008E                     SPI2TXB         equ	142	;# 
  1028   00008F                     SPI2TCNT        equ	143	;# 
  1029   00008F                     SPI2TCNTL       equ	143	;# 
  1030   000090                     SPI2TCNTH       equ	144	;# 
  1031   000091                     SPI2CON0        equ	145	;# 
  1032   000092                     SPI2CON1        equ	146	;# 
  1033   000093                     SPI2CON2        equ	147	;# 
  1034   000094                     SPI2STATUS      equ	148	;# 
  1035   000095                     SPI2TWIDTH      equ	149	;# 
  1036   000096                     SPI2BAUD        equ	150	;# 
  1037   000097                     SPI2INTF        equ	151	;# 
  1038   000098                     SPI2INTE        equ	152	;# 
  1039   000099                     SPI2CLK         equ	153	;# 
  1040   0000AC                     ACTCON          equ	172	;# 
  1041   0000AD                     OSCCON1         equ	173	;# 
  1042   0000AE                     OSCCON2         equ	174	;# 
  1043   0000AF                     OSCCON3         equ	175	;# 
  1044   0000B0                     OSCTUNE         equ	176	;# 
  1045   0000B1                     OSCFRQ          equ	177	;# 
  1046   0000B1                     OSCFREQ         equ	177	;# 
  1047   0000B2                     OSCSTAT         equ	178	;# 
  1048   0000B2                     OSCSTAT1        equ	178	;# 
  1049   0000B3                     OSCEN           equ	179	;# 
  1050   0000B4                     PRLOCK          equ	180	;# 
  1051   0000B5                     SCANPR          equ	181	;# 
  1052   0000B6                     DMA1PR          equ	182	;# 
  1053   0000B7                     DMA2PR          equ	183	;# 
  1054   0000B8                     DMA3PR          equ	184	;# 
  1055   0000B9                     DMA4PR          equ	185	;# 
  1056   0000BA                     DMA5PR          equ	186	;# 
  1057   0000BB                     DMA6PR          equ	187	;# 
  1058   0000BE                     MAINPR          equ	190	;# 
  1059   0000BF                     ISRPR           equ	191	;# 
  1060   0000D4                     CLCDATA         equ	212	;# 
  1061   0000D5                     CLCSELECT       equ	213	;# 
  1062   0000D6                     CLCnCON         equ	214	;# 
  1063   0000D7                     CLCnPOL         equ	215	;# 
  1064   0000D8                     CLCnSEL0        equ	216	;# 
  1065   0000D9                     CLCnSEL1        equ	217	;# 
  1066   0000DA                     CLCnSEL2        equ	218	;# 
  1067   0000DB                     CLCnSEL3        equ	219	;# 
  1068   0000DC                     CLCnGLS0        equ	220	;# 
  1069   0000DD                     CLCnGLS1        equ	221	;# 
  1070   0000DE                     CLCnGLS2        equ	222	;# 
  1071   0000DF                     CLCnGLS3        equ	223	;# 
  1072   0000E8                     DMASELECT       equ	232	;# 
  1073   0000E9                     DMAnBUF         equ	233	;# 
  1074   0000EA                     DMAnDCNT        equ	234	;# 
  1075   0000EA                     DMAnDCNTL       equ	234	;# 
  1076   0000EB                     DMAnDCNTH       equ	235	;# 
  1077   0000EC                     DMAnDPTR        equ	236	;# 
  1078   0000EC                     DMAnDPTRL       equ	236	;# 
  1079   0000ED                     DMAnDPTRH       equ	237	;# 
  1080   0000EE                     DMAnDSZ         equ	238	;# 
  1081   0000EE                     DMAnDSZL        equ	238	;# 
  1082   0000EF                     DMAnDSZH        equ	239	;# 
  1083   0000F0                     DMAnDSA         equ	240	;# 
  1084   0000F0                     DMAnDSAL        equ	240	;# 
  1085   0000F1                     DMAnDSAH        equ	241	;# 
  1086   0000F2                     DMAnSCNT        equ	242	;# 
  1087   0000F2                     DMAnSCNTL       equ	242	;# 
  1088   0000F3                     DMAnSCNTH       equ	243	;# 
  1089   0000F4                     DMAnSPTR        equ	244	;# 
  1090   0000F4                     DMAnSPTRL       equ	244	;# 
  1091   0000F5                     DMAnSPTRH       equ	245	;# 
  1092   0000F6                     DMAnSPTRU       equ	246	;# 
  1093   0000F7                     DMAnSSZ         equ	247	;# 
  1094   0000F7                     DMAnSSZL        equ	247	;# 
  1095   0000F8                     DMAnSSZH        equ	248	;# 
  1096   0000F9                     DMAnSSA         equ	249	;# 
  1097   0000F9                     DMAnSSAL        equ	249	;# 
  1098   0000FA                     DMAnSSAH        equ	250	;# 
  1099   0000FB                     DMAnSSAU        equ	251	;# 
  1100   0000FC                     DMAnCON0        equ	252	;# 
  1101   0000FD                     DMAnCON1        equ	253	;# 
  1102   0000FE                     DMAnAIRQ        equ	254	;# 
  1103   0000FF                     DMAnSIRQ        equ	255	;# 
  1104   000200                     PPSLOCK         equ	512	;# 
  1105   000201                     RA0PPS          equ	513	;# 
  1106   000202                     RA1PPS          equ	514	;# 
  1107   000203                     RA2PPS          equ	515	;# 
  1108   000204                     RA3PPS          equ	516	;# 
  1109   000205                     RA4PPS          equ	517	;# 
  1110   000206                     RA5PPS          equ	518	;# 
  1111   000207                     RA6PPS          equ	519	;# 
  1112   000208                     RA7PPS          equ	520	;# 
  1113   000209                     RB0PPS          equ	521	;# 
  1114   00020A                     RB1PPS          equ	522	;# 
  1115   00020B                     RB2PPS          equ	523	;# 
  1116   00020C                     RB3PPS          equ	524	;# 
  1117   00020D                     RB4PPS          equ	525	;# 
  1118   00020E                     RB5PPS          equ	526	;# 
  1119   00020F                     RB6PPS          equ	527	;# 
  1120   000210                     RB7PPS          equ	528	;# 
  1121   000211                     RC0PPS          equ	529	;# 
  1122   000212                     RC1PPS          equ	530	;# 
  1123   000213                     RC2PPS          equ	531	;# 
  1124   000214                     RC3PPS          equ	532	;# 
  1125   000215                     RC4PPS          equ	533	;# 
  1126   000216                     RC5PPS          equ	534	;# 
  1127   000217                     RC6PPS          equ	535	;# 
  1128   000218                     RC7PPS          equ	536	;# 
  1129   000219                     RD0PPS          equ	537	;# 
  1130   00021A                     RD1PPS          equ	538	;# 
  1131   00021B                     RD2PPS          equ	539	;# 
  1132   00021C                     RD3PPS          equ	540	;# 
  1133   00021D                     RD4PPS          equ	541	;# 
  1134   00021E                     RD5PPS          equ	542	;# 
  1135   00021F                     RD6PPS          equ	543	;# 
  1136   000220                     RD7PPS          equ	544	;# 
  1137   000221                     RE0PPS          equ	545	;# 
  1138   000222                     RE1PPS          equ	546	;# 
  1139   000223                     RE2PPS          equ	547	;# 
  1140   000229                     RF0PPS          equ	553	;# 
  1141   00022A                     RF1PPS          equ	554	;# 
  1142   00022B                     RF2PPS          equ	555	;# 
  1143   00022C                     RF3PPS          equ	556	;# 
  1144   00022D                     RF4PPS          equ	557	;# 
  1145   00022E                     RF5PPS          equ	558	;# 
  1146   00022F                     RF6PPS          equ	559	;# 
  1147   000230                     RF7PPS          equ	560	;# 
  1148   00023E                     INT0PPS         equ	574	;# 
  1149   00023F                     INT1PPS         equ	575	;# 
  1150   000240                     INT2PPS         equ	576	;# 
  1151   000241                     T0CKIPPS        equ	577	;# 
  1152   000242                     T1CKIPPS        equ	578	;# 
  1153   000243                     T1GPPS          equ	579	;# 
  1154   000244                     T3CKIPPS        equ	580	;# 
  1155   000245                     T3GPPS          equ	581	;# 
  1156   000246                     T5CKIPPS        equ	582	;# 
  1157   000247                     T5GPPS          equ	583	;# 
  1158   000248                     T2INPPS         equ	584	;# 
  1159   000249                     T4INPPS         equ	585	;# 
  1160   00024A                     T6INPPS         equ	586	;# 
  1161   00024F                     CCP1PPS         equ	591	;# 
  1162   000250                     CCP2PPS         equ	592	;# 
  1163   000251                     CCP3PPS         equ	593	;# 
  1164   000253                     PWM1ERSPPS      equ	595	;# 
  1165   000254                     PWM2ERSPPS      equ	596	;# 
  1166   000255                     PWM3ERSPPS      equ	597	;# 
  1167   000257                     PWMIN0PPS       equ	599	;# 
  1168   000258                     PWMIN1PPS       equ	600	;# 
  1169   000259                     SMT1WINPPS      equ	601	;# 
  1170   00025A                     SMT1SIGPPS      equ	602	;# 
  1171   00025B                     CWG1PPS         equ	603	;# 
  1172   00025B                     CWG1INPPS       equ	603	;# 
  1173   00025C                     CWG2PPS         equ	604	;# 
  1174   00025C                     CWG2INPPS       equ	604	;# 
  1175   00025D                     CWG3PPS         equ	605	;# 
  1176   00025D                     CWG3INPPS       equ	605	;# 
  1177   00025E                     MD1CARLPPS      equ	606	;# 
  1178   00025E                     MDCARLPPS       equ	606	;# 
  1179   00025F                     MD1CARHPPS      equ	607	;# 
  1180   00025F                     MDCARHPPS       equ	607	;# 
  1181   000260                     MD1SRCPPS       equ	608	;# 
  1182   000260                     MDSRCPPS        equ	608	;# 
  1183   000261                     CLCIN0PPS       equ	609	;# 
  1184   000262                     CLCIN1PPS       equ	610	;# 
  1185   000263                     CLCIN2PPS       equ	611	;# 
  1186   000264                     CLCIN3PPS       equ	612	;# 
  1187   000265                     CLCIN4PPS       equ	613	;# 
  1188   000266                     CLCIN5PPS       equ	614	;# 
  1189   000267                     CLCIN6PPS       equ	615	;# 
  1190   000268                     CLCIN7PPS       equ	616	;# 
  1191   000269                     ADACTPPS        equ	617	;# 
  1192   00026A                     SPI1SCKPPS      equ	618	;# 
  1193   00026B                     SPI1SDIPPS      equ	619	;# 
  1194   00026C                     SPI1SSPPS       equ	620	;# 
  1195   00026D                     SPI2SCKPPS      equ	621	;# 
  1196   00026E                     SPI2SDIPPS      equ	622	;# 
  1197   00026F                     SPI2SSPPS       equ	623	;# 
  1198   000270                     I2C1SDAPPS      equ	624	;# 
  1199   000271                     I2C1SCLPPS      equ	625	;# 
  1200   000272                     U1RXPPS         equ	626	;# 
  1201   000273                     U1CTSPPS        equ	627	;# 
  1202   000274                     U2RXPPS         equ	628	;# 
  1203   000275                     U2CTSPPS        equ	629	;# 
  1204   000276                     U3RXPPS         equ	630	;# 
  1205   000277                     U3CTSPPS        equ	631	;# 
  1206   000278                     U4RXPPS         equ	632	;# 
  1207   000279                     U4CTSPPS        equ	633	;# 
  1208   00027A                     U5RXPPS         equ	634	;# 
  1209   00027B                     U5CTSPPS        equ	635	;# 
  1210   000286                     RC4I2C          equ	646	;# 
  1211   000287                     RC3I2C          equ	647	;# 
  1212   000288                     RB2I2C          equ	648	;# 
  1213   000289                     RB1I2C          equ	649	;# 
  1214   00028B                     I2C1RXB         equ	651	;# 
  1215   00028C                     I2C1TXB         equ	652	;# 
  1216   00028D                     I2C1CNT         equ	653	;# 
  1217   00028E                     I2C1ADB0        equ	654	;# 
  1218   00028F                     I2C1ADB1        equ	655	;# 
  1219   000290                     I2C1ADR0        equ	656	;# 
  1220   000291                     I2C1ADR1        equ	657	;# 
  1221   000292                     I2C1ADR2        equ	658	;# 
  1222   000293                     I2C1ADR3        equ	659	;# 
  1223   000294                     I2C1CON0        equ	660	;# 
  1224   000295                     I2C1CON1        equ	661	;# 
  1225   000296                     I2C1CON2        equ	662	;# 
  1226   000297                     I2C1ERR         equ	663	;# 
  1227   000298                     I2C1STAT0       equ	664	;# 
  1228   000299                     I2C1STAT1       equ	665	;# 
  1229   00029A                     I2C1PIR         equ	666	;# 
  1230   00029B                     I2C1PIE         equ	667	;# 
  1231   00029C                     I2C1CLK         equ	668	;# 
  1232   00029D                     I2C1BTO         equ	669	;# 
  1233   0002A1                     U1RXB           equ	673	;# 
  1234   0002A1                     U1RXBL          equ	673	;# 
  1235   0002A2                     U1RXCHK         equ	674	;# 
  1236   0002A3                     U1TXB           equ	675	;# 
  1237   0002A3                     U1TXBL          equ	675	;# 
  1238   0002A4                     U1TXCHK         equ	676	;# 
  1239   0002A5                     U1P1            equ	677	;# 
  1240   0002A5                     U1P1L           equ	677	;# 
  1241   0002A6                     U1P1H           equ	678	;# 
  1242   0002A7                     U1P2            equ	679	;# 
  1243   0002A7                     U1P2L           equ	679	;# 
  1244   0002A8                     U1P2H           equ	680	;# 
  1245   0002A9                     U1P3            equ	681	;# 
  1246   0002A9                     U1P3L           equ	681	;# 
  1247   0002AA                     U1P3H           equ	682	;# 
  1248   0002AB                     U1CON0          equ	683	;# 
  1249   0002AC                     U1CON1          equ	684	;# 
  1250   0002AD                     U1CON2          equ	685	;# 
  1251   0002AE                     U1BRG           equ	686	;# 
  1252   0002AE                     U1BRGL          equ	686	;# 
  1253   0002AF                     U1BRGH          equ	687	;# 
  1254   0002B0                     U1FIFO          equ	688	;# 
  1255   0002B1                     U1UIR           equ	689	;# 
  1256   0002B2                     U1ERRIR         equ	690	;# 
  1257   0002B3                     U1ERRIE         equ	691	;# 
  1258   0002B4                     U2RXB           equ	692	;# 
  1259   0002B4                     U2RXBL          equ	692	;# 
  1260   0002B6                     U2TXB           equ	694	;# 
  1261   0002B6                     U2TXBL          equ	694	;# 
  1262   0002B8                     U2P1            equ	696	;# 
  1263   0002B8                     U2P1L           equ	696	;# 
  1264   0002BA                     U2P2            equ	698	;# 
  1265   0002BA                     U2P2L           equ	698	;# 
  1266   0002BC                     U2P3            equ	700	;# 
  1267   0002BC                     U2P3L           equ	700	;# 
  1268   0002BE                     U2CON0          equ	702	;# 
  1269   0002BF                     U2CON1          equ	703	;# 
  1270   0002C0                     U2CON2          equ	704	;# 
  1271   0002C1                     U2BRG           equ	705	;# 
  1272   0002C1                     U2BRGL          equ	705	;# 
  1273   0002C2                     U2BRGH          equ	706	;# 
  1274   0002C3                     U2FIFO          equ	707	;# 
  1275   0002C4                     U2UIR           equ	708	;# 
  1276   0002C5                     U2ERRIR         equ	709	;# 
  1277   0002C6                     U2ERRIE         equ	710	;# 
  1278   0002C7                     U3RXB           equ	711	;# 
  1279   0002C7                     U3RXBL          equ	711	;# 
  1280   0002C9                     U3TXB           equ	713	;# 
  1281   0002C9                     U3TXBL          equ	713	;# 
  1282   0002CB                     U3P1            equ	715	;# 
  1283   0002CB                     U3P1L           equ	715	;# 
  1284   0002CD                     U3P2            equ	717	;# 
  1285   0002CD                     U3P2L           equ	717	;# 
  1286   0002CF                     U3P3            equ	719	;# 
  1287   0002CF                     U3P3L           equ	719	;# 
  1288   0002D1                     U3CON0          equ	721	;# 
  1289   0002D2                     U3CON1          equ	722	;# 
  1290   0002D3                     U3CON2          equ	723	;# 
  1291   0002D4                     U3BRG           equ	724	;# 
  1292   0002D4                     U3BRGL          equ	724	;# 
  1293   0002D5                     U3BRGH          equ	725	;# 
  1294   0002D6                     U3FIFO          equ	726	;# 
  1295   0002D7                     U3UIR           equ	727	;# 
  1296   0002D8                     U3ERRIR         equ	728	;# 
  1297   0002D9                     U3ERRIE         equ	729	;# 
  1298   0002DA                     U4RXB           equ	730	;# 
  1299   0002DA                     U4RXBL          equ	730	;# 
  1300   0002DC                     U4TXB           equ	732	;# 
  1301   0002DC                     U4TXBL          equ	732	;# 
  1302   0002DE                     U4P1            equ	734	;# 
  1303   0002DE                     U4P1L           equ	734	;# 
  1304   0002E0                     U4P2            equ	736	;# 
  1305   0002E0                     U4P2L           equ	736	;# 
  1306   0002E2                     U4P3            equ	738	;# 
  1307   0002E2                     U4P3L           equ	738	;# 
  1308   0002E4                     U4CON0          equ	740	;# 
  1309   0002E5                     U4CON1          equ	741	;# 
  1310   0002E6                     U4CON2          equ	742	;# 
  1311   0002E7                     U4BRG           equ	743	;# 
  1312   0002E7                     U4BRGL          equ	743	;# 
  1313   0002E8                     U4BRGH          equ	744	;# 
  1314   0002E9                     U4FIFO          equ	745	;# 
  1315   0002EA                     U4UIR           equ	746	;# 
  1316   0002EB                     U4ERRIR         equ	747	;# 
  1317   0002EC                     U4ERRIE         equ	748	;# 
  1318   0002ED                     U5RXB           equ	749	;# 
  1319   0002ED                     U5RXBL          equ	749	;# 
  1320   0002EF                     U5TXB           equ	751	;# 
  1321   0002EF                     U5TXBL          equ	751	;# 
  1322   0002F1                     U5P1            equ	753	;# 
  1323   0002F1                     U5P1L           equ	753	;# 
  1324   0002F3                     U5P2            equ	755	;# 
  1325   0002F3                     U5P2L           equ	755	;# 
  1326   0002F5                     U5P3            equ	757	;# 
  1327   0002F5                     U5P3L           equ	757	;# 
  1328   0002F7                     U5CON0          equ	759	;# 
  1329   0002F8                     U5CON1          equ	760	;# 
  1330   0002F9                     U5CON2          equ	761	;# 
  1331   0002FA                     U5BRG           equ	762	;# 
  1332   0002FA                     U5BRGL          equ	762	;# 
  1333   0002FB                     U5BRGH          equ	763	;# 
  1334   0002FC                     U5FIFO          equ	764	;# 
  1335   0002FD                     U5UIR           equ	765	;# 
  1336   0002FE                     U5ERRIR         equ	766	;# 
  1337   0002FF                     U5ERRIE         equ	767	;# 
  1338   000300                     SMT1TMR         equ	768	;# 
  1339   000300                     SMT1TMRL        equ	768	;# 
  1340   000301                     SMT1TMRH        equ	769	;# 
  1341   000302                     SMT1TMRU        equ	770	;# 
  1342   000303                     SMT1CPR         equ	771	;# 
  1343   000303                     SMT1CPRL        equ	771	;# 
  1344   000304                     SMT1CPRH        equ	772	;# 
  1345   000305                     SMT1CPRU        equ	773	;# 
  1346   000306                     SMT1CPW         equ	774	;# 
  1347   000306                     SMT1CPWL        equ	774	;# 
  1348   000307                     SMT1CPWH        equ	775	;# 
  1349   000308                     SMT1CPWU        equ	776	;# 
  1350   000309                     SMT1PR          equ	777	;# 
  1351   000309                     SMT1PRL         equ	777	;# 
  1352   00030A                     SMT1PRH         equ	778	;# 
  1353   00030B                     SMT1PRU         equ	779	;# 
  1354   00030C                     SMT1CON0        equ	780	;# 
  1355   00030D                     SMT1CON1        equ	781	;# 
  1356   00030E                     SMT1STAT        equ	782	;# 
  1357   00030F                     SMT1CLK         equ	783	;# 
  1358   000310                     SMT1SIG         equ	784	;# 
  1359   000311                     SMT1WIN         equ	785	;# 
  1360   000318                     TMR0L           equ	792	;# 
  1361   000318                     TMR0            equ	792	;# 
  1362   000319                     TMR0H           equ	793	;# 
  1363   000319                     PR0             equ	793	;# 
  1364   00031A                     T0CON0          equ	794	;# 
  1365   00031B                     T0CON1          equ	795	;# 
  1366   00031C                     TMR1            equ	796	;# 
  1367   00031C                     TMR1L           equ	796	;# 
  1368   00031D                     TMR1H           equ	797	;# 
  1369   00031E                     T1CON           equ	798	;# 
  1370   00031E                     TMR1CON         equ	798	;# 
  1371   00031F                     T1GCON          equ	799	;# 
  1372   00031F                     TMR1GCON        equ	799	;# 
  1373   000320                     T1GATE          equ	800	;# 
  1374   000320                     TMR1GATE        equ	800	;# 
  1375   000321                     T1CLK           equ	801	;# 
  1376   000321                     TMR1CLK         equ	801	;# 
  1377   000321                     PR1             equ	801	;# 
  1378   000322                     T2TMR           equ	802	;# 
  1379   000322                     TMR2            equ	802	;# 
  1380   000323                     T2PR            equ	803	;# 
  1381   000323                     PR2             equ	803	;# 
  1382   000324                     T2CON           equ	804	;# 
  1383   000325                     T2HLT           equ	805	;# 
  1384   000326                     T2CLKCON        equ	806	;# 
  1385   000326                     T2CLK           equ	806	;# 
  1386   000327                     T2RST           equ	807	;# 
  1387   000328                     TMR3            equ	808	;# 
  1388   000328                     TMR3L           equ	808	;# 
  1389   000329                     TMR3H           equ	809	;# 
  1390   00032A                     T3CON           equ	810	;# 
  1391   00032A                     TMR3CON         equ	810	;# 
  1392   00032B                     T3GCON          equ	811	;# 
  1393   00032B                     TMR3GCON        equ	811	;# 
  1394   00032C                     T3GATE          equ	812	;# 
  1395   00032C                     TMR3GATE        equ	812	;# 
  1396   00032D                     T3CLK           equ	813	;# 
  1397   00032D                     TMR3CLK         equ	813	;# 
  1398   00032D                     PR3             equ	813	;# 
  1399   00032E                     T4TMR           equ	814	;# 
  1400   00032E                     TMR4            equ	814	;# 
  1401   00032F                     T4PR            equ	815	;# 
  1402   00032F                     PR4             equ	815	;# 
  1403   000330                     T4CON           equ	816	;# 
  1404   000331                     T4HLT           equ	817	;# 
  1405   000332                     T4CLKCON        equ	818	;# 
  1406   000332                     T4CLK           equ	818	;# 
  1407   000333                     T4RST           equ	819	;# 
  1408   000334                     TMR5            equ	820	;# 
  1409   000334                     TMR5L           equ	820	;# 
  1410   000335                     TMR5H           equ	821	;# 
  1411   000336                     T5CON           equ	822	;# 
  1412   000336                     TMR5CON         equ	822	;# 
  1413   000337                     T5GCON          equ	823	;# 
  1414   000337                     TMR5GCON        equ	823	;# 
  1415   000338                     T5GATE          equ	824	;# 
  1416   000338                     TMR5GATE        equ	824	;# 
  1417   000339                     T5CLK           equ	825	;# 
  1418   000339                     TMR5CLK         equ	825	;# 
  1419   000339                     PR5             equ	825	;# 
  1420   00033A                     T6TMR           equ	826	;# 
  1421   00033A                     TMR6            equ	826	;# 
  1422   00033B                     T6PR            equ	827	;# 
  1423   00033B                     PR6             equ	827	;# 
  1424   00033C                     T6CON           equ	828	;# 
  1425   00033D                     T6HLT           equ	829	;# 
  1426   00033E                     T6CLKCON        equ	830	;# 
  1427   00033E                     T6CLK           equ	830	;# 
  1428   00033F                     T6RST           equ	831	;# 
  1429   000340                     CCPR1           equ	832	;# 
  1430   000340                     CCPR1L          equ	832	;# 
  1431   000341                     CCPR1H          equ	833	;# 
  1432   000342                     CCP1CON         equ	834	;# 
  1433   000343                     CCP1CAP         equ	835	;# 
  1434   000344                     CCPR2           equ	836	;# 
  1435   000344                     CCPR2L          equ	836	;# 
  1436   000345                     CCPR2H          equ	837	;# 
  1437   000346                     CCP2CON         equ	838	;# 
  1438   000347                     CCP2CAP         equ	839	;# 
  1439   000348                     CCPR3           equ	840	;# 
  1440   000348                     CCPR3L          equ	840	;# 
  1441   000349                     CCPR3H          equ	841	;# 
  1442   00034A                     CCP3CON         equ	842	;# 
  1443   00034B                     CCP3CAP         equ	843	;# 
  1444   00034C                     CCPTMRS0        equ	844	;# 
  1445   00034F                     CRCDATA         equ	847	;# 
  1446   00034F                     CRCDATL         equ	847	;# 
  1447   000350                     CRCDATH         equ	848	;# 
  1448   000351                     CRCACC          equ	849	;# 
  1449   000351                     CRCACCL         equ	849	;# 
  1450   000352                     CRCACCH         equ	850	;# 
  1451   000353                     CRCSHFT         equ	851	;# 
  1452   000353                     CRCSHIFTL       equ	851	;# 
  1453   000354                     CRCSHIFTH       equ	852	;# 
  1454   000355                     CRCXOR          equ	853	;# 
  1455   000355                     CRCXORL         equ	853	;# 
  1456   000356                     CRCXORH         equ	854	;# 
  1457   000357                     CRCCON0         equ	855	;# 
  1458   000358                     CRCCON1         equ	856	;# 
  1459   00035A                     SCANLADR        equ	858	;# 
  1460   00035A                     SCANLADRL       equ	858	;# 
  1461   00035B                     SCANLADRH       equ	859	;# 
  1462   00035C                     SCANLADRU       equ	860	;# 
  1463   00035D                     SCANHADR        equ	861	;# 
  1464   00035D                     SCANHADRL       equ	861	;# 
  1465   00035E                     SCANHADRH       equ	862	;# 
  1466   00035F                     SCANHADRU       equ	863	;# 
  1467   000360                     SCANCON0        equ	864	;# 
  1468   000361                     SCANTRIG        equ	865	;# 
  1469   000362                     IPR0            equ	866	;# 
  1470   000363                     IPR1            equ	867	;# 
  1471   000364                     IPR2            equ	868	;# 
  1472   000365                     IPR3            equ	869	;# 
  1473   000366                     IPR4            equ	870	;# 
  1474   000367                     IPR5            equ	871	;# 
  1475   000368                     IPR6            equ	872	;# 
  1476   000369                     IPR7            equ	873	;# 
  1477   00036A                     IPR8            equ	874	;# 
  1478   00036B                     IPR9            equ	875	;# 
  1479   00036C                     IPR10           equ	876	;# 
  1480   00036D                     IPR11           equ	877	;# 
  1481   00036E                     IPR12           equ	878	;# 
  1482   00036F                     IPR13           equ	879	;# 
  1483   000370                     IPR14           equ	880	;# 
  1484   000371                     IPR15           equ	881	;# 
  1485   000373                     STATUS_CSHAD    equ	883	;# 
  1486   000374                     WREG_CSHAD      equ	884	;# 
  1487   000375                     BSR_CSHAD       equ	885	;# 
  1488   000376                     SHADCON         equ	886	;# 
  1489   000377                     STATUS_SHAD     equ	887	;# 
  1490   000378                     WREG_SHAD       equ	888	;# 
  1491   000379                     BSR_SHAD        equ	889	;# 
  1492   00037A                     PCLATH_SHAD     equ	890	;# 
  1493   00037B                     PCLATU_SHAD     equ	891	;# 
  1494   00037C                     FSR0SH          equ	892	;# 
  1495   00037C                     FSR0L_SHAD      equ	892	;# 
  1496   00037D                     FSR0H_SHAD      equ	893	;# 
  1497   00037E                     FSR1SH          equ	894	;# 
  1498   00037E                     FSR1L_SHAD      equ	894	;# 
  1499   00037F                     FSR1H_SHAD      equ	895	;# 
  1500   000380                     FSR2SH          equ	896	;# 
  1501   000380                     FSR2L_SHAD      equ	896	;# 
  1502   000381                     FSR2H_SHAD      equ	897	;# 
  1503   000382                     PRODSH          equ	898	;# 
  1504   000382                     PRODL_SHAD      equ	898	;# 
  1505   000383                     PRODH_SHAD      equ	899	;# 
  1506   0003BC                     CWG1CLK         equ	956	;# 
  1507   0003BC                     CWG1CLKCON      equ	956	;# 
  1508   0003BD                     CWG1ISM         equ	957	;# 
  1509   0003BD                     CWG1DAT         equ	957	;# 
  1510   0003BE                     CWG1DBR         equ	958	;# 
  1511   0003BF                     CWG1DBF         equ	959	;# 
  1512   0003C0                     CWG1CON0        equ	960	;# 
  1513   0003C1                     CWG1CON1        equ	961	;# 
  1514   0003C2                     CWG1AS0         equ	962	;# 
  1515   0003C3                     CWG1AS1         equ	963	;# 
  1516   0003C4                     CWG1STR         equ	964	;# 
  1517   0003C5                     CWG2CLK         equ	965	;# 
  1518   0003C5                     CWG2CLKCON      equ	965	;# 
  1519   0003C6                     CWG2ISM         equ	966	;# 
  1520   0003C6                     CWG2DAT         equ	966	;# 
  1521   0003C7                     CWG2DBR         equ	967	;# 
  1522   0003C8                     CWG2DBF         equ	968	;# 
  1523   0003C9                     CWG2CON0        equ	969	;# 
  1524   0003CA                     CWG2CON1        equ	970	;# 
  1525   0003CB                     CWG2AS0         equ	971	;# 
  1526   0003CC                     CWG2AS1         equ	972	;# 
  1527   0003CD                     CWG2STR         equ	973	;# 
  1528   0003CE                     CWG3CLK         equ	974	;# 
  1529   0003CE                     CWG3CLKCON      equ	974	;# 
  1530   0003CF                     CWG3ISM         equ	975	;# 
  1531   0003CF                     CWG3DAT         equ	975	;# 
  1532   0003D0                     CWG3DBR         equ	976	;# 
  1533   0003D1                     CWG3DBF         equ	977	;# 
  1534   0003D2                     CWG3CON0        equ	978	;# 
  1535   0003D3                     CWG3CON1        equ	979	;# 
  1536   0003D4                     CWG3AS0         equ	980	;# 
  1537   0003D5                     CWG3AS1         equ	981	;# 
  1538   0003D6                     CWG3STR         equ	982	;# 
  1539   0003D7                     FVRCON          equ	983	;# 
  1540   0003D8                     ADCPCON         equ	984	;# 
  1541   0003D8                     ADCP            equ	984	;# 
  1542   0003D9                     ADLTH           equ	985	;# 
  1543   0003D9                     ADLTHL          equ	985	;# 
  1544   0003DA                     ADLTHH          equ	986	;# 
  1545   0003DB                     ADUTH           equ	987	;# 
  1546   0003DB                     ADUTHL          equ	987	;# 
  1547   0003DC                     ADUTHH          equ	988	;# 
  1548   0003DD                     ADERR           equ	989	;# 
  1549   0003DD                     ADERRL          equ	989	;# 
  1550   0003DE                     ADERRH          equ	990	;# 
  1551   0003DF                     ADSTPT          equ	991	;# 
  1552   0003DF                     ADSTPTL         equ	991	;# 
  1553   0003E0                     ADSTPTH         equ	992	;# 
  1554   0003E1                     ADFLTR          equ	993	;# 
  1555   0003E1                     ADFLTRL         equ	993	;# 
  1556   0003E2                     ADFLTRH         equ	994	;# 
  1557   0003E3                     ADACC           equ	995	;# 
  1558   0003E3                     ADACCL          equ	995	;# 
  1559   0003E4                     ADACCH          equ	996	;# 
  1560   0003E5                     ADACCU          equ	997	;# 
  1561   0003E6                     ADCNT           equ	998	;# 
  1562   0003E7                     ADRPT           equ	999	;# 
  1563   0003E8                     ADPREV          equ	1000	;# 
  1564   0003E8                     ADPREVL         equ	1000	;# 
  1565   0003E9                     ADPREVH         equ	1001	;# 
  1566   0003EA                     ADRES           equ	1002	;# 
  1567   0003EA                     ADRESL          equ	1002	;# 
  1568   0003EB                     ADRESH          equ	1003	;# 
  1569   0003EC                     ADPCH           equ	1004	;# 
  1570   0003EE                     ADACQ           equ	1006	;# 
  1571   0003EE                     ADACQL          equ	1006	;# 
  1572   0003EF                     ADACQH          equ	1007	;# 
  1573   0003F0                     ADCAP           equ	1008	;# 
  1574   0003F1                     ADPRE           equ	1009	;# 
  1575   0003F1                     ADPREL          equ	1009	;# 
  1576   0003F2                     ADPREH          equ	1010	;# 
  1577   0003F3                     ADCON0          equ	1011	;# 
  1578   0003F4                     ADCON1          equ	1012	;# 
  1579   0003F5                     ADCON2          equ	1013	;# 
  1580   0003F6                     ADCON3          equ	1014	;# 
  1581   0003F7                     ADSTAT          equ	1015	;# 
  1582   0003F8                     ADREF           equ	1016	;# 
  1583   0003F9                     ADACT           equ	1017	;# 
  1584   0003FA                     ADCLK           equ	1018	;# 
  1585   000400                     ANSELA          equ	1024	;# 
  1586   000401                     WPUA            equ	1025	;# 
  1587   000402                     ODCONA          equ	1026	;# 
  1588   000403                     SLRCONA         equ	1027	;# 
  1589   000404                     INLVLA          equ	1028	;# 
  1590   000405                     IOCAP           equ	1029	;# 
  1591   000406                     IOCAN           equ	1030	;# 
  1592   000407                     IOCAF           equ	1031	;# 
  1593   000408                     ANSELB          equ	1032	;# 
  1594   000409                     WPUB            equ	1033	;# 
  1595   00040A                     ODCONB          equ	1034	;# 
  1596   00040B                     SLRCONB         equ	1035	;# 
  1597   00040C                     INLVLB          equ	1036	;# 
  1598   00040D                     IOCBP           equ	1037	;# 
  1599   00040E                     IOCBN           equ	1038	;# 
  1600   00040F                     IOCBF           equ	1039	;# 
  1601   000410                     ANSELC          equ	1040	;# 
  1602   000411                     WPUC            equ	1041	;# 
  1603   000412                     ODCONC          equ	1042	;# 
  1604   000413                     SLRCONC         equ	1043	;# 
  1605   000414                     INLVLC          equ	1044	;# 
  1606   000415                     IOCCP           equ	1045	;# 
  1607   000416                     IOCCN           equ	1046	;# 
  1608   000417                     IOCCF           equ	1047	;# 
  1609   000418                     ANSELD          equ	1048	;# 
  1610   000419                     WPUD            equ	1049	;# 
  1611   00041A                     ODCOND          equ	1050	;# 
  1612   00041B                     SLRCOND         equ	1051	;# 
  1613   00041C                     INLVLD          equ	1052	;# 
  1614   000420                     ANSELE          equ	1056	;# 
  1615   000421                     WPUE            equ	1057	;# 
  1616   000422                     ODCONE          equ	1058	;# 
  1617   000423                     SLRCONE         equ	1059	;# 
  1618   000424                     INLVLE          equ	1060	;# 
  1619   000425                     IOCEP           equ	1061	;# 
  1620   000426                     IOCEN           equ	1062	;# 
  1621   000427                     IOCEF           equ	1063	;# 
  1622   000428                     ANSELF          equ	1064	;# 
  1623   000429                     WPUF            equ	1065	;# 
  1624   00042A                     ODCONF          equ	1066	;# 
  1625   00042B                     SLRCONF         equ	1067	;# 
  1626   00042C                     INLVLF          equ	1068	;# 
  1627   000440                     NCO1ACC         equ	1088	;# 
  1628   000440                     NCO1ACCL        equ	1088	;# 
  1629   000441                     NCO1ACCH        equ	1089	;# 
  1630   000442                     NCO1ACCU        equ	1090	;# 
  1631   000443                     NCO1INC         equ	1091	;# 
  1632   000443                     NCO1INCL        equ	1091	;# 
  1633   000444                     NCO1INCH        equ	1092	;# 
  1634   000445                     NCO1INCU        equ	1093	;# 
  1635   000446                     NCO1CON         equ	1094	;# 
  1636   000447                     NCO1CLK         equ	1095	;# 
  1637   000448                     NCO2ACC         equ	1096	;# 
  1638   000448                     NCO2ACCL        equ	1096	;# 
  1639   000449                     NCO2ACCH        equ	1097	;# 
  1640   00044A                     NCO2ACCU        equ	1098	;# 
  1641   00044B                     NCO2INC         equ	1099	;# 
  1642   00044B                     NCO2INCL        equ	1099	;# 
  1643   00044C                     NCO2INCH        equ	1100	;# 
  1644   00044D                     NCO2INCU        equ	1101	;# 
  1645   00044E                     NCO2CON         equ	1102	;# 
  1646   00044F                     NCO2CLK         equ	1103	;# 
  1647   000450                     NCO3ACC         equ	1104	;# 
  1648   000450                     NCO3ACCL        equ	1104	;# 
  1649   000451                     NCO3ACCH        equ	1105	;# 
  1650   000452                     NCO3ACCU        equ	1106	;# 
  1651   000453                     NCO3INC         equ	1107	;# 
  1652   000453                     NCO3INCL        equ	1107	;# 
  1653   000454                     NCO3INCH        equ	1108	;# 
  1654   000455                     NCO3INCU        equ	1109	;# 
  1655   000456                     NCO3CON         equ	1110	;# 
  1656   000457                     NCO3CLK         equ	1111	;# 
  1657   000459                     IVTLOCK         equ	1113	;# 
  1658   00045A                     IVTAD           equ	1114	;# 
  1659   00045A                     IVTADL          equ	1114	;# 
  1660   00045B                     IVTADH          equ	1115	;# 
  1661   00045C                     IVTADU          equ	1116	;# 
  1662   00045D                     IVTBASE         equ	1117	;# 
  1663   00045D                     IVTBASEL        equ	1117	;# 
  1664   00045E                     IVTBASEH        equ	1118	;# 
  1665   00045F                     IVTBASEU        equ	1119	;# 
  1666   000460                     PWM1ERS         equ	1120	;# 
  1667   000461                     PWM1CLK         equ	1121	;# 
  1668   000462                     PWM1LDS         equ	1122	;# 
  1669   000463                     PWM1PR          equ	1123	;# 
  1670   000463                     PWM1PRL         equ	1123	;# 
  1671   000464                     PWM1PRH         equ	1124	;# 
  1672   000465                     PWM1CPRE        equ	1125	;# 
  1673   000466                     PWM1PIPOS       equ	1126	;# 
  1674   000467                     PWM1GIR         equ	1127	;# 
  1675   000468                     PWM1GIE         equ	1128	;# 
  1676   000469                     PWM1CON         equ	1129	;# 
  1677   00046A                     PWM1S1CFG       equ	1130	;# 
  1678   00046B                     PWM1S1P1        equ	1131	;# 
  1679   00046B                     PWM1S1P1L       equ	1131	;# 
  1680   00046C                     PWM1S1P1H       equ	1132	;# 
  1681   00046D                     PWM1S1P2        equ	1133	;# 
  1682   00046D                     PWM1S1P2L       equ	1133	;# 
  1683   00046E                     PWM1S1P2H       equ	1134	;# 
  1684   00046F                     PWM2ERS         equ	1135	;# 
  1685   000470                     PWM2CLK         equ	1136	;# 
  1686   000471                     PWM2LDS         equ	1137	;# 
  1687   000472                     PWM2PR          equ	1138	;# 
  1688   000472                     PWM2PRL         equ	1138	;# 
  1689   000473                     PWM2PRH         equ	1139	;# 
  1690   000474                     PWM2CPRE        equ	1140	;# 
  1691   000475                     PWM2PIPOS       equ	1141	;# 
  1692   000476                     PWM2GIR         equ	1142	;# 
  1693   000477                     PWM2GIE         equ	1143	;# 
  1694   000478                     PWM2CON         equ	1144	;# 
  1695   000479                     PWM2S1CFG       equ	1145	;# 
  1696   00047A                     PWM2S1P1        equ	1146	;# 
  1697   00047A                     PWM2S1P1L       equ	1146	;# 
  1698   00047B                     PWM2S1P1H       equ	1147	;# 
  1699   00047C                     PWM2S1P2        equ	1148	;# 
  1700   00047C                     PWM2S1P2L       equ	1148	;# 
  1701   00047D                     PWM2S1P2H       equ	1149	;# 
  1702   00047E                     PWM3ERS         equ	1150	;# 
  1703   00047F                     PWM3CLK         equ	1151	;# 
  1704   000480                     PWM3LDS         equ	1152	;# 
  1705   000481                     PWM3PR          equ	1153	;# 
  1706   000481                     PWM3PRL         equ	1153	;# 
  1707   000482                     PWM3PRH         equ	1154	;# 
  1708   000483                     PWM3CPRE        equ	1155	;# 
  1709   000484                     PWM3PIPOS       equ	1156	;# 
  1710   000485                     PWM3GIR         equ	1157	;# 
  1711   000486                     PWM3GIE         equ	1158	;# 
  1712   000487                     PWM3CON         equ	1159	;# 
  1713   000488                     PWM3S1CFG       equ	1160	;# 
  1714   000489                     PWM3S1P1        equ	1161	;# 
  1715   000489                     PWM3S1P1L       equ	1161	;# 
  1716   00048A                     PWM3S1P1H       equ	1162	;# 
  1717   00048B                     PWM3S1P2        equ	1163	;# 
  1718   00048B                     PWM3S1P2L       equ	1163	;# 
  1719   00048C                     PWM3S1P2H       equ	1164	;# 
  1720   00049C                     PWMLOAD         equ	1180	;# 
  1721   00049D                     PWMEN           equ	1181	;# 
  1722   00049E                     PIE0            equ	1182	;# 
  1723   00049F                     PIE1            equ	1183	;# 
  1724   0004A0                     PIE2            equ	1184	;# 
  1725   0004A1                     PIE3            equ	1185	;# 
  1726   0004A2                     PIE4            equ	1186	;# 
  1727   0004A3                     PIE5            equ	1187	;# 
  1728   0004A4                     PIE6            equ	1188	;# 
  1729   0004A5                     PIE7            equ	1189	;# 
  1730   0004A6                     PIE8            equ	1190	;# 
  1731   0004A7                     PIE9            equ	1191	;# 
  1732   0004A8                     PIE10           equ	1192	;# 
  1733   0004A9                     PIE11           equ	1193	;# 
  1734   0004AA                     PIE12           equ	1194	;# 
  1735   0004AB                     PIE13           equ	1195	;# 
  1736   0004AC                     PIE14           equ	1196	;# 
  1737   0004AD                     PIE15           equ	1197	;# 
  1738   0004AE                     PIR0            equ	1198	;# 
  1739   0004AF                     PIR1            equ	1199	;# 
  1740   0004B0                     PIR2            equ	1200	;# 
  1741   0004B1                     PIR3            equ	1201	;# 
  1742   0004B2                     PIR4            equ	1202	;# 
  1743   0004B3                     PIR5            equ	1203	;# 
  1744   0004B4                     PIR6            equ	1204	;# 
  1745   0004B5                     PIR7            equ	1205	;# 
  1746   0004B6                     PIR8            equ	1206	;# 
  1747   0004B7                     PIR9            equ	1207	;# 
  1748   0004B8                     PIR10           equ	1208	;# 
  1749   0004B9                     PIR11           equ	1209	;# 
  1750   0004BA                     PIR12           equ	1210	;# 
  1751   0004BB                     PIR13           equ	1211	;# 
  1752   0004BC                     PIR14           equ	1212	;# 
  1753   0004BD                     PIR15           equ	1213	;# 
  1754   0004BE                     LATA            equ	1214	;# 
  1755   0004BF                     LATB            equ	1215	;# 
  1756   0004C0                     LATC            equ	1216	;# 
  1757   0004C1                     LATD            equ	1217	;# 
  1758   0004C2                     LATE            equ	1218	;# 
  1759   0004C3                     LATF            equ	1219	;# 
  1760   0004C6                     TRISA           equ	1222	;# 
  1761   0004C7                     TRISB           equ	1223	;# 
  1762   0004C8                     TRISC           equ	1224	;# 
  1763   0004C9                     TRISD           equ	1225	;# 
  1764   0004CA                     TRISE           equ	1226	;# 
  1765   0004CB                     TRISF           equ	1227	;# 
  1766   0004CE                     PORTA           equ	1230	;# 
  1767   0004CF                     PORTB           equ	1231	;# 
  1768   0004D0                     PORTC           equ	1232	;# 
  1769   0004D1                     PORTD           equ	1233	;# 
  1770   0004D2                     PORTE           equ	1234	;# 
  1771   0004D3                     PORTF           equ	1235	;# 
  1772   0004D6                     INTCON0         equ	1238	;# 
  1773   0004D7                     INTCON1         equ	1239	;# 
  1774   0004D8                     STATUS          equ	1240	;# 
  1775   0004D9                     FSR2            equ	1241	;# 
  1776   0004D9                     FSR2L           equ	1241	;# 
  1777   0004DA                     FSR2H           equ	1242	;# 
  1778   0004DB                     PLUSW2          equ	1243	;# 
  1779   0004DC                     PREINC2         equ	1244	;# 
  1780   0004DD                     POSTDEC2        equ	1245	;# 
  1781   0004DE                     POSTINC2        equ	1246	;# 
  1782   0004DF                     INDF2           equ	1247	;# 
  1783   0004E0                     BSR             equ	1248	;# 
  1784   0004E1                     FSR1            equ	1249	;# 
  1785   0004E1                     FSR1L           equ	1249	;# 
  1786   0004E2                     FSR1H           equ	1250	;# 
  1787   0004E3                     PLUSW1          equ	1251	;# 
  1788   0004E4                     PREINC1         equ	1252	;# 
  1789   0004E5                     POSTDEC1        equ	1253	;# 
  1790   0004E6                     POSTINC1        equ	1254	;# 
  1791   0004E7                     INDF1           equ	1255	;# 
  1792   0004E8                     WREG            equ	1256	;# 
  1793   0004E9                     FSR0            equ	1257	;# 
  1794   0004E9                     FSR0L           equ	1257	;# 
  1795   0004EA                     FSR0H           equ	1258	;# 
  1796   0004EB                     PLUSW0          equ	1259	;# 
  1797   0004EC                     PREINC0         equ	1260	;# 
  1798   0004ED                     POSTDEC0        equ	1261	;# 
  1799   0004EE                     POSTINC0        equ	1262	;# 
  1800   0004EF                     INDF0           equ	1263	;# 
  1801   0004F0                     PCON0           equ	1264	;# 
  1802   0004F1                     PCON1           equ	1265	;# 
  1803   0004F2                     CPUDOZE         equ	1266	;# 
  1804   0004F3                     PROD            equ	1267	;# 
  1805   0004F3                     PRODL           equ	1267	;# 
  1806   0004F4                     PRODH           equ	1268	;# 
  1807   0004F5                     TABLAT          equ	1269	;# 
  1808   0004F6                     TBLPTR          equ	1270	;# 
  1809   0004F6                     TBLPTRL         equ	1270	;# 
  1810   0004F7                     TBLPTRH         equ	1271	;# 
  1811   0004F8                     TBLPTRU         equ	1272	;# 
  1812   0004F9                     PCLAT           equ	1273	;# 
  1813   0004F9                     PCL             equ	1273	;# 
  1814   0004FA                     PCLATH          equ	1274	;# 
  1815   0004FB                     PCLATU          equ	1275	;# 
  1816   0004FC                     STKPTR          equ	1276	;# 
  1817   0004FD                     TOS             equ	1277	;# 
  1818   0004FD                     TOSL            equ	1277	;# 
  1819   0004FE                     TOSH            equ	1278	;# 
  1820   0004FF                     TOSU            equ	1279	;# 
  1821                           
  1822                           	psect	idataCOMRAM
  1823   002B16                     __pidataCOMRAM:
  1824                           	callstack 0
  1825                           
  1826                           ;initializer for _reloj_4
  1827   002B16  1D                 	db	29
  1828   002B17  11                 	db	17
  1829   002B18  01                 	db	1
  1830   002B19  03                 	db	3
  1831   002B1A  06                 	db	6
  1832   002B1B  1C                 	db	28
  1833   002B1C  06                 	db	6
  1834   002B1D  0F                 	db	15
  1835                           
  1836                           ;initializer for _reloj_3
  1837   002B1E  11                 	db	17
  1838   002B1F  11                 	db	17
  1839   002B20  10                 	db	16
  1840   002B21  18                 	db	24
  1841   002B22  0C                 	db	12
  1842   002B23  07                 	db	7
  1843   002B24  0C                 	db	12
  1844   002B25  1E                 	db	30
  1845                           
  1846                           ;initializer for _reloj_2
  1847   002B26  06                 	db	6
  1848   002B27  0F                 	db	15
  1849   002B28  07                 	db	7
  1850   002B29  05                 	db	5
  1851   002B2A  1C                 	db	28
  1852   002B2B  06                 	db	6
  1853   002B2C  03                 	db	3
  1854   002B2D  07                 	db	7
  1855                           
  1856                           ;initializer for _reloj_1
  1857   002B2E  0C                 	db	12
  1858   002B2F  1E                 	db	30
  1859   002B30  1C                 	db	28
  1860   002B31  14                 	db	20
  1861   002B32  07                 	db	7
  1862   002B33  0C                 	db	12
  1863   002B34  1E                 	db	30
  1864   002B35  13                 	db	19
  1865   0000B3                     _OSCENbits      set	179
  1866   0000B1                     _OSCFRQ         set	177
  1867   0000AD                     _OSCCON1        set	173
  1868   0003EA                     _ADRESL         set	1002
  1869   0003EB                     _ADRESH         set	1003
  1870   0003EC                     _ADPCH          set	1004
  1871   0003F8                     _ADREF          set	1016
  1872   0003F3                     _ADCON0bits     set	1011
  1873   000418                     _ANSELD         set	1048
  1874   000400                     _ANSELAbits     set	1024
  1875   000428                     _ANSELFbits     set	1064
  1876   0004C6                     _TRISAbits      set	1222
  1877   0004C3                     _LATFbits       set	1219
  1878   0004CB                     _TRISFbits      set	1227
  1879   0004D1                     _PORTD          set	1233
  1880   0004C1                     _LATD           set	1217
  1881   0004C9                     _TRISD          set	1225
  1882   0004C1                     _LATDbits       set	1217
  1883                           
  1884                           	psect	smallconst
  1885   002600                     __psmallconst:
  1886                           	callstack 0
  1887   002600  00                 	db	0
  1888   002601                     STR_2:
  1889   002601  4D                 	db	77	;'M'
  1890   002602  69                 	db	105	;'i'
  1891   002603  63                 	db	99	;'c'
  1892   002604  72                 	db	114	;'r'
  1893   002605  6F                 	db	111	;'o'
  1894   002606  20                 	db	32
  1895   002607  32                 	db	50	;'2'
  1896   002608  30                 	db	48	;'0'
  1897   002609  32                 	db	50	;'2'
  1898   00260A  35                 	db	53	;'5'
  1899   00260B  2D                 	db	45
  1900   00260C  31                 	db	49	;'1'
  1901   00260D  20                 	db	32
  1902   00260E  00                 	db	0
  1903   00260F                     STR_1:
  1904   00260F  52                 	db	82	;'R'
  1905   002610  65                 	db	101	;'e'
  1906   002611  6C                 	db	108	;'l'
  1907   002612  6F                 	db	111	;'o'
  1908   002613  6A                 	db	106	;'j'
  1909   002614  20                 	db	32
  1910   002615  55                 	db	85	;'U'
  1911   002616  50                 	db	80	;'P'
  1912   002617  43                 	db	67	;'C'
  1913   002618  69                 	db	105	;'i'
  1914   002619  6E                 	db	110	;'n'
  1915   00261A  6F                 	db	111	;'o'
  1916   00261B  20                 	db	32
  1917   00261C  00                 	db	0
  1918   00261D                     STR_3:
  1919   00261D  41                 	db	65	;'A'
  1920   00261E  4E                 	db	78	;'N'
  1921   00261F  41                 	db	65	;'A'
  1922   002620  30                 	db	48	;'0'
  1923   002621  3A                 	db	58	;':'
  1924   002622  00                 	db	0
  1925   002623  00                 	db	0	; dummy byte at the end
  1926   002600                     __smallconst    set	__psmallconst
  1927   002600                     __mediumconst   set	__psmallconst
  1928   000001                     __activetblptr  equ	1
  1929                           
  1930                           ; #config settings
  1931                           
  1932                           	psect	cinit
  1933   0029F4                     __pcinit:
  1934                           	callstack 0
  1935   0029F4                     start_initialization:
  1936                           	callstack 0
  1937   0029F4                     __initialization:
  1938                           	callstack 0
  1939                           
  1940                           ; Initialize objects allocated to COMRAM (32 bytes)
  1941                           ; load TBLPTR registers with __pidataCOMRAM
  1942   0029F4  0E16               	movlw	low __pidataCOMRAM
  1943   0029F6  6EF6               	movwf	tblptrl,c
  1944   0029F8  0E2B               	movlw	high __pidataCOMRAM
  1945   0029FA  6EF7               	movwf	tblptrh,c
  1946   0029FC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1947   0029FE  6EF8               	movwf	tblptru,c
  1948   002A00  EE01  F101         	lfsr	0,__pdataCOMRAM
  1949   002A04  EE10 F020          	lfsr	1,32
  1950   002A08                     copy_data0:
  1951   002A08  0009               	tblrd		*+
  1952   002A0A  C4F5 F4EE          	movff	tablat,postinc0
  1953   002A0E  50E5               	movf	postdec1,w,c
  1954   002A10  50E1               	movf	fsr1l,w,c
  1955   002A12  E1FA               	bnz	copy_data0
  1956                           
  1957                           ; Clear objects allocated to COMRAM (2 bytes)
  1958   002A14  6A30               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1959   002A16  6A2F               	clrf	__pbssCOMRAM& (0+255),c
  1960   002A18                     end_of_initialization:
  1961                           	callstack 0
  1962   002A18                     __end_of__initialization:
  1963                           	callstack 0
  1964   002A18  0E00               	movlw	low (__Lsmallconst shr (0+16))
  1965   002A1A  6EF8               	movwf	tblptru,c
  1966   002A1C  0E26               	movlw	high __Lsmallconst
  1967   002A1E  6EF7               	movwf	tblptrh,c
  1968   002A20  0100               	movlb	0
  1969   002A22  EF12  F013         	goto	_main	;jump to C main() function
  1970                           
  1971                           	psect	bssCOMRAM
  1972   00052F                     __pbssCOMRAM:
  1973                           	callstack 0
  1974   00052F                     _ADC_value:
  1975                           	callstack 0
  1976   00052F                     	ds	2
  1977                           
  1978                           	psect	dataCOMRAM
  1979   000501                     __pdataCOMRAM:
  1980                           	callstack 0
  1981   000501                     _reloj_4:
  1982                           	callstack 0
  1983   000501                     	ds	8
  1984   000509                     _reloj_3:
  1985                           	callstack 0
  1986   000509                     	ds	8
  1987   000511                     _reloj_2:
  1988                           	callstack 0
  1989   000511                     	ds	8
  1990   000519                     _reloj_1:
  1991                           	callstack 0
  1992   000519                     	ds	8
  1993                           
  1994                           	psect	cstackCOMRAM
  1995   000521                     __pcstackCOMRAM:
  1996                           	callstack 0
  1997   000521                     ?___lwmod:
  1998                           	callstack 0
  1999   000521                     ENVIA_NIBBLE@dato:
  2000                           	callstack 0
  2001   000521                     LEER_LCD@aux:
  2002                           	callstack 0
  2003   000521                     ___lwmod@dividend:
  2004                           	callstack 0
  2005   000521                     
  2006                           ; 1 bytes @ 0x0
  2007   000521                     	ds	1
  2008   000522                     ENVIA_CHAR@dato:
  2009                           	callstack 0
  2010   000522                     ENVIA_LCD_CMD@dato:
  2011                           	callstack 0
  2012   000522                     
  2013                           ; 1 bytes @ 0x1
  2014   000522                     	ds	1
  2015   000523                     ENVIA_CHAR@aux:
  2016                           	callstack 0
  2017   000523                     ENVIA_LCD_CMD@aux:
  2018                           	callstack 0
  2019   000523                     ___lwmod@divisor:
  2020                           	callstack 0
  2021                           
  2022                           ; 2 bytes @ 0x2
  2023   000523                     	ds	1
  2024   000524                     POS_CURSOR@columna:
  2025                           	callstack 0
  2026   000524                     CURSOR_ONOFF@estado:
  2027                           	callstack 0
  2028   000524                     ESCRIBE_MENSAJE@cadena:
  2029                           	callstack 0
  2030   000524                     GENERACARACTER@vector:
  2031                           	callstack 0
  2032   000524                     ??_LCD_CONFIG:
  2033                           
  2034                           ; 1 bytes @ 0x3
  2035   000524                     	ds	1
  2036   000525                     POS_CURSOR@fila:
  2037                           	callstack 0
  2038   000525                     ESCRIBE_MENSAJE@tam:
  2039                           	callstack 0
  2040   000525                     ___lwmod@counter:
  2041                           	callstack 0
  2042   000525                     
  2043                           ; 1 bytes @ 0x4
  2044   000525                     	ds	1
  2045   000526                     ?___lwdiv:
  2046                           	callstack 0
  2047   000526                     GENERACARACTER@pos:
  2048                           	callstack 0
  2049   000526                     ___lwdiv@dividend:
  2050                           	callstack 0
  2051   000526                     ??_ESCRIBE_MENSAJE:
  2052                           
  2053                           ; 1 bytes @ 0x5
  2054   000526                     	ds	1
  2055   000527                     ESCRIBE_MENSAJE@i:
  2056                           	callstack 0
  2057   000527                     GENERACARACTER@i:
  2058                           	callstack 0
  2059   000527                     
  2060                           ; 1 bytes @ 0x6
  2061   000527                     	ds	1
  2062   000528                     ___lwdiv@divisor:
  2063                           	callstack 0
  2064   000528                     ??_lcd_init:
  2065   000528                     ??_pantallon:
  2066                           
  2067                           ; 1 bytes @ 0x7
  2068   000528                     	ds	2
  2069   00052A                     ___lwdiv@quotient:
  2070                           	callstack 0
  2071   00052A                     
  2072                           ; 1 bytes @ 0x9
  2073   00052A                     	ds	2
  2074   00052C                     ___lwdiv@counter:
  2075                           	callstack 0
  2076                           
  2077                           ; 1 bytes @ 0xB
  2078   00052C                     	ds	1
  2079   00052D                     ??_main:
  2080                           
  2081                           ; 1 bytes @ 0xC
  2082   00052D                     	ds	2
  2083                           
  2084 ;;
  2085 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2086 ;;
  2087 ;; *************** function _main *****************
  2088 ;; Defined at:
  2089 ;;		line 60 in file "maincode02.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2105 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2107 ;;Total ram usage:        2 bytes
  2108 ;; Hardware stack levels required when called: 4
  2109 ;; This function calls:
  2110 ;;		_ENVIA_CHAR
  2111 ;;		_ESCRIBE_MENSAJE
  2112 ;;		_POS_CURSOR
  2113 ;;		___lwdiv
  2114 ;;		___lwmod
  2115 ;;		_configuro
  2116 ;;		_lcd_init
  2117 ;;		_pantallon
  2118 ;; This function is called by:
  2119 ;;		Startup code after reset
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text0
  2124   002624                     __ptext0:
  2125                           	callstack 0
  2126   002624                     _main:
  2127                           	callstack 123
  2128   002624                     
  2129                           ;maincode02.c: 61:     configuro();
  2130   002624  EC75  F015         	call	_configuro	;wreg free
  2131   002628                     
  2132                           ;maincode02.c: 62:     lcd_init();
  2133   002628  ECF8  F013         	call	_lcd_init	;wreg free
  2134   00262C                     
  2135                           ;maincode02.c: 63:     pantallon();
  2136   00262C  EC5F  F014         	call	_pantallon	;wreg free
  2137   002630                     l1236:
  2138                           
  2139                           ;maincode02.c: 65:         ADCON0bits.GO_nDONE = 1;
  2140   002630  0103               	movlb	3	; () banked
  2141   002632  81F3               	bsf	243,0,b	;volatile
  2142   002634                     l147:
  2143                           
  2144                           ; BSR set to: 3
  2145   002634  B1F3               	btfsc	243,0,b	;volatile
  2146   002636  EF1F  F013         	goto	u291
  2147   00263A  EF21  F013         	goto	u290
  2148   00263E                     u291:
  2149   00263E  EF1A  F013         	goto	l147
  2150   002642                     u290:
  2151   002642                     
  2152                           ; BSR set to: 3
  2153                           ;maincode02.c: 67:         ADC_value = (ADRESH << 8) + ADRESL;
  2154   002642  51EB               	movf	235,w,b	;volatile
  2155   002644  6E2E               	movwf	(??_main+1)^(0+1280),c
  2156   002646  6A2D               	clrf	??_main^(0+1280),c
  2157   002648  51EA               	movf	234,w,b	;volatile
  2158   00264A  242D               	addwf	??_main^(0+1280),w,c
  2159   00264C  6E2F               	movwf	_ADC_value^(0+1280),c
  2160   00264E  0E00               	movlw	0
  2161   002650  202E               	addwfc	(??_main+1)^(0+1280),w,c
  2162   002652  6E30               	movwf	(_ADC_value+1)^(0+1280),c
  2163   002654                     
  2164                           ; BSR set to: 3
  2165                           ;maincode02.c: 68:         POS_CURSOR(1,0);
  2166   002654  0E00               	movlw	0
  2167   002656  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
  2168   002658  0E01               	movlw	1
  2169   00265A  ECC0  F014         	call	_POS_CURSOR
  2170   00265E                     
  2171                           ;maincode02.c: 69:         ESCRIBE_MENSAJE("ANA0:", 5);
  2172   00265E  0E1D               	movlw	low STR_3
  2173   002660  6E24               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2174   002662  0E05               	movlw	5
  2175   002664  6E25               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2176   002666  EC45  F015         	call	_ESCRIBE_MENSAJE	;wreg free
  2177   00266A                     
  2178                           ;maincode02.c: 70:         ENVIA_CHAR((ADC_value/1000)+0x30);
  2179   00266A  C52F  F526         	movff	_ADC_value,___lwdiv@dividend
  2180   00266E  C530  F527         	movff	_ADC_value+1,___lwdiv@dividend+1
  2181   002672  0E03               	movlw	3
  2182   002674  6E29               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2183   002676  0EE8               	movlw	232
  2184   002678  6E28               	movwf	___lwdiv@divisor^(0+1280),c
  2185   00267A  EC85  F013         	call	___lwdiv	;wreg free
  2186   00267E  5026               	movf	?___lwdiv^(0+1280),w,c
  2187   002680  0F30               	addlw	48
  2188   002682  EC13  F015         	call	_ENVIA_CHAR
  2189   002686                     
  2190                           ;maincode02.c: 71:         ENVIA_CHAR(((ADC_value%1000)/100)+0x30);
  2191   002686  0E03               	movlw	3
  2192   002688  6E24               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2193   00268A  0EE8               	movlw	232
  2194   00268C  6E23               	movwf	___lwmod@divisor^(0+1280),c
  2195   00268E  C52F  F521         	movff	_ADC_value,___lwmod@dividend
  2196   002692  C530  F522         	movff	_ADC_value+1,___lwmod@dividend+1
  2197   002696  EC2D  F014         	call	___lwmod	;wreg free
  2198   00269A  C521  F526         	movff	?___lwmod,___lwdiv@dividend
  2199   00269E  C522  F527         	movff	?___lwmod+1,___lwdiv@dividend+1
  2200   0026A2  0E00               	movlw	0
  2201   0026A4  6E29               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2202   0026A6  0E64               	movlw	100
  2203   0026A8  6E28               	movwf	___lwdiv@divisor^(0+1280),c
  2204   0026AA  EC85  F013         	call	___lwdiv	;wreg free
  2205   0026AE  5026               	movf	?___lwdiv^(0+1280),w,c
  2206   0026B0  0F30               	addlw	48
  2207   0026B2  EC13  F015         	call	_ENVIA_CHAR
  2208   0026B6                     
  2209                           ;maincode02.c: 72:         ENVIA_CHAR(((ADC_value%100)/10)+0x30);
  2210   0026B6  0E00               	movlw	0
  2211   0026B8  6E24               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2212   0026BA  0E64               	movlw	100
  2213   0026BC  6E23               	movwf	___lwmod@divisor^(0+1280),c
  2214   0026BE  C52F  F521         	movff	_ADC_value,___lwmod@dividend
  2215   0026C2  C530  F522         	movff	_ADC_value+1,___lwmod@dividend+1
  2216   0026C6  EC2D  F014         	call	___lwmod	;wreg free
  2217   0026CA  C521  F526         	movff	?___lwmod,___lwdiv@dividend
  2218   0026CE  C522  F527         	movff	?___lwmod+1,___lwdiv@dividend+1
  2219   0026D2  0E00               	movlw	0
  2220   0026D4  6E29               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2221   0026D6  0E0A               	movlw	10
  2222   0026D8  6E28               	movwf	___lwdiv@divisor^(0+1280),c
  2223   0026DA  EC85  F013         	call	___lwdiv	;wreg free
  2224   0026DE  5026               	movf	?___lwdiv^(0+1280),w,c
  2225   0026E0  0F30               	addlw	48
  2226   0026E2  EC13  F015         	call	_ENVIA_CHAR
  2227   0026E6                     
  2228                           ;maincode02.c: 73:         ENVIA_CHAR((ADC_value%10)+0x30);
  2229   0026E6  C52F  F521         	movff	_ADC_value,___lwmod@dividend
  2230   0026EA  C530  F522         	movff	_ADC_value+1,___lwmod@dividend+1
  2231   0026EE  0E00               	movlw	0
  2232   0026F0  6E24               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2233   0026F2  0E0A               	movlw	10
  2234   0026F4  6E23               	movwf	___lwmod@divisor^(0+1280),c
  2235   0026F6  EC2D  F014         	call	___lwmod	;wreg free
  2236   0026FA  5021               	movf	?___lwmod^(0+1280),w,c
  2237   0026FC  0F30               	addlw	48
  2238   0026FE  EC13  F015         	call	_ENVIA_CHAR
  2239   002702  EF18  F013         	goto	l1236
  2240   002706  EFFE  F0FF         	goto	start
  2241   00270A                     __end_of_main:
  2242                           	callstack 0
  2243                           
  2244 ;; *************** function _pantallon *****************
  2245 ;; Defined at:
  2246 ;;		line 47 in file "maincode02.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2262 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2263 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2264 ;;Total ram usage:        2 bytes
  2265 ;; Hardware stack levels used: 1
  2266 ;; Hardware stack levels required when called: 3
  2267 ;; This function calls:
  2268 ;;		_BORRAR_LCD
  2269 ;;		_ENVIA_CHAR
  2270 ;;		_ESCRIBE_MENSAJE
  2271 ;;		_POS_CURSOR
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text1
  2278   0028BE                     __ptext1:
  2279                           	callstack 0
  2280   0028BE                     _pantallon:
  2281                           	callstack 123
  2282   0028BE                     
  2283                           ;maincode02.c: 48:     POS_CURSOR(1,0);
  2284   0028BE  0E00               	movlw	0
  2285   0028C0  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
  2286   0028C2  0E01               	movlw	1
  2287   0028C4  ECC0  F014         	call	_POS_CURSOR
  2288   0028C8                     
  2289                           ;maincode02.c: 49:     ESCRIBE_MENSAJE("Reloj UPCino ", 13);
  2290   0028C8  0E0F               	movlw	low STR_1
  2291   0028CA  6E24               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2292   0028CC  0E0D               	movlw	13
  2293   0028CE  6E25               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2294   0028D0  EC45  F015         	call	_ESCRIBE_MENSAJE	;wreg free
  2295   0028D4                     
  2296                           ;maincode02.c: 50:     ENVIA_CHAR(0);
  2297   0028D4  0E00               	movlw	0
  2298   0028D6  EC13  F015         	call	_ENVIA_CHAR
  2299   0028DA                     
  2300                           ;maincode02.c: 51:     ENVIA_CHAR(1);
  2301   0028DA  0E01               	movlw	1
  2302   0028DC  EC13  F015         	call	_ENVIA_CHAR
  2303   0028E0                     
  2304                           ;maincode02.c: 52:     POS_CURSOR(2,0);
  2305   0028E0  0E00               	movlw	0
  2306   0028E2  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
  2307   0028E4  0E02               	movlw	2
  2308   0028E6  ECC0  F014         	call	_POS_CURSOR
  2309                           
  2310                           ;maincode02.c: 53:     ESCRIBE_MENSAJE("Micro 2025-1 ", 13);
  2311   0028EA  0E01               	movlw	low STR_2
  2312   0028EC  6E24               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2313   0028EE  0E0D               	movlw	13
  2314   0028F0  6E25               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2315   0028F2  EC45  F015         	call	_ESCRIBE_MENSAJE	;wreg free
  2316   0028F6                     
  2317                           ;maincode02.c: 54:     ENVIA_CHAR(2);
  2318   0028F6  0E02               	movlw	2
  2319   0028F8  EC13  F015         	call	_ENVIA_CHAR
  2320   0028FC                     
  2321                           ;maincode02.c: 55:     ENVIA_CHAR(3);
  2322   0028FC  0E03               	movlw	3
  2323   0028FE  EC13  F015         	call	_ENVIA_CHAR
  2324   002902                     
  2325                           ;maincode02.c: 56:     _delay((unsigned long)((4000)*(32000000UL/4000.0)));
  2326   002902  0EA3               	movlw	163
  2327   002904  6E29               	movwf	(??_pantallon+1)^(0+1280),c
  2328   002906  0E57               	movlw	87
  2329   002908  6E28               	movwf	??_pantallon^(0+1280),c
  2330   00290A  0E02               	movlw	2
  2331   00290C                     u307:
  2332   00290C  2EE8               	decfsz	wreg,f,c
  2333   00290E  D7FE               	bra	u307
  2334   002910  2E28               	decfsz	??_pantallon^(0+1280),f,c
  2335   002912  D7FC               	bra	u307
  2336   002914  2E29               	decfsz	(??_pantallon+1)^(0+1280),f,c
  2337   002916  D7FA               	bra	u307
  2338   002918  D000               	nop2	
  2339   00291A                     
  2340                           ;maincode02.c: 57:     BORRAR_LCD();
  2341   00291A  ECAD  F015         	call	_BORRAR_LCD	;wreg free
  2342   00291E  0012               	return		;funcret
  2343   002920                     __end_of_pantallon:
  2344                           	callstack 0
  2345                           
  2346 ;; *************** function _POS_CURSOR *****************
  2347 ;; Defined at:
  2348 ;;		line 6 in file "LCD.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  fila            1    wreg     unsigned char 
  2351 ;;  columna         1    3[COMRAM] unsigned char 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  fila            1    4[COMRAM] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2363 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2366 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2367 ;;Total ram usage:        2 bytes
  2368 ;; Hardware stack levels used: 1
  2369 ;; Hardware stack levels required when called: 2
  2370 ;; This function calls:
  2371 ;;		_ENVIA_LCD_CMD
  2372 ;; This function is called by:
  2373 ;;		_pantallon
  2374 ;;		_main
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text2
  2379   002980                     __ptext2:
  2380                           	callstack 0
  2381   002980                     _POS_CURSOR:
  2382                           	callstack 123
  2383                           
  2384                           ;incstack = 0
  2385                           ;POS_CURSOR@fila stored from wreg
  2386   002980  6E25               	movwf	POS_CURSOR@fila^(0+1280),c
  2387   002982                     
  2388                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2389   002982  0425               	decf	POS_CURSOR@fila^(0+1280),w,c
  2390   002984  A4D8               	btfss	status,2,c
  2391   002986  EFC7  F014         	goto	u191
  2392   00298A  EFC9  F014         	goto	u190
  2393   00298E                     u191:
  2394   00298E  EFCF  F014         	goto	l1126
  2395   002992                     u190:
  2396   002992                     
  2397                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2398   002992  5024               	movf	POS_CURSOR@columna^(0+1280),w,c
  2399   002994  0F80               	addlw	128
  2400   002996  EC2C  F015         	call	_ENVIA_LCD_CMD
  2401                           
  2402                           ;LCD.c: 11:  }
  2403   00299A  EFDC  F014         	goto	l24
  2404   00299E                     l1126:
  2405   00299E  0E02               	movlw	2
  2406   0029A0  1825               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2407   0029A2  A4D8               	btfss	status,2,c
  2408   0029A4  EFD6  F014         	goto	u201
  2409   0029A8  EFD8  F014         	goto	u200
  2410   0029AC                     u201:
  2411   0029AC  EFDC  F014         	goto	l24
  2412   0029B0                     u200:
  2413   0029B0                     
  2414                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2415   0029B0  5024               	movf	POS_CURSOR@columna^(0+1280),w,c
  2416   0029B2  0FC0               	addlw	192
  2417   0029B4  EC2C  F015         	call	_ENVIA_LCD_CMD
  2418   0029B8                     l24:
  2419   0029B8  0012               	return		;funcret
  2420   0029BA                     __end_of_POS_CURSOR:
  2421                           	callstack 0
  2422                           
  2423 ;; *************** function _ESCRIBE_MENSAJE *****************
  2424 ;; Defined at:
  2425 ;;		line 41 in file "LCD.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2428 ;;		 -> STR_3(6), STR_2(14), STR_1(14), 
  2429 ;;  tam             1    4[COMRAM] unsigned char 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  i               1    6[COMRAM] unsigned char 
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      void 
  2434 ;; Registers used:
  2435 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2444 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2445 ;;Total ram usage:        4 bytes
  2446 ;; Hardware stack levels used: 1
  2447 ;; Hardware stack levels required when called: 2
  2448 ;; This function calls:
  2449 ;;		_ENVIA_CHAR
  2450 ;; This function is called by:
  2451 ;;		_pantallon
  2452 ;;		_main
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text3
  2457   002A8A                     __ptext3:
  2458                           	callstack 0
  2459   002A8A                     _ESCRIBE_MENSAJE:
  2460                           	callstack 123
  2461   002A8A                     
  2462                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2463   002A8A  6A27               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2464                           
  2465                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2466   002A8C  6A27               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2467   002A8E  EF53  F015         	goto	l1136
  2468   002A92                     l1132:
  2469                           
  2470                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2471   002A92  5024               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  2472   002A94  2427               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2473   002A96  6E26               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  2474   002A98  C526  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2475   002A9C                     	if	0	;There is only one active tblptr byte
  2476   002A9C                     	endif
  2477   002A9C                     	if	0	;tblptru may be non-zero
  2478   002A9C                     	endif
  2479   002A9C                     	if	0	;tblptru may be non-zero
  2480   002A9C                     	endif
  2481   002A9C  0008               	tblrd		*
  2482   002A9E  50F5               	movf	tablat,w,c
  2483   002AA0  EC13  F015         	call	_ENVIA_CHAR
  2484   002AA4                     
  2485                           ;LCD.c: 47:  }
  2486   002AA4  2A27               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  2487   002AA6                     l1136:
  2488   002AA6  5025               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  2489   002AA8  5C27               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2490   002AAA  A0D8               	btfss	status,0,c
  2491   002AAC  EF5A  F015         	goto	u211
  2492   002AB0  EF5C  F015         	goto	u210
  2493   002AB4                     u211:
  2494   002AB4  EF49  F015         	goto	l1132
  2495   002AB8                     u210:
  2496   002AB8  0012               	return		;funcret
  2497   002ABA                     __end_of_ESCRIBE_MENSAJE:
  2498                           	callstack 0
  2499                           
  2500 ;; *************** function _lcd_init *****************
  2501 ;; Defined at:
  2502 ;;		line 33 in file "maincode02.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2518 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2519 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2520 ;;Total ram usage:        1 bytes
  2521 ;; Hardware stack levels used: 1
  2522 ;; Hardware stack levels required when called: 3
  2523 ;; This function calls:
  2524 ;;		_BORRAR_LCD
  2525 ;;		_CURSOR_HOME
  2526 ;;		_CURSOR_ONOFF
  2527 ;;		_GENERACARACTER
  2528 ;;		_LCD_CONFIG
  2529 ;; This function is called by:
  2530 ;;		_main
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text4
  2535   0027F0                     __ptext4:
  2536                           	callstack 0
  2537   0027F0                     _lcd_init:
  2538                           	callstack 123
  2539   0027F0                     
  2540                           ;maincode02.c: 34:     TRISD = 0x00;
  2541   0027F0  6AC9               	clrf	201,c	;volatile
  2542                           
  2543                           ;maincode02.c: 35:     ANSELD = 0x00;
  2544   0027F2  0104               	movlb	4	; () banked
  2545   0027F4  6B18               	clrf	24,b	;volatile
  2546   0027F6                     
  2547                           ; BSR set to: 4
  2548                           ;maincode02.c: 36:     LCD_CONFIG();
  2549   0027F6  EC90  F014         	call	_LCD_CONFIG	;wreg free
  2550   0027FA                     
  2551                           ;maincode02.c: 37:     _delay((unsigned long)((21)*(32000000UL/4000.0)));
  2552   0027FA  0EDB               	movlw	219
  2553   0027FC  6E28               	movwf	??_lcd_init^(0+1280),c
  2554   0027FE  0E2D               	movlw	45
  2555   002800                     u317:
  2556   002800  2EE8               	decfsz	wreg,f,c
  2557   002802  D7FE               	bra	u317
  2558   002804  2E28               	decfsz	??_lcd_init^(0+1280),f,c
  2559   002806  D7FC               	bra	u317
  2560   002808  0000               	nop	
  2561   00280A                     
  2562                           ;maincode02.c: 38:     BORRAR_LCD();
  2563   00280A  ECAD  F015         	call	_BORRAR_LCD	;wreg free
  2564   00280E                     
  2565                           ;maincode02.c: 39:     CURSOR_HOME();
  2566   00280E  ECA9  F015         	call	_CURSOR_HOME	;wreg free
  2567   002812                     
  2568                           ;maincode02.c: 40:     CURSOR_ONOFF(1);
  2569   002812  0E01               	movlw	1
  2570   002814  EC5D  F015         	call	_CURSOR_ONOFF
  2571   002818                     
  2572                           ;maincode02.c: 41:     GENERACARACTER(reloj_1, 0);
  2573   002818  0E19               	movlw	low _reloj_1
  2574   00281A  6E24               	movwf	GENERACARACTER@vector^(0+1280),c
  2575   00281C  0E05               	movlw	high _reloj_1
  2576   00281E  6E25               	movwf	(GENERACARACTER@vector+1)^(0+1280),c
  2577   002820  0E00               	movlw	0
  2578   002822  6E26               	movwf	GENERACARACTER@pos^(0+1280),c
  2579   002824  ECDD  F014         	call	_GENERACARACTER	;wreg free
  2580   002828                     
  2581                           ;maincode02.c: 42:     GENERACARACTER(reloj_2, 1);
  2582   002828  0E11               	movlw	low _reloj_2
  2583   00282A  6E24               	movwf	GENERACARACTER@vector^(0+1280),c
  2584   00282C  0E05               	movlw	high _reloj_2
  2585   00282E  6E25               	movwf	(GENERACARACTER@vector+1)^(0+1280),c
  2586   002830  0E01               	movlw	1
  2587   002832  6E26               	movwf	GENERACARACTER@pos^(0+1280),c
  2588   002834  ECDD  F014         	call	_GENERACARACTER	;wreg free
  2589   002838                     
  2590                           ;maincode02.c: 43:     GENERACARACTER(reloj_3, 2);
  2591   002838  0E09               	movlw	low _reloj_3
  2592   00283A  6E24               	movwf	GENERACARACTER@vector^(0+1280),c
  2593   00283C  0E05               	movlw	high _reloj_3
  2594   00283E  6E25               	movwf	(GENERACARACTER@vector+1)^(0+1280),c
  2595   002840  0E02               	movlw	2
  2596   002842  6E26               	movwf	GENERACARACTER@pos^(0+1280),c
  2597   002844  ECDD  F014         	call	_GENERACARACTER	;wreg free
  2598   002848                     
  2599                           ;maincode02.c: 44:     GENERACARACTER(reloj_4, 3);
  2600   002848  0E01               	movlw	low _reloj_4
  2601   00284A  6E24               	movwf	GENERACARACTER@vector^(0+1280),c
  2602   00284C  0E05               	movlw	high _reloj_4
  2603   00284E  6E25               	movwf	(GENERACARACTER@vector+1)^(0+1280),c
  2604   002850  0E03               	movlw	3
  2605   002852  6E26               	movwf	GENERACARACTER@pos^(0+1280),c
  2606   002854  ECDD  F014         	call	_GENERACARACTER	;wreg free
  2607   002858  0012               	return		;funcret
  2608   00285A                     __end_of_lcd_init:
  2609                           	callstack 0
  2610                           
  2611 ;; *************** function _LCD_CONFIG *****************
  2612 ;; Defined at:
  2613 ;;		line 72 in file "LCD.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;		None
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;		None
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2631 ;;Total ram usage:        1 bytes
  2632 ;; Hardware stack levels used: 1
  2633 ;; Hardware stack levels required when called: 2
  2634 ;; This function calls:
  2635 ;;		_ENVIA_LCD_CMD
  2636 ;;		_ENVIA_NIBBLE
  2637 ;; This function is called by:
  2638 ;;		_lcd_init
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text5
  2643   002920                     __ptext5:
  2644                           	callstack 0
  2645   002920                     _LCD_CONFIG:
  2646                           	callstack 123
  2647   002920                     
  2648                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  2649   002920  90C1               	bcf	193,0,c	;volatile
  2650                           
  2651                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  2652   002922  92C1               	bcf	193,1,c	;volatile
  2653   002924                     
  2654                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  2655   002924  0E30               	movlw	48
  2656   002926  EC9B  F015         	call	_ENVIA_NIBBLE
  2657   00292A                     
  2658                           ;LCD.c: 77:         _delay(24000);
  2659   00292A  0E20               	movlw	32
  2660   00292C  6E24               	movwf	??_LCD_CONFIG^(0+1280),c
  2661   00292E  0E2A               	movlw	42
  2662   002930                     u327:
  2663   002930  2EE8               	decfsz	wreg,f,c
  2664   002932  D7FE               	bra	u327
  2665   002934  2E24               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2666   002936  D7FC               	bra	u327
  2667   002938                     
  2668                           ;LCD.c: 78:         _delay(24000);
  2669   002938  0E20               	movlw	32
  2670   00293A  6E24               	movwf	??_LCD_CONFIG^(0+1280),c
  2671   00293C  0E2A               	movlw	42
  2672   00293E                     u337:
  2673   00293E  2EE8               	decfsz	wreg,f,c
  2674   002940  D7FE               	bra	u337
  2675   002942  2E24               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2676   002944  D7FC               	bra	u337
  2677                           
  2678                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  2679   002946  0E30               	movlw	48
  2680   002948  EC9B  F015         	call	_ENVIA_NIBBLE
  2681   00294C                     
  2682                           ;LCD.c: 83:  _delay(1200);
  2683   00294C  0EF0               	movlw	240
  2684   00294E                     u347:
  2685   00294E  D000               	nop2	
  2686   002950  2EE8               	decfsz	wreg,f,c
  2687   002952  D7FD               	bra	u347
  2688   002954                     
  2689                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  2690   002954  0E30               	movlw	48
  2691   002956  EC9B  F015         	call	_ENVIA_NIBBLE
  2692   00295A                     
  2693                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  2694   00295A  0E20               	movlw	32
  2695   00295C  EC9B  F015         	call	_ENVIA_NIBBLE
  2696   002960                     
  2697                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  2698   002960  0E01               	movlw	1
  2699   002962  EC2C  F015         	call	_ENVIA_LCD_CMD
  2700   002966                     
  2701                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  2702   002966  0E28               	movlw	40
  2703   002968  EC2C  F015         	call	_ENVIA_LCD_CMD
  2704   00296C                     
  2705                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  2706   00296C  0E0F               	movlw	15
  2707   00296E  EC2C  F015         	call	_ENVIA_LCD_CMD
  2708   002972                     
  2709                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  2710   002972  0E06               	movlw	6
  2711   002974  EC2C  F015         	call	_ENVIA_LCD_CMD
  2712   002978                     
  2713                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  2714   002978  0E01               	movlw	1
  2715   00297A  EC2C  F015         	call	_ENVIA_LCD_CMD
  2716   00297E  0012               	return		;funcret
  2717   002980                     __end_of_LCD_CONFIG:
  2718                           	callstack 0
  2719                           
  2720 ;; *************** function _GENERACARACTER *****************
  2721 ;; Defined at:
  2722 ;;		line 153 in file "LCD.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  vector          2    3[COMRAM] PTR const unsigned char 
  2725 ;;		 -> reloj_4(8), reloj_3(8), reloj_2(8), reloj_1(8), 
  2726 ;;  pos             1    5[COMRAM] unsigned char 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  i               1    6[COMRAM] unsigned char 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2738 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2741 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2742 ;;Total ram usage:        4 bytes
  2743 ;; Hardware stack levels used: 1
  2744 ;; Hardware stack levels required when called: 2
  2745 ;; This function calls:
  2746 ;;		_ENVIA_CHAR
  2747 ;;		_ENVIA_LCD_CMD
  2748 ;; This function is called by:
  2749 ;;		_lcd_init
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text6
  2754   0029BA                     __ptext6:
  2755                           	callstack 0
  2756   0029BA                     _GENERACARACTER:
  2757                           	callstack 123
  2758   0029BA                     
  2759                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
  2760   0029BA  5026               	movf	GENERACARACTER@pos^(0+1280),w,c
  2761   0029BC  0D08               	mullw	8
  2762   0029BE  50F3               	movf	243,w,c
  2763   0029C0  0F40               	addlw	64
  2764   0029C2  EC2C  F015         	call	_ENVIA_LCD_CMD
  2765   0029C6                     
  2766                           ;LCD.c: 157:  for(i=0;i<8;i++)
  2767   0029C6  6A27               	clrf	GENERACARACTER@i^(0+1280),c
  2768   0029C8                     l1146:
  2769                           
  2770                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
  2771   0029C8  5027               	movf	GENERACARACTER@i^(0+1280),w,c
  2772   0029CA  2424               	addwf	GENERACARACTER@vector^(0+1280),w,c
  2773   0029CC  6ED9               	movwf	fsr2l,c
  2774   0029CE  0E00               	movlw	0
  2775   0029D0  2025               	addwfc	(GENERACARACTER@vector+1)^(0+1280),w,c
  2776   0029D2  6EDA               	movwf	fsr2h,c
  2777   0029D4  50DF               	movf	indf2,w,c
  2778   0029D6  EC13  F015         	call	_ENVIA_CHAR
  2779   0029DA                     
  2780                           ;LCD.c: 160:  }
  2781   0029DA  2A27               	incf	GENERACARACTER@i^(0+1280),f,c
  2782   0029DC  0E07               	movlw	7
  2783   0029DE  6427               	cpfsgt	GENERACARACTER@i^(0+1280),c
  2784   0029E0  EFF4  F014         	goto	u221
  2785   0029E4  EFF6  F014         	goto	u220
  2786   0029E8                     u221:
  2787   0029E8  EFE4  F014         	goto	l1146
  2788   0029EC                     u220:
  2789   0029EC                     
  2790                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  2791   0029EC  0E80               	movlw	128
  2792   0029EE  EC2C  F015         	call	_ENVIA_LCD_CMD
  2793   0029F2  0012               	return		;funcret
  2794   0029F4                     __end_of_GENERACARACTER:
  2795                           	callstack 0
  2796                           
  2797 ;; *************** function _ENVIA_CHAR *****************
  2798 ;; Defined at:
  2799 ;;		line 50 in file "LCD.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  dato            1    wreg     unsigned char 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  dato            1    1[COMRAM] unsigned char 
  2804 ;;  aux             1    2[COMRAM] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2, status,0, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2815 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2817 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2818 ;;Total ram usage:        2 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 1
  2821 ;; This function calls:
  2822 ;;		_ENVIA_NIBBLE
  2823 ;;		_LEER_LCD
  2824 ;; This function is called by:
  2825 ;;		_ESCRIBE_MENSAJE
  2826 ;;		_GENERACARACTER
  2827 ;;		_pantallon
  2828 ;;		_main
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text7
  2833   002A26                     __ptext7:
  2834                           	callstack 0
  2835   002A26                     _ENVIA_CHAR:
  2836                           	callstack 123
  2837                           
  2838                           ;incstack = 0
  2839                           ;ENVIA_CHAR@dato stored from wreg
  2840   002A26  6E22               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2841   002A28                     
  2842                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2843   002A28  80C1               	bsf	193,0,c	;volatile
  2844   002A2A                     
  2845                           ;LCD.c: 54:  LEER_LCD();
  2846   002A2A  ECBF  F013         	call	_LEER_LCD	;wreg free
  2847   002A2E                     
  2848                           ;LCD.c: 55:  TRISD = 0x00;
  2849   002A2E  6AC9               	clrf	201,c	;volatile
  2850   002A30                     
  2851                           ;LCD.c: 56:         _delay(1200);
  2852   002A30  0EF0               	movlw	240
  2853   002A32                     u357:
  2854   002A32  D000               	nop2	
  2855   002A34  2EE8               	decfsz	wreg,f,c
  2856   002A36  D7FD               	bra	u357
  2857   002A38                     
  2858                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2859   002A38  92C1               	bcf	193,1,c	;volatile
  2860   002A3A                     
  2861                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2862   002A3A  94C1               	bcf	193,2,c	;volatile
  2863   002A3C                     
  2864                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2865   002A3C  80C1               	bsf	193,0,c	;volatile
  2866   002A3E                     
  2867                           ;LCD.c: 61:  aux = dato & 0xF0;
  2868   002A3E  5022               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2869   002A40  0BF0               	andlw	240
  2870   002A42  6E23               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2871   002A44                     
  2872                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2873   002A44  5023               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2874   002A46  EC9B  F015         	call	_ENVIA_NIBBLE
  2875   002A4A                     
  2876                           ;LCD.c: 63:  aux = dato << 4;
  2877   002A4A  3822               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2878   002A4C  0BF0               	andlw	240
  2879   002A4E  6E23               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2880   002A50                     
  2881                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2882   002A50  5023               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2883   002A52  EC9B  F015         	call	_ENVIA_NIBBLE
  2884   002A56  0012               	return		;funcret
  2885   002A58                     __end_of_ENVIA_CHAR:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function _CURSOR_ONOFF *****************
  2889 ;; Defined at:
  2890 ;;		line 35 in file "LCD.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  estado          1    wreg     unsigned char 
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;  estado          1    3[COMRAM] unsigned char 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, status,2, status,0, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2908 ;;Total ram usage:        1 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; Hardware stack levels required when called: 2
  2911 ;; This function calls:
  2912 ;;		_ENVIA_LCD_CMD
  2913 ;; This function is called by:
  2914 ;;		_lcd_init
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text8
  2919   002ABA                     __ptext8:
  2920                           	callstack 0
  2921   002ABA                     _CURSOR_ONOFF:
  2922                           	callstack 123
  2923                           
  2924                           ;incstack = 0
  2925                           ;CURSOR_ONOFF@estado stored from wreg
  2926   002ABA  6E24               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  2927   002ABC                     
  2928                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  2929   002ABC  5024               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  2930   002ABE  A4D8               	btfss	status,2,c
  2931   002AC0  EF64  F015         	goto	u41
  2932   002AC4  EF66  F015         	goto	u40
  2933   002AC8                     u41:
  2934   002AC8  EF69  F015         	goto	l932
  2935   002ACC                     u40:
  2936   002ACC  0E0E               	movlw	14
  2937   002ACE  EC2C  F015         	call	_ENVIA_LCD_CMD
  2938   002AD2                     l932:
  2939                           
  2940                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2941   002AD2  0424               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  2942   002AD4  A4D8               	btfss	status,2,c
  2943   002AD6  EF6F  F015         	goto	u51
  2944   002ADA  EF71  F015         	goto	u50
  2945   002ADE                     u51:
  2946   002ADE  EF74  F015         	goto	l42
  2947   002AE2                     u50:
  2948   002AE2  0E0C               	movlw	12
  2949   002AE4  EC2C  F015         	call	_ENVIA_LCD_CMD
  2950   002AE8                     l42:
  2951   002AE8  0012               	return		;funcret
  2952   002AEA                     __end_of_CURSOR_ONOFF:
  2953                           	callstack 0
  2954                           
  2955 ;; *************** function _CURSOR_HOME *****************
  2956 ;; Defined at:
  2957 ;;		line 30 in file "LCD.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, status,2, status,0, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2975 ;;Total ram usage:        0 bytes
  2976 ;; Hardware stack levels used: 1
  2977 ;; Hardware stack levels required when called: 2
  2978 ;; This function calls:
  2979 ;;		_ENVIA_LCD_CMD
  2980 ;; This function is called by:
  2981 ;;		_lcd_init
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text9
  2986   002B52                     __ptext9:
  2987                           	callstack 0
  2988   002B52                     _CURSOR_HOME:
  2989                           	callstack 123
  2990   002B52                     
  2991                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  2992   002B52  0E02               	movlw	2
  2993   002B54  EC2C  F015         	call	_ENVIA_LCD_CMD
  2994   002B58  0012               	return		;funcret
  2995   002B5A                     __end_of_CURSOR_HOME:
  2996                           	callstack 0
  2997                           
  2998 ;; *************** function _BORRAR_LCD *****************
  2999 ;; Defined at:
  3000 ;;		line 67 in file "LCD.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3018 ;;Total ram usage:        0 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 2
  3021 ;; This function calls:
  3022 ;;		_ENVIA_LCD_CMD
  3023 ;; This function is called by:
  3024 ;;		_lcd_init
  3025 ;;		_pantallon
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text10
  3030   002B5A                     __ptext10:
  3031                           	callstack 0
  3032   002B5A                     _BORRAR_LCD:
  3033                           	callstack 123
  3034   002B5A                     
  3035                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  3036   002B5A  0E01               	movlw	1
  3037   002B5C  EC2C  F015         	call	_ENVIA_LCD_CMD
  3038   002B60  0012               	return		;funcret
  3039   002B62                     __end_of_BORRAR_LCD:
  3040                           	callstack 0
  3041                           
  3042 ;; *************** function _ENVIA_LCD_CMD *****************
  3043 ;; Defined at:
  3044 ;;		line 104 in file "LCD.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  dato            1    wreg     unsigned char 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  dato            1    1[COMRAM] unsigned char 
  3049 ;;  aux             1    2[COMRAM] unsigned char 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, status,2, status,0, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3063 ;;Total ram usage:        2 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; Hardware stack levels required when called: 1
  3066 ;; This function calls:
  3067 ;;		_ENVIA_NIBBLE
  3068 ;;		_LEER_LCD
  3069 ;; This function is called by:
  3070 ;;		_POS_CURSOR
  3071 ;;		_CURSOR_HOME
  3072 ;;		_CURSOR_ONOFF
  3073 ;;		_BORRAR_LCD
  3074 ;;		_LCD_CONFIG
  3075 ;;		_GENERACARACTER
  3076 ;;		_BLINK_CURSOR
  3077 ;;		_DISPLAY_ONOFF
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text11
  3082   002A58                     __ptext11:
  3083                           	callstack 0
  3084   002A58                     _ENVIA_LCD_CMD:
  3085                           	callstack 123
  3086                           
  3087                           ;incstack = 0
  3088                           ;ENVIA_LCD_CMD@dato stored from wreg
  3089   002A58  6E22               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  3090   002A5A                     
  3091                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  3092   002A5A  90C1               	bcf	193,0,c	;volatile
  3093   002A5C                     
  3094                           ;LCD.c: 108:  LEER_LCD();
  3095   002A5C  ECBF  F013         	call	_LEER_LCD	;wreg free
  3096   002A60                     
  3097                           ;LCD.c: 109:  TRISD = 0b00000000;
  3098   002A60  6AC9               	clrf	201,c	;volatile
  3099   002A62                     
  3100                           ;LCD.c: 111:         _delay(1200);
  3101   002A62  0EF0               	movlw	240
  3102   002A64                     u367:
  3103   002A64  D000               	nop2	
  3104   002A66  2EE8               	decfsz	wreg,f,c
  3105   002A68  D7FD               	bra	u367
  3106   002A6A                     
  3107                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  3108   002A6A  92C1               	bcf	193,1,c	;volatile
  3109   002A6C                     
  3110                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  3111   002A6C  94C1               	bcf	193,2,c	;volatile
  3112   002A6E                     
  3113                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  3114   002A6E  90C1               	bcf	193,0,c	;volatile
  3115   002A70                     
  3116                           ;LCD.c: 115:  aux = dato & 0xF0;
  3117   002A70  5022               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  3118   002A72  0BF0               	andlw	240
  3119   002A74  6E23               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  3120   002A76                     
  3121                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  3122   002A76  5023               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  3123   002A78  EC9B  F015         	call	_ENVIA_NIBBLE
  3124   002A7C                     
  3125                           ;LCD.c: 117:  aux = dato<<4;
  3126   002A7C  3822               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  3127   002A7E  0BF0               	andlw	240
  3128   002A80  6E23               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  3129   002A82                     
  3130                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  3131   002A82  5023               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  3132   002A84  EC9B  F015         	call	_ENVIA_NIBBLE
  3133   002A88  0012               	return		;funcret
  3134   002A8A                     __end_of_ENVIA_LCD_CMD:
  3135                           	callstack 0
  3136                           
  3137 ;; *************** function _LEER_LCD *****************
  3138 ;; Defined at:
  3139 ;;		line 121 in file "LCD.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;		None
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  aux             1    0[COMRAM] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3157 ;;Total ram usage:        1 bytes
  3158 ;; Hardware stack levels used: 1
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_ENVIA_CHAR
  3163 ;;		_ENVIA_LCD_CMD
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text12
  3168   00277E                     __ptext12:
  3169                           	callstack 0
  3170   00277E                     _LEER_LCD:
  3171                           	callstack 123
  3172   00277E                     
  3173                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3174   00277E  0EF8               	movlw	248
  3175   002780  6EC9               	movwf	201,c	;volatile
  3176   002782                     
  3177                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  3178   002782  90C1               	bcf	193,0,c	;volatile
  3179   002784                     
  3180                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  3181   002784  82C1               	bsf	193,1,c	;volatile
  3182   002786                     
  3183                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  3184   002786  84C1               	bsf	193,2,c	;volatile
  3185   002788                     
  3186                           ;LCD.c: 128:         _delay(1200);
  3187   002788  0EF0               	movlw	240
  3188   00278A                     u377:
  3189   00278A  D000               	nop2	
  3190   00278C  2EE8               	decfsz	wreg,f,c
  3191   00278E  D7FD               	bra	u377
  3192   002790                     
  3193                           ;LCD.c: 130:  aux = PORTD;
  3194   002790  C4D1 F521          	movff	1233,LEER_LCD@aux	;volatile
  3195   002794                     
  3196                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  3197   002794  94C1               	bcf	193,2,c	;volatile
  3198   002796                     
  3199                           ;LCD.c: 132:         _delay(1200);
  3200   002796  0EF0               	movlw	240
  3201   002798                     u387:
  3202   002798  D000               	nop2	
  3203   00279A  2EE8               	decfsz	wreg,f,c
  3204   00279C  D7FD               	bra	u387
  3205   00279E                     
  3206                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  3207   00279E  84C1               	bsf	193,2,c	;volatile
  3208   0027A0                     
  3209                           ;LCD.c: 135:         _delay(1200);
  3210   0027A0  0EF0               	movlw	240
  3211   0027A2                     u397:
  3212   0027A2  D000               	nop2	
  3213   0027A4  2EE8               	decfsz	wreg,f,c
  3214   0027A6  D7FD               	bra	u397
  3215   0027A8                     
  3216                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3217   0027A8  94C1               	bcf	193,2,c	;volatile
  3218   0027AA                     l850:
  3219                           
  3220                           ;LCD.c: 138:  aux = aux & 0x80;
  3221   0027AA  5021               	movf	LEER_LCD@aux^(0+1280),w,c
  3222   0027AC  0B80               	andlw	128
  3223   0027AE  6E21               	movwf	LEER_LCD@aux^(0+1280),c
  3224                           
  3225                           ;LCD.c: 139:  while(aux == 0x80)
  3226   0027B0  EFEE  F013         	goto	l864
  3227   0027B4                     l67:
  3228                           
  3229                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3230   0027B4  84C1               	bsf	193,2,c	;volatile
  3231   0027B6                     
  3232                           ;LCD.c: 142:             _delay(1200);
  3233   0027B6  0EF0               	movlw	240
  3234   0027B8                     u407:
  3235   0027B8  D000               	nop2	
  3236   0027BA  2EE8               	decfsz	wreg,f,c
  3237   0027BC  D7FD               	bra	u407
  3238   0027BE                     
  3239                           ;LCD.c: 143:             aux = PORTD;
  3240   0027BE  C4D1 F521          	movff	1233,LEER_LCD@aux	;volatile
  3241   0027C2                     
  3242                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3243   0027C2  94C1               	bcf	193,2,c	;volatile
  3244                           
  3245                           ;LCD.c: 145:             _delay(1200);
  3246   0027C4  0EF0               	movlw	240
  3247   0027C6                     u417:
  3248   0027C6  D000               	nop2	
  3249   0027C8  2EE8               	decfsz	wreg,f,c
  3250   0027CA  D7FD               	bra	u417
  3251   0027CC                     
  3252                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3253   0027CC  84C1               	bsf	193,2,c	;volatile
  3254                           
  3255                           ;LCD.c: 147:             _delay(1200);
  3256   0027CE  0EF0               	movlw	240
  3257   0027D0                     u427:
  3258   0027D0  D000               	nop2	
  3259   0027D2  2EE8               	decfsz	wreg,f,c
  3260   0027D4  D7FD               	bra	u427
  3261   0027D6                     
  3262                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  3263   0027D6  94C1               	bcf	193,2,c	;volatile
  3264   0027D8  EFD5  F013         	goto	l850
  3265   0027DC                     l864:
  3266                           
  3267                           ;LCD.c: 139:  while(aux == 0x80)
  3268   0027DC  0E80               	movlw	128
  3269   0027DE  1821               	xorwf	LEER_LCD@aux^(0+1280),w,c
  3270   0027E0  B4D8               	btfsc	status,2,c
  3271   0027E2  EFF5  F013         	goto	u11
  3272   0027E6  EFF7  F013         	goto	u10
  3273   0027EA                     u11:
  3274   0027EA  EFDA  F013         	goto	l67
  3275   0027EE                     u10:
  3276   0027EE  0012               	return		;funcret
  3277   0027F0                     __end_of_LEER_LCD:
  3278                           	callstack 0
  3279                           
  3280 ;; *************** function _ENVIA_NIBBLE *****************
  3281 ;; Defined at:
  3282 ;;		line 93 in file "LCD.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  dato            1    wreg     unsigned char 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  dato            1    0[COMRAM] unsigned char 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  1    wreg      void 
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, status,0
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3299 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3300 ;;Total ram usage:        1 bytes
  3301 ;; Hardware stack levels used: 1
  3302 ;; This function calls:
  3303 ;;		Nothing
  3304 ;; This function is called by:
  3305 ;;		_ENVIA_CHAR
  3306 ;;		_LCD_CONFIG
  3307 ;;		_ENVIA_LCD_CMD
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text13
  3312   002B36                     __ptext13:
  3313                           	callstack 0
  3314   002B36                     _ENVIA_NIBBLE:
  3315                           	callstack 123
  3316                           
  3317                           ;incstack = 0
  3318                           ;ENVIA_NIBBLE@dato stored from wreg
  3319   002B36  6E21               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  3320   002B38                     
  3321                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3322   002B38  0E0F               	movlw	15
  3323   002B3A  16C1               	andwf	193,f,c	;volatile
  3324                           
  3325                           ;LCD.c: 96:  dato &= 0xF0;
  3326   002B3C  0EF0               	movlw	240
  3327   002B3E  1621               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  3328                           
  3329                           ;LCD.c: 97:  LATD|= dato;
  3330   002B40  5021               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  3331   002B42  12C1               	iorwf	193,f,c	;volatile
  3332   002B44                     
  3333                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3334   002B44  84C1               	bsf	193,2,c	;volatile
  3335   002B46                     
  3336                           ;LCD.c: 100:         _delay(1200);
  3337   002B46  0EF0               	movlw	240
  3338   002B48                     u437:
  3339   002B48  D000               	nop2	
  3340   002B4A  2EE8               	decfsz	wreg,f,c
  3341   002B4C  D7FD               	bra	u437
  3342   002B4E                     
  3343                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3344   002B4E  94C1               	bcf	193,2,c	;volatile
  3345   002B50  0012               	return		;funcret
  3346   002B52                     __end_of_ENVIA_NIBBLE:
  3347                           	callstack 0
  3348                           
  3349 ;; *************** function _configuro *****************
  3350 ;; Defined at:
  3351 ;;		line 16 in file "maincode02.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3369 ;;Total ram usage:        0 bytes
  3370 ;; Hardware stack levels used: 1
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_main
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text14
  3379   002AEA                     __ptext14:
  3380                           	callstack 0
  3381   002AEA                     _configuro:
  3382                           	callstack 126
  3383   002AEA                     
  3384                           ;maincode02.c: 17:     OSCCON1 = 0x60;
  3385   002AEA  0E60               	movlw	96
  3386   002AEC  0100               	movlb	0	; () banked
  3387   002AEE  6FAD               	movwf	173,b	;volatile
  3388                           
  3389                           ;maincode02.c: 18:     OSCFRQ = 0x06;
  3390   002AF0  0E06               	movlw	6
  3391   002AF2  6FB1               	movwf	177,b	;volatile
  3392   002AF4                     
  3393                           ; BSR set to: 0
  3394                           ;maincode02.c: 19:     OSCENbits.HFOEN = 1;
  3395   002AF4  8DB3               	bsf	179,6,b	;volatile
  3396   002AF6                     
  3397                           ; BSR set to: 0
  3398                           ;maincode02.c: 20:     TRISFbits.TRISF0 = 0;
  3399   002AF6  90CB               	bcf	203,0,c	;volatile
  3400   002AF8                     
  3401                           ; BSR set to: 0
  3402                           ;maincode02.c: 21:     ANSELFbits.ANSELF0 = 0;
  3403   002AF8  0104               	movlb	4	; () banked
  3404   002AFA  9128               	bcf	40,0,b	;volatile
  3405   002AFC                     
  3406                           ; BSR set to: 4
  3407                           ;maincode02.c: 22:     LATFbits.LATF0 = 1;
  3408   002AFC  80C3               	bsf	195,0,c	;volatile
  3409   002AFE                     
  3410                           ; BSR set to: 4
  3411                           ;maincode02.c: 24:     TRISAbits.TRISA0 = 1;
  3412   002AFE  80C6               	bsf	198,0,c	;volatile
  3413   002B00                     
  3414                           ; BSR set to: 4
  3415                           ;maincode02.c: 25:     ANSELAbits.ANSELA0 = 1;
  3416   002B00  8100               	bsf	0,0,b	;volatile
  3417   002B02                     
  3418                           ; BSR set to: 4
  3419                           ;maincode02.c: 26:     ADCON0bits.CS = 1;
  3420   002B02  0103               	movlb	3	; () banked
  3421   002B04  89F3               	bsf	243,4,b	;volatile
  3422   002B06                     
  3423                           ; BSR set to: 3
  3424                           ;maincode02.c: 27:     ADREF = 0x00;
  3425   002B06  6BF8               	clrf	248,b	;volatile
  3426   002B08                     
  3427                           ; BSR set to: 3
  3428                           ;maincode02.c: 28:     ADPCH = 0x00;
  3429   002B08  6BEC               	clrf	236,b	;volatile
  3430   002B0A                     
  3431                           ; BSR set to: 3
  3432                           ;maincode02.c: 29:     ADCON0bits.ADON = 1;
  3433   002B0A  8FF3               	bsf	243,7,b	;volatile
  3434                           
  3435                           ;maincode02.c: 30:     ADCON0bits.ADFM = 1;
  3436   002B0C  51F3               	movf	243,w,b	;volatile
  3437   002B0E  0BF3               	andlw	-13
  3438   002B10  0904               	iorlw	4
  3439   002B12  6FF3               	movwf	243,b	;volatile
  3440   002B14                     
  3441                           ; BSR set to: 3
  3442   002B14  0012               	return		;funcret
  3443   002B16                     __end_of_configuro:
  3444                           	callstack 0
  3445                           
  3446 ;; *************** function ___lwmod *****************
  3447 ;; Defined at:
  3448 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  dividend        2    0[COMRAM] unsigned int 
  3451 ;;  divisor         2    2[COMRAM] unsigned int 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;  counter         1    4[COMRAM] unsigned char 
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  2    0[COMRAM] unsigned int 
  3456 ;; Registers used:
  3457 ;;		wreg, status,2, status,0
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3463 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3464 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3466 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3467 ;;Total ram usage:        5 bytes
  3468 ;; Hardware stack levels used: 1
  3469 ;; This function calls:
  3470 ;;		Nothing
  3471 ;; This function is called by:
  3472 ;;		_main
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text15
  3477   00285A                     __ptext15:
  3478                           	callstack 0
  3479   00285A                     ___lwmod:
  3480                           	callstack 126
  3481   00285A  5023               	movf	___lwmod@divisor^(0+1280),w,c
  3482   00285C  1024               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  3483   00285E  B4D8               	btfsc	status,2,c
  3484   002860  EF34  F014         	goto	u261
  3485   002864  EF36  F014         	goto	u260
  3486   002868                     u261:
  3487   002868  EF5A  F014         	goto	l656
  3488   00286C                     u260:
  3489   00286C  0E01               	movlw	1
  3490   00286E  6E25               	movwf	___lwmod@counter^(0+1280),c
  3491   002870  EF3E  F014         	goto	l1220
  3492   002874                     l1218:
  3493   002874  90D8               	bcf	status,0,c
  3494   002876  3623               	rlcf	___lwmod@divisor^(0+1280),f,c
  3495   002878  3624               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  3496   00287A  2A25               	incf	___lwmod@counter^(0+1280),f,c
  3497   00287C                     l1220:
  3498   00287C  AE24               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  3499   00287E  EF43  F014         	goto	u271
  3500   002882  EF45  F014         	goto	u270
  3501   002886                     u271:
  3502   002886  EF3A  F014         	goto	l1218
  3503   00288A                     u270:
  3504   00288A                     l1222:
  3505   00288A  5023               	movf	___lwmod@divisor^(0+1280),w,c
  3506   00288C  5C21               	subwf	___lwmod@dividend^(0+1280),w,c
  3507   00288E  5024               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  3508   002890  5822               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  3509   002892  A0D8               	btfss	status,0,c
  3510   002894  EF4E  F014         	goto	u281
  3511   002898  EF50  F014         	goto	u280
  3512   00289C                     u281:
  3513   00289C  EF54  F014         	goto	l1226
  3514   0028A0                     u280:
  3515   0028A0  5023               	movf	___lwmod@divisor^(0+1280),w,c
  3516   0028A2  5E21               	subwf	___lwmod@dividend^(0+1280),f,c
  3517   0028A4  5024               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  3518   0028A6  5A22               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  3519   0028A8                     l1226:
  3520   0028A8  90D8               	bcf	status,0,c
  3521   0028AA  3224               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  3522   0028AC  3223               	rrcf	___lwmod@divisor^(0+1280),f,c
  3523   0028AE  2E25               	decfsz	___lwmod@counter^(0+1280),f,c
  3524   0028B0  EF45  F014         	goto	l1222
  3525   0028B4                     l656:
  3526   0028B4  C521  F521         	movff	___lwmod@dividend,?___lwmod
  3527   0028B8  C522  F522         	movff	___lwmod@dividend+1,?___lwmod+1
  3528   0028BC  0012               	return		;funcret
  3529   0028BE                     __end_of___lwmod:
  3530                           	callstack 0
  3531                           
  3532 ;; *************** function ___lwdiv *****************
  3533 ;; Defined at:
  3534 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  dividend        2    5[COMRAM] unsigned int 
  3537 ;;  divisor         2    7[COMRAM] unsigned int 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  quotient        2    9[COMRAM] unsigned int 
  3540 ;;  counter         1   11[COMRAM] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  2    5[COMRAM] unsigned int 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3551 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3553 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3554 ;;Total ram usage:        7 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_main
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text16
  3564   00270A                     __ptext16:
  3565                           	callstack 0
  3566   00270A                     ___lwdiv:
  3567                           	callstack 126
  3568   00270A  0E00               	movlw	0
  3569   00270C  6E2B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  3570   00270E  0E00               	movlw	0
  3571   002710  6E2A               	movwf	___lwdiv@quotient^(0+1280),c
  3572   002712  5028               	movf	___lwdiv@divisor^(0+1280),w,c
  3573   002714  1029               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  3574   002716  B4D8               	btfsc	status,2,c
  3575   002718  EF90  F013         	goto	u231
  3576   00271C  EF92  F013         	goto	u230
  3577   002720                     u231:
  3578   002720  EFBA  F013         	goto	l646
  3579   002724                     u230:
  3580   002724  0E01               	movlw	1
  3581   002726  6E2C               	movwf	___lwdiv@counter^(0+1280),c
  3582   002728  EF9A  F013         	goto	l1200
  3583   00272C                     l1198:
  3584   00272C  90D8               	bcf	status,0,c
  3585   00272E  3628               	rlcf	___lwdiv@divisor^(0+1280),f,c
  3586   002730  3629               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  3587   002732  2A2C               	incf	___lwdiv@counter^(0+1280),f,c
  3588   002734                     l1200:
  3589   002734  AE29               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  3590   002736  EF9F  F013         	goto	u241
  3591   00273A  EFA1  F013         	goto	u240
  3592   00273E                     u241:
  3593   00273E  EF96  F013         	goto	l1198
  3594   002742                     u240:
  3595   002742                     l1202:
  3596   002742  90D8               	bcf	status,0,c
  3597   002744  362A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  3598   002746  362B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  3599   002748  5028               	movf	___lwdiv@divisor^(0+1280),w,c
  3600   00274A  5C26               	subwf	___lwdiv@dividend^(0+1280),w,c
  3601   00274C  5029               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  3602   00274E  5827               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  3603   002750  A0D8               	btfss	status,0,c
  3604   002752  EFAD  F013         	goto	u251
  3605   002756  EFAF  F013         	goto	u250
  3606   00275A                     u251:
  3607   00275A  EFB4  F013         	goto	l1210
  3608   00275E                     u250:
  3609   00275E  5028               	movf	___lwdiv@divisor^(0+1280),w,c
  3610   002760  5E26               	subwf	___lwdiv@dividend^(0+1280),f,c
  3611   002762  5029               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  3612   002764  5A27               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  3613   002766  802A               	bsf	___lwdiv@quotient^(0+1280),0,c
  3614   002768                     l1210:
  3615   002768  90D8               	bcf	status,0,c
  3616   00276A  3229               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  3617   00276C  3228               	rrcf	___lwdiv@divisor^(0+1280),f,c
  3618   00276E  2E2C               	decfsz	___lwdiv@counter^(0+1280),f,c
  3619   002770  EFA1  F013         	goto	l1202
  3620   002774                     l646:
  3621   002774  C52A  F526         	movff	___lwdiv@quotient,?___lwdiv
  3622   002778  C52B  F527         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3623   00277C  0012               	return		;funcret
  3624   00277E                     __end_of___lwdiv:
  3625                           	callstack 0
  3626                           
  3627                           	psect	rparam
  3628   000001                     ___rparam_used  equ	1
  3629   000000                     ___param_bank   equ	0
  3630   000000                     __Lparam        equ	__Lrparam
  3631   000000                     __Hparam        equ	__Hrparam
  3632                           
  3633                           	psect	config
  3634                           
  3635                           ;Config register CONFIG1 @ 0x300000
  3636                           ;	External Oscillator Selection
  3637                           ;	FEXTOSC = OFF, Oscillator not enabled
  3638                           ;	Reset Oscillator Selection
  3639                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3640   300000                     	org	3145728
  3641   300000  FC                 	db	252
  3642                           
  3643                           ;Config register CONFIG2 @ 0x300001
  3644                           ;	Clock out Enable bit
  3645                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3646                           ;	PRLOCKED One-Way Set Enable bit
  3647                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3648                           ;	Clock Switch Enable bit
  3649                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3650                           ;	Fail-Safe Clock Monitor Enable bit
  3651                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3652   300001                     	org	3145729
  3653   300001  FF                 	db	255
  3654                           
  3655                           ;Config register CONFIG3 @ 0x300002
  3656                           ;	MCLR Enable bit
  3657                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3658                           ;	Power-up timer selection bits
  3659                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  3660                           ;	Multi-vector enable bit
  3661                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3662                           ;	IVTLOCK bit One-way set enable bit
  3663                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3664                           ;	Low Power BOR Enable bit
  3665                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3666                           ;	Brown-out Reset Enable bits
  3667                           ;	BOREN = OFF, Brown-out Reset disabled
  3668   300002                     	org	3145730
  3669   300002  3D                 	db	61
  3670                           
  3671                           ;Config register CONFIG4 @ 0x300003
  3672                           ;	Brown-out Reset Voltage Selection bits
  3673                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3674                           ;	ZCD Disable bit
  3675                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3676                           ;	PPSLOCK bit One-Way Set Enable bit
  3677                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3678                           ;	Stack Full/Underflow Reset Enable bit
  3679                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3680                           ;	Low Voltage Programming Enable bit
  3681                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3682                           ;	Extended Instruction Set Enable bit
  3683                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3684   300003                     	org	3145731
  3685   300003  DF                 	db	223
  3686                           
  3687                           ;Config register CONFIG5 @ 0x300004
  3688                           ;	WDT Period selection bits
  3689                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3690                           ;	WDT operating mode
  3691                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3692   300004                     	org	3145732
  3693   300004  9F                 	db	159
  3694                           
  3695                           ;Config register CONFIG6 @ 0x300005
  3696                           ;	WDT Window Select bits
  3697                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3698                           ;	WDT input clock selector
  3699                           ;	WDTCCS = SC, Software Control
  3700   300005                     	org	3145733
  3701   300005  FF                 	db	255
  3702                           
  3703                           ;Config register CONFIG7 @ 0x300006
  3704                           ;	Boot Block Size selection bits
  3705                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3706                           ;	Boot Block enable bit
  3707                           ;	BBEN = OFF, Boot block disabled
  3708                           ;	Storage Area Flash enable bit
  3709                           ;	SAFEN = OFF, SAF disabled
  3710                           ;	Background Debugger
  3711                           ;	DEBUG = OFF, Background Debugger disabled
  3712   300006                     	org	3145734
  3713   300006  FF                 	db	255
  3714                           
  3715                           ;Config register CONFIG8 @ 0x300007
  3716                           ;	Boot Block Write Protection bit
  3717                           ;	WRTB = OFF, Boot Block not Write protected
  3718                           ;	Configuration Register Write Protection bit
  3719                           ;	WRTC = OFF, Configuration registers not Write protected
  3720                           ;	Data EEPROM Write Protection bit
  3721                           ;	WRTD = OFF, Data EEPROM not Write protected
  3722                           ;	SAF Write protection bit
  3723                           ;	WRTSAF = OFF, SAF not Write Protected
  3724                           ;	Application Block write protection bit
  3725                           ;	WRTAPP = OFF, Application Block not write protected
  3726   300007                     	org	3145735
  3727   300007  FF                 	db	255
  3728                           
  3729                           ;Config register CONFIG10 @ 0x300009
  3730                           ;	PFM and Data EEPROM Code Protection bit
  3731                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3732   300009                     	org	3145737
  3733   300009  FF                 	db	255
  3734                           tosu	equ	0x4FF
  3735                           tosh	equ	0x4FE
  3736                           tosl	equ	0x4FD
  3737                           stkptr	equ	0x4FC
  3738                           pclatu	equ	0x4FB
  3739                           pclath	equ	0x4FA
  3740                           pcl	equ	0x4F9
  3741                           tblptru	equ	0x4F8
  3742                           tblptrh	equ	0x4F7
  3743                           tblptrl	equ	0x4F6
  3744                           tablat	equ	0x4F5
  3745                           prodh	equ	0x4F4
  3746                           prodl	equ	0x4F3
  3747                           indf0	equ	0x4EF
  3748                           postinc0	equ	0x4EE
  3749                           postdec0	equ	0x4ED
  3750                           preinc0	equ	0x4EC
  3751                           plusw0	equ	0x4EB
  3752                           fsr0h	equ	0x4EA
  3753                           fsr0l	equ	0x4E9
  3754                           wreg	equ	0x4E8
  3755                           indf1	equ	0x4E7
  3756                           postinc1	equ	0x4E6
  3757                           postdec1	equ	0x4E5
  3758                           preinc1	equ	0x4E4
  3759                           plusw1	equ	0x4E3
  3760                           fsr1h	equ	0x4E2
  3761                           fsr1l	equ	0x4E1
  3762                           bsr	equ	0x4E0
  3763                           indf2	equ	0x4DF
  3764                           postinc2	equ	0x4DE
  3765                           postdec2	equ	0x4DD
  3766                           preinc2	equ	0x4DC
  3767                           plusw2	equ	0x4DB
  3768                           fsr2h	equ	0x4DA
  3769                           fsr2l	equ	0x4D9
  3770                           status	equ	0x4D8

Data Sizes:
    Strings     34
    Constant    0
    Data        32
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      48
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[14]), STR_3(CODE[6]), 

    GENERACARACTER@vector	PTR const unsigned char  size(2) Largest target is 8
		 -> reloj_1(COMRAM[8]), reloj_2(COMRAM[8]), reloj_3(COMRAM[8]), reloj_4(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    _pantallon->_ESCRIBE_MENSAJE
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _lcd_init->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    ___lwdiv->___lwmod

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2462
                                             12 COMRAM     2     2      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___lwdiv
                            ___lwmod
                          _configuro
                           _lcd_init
                          _pantallon
 ---------------------------------------------------------------------------------
 (1) _pantallon                                            2     2      0     682
                                              7 COMRAM     2     2      0
                         _BORRAR_LCD
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     225
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE                                      4     2      2     217
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     885
                                              7 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     1      3     360
                                              3 COMRAM     4     1      3
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     165
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     168
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _configuro
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _pantallon
     _BORRAR_LCD
     _ENVIA_CHAR
     _ESCRIBE_MENSAJE
     _POS_CURSOR

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh        831      0       0      0.0%
BITBIGSFRh         268      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBIGSFRlll       173      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     14      48     50.5%
BITBIGSFRllh         5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      48      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Jun 13 16:39:20 2025

                     l24 29B8                       l42 2AE8                       l51 2A56  
                     l60 2B50                       l37 2B58                       l54 2B60  
                     l63 2A88                       l48 2AB8                       l57 297E  
                     l74 29F2                       l67 27B4                       l69 27EE  
                     u10 27EE                       u11 27EA                       u40 2ACC  
                     u41 2AC8                       u50 2AE2                       u51 2ADE  
          ENVIA_CHAR@aux 0523                      l141 291E                      l135 2B14  
                    l138 2858                      l147 2634                      l900 2A2E  
                    l653 277C                      l646 2774                      l830 2782  
                    l910 2A3E                      l902 2A30                      l663 28BC  
                    l656 28B4                      l840 2794                      l832 2784  
                    l912 2A44                      l904 2A38                      l850 27AA  
                    l842 2796                      l834 2786                      l930 2ACC  
                    l914 2A4A                      l906 2A3A                      l860 27D6  
                    l852 27B6                      l844 279E                      l836 2788  
                    l828 277E                      l932 2AD2                      l916 2A50  
                    l908 2A3C                      l870 2B46                      l854 27BE  
                    l846 27A0                      l838 2790                      l926 2B52  
                    l934 2AE2                      l950 292A                      l872 2B4E  
                    l856 27C2                      l864 27DC                      l848 27A8  
                    l880 2A62                      l944 2B5A                      l928 2ABC  
                    l960 2960                      l952 2938                      l866 2B38  
                    l858 27CC                      l890 2A76                      l882 2A6A  
                    l874 2A5A                      l962 2966                      l954 294C  
                    l946 2920                      l868 2B44                      l892 2A7C  
                    l884 2A6C                      l876 2A5C                      l964 296C  
                    l956 2954                      l948 2924                      l990 2AF6  
                    l894 2A82                      l886 2A6E                      l878 2A60  
                    l966 2972                      l958 295A                      l992 2AF8  
                    l888 2A70                      l896 2A28                      l968 2978  
                    l994 2AFC                      l986 2AEA                      l898 2A2A  
                    l996 2AFE                      l988 2AF4                      l998 2B00  
                    u200 29B0                      u201 29AC                      u210 2AB8  
                    u211 2AB4                      u220 29EC                      u221 29E8  
                    u230 2724                      u231 2720                      u240 2742  
                    u241 273E                      u250 275E                      u251 275A  
                    u307 290C                      u260 286C                      u261 2868  
                    u317 2800                      u270 288A                      u190 2992  
                    u271 2886                      u407 27B8                      u327 2930  
                    u191 298E                      u280 28A0                      u281 289C  
                    u417 27C6                      u337 293E                      u290 2642  
                    u427 27D0                      u347 294E                      u291 263E  
                    u437 2B48                      u357 2A32                      u367 2A64  
                    u377 278A                      u387 2798                      u397 27A2  
            LEER_LCD@aux 0521                      wreg 04E8             ?_CURSOR_HOME 0521  
         ??_ENVIA_NIBBLE 0521           ENVIA_CHAR@dato 0522                     l1000 2B02  
                   l1002 2B06                     l1004 2B08                     l1006 2B0A  
                   l1200 2734                     l1210 2768                     l1202 2742  
                   l1130 2A8A                     l1122 2982                     l1212 276E  
                   l1204 2748                     l1220 287C                     l1140 29C6  
                   l1132 2A92                     l1124 2992                     l1206 275E  
                   l1222 288A                     l1214 285A                     l1150 29DC  
                   l1134 2AA4                     l1126 299E                     l1230 2624  
                   l1208 2766                     l1224 28A0                     l1216 286C  
                   l1152 29EC                     l1160 280A                     l1136 2AA6  
                   l1128 29B0                     l1240 2654                     l1232 2628  
                   l1226 28A8                     l1218 2874                     l1146 29C8  
                   l1138 29BA                     l1170 2838                     l1162 280E  
                   l1154 27F0                     l1250 26E6                     l1242 265E  
                   l1234 262C                     l1228 28AE                     l1148 29DA  
                   l1172 2848                     l1164 2812                     l1156 27F6  
                   l1180 28DA                     l1244 266A                     l1236 2630  
                   l1166 2818                     l1158 27FA                     l1190 291A  
                   l1182 28E0                     l1174 28BE                     l1246 2686  
                   l1238 2642                     l1192 270A                     l1168 2828  
                   l1184 28F6                     l1176 28C8                     l1248 26B6  
                   l1194 2712                     l1186 28FC                     l1178 28D4  
                   l1196 2724                     l1188 2902                     l1198 272C  
                   STR_1 260F                     STR_2 2601                     STR_3 261D  
                   _LATD 04C1                     _main 2624                     indf2 04DF  
                   fsr1l 04E1                     fsr2l 04D9                     prodl 04F3  
                   start FFFC            ?_CURSOR_ONOFF 0521             ___param_bank 0000  
        ??_ENVIA_LCD_CMD 0522         __end_of_LEER_LCD 27F0           _GENERACARACTER 29BA  
                  ?_main 0521                    _ADPCH 03EC                    _ADREF 03F8  
        __end_of___lwdiv 277E          __end_of___lwmod 28BE                    _PORTD 04D1  
                  _TRISD 04C9              ?_POS_CURSOR 0524                    tablat 04F5  
                  status 04D8           ??_CURSOR_ONOFF 0524          __initialization 29F4  
           __end_of_main 270A   __end_of_GENERACARACTER 29F4          _ESCRIBE_MENSAJE 2A8A  
                 ??_main 052D            __activetblptr 0001                   _ADRESH 03EB  
                 _ADRESL 03EA                   _ANSELD 0418                   _OSCFRQ 00B1  
       __end_of_lcd_init 285A     __end_of_ENVIA_NIBBLE 2B52                ??___lwdiv 052A  
              ??___lwmod 0525          ?_GENERACARACTER 0524                   isa$std 0001  
           __pdataCOMRAM 0501             __mediumconst 2600                   tblptrh 04F7  
                 tblptrl 04F6                   tblptru 04F8             ??_BORRAR_LCD 0524  
              ?_LEER_LCD 0521               __accesstop 0560  __end_of__initialization 2A18  
           ??_LCD_CONFIG 0524            ___rparam_used 0001             ??_ENVIA_CHAR 0522  
__end_of_ESCRIBE_MENSAJE 2ABA           __pcstackCOMRAM 0521       __end_of_BORRAR_LCD 2B62  
       ENVIA_LCD_CMD@aux 0523     __end_of_CURSOR_ONOFF 2AEA       __end_of_LCD_CONFIG 2980  
     __end_of_ENVIA_CHAR 2A58               ??_LEER_LCD 0521         ENVIA_NIBBLE@dato 0521  
                _OSCCON1 00AD             ??_POS_CURSOR 0525                ?_lcd_init 0521  
                __Hparam 0000                  __Lparam 0000         ?_ESCRIBE_MENSAJE 0524  
              _ADC_value 052F        __end_of_configuro 2B16                  ___lwdiv 270A  
                ___lwmod 285A             __psmallconst 2600    __end_of_ENVIA_LCD_CMD 2A8A  
                __pcinit 29F4       __end_of_POS_CURSOR 29BA                  __ramtop 2600  
                __ptext0 2624                  __ptext1 28BE                  __ptext2 2980  
                __ptext3 2A8A                  __ptext4 27F0                  __ptext5 2920  
                __ptext6 29BA                  __ptext7 2A26                  __ptext8 2ABA  
                __ptext9 2B52          GENERACARACTER@i 0527                  _reloj_1 0519  
                _reloj_2 0511                  _reloj_3 0509                  _reloj_4 0501  
      __end_of_pantallon 2920               ??_lcd_init 0528             _ENVIA_NIBBLE 2B36  
   end_of_initialization 2A18         ??_GENERACARACTER 0527                _OSCENbits 00B3  
                postdec1 04E5                  postinc0 04EE     GENERACARACTER@vector 0524  
              _TRISAbits 04C6                _TRISFbits 04CB             _CURSOR_ONOFF 2ABA  
     CURSOR_ONOFF@estado 0524            __pidataCOMRAM 2B16            ??_CURSOR_HOME 0524  
    start_initialization 29F4        ENVIA_LCD_CMD@dato 0522              __pbssCOMRAM 052F  
    __end_of_CURSOR_HOME 2B5A         ___lwdiv@dividend 0526                 ?___lwdiv 0526  
               ?___lwmod 0521        GENERACARACTER@pos 0526                _configuro 2AEA  
            __smallconst 2600         ___lwdiv@quotient 052A                _pantallon 28BE  
               _LEER_LCD 277E                 _LATDbits 04C1                 _LATFbits 04C3  
       ESCRIBE_MENSAJE@i 0527           POS_CURSOR@fila 0525               ?_configuro 0521  
             _ADCON0bits 03F3              _CURSOR_HOME 2B52                copy_data0 2A08  
             ?_pantallon 0521                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 2600               _ANSELAbits 0400               _ANSELFbits 0428  
        ___lwdiv@divisor 0528          ___lwdiv@counter 052C                 __ptext10 2B5A  
               __ptext11 2A58                 __ptext12 277E                 __ptext13 2B36  
               __ptext14 2AEA                 __ptext15 285A                 __ptext16 270A  
             _BORRAR_LCD 2B5A                 _lcd_init 27F0               _LCD_CONFIG 2920  
             _ENVIA_CHAR 2A26                 isa$xinst 0000            _ENVIA_LCD_CMD 2A58  
            ??_configuro 0521        ??_ESCRIBE_MENSAJE 0526    ESCRIBE_MENSAJE@cadena 0524  
            ??_pantallon 0528         ___lwmod@dividend 0521           ?_ENVIA_LCD_CMD 0521  
        ___lwmod@divisor 0523          ___lwmod@counter 0525              ?_BORRAR_LCD 0521  
          ?_ENVIA_NIBBLE 0521               _POS_CURSOR 2980              ?_LCD_CONFIG 0521  
     ESCRIBE_MENSAJE@tam 0525              ?_ENVIA_CHAR 0521        POS_CURSOR@columna 0524  
