

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Jun 06 17:49:15 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 04/02/2025 GMT
    29                           ; 
    30                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F57Q43 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   0004E0                     bsr             equ	1248
    63   0004E9                     fsr0            equ	1257
    64   0004EA                     fsr0h           equ	1258
    65   0004E9                     fsr0l           equ	1257
    66   0004E1                     fsr1            equ	1249
    67   0004E2                     fsr1h           equ	1250
    68   0004E1                     fsr1l           equ	1249
    69   0004D9                     fsr2            equ	1241
    70   0004DA                     fsr2h           equ	1242
    71   0004D9                     fsr2l           equ	1241
    72   0004EF                     indf0           equ	1263
    73   0004E7                     indf1           equ	1255
    74   0004DF                     indf2           equ	1247
    75   0004D6                     intcon          equ	1238
    76   000041                     nvmcon          equ	65
    77   0004F9                     pcl             equ	1273
    78   0004FA                     pclath          equ	1274
    79   0004FB                     pclatu          equ	1275
    80   0004EB                     plusw0          equ	1259
    81   0004E3                     plusw1          equ	1251
    82   0004DB                     plusw2          equ	1243
    83   0004ED                     postdec0        equ	1261
    84   0004E5                     postdec1        equ	1253
    85   0004DD                     postdec2        equ	1245
    86   0004EE                     postinc0        equ	1262
    87   0004E6                     postinc1        equ	1254
    88   0004DE                     postinc2        equ	1246
    89   0004EC                     preinc0         equ	1260
    90   0004E4                     preinc1         equ	1252
    91   0004DC                     preinc2         equ	1244
    92   0004F3                     prod            equ	1267
    93   0004F4                     prodh           equ	1268
    94   0004F3                     prodl           equ	1267
    95   0004D8                     status          equ	1240
    96   0004F5                     tablat          equ	1269
    97   0004F6                     tblptr          equ	1270
    98   0004F7                     tblptrh         equ	1271
    99   0004F6                     tblptrl         equ	1270
   100   0004F8                     tblptru         equ	1272
   101   0004FD                     tosl            equ	1277
   102   0004E8                     wreg            equ	1256
   103   000039                     CLKRCON         equ	57	;# 
   104   00003A                     CLKRCLK         equ	58	;# 
   105   000040                     NVMCON0         equ	64	;# 
   106   000041                     NVMCON1         equ	65	;# 
   107   000042                     NVMLOCK         equ	66	;# 
   108   000043                     NVMADR          equ	67	;# 
   109   000043                     NVMADRL         equ	67	;# 
   110   000044                     NVMADRH         equ	68	;# 
   111   000045                     NVMADRU         equ	69	;# 
   112   000046                     NVMDAT          equ	70	;# 
   113   000046                     NVMDATL         equ	70	;# 
   114   000047                     NVMDATH         equ	71	;# 
   115   000048                     VREGCON         equ	72	;# 
   116   000049                     BORCON          equ	73	;# 
   117   00004A                     HLVDCON0        equ	74	;# 
   118   00004B                     HLVDCON1        equ	75	;# 
   119   00004C                     ZCDCON          equ	76	;# 
   120   000060                     PMD0            equ	96	;# 
   121   000061                     PMD1            equ	97	;# 
   122   000063                     PMD3            equ	99	;# 
   123   000064                     PMD4            equ	100	;# 
   124   000065                     PMD5            equ	101	;# 
   125   000066                     PMD6            equ	102	;# 
   126   000067                     PMD7            equ	103	;# 
   127   000068                     PMD8            equ	104	;# 
   128   00006A                     MD1CON0         equ	106	;# 
   129   00006B                     MD1CON1         equ	107	;# 
   130   00006C                     MD1SRC          equ	108	;# 
   131   00006D                     MD1CARL         equ	109	;# 
   132   00006E                     MD1CARH         equ	110	;# 
   133   00006F                     CMOUT           equ	111	;# 
   134   000070                     CM1CON0         equ	112	;# 
   135   000071                     CM1CON1         equ	113	;# 
   136   000072                     CM1NCH          equ	114	;# 
   137   000073                     CM1PCH          equ	115	;# 
   138   000074                     CM2CON0         equ	116	;# 
   139   000075                     CM2CON1         equ	117	;# 
   140   000076                     CM2NCH          equ	118	;# 
   141   000077                     CM2PCH          equ	119	;# 
   142   000078                     WDTCON0         equ	120	;# 
   143   000079                     WDTCON1         equ	121	;# 
   144   00007A                     WDTPS           equ	122	;# 
   145   00007A                     WDTPSL          equ	122	;# 
   146   00007B                     WDTPSH          equ	123	;# 
   147   00007C                     WDTTMR          equ	124	;# 
   148   00007D                     DAC1DAT         equ	125	;# 
   149   00007D                     DAC1DATL        equ	125	;# 
   150   00007F                     DAC1CON         equ	127	;# 
   151   000080                     SPI1RXB         equ	128	;# 
   152   000081                     SPI1TXB         equ	129	;# 
   153   000082                     SPI1TCNT        equ	130	;# 
   154   000082                     SPI1TCNTL       equ	130	;# 
   155   000083                     SPI1TCNTH       equ	131	;# 
   156   000084                     SPI1CON0        equ	132	;# 
   157   000085                     SPI1CON1        equ	133	;# 
   158   000086                     SPI1CON2        equ	134	;# 
   159   000087                     SPI1STATUS      equ	135	;# 
   160   000088                     SPI1TWIDTH      equ	136	;# 
   161   000089                     SPI1BAUD        equ	137	;# 
   162   00008A                     SPI1INTF        equ	138	;# 
   163   00008B                     SPI1INTE        equ	139	;# 
   164   00008C                     SPI1CLK         equ	140	;# 
   165   00008D                     SPI2RXB         equ	141	;# 
   166   00008E                     SPI2TXB         equ	142	;# 
   167   00008F                     SPI2TCNT        equ	143	;# 
   168   00008F                     SPI2TCNTL       equ	143	;# 
   169   000090                     SPI2TCNTH       equ	144	;# 
   170   000091                     SPI2CON0        equ	145	;# 
   171   000092                     SPI2CON1        equ	146	;# 
   172   000093                     SPI2CON2        equ	147	;# 
   173   000094                     SPI2STATUS      equ	148	;# 
   174   000095                     SPI2TWIDTH      equ	149	;# 
   175   000096                     SPI2BAUD        equ	150	;# 
   176   000097                     SPI2INTF        equ	151	;# 
   177   000098                     SPI2INTE        equ	152	;# 
   178   000099                     SPI2CLK         equ	153	;# 
   179   0000AC                     ACTCON          equ	172	;# 
   180   0000AD                     OSCCON1         equ	173	;# 
   181   0000AE                     OSCCON2         equ	174	;# 
   182   0000AF                     OSCCON3         equ	175	;# 
   183   0000B0                     OSCTUNE         equ	176	;# 
   184   0000B1                     OSCFRQ          equ	177	;# 
   185   0000B1                     OSCFREQ         equ	177	;# 
   186   0000B2                     OSCSTAT         equ	178	;# 
   187   0000B2                     OSCSTAT1        equ	178	;# 
   188   0000B3                     OSCEN           equ	179	;# 
   189   0000B4                     PRLOCK          equ	180	;# 
   190   0000B5                     SCANPR          equ	181	;# 
   191   0000B6                     DMA1PR          equ	182	;# 
   192   0000B7                     DMA2PR          equ	183	;# 
   193   0000B8                     DMA3PR          equ	184	;# 
   194   0000B9                     DMA4PR          equ	185	;# 
   195   0000BA                     DMA5PR          equ	186	;# 
   196   0000BB                     DMA6PR          equ	187	;# 
   197   0000BE                     MAINPR          equ	190	;# 
   198   0000BF                     ISRPR           equ	191	;# 
   199   0000D4                     CLCDATA         equ	212	;# 
   200   0000D5                     CLCSELECT       equ	213	;# 
   201   0000D6                     CLCnCON         equ	214	;# 
   202   0000D7                     CLCnPOL         equ	215	;# 
   203   0000D8                     CLCnSEL0        equ	216	;# 
   204   0000D9                     CLCnSEL1        equ	217	;# 
   205   0000DA                     CLCnSEL2        equ	218	;# 
   206   0000DB                     CLCnSEL3        equ	219	;# 
   207   0000DC                     CLCnGLS0        equ	220	;# 
   208   0000DD                     CLCnGLS1        equ	221	;# 
   209   0000DE                     CLCnGLS2        equ	222	;# 
   210   0000DF                     CLCnGLS3        equ	223	;# 
   211   0000E8                     DMASELECT       equ	232	;# 
   212   0000E9                     DMAnBUF         equ	233	;# 
   213   0000EA                     DMAnDCNT        equ	234	;# 
   214   0000EA                     DMAnDCNTL       equ	234	;# 
   215   0000EB                     DMAnDCNTH       equ	235	;# 
   216   0000EC                     DMAnDPTR        equ	236	;# 
   217   0000EC                     DMAnDPTRL       equ	236	;# 
   218   0000ED                     DMAnDPTRH       equ	237	;# 
   219   0000EE                     DMAnDSZ         equ	238	;# 
   220   0000EE                     DMAnDSZL        equ	238	;# 
   221   0000EF                     DMAnDSZH        equ	239	;# 
   222   0000F0                     DMAnDSA         equ	240	;# 
   223   0000F0                     DMAnDSAL        equ	240	;# 
   224   0000F1                     DMAnDSAH        equ	241	;# 
   225   0000F2                     DMAnSCNT        equ	242	;# 
   226   0000F2                     DMAnSCNTL       equ	242	;# 
   227   0000F3                     DMAnSCNTH       equ	243	;# 
   228   0000F4                     DMAnSPTR        equ	244	;# 
   229   0000F4                     DMAnSPTRL       equ	244	;# 
   230   0000F5                     DMAnSPTRH       equ	245	;# 
   231   0000F6                     DMAnSPTRU       equ	246	;# 
   232   0000F7                     DMAnSSZ         equ	247	;# 
   233   0000F7                     DMAnSSZL        equ	247	;# 
   234   0000F8                     DMAnSSZH        equ	248	;# 
   235   0000F9                     DMAnSSA         equ	249	;# 
   236   0000F9                     DMAnSSAL        equ	249	;# 
   237   0000FA                     DMAnSSAH        equ	250	;# 
   238   0000FB                     DMAnSSAU        equ	251	;# 
   239   0000FC                     DMAnCON0        equ	252	;# 
   240   0000FD                     DMAnCON1        equ	253	;# 
   241   0000FE                     DMAnAIRQ        equ	254	;# 
   242   0000FF                     DMAnSIRQ        equ	255	;# 
   243   000200                     PPSLOCK         equ	512	;# 
   244   000201                     RA0PPS          equ	513	;# 
   245   000202                     RA1PPS          equ	514	;# 
   246   000203                     RA2PPS          equ	515	;# 
   247   000204                     RA3PPS          equ	516	;# 
   248   000205                     RA4PPS          equ	517	;# 
   249   000206                     RA5PPS          equ	518	;# 
   250   000207                     RA6PPS          equ	519	;# 
   251   000208                     RA7PPS          equ	520	;# 
   252   000209                     RB0PPS          equ	521	;# 
   253   00020A                     RB1PPS          equ	522	;# 
   254   00020B                     RB2PPS          equ	523	;# 
   255   00020C                     RB3PPS          equ	524	;# 
   256   00020D                     RB4PPS          equ	525	;# 
   257   00020E                     RB5PPS          equ	526	;# 
   258   00020F                     RB6PPS          equ	527	;# 
   259   000210                     RB7PPS          equ	528	;# 
   260   000211                     RC0PPS          equ	529	;# 
   261   000212                     RC1PPS          equ	530	;# 
   262   000213                     RC2PPS          equ	531	;# 
   263   000214                     RC3PPS          equ	532	;# 
   264   000215                     RC4PPS          equ	533	;# 
   265   000216                     RC5PPS          equ	534	;# 
   266   000217                     RC6PPS          equ	535	;# 
   267   000218                     RC7PPS          equ	536	;# 
   268   000219                     RD0PPS          equ	537	;# 
   269   00021A                     RD1PPS          equ	538	;# 
   270   00021B                     RD2PPS          equ	539	;# 
   271   00021C                     RD3PPS          equ	540	;# 
   272   00021D                     RD4PPS          equ	541	;# 
   273   00021E                     RD5PPS          equ	542	;# 
   274   00021F                     RD6PPS          equ	543	;# 
   275   000220                     RD7PPS          equ	544	;# 
   276   000221                     RE0PPS          equ	545	;# 
   277   000222                     RE1PPS          equ	546	;# 
   278   000223                     RE2PPS          equ	547	;# 
   279   000229                     RF0PPS          equ	553	;# 
   280   00022A                     RF1PPS          equ	554	;# 
   281   00022B                     RF2PPS          equ	555	;# 
   282   00022C                     RF3PPS          equ	556	;# 
   283   00022D                     RF4PPS          equ	557	;# 
   284   00022E                     RF5PPS          equ	558	;# 
   285   00022F                     RF6PPS          equ	559	;# 
   286   000230                     RF7PPS          equ	560	;# 
   287   00023E                     INT0PPS         equ	574	;# 
   288   00023F                     INT1PPS         equ	575	;# 
   289   000240                     INT2PPS         equ	576	;# 
   290   000241                     T0CKIPPS        equ	577	;# 
   291   000242                     T1CKIPPS        equ	578	;# 
   292   000243                     T1GPPS          equ	579	;# 
   293   000244                     T3CKIPPS        equ	580	;# 
   294   000245                     T3GPPS          equ	581	;# 
   295   000246                     T5CKIPPS        equ	582	;# 
   296   000247                     T5GPPS          equ	583	;# 
   297   000248                     T2INPPS         equ	584	;# 
   298   000249                     T4INPPS         equ	585	;# 
   299   00024A                     T6INPPS         equ	586	;# 
   300   00024F                     CCP1PPS         equ	591	;# 
   301   000250                     CCP2PPS         equ	592	;# 
   302   000251                     CCP3PPS         equ	593	;# 
   303   000253                     PWM1ERSPPS      equ	595	;# 
   304   000254                     PWM2ERSPPS      equ	596	;# 
   305   000255                     PWM3ERSPPS      equ	597	;# 
   306   000257                     PWMIN0PPS       equ	599	;# 
   307   000258                     PWMIN1PPS       equ	600	;# 
   308   000259                     SMT1WINPPS      equ	601	;# 
   309   00025A                     SMT1SIGPPS      equ	602	;# 
   310   00025B                     CWG1PPS         equ	603	;# 
   311   00025B                     CWG1INPPS       equ	603	;# 
   312   00025C                     CWG2PPS         equ	604	;# 
   313   00025C                     CWG2INPPS       equ	604	;# 
   314   00025D                     CWG3PPS         equ	605	;# 
   315   00025D                     CWG3INPPS       equ	605	;# 
   316   00025E                     MD1CARLPPS      equ	606	;# 
   317   00025E                     MDCARLPPS       equ	606	;# 
   318   00025F                     MD1CARHPPS      equ	607	;# 
   319   00025F                     MDCARHPPS       equ	607	;# 
   320   000260                     MD1SRCPPS       equ	608	;# 
   321   000260                     MDSRCPPS        equ	608	;# 
   322   000261                     CLCIN0PPS       equ	609	;# 
   323   000262                     CLCIN1PPS       equ	610	;# 
   324   000263                     CLCIN2PPS       equ	611	;# 
   325   000264                     CLCIN3PPS       equ	612	;# 
   326   000265                     CLCIN4PPS       equ	613	;# 
   327   000266                     CLCIN5PPS       equ	614	;# 
   328   000267                     CLCIN6PPS       equ	615	;# 
   329   000268                     CLCIN7PPS       equ	616	;# 
   330   000269                     ADACTPPS        equ	617	;# 
   331   00026A                     SPI1SCKPPS      equ	618	;# 
   332   00026B                     SPI1SDIPPS      equ	619	;# 
   333   00026C                     SPI1SSPPS       equ	620	;# 
   334   00026D                     SPI2SCKPPS      equ	621	;# 
   335   00026E                     SPI2SDIPPS      equ	622	;# 
   336   00026F                     SPI2SSPPS       equ	623	;# 
   337   000270                     I2C1SDAPPS      equ	624	;# 
   338   000271                     I2C1SCLPPS      equ	625	;# 
   339   000272                     U1RXPPS         equ	626	;# 
   340   000273                     U1CTSPPS        equ	627	;# 
   341   000274                     U2RXPPS         equ	628	;# 
   342   000275                     U2CTSPPS        equ	629	;# 
   343   000276                     U3RXPPS         equ	630	;# 
   344   000277                     U3CTSPPS        equ	631	;# 
   345   000278                     U4RXPPS         equ	632	;# 
   346   000279                     U4CTSPPS        equ	633	;# 
   347   00027A                     U5RXPPS         equ	634	;# 
   348   00027B                     U5CTSPPS        equ	635	;# 
   349   000286                     RC4I2C          equ	646	;# 
   350   000287                     RC3I2C          equ	647	;# 
   351   000288                     RB2I2C          equ	648	;# 
   352   000289                     RB1I2C          equ	649	;# 
   353   00028B                     I2C1RXB         equ	651	;# 
   354   00028C                     I2C1TXB         equ	652	;# 
   355   00028D                     I2C1CNT         equ	653	;# 
   356   00028E                     I2C1ADB0        equ	654	;# 
   357   00028F                     I2C1ADB1        equ	655	;# 
   358   000290                     I2C1ADR0        equ	656	;# 
   359   000291                     I2C1ADR1        equ	657	;# 
   360   000292                     I2C1ADR2        equ	658	;# 
   361   000293                     I2C1ADR3        equ	659	;# 
   362   000294                     I2C1CON0        equ	660	;# 
   363   000295                     I2C1CON1        equ	661	;# 
   364   000296                     I2C1CON2        equ	662	;# 
   365   000297                     I2C1ERR         equ	663	;# 
   366   000298                     I2C1STAT0       equ	664	;# 
   367   000299                     I2C1STAT1       equ	665	;# 
   368   00029A                     I2C1PIR         equ	666	;# 
   369   00029B                     I2C1PIE         equ	667	;# 
   370   00029C                     I2C1CLK         equ	668	;# 
   371   00029D                     I2C1BTO         equ	669	;# 
   372   0002A1                     U1RXB           equ	673	;# 
   373   0002A1                     U1RXBL          equ	673	;# 
   374   0002A2                     U1RXCHK         equ	674	;# 
   375   0002A3                     U1TXB           equ	675	;# 
   376   0002A3                     U1TXBL          equ	675	;# 
   377   0002A4                     U1TXCHK         equ	676	;# 
   378   0002A5                     U1P1            equ	677	;# 
   379   0002A5                     U1P1L           equ	677	;# 
   380   0002A6                     U1P1H           equ	678	;# 
   381   0002A7                     U1P2            equ	679	;# 
   382   0002A7                     U1P2L           equ	679	;# 
   383   0002A8                     U1P2H           equ	680	;# 
   384   0002A9                     U1P3            equ	681	;# 
   385   0002A9                     U1P3L           equ	681	;# 
   386   0002AA                     U1P3H           equ	682	;# 
   387   0002AB                     U1CON0          equ	683	;# 
   388   0002AC                     U1CON1          equ	684	;# 
   389   0002AD                     U1CON2          equ	685	;# 
   390   0002AE                     U1BRG           equ	686	;# 
   391   0002AE                     U1BRGL          equ	686	;# 
   392   0002AF                     U1BRGH          equ	687	;# 
   393   0002B0                     U1FIFO          equ	688	;# 
   394   0002B1                     U1UIR           equ	689	;# 
   395   0002B2                     U1ERRIR         equ	690	;# 
   396   0002B3                     U1ERRIE         equ	691	;# 
   397   0002B4                     U2RXB           equ	692	;# 
   398   0002B4                     U2RXBL          equ	692	;# 
   399   0002B6                     U2TXB           equ	694	;# 
   400   0002B6                     U2TXBL          equ	694	;# 
   401   0002B8                     U2P1            equ	696	;# 
   402   0002B8                     U2P1L           equ	696	;# 
   403   0002BA                     U2P2            equ	698	;# 
   404   0002BA                     U2P2L           equ	698	;# 
   405   0002BC                     U2P3            equ	700	;# 
   406   0002BC                     U2P3L           equ	700	;# 
   407   0002BE                     U2CON0          equ	702	;# 
   408   0002BF                     U2CON1          equ	703	;# 
   409   0002C0                     U2CON2          equ	704	;# 
   410   0002C1                     U2BRG           equ	705	;# 
   411   0002C1                     U2BRGL          equ	705	;# 
   412   0002C2                     U2BRGH          equ	706	;# 
   413   0002C3                     U2FIFO          equ	707	;# 
   414   0002C4                     U2UIR           equ	708	;# 
   415   0002C5                     U2ERRIR         equ	709	;# 
   416   0002C6                     U2ERRIE         equ	710	;# 
   417   0002C7                     U3RXB           equ	711	;# 
   418   0002C7                     U3RXBL          equ	711	;# 
   419   0002C9                     U3TXB           equ	713	;# 
   420   0002C9                     U3TXBL          equ	713	;# 
   421   0002CB                     U3P1            equ	715	;# 
   422   0002CB                     U3P1L           equ	715	;# 
   423   0002CD                     U3P2            equ	717	;# 
   424   0002CD                     U3P2L           equ	717	;# 
   425   0002CF                     U3P3            equ	719	;# 
   426   0002CF                     U3P3L           equ	719	;# 
   427   0002D1                     U3CON0          equ	721	;# 
   428   0002D2                     U3CON1          equ	722	;# 
   429   0002D3                     U3CON2          equ	723	;# 
   430   0002D4                     U3BRG           equ	724	;# 
   431   0002D4                     U3BRGL          equ	724	;# 
   432   0002D5                     U3BRGH          equ	725	;# 
   433   0002D6                     U3FIFO          equ	726	;# 
   434   0002D7                     U3UIR           equ	727	;# 
   435   0002D8                     U3ERRIR         equ	728	;# 
   436   0002D9                     U3ERRIE         equ	729	;# 
   437   0002DA                     U4RXB           equ	730	;# 
   438   0002DA                     U4RXBL          equ	730	;# 
   439   0002DC                     U4TXB           equ	732	;# 
   440   0002DC                     U4TXBL          equ	732	;# 
   441   0002DE                     U4P1            equ	734	;# 
   442   0002DE                     U4P1L           equ	734	;# 
   443   0002E0                     U4P2            equ	736	;# 
   444   0002E0                     U4P2L           equ	736	;# 
   445   0002E2                     U4P3            equ	738	;# 
   446   0002E2                     U4P3L           equ	738	;# 
   447   0002E4                     U4CON0          equ	740	;# 
   448   0002E5                     U4CON1          equ	741	;# 
   449   0002E6                     U4CON2          equ	742	;# 
   450   0002E7                     U4BRG           equ	743	;# 
   451   0002E7                     U4BRGL          equ	743	;# 
   452   0002E8                     U4BRGH          equ	744	;# 
   453   0002E9                     U4FIFO          equ	745	;# 
   454   0002EA                     U4UIR           equ	746	;# 
   455   0002EB                     U4ERRIR         equ	747	;# 
   456   0002EC                     U4ERRIE         equ	748	;# 
   457   0002ED                     U5RXB           equ	749	;# 
   458   0002ED                     U5RXBL          equ	749	;# 
   459   0002EF                     U5TXB           equ	751	;# 
   460   0002EF                     U5TXBL          equ	751	;# 
   461   0002F1                     U5P1            equ	753	;# 
   462   0002F1                     U5P1L           equ	753	;# 
   463   0002F3                     U5P2            equ	755	;# 
   464   0002F3                     U5P2L           equ	755	;# 
   465   0002F5                     U5P3            equ	757	;# 
   466   0002F5                     U5P3L           equ	757	;# 
   467   0002F7                     U5CON0          equ	759	;# 
   468   0002F8                     U5CON1          equ	760	;# 
   469   0002F9                     U5CON2          equ	761	;# 
   470   0002FA                     U5BRG           equ	762	;# 
   471   0002FA                     U5BRGL          equ	762	;# 
   472   0002FB                     U5BRGH          equ	763	;# 
   473   0002FC                     U5FIFO          equ	764	;# 
   474   0002FD                     U5UIR           equ	765	;# 
   475   0002FE                     U5ERRIR         equ	766	;# 
   476   0002FF                     U5ERRIE         equ	767	;# 
   477   000300                     SMT1TMR         equ	768	;# 
   478   000300                     SMT1TMRL        equ	768	;# 
   479   000301                     SMT1TMRH        equ	769	;# 
   480   000302                     SMT1TMRU        equ	770	;# 
   481   000303                     SMT1CPR         equ	771	;# 
   482   000303                     SMT1CPRL        equ	771	;# 
   483   000304                     SMT1CPRH        equ	772	;# 
   484   000305                     SMT1CPRU        equ	773	;# 
   485   000306                     SMT1CPW         equ	774	;# 
   486   000306                     SMT1CPWL        equ	774	;# 
   487   000307                     SMT1CPWH        equ	775	;# 
   488   000308                     SMT1CPWU        equ	776	;# 
   489   000309                     SMT1PR          equ	777	;# 
   490   000309                     SMT1PRL         equ	777	;# 
   491   00030A                     SMT1PRH         equ	778	;# 
   492   00030B                     SMT1PRU         equ	779	;# 
   493   00030C                     SMT1CON0        equ	780	;# 
   494   00030D                     SMT1CON1        equ	781	;# 
   495   00030E                     SMT1STAT        equ	782	;# 
   496   00030F                     SMT1CLK         equ	783	;# 
   497   000310                     SMT1SIG         equ	784	;# 
   498   000311                     SMT1WIN         equ	785	;# 
   499   000318                     TMR0L           equ	792	;# 
   500   000318                     TMR0            equ	792	;# 
   501   000319                     TMR0H           equ	793	;# 
   502   000319                     PR0             equ	793	;# 
   503   00031A                     T0CON0          equ	794	;# 
   504   00031B                     T0CON1          equ	795	;# 
   505   00031C                     TMR1            equ	796	;# 
   506   00031C                     TMR1L           equ	796	;# 
   507   00031D                     TMR1H           equ	797	;# 
   508   00031E                     T1CON           equ	798	;# 
   509   00031E                     TMR1CON         equ	798	;# 
   510   00031F                     T1GCON          equ	799	;# 
   511   00031F                     TMR1GCON        equ	799	;# 
   512   000320                     T1GATE          equ	800	;# 
   513   000320                     TMR1GATE        equ	800	;# 
   514   000321                     T1CLK           equ	801	;# 
   515   000321                     TMR1CLK         equ	801	;# 
   516   000321                     PR1             equ	801	;# 
   517   000322                     T2TMR           equ	802	;# 
   518   000322                     TMR2            equ	802	;# 
   519   000323                     T2PR            equ	803	;# 
   520   000323                     PR2             equ	803	;# 
   521   000324                     T2CON           equ	804	;# 
   522   000325                     T2HLT           equ	805	;# 
   523   000326                     T2CLKCON        equ	806	;# 
   524   000326                     T2CLK           equ	806	;# 
   525   000327                     T2RST           equ	807	;# 
   526   000328                     TMR3            equ	808	;# 
   527   000328                     TMR3L           equ	808	;# 
   528   000329                     TMR3H           equ	809	;# 
   529   00032A                     T3CON           equ	810	;# 
   530   00032A                     TMR3CON         equ	810	;# 
   531   00032B                     T3GCON          equ	811	;# 
   532   00032B                     TMR3GCON        equ	811	;# 
   533   00032C                     T3GATE          equ	812	;# 
   534   00032C                     TMR3GATE        equ	812	;# 
   535   00032D                     T3CLK           equ	813	;# 
   536   00032D                     TMR3CLK         equ	813	;# 
   537   00032D                     PR3             equ	813	;# 
   538   00032E                     T4TMR           equ	814	;# 
   539   00032E                     TMR4            equ	814	;# 
   540   00032F                     T4PR            equ	815	;# 
   541   00032F                     PR4             equ	815	;# 
   542   000330                     T4CON           equ	816	;# 
   543   000331                     T4HLT           equ	817	;# 
   544   000332                     T4CLKCON        equ	818	;# 
   545   000332                     T4CLK           equ	818	;# 
   546   000333                     T4RST           equ	819	;# 
   547   000334                     TMR5            equ	820	;# 
   548   000334                     TMR5L           equ	820	;# 
   549   000335                     TMR5H           equ	821	;# 
   550   000336                     T5CON           equ	822	;# 
   551   000336                     TMR5CON         equ	822	;# 
   552   000337                     T5GCON          equ	823	;# 
   553   000337                     TMR5GCON        equ	823	;# 
   554   000338                     T5GATE          equ	824	;# 
   555   000338                     TMR5GATE        equ	824	;# 
   556   000339                     T5CLK           equ	825	;# 
   557   000339                     TMR5CLK         equ	825	;# 
   558   000339                     PR5             equ	825	;# 
   559   00033A                     T6TMR           equ	826	;# 
   560   00033A                     TMR6            equ	826	;# 
   561   00033B                     T6PR            equ	827	;# 
   562   00033B                     PR6             equ	827	;# 
   563   00033C                     T6CON           equ	828	;# 
   564   00033D                     T6HLT           equ	829	;# 
   565   00033E                     T6CLKCON        equ	830	;# 
   566   00033E                     T6CLK           equ	830	;# 
   567   00033F                     T6RST           equ	831	;# 
   568   000340                     CCPR1           equ	832	;# 
   569   000340                     CCPR1L          equ	832	;# 
   570   000341                     CCPR1H          equ	833	;# 
   571   000342                     CCP1CON         equ	834	;# 
   572   000343                     CCP1CAP         equ	835	;# 
   573   000344                     CCPR2           equ	836	;# 
   574   000344                     CCPR2L          equ	836	;# 
   575   000345                     CCPR2H          equ	837	;# 
   576   000346                     CCP2CON         equ	838	;# 
   577   000347                     CCP2CAP         equ	839	;# 
   578   000348                     CCPR3           equ	840	;# 
   579   000348                     CCPR3L          equ	840	;# 
   580   000349                     CCPR3H          equ	841	;# 
   581   00034A                     CCP3CON         equ	842	;# 
   582   00034B                     CCP3CAP         equ	843	;# 
   583   00034C                     CCPTMRS0        equ	844	;# 
   584   00034F                     CRCDATA         equ	847	;# 
   585   00034F                     CRCDATL         equ	847	;# 
   586   000350                     CRCDATH         equ	848	;# 
   587   000351                     CRCACC          equ	849	;# 
   588   000351                     CRCACCL         equ	849	;# 
   589   000352                     CRCACCH         equ	850	;# 
   590   000353                     CRCSHFT         equ	851	;# 
   591   000353                     CRCSHIFTL       equ	851	;# 
   592   000354                     CRCSHIFTH       equ	852	;# 
   593   000355                     CRCXOR          equ	853	;# 
   594   000355                     CRCXORL         equ	853	;# 
   595   000356                     CRCXORH         equ	854	;# 
   596   000357                     CRCCON0         equ	855	;# 
   597   000358                     CRCCON1         equ	856	;# 
   598   00035A                     SCANLADR        equ	858	;# 
   599   00035A                     SCANLADRL       equ	858	;# 
   600   00035B                     SCANLADRH       equ	859	;# 
   601   00035C                     SCANLADRU       equ	860	;# 
   602   00035D                     SCANHADR        equ	861	;# 
   603   00035D                     SCANHADRL       equ	861	;# 
   604   00035E                     SCANHADRH       equ	862	;# 
   605   00035F                     SCANHADRU       equ	863	;# 
   606   000360                     SCANCON0        equ	864	;# 
   607   000361                     SCANTRIG        equ	865	;# 
   608   000362                     IPR0            equ	866	;# 
   609   000363                     IPR1            equ	867	;# 
   610   000364                     IPR2            equ	868	;# 
   611   000365                     IPR3            equ	869	;# 
   612   000366                     IPR4            equ	870	;# 
   613   000367                     IPR5            equ	871	;# 
   614   000368                     IPR6            equ	872	;# 
   615   000369                     IPR7            equ	873	;# 
   616   00036A                     IPR8            equ	874	;# 
   617   00036B                     IPR9            equ	875	;# 
   618   00036C                     IPR10           equ	876	;# 
   619   00036D                     IPR11           equ	877	;# 
   620   00036E                     IPR12           equ	878	;# 
   621   00036F                     IPR13           equ	879	;# 
   622   000370                     IPR14           equ	880	;# 
   623   000371                     IPR15           equ	881	;# 
   624   000373                     STATUS_CSHAD    equ	883	;# 
   625   000374                     WREG_CSHAD      equ	884	;# 
   626   000375                     BSR_CSHAD       equ	885	;# 
   627   000376                     SHADCON         equ	886	;# 
   628   000377                     STATUS_SHAD     equ	887	;# 
   629   000378                     WREG_SHAD       equ	888	;# 
   630   000379                     BSR_SHAD        equ	889	;# 
   631   00037A                     PCLATH_SHAD     equ	890	;# 
   632   00037B                     PCLATU_SHAD     equ	891	;# 
   633   00037C                     FSR0SH          equ	892	;# 
   634   00037C                     FSR0L_SHAD      equ	892	;# 
   635   00037D                     FSR0H_SHAD      equ	893	;# 
   636   00037E                     FSR1SH          equ	894	;# 
   637   00037E                     FSR1L_SHAD      equ	894	;# 
   638   00037F                     FSR1H_SHAD      equ	895	;# 
   639   000380                     FSR2SH          equ	896	;# 
   640   000380                     FSR2L_SHAD      equ	896	;# 
   641   000381                     FSR2H_SHAD      equ	897	;# 
   642   000382                     PRODSH          equ	898	;# 
   643   000382                     PRODL_SHAD      equ	898	;# 
   644   000383                     PRODH_SHAD      equ	899	;# 
   645   0003BC                     CWG1CLK         equ	956	;# 
   646   0003BC                     CWG1CLKCON      equ	956	;# 
   647   0003BD                     CWG1ISM         equ	957	;# 
   648   0003BD                     CWG1DAT         equ	957	;# 
   649   0003BE                     CWG1DBR         equ	958	;# 
   650   0003BF                     CWG1DBF         equ	959	;# 
   651   0003C0                     CWG1CON0        equ	960	;# 
   652   0003C1                     CWG1CON1        equ	961	;# 
   653   0003C2                     CWG1AS0         equ	962	;# 
   654   0003C3                     CWG1AS1         equ	963	;# 
   655   0003C4                     CWG1STR         equ	964	;# 
   656   0003C5                     CWG2CLK         equ	965	;# 
   657   0003C5                     CWG2CLKCON      equ	965	;# 
   658   0003C6                     CWG2ISM         equ	966	;# 
   659   0003C6                     CWG2DAT         equ	966	;# 
   660   0003C7                     CWG2DBR         equ	967	;# 
   661   0003C8                     CWG2DBF         equ	968	;# 
   662   0003C9                     CWG2CON0        equ	969	;# 
   663   0003CA                     CWG2CON1        equ	970	;# 
   664   0003CB                     CWG2AS0         equ	971	;# 
   665   0003CC                     CWG2AS1         equ	972	;# 
   666   0003CD                     CWG2STR         equ	973	;# 
   667   0003CE                     CWG3CLK         equ	974	;# 
   668   0003CE                     CWG3CLKCON      equ	974	;# 
   669   0003CF                     CWG3ISM         equ	975	;# 
   670   0003CF                     CWG3DAT         equ	975	;# 
   671   0003D0                     CWG3DBR         equ	976	;# 
   672   0003D1                     CWG3DBF         equ	977	;# 
   673   0003D2                     CWG3CON0        equ	978	;# 
   674   0003D3                     CWG3CON1        equ	979	;# 
   675   0003D4                     CWG3AS0         equ	980	;# 
   676   0003D5                     CWG3AS1         equ	981	;# 
   677   0003D6                     CWG3STR         equ	982	;# 
   678   0003D7                     FVRCON          equ	983	;# 
   679   0003D8                     ADCPCON         equ	984	;# 
   680   0003D8                     ADCP            equ	984	;# 
   681   0003D9                     ADLTH           equ	985	;# 
   682   0003D9                     ADLTHL          equ	985	;# 
   683   0003DA                     ADLTHH          equ	986	;# 
   684   0003DB                     ADUTH           equ	987	;# 
   685   0003DB                     ADUTHL          equ	987	;# 
   686   0003DC                     ADUTHH          equ	988	;# 
   687   0003DD                     ADERR           equ	989	;# 
   688   0003DD                     ADERRL          equ	989	;# 
   689   0003DE                     ADERRH          equ	990	;# 
   690   0003DF                     ADSTPT          equ	991	;# 
   691   0003DF                     ADSTPTL         equ	991	;# 
   692   0003E0                     ADSTPTH         equ	992	;# 
   693   0003E1                     ADFLTR          equ	993	;# 
   694   0003E1                     ADFLTRL         equ	993	;# 
   695   0003E2                     ADFLTRH         equ	994	;# 
   696   0003E3                     ADACC           equ	995	;# 
   697   0003E3                     ADACCL          equ	995	;# 
   698   0003E4                     ADACCH          equ	996	;# 
   699   0003E5                     ADACCU          equ	997	;# 
   700   0003E6                     ADCNT           equ	998	;# 
   701   0003E7                     ADRPT           equ	999	;# 
   702   0003E8                     ADPREV          equ	1000	;# 
   703   0003E8                     ADPREVL         equ	1000	;# 
   704   0003E9                     ADPREVH         equ	1001	;# 
   705   0003EA                     ADRES           equ	1002	;# 
   706   0003EA                     ADRESL          equ	1002	;# 
   707   0003EB                     ADRESH          equ	1003	;# 
   708   0003EC                     ADPCH           equ	1004	;# 
   709   0003EE                     ADACQ           equ	1006	;# 
   710   0003EE                     ADACQL          equ	1006	;# 
   711   0003EF                     ADACQH          equ	1007	;# 
   712   0003F0                     ADCAP           equ	1008	;# 
   713   0003F1                     ADPRE           equ	1009	;# 
   714   0003F1                     ADPREL          equ	1009	;# 
   715   0003F2                     ADPREH          equ	1010	;# 
   716   0003F3                     ADCON0          equ	1011	;# 
   717   0003F4                     ADCON1          equ	1012	;# 
   718   0003F5                     ADCON2          equ	1013	;# 
   719   0003F6                     ADCON3          equ	1014	;# 
   720   0003F7                     ADSTAT          equ	1015	;# 
   721   0003F8                     ADREF           equ	1016	;# 
   722   0003F9                     ADACT           equ	1017	;# 
   723   0003FA                     ADCLK           equ	1018	;# 
   724   000400                     ANSELA          equ	1024	;# 
   725   000401                     WPUA            equ	1025	;# 
   726   000402                     ODCONA          equ	1026	;# 
   727   000403                     SLRCONA         equ	1027	;# 
   728   000404                     INLVLA          equ	1028	;# 
   729   000405                     IOCAP           equ	1029	;# 
   730   000406                     IOCAN           equ	1030	;# 
   731   000407                     IOCAF           equ	1031	;# 
   732   000408                     ANSELB          equ	1032	;# 
   733   000409                     WPUB            equ	1033	;# 
   734   00040A                     ODCONB          equ	1034	;# 
   735   00040B                     SLRCONB         equ	1035	;# 
   736   00040C                     INLVLB          equ	1036	;# 
   737   00040D                     IOCBP           equ	1037	;# 
   738   00040E                     IOCBN           equ	1038	;# 
   739   00040F                     IOCBF           equ	1039	;# 
   740   000410                     ANSELC          equ	1040	;# 
   741   000411                     WPUC            equ	1041	;# 
   742   000412                     ODCONC          equ	1042	;# 
   743   000413                     SLRCONC         equ	1043	;# 
   744   000414                     INLVLC          equ	1044	;# 
   745   000415                     IOCCP           equ	1045	;# 
   746   000416                     IOCCN           equ	1046	;# 
   747   000417                     IOCCF           equ	1047	;# 
   748   000418                     ANSELD          equ	1048	;# 
   749   000419                     WPUD            equ	1049	;# 
   750   00041A                     ODCOND          equ	1050	;# 
   751   00041B                     SLRCOND         equ	1051	;# 
   752   00041C                     INLVLD          equ	1052	;# 
   753   000420                     ANSELE          equ	1056	;# 
   754   000421                     WPUE            equ	1057	;# 
   755   000422                     ODCONE          equ	1058	;# 
   756   000423                     SLRCONE         equ	1059	;# 
   757   000424                     INLVLE          equ	1060	;# 
   758   000425                     IOCEP           equ	1061	;# 
   759   000426                     IOCEN           equ	1062	;# 
   760   000427                     IOCEF           equ	1063	;# 
   761   000428                     ANSELF          equ	1064	;# 
   762   000429                     WPUF            equ	1065	;# 
   763   00042A                     ODCONF          equ	1066	;# 
   764   00042B                     SLRCONF         equ	1067	;# 
   765   00042C                     INLVLF          equ	1068	;# 
   766   000440                     NCO1ACC         equ	1088	;# 
   767   000440                     NCO1ACCL        equ	1088	;# 
   768   000441                     NCO1ACCH        equ	1089	;# 
   769   000442                     NCO1ACCU        equ	1090	;# 
   770   000443                     NCO1INC         equ	1091	;# 
   771   000443                     NCO1INCL        equ	1091	;# 
   772   000444                     NCO1INCH        equ	1092	;# 
   773   000445                     NCO1INCU        equ	1093	;# 
   774   000446                     NCO1CON         equ	1094	;# 
   775   000447                     NCO1CLK         equ	1095	;# 
   776   000448                     NCO2ACC         equ	1096	;# 
   777   000448                     NCO2ACCL        equ	1096	;# 
   778   000449                     NCO2ACCH        equ	1097	;# 
   779   00044A                     NCO2ACCU        equ	1098	;# 
   780   00044B                     NCO2INC         equ	1099	;# 
   781   00044B                     NCO2INCL        equ	1099	;# 
   782   00044C                     NCO2INCH        equ	1100	;# 
   783   00044D                     NCO2INCU        equ	1101	;# 
   784   00044E                     NCO2CON         equ	1102	;# 
   785   00044F                     NCO2CLK         equ	1103	;# 
   786   000450                     NCO3ACC         equ	1104	;# 
   787   000450                     NCO3ACCL        equ	1104	;# 
   788   000451                     NCO3ACCH        equ	1105	;# 
   789   000452                     NCO3ACCU        equ	1106	;# 
   790   000453                     NCO3INC         equ	1107	;# 
   791   000453                     NCO3INCL        equ	1107	;# 
   792   000454                     NCO3INCH        equ	1108	;# 
   793   000455                     NCO3INCU        equ	1109	;# 
   794   000456                     NCO3CON         equ	1110	;# 
   795   000457                     NCO3CLK         equ	1111	;# 
   796   000459                     IVTLOCK         equ	1113	;# 
   797   00045A                     IVTAD           equ	1114	;# 
   798   00045A                     IVTADL          equ	1114	;# 
   799   00045B                     IVTADH          equ	1115	;# 
   800   00045C                     IVTADU          equ	1116	;# 
   801   00045D                     IVTBASE         equ	1117	;# 
   802   00045D                     IVTBASEL        equ	1117	;# 
   803   00045E                     IVTBASEH        equ	1118	;# 
   804   00045F                     IVTBASEU        equ	1119	;# 
   805   000460                     PWM1ERS         equ	1120	;# 
   806   000461                     PWM1CLK         equ	1121	;# 
   807   000462                     PWM1LDS         equ	1122	;# 
   808   000463                     PWM1PR          equ	1123	;# 
   809   000463                     PWM1PRL         equ	1123	;# 
   810   000464                     PWM1PRH         equ	1124	;# 
   811   000465                     PWM1CPRE        equ	1125	;# 
   812   000466                     PWM1PIPOS       equ	1126	;# 
   813   000467                     PWM1GIR         equ	1127	;# 
   814   000468                     PWM1GIE         equ	1128	;# 
   815   000469                     PWM1CON         equ	1129	;# 
   816   00046A                     PWM1S1CFG       equ	1130	;# 
   817   00046B                     PWM1S1P1        equ	1131	;# 
   818   00046B                     PWM1S1P1L       equ	1131	;# 
   819   00046C                     PWM1S1P1H       equ	1132	;# 
   820   00046D                     PWM1S1P2        equ	1133	;# 
   821   00046D                     PWM1S1P2L       equ	1133	;# 
   822   00046E                     PWM1S1P2H       equ	1134	;# 
   823   00046F                     PWM2ERS         equ	1135	;# 
   824   000470                     PWM2CLK         equ	1136	;# 
   825   000471                     PWM2LDS         equ	1137	;# 
   826   000472                     PWM2PR          equ	1138	;# 
   827   000472                     PWM2PRL         equ	1138	;# 
   828   000473                     PWM2PRH         equ	1139	;# 
   829   000474                     PWM2CPRE        equ	1140	;# 
   830   000475                     PWM2PIPOS       equ	1141	;# 
   831   000476                     PWM2GIR         equ	1142	;# 
   832   000477                     PWM2GIE         equ	1143	;# 
   833   000478                     PWM2CON         equ	1144	;# 
   834   000479                     PWM2S1CFG       equ	1145	;# 
   835   00047A                     PWM2S1P1        equ	1146	;# 
   836   00047A                     PWM2S1P1L       equ	1146	;# 
   837   00047B                     PWM2S1P1H       equ	1147	;# 
   838   00047C                     PWM2S1P2        equ	1148	;# 
   839   00047C                     PWM2S1P2L       equ	1148	;# 
   840   00047D                     PWM2S1P2H       equ	1149	;# 
   841   00047E                     PWM3ERS         equ	1150	;# 
   842   00047F                     PWM3CLK         equ	1151	;# 
   843   000480                     PWM3LDS         equ	1152	;# 
   844   000481                     PWM3PR          equ	1153	;# 
   845   000481                     PWM3PRL         equ	1153	;# 
   846   000482                     PWM3PRH         equ	1154	;# 
   847   000483                     PWM3CPRE        equ	1155	;# 
   848   000484                     PWM3PIPOS       equ	1156	;# 
   849   000485                     PWM3GIR         equ	1157	;# 
   850   000486                     PWM3GIE         equ	1158	;# 
   851   000487                     PWM3CON         equ	1159	;# 
   852   000488                     PWM3S1CFG       equ	1160	;# 
   853   000489                     PWM3S1P1        equ	1161	;# 
   854   000489                     PWM3S1P1L       equ	1161	;# 
   855   00048A                     PWM3S1P1H       equ	1162	;# 
   856   00048B                     PWM3S1P2        equ	1163	;# 
   857   00048B                     PWM3S1P2L       equ	1163	;# 
   858   00048C                     PWM3S1P2H       equ	1164	;# 
   859   00049C                     PWMLOAD         equ	1180	;# 
   860   00049D                     PWMEN           equ	1181	;# 
   861   00049E                     PIE0            equ	1182	;# 
   862   00049F                     PIE1            equ	1183	;# 
   863   0004A0                     PIE2            equ	1184	;# 
   864   0004A1                     PIE3            equ	1185	;# 
   865   0004A2                     PIE4            equ	1186	;# 
   866   0004A3                     PIE5            equ	1187	;# 
   867   0004A4                     PIE6            equ	1188	;# 
   868   0004A5                     PIE7            equ	1189	;# 
   869   0004A6                     PIE8            equ	1190	;# 
   870   0004A7                     PIE9            equ	1191	;# 
   871   0004A8                     PIE10           equ	1192	;# 
   872   0004A9                     PIE11           equ	1193	;# 
   873   0004AA                     PIE12           equ	1194	;# 
   874   0004AB                     PIE13           equ	1195	;# 
   875   0004AC                     PIE14           equ	1196	;# 
   876   0004AD                     PIE15           equ	1197	;# 
   877   0004AE                     PIR0            equ	1198	;# 
   878   0004AF                     PIR1            equ	1199	;# 
   879   0004B0                     PIR2            equ	1200	;# 
   880   0004B1                     PIR3            equ	1201	;# 
   881   0004B2                     PIR4            equ	1202	;# 
   882   0004B3                     PIR5            equ	1203	;# 
   883   0004B4                     PIR6            equ	1204	;# 
   884   0004B5                     PIR7            equ	1205	;# 
   885   0004B6                     PIR8            equ	1206	;# 
   886   0004B7                     PIR9            equ	1207	;# 
   887   0004B8                     PIR10           equ	1208	;# 
   888   0004B9                     PIR11           equ	1209	;# 
   889   0004BA                     PIR12           equ	1210	;# 
   890   0004BB                     PIR13           equ	1211	;# 
   891   0004BC                     PIR14           equ	1212	;# 
   892   0004BD                     PIR15           equ	1213	;# 
   893   0004BE                     LATA            equ	1214	;# 
   894   0004BF                     LATB            equ	1215	;# 
   895   0004C0                     LATC            equ	1216	;# 
   896   0004C1                     LATD            equ	1217	;# 
   897   0004C2                     LATE            equ	1218	;# 
   898   0004C3                     LATF            equ	1219	;# 
   899   0004C6                     TRISA           equ	1222	;# 
   900   0004C7                     TRISB           equ	1223	;# 
   901   0004C8                     TRISC           equ	1224	;# 
   902   0004C9                     TRISD           equ	1225	;# 
   903   0004CA                     TRISE           equ	1226	;# 
   904   0004CB                     TRISF           equ	1227	;# 
   905   0004CE                     PORTA           equ	1230	;# 
   906   0004CF                     PORTB           equ	1231	;# 
   907   0004D0                     PORTC           equ	1232	;# 
   908   0004D1                     PORTD           equ	1233	;# 
   909   0004D2                     PORTE           equ	1234	;# 
   910   0004D3                     PORTF           equ	1235	;# 
   911   0004D6                     INTCON0         equ	1238	;# 
   912   0004D7                     INTCON1         equ	1239	;# 
   913   0004D8                     STATUS          equ	1240	;# 
   914   0004D9                     FSR2            equ	1241	;# 
   915   0004D9                     FSR2L           equ	1241	;# 
   916   0004DA                     FSR2H           equ	1242	;# 
   917   0004DB                     PLUSW2          equ	1243	;# 
   918   0004DC                     PREINC2         equ	1244	;# 
   919   0004DD                     POSTDEC2        equ	1245	;# 
   920   0004DE                     POSTINC2        equ	1246	;# 
   921   0004DF                     INDF2           equ	1247	;# 
   922   0004E0                     BSR             equ	1248	;# 
   923   0004E1                     FSR1            equ	1249	;# 
   924   0004E1                     FSR1L           equ	1249	;# 
   925   0004E2                     FSR1H           equ	1250	;# 
   926   0004E3                     PLUSW1          equ	1251	;# 
   927   0004E4                     PREINC1         equ	1252	;# 
   928   0004E5                     POSTDEC1        equ	1253	;# 
   929   0004E6                     POSTINC1        equ	1254	;# 
   930   0004E7                     INDF1           equ	1255	;# 
   931   0004E8                     WREG            equ	1256	;# 
   932   0004E9                     FSR0            equ	1257	;# 
   933   0004E9                     FSR0L           equ	1257	;# 
   934   0004EA                     FSR0H           equ	1258	;# 
   935   0004EB                     PLUSW0          equ	1259	;# 
   936   0004EC                     PREINC0         equ	1260	;# 
   937   0004ED                     POSTDEC0        equ	1261	;# 
   938   0004EE                     POSTINC0        equ	1262	;# 
   939   0004EF                     INDF0           equ	1263	;# 
   940   0004F0                     PCON0           equ	1264	;# 
   941   0004F1                     PCON1           equ	1265	;# 
   942   0004F2                     CPUDOZE         equ	1266	;# 
   943   0004F3                     PROD            equ	1267	;# 
   944   0004F3                     PRODL           equ	1267	;# 
   945   0004F4                     PRODH           equ	1268	;# 
   946   0004F5                     TABLAT          equ	1269	;# 
   947   0004F6                     TBLPTR          equ	1270	;# 
   948   0004F6                     TBLPTRL         equ	1270	;# 
   949   0004F7                     TBLPTRH         equ	1271	;# 
   950   0004F8                     TBLPTRU         equ	1272	;# 
   951   0004F9                     PCLAT           equ	1273	;# 
   952   0004F9                     PCL             equ	1273	;# 
   953   0004FA                     PCLATH          equ	1274	;# 
   954   0004FB                     PCLATU          equ	1275	;# 
   955   0004FC                     STKPTR          equ	1276	;# 
   956   0004FD                     TOS             equ	1277	;# 
   957   0004FD                     TOSL            equ	1277	;# 
   958   0004FE                     TOSH            equ	1278	;# 
   959   0004FF                     TOSU            equ	1279	;# 
   960   000039                     CLKRCON         equ	57	;# 
   961   00003A                     CLKRCLK         equ	58	;# 
   962   000040                     NVMCON0         equ	64	;# 
   963   000041                     NVMCON1         equ	65	;# 
   964   000042                     NVMLOCK         equ	66	;# 
   965   000043                     NVMADR          equ	67	;# 
   966   000043                     NVMADRL         equ	67	;# 
   967   000044                     NVMADRH         equ	68	;# 
   968   000045                     NVMADRU         equ	69	;# 
   969   000046                     NVMDAT          equ	70	;# 
   970   000046                     NVMDATL         equ	70	;# 
   971   000047                     NVMDATH         equ	71	;# 
   972   000048                     VREGCON         equ	72	;# 
   973   000049                     BORCON          equ	73	;# 
   974   00004A                     HLVDCON0        equ	74	;# 
   975   00004B                     HLVDCON1        equ	75	;# 
   976   00004C                     ZCDCON          equ	76	;# 
   977   000060                     PMD0            equ	96	;# 
   978   000061                     PMD1            equ	97	;# 
   979   000063                     PMD3            equ	99	;# 
   980   000064                     PMD4            equ	100	;# 
   981   000065                     PMD5            equ	101	;# 
   982   000066                     PMD6            equ	102	;# 
   983   000067                     PMD7            equ	103	;# 
   984   000068                     PMD8            equ	104	;# 
   985   00006A                     MD1CON0         equ	106	;# 
   986   00006B                     MD1CON1         equ	107	;# 
   987   00006C                     MD1SRC          equ	108	;# 
   988   00006D                     MD1CARL         equ	109	;# 
   989   00006E                     MD1CARH         equ	110	;# 
   990   00006F                     CMOUT           equ	111	;# 
   991   000070                     CM1CON0         equ	112	;# 
   992   000071                     CM1CON1         equ	113	;# 
   993   000072                     CM1NCH          equ	114	;# 
   994   000073                     CM1PCH          equ	115	;# 
   995   000074                     CM2CON0         equ	116	;# 
   996   000075                     CM2CON1         equ	117	;# 
   997   000076                     CM2NCH          equ	118	;# 
   998   000077                     CM2PCH          equ	119	;# 
   999   000078                     WDTCON0         equ	120	;# 
  1000   000079                     WDTCON1         equ	121	;# 
  1001   00007A                     WDTPS           equ	122	;# 
  1002   00007A                     WDTPSL          equ	122	;# 
  1003   00007B                     WDTPSH          equ	123	;# 
  1004   00007C                     WDTTMR          equ	124	;# 
  1005   00007D                     DAC1DAT         equ	125	;# 
  1006   00007D                     DAC1DATL        equ	125	;# 
  1007   00007F                     DAC1CON         equ	127	;# 
  1008   000080                     SPI1RXB         equ	128	;# 
  1009   000081                     SPI1TXB         equ	129	;# 
  1010   000082                     SPI1TCNT        equ	130	;# 
  1011   000082                     SPI1TCNTL       equ	130	;# 
  1012   000083                     SPI1TCNTH       equ	131	;# 
  1013   000084                     SPI1CON0        equ	132	;# 
  1014   000085                     SPI1CON1        equ	133	;# 
  1015   000086                     SPI1CON2        equ	134	;# 
  1016   000087                     SPI1STATUS      equ	135	;# 
  1017   000088                     SPI1TWIDTH      equ	136	;# 
  1018   000089                     SPI1BAUD        equ	137	;# 
  1019   00008A                     SPI1INTF        equ	138	;# 
  1020   00008B                     SPI1INTE        equ	139	;# 
  1021   00008C                     SPI1CLK         equ	140	;# 
  1022   00008D                     SPI2RXB         equ	141	;# 
  1023   00008E                     SPI2TXB         equ	142	;# 
  1024   00008F                     SPI2TCNT        equ	143	;# 
  1025   00008F                     SPI2TCNTL       equ	143	;# 
  1026   000090                     SPI2TCNTH       equ	144	;# 
  1027   000091                     SPI2CON0        equ	145	;# 
  1028   000092                     SPI2CON1        equ	146	;# 
  1029   000093                     SPI2CON2        equ	147	;# 
  1030   000094                     SPI2STATUS      equ	148	;# 
  1031   000095                     SPI2TWIDTH      equ	149	;# 
  1032   000096                     SPI2BAUD        equ	150	;# 
  1033   000097                     SPI2INTF        equ	151	;# 
  1034   000098                     SPI2INTE        equ	152	;# 
  1035   000099                     SPI2CLK         equ	153	;# 
  1036   0000AC                     ACTCON          equ	172	;# 
  1037   0000AD                     OSCCON1         equ	173	;# 
  1038   0000AE                     OSCCON2         equ	174	;# 
  1039   0000AF                     OSCCON3         equ	175	;# 
  1040   0000B0                     OSCTUNE         equ	176	;# 
  1041   0000B1                     OSCFRQ          equ	177	;# 
  1042   0000B1                     OSCFREQ         equ	177	;# 
  1043   0000B2                     OSCSTAT         equ	178	;# 
  1044   0000B2                     OSCSTAT1        equ	178	;# 
  1045   0000B3                     OSCEN           equ	179	;# 
  1046   0000B4                     PRLOCK          equ	180	;# 
  1047   0000B5                     SCANPR          equ	181	;# 
  1048   0000B6                     DMA1PR          equ	182	;# 
  1049   0000B7                     DMA2PR          equ	183	;# 
  1050   0000B8                     DMA3PR          equ	184	;# 
  1051   0000B9                     DMA4PR          equ	185	;# 
  1052   0000BA                     DMA5PR          equ	186	;# 
  1053   0000BB                     DMA6PR          equ	187	;# 
  1054   0000BE                     MAINPR          equ	190	;# 
  1055   0000BF                     ISRPR           equ	191	;# 
  1056   0000D4                     CLCDATA         equ	212	;# 
  1057   0000D5                     CLCSELECT       equ	213	;# 
  1058   0000D6                     CLCnCON         equ	214	;# 
  1059   0000D7                     CLCnPOL         equ	215	;# 
  1060   0000D8                     CLCnSEL0        equ	216	;# 
  1061   0000D9                     CLCnSEL1        equ	217	;# 
  1062   0000DA                     CLCnSEL2        equ	218	;# 
  1063   0000DB                     CLCnSEL3        equ	219	;# 
  1064   0000DC                     CLCnGLS0        equ	220	;# 
  1065   0000DD                     CLCnGLS1        equ	221	;# 
  1066   0000DE                     CLCnGLS2        equ	222	;# 
  1067   0000DF                     CLCnGLS3        equ	223	;# 
  1068   0000E8                     DMASELECT       equ	232	;# 
  1069   0000E9                     DMAnBUF         equ	233	;# 
  1070   0000EA                     DMAnDCNT        equ	234	;# 
  1071   0000EA                     DMAnDCNTL       equ	234	;# 
  1072   0000EB                     DMAnDCNTH       equ	235	;# 
  1073   0000EC                     DMAnDPTR        equ	236	;# 
  1074   0000EC                     DMAnDPTRL       equ	236	;# 
  1075   0000ED                     DMAnDPTRH       equ	237	;# 
  1076   0000EE                     DMAnDSZ         equ	238	;# 
  1077   0000EE                     DMAnDSZL        equ	238	;# 
  1078   0000EF                     DMAnDSZH        equ	239	;# 
  1079   0000F0                     DMAnDSA         equ	240	;# 
  1080   0000F0                     DMAnDSAL        equ	240	;# 
  1081   0000F1                     DMAnDSAH        equ	241	;# 
  1082   0000F2                     DMAnSCNT        equ	242	;# 
  1083   0000F2                     DMAnSCNTL       equ	242	;# 
  1084   0000F3                     DMAnSCNTH       equ	243	;# 
  1085   0000F4                     DMAnSPTR        equ	244	;# 
  1086   0000F4                     DMAnSPTRL       equ	244	;# 
  1087   0000F5                     DMAnSPTRH       equ	245	;# 
  1088   0000F6                     DMAnSPTRU       equ	246	;# 
  1089   0000F7                     DMAnSSZ         equ	247	;# 
  1090   0000F7                     DMAnSSZL        equ	247	;# 
  1091   0000F8                     DMAnSSZH        equ	248	;# 
  1092   0000F9                     DMAnSSA         equ	249	;# 
  1093   0000F9                     DMAnSSAL        equ	249	;# 
  1094   0000FA                     DMAnSSAH        equ	250	;# 
  1095   0000FB                     DMAnSSAU        equ	251	;# 
  1096   0000FC                     DMAnCON0        equ	252	;# 
  1097   0000FD                     DMAnCON1        equ	253	;# 
  1098   0000FE                     DMAnAIRQ        equ	254	;# 
  1099   0000FF                     DMAnSIRQ        equ	255	;# 
  1100   000200                     PPSLOCK         equ	512	;# 
  1101   000201                     RA0PPS          equ	513	;# 
  1102   000202                     RA1PPS          equ	514	;# 
  1103   000203                     RA2PPS          equ	515	;# 
  1104   000204                     RA3PPS          equ	516	;# 
  1105   000205                     RA4PPS          equ	517	;# 
  1106   000206                     RA5PPS          equ	518	;# 
  1107   000207                     RA6PPS          equ	519	;# 
  1108   000208                     RA7PPS          equ	520	;# 
  1109   000209                     RB0PPS          equ	521	;# 
  1110   00020A                     RB1PPS          equ	522	;# 
  1111   00020B                     RB2PPS          equ	523	;# 
  1112   00020C                     RB3PPS          equ	524	;# 
  1113   00020D                     RB4PPS          equ	525	;# 
  1114   00020E                     RB5PPS          equ	526	;# 
  1115   00020F                     RB6PPS          equ	527	;# 
  1116   000210                     RB7PPS          equ	528	;# 
  1117   000211                     RC0PPS          equ	529	;# 
  1118   000212                     RC1PPS          equ	530	;# 
  1119   000213                     RC2PPS          equ	531	;# 
  1120   000214                     RC3PPS          equ	532	;# 
  1121   000215                     RC4PPS          equ	533	;# 
  1122   000216                     RC5PPS          equ	534	;# 
  1123   000217                     RC6PPS          equ	535	;# 
  1124   000218                     RC7PPS          equ	536	;# 
  1125   000219                     RD0PPS          equ	537	;# 
  1126   00021A                     RD1PPS          equ	538	;# 
  1127   00021B                     RD2PPS          equ	539	;# 
  1128   00021C                     RD3PPS          equ	540	;# 
  1129   00021D                     RD4PPS          equ	541	;# 
  1130   00021E                     RD5PPS          equ	542	;# 
  1131   00021F                     RD6PPS          equ	543	;# 
  1132   000220                     RD7PPS          equ	544	;# 
  1133   000221                     RE0PPS          equ	545	;# 
  1134   000222                     RE1PPS          equ	546	;# 
  1135   000223                     RE2PPS          equ	547	;# 
  1136   000229                     RF0PPS          equ	553	;# 
  1137   00022A                     RF1PPS          equ	554	;# 
  1138   00022B                     RF2PPS          equ	555	;# 
  1139   00022C                     RF3PPS          equ	556	;# 
  1140   00022D                     RF4PPS          equ	557	;# 
  1141   00022E                     RF5PPS          equ	558	;# 
  1142   00022F                     RF6PPS          equ	559	;# 
  1143   000230                     RF7PPS          equ	560	;# 
  1144   00023E                     INT0PPS         equ	574	;# 
  1145   00023F                     INT1PPS         equ	575	;# 
  1146   000240                     INT2PPS         equ	576	;# 
  1147   000241                     T0CKIPPS        equ	577	;# 
  1148   000242                     T1CKIPPS        equ	578	;# 
  1149   000243                     T1GPPS          equ	579	;# 
  1150   000244                     T3CKIPPS        equ	580	;# 
  1151   000245                     T3GPPS          equ	581	;# 
  1152   000246                     T5CKIPPS        equ	582	;# 
  1153   000247                     T5GPPS          equ	583	;# 
  1154   000248                     T2INPPS         equ	584	;# 
  1155   000249                     T4INPPS         equ	585	;# 
  1156   00024A                     T6INPPS         equ	586	;# 
  1157   00024F                     CCP1PPS         equ	591	;# 
  1158   000250                     CCP2PPS         equ	592	;# 
  1159   000251                     CCP3PPS         equ	593	;# 
  1160   000253                     PWM1ERSPPS      equ	595	;# 
  1161   000254                     PWM2ERSPPS      equ	596	;# 
  1162   000255                     PWM3ERSPPS      equ	597	;# 
  1163   000257                     PWMIN0PPS       equ	599	;# 
  1164   000258                     PWMIN1PPS       equ	600	;# 
  1165   000259                     SMT1WINPPS      equ	601	;# 
  1166   00025A                     SMT1SIGPPS      equ	602	;# 
  1167   00025B                     CWG1PPS         equ	603	;# 
  1168   00025B                     CWG1INPPS       equ	603	;# 
  1169   00025C                     CWG2PPS         equ	604	;# 
  1170   00025C                     CWG2INPPS       equ	604	;# 
  1171   00025D                     CWG3PPS         equ	605	;# 
  1172   00025D                     CWG3INPPS       equ	605	;# 
  1173   00025E                     MD1CARLPPS      equ	606	;# 
  1174   00025E                     MDCARLPPS       equ	606	;# 
  1175   00025F                     MD1CARHPPS      equ	607	;# 
  1176   00025F                     MDCARHPPS       equ	607	;# 
  1177   000260                     MD1SRCPPS       equ	608	;# 
  1178   000260                     MDSRCPPS        equ	608	;# 
  1179   000261                     CLCIN0PPS       equ	609	;# 
  1180   000262                     CLCIN1PPS       equ	610	;# 
  1181   000263                     CLCIN2PPS       equ	611	;# 
  1182   000264                     CLCIN3PPS       equ	612	;# 
  1183   000265                     CLCIN4PPS       equ	613	;# 
  1184   000266                     CLCIN5PPS       equ	614	;# 
  1185   000267                     CLCIN6PPS       equ	615	;# 
  1186   000268                     CLCIN7PPS       equ	616	;# 
  1187   000269                     ADACTPPS        equ	617	;# 
  1188   00026A                     SPI1SCKPPS      equ	618	;# 
  1189   00026B                     SPI1SDIPPS      equ	619	;# 
  1190   00026C                     SPI1SSPPS       equ	620	;# 
  1191   00026D                     SPI2SCKPPS      equ	621	;# 
  1192   00026E                     SPI2SDIPPS      equ	622	;# 
  1193   00026F                     SPI2SSPPS       equ	623	;# 
  1194   000270                     I2C1SDAPPS      equ	624	;# 
  1195   000271                     I2C1SCLPPS      equ	625	;# 
  1196   000272                     U1RXPPS         equ	626	;# 
  1197   000273                     U1CTSPPS        equ	627	;# 
  1198   000274                     U2RXPPS         equ	628	;# 
  1199   000275                     U2CTSPPS        equ	629	;# 
  1200   000276                     U3RXPPS         equ	630	;# 
  1201   000277                     U3CTSPPS        equ	631	;# 
  1202   000278                     U4RXPPS         equ	632	;# 
  1203   000279                     U4CTSPPS        equ	633	;# 
  1204   00027A                     U5RXPPS         equ	634	;# 
  1205   00027B                     U5CTSPPS        equ	635	;# 
  1206   000286                     RC4I2C          equ	646	;# 
  1207   000287                     RC3I2C          equ	647	;# 
  1208   000288                     RB2I2C          equ	648	;# 
  1209   000289                     RB1I2C          equ	649	;# 
  1210   00028B                     I2C1RXB         equ	651	;# 
  1211   00028C                     I2C1TXB         equ	652	;# 
  1212   00028D                     I2C1CNT         equ	653	;# 
  1213   00028E                     I2C1ADB0        equ	654	;# 
  1214   00028F                     I2C1ADB1        equ	655	;# 
  1215   000290                     I2C1ADR0        equ	656	;# 
  1216   000291                     I2C1ADR1        equ	657	;# 
  1217   000292                     I2C1ADR2        equ	658	;# 
  1218   000293                     I2C1ADR3        equ	659	;# 
  1219   000294                     I2C1CON0        equ	660	;# 
  1220   000295                     I2C1CON1        equ	661	;# 
  1221   000296                     I2C1CON2        equ	662	;# 
  1222   000297                     I2C1ERR         equ	663	;# 
  1223   000298                     I2C1STAT0       equ	664	;# 
  1224   000299                     I2C1STAT1       equ	665	;# 
  1225   00029A                     I2C1PIR         equ	666	;# 
  1226   00029B                     I2C1PIE         equ	667	;# 
  1227   00029C                     I2C1CLK         equ	668	;# 
  1228   00029D                     I2C1BTO         equ	669	;# 
  1229   0002A1                     U1RXB           equ	673	;# 
  1230   0002A1                     U1RXBL          equ	673	;# 
  1231   0002A2                     U1RXCHK         equ	674	;# 
  1232   0002A3                     U1TXB           equ	675	;# 
  1233   0002A3                     U1TXBL          equ	675	;# 
  1234   0002A4                     U1TXCHK         equ	676	;# 
  1235   0002A5                     U1P1            equ	677	;# 
  1236   0002A5                     U1P1L           equ	677	;# 
  1237   0002A6                     U1P1H           equ	678	;# 
  1238   0002A7                     U1P2            equ	679	;# 
  1239   0002A7                     U1P2L           equ	679	;# 
  1240   0002A8                     U1P2H           equ	680	;# 
  1241   0002A9                     U1P3            equ	681	;# 
  1242   0002A9                     U1P3L           equ	681	;# 
  1243   0002AA                     U1P3H           equ	682	;# 
  1244   0002AB                     U1CON0          equ	683	;# 
  1245   0002AC                     U1CON1          equ	684	;# 
  1246   0002AD                     U1CON2          equ	685	;# 
  1247   0002AE                     U1BRG           equ	686	;# 
  1248   0002AE                     U1BRGL          equ	686	;# 
  1249   0002AF                     U1BRGH          equ	687	;# 
  1250   0002B0                     U1FIFO          equ	688	;# 
  1251   0002B1                     U1UIR           equ	689	;# 
  1252   0002B2                     U1ERRIR         equ	690	;# 
  1253   0002B3                     U1ERRIE         equ	691	;# 
  1254   0002B4                     U2RXB           equ	692	;# 
  1255   0002B4                     U2RXBL          equ	692	;# 
  1256   0002B6                     U2TXB           equ	694	;# 
  1257   0002B6                     U2TXBL          equ	694	;# 
  1258   0002B8                     U2P1            equ	696	;# 
  1259   0002B8                     U2P1L           equ	696	;# 
  1260   0002BA                     U2P2            equ	698	;# 
  1261   0002BA                     U2P2L           equ	698	;# 
  1262   0002BC                     U2P3            equ	700	;# 
  1263   0002BC                     U2P3L           equ	700	;# 
  1264   0002BE                     U2CON0          equ	702	;# 
  1265   0002BF                     U2CON1          equ	703	;# 
  1266   0002C0                     U2CON2          equ	704	;# 
  1267   0002C1                     U2BRG           equ	705	;# 
  1268   0002C1                     U2BRGL          equ	705	;# 
  1269   0002C2                     U2BRGH          equ	706	;# 
  1270   0002C3                     U2FIFO          equ	707	;# 
  1271   0002C4                     U2UIR           equ	708	;# 
  1272   0002C5                     U2ERRIR         equ	709	;# 
  1273   0002C6                     U2ERRIE         equ	710	;# 
  1274   0002C7                     U3RXB           equ	711	;# 
  1275   0002C7                     U3RXBL          equ	711	;# 
  1276   0002C9                     U3TXB           equ	713	;# 
  1277   0002C9                     U3TXBL          equ	713	;# 
  1278   0002CB                     U3P1            equ	715	;# 
  1279   0002CB                     U3P1L           equ	715	;# 
  1280   0002CD                     U3P2            equ	717	;# 
  1281   0002CD                     U3P2L           equ	717	;# 
  1282   0002CF                     U3P3            equ	719	;# 
  1283   0002CF                     U3P3L           equ	719	;# 
  1284   0002D1                     U3CON0          equ	721	;# 
  1285   0002D2                     U3CON1          equ	722	;# 
  1286   0002D3                     U3CON2          equ	723	;# 
  1287   0002D4                     U3BRG           equ	724	;# 
  1288   0002D4                     U3BRGL          equ	724	;# 
  1289   0002D5                     U3BRGH          equ	725	;# 
  1290   0002D6                     U3FIFO          equ	726	;# 
  1291   0002D7                     U3UIR           equ	727	;# 
  1292   0002D8                     U3ERRIR         equ	728	;# 
  1293   0002D9                     U3ERRIE         equ	729	;# 
  1294   0002DA                     U4RXB           equ	730	;# 
  1295   0002DA                     U4RXBL          equ	730	;# 
  1296   0002DC                     U4TXB           equ	732	;# 
  1297   0002DC                     U4TXBL          equ	732	;# 
  1298   0002DE                     U4P1            equ	734	;# 
  1299   0002DE                     U4P1L           equ	734	;# 
  1300   0002E0                     U4P2            equ	736	;# 
  1301   0002E0                     U4P2L           equ	736	;# 
  1302   0002E2                     U4P3            equ	738	;# 
  1303   0002E2                     U4P3L           equ	738	;# 
  1304   0002E4                     U4CON0          equ	740	;# 
  1305   0002E5                     U4CON1          equ	741	;# 
  1306   0002E6                     U4CON2          equ	742	;# 
  1307   0002E7                     U4BRG           equ	743	;# 
  1308   0002E7                     U4BRGL          equ	743	;# 
  1309   0002E8                     U4BRGH          equ	744	;# 
  1310   0002E9                     U4FIFO          equ	745	;# 
  1311   0002EA                     U4UIR           equ	746	;# 
  1312   0002EB                     U4ERRIR         equ	747	;# 
  1313   0002EC                     U4ERRIE         equ	748	;# 
  1314   0002ED                     U5RXB           equ	749	;# 
  1315   0002ED                     U5RXBL          equ	749	;# 
  1316   0002EF                     U5TXB           equ	751	;# 
  1317   0002EF                     U5TXBL          equ	751	;# 
  1318   0002F1                     U5P1            equ	753	;# 
  1319   0002F1                     U5P1L           equ	753	;# 
  1320   0002F3                     U5P2            equ	755	;# 
  1321   0002F3                     U5P2L           equ	755	;# 
  1322   0002F5                     U5P3            equ	757	;# 
  1323   0002F5                     U5P3L           equ	757	;# 
  1324   0002F7                     U5CON0          equ	759	;# 
  1325   0002F8                     U5CON1          equ	760	;# 
  1326   0002F9                     U5CON2          equ	761	;# 
  1327   0002FA                     U5BRG           equ	762	;# 
  1328   0002FA                     U5BRGL          equ	762	;# 
  1329   0002FB                     U5BRGH          equ	763	;# 
  1330   0002FC                     U5FIFO          equ	764	;# 
  1331   0002FD                     U5UIR           equ	765	;# 
  1332   0002FE                     U5ERRIR         equ	766	;# 
  1333   0002FF                     U5ERRIE         equ	767	;# 
  1334   000300                     SMT1TMR         equ	768	;# 
  1335   000300                     SMT1TMRL        equ	768	;# 
  1336   000301                     SMT1TMRH        equ	769	;# 
  1337   000302                     SMT1TMRU        equ	770	;# 
  1338   000303                     SMT1CPR         equ	771	;# 
  1339   000303                     SMT1CPRL        equ	771	;# 
  1340   000304                     SMT1CPRH        equ	772	;# 
  1341   000305                     SMT1CPRU        equ	773	;# 
  1342   000306                     SMT1CPW         equ	774	;# 
  1343   000306                     SMT1CPWL        equ	774	;# 
  1344   000307                     SMT1CPWH        equ	775	;# 
  1345   000308                     SMT1CPWU        equ	776	;# 
  1346   000309                     SMT1PR          equ	777	;# 
  1347   000309                     SMT1PRL         equ	777	;# 
  1348   00030A                     SMT1PRH         equ	778	;# 
  1349   00030B                     SMT1PRU         equ	779	;# 
  1350   00030C                     SMT1CON0        equ	780	;# 
  1351   00030D                     SMT1CON1        equ	781	;# 
  1352   00030E                     SMT1STAT        equ	782	;# 
  1353   00030F                     SMT1CLK         equ	783	;# 
  1354   000310                     SMT1SIG         equ	784	;# 
  1355   000311                     SMT1WIN         equ	785	;# 
  1356   000318                     TMR0L           equ	792	;# 
  1357   000318                     TMR0            equ	792	;# 
  1358   000319                     TMR0H           equ	793	;# 
  1359   000319                     PR0             equ	793	;# 
  1360   00031A                     T0CON0          equ	794	;# 
  1361   00031B                     T0CON1          equ	795	;# 
  1362   00031C                     TMR1            equ	796	;# 
  1363   00031C                     TMR1L           equ	796	;# 
  1364   00031D                     TMR1H           equ	797	;# 
  1365   00031E                     T1CON           equ	798	;# 
  1366   00031E                     TMR1CON         equ	798	;# 
  1367   00031F                     T1GCON          equ	799	;# 
  1368   00031F                     TMR1GCON        equ	799	;# 
  1369   000320                     T1GATE          equ	800	;# 
  1370   000320                     TMR1GATE        equ	800	;# 
  1371   000321                     T1CLK           equ	801	;# 
  1372   000321                     TMR1CLK         equ	801	;# 
  1373   000321                     PR1             equ	801	;# 
  1374   000322                     T2TMR           equ	802	;# 
  1375   000322                     TMR2            equ	802	;# 
  1376   000323                     T2PR            equ	803	;# 
  1377   000323                     PR2             equ	803	;# 
  1378   000324                     T2CON           equ	804	;# 
  1379   000325                     T2HLT           equ	805	;# 
  1380   000326                     T2CLKCON        equ	806	;# 
  1381   000326                     T2CLK           equ	806	;# 
  1382   000327                     T2RST           equ	807	;# 
  1383   000328                     TMR3            equ	808	;# 
  1384   000328                     TMR3L           equ	808	;# 
  1385   000329                     TMR3H           equ	809	;# 
  1386   00032A                     T3CON           equ	810	;# 
  1387   00032A                     TMR3CON         equ	810	;# 
  1388   00032B                     T3GCON          equ	811	;# 
  1389   00032B                     TMR3GCON        equ	811	;# 
  1390   00032C                     T3GATE          equ	812	;# 
  1391   00032C                     TMR3GATE        equ	812	;# 
  1392   00032D                     T3CLK           equ	813	;# 
  1393   00032D                     TMR3CLK         equ	813	;# 
  1394   00032D                     PR3             equ	813	;# 
  1395   00032E                     T4TMR           equ	814	;# 
  1396   00032E                     TMR4            equ	814	;# 
  1397   00032F                     T4PR            equ	815	;# 
  1398   00032F                     PR4             equ	815	;# 
  1399   000330                     T4CON           equ	816	;# 
  1400   000331                     T4HLT           equ	817	;# 
  1401   000332                     T4CLKCON        equ	818	;# 
  1402   000332                     T4CLK           equ	818	;# 
  1403   000333                     T4RST           equ	819	;# 
  1404   000334                     TMR5            equ	820	;# 
  1405   000334                     TMR5L           equ	820	;# 
  1406   000335                     TMR5H           equ	821	;# 
  1407   000336                     T5CON           equ	822	;# 
  1408   000336                     TMR5CON         equ	822	;# 
  1409   000337                     T5GCON          equ	823	;# 
  1410   000337                     TMR5GCON        equ	823	;# 
  1411   000338                     T5GATE          equ	824	;# 
  1412   000338                     TMR5GATE        equ	824	;# 
  1413   000339                     T5CLK           equ	825	;# 
  1414   000339                     TMR5CLK         equ	825	;# 
  1415   000339                     PR5             equ	825	;# 
  1416   00033A                     T6TMR           equ	826	;# 
  1417   00033A                     TMR6            equ	826	;# 
  1418   00033B                     T6PR            equ	827	;# 
  1419   00033B                     PR6             equ	827	;# 
  1420   00033C                     T6CON           equ	828	;# 
  1421   00033D                     T6HLT           equ	829	;# 
  1422   00033E                     T6CLKCON        equ	830	;# 
  1423   00033E                     T6CLK           equ	830	;# 
  1424   00033F                     T6RST           equ	831	;# 
  1425   000340                     CCPR1           equ	832	;# 
  1426   000340                     CCPR1L          equ	832	;# 
  1427   000341                     CCPR1H          equ	833	;# 
  1428   000342                     CCP1CON         equ	834	;# 
  1429   000343                     CCP1CAP         equ	835	;# 
  1430   000344                     CCPR2           equ	836	;# 
  1431   000344                     CCPR2L          equ	836	;# 
  1432   000345                     CCPR2H          equ	837	;# 
  1433   000346                     CCP2CON         equ	838	;# 
  1434   000347                     CCP2CAP         equ	839	;# 
  1435   000348                     CCPR3           equ	840	;# 
  1436   000348                     CCPR3L          equ	840	;# 
  1437   000349                     CCPR3H          equ	841	;# 
  1438   00034A                     CCP3CON         equ	842	;# 
  1439   00034B                     CCP3CAP         equ	843	;# 
  1440   00034C                     CCPTMRS0        equ	844	;# 
  1441   00034F                     CRCDATA         equ	847	;# 
  1442   00034F                     CRCDATL         equ	847	;# 
  1443   000350                     CRCDATH         equ	848	;# 
  1444   000351                     CRCACC          equ	849	;# 
  1445   000351                     CRCACCL         equ	849	;# 
  1446   000352                     CRCACCH         equ	850	;# 
  1447   000353                     CRCSHFT         equ	851	;# 
  1448   000353                     CRCSHIFTL       equ	851	;# 
  1449   000354                     CRCSHIFTH       equ	852	;# 
  1450   000355                     CRCXOR          equ	853	;# 
  1451   000355                     CRCXORL         equ	853	;# 
  1452   000356                     CRCXORH         equ	854	;# 
  1453   000357                     CRCCON0         equ	855	;# 
  1454   000358                     CRCCON1         equ	856	;# 
  1455   00035A                     SCANLADR        equ	858	;# 
  1456   00035A                     SCANLADRL       equ	858	;# 
  1457   00035B                     SCANLADRH       equ	859	;# 
  1458   00035C                     SCANLADRU       equ	860	;# 
  1459   00035D                     SCANHADR        equ	861	;# 
  1460   00035D                     SCANHADRL       equ	861	;# 
  1461   00035E                     SCANHADRH       equ	862	;# 
  1462   00035F                     SCANHADRU       equ	863	;# 
  1463   000360                     SCANCON0        equ	864	;# 
  1464   000361                     SCANTRIG        equ	865	;# 
  1465   000362                     IPR0            equ	866	;# 
  1466   000363                     IPR1            equ	867	;# 
  1467   000364                     IPR2            equ	868	;# 
  1468   000365                     IPR3            equ	869	;# 
  1469   000366                     IPR4            equ	870	;# 
  1470   000367                     IPR5            equ	871	;# 
  1471   000368                     IPR6            equ	872	;# 
  1472   000369                     IPR7            equ	873	;# 
  1473   00036A                     IPR8            equ	874	;# 
  1474   00036B                     IPR9            equ	875	;# 
  1475   00036C                     IPR10           equ	876	;# 
  1476   00036D                     IPR11           equ	877	;# 
  1477   00036E                     IPR12           equ	878	;# 
  1478   00036F                     IPR13           equ	879	;# 
  1479   000370                     IPR14           equ	880	;# 
  1480   000371                     IPR15           equ	881	;# 
  1481   000373                     STATUS_CSHAD    equ	883	;# 
  1482   000374                     WREG_CSHAD      equ	884	;# 
  1483   000375                     BSR_CSHAD       equ	885	;# 
  1484   000376                     SHADCON         equ	886	;# 
  1485   000377                     STATUS_SHAD     equ	887	;# 
  1486   000378                     WREG_SHAD       equ	888	;# 
  1487   000379                     BSR_SHAD        equ	889	;# 
  1488   00037A                     PCLATH_SHAD     equ	890	;# 
  1489   00037B                     PCLATU_SHAD     equ	891	;# 
  1490   00037C                     FSR0SH          equ	892	;# 
  1491   00037C                     FSR0L_SHAD      equ	892	;# 
  1492   00037D                     FSR0H_SHAD      equ	893	;# 
  1493   00037E                     FSR1SH          equ	894	;# 
  1494   00037E                     FSR1L_SHAD      equ	894	;# 
  1495   00037F                     FSR1H_SHAD      equ	895	;# 
  1496   000380                     FSR2SH          equ	896	;# 
  1497   000380                     FSR2L_SHAD      equ	896	;# 
  1498   000381                     FSR2H_SHAD      equ	897	;# 
  1499   000382                     PRODSH          equ	898	;# 
  1500   000382                     PRODL_SHAD      equ	898	;# 
  1501   000383                     PRODH_SHAD      equ	899	;# 
  1502   0003BC                     CWG1CLK         equ	956	;# 
  1503   0003BC                     CWG1CLKCON      equ	956	;# 
  1504   0003BD                     CWG1ISM         equ	957	;# 
  1505   0003BD                     CWG1DAT         equ	957	;# 
  1506   0003BE                     CWG1DBR         equ	958	;# 
  1507   0003BF                     CWG1DBF         equ	959	;# 
  1508   0003C0                     CWG1CON0        equ	960	;# 
  1509   0003C1                     CWG1CON1        equ	961	;# 
  1510   0003C2                     CWG1AS0         equ	962	;# 
  1511   0003C3                     CWG1AS1         equ	963	;# 
  1512   0003C4                     CWG1STR         equ	964	;# 
  1513   0003C5                     CWG2CLK         equ	965	;# 
  1514   0003C5                     CWG2CLKCON      equ	965	;# 
  1515   0003C6                     CWG2ISM         equ	966	;# 
  1516   0003C6                     CWG2DAT         equ	966	;# 
  1517   0003C7                     CWG2DBR         equ	967	;# 
  1518   0003C8                     CWG2DBF         equ	968	;# 
  1519   0003C9                     CWG2CON0        equ	969	;# 
  1520   0003CA                     CWG2CON1        equ	970	;# 
  1521   0003CB                     CWG2AS0         equ	971	;# 
  1522   0003CC                     CWG2AS1         equ	972	;# 
  1523   0003CD                     CWG2STR         equ	973	;# 
  1524   0003CE                     CWG3CLK         equ	974	;# 
  1525   0003CE                     CWG3CLKCON      equ	974	;# 
  1526   0003CF                     CWG3ISM         equ	975	;# 
  1527   0003CF                     CWG3DAT         equ	975	;# 
  1528   0003D0                     CWG3DBR         equ	976	;# 
  1529   0003D1                     CWG3DBF         equ	977	;# 
  1530   0003D2                     CWG3CON0        equ	978	;# 
  1531   0003D3                     CWG3CON1        equ	979	;# 
  1532   0003D4                     CWG3AS0         equ	980	;# 
  1533   0003D5                     CWG3AS1         equ	981	;# 
  1534   0003D6                     CWG3STR         equ	982	;# 
  1535   0003D7                     FVRCON          equ	983	;# 
  1536   0003D8                     ADCPCON         equ	984	;# 
  1537   0003D8                     ADCP            equ	984	;# 
  1538   0003D9                     ADLTH           equ	985	;# 
  1539   0003D9                     ADLTHL          equ	985	;# 
  1540   0003DA                     ADLTHH          equ	986	;# 
  1541   0003DB                     ADUTH           equ	987	;# 
  1542   0003DB                     ADUTHL          equ	987	;# 
  1543   0003DC                     ADUTHH          equ	988	;# 
  1544   0003DD                     ADERR           equ	989	;# 
  1545   0003DD                     ADERRL          equ	989	;# 
  1546   0003DE                     ADERRH          equ	990	;# 
  1547   0003DF                     ADSTPT          equ	991	;# 
  1548   0003DF                     ADSTPTL         equ	991	;# 
  1549   0003E0                     ADSTPTH         equ	992	;# 
  1550   0003E1                     ADFLTR          equ	993	;# 
  1551   0003E1                     ADFLTRL         equ	993	;# 
  1552   0003E2                     ADFLTRH         equ	994	;# 
  1553   0003E3                     ADACC           equ	995	;# 
  1554   0003E3                     ADACCL          equ	995	;# 
  1555   0003E4                     ADACCH          equ	996	;# 
  1556   0003E5                     ADACCU          equ	997	;# 
  1557   0003E6                     ADCNT           equ	998	;# 
  1558   0003E7                     ADRPT           equ	999	;# 
  1559   0003E8                     ADPREV          equ	1000	;# 
  1560   0003E8                     ADPREVL         equ	1000	;# 
  1561   0003E9                     ADPREVH         equ	1001	;# 
  1562   0003EA                     ADRES           equ	1002	;# 
  1563   0003EA                     ADRESL          equ	1002	;# 
  1564   0003EB                     ADRESH          equ	1003	;# 
  1565   0003EC                     ADPCH           equ	1004	;# 
  1566   0003EE                     ADACQ           equ	1006	;# 
  1567   0003EE                     ADACQL          equ	1006	;# 
  1568   0003EF                     ADACQH          equ	1007	;# 
  1569   0003F0                     ADCAP           equ	1008	;# 
  1570   0003F1                     ADPRE           equ	1009	;# 
  1571   0003F1                     ADPREL          equ	1009	;# 
  1572   0003F2                     ADPREH          equ	1010	;# 
  1573   0003F3                     ADCON0          equ	1011	;# 
  1574   0003F4                     ADCON1          equ	1012	;# 
  1575   0003F5                     ADCON2          equ	1013	;# 
  1576   0003F6                     ADCON3          equ	1014	;# 
  1577   0003F7                     ADSTAT          equ	1015	;# 
  1578   0003F8                     ADREF           equ	1016	;# 
  1579   0003F9                     ADACT           equ	1017	;# 
  1580   0003FA                     ADCLK           equ	1018	;# 
  1581   000400                     ANSELA          equ	1024	;# 
  1582   000401                     WPUA            equ	1025	;# 
  1583   000402                     ODCONA          equ	1026	;# 
  1584   000403                     SLRCONA         equ	1027	;# 
  1585   000404                     INLVLA          equ	1028	;# 
  1586   000405                     IOCAP           equ	1029	;# 
  1587   000406                     IOCAN           equ	1030	;# 
  1588   000407                     IOCAF           equ	1031	;# 
  1589   000408                     ANSELB          equ	1032	;# 
  1590   000409                     WPUB            equ	1033	;# 
  1591   00040A                     ODCONB          equ	1034	;# 
  1592   00040B                     SLRCONB         equ	1035	;# 
  1593   00040C                     INLVLB          equ	1036	;# 
  1594   00040D                     IOCBP           equ	1037	;# 
  1595   00040E                     IOCBN           equ	1038	;# 
  1596   00040F                     IOCBF           equ	1039	;# 
  1597   000410                     ANSELC          equ	1040	;# 
  1598   000411                     WPUC            equ	1041	;# 
  1599   000412                     ODCONC          equ	1042	;# 
  1600   000413                     SLRCONC         equ	1043	;# 
  1601   000414                     INLVLC          equ	1044	;# 
  1602   000415                     IOCCP           equ	1045	;# 
  1603   000416                     IOCCN           equ	1046	;# 
  1604   000417                     IOCCF           equ	1047	;# 
  1605   000418                     ANSELD          equ	1048	;# 
  1606   000419                     WPUD            equ	1049	;# 
  1607   00041A                     ODCOND          equ	1050	;# 
  1608   00041B                     SLRCOND         equ	1051	;# 
  1609   00041C                     INLVLD          equ	1052	;# 
  1610   000420                     ANSELE          equ	1056	;# 
  1611   000421                     WPUE            equ	1057	;# 
  1612   000422                     ODCONE          equ	1058	;# 
  1613   000423                     SLRCONE         equ	1059	;# 
  1614   000424                     INLVLE          equ	1060	;# 
  1615   000425                     IOCEP           equ	1061	;# 
  1616   000426                     IOCEN           equ	1062	;# 
  1617   000427                     IOCEF           equ	1063	;# 
  1618   000428                     ANSELF          equ	1064	;# 
  1619   000429                     WPUF            equ	1065	;# 
  1620   00042A                     ODCONF          equ	1066	;# 
  1621   00042B                     SLRCONF         equ	1067	;# 
  1622   00042C                     INLVLF          equ	1068	;# 
  1623   000440                     NCO1ACC         equ	1088	;# 
  1624   000440                     NCO1ACCL        equ	1088	;# 
  1625   000441                     NCO1ACCH        equ	1089	;# 
  1626   000442                     NCO1ACCU        equ	1090	;# 
  1627   000443                     NCO1INC         equ	1091	;# 
  1628   000443                     NCO1INCL        equ	1091	;# 
  1629   000444                     NCO1INCH        equ	1092	;# 
  1630   000445                     NCO1INCU        equ	1093	;# 
  1631   000446                     NCO1CON         equ	1094	;# 
  1632   000447                     NCO1CLK         equ	1095	;# 
  1633   000448                     NCO2ACC         equ	1096	;# 
  1634   000448                     NCO2ACCL        equ	1096	;# 
  1635   000449                     NCO2ACCH        equ	1097	;# 
  1636   00044A                     NCO2ACCU        equ	1098	;# 
  1637   00044B                     NCO2INC         equ	1099	;# 
  1638   00044B                     NCO2INCL        equ	1099	;# 
  1639   00044C                     NCO2INCH        equ	1100	;# 
  1640   00044D                     NCO2INCU        equ	1101	;# 
  1641   00044E                     NCO2CON         equ	1102	;# 
  1642   00044F                     NCO2CLK         equ	1103	;# 
  1643   000450                     NCO3ACC         equ	1104	;# 
  1644   000450                     NCO3ACCL        equ	1104	;# 
  1645   000451                     NCO3ACCH        equ	1105	;# 
  1646   000452                     NCO3ACCU        equ	1106	;# 
  1647   000453                     NCO3INC         equ	1107	;# 
  1648   000453                     NCO3INCL        equ	1107	;# 
  1649   000454                     NCO3INCH        equ	1108	;# 
  1650   000455                     NCO3INCU        equ	1109	;# 
  1651   000456                     NCO3CON         equ	1110	;# 
  1652   000457                     NCO3CLK         equ	1111	;# 
  1653   000459                     IVTLOCK         equ	1113	;# 
  1654   00045A                     IVTAD           equ	1114	;# 
  1655   00045A                     IVTADL          equ	1114	;# 
  1656   00045B                     IVTADH          equ	1115	;# 
  1657   00045C                     IVTADU          equ	1116	;# 
  1658   00045D                     IVTBASE         equ	1117	;# 
  1659   00045D                     IVTBASEL        equ	1117	;# 
  1660   00045E                     IVTBASEH        equ	1118	;# 
  1661   00045F                     IVTBASEU        equ	1119	;# 
  1662   000460                     PWM1ERS         equ	1120	;# 
  1663   000461                     PWM1CLK         equ	1121	;# 
  1664   000462                     PWM1LDS         equ	1122	;# 
  1665   000463                     PWM1PR          equ	1123	;# 
  1666   000463                     PWM1PRL         equ	1123	;# 
  1667   000464                     PWM1PRH         equ	1124	;# 
  1668   000465                     PWM1CPRE        equ	1125	;# 
  1669   000466                     PWM1PIPOS       equ	1126	;# 
  1670   000467                     PWM1GIR         equ	1127	;# 
  1671   000468                     PWM1GIE         equ	1128	;# 
  1672   000469                     PWM1CON         equ	1129	;# 
  1673   00046A                     PWM1S1CFG       equ	1130	;# 
  1674   00046B                     PWM1S1P1        equ	1131	;# 
  1675   00046B                     PWM1S1P1L       equ	1131	;# 
  1676   00046C                     PWM1S1P1H       equ	1132	;# 
  1677   00046D                     PWM1S1P2        equ	1133	;# 
  1678   00046D                     PWM1S1P2L       equ	1133	;# 
  1679   00046E                     PWM1S1P2H       equ	1134	;# 
  1680   00046F                     PWM2ERS         equ	1135	;# 
  1681   000470                     PWM2CLK         equ	1136	;# 
  1682   000471                     PWM2LDS         equ	1137	;# 
  1683   000472                     PWM2PR          equ	1138	;# 
  1684   000472                     PWM2PRL         equ	1138	;# 
  1685   000473                     PWM2PRH         equ	1139	;# 
  1686   000474                     PWM2CPRE        equ	1140	;# 
  1687   000475                     PWM2PIPOS       equ	1141	;# 
  1688   000476                     PWM2GIR         equ	1142	;# 
  1689   000477                     PWM2GIE         equ	1143	;# 
  1690   000478                     PWM2CON         equ	1144	;# 
  1691   000479                     PWM2S1CFG       equ	1145	;# 
  1692   00047A                     PWM2S1P1        equ	1146	;# 
  1693   00047A                     PWM2S1P1L       equ	1146	;# 
  1694   00047B                     PWM2S1P1H       equ	1147	;# 
  1695   00047C                     PWM2S1P2        equ	1148	;# 
  1696   00047C                     PWM2S1P2L       equ	1148	;# 
  1697   00047D                     PWM2S1P2H       equ	1149	;# 
  1698   00047E                     PWM3ERS         equ	1150	;# 
  1699   00047F                     PWM3CLK         equ	1151	;# 
  1700   000480                     PWM3LDS         equ	1152	;# 
  1701   000481                     PWM3PR          equ	1153	;# 
  1702   000481                     PWM3PRL         equ	1153	;# 
  1703   000482                     PWM3PRH         equ	1154	;# 
  1704   000483                     PWM3CPRE        equ	1155	;# 
  1705   000484                     PWM3PIPOS       equ	1156	;# 
  1706   000485                     PWM3GIR         equ	1157	;# 
  1707   000486                     PWM3GIE         equ	1158	;# 
  1708   000487                     PWM3CON         equ	1159	;# 
  1709   000488                     PWM3S1CFG       equ	1160	;# 
  1710   000489                     PWM3S1P1        equ	1161	;# 
  1711   000489                     PWM3S1P1L       equ	1161	;# 
  1712   00048A                     PWM3S1P1H       equ	1162	;# 
  1713   00048B                     PWM3S1P2        equ	1163	;# 
  1714   00048B                     PWM3S1P2L       equ	1163	;# 
  1715   00048C                     PWM3S1P2H       equ	1164	;# 
  1716   00049C                     PWMLOAD         equ	1180	;# 
  1717   00049D                     PWMEN           equ	1181	;# 
  1718   00049E                     PIE0            equ	1182	;# 
  1719   00049F                     PIE1            equ	1183	;# 
  1720   0004A0                     PIE2            equ	1184	;# 
  1721   0004A1                     PIE3            equ	1185	;# 
  1722   0004A2                     PIE4            equ	1186	;# 
  1723   0004A3                     PIE5            equ	1187	;# 
  1724   0004A4                     PIE6            equ	1188	;# 
  1725   0004A5                     PIE7            equ	1189	;# 
  1726   0004A6                     PIE8            equ	1190	;# 
  1727   0004A7                     PIE9            equ	1191	;# 
  1728   0004A8                     PIE10           equ	1192	;# 
  1729   0004A9                     PIE11           equ	1193	;# 
  1730   0004AA                     PIE12           equ	1194	;# 
  1731   0004AB                     PIE13           equ	1195	;# 
  1732   0004AC                     PIE14           equ	1196	;# 
  1733   0004AD                     PIE15           equ	1197	;# 
  1734   0004AE                     PIR0            equ	1198	;# 
  1735   0004AF                     PIR1            equ	1199	;# 
  1736   0004B0                     PIR2            equ	1200	;# 
  1737   0004B1                     PIR3            equ	1201	;# 
  1738   0004B2                     PIR4            equ	1202	;# 
  1739   0004B3                     PIR5            equ	1203	;# 
  1740   0004B4                     PIR6            equ	1204	;# 
  1741   0004B5                     PIR7            equ	1205	;# 
  1742   0004B6                     PIR8            equ	1206	;# 
  1743   0004B7                     PIR9            equ	1207	;# 
  1744   0004B8                     PIR10           equ	1208	;# 
  1745   0004B9                     PIR11           equ	1209	;# 
  1746   0004BA                     PIR12           equ	1210	;# 
  1747   0004BB                     PIR13           equ	1211	;# 
  1748   0004BC                     PIR14           equ	1212	;# 
  1749   0004BD                     PIR15           equ	1213	;# 
  1750   0004BE                     LATA            equ	1214	;# 
  1751   0004BF                     LATB            equ	1215	;# 
  1752   0004C0                     LATC            equ	1216	;# 
  1753   0004C1                     LATD            equ	1217	;# 
  1754   0004C2                     LATE            equ	1218	;# 
  1755   0004C3                     LATF            equ	1219	;# 
  1756   0004C6                     TRISA           equ	1222	;# 
  1757   0004C7                     TRISB           equ	1223	;# 
  1758   0004C8                     TRISC           equ	1224	;# 
  1759   0004C9                     TRISD           equ	1225	;# 
  1760   0004CA                     TRISE           equ	1226	;# 
  1761   0004CB                     TRISF           equ	1227	;# 
  1762   0004CE                     PORTA           equ	1230	;# 
  1763   0004CF                     PORTB           equ	1231	;# 
  1764   0004D0                     PORTC           equ	1232	;# 
  1765   0004D1                     PORTD           equ	1233	;# 
  1766   0004D2                     PORTE           equ	1234	;# 
  1767   0004D3                     PORTF           equ	1235	;# 
  1768   0004D6                     INTCON0         equ	1238	;# 
  1769   0004D7                     INTCON1         equ	1239	;# 
  1770   0004D8                     STATUS          equ	1240	;# 
  1771   0004D9                     FSR2            equ	1241	;# 
  1772   0004D9                     FSR2L           equ	1241	;# 
  1773   0004DA                     FSR2H           equ	1242	;# 
  1774   0004DB                     PLUSW2          equ	1243	;# 
  1775   0004DC                     PREINC2         equ	1244	;# 
  1776   0004DD                     POSTDEC2        equ	1245	;# 
  1777   0004DE                     POSTINC2        equ	1246	;# 
  1778   0004DF                     INDF2           equ	1247	;# 
  1779   0004E0                     BSR             equ	1248	;# 
  1780   0004E1                     FSR1            equ	1249	;# 
  1781   0004E1                     FSR1L           equ	1249	;# 
  1782   0004E2                     FSR1H           equ	1250	;# 
  1783   0004E3                     PLUSW1          equ	1251	;# 
  1784   0004E4                     PREINC1         equ	1252	;# 
  1785   0004E5                     POSTDEC1        equ	1253	;# 
  1786   0004E6                     POSTINC1        equ	1254	;# 
  1787   0004E7                     INDF1           equ	1255	;# 
  1788   0004E8                     WREG            equ	1256	;# 
  1789   0004E9                     FSR0            equ	1257	;# 
  1790   0004E9                     FSR0L           equ	1257	;# 
  1791   0004EA                     FSR0H           equ	1258	;# 
  1792   0004EB                     PLUSW0          equ	1259	;# 
  1793   0004EC                     PREINC0         equ	1260	;# 
  1794   0004ED                     POSTDEC0        equ	1261	;# 
  1795   0004EE                     POSTINC0        equ	1262	;# 
  1796   0004EF                     INDF0           equ	1263	;# 
  1797   0004F0                     PCON0           equ	1264	;# 
  1798   0004F1                     PCON1           equ	1265	;# 
  1799   0004F2                     CPUDOZE         equ	1266	;# 
  1800   0004F3                     PROD            equ	1267	;# 
  1801   0004F3                     PRODL           equ	1267	;# 
  1802   0004F4                     PRODH           equ	1268	;# 
  1803   0004F5                     TABLAT          equ	1269	;# 
  1804   0004F6                     TBLPTR          equ	1270	;# 
  1805   0004F6                     TBLPTRL         equ	1270	;# 
  1806   0004F7                     TBLPTRH         equ	1271	;# 
  1807   0004F8                     TBLPTRU         equ	1272	;# 
  1808   0004F9                     PCLAT           equ	1273	;# 
  1809   0004F9                     PCL             equ	1273	;# 
  1810   0004FA                     PCLATH          equ	1274	;# 
  1811   0004FB                     PCLATU          equ	1275	;# 
  1812   0004FC                     STKPTR          equ	1276	;# 
  1813   0004FD                     TOS             equ	1277	;# 
  1814   0004FD                     TOSL            equ	1277	;# 
  1815   0004FE                     TOSH            equ	1278	;# 
  1816   0004FF                     TOSU            equ	1279	;# 
  1817   0000B3                     _OSCEN          set	179
  1818   0000B1                     _OSCFRQ         set	177
  1819   0000AD                     _OSCCON1        set	173
  1820   000418                     _ANSELD         set	1048
  1821   000409                     _WPUBbits       set	1033
  1822   000408                     _ANSELBbits     set	1032
  1823   0004C7                     _TRISBbits      set	1223
  1824   0004D1                     _PORTD          set	1233
  1825   0004C1                     _LATD           set	1217
  1826   0004C9                     _TRISD          set	1225
  1827   0004C1                     _LATDbits       set	1217
  1828                           
  1829                           	psect	smallconst
  1830   002600                     __psmallconst:
  1831                           	callstack 0
  1832   002600  00                 	db	0
  1833   002601                     STR_1:
  1834   002601  59                 	db	89	;'Y'
  1835   002602  41                 	db	65	;'A'
  1836   002603  20                 	db	32
  1837   002604  46                 	db	70	;'F'
  1838   002605  55                 	db	85	;'U'
  1839   002606  4E                 	db	78	;'N'
  1840   002607  43                 	db	67	;'C'
  1841   002608  49                 	db	73	;'I'
  1842   002609  4F                 	db	79	;'O'
  1843   00260A  4E                 	db	78	;'N'
  1844   00260B  41                 	db	65	;'A'
  1845   00260C  21                 	db	33
  1846   00260D  21                 	db	33
  1847   00260E  21                 	db	33
  1848   00260F  00                 	db	0
  1849   002610                     STR_2:
  1850   002610  55                 	db	85	;'U'
  1851   002611  50                 	db	80	;'P'
  1852   002612  43                 	db	67	;'C'
  1853   002613  20                 	db	32
  1854   002614  43                 	db	67	;'C'
  1855   002615  6F                 	db	111	;'o'
  1856   002616  72                 	db	114	;'r'
  1857   002617  61                 	db	97	;'a'
  1858   002618  7A                 	db	122	;'z'
  1859   002619  6F                 	db	111	;'o'
  1860   00261A  6E                 	db	110	;'n'
  1861   00261B  21                 	db	33
  1862   00261C  00                 	db	0
  1863   00261D                     STR_3:
  1864   00261D  43                 	db	67	;'C'
  1865   00261E  6F                 	db	111	;'o'
  1866   00261F  6E                 	db	110	;'n'
  1867   002620  74                 	db	116	;'t'
  1868   002621  61                 	db	97	;'a'
  1869   002622  64                 	db	100	;'d'
  1870   002623  6F                 	db	111	;'o'
  1871   002624  72                 	db	114	;'r'
  1872   002625  3A                 	db	58	;':'
  1873   002626  00                 	db	0
  1874   002627  00                 	db	0	; dummy byte at the end
  1875   002600                     __smallconst    set	__psmallconst
  1876   002600                     __mediumconst   set	__psmallconst
  1877   000001                     __activetblptr  equ	1
  1878                           
  1879                           ; #config settings
  1880                           
  1881                           	psect	cinit
  1882   002932                     __pcinit:
  1883                           	callstack 0
  1884   002932                     start_initialization:
  1885                           	callstack 0
  1886   002932                     __initialization:
  1887                           	callstack 0
  1888                           
  1889                           ; Clear objects allocated to COMRAM (1 bytes)
  1890   002932  6A0B               	clrf	__pbssCOMRAM& (0+255),c
  1891   002934                     end_of_initialization:
  1892                           	callstack 0
  1893   002934                     __end_of__initialization:
  1894                           	callstack 0
  1895   002934  0E00               	movlw	low (__Lsmallconst shr (0+16))
  1896   002936  6EF8               	movwf	tblptru,c
  1897   002938  0E26               	movlw	high __Lsmallconst
  1898   00293A  6EF7               	movwf	tblptrh,c
  1899   00293C  0100               	movlb	0
  1900   00293E  EF14  F013         	goto	_main	;jump to C main() function
  1901                           
  1902                           	psect	bssCOMRAM
  1903   00050B                     __pbssCOMRAM:
  1904                           	callstack 0
  1905   00050B                     _cuenta:
  1906                           	callstack 0
  1907   00050B                     	ds	1
  1908                           
  1909                           	psect	cstackCOMRAM
  1910   000501                     __pcstackCOMRAM:
  1911                           	callstack 0
  1912   000501                     ENVIA_NIBBLE@dato:
  1913                           	callstack 0
  1914   000501                     LEER_LCD@aux:
  1915                           	callstack 0
  1916   000501                     ___lbmod@divisor:
  1917                           	callstack 0
  1918   000501                     
  1919                           ; 1 bytes @ 0x0
  1920   000501                     	ds	1
  1921   000502                     ENVIA_CHAR@dato:
  1922                           	callstack 0
  1923   000502                     ENVIA_LCD_CMD@dato:
  1924                           	callstack 0
  1925   000502                     ___lbmod@dividend:
  1926                           	callstack 0
  1927   000502                     
  1928                           ; 1 bytes @ 0x1
  1929   000502                     	ds	1
  1930   000503                     ENVIA_CHAR@aux:
  1931                           	callstack 0
  1932   000503                     ENVIA_LCD_CMD@aux:
  1933                           	callstack 0
  1934   000503                     ___lbmod@counter:
  1935                           	callstack 0
  1936                           
  1937                           ; 1 bytes @ 0x2
  1938   000503                     	ds	1
  1939   000504                     POS_CURSOR@columna:
  1940                           	callstack 0
  1941   000504                     CURSOR_ONOFF@estado:
  1942                           	callstack 0
  1943   000504                     ESCRIBE_MENSAJE@cadena:
  1944                           	callstack 0
  1945   000504                     ___lbmod@rem:
  1946                           	callstack 0
  1947   000504                     ??_LCD_CONFIG:
  1948                           
  1949                           ; 1 bytes @ 0x3
  1950   000504                     	ds	1
  1951   000505                     POS_CURSOR@fila:
  1952                           	callstack 0
  1953   000505                     ESCRIBE_MENSAJE@tam:
  1954                           	callstack 0
  1955   000505                     ___lbdiv@divisor:
  1956                           	callstack 0
  1957   000505                     ??_lcd_init:
  1958                           
  1959                           ; 1 bytes @ 0x4
  1960   000505                     	ds	1
  1961   000506                     ___lbdiv@dividend:
  1962                           	callstack 0
  1963   000506                     ??_ESCRIBE_MENSAJE:
  1964   000506                     
  1965                           ; 1 bytes @ 0x5
  1966   000506                     	ds	1
  1967   000507                     ESCRIBE_MENSAJE@i:
  1968                           	callstack 0
  1969   000507                     ___lbdiv@counter:
  1970                           	callstack 0
  1971                           
  1972                           ; 1 bytes @ 0x6
  1973   000507                     	ds	1
  1974   000508                     ___lbdiv@quotient:
  1975                           	callstack 0
  1976                           
  1977                           ; 1 bytes @ 0x7
  1978   000508                     	ds	1
  1979   000509                     ??_main:
  1980                           
  1981                           ; 1 bytes @ 0x8
  1982   000509                     	ds	2
  1983                           
  1984 ;;
  1985 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1986 ;;
  1987 ;; *************** function _main *****************
  1988 ;; Defined at:
  1989 ;;		line 30 in file "maincode02.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2005 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2007 ;;Total ram usage:        2 bytes
  2008 ;; Hardware stack levels required when called: 4
  2009 ;; This function calls:
  2010 ;;		_BORRAR_LCD
  2011 ;;		_ENVIA_CHAR
  2012 ;;		_ESCRIBE_MENSAJE
  2013 ;;		_POS_CURSOR
  2014 ;;		___lbdiv
  2015 ;;		___lbmod
  2016 ;;		_configuro
  2017 ;;		_lcd_init
  2018 ;; This function is called by:
  2019 ;;		Startup code after reset
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text0
  2024   002628                     __ptext0:
  2025                           	callstack 0
  2026   002628                     _main:
  2027                           	callstack 123
  2028                           
  2029                           ;maincode02.c: 31:     configuro();
  2030                           
  2031                           ;incstack = 0
  2032   002628  EC8D  F014         	call	_configuro	;wreg free
  2033                           
  2034                           ; BSR set to: 4
  2035                           ;maincode02.c: 32:     lcd_init();
  2036   00262C  EC25  F014         	call	_lcd_init	;wreg free
  2037                           
  2038                           ;maincode02.c: 33:     POS_CURSOR(1,1);
  2039   002630  0E01               	movlw	1
  2040   002632  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2041   002634  0E01               	movlw	1
  2042   002636  EC4D  F014         	call	_POS_CURSOR
  2043                           
  2044                           ;maincode02.c: 34:     ESCRIBE_MENSAJE("YA FUNCIONA!!!",14);
  2045   00263A  0E01               	movlw	low STR_1
  2046   00263C  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2047   00263E  0E0E               	movlw	14
  2048   002640  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2049   002642  EC5F  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2050                           
  2051                           ;maincode02.c: 35:     POS_CURSOR(2,2);
  2052   002646  0E02               	movlw	2
  2053   002648  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2054   00264A  0E02               	movlw	2
  2055   00264C  EC4D  F014         	call	_POS_CURSOR
  2056                           
  2057                           ;maincode02.c: 36:     ESCRIBE_MENSAJE("UPC Corazon!",12);
  2058   002650  0E10               	movlw	low STR_2
  2059   002652  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2060   002654  0E0C               	movlw	12
  2061   002656  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2062   002658  EC5F  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2063                           
  2064                           ;maincode02.c: 37:     _delay((unsigned long)((2000)*(32000000UL/4000.0)));
  2065   00265C  0E52               	movlw	82
  2066   00265E  6E0A               	movwf	(??_main+1)^(0+1280),c
  2067   002660  0E2B               	movlw	43
  2068   002662  6E09               	movwf	??_main^(0+1280),c
  2069   002664  0E00               	movlw	0
  2070   002666                     u207:
  2071   002666  2EE8               	decfsz	wreg,f,c
  2072   002668  D7FE               	bra	u207
  2073   00266A  2E09               	decfsz	??_main^(0+1280),f,c
  2074   00266C  D7FC               	bra	u207
  2075   00266E  2E0A               	decfsz	(??_main+1)^(0+1280),f,c
  2076   002670  D7FA               	bra	u207
  2077   002672  D000               	nop2	
  2078                           
  2079                           ;maincode02.c: 38:     BORRAR_LCD();
  2080   002674  ECA5  F014         	call	_BORRAR_LCD	;wreg free
  2081   002678                     l1114:
  2082                           
  2083                           ;maincode02.c: 40:         if(cuenta < 151){
  2084   002678  0E97               	movlw	151
  2085   00267A  600B               	cpfslt	_cuenta^(0+1280),c
  2086   00267C  D002               	goto	l120
  2087                           
  2088                           ;maincode02.c: 41:             cuenta++;
  2089   00267E  2A0B               	incf	_cuenta^(0+1280),f,c
  2090                           
  2091                           ;maincode02.c: 42:         }
  2092   002680  D001               	goto	l1118
  2093   002682                     l120:
  2094                           
  2095                           ;maincode02.c: 44:             cuenta = 0;
  2096   002682  6A0B               	clrf	_cuenta^(0+1280),c
  2097   002684                     l1118:
  2098                           
  2099                           ;maincode02.c: 46:         POS_CURSOR(1,0);
  2100   002684  0E00               	movlw	0
  2101   002686  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2102   002688  0E01               	movlw	1
  2103   00268A  EC4D  F014         	call	_POS_CURSOR
  2104                           
  2105                           ;maincode02.c: 47:         ESCRIBE_MENSAJE("Contador:", 9);
  2106   00268E  0E1D               	movlw	low STR_3
  2107   002690  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2108   002692  0E09               	movlw	9
  2109   002694  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2110   002696  EC5F  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2111                           
  2112                           ;maincode02.c: 48:         ENVIA_CHAR((cuenta / 100) + 0x30);
  2113   00269A  0E64               	movlw	100
  2114   00269C  6E05               	movwf	___lbdiv@divisor^(0+1280),c
  2115   00269E  500B               	movf	_cuenta^(0+1280),w,c
  2116   0026A0  ECD7  F013         	call	___lbdiv
  2117   0026A4  0F30               	addlw	48
  2118   0026A6  EC0C  F014         	call	_ENVIA_CHAR
  2119                           
  2120                           ;maincode02.c: 49:         ENVIA_CHAR(((cuenta % 100) / 10) + 0x30);
  2121   0026AA  0E0A               	movlw	10
  2122   0026AC  6E05               	movwf	___lbdiv@divisor^(0+1280),c
  2123   0026AE  0E64               	movlw	100
  2124   0026B0  6E01               	movwf	___lbmod@divisor^(0+1280),c
  2125   0026B2  500B               	movf	_cuenta^(0+1280),w,c
  2126   0026B4  EC39  F014         	call	___lbmod
  2127   0026B8  ECD7  F013         	call	___lbdiv
  2128   0026BC  0F30               	addlw	48
  2129   0026BE  EC0C  F014         	call	_ENVIA_CHAR
  2130                           
  2131                           ;maincode02.c: 50:         ENVIA_CHAR((cuenta % 10) + 0x30);
  2132   0026C2  0E0A               	movlw	10
  2133   0026C4  6E01               	movwf	___lbmod@divisor^(0+1280),c
  2134   0026C6  500B               	movf	_cuenta^(0+1280),w,c
  2135   0026C8  EC39  F014         	call	___lbmod
  2136   0026CC  0F30               	addlw	48
  2137   0026CE  EC0C  F014         	call	_ENVIA_CHAR
  2138                           
  2139                           ;maincode02.c: 51:         _delay((unsigned long)((100)*(32000000UL/4000.0)));
  2140   0026D2  0E05               	movlw	5
  2141   0026D4  6E0A               	movwf	(??_main+1)^(0+1280),c
  2142   0026D6  0E0F               	movlw	15
  2143   0026D8  6E09               	movwf	??_main^(0+1280),c
  2144   0026DA  0EF1               	movlw	241
  2145   0026DC                     u217:
  2146   0026DC  2EE8               	decfsz	wreg,f,c
  2147   0026DE  D7FE               	bra	u217
  2148   0026E0  2E09               	decfsz	??_main^(0+1280),f,c
  2149   0026E2  D7FC               	bra	u217
  2150   0026E4  2E0A               	decfsz	(??_main+1)^(0+1280),f,c
  2151   0026E6  D7FA               	bra	u217
  2152   0026E8  0000               	nop	
  2153   0026EA  D7C6               	goto	l1114
  2154   0026EC                     __end_of_main:
  2155                           	callstack 0
  2156                           
  2157 ;; *************** function _lcd_init *****************
  2158 ;; Defined at:
  2159 ;;		line 20 in file "maincode02.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 3F/4
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2176 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2177 ;;Total ram usage:        1 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 3
  2180 ;; This function calls:
  2181 ;;		_BORRAR_LCD
  2182 ;;		_CURSOR_HOME
  2183 ;;		_CURSOR_ONOFF
  2184 ;;		_LCD_CONFIG
  2185 ;; This function is called by:
  2186 ;;		_main
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text1
  2191   00284A                     __ptext1:
  2192                           	callstack 0
  2193   00284A                     _lcd_init:
  2194                           	callstack 123
  2195                           
  2196                           ; BSR set to: 4
  2197                           ;maincode02.c: 21:     TRISD = 0x00;
  2198                           
  2199                           ;incstack = 0
  2200   00284A  6AC9               	clrf	201,c	;volatile
  2201                           
  2202                           ;maincode02.c: 22:     ANSELD = 0x00;
  2203   00284C  6B18               	clrf	24,b	;volatile
  2204                           
  2205                           ; BSR set to: 4
  2206                           ;maincode02.c: 23:     LCD_CONFIG();
  2207   00284E  ECA7  F013         	call	_LCD_CONFIG	;wreg free
  2208                           
  2209                           ;maincode02.c: 24:     _delay((unsigned long)((22)*(32000000UL/4000.0)));
  2210   002852  0EE5               	movlw	229
  2211   002854  6E05               	movwf	??_lcd_init^(0+1280),c
  2212   002856  0E91               	movlw	145
  2213   002858                     u227:
  2214   002858  2EE8               	decfsz	wreg,f,c
  2215   00285A  D7FE               	bra	u227
  2216   00285C  2E05               	decfsz	??_lcd_init^(0+1280),f,c
  2217   00285E  D7FC               	bra	u227
  2218   002860  0000               	nop	
  2219                           
  2220                           ;maincode02.c: 25:     BORRAR_LCD();
  2221   002862  ECA5  F014         	call	_BORRAR_LCD	;wreg free
  2222                           
  2223                           ;maincode02.c: 26:     CURSOR_HOME();
  2224   002866  ECA1  F014         	call	_CURSOR_HOME	;wreg free
  2225                           
  2226                           ;maincode02.c: 27:     CURSOR_ONOFF(1);
  2227   00286A  0E01               	movlw	1
  2228   00286C  EC71  F014         	call	_CURSOR_ONOFF
  2229   002870  0012               	return		;funcret
  2230   002872                     __end_of_lcd_init:
  2231                           	callstack 0
  2232                           
  2233 ;; *************** function _LCD_CONFIG *****************
  2234 ;; Defined at:
  2235 ;;		line 72 in file "LCD.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, status,2, status,0, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 3F/4
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2251 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2253 ;;Total ram usage:        1 bytes
  2254 ;; Hardware stack levels used: 1
  2255 ;; Hardware stack levels required when called: 2
  2256 ;; This function calls:
  2257 ;;		_ENVIA_LCD_CMD
  2258 ;;		_ENVIA_NIBBLE
  2259 ;; This function is called by:
  2260 ;;		_lcd_init
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text2
  2265   00274E                     __ptext2:
  2266                           	callstack 0
  2267   00274E                     _LCD_CONFIG:
  2268                           	callstack 123
  2269                           
  2270                           ; BSR set to: 4
  2271                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  2272                           
  2273                           ;incstack = 0
  2274   00274E  90C1               	bcf	193,0,c	;volatile
  2275                           
  2276                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  2277   002750  92C1               	bcf	193,1,c	;volatile
  2278                           
  2279                           ; BSR set to: 4
  2280                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  2281   002752  0E30               	movlw	48
  2282   002754  EC7F  F014         	call	_ENVIA_NIBBLE
  2283                           
  2284                           ;LCD.c: 77:         _delay(24000);
  2285   002758  0E20               	movlw	32
  2286   00275A  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2287   00275C  0E2A               	movlw	42
  2288   00275E                     u237:
  2289   00275E  2EE8               	decfsz	wreg,f,c
  2290   002760  D7FE               	bra	u237
  2291   002762  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2292   002764  D7FC               	bra	u237
  2293                           
  2294                           ;LCD.c: 78:         _delay(24000);
  2295   002766  0E20               	movlw	32
  2296   002768  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2297   00276A  0E2A               	movlw	42
  2298   00276C                     u247:
  2299   00276C  2EE8               	decfsz	wreg,f,c
  2300   00276E  D7FE               	bra	u247
  2301   002770  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2302   002772  D7FC               	bra	u247
  2303                           
  2304                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  2305   002774  0E30               	movlw	48
  2306   002776  EC7F  F014         	call	_ENVIA_NIBBLE
  2307                           
  2308                           ;LCD.c: 83:  _delay(1200);
  2309   00277A  0EF0               	movlw	240
  2310   00277C                     u257:
  2311   00277C  D000               	nop2	
  2312   00277E  2EE8               	decfsz	wreg,f,c
  2313   002780  D7FD               	bra	u257
  2314                           
  2315                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  2316   002782  0E30               	movlw	48
  2317   002784  EC7F  F014         	call	_ENVIA_NIBBLE
  2318                           
  2319                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  2320   002788  0E20               	movlw	32
  2321   00278A  EC7F  F014         	call	_ENVIA_NIBBLE
  2322                           
  2323                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  2324   00278E  0E01               	movlw	1
  2325   002790  ECF3  F013         	call	_ENVIA_LCD_CMD
  2326                           
  2327                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  2328   002794  0E28               	movlw	40
  2329   002796  ECF3  F013         	call	_ENVIA_LCD_CMD
  2330                           
  2331                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  2332   00279A  0E0F               	movlw	15
  2333   00279C  ECF3  F013         	call	_ENVIA_LCD_CMD
  2334                           
  2335                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  2336   0027A0  0E06               	movlw	6
  2337   0027A2  ECF3  F013         	call	_ENVIA_LCD_CMD
  2338                           
  2339                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  2340   0027A6  0E01               	movlw	1
  2341   0027A8  ECF3  F013         	call	_ENVIA_LCD_CMD
  2342   0027AC  0012               	return		;funcret
  2343   0027AE                     __end_of_LCD_CONFIG:
  2344                           	callstack 0
  2345                           
  2346 ;; *************** function _CURSOR_ONOFF *****************
  2347 ;; Defined at:
  2348 ;;		line 35 in file "LCD.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  estado          1    wreg     unsigned char 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  estado          1    3[COMRAM] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/4
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2365 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2366 ;;Total ram usage:        1 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 2
  2369 ;; This function calls:
  2370 ;;		_ENVIA_LCD_CMD
  2371 ;; This function is called by:
  2372 ;;		_lcd_init
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text3
  2377   0028E2                     __ptext3:
  2378                           	callstack 0
  2379   0028E2                     _CURSOR_ONOFF:
  2380                           	callstack 123
  2381                           
  2382                           ;incstack = 0
  2383                           ;CURSOR_ONOFF@estado stored from wreg
  2384   0028E2  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  2385                           
  2386                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  2387   0028E4  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  2388   0028E6  A4D8               	btfss	status,2,c
  2389   0028E8  D003               	goto	l874
  2390   0028EA  0E0E               	movlw	14
  2391   0028EC  ECF3  F013         	call	_ENVIA_LCD_CMD
  2392   0028F0                     l874:
  2393                           
  2394                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2395   0028F0  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  2396   0028F2  A4D8               	btfss	status,2,c
  2397   0028F4  0012               	return	
  2398   0028F6  0E0C               	movlw	12
  2399   0028F8  ECF3  F013         	call	_ENVIA_LCD_CMD
  2400   0028FC  0012               	return		;funcret
  2401   0028FE                     __end_of_CURSOR_ONOFF:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _CURSOR_HOME *****************
  2405 ;; Defined at:
  2406 ;;		line 30 in file "LCD.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/4
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2424 ;;Total ram usage:        0 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 2
  2427 ;; This function calls:
  2428 ;;		_ENVIA_LCD_CMD
  2429 ;; This function is called by:
  2430 ;;		_lcd_init
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text4
  2435   002942                     __ptext4:
  2436                           	callstack 0
  2437   002942                     _CURSOR_HOME:
  2438                           	callstack 123
  2439                           
  2440                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  2441                           
  2442                           ;incstack = 0
  2443   002942  0E02               	movlw	2
  2444   002944  ECF3  F013         	call	_ENVIA_LCD_CMD
  2445   002948  0012               	return		;funcret
  2446   00294A                     __end_of_CURSOR_HOME:
  2447                           	callstack 0
  2448                           
  2449 ;; *************** function _BORRAR_LCD *****************
  2450 ;; Defined at:
  2451 ;;		line 67 in file "LCD.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/4
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2469 ;;Total ram usage:        0 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; Hardware stack levels required when called: 2
  2472 ;; This function calls:
  2473 ;;		_ENVIA_LCD_CMD
  2474 ;; This function is called by:
  2475 ;;		_lcd_init
  2476 ;;		_main
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           	psect	text5
  2481   00294A                     __ptext5:
  2482                           	callstack 0
  2483   00294A                     _BORRAR_LCD:
  2484                           	callstack 123
  2485                           
  2486                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  2487                           
  2488                           ;incstack = 0
  2489   00294A  0E01               	movlw	1
  2490   00294C  ECF3  F013         	call	_ENVIA_LCD_CMD
  2491   002950  0012               	return		;funcret
  2492   002952                     __end_of_BORRAR_LCD:
  2493                           	callstack 0
  2494                           
  2495 ;; *************** function _configuro *****************
  2496 ;; Defined at:
  2497 ;;		line 8 in file "maincode02.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;		None
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, status,2
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 3F/4
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2515 ;;Total ram usage:        0 bytes
  2516 ;; Hardware stack levels used: 1
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text6
  2525   00291A                     __ptext6:
  2526                           	callstack 0
  2527   00291A                     _configuro:
  2528                           	callstack 126
  2529                           
  2530                           ;maincode02.c: 10:     OSCCON1 = 0x60;
  2531                           
  2532                           ;incstack = 0
  2533   00291A  0E60               	movlw	96
  2534   00291C  0100               	movlb	0	; () banked
  2535   00291E  6FAD               	movwf	173,b	;volatile
  2536                           
  2537                           ;maincode02.c: 11:     OSCFRQ = 0x06;
  2538   002920  0E06               	movlw	6
  2539   002922  6FB1               	movwf	177,b	;volatile
  2540                           
  2541                           ;maincode02.c: 12:     OSCEN = 0x40;
  2542   002924  0E40               	movlw	64
  2543   002926  6FB3               	movwf	179,b	;volatile
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;maincode02.c: 14:     TRISBbits.TRISB4 = 1;
  2547   002928  88C7               	bsf	199,4,c	;volatile
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;maincode02.c: 15:     ANSELBbits.ANSELB4 = 0;
  2551   00292A  0104               	movlb	4	; () banked
  2552   00292C  9908               	bcf	8,4,b	;volatile
  2553                           
  2554                           ; BSR set to: 4
  2555                           ;maincode02.c: 16:     WPUBbits.WPUB4 = 1;
  2556   00292E  8909               	bsf	9,4,b	;volatile
  2557                           
  2558                           ; BSR set to: 4
  2559   002930  0012               	return		;funcret
  2560   002932                     __end_of_configuro:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function ___lbmod *****************
  2564 ;; Defined at:
  2565 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lbmod.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  dividend        1    wreg     unsigned char 
  2568 ;;  divisor         1    0[COMRAM] unsigned char 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  dividend        1    1[COMRAM] unsigned char 
  2571 ;;  rem             1    3[COMRAM] unsigned char 
  2572 ;;  counter         1    2[COMRAM] unsigned char 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      unsigned char 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2, status,0
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/4
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2582 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2583 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2585 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2586 ;;Total ram usage:        4 bytes
  2587 ;; Hardware stack levels used: 1
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text7
  2596   002872                     __ptext7:
  2597                           	callstack 0
  2598   002872                     ___lbmod:
  2599                           	callstack 126
  2600                           
  2601                           ; BSR set to: 4
  2602                           ;incstack = 0
  2603                           ;___lbmod@dividend stored from wreg
  2604   002872  6E02               	movwf	___lbmod@dividend^(0+1280),c
  2605   002874  0E08               	movlw	8
  2606   002876  6E03               	movwf	___lbmod@counter^(0+1280),c
  2607   002878  6A04               	clrf	___lbmod@rem^(0+1280),c
  2608   00287A                     l1084:
  2609   00287A  90D8               	bcf	status,0,c
  2610   00287C  3402               	rlcf	___lbmod@dividend^(0+1280),w,c
  2611   00287E  3404               	rlcf	___lbmod@rem^(0+1280),w,c
  2612   002880  6E04               	movwf	___lbmod@rem^(0+1280),c
  2613   002882  90D8               	bcf	status,0,c
  2614   002884  3602               	rlcf	___lbmod@dividend^(0+1280),f,c
  2615   002886  5001               	movf	___lbmod@divisor^(0+1280),w,c
  2616   002888  5C04               	subwf	___lbmod@rem^(0+1280),w,c
  2617   00288A  A0D8               	btfss	status,0,c
  2618   00288C  D002               	goto	l1092
  2619   00288E  5001               	movf	___lbmod@divisor^(0+1280),w,c
  2620   002890  5E04               	subwf	___lbmod@rem^(0+1280),f,c
  2621   002892                     l1092:
  2622   002892  2E03               	decfsz	___lbmod@counter^(0+1280),f,c
  2623   002894  D7F2               	goto	l1084
  2624   002896  5004               	movf	___lbmod@rem^(0+1280),w,c
  2625   002898  0012               	return		;funcret
  2626   00289A                     __end_of___lbmod:
  2627                           	callstack 0
  2628                           
  2629 ;; *************** function ___lbdiv *****************
  2630 ;; Defined at:
  2631 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lbdiv.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  dividend        1    wreg     unsigned char 
  2634 ;;  divisor         1    4[COMRAM] unsigned char 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  dividend        1    5[COMRAM] unsigned char 
  2637 ;;  quotient        1    7[COMRAM] unsigned char 
  2638 ;;  counter         1    6[COMRAM] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      unsigned char 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/4
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2648 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2649 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2651 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2652 ;;Total ram usage:        4 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_main
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text8
  2662   0027AE                     __ptext8:
  2663                           	callstack 0
  2664   0027AE                     ___lbdiv:
  2665                           	callstack 126
  2666                           
  2667                           ;incstack = 0
  2668                           ;___lbdiv@dividend stored from wreg
  2669   0027AE  6E06               	movwf	___lbdiv@dividend^(0+1280),c
  2670   0027B0  6A08               	clrf	___lbdiv@quotient^(0+1280),c
  2671   0027B2  5005               	movf	___lbdiv@divisor^(0+1280),w,c
  2672   0027B4  B4D8               	btfsc	status,2,c
  2673   0027B6  D015               	goto	l1076
  2674   0027B8  0E01               	movlw	1
  2675   0027BA  6E07               	movwf	___lbdiv@counter^(0+1280),c
  2676   0027BC  D003               	goto	l1064
  2677   0027BE                     l1060:
  2678   0027BE  90D8               	bcf	status,0,c
  2679   0027C0  3605               	rlcf	___lbdiv@divisor^(0+1280),f,c
  2680   0027C2  2A07               	incf	___lbdiv@counter^(0+1280),f,c
  2681   0027C4                     l1064:
  2682   0027C4  AE05               	btfss	___lbdiv@divisor^(0+1280),7,c
  2683   0027C6  D7FB               	goto	l1060
  2684   0027C8                     u160:
  2685   0027C8  90D8               	bcf	status,0,c
  2686   0027CA  3608               	rlcf	___lbdiv@quotient^(0+1280),f,c
  2687   0027CC  5005               	movf	___lbdiv@divisor^(0+1280),w,c
  2688   0027CE  5C06               	subwf	___lbdiv@dividend^(0+1280),w,c
  2689   0027D0  A0D8               	btfss	status,0,c
  2690   0027D2  D003               	goto	l1072
  2691   0027D4  5005               	movf	___lbdiv@divisor^(0+1280),w,c
  2692   0027D6  5E06               	subwf	___lbdiv@dividend^(0+1280),f,c
  2693   0027D8  8008               	bsf	___lbdiv@quotient^(0+1280),0,c
  2694   0027DA                     l1072:
  2695   0027DA  90D8               	bcf	status,0,c
  2696   0027DC  3205               	rrcf	___lbdiv@divisor^(0+1280),f,c
  2697   0027DE  2E07               	decfsz	___lbdiv@counter^(0+1280),f,c
  2698   0027E0  D7F3               	goto	u160
  2699   0027E2                     l1076:
  2700   0027E2  5008               	movf	___lbdiv@quotient^(0+1280),w,c
  2701   0027E4  0012               	return		;funcret
  2702   0027E6                     __end_of___lbdiv:
  2703                           	callstack 0
  2704                           
  2705 ;; *************** function _POS_CURSOR *****************
  2706 ;; Defined at:
  2707 ;;		line 6 in file "LCD.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  fila            1    wreg     unsigned char 
  2710 ;;  columna         1    3[COMRAM] unsigned char 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  fila            1    4[COMRAM] unsigned char 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		wreg, status,2, status,0, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/4
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2722 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2726 ;;Total ram usage:        2 bytes
  2727 ;; Hardware stack levels used: 1
  2728 ;; Hardware stack levels required when called: 2
  2729 ;; This function calls:
  2730 ;;		_ENVIA_LCD_CMD
  2731 ;; This function is called by:
  2732 ;;		_main
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text9
  2737   00289A                     __ptext9:
  2738                           	callstack 0
  2739   00289A                     _POS_CURSOR:
  2740                           	callstack 124
  2741                           
  2742                           ;incstack = 0
  2743                           ;POS_CURSOR@fila stored from wreg
  2744   00289A  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  2745                           
  2746                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2747   00289C  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  2748   00289E  A4D8               	btfss	status,2,c
  2749   0028A0  D005               	goto	l1042
  2750                           
  2751                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2752   0028A2  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2753   0028A4  0F80               	addlw	128
  2754   0028A6  ECF3  F013         	call	_ENVIA_LCD_CMD
  2755                           
  2756                           ;LCD.c: 11:  }
  2757   0028AA  0012               	return	
  2758   0028AC                     l1042:
  2759   0028AC  0E02               	movlw	2
  2760   0028AE  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2761   0028B0  A4D8               	btfss	status,2,c
  2762   0028B2  0012               	return	
  2763                           
  2764                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2765   0028B4  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2766   0028B6  0FC0               	addlw	192
  2767   0028B8  ECF3  F013         	call	_ENVIA_LCD_CMD
  2768   0028BC  0012               	return		;funcret
  2769   0028BE                     __end_of_POS_CURSOR:
  2770                           	callstack 0
  2771                           
  2772 ;; *************** function _ENVIA_LCD_CMD *****************
  2773 ;; Defined at:
  2774 ;;		line 104 in file "LCD.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  dato            1    wreg     unsigned char 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  dato            1    1[COMRAM] unsigned char 
  2779 ;;  aux             1    2[COMRAM] unsigned char 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/4
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2790 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2793 ;;Total ram usage:        2 bytes
  2794 ;; Hardware stack levels used: 1
  2795 ;; Hardware stack levels required when called: 1
  2796 ;; This function calls:
  2797 ;;		_ENVIA_NIBBLE
  2798 ;;		_LEER_LCD
  2799 ;; This function is called by:
  2800 ;;		_POS_CURSOR
  2801 ;;		_CURSOR_HOME
  2802 ;;		_CURSOR_ONOFF
  2803 ;;		_BORRAR_LCD
  2804 ;;		_LCD_CONFIG
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text10
  2809   0027E6                     __ptext10:
  2810                           	callstack 0
  2811   0027E6                     _ENVIA_LCD_CMD:
  2812                           	callstack 123
  2813                           
  2814                           ;incstack = 0
  2815                           ;ENVIA_LCD_CMD@dato stored from wreg
  2816   0027E6  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  2817                           
  2818                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2819   0027E8  90C1               	bcf	193,0,c	;volatile
  2820                           
  2821                           ;LCD.c: 108:  LEER_LCD();
  2822   0027EA  EC76  F013         	call	_LEER_LCD	;wreg free
  2823                           
  2824                           ;LCD.c: 109:  TRISD = 0b00000000;
  2825   0027EE  6AC9               	clrf	201,c	;volatile
  2826                           
  2827                           ;LCD.c: 111:         _delay(1200);
  2828   0027F0  0EF0               	movlw	240
  2829   0027F2                     u267:
  2830   0027F2  D000               	nop2	
  2831   0027F4  2EE8               	decfsz	wreg,f,c
  2832   0027F6  D7FD               	bra	u267
  2833                           
  2834                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2835   0027F8  92C1               	bcf	193,1,c	;volatile
  2836                           
  2837                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2838   0027FA  94C1               	bcf	193,2,c	;volatile
  2839                           
  2840                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2841   0027FC  90C1               	bcf	193,0,c	;volatile
  2842                           
  2843                           ;LCD.c: 115:  aux = dato & 0xF0;
  2844   0027FE  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2845   002800  0BF0               	andlw	240
  2846   002802  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2847                           
  2848                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2849   002804  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2850   002806  EC7F  F014         	call	_ENVIA_NIBBLE
  2851                           
  2852                           ;LCD.c: 117:  aux = dato<<4;
  2853   00280A  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2854   00280C  0BF0               	andlw	240
  2855   00280E  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2856                           
  2857                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2858   002810  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2859   002812  EC7F  F014         	call	_ENVIA_NIBBLE
  2860   002816  0012               	return		;funcret
  2861   002818                     __end_of_ENVIA_LCD_CMD:
  2862                           	callstack 0
  2863                           
  2864 ;; *************** function _ESCRIBE_MENSAJE *****************
  2865 ;; Defined at:
  2866 ;;		line 41 in file "LCD.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2869 ;;		 -> STR_3(10), STR_2(13), STR_1(15), 
  2870 ;;  tam             1    4[COMRAM] unsigned char 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  i               1    6[COMRAM] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/4
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2883 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2885 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2886 ;;Total ram usage:        4 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 2
  2889 ;; This function calls:
  2890 ;;		_ENVIA_CHAR
  2891 ;; This function is called by:
  2892 ;;		_main
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text11
  2897   0028BE                     __ptext11:
  2898                           	callstack 0
  2899   0028BE                     _ESCRIBE_MENSAJE:
  2900                           	callstack 124
  2901                           
  2902                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2903                           
  2904                           ;incstack = 0
  2905   0028BE  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2906                           
  2907                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2908   0028C0  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2909   0028C2  D00A               	goto	l1052
  2910   0028C4                     l1048:
  2911                           
  2912                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2913   0028C4  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  2914   0028C6  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2915   0028C8  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  2916   0028CA  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2917   0028CE                     	if	0	;There is only one active tblptr byte
  2918   0028CE                     	endif
  2919   0028CE                     	if	0	;tblptru may be non-zero
  2920   0028CE                     	endif
  2921   0028CE                     	if	0	;tblptru may be non-zero
  2922   0028CE                     	endif
  2923   0028CE  0008               	tblrd		*
  2924   0028D0  50F5               	movf	tablat,w,c
  2925   0028D2  EC0C  F014         	call	_ENVIA_CHAR
  2926                           
  2927                           ;LCD.c: 47:  }
  2928   0028D6  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  2929   0028D8                     l1052:
  2930   0028D8  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  2931   0028DA  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2932   0028DC  B0D8               	btfsc	status,0,c
  2933   0028DE  0012               	return	
  2934   0028E0  D7F1               	goto	l1048
  2935   0028E2                     __end_of_ESCRIBE_MENSAJE:
  2936                           	callstack 0
  2937                           
  2938 ;; *************** function _ENVIA_CHAR *****************
  2939 ;; Defined at:
  2940 ;;		line 50 in file "LCD.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  dato            1    wreg     unsigned char 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  dato            1    1[COMRAM] unsigned char 
  2945 ;;  aux             1    2[COMRAM] unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0, cstack
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/4
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2956 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2958 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2959 ;;Total ram usage:        2 bytes
  2960 ;; Hardware stack levels used: 1
  2961 ;; Hardware stack levels required when called: 1
  2962 ;; This function calls:
  2963 ;;		_ENVIA_NIBBLE
  2964 ;;		_LEER_LCD
  2965 ;; This function is called by:
  2966 ;;		_ESCRIBE_MENSAJE
  2967 ;;		_main
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text12
  2972   002818                     __ptext12:
  2973                           	callstack 0
  2974   002818                     _ENVIA_CHAR:
  2975                           	callstack 124
  2976                           
  2977                           ;incstack = 0
  2978                           ;ENVIA_CHAR@dato stored from wreg
  2979   002818  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2980                           
  2981                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2982   00281A  80C1               	bsf	193,0,c	;volatile
  2983                           
  2984                           ;LCD.c: 54:  LEER_LCD();
  2985   00281C  EC76  F013         	call	_LEER_LCD	;wreg free
  2986                           
  2987                           ;LCD.c: 55:  TRISD = 0x00;
  2988   002820  6AC9               	clrf	201,c	;volatile
  2989                           
  2990                           ;LCD.c: 56:         _delay(1200);
  2991   002822  0EF0               	movlw	240
  2992   002824                     u277:
  2993   002824  D000               	nop2	
  2994   002826  2EE8               	decfsz	wreg,f,c
  2995   002828  D7FD               	bra	u277
  2996                           
  2997                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2998   00282A  92C1               	bcf	193,1,c	;volatile
  2999                           
  3000                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  3001   00282C  94C1               	bcf	193,2,c	;volatile
  3002                           
  3003                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  3004   00282E  80C1               	bsf	193,0,c	;volatile
  3005                           
  3006                           ;LCD.c: 61:  aux = dato & 0xF0;
  3007   002830  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  3008   002832  0BF0               	andlw	240
  3009   002834  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  3010                           
  3011                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  3012   002836  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  3013   002838  EC7F  F014         	call	_ENVIA_NIBBLE
  3014                           
  3015                           ;LCD.c: 63:  aux = dato << 4;
  3016   00283C  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  3017   00283E  0BF0               	andlw	240
  3018   002840  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  3019                           
  3020                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  3021   002842  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  3022   002844  EC7F  F014         	call	_ENVIA_NIBBLE
  3023   002848  0012               	return		;funcret
  3024   00284A                     __end_of_ENVIA_CHAR:
  3025                           	callstack 0
  3026                           
  3027 ;; *************** function _LEER_LCD *****************
  3028 ;; Defined at:
  3029 ;;		line 121 in file "LCD.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  aux             1    0[COMRAM] unsigned char 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/4
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3046 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3047 ;;Total ram usage:        1 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_ENVIA_CHAR
  3053 ;;		_ENVIA_LCD_CMD
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text13
  3058   0026EC                     __ptext13:
  3059                           	callstack 0
  3060   0026EC                     _LEER_LCD:
  3061                           	callstack 123
  3062                           
  3063                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3064                           
  3065                           ;incstack = 0
  3066   0026EC  0EF8               	movlw	248
  3067   0026EE  6EC9               	movwf	201,c	;volatile
  3068                           
  3069                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  3070   0026F0  90C1               	bcf	193,0,c	;volatile
  3071                           
  3072                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  3073   0026F2  82C1               	bsf	193,1,c	;volatile
  3074                           
  3075                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  3076   0026F4  84C1               	bsf	193,2,c	;volatile
  3077                           
  3078                           ;LCD.c: 128:         _delay(1200);
  3079   0026F6  0EF0               	movlw	240
  3080   0026F8                     u287:
  3081   0026F8  D000               	nop2	
  3082   0026FA  2EE8               	decfsz	wreg,f,c
  3083   0026FC  D7FD               	bra	u287
  3084                           
  3085                           ;LCD.c: 130:  aux = PORTD;
  3086   0026FE  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  3087                           
  3088                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  3089   002702  94C1               	bcf	193,2,c	;volatile
  3090                           
  3091                           ;LCD.c: 132:         _delay(1200);
  3092   002704  0EF0               	movlw	240
  3093   002706                     u297:
  3094   002706  D000               	nop2	
  3095   002708  2EE8               	decfsz	wreg,f,c
  3096   00270A  D7FD               	bra	u297
  3097                           
  3098                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  3099   00270C  84C1               	bsf	193,2,c	;volatile
  3100                           
  3101                           ;LCD.c: 135:         _delay(1200);
  3102   00270E  0EF0               	movlw	240
  3103   002710                     u307:
  3104   002710  D000               	nop2	
  3105   002712  2EE8               	decfsz	wreg,f,c
  3106   002714  D7FD               	bra	u307
  3107   002716                     l820:
  3108                           
  3109                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3110   002716  94C1               	bcf	193,2,c	;volatile
  3111                           
  3112                           ;LCD.c: 138:  aux = aux & 0x80;
  3113   002718  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  3114   00271A  0B80               	andlw	128
  3115   00271C  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  3116                           
  3117                           ;LCD.c: 139:  while(aux == 0x80)
  3118   00271E  D012               	goto	l836
  3119   002720                     l67:
  3120                           
  3121                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3122   002720  84C1               	bsf	193,2,c	;volatile
  3123                           
  3124                           ;LCD.c: 142:             _delay(1200);
  3125   002722  0EF0               	movlw	240
  3126   002724                     u317:
  3127   002724  D000               	nop2	
  3128   002726  2EE8               	decfsz	wreg,f,c
  3129   002728  D7FD               	bra	u317
  3130                           
  3131                           ;LCD.c: 143:             aux = PORTD;
  3132   00272A  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  3133                           
  3134                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3135   00272E  94C1               	bcf	193,2,c	;volatile
  3136                           
  3137                           ;LCD.c: 145:             _delay(1200);
  3138   002730  0EF0               	movlw	240
  3139   002732                     u327:
  3140   002732  D000               	nop2	
  3141   002734  2EE8               	decfsz	wreg,f,c
  3142   002736  D7FD               	bra	u327
  3143                           
  3144                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3145   002738  84C1               	bsf	193,2,c	;volatile
  3146                           
  3147                           ;LCD.c: 147:             _delay(1200);
  3148   00273A  0EF0               	movlw	240
  3149   00273C                     u337:
  3150   00273C  D000               	nop2	
  3151   00273E  2EE8               	decfsz	wreg,f,c
  3152   002740  D7FD               	bra	u337
  3153   002742  D7E9               	goto	l820
  3154   002744                     l836:
  3155                           
  3156                           ;LCD.c: 139:  while(aux == 0x80)
  3157   002744  0E80               	movlw	128
  3158   002746  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  3159   002748  A4D8               	btfss	status,2,c
  3160   00274A  0012               	return	
  3161   00274C  D7E9               	goto	l67
  3162   00274E                     __end_of_LEER_LCD:
  3163                           	callstack 0
  3164                           
  3165 ;; *************** function _ENVIA_NIBBLE *****************
  3166 ;; Defined at:
  3167 ;;		line 93 in file "LCD.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  dato            1    wreg     unsigned char 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  dato            1    0[COMRAM] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/4
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3182 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3184 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3185 ;;Total ram usage:        1 bytes
  3186 ;; Hardware stack levels used: 1
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_ENVIA_CHAR
  3191 ;;		_LCD_CONFIG
  3192 ;;		_ENVIA_LCD_CMD
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text14
  3197   0028FE                     __ptext14:
  3198                           	callstack 0
  3199   0028FE                     _ENVIA_NIBBLE:
  3200                           	callstack 124
  3201                           
  3202                           ;incstack = 0
  3203                           ;ENVIA_NIBBLE@dato stored from wreg
  3204   0028FE  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  3205                           
  3206                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3207   002900  0E0F               	movlw	15
  3208   002902  16C1               	andwf	193,f,c	;volatile
  3209                           
  3210                           ;LCD.c: 96:  dato &= 0xF0;
  3211   002904  0EF0               	movlw	240
  3212   002906  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  3213                           
  3214                           ;LCD.c: 97:  LATD|= dato;
  3215   002908  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  3216   00290A  12C1               	iorwf	193,f,c	;volatile
  3217                           
  3218                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3219   00290C  84C1               	bsf	193,2,c	;volatile
  3220                           
  3221                           ;LCD.c: 100:         _delay(1200);
  3222   00290E  0EF0               	movlw	240
  3223   002910                     u347:
  3224   002910  D000               	nop2	
  3225   002912  2EE8               	decfsz	wreg,f,c
  3226   002914  D7FD               	bra	u347
  3227                           
  3228                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3229   002916  94C1               	bcf	193,2,c	;volatile
  3230   002918  0012               	return		;funcret
  3231   00291A                     __end_of_ENVIA_NIBBLE:
  3232                           	callstack 0
  3233                           
  3234                           	psect	rparam
  3235   000001                     ___rparam_used  equ	1
  3236   000000                     ___param_bank   equ	0
  3237   000000                     __Lparam        equ	__Lrparam
  3238   000000                     __Hparam        equ	__Hrparam
  3239                           
  3240                           	psect	config
  3241                           
  3242                           ;Config register CONFIG1 @ 0x300000
  3243                           ;	External Oscillator Selection
  3244                           ;	FEXTOSC = OFF, Oscillator not enabled
  3245                           ;	Reset Oscillator Selection
  3246                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3247   300000                     	org	3145728
  3248   300000  FC                 	db	252
  3249                           
  3250                           ;Config register CONFIG2 @ 0x300001
  3251                           ;	Clock out Enable bit
  3252                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3253                           ;	PRLOCKED One-Way Set Enable bit
  3254                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3255                           ;	Clock Switch Enable bit
  3256                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3257                           ;	Fail-Safe Clock Monitor Enable bit
  3258                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3259   300001                     	org	3145729
  3260   300001  FF                 	db	255
  3261                           
  3262                           ;Config register CONFIG3 @ 0x300002
  3263                           ;	MCLR Enable bit
  3264                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3265                           ;	Power-up timer selection bits
  3266                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  3267                           ;	Multi-vector enable bit
  3268                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3269                           ;	IVTLOCK bit One-way set enable bit
  3270                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3271                           ;	Low Power BOR Enable bit
  3272                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3273                           ;	Brown-out Reset Enable bits
  3274                           ;	BOREN = OFF, Brown-out Reset disabled
  3275   300002                     	org	3145730
  3276   300002  3D                 	db	61
  3277                           
  3278                           ;Config register CONFIG4 @ 0x300003
  3279                           ;	Brown-out Reset Voltage Selection bits
  3280                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3281                           ;	ZCD Disable bit
  3282                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3283                           ;	PPSLOCK bit One-Way Set Enable bit
  3284                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3285                           ;	Stack Full/Underflow Reset Enable bit
  3286                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3287                           ;	Low Voltage Programming Enable bit
  3288                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3289                           ;	Extended Instruction Set Enable bit
  3290                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3291   300003                     	org	3145731
  3292   300003  DF                 	db	223
  3293                           
  3294                           ;Config register CONFIG5 @ 0x300004
  3295                           ;	WDT Period selection bits
  3296                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3297                           ;	WDT operating mode
  3298                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3299   300004                     	org	3145732
  3300   300004  9F                 	db	159
  3301                           
  3302                           ;Config register CONFIG6 @ 0x300005
  3303                           ;	WDT Window Select bits
  3304                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3305                           ;	WDT input clock selector
  3306                           ;	WDTCCS = SC, Software Control
  3307   300005                     	org	3145733
  3308   300005  FF                 	db	255
  3309                           
  3310                           ;Config register CONFIG7 @ 0x300006
  3311                           ;	Boot Block Size selection bits
  3312                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3313                           ;	Boot Block enable bit
  3314                           ;	BBEN = OFF, Boot block disabled
  3315                           ;	Storage Area Flash enable bit
  3316                           ;	SAFEN = OFF, SAF disabled
  3317                           ;	Background Debugger
  3318                           ;	DEBUG = OFF, Background Debugger disabled
  3319   300006                     	org	3145734
  3320   300006  FF                 	db	255
  3321                           
  3322                           ;Config register CONFIG8 @ 0x300007
  3323                           ;	Boot Block Write Protection bit
  3324                           ;	WRTB = OFF, Boot Block not Write protected
  3325                           ;	Configuration Register Write Protection bit
  3326                           ;	WRTC = OFF, Configuration registers not Write protected
  3327                           ;	Data EEPROM Write Protection bit
  3328                           ;	WRTD = OFF, Data EEPROM not Write protected
  3329                           ;	SAF Write protection bit
  3330                           ;	WRTSAF = OFF, SAF not Write Protected
  3331                           ;	Application Block write protection bit
  3332                           ;	WRTAPP = OFF, Application Block not write protected
  3333   300007                     	org	3145735
  3334   300007  FF                 	db	255
  3335                           
  3336                           ;Config register CONFIG10 @ 0x300009
  3337                           ;	PFM and Data EEPROM Code Protection bit
  3338                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3339   300009                     	org	3145737
  3340   300009  FF                 	db	255
  3341                           tosu	equ	0x4FF
  3342                           tosh	equ	0x4FE
  3343                           tosl	equ	0x4FD
  3344                           stkptr	equ	0x4FC
  3345                           pclatu	equ	0x4FB
  3346                           pclath	equ	0x4FA
  3347                           pcl	equ	0x4F9
  3348                           tblptru	equ	0x4F8
  3349                           tblptrh	equ	0x4F7
  3350                           tblptrl	equ	0x4F6
  3351                           tablat	equ	0x4F5
  3352                           prodh	equ	0x4F4
  3353                           prodl	equ	0x4F3
  3354                           indf0	equ	0x4EF
  3355                           postinc0	equ	0x4EE
  3356                           postdec0	equ	0x4ED
  3357                           preinc0	equ	0x4EC
  3358                           plusw0	equ	0x4EB
  3359                           fsr0h	equ	0x4EA
  3360                           fsr0l	equ	0x4E9
  3361                           wreg	equ	0x4E8
  3362                           indf1	equ	0x4E7
  3363                           postinc1	equ	0x4E6
  3364                           postdec1	equ	0x4E5
  3365                           preinc1	equ	0x4E4
  3366                           plusw1	equ	0x4E3
  3367                           fsr1h	equ	0x4E2
  3368                           fsr1l	equ	0x4E1
  3369                           bsr	equ	0x4E0
  3370                           indf2	equ	0x4DF
  3371                           postinc2	equ	0x4DE
  3372                           postdec2	equ	0x4DD
  3373                           preinc2	equ	0x4DC
  3374                           plusw2	equ	0x4DB
  3375                           fsr2h	equ	0x4DA
  3376                           fsr2l	equ	0x4D9
  3377                           status	equ	0x4D8

Data Sizes:
    Strings     38
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      11
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[13]), STR_3(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->___lbdiv
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    ___lbdiv->___lbmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1548
                                              8 COMRAM     2     2      0
                         _BORRAR_LCD
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___lbdiv
                            ___lbmod
                          _configuro
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     169
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     172
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     225
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     217
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
   ___lbdiv
     ___lbmod (ARG)
   ___lbmod
   _configuro
   _lcd_init
     _BORRAR_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRh        1100      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBIGSFRll        173      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     10      11     11.6%
BITBIGSFRlh          5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      11      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Jun 06 17:49:15 2025

                     l67 2720            ENVIA_CHAR@aux 0503                      l120 2682  
                    l820 2716                      l836 2744                      l874 28F0  
                    u207 2666                      u160 27C8                      u217 26DC  
                    u307 2710                      u227 2858                      u317 2724  
                    u237 275E                      u327 2732                      u247 276C  
                    u337 273C                      u257 277C                      u347 2910  
                    u267 27F2                      u277 2824                      u287 26F8  
                    u297 2706              LEER_LCD@aux 0501                      wreg 04E8  
           ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 0501           ENVIA_CHAR@dato 0502  
                   l1042 28AC                     l1114 2678                     l1052 28D8  
                   l1060 27BE                     l1118 2684                     l1048 28C4  
                   l1072 27DA                     l1064 27C4                     l1076 27E2  
                   l1092 2892                     l1084 287A                     STR_1 2601  
                   STR_2 2610                     STR_3 261D                     _LATD 04C1  
                   _main 2628                     start FFFC            ?_CURSOR_ONOFF 0501  
           ___param_bank 0000          ??_ENVIA_LCD_CMD 0502         __end_of_LEER_LCD 274E  
                  ?_main 0501          __end_of___lbdiv 27E6          __end_of___lbmod 289A  
                  _OSCEN 00B3                    _PORTD 04D1                    _TRISD 04C9  
            ?_POS_CURSOR 0504                    tablat 04F5                    status 04D8  
        ___lbdiv@divisor 0505          ___lbdiv@counter 0507           ??_CURSOR_ONOFF 0504  
        __initialization 2932             __end_of_main 26EC          _ESCRIBE_MENSAJE 28BE  
                 ??_main 0509            __activetblptr 0001                   _ANSELD 0418  
                 _OSCFRQ 00B1         __end_of_lcd_init 2872                ??___lbdiv 0506  
   __end_of_ENVIA_NIBBLE 291A                ??___lbmod 0502                   _cuenta 050B  
                 isa$std 0001             __mediumconst 2600                   tblptrh 04F7  
                 tblptrl 04F6                   tblptru 04F8             ??_BORRAR_LCD 0504  
       ___lbdiv@dividend 0506          ___lbmod@divisor 0501                ?_LEER_LCD 0501  
             __accesstop 0560  __end_of__initialization 2934          ___lbmod@counter 0503  
           ??_LCD_CONFIG 0504            ___rparam_used 0001             ??_ENVIA_CHAR 0502  
__end_of_ESCRIBE_MENSAJE 28E2           __pcstackCOMRAM 0501       __end_of_BORRAR_LCD 2952  
       ___lbdiv@quotient 0508         ENVIA_LCD_CMD@aux 0503     __end_of_CURSOR_ONOFF 28FE  
     __end_of_LCD_CONFIG 27AE       __end_of_ENVIA_CHAR 284A               ??_LEER_LCD 0501  
       ENVIA_NIBBLE@dato 0501                  _OSCCON1 00AD             ??_POS_CURSOR 0505  
              ?_lcd_init 0501                  __Hparam 0000                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 0504        __end_of_configuro 2932                  ___lbdiv 27AE  
                ___lbmod 2872             __psmallconst 2600    __end_of_ENVIA_LCD_CMD 2818  
                __pcinit 2932       __end_of_POS_CURSOR 28BE                  __ramtop 2600  
                __ptext0 2628                  __ptext1 284A                  __ptext2 274E  
                __ptext3 28E2                  __ptext4 2942                  __ptext5 294A  
                __ptext6 291A                  __ptext7 2872                  __ptext8 27AE  
                __ptext9 289A               ??_lcd_init 0505             _ENVIA_NIBBLE 28FE  
   end_of_initialization 2934         ___lbmod@dividend 0502                _TRISBbits 04C7  
            ___lbmod@rem 0504             _CURSOR_ONOFF 28E2       CURSOR_ONOFF@estado 0504  
          ??_CURSOR_HOME 0504      start_initialization 2932        ENVIA_LCD_CMD@dato 0502  
            __pbssCOMRAM 050B      __end_of_CURSOR_HOME 294A                 ?___lbdiv 0505  
               ?___lbmod 0501                _configuro 291A              __smallconst 2600  
               _LEER_LCD 26EC                 _LATDbits 04C1         ESCRIBE_MENSAJE@i 0507  
         POS_CURSOR@fila 0505               ?_configuro 0501                 _WPUBbits 0409  
            _CURSOR_HOME 2942                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 2600               _ANSELBbits 0408                 __ptext10 27E6  
               __ptext11 28BE                 __ptext12 2818                 __ptext13 26EC  
               __ptext14 28FE               _BORRAR_LCD 294A                 _lcd_init 284A  
             _LCD_CONFIG 274E               _ENVIA_CHAR 2818                 isa$xinst 0000  
          _ENVIA_LCD_CMD 27E6              ??_configuro 0501        ??_ESCRIBE_MENSAJE 0506  
  ESCRIBE_MENSAJE@cadena 0504           ?_ENVIA_LCD_CMD 0501              ?_BORRAR_LCD 0501  
          ?_ENVIA_NIBBLE 0501               _POS_CURSOR 289A              ?_LCD_CONFIG 0501  
     ESCRIBE_MENSAJE@tam 0505              ?_ENVIA_CHAR 0501        POS_CURSOR@columna 0504  
