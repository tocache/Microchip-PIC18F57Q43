

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jun 23 19:41:34 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text23,global,reloc=4,class=CODE,space=0,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text26,global,reloc=4,class=CODE,space=0,delta=1
    38                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42   000000                     
    43                           ; Generated 04/02/2025 GMT
    44                           ; 
    45                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F57Q43 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77   0004E0                     bsr             equ	1248
    78   0004E9                     fsr0            equ	1257
    79   0004EA                     fsr0h           equ	1258
    80   0004E9                     fsr0l           equ	1257
    81   0004E1                     fsr1            equ	1249
    82   0004E2                     fsr1h           equ	1250
    83   0004E1                     fsr1l           equ	1249
    84   0004D9                     fsr2            equ	1241
    85   0004DA                     fsr2h           equ	1242
    86   0004D9                     fsr2l           equ	1241
    87   0004EF                     indf0           equ	1263
    88   0004E7                     indf1           equ	1255
    89   0004DF                     indf2           equ	1247
    90   0004D6                     intcon          equ	1238
    91   000041                     nvmcon          equ	65
    92   0004F9                     pcl             equ	1273
    93   0004FA                     pclath          equ	1274
    94   0004FB                     pclatu          equ	1275
    95   0004EB                     plusw0          equ	1259
    96   0004E3                     plusw1          equ	1251
    97   0004DB                     plusw2          equ	1243
    98   0004ED                     postdec0        equ	1261
    99   0004E5                     postdec1        equ	1253
   100   0004DD                     postdec2        equ	1245
   101   0004EE                     postinc0        equ	1262
   102   0004E6                     postinc1        equ	1254
   103   0004DE                     postinc2        equ	1246
   104   0004EC                     preinc0         equ	1260
   105   0004E4                     preinc1         equ	1252
   106   0004DC                     preinc2         equ	1244
   107   0004F3                     prod            equ	1267
   108   0004F4                     prodh           equ	1268
   109   0004F3                     prodl           equ	1267
   110   0004D8                     status          equ	1240
   111   0004F5                     tablat          equ	1269
   112   0004F6                     tblptr          equ	1270
   113   0004F7                     tblptrh         equ	1271
   114   0004F6                     tblptrl         equ	1270
   115   0004F8                     tblptru         equ	1272
   116   0004FD                     tosl            equ	1277
   117   0004E8                     wreg            equ	1256
   118   000039                     CLKRCON         equ	57	;# 
   119   00003A                     CLKRCLK         equ	58	;# 
   120   000040                     NVMCON0         equ	64	;# 
   121   000041                     NVMCON1         equ	65	;# 
   122   000042                     NVMLOCK         equ	66	;# 
   123   000043                     NVMADR          equ	67	;# 
   124   000043                     NVMADRL         equ	67	;# 
   125   000044                     NVMADRH         equ	68	;# 
   126   000045                     NVMADRU         equ	69	;# 
   127   000046                     NVMDAT          equ	70	;# 
   128   000046                     NVMDATL         equ	70	;# 
   129   000047                     NVMDATH         equ	71	;# 
   130   000048                     VREGCON         equ	72	;# 
   131   000049                     BORCON          equ	73	;# 
   132   00004A                     HLVDCON0        equ	74	;# 
   133   00004B                     HLVDCON1        equ	75	;# 
   134   00004C                     ZCDCON          equ	76	;# 
   135   000060                     PMD0            equ	96	;# 
   136   000061                     PMD1            equ	97	;# 
   137   000063                     PMD3            equ	99	;# 
   138   000064                     PMD4            equ	100	;# 
   139   000065                     PMD5            equ	101	;# 
   140   000066                     PMD6            equ	102	;# 
   141   000067                     PMD7            equ	103	;# 
   142   000068                     PMD8            equ	104	;# 
   143   00006A                     MD1CON0         equ	106	;# 
   144   00006B                     MD1CON1         equ	107	;# 
   145   00006C                     MD1SRC          equ	108	;# 
   146   00006D                     MD1CARL         equ	109	;# 
   147   00006E                     MD1CARH         equ	110	;# 
   148   00006F                     CMOUT           equ	111	;# 
   149   000070                     CM1CON0         equ	112	;# 
   150   000071                     CM1CON1         equ	113	;# 
   151   000072                     CM1NCH          equ	114	;# 
   152   000073                     CM1PCH          equ	115	;# 
   153   000074                     CM2CON0         equ	116	;# 
   154   000075                     CM2CON1         equ	117	;# 
   155   000076                     CM2NCH          equ	118	;# 
   156   000077                     CM2PCH          equ	119	;# 
   157   000078                     WDTCON0         equ	120	;# 
   158   000079                     WDTCON1         equ	121	;# 
   159   00007A                     WDTPS           equ	122	;# 
   160   00007A                     WDTPSL          equ	122	;# 
   161   00007B                     WDTPSH          equ	123	;# 
   162   00007C                     WDTTMR          equ	124	;# 
   163   00007D                     DAC1DAT         equ	125	;# 
   164   00007D                     DAC1DATL        equ	125	;# 
   165   00007F                     DAC1CON         equ	127	;# 
   166   000080                     SPI1RXB         equ	128	;# 
   167   000081                     SPI1TXB         equ	129	;# 
   168   000082                     SPI1TCNT        equ	130	;# 
   169   000082                     SPI1TCNTL       equ	130	;# 
   170   000083                     SPI1TCNTH       equ	131	;# 
   171   000084                     SPI1CON0        equ	132	;# 
   172   000085                     SPI1CON1        equ	133	;# 
   173   000086                     SPI1CON2        equ	134	;# 
   174   000087                     SPI1STATUS      equ	135	;# 
   175   000088                     SPI1TWIDTH      equ	136	;# 
   176   000089                     SPI1BAUD        equ	137	;# 
   177   00008A                     SPI1INTF        equ	138	;# 
   178   00008B                     SPI1INTE        equ	139	;# 
   179   00008C                     SPI1CLK         equ	140	;# 
   180   00008D                     SPI2RXB         equ	141	;# 
   181   00008E                     SPI2TXB         equ	142	;# 
   182   00008F                     SPI2TCNT        equ	143	;# 
   183   00008F                     SPI2TCNTL       equ	143	;# 
   184   000090                     SPI2TCNTH       equ	144	;# 
   185   000091                     SPI2CON0        equ	145	;# 
   186   000092                     SPI2CON1        equ	146	;# 
   187   000093                     SPI2CON2        equ	147	;# 
   188   000094                     SPI2STATUS      equ	148	;# 
   189   000095                     SPI2TWIDTH      equ	149	;# 
   190   000096                     SPI2BAUD        equ	150	;# 
   191   000097                     SPI2INTF        equ	151	;# 
   192   000098                     SPI2INTE        equ	152	;# 
   193   000099                     SPI2CLK         equ	153	;# 
   194   0000AC                     ACTCON          equ	172	;# 
   195   0000AD                     OSCCON1         equ	173	;# 
   196   0000AE                     OSCCON2         equ	174	;# 
   197   0000AF                     OSCCON3         equ	175	;# 
   198   0000B0                     OSCTUNE         equ	176	;# 
   199   0000B1                     OSCFRQ          equ	177	;# 
   200   0000B1                     OSCFREQ         equ	177	;# 
   201   0000B2                     OSCSTAT         equ	178	;# 
   202   0000B2                     OSCSTAT1        equ	178	;# 
   203   0000B3                     OSCEN           equ	179	;# 
   204   0000B4                     PRLOCK          equ	180	;# 
   205   0000B5                     SCANPR          equ	181	;# 
   206   0000B6                     DMA1PR          equ	182	;# 
   207   0000B7                     DMA2PR          equ	183	;# 
   208   0000B8                     DMA3PR          equ	184	;# 
   209   0000B9                     DMA4PR          equ	185	;# 
   210   0000BA                     DMA5PR          equ	186	;# 
   211   0000BB                     DMA6PR          equ	187	;# 
   212   0000BE                     MAINPR          equ	190	;# 
   213   0000BF                     ISRPR           equ	191	;# 
   214   0000D4                     CLCDATA         equ	212	;# 
   215   0000D5                     CLCSELECT       equ	213	;# 
   216   0000D6                     CLCnCON         equ	214	;# 
   217   0000D7                     CLCnPOL         equ	215	;# 
   218   0000D8                     CLCnSEL0        equ	216	;# 
   219   0000D9                     CLCnSEL1        equ	217	;# 
   220   0000DA                     CLCnSEL2        equ	218	;# 
   221   0000DB                     CLCnSEL3        equ	219	;# 
   222   0000DC                     CLCnGLS0        equ	220	;# 
   223   0000DD                     CLCnGLS1        equ	221	;# 
   224   0000DE                     CLCnGLS2        equ	222	;# 
   225   0000DF                     CLCnGLS3        equ	223	;# 
   226   0000E8                     DMASELECT       equ	232	;# 
   227   0000E9                     DMAnBUF         equ	233	;# 
   228   0000EA                     DMAnDCNT        equ	234	;# 
   229   0000EA                     DMAnDCNTL       equ	234	;# 
   230   0000EB                     DMAnDCNTH       equ	235	;# 
   231   0000EC                     DMAnDPTR        equ	236	;# 
   232   0000EC                     DMAnDPTRL       equ	236	;# 
   233   0000ED                     DMAnDPTRH       equ	237	;# 
   234   0000EE                     DMAnDSZ         equ	238	;# 
   235   0000EE                     DMAnDSZL        equ	238	;# 
   236   0000EF                     DMAnDSZH        equ	239	;# 
   237   0000F0                     DMAnDSA         equ	240	;# 
   238   0000F0                     DMAnDSAL        equ	240	;# 
   239   0000F1                     DMAnDSAH        equ	241	;# 
   240   0000F2                     DMAnSCNT        equ	242	;# 
   241   0000F2                     DMAnSCNTL       equ	242	;# 
   242   0000F3                     DMAnSCNTH       equ	243	;# 
   243   0000F4                     DMAnSPTR        equ	244	;# 
   244   0000F4                     DMAnSPTRL       equ	244	;# 
   245   0000F5                     DMAnSPTRH       equ	245	;# 
   246   0000F6                     DMAnSPTRU       equ	246	;# 
   247   0000F7                     DMAnSSZ         equ	247	;# 
   248   0000F7                     DMAnSSZL        equ	247	;# 
   249   0000F8                     DMAnSSZH        equ	248	;# 
   250   0000F9                     DMAnSSA         equ	249	;# 
   251   0000F9                     DMAnSSAL        equ	249	;# 
   252   0000FA                     DMAnSSAH        equ	250	;# 
   253   0000FB                     DMAnSSAU        equ	251	;# 
   254   0000FC                     DMAnCON0        equ	252	;# 
   255   0000FD                     DMAnCON1        equ	253	;# 
   256   0000FE                     DMAnAIRQ        equ	254	;# 
   257   0000FF                     DMAnSIRQ        equ	255	;# 
   258   000200                     PPSLOCK         equ	512	;# 
   259   000201                     RA0PPS          equ	513	;# 
   260   000202                     RA1PPS          equ	514	;# 
   261   000203                     RA2PPS          equ	515	;# 
   262   000204                     RA3PPS          equ	516	;# 
   263   000205                     RA4PPS          equ	517	;# 
   264   000206                     RA5PPS          equ	518	;# 
   265   000207                     RA6PPS          equ	519	;# 
   266   000208                     RA7PPS          equ	520	;# 
   267   000209                     RB0PPS          equ	521	;# 
   268   00020A                     RB1PPS          equ	522	;# 
   269   00020B                     RB2PPS          equ	523	;# 
   270   00020C                     RB3PPS          equ	524	;# 
   271   00020D                     RB4PPS          equ	525	;# 
   272   00020E                     RB5PPS          equ	526	;# 
   273   00020F                     RB6PPS          equ	527	;# 
   274   000210                     RB7PPS          equ	528	;# 
   275   000211                     RC0PPS          equ	529	;# 
   276   000212                     RC1PPS          equ	530	;# 
   277   000213                     RC2PPS          equ	531	;# 
   278   000214                     RC3PPS          equ	532	;# 
   279   000215                     RC4PPS          equ	533	;# 
   280   000216                     RC5PPS          equ	534	;# 
   281   000217                     RC6PPS          equ	535	;# 
   282   000218                     RC7PPS          equ	536	;# 
   283   000219                     RD0PPS          equ	537	;# 
   284   00021A                     RD1PPS          equ	538	;# 
   285   00021B                     RD2PPS          equ	539	;# 
   286   00021C                     RD3PPS          equ	540	;# 
   287   00021D                     RD4PPS          equ	541	;# 
   288   00021E                     RD5PPS          equ	542	;# 
   289   00021F                     RD6PPS          equ	543	;# 
   290   000220                     RD7PPS          equ	544	;# 
   291   000221                     RE0PPS          equ	545	;# 
   292   000222                     RE1PPS          equ	546	;# 
   293   000223                     RE2PPS          equ	547	;# 
   294   000229                     RF0PPS          equ	553	;# 
   295   00022A                     RF1PPS          equ	554	;# 
   296   00022B                     RF2PPS          equ	555	;# 
   297   00022C                     RF3PPS          equ	556	;# 
   298   00022D                     RF4PPS          equ	557	;# 
   299   00022E                     RF5PPS          equ	558	;# 
   300   00022F                     RF6PPS          equ	559	;# 
   301   000230                     RF7PPS          equ	560	;# 
   302   00023E                     INT0PPS         equ	574	;# 
   303   00023F                     INT1PPS         equ	575	;# 
   304   000240                     INT2PPS         equ	576	;# 
   305   000241                     T0CKIPPS        equ	577	;# 
   306   000242                     T1CKIPPS        equ	578	;# 
   307   000243                     T1GPPS          equ	579	;# 
   308   000244                     T3CKIPPS        equ	580	;# 
   309   000245                     T3GPPS          equ	581	;# 
   310   000246                     T5CKIPPS        equ	582	;# 
   311   000247                     T5GPPS          equ	583	;# 
   312   000248                     T2INPPS         equ	584	;# 
   313   000249                     T4INPPS         equ	585	;# 
   314   00024A                     T6INPPS         equ	586	;# 
   315   00024F                     CCP1PPS         equ	591	;# 
   316   000250                     CCP2PPS         equ	592	;# 
   317   000251                     CCP3PPS         equ	593	;# 
   318   000253                     PWM1ERSPPS      equ	595	;# 
   319   000254                     PWM2ERSPPS      equ	596	;# 
   320   000255                     PWM3ERSPPS      equ	597	;# 
   321   000257                     PWMIN0PPS       equ	599	;# 
   322   000258                     PWMIN1PPS       equ	600	;# 
   323   000259                     SMT1WINPPS      equ	601	;# 
   324   00025A                     SMT1SIGPPS      equ	602	;# 
   325   00025B                     CWG1PPS         equ	603	;# 
   326   00025B                     CWG1INPPS       equ	603	;# 
   327   00025C                     CWG2PPS         equ	604	;# 
   328   00025C                     CWG2INPPS       equ	604	;# 
   329   00025D                     CWG3PPS         equ	605	;# 
   330   00025D                     CWG3INPPS       equ	605	;# 
   331   00025E                     MD1CARLPPS      equ	606	;# 
   332   00025E                     MDCARLPPS       equ	606	;# 
   333   00025F                     MD1CARHPPS      equ	607	;# 
   334   00025F                     MDCARHPPS       equ	607	;# 
   335   000260                     MD1SRCPPS       equ	608	;# 
   336   000260                     MDSRCPPS        equ	608	;# 
   337   000261                     CLCIN0PPS       equ	609	;# 
   338   000262                     CLCIN1PPS       equ	610	;# 
   339   000263                     CLCIN2PPS       equ	611	;# 
   340   000264                     CLCIN3PPS       equ	612	;# 
   341   000265                     CLCIN4PPS       equ	613	;# 
   342   000266                     CLCIN5PPS       equ	614	;# 
   343   000267                     CLCIN6PPS       equ	615	;# 
   344   000268                     CLCIN7PPS       equ	616	;# 
   345   000269                     ADACTPPS        equ	617	;# 
   346   00026A                     SPI1SCKPPS      equ	618	;# 
   347   00026B                     SPI1SDIPPS      equ	619	;# 
   348   00026C                     SPI1SSPPS       equ	620	;# 
   349   00026D                     SPI2SCKPPS      equ	621	;# 
   350   00026E                     SPI2SDIPPS      equ	622	;# 
   351   00026F                     SPI2SSPPS       equ	623	;# 
   352   000270                     I2C1SDAPPS      equ	624	;# 
   353   000271                     I2C1SCLPPS      equ	625	;# 
   354   000272                     U1RXPPS         equ	626	;# 
   355   000273                     U1CTSPPS        equ	627	;# 
   356   000274                     U2RXPPS         equ	628	;# 
   357   000275                     U2CTSPPS        equ	629	;# 
   358   000276                     U3RXPPS         equ	630	;# 
   359   000277                     U3CTSPPS        equ	631	;# 
   360   000278                     U4RXPPS         equ	632	;# 
   361   000279                     U4CTSPPS        equ	633	;# 
   362   00027A                     U5RXPPS         equ	634	;# 
   363   00027B                     U5CTSPPS        equ	635	;# 
   364   000286                     RC4I2C          equ	646	;# 
   365   000287                     RC3I2C          equ	647	;# 
   366   000288                     RB2I2C          equ	648	;# 
   367   000289                     RB1I2C          equ	649	;# 
   368   00028B                     I2C1RXB         equ	651	;# 
   369   00028C                     I2C1TXB         equ	652	;# 
   370   00028D                     I2C1CNT         equ	653	;# 
   371   00028E                     I2C1ADB0        equ	654	;# 
   372   00028F                     I2C1ADB1        equ	655	;# 
   373   000290                     I2C1ADR0        equ	656	;# 
   374   000291                     I2C1ADR1        equ	657	;# 
   375   000292                     I2C1ADR2        equ	658	;# 
   376   000293                     I2C1ADR3        equ	659	;# 
   377   000294                     I2C1CON0        equ	660	;# 
   378   000295                     I2C1CON1        equ	661	;# 
   379   000296                     I2C1CON2        equ	662	;# 
   380   000297                     I2C1ERR         equ	663	;# 
   381   000298                     I2C1STAT0       equ	664	;# 
   382   000299                     I2C1STAT1       equ	665	;# 
   383   00029A                     I2C1PIR         equ	666	;# 
   384   00029B                     I2C1PIE         equ	667	;# 
   385   00029C                     I2C1CLK         equ	668	;# 
   386   00029D                     I2C1BTO         equ	669	;# 
   387   0002A1                     U1RXB           equ	673	;# 
   388   0002A1                     U1RXBL          equ	673	;# 
   389   0002A2                     U1RXCHK         equ	674	;# 
   390   0002A3                     U1TXB           equ	675	;# 
   391   0002A3                     U1TXBL          equ	675	;# 
   392   0002A4                     U1TXCHK         equ	676	;# 
   393   0002A5                     U1P1            equ	677	;# 
   394   0002A5                     U1P1L           equ	677	;# 
   395   0002A6                     U1P1H           equ	678	;# 
   396   0002A7                     U1P2            equ	679	;# 
   397   0002A7                     U1P2L           equ	679	;# 
   398   0002A8                     U1P2H           equ	680	;# 
   399   0002A9                     U1P3            equ	681	;# 
   400   0002A9                     U1P3L           equ	681	;# 
   401   0002AA                     U1P3H           equ	682	;# 
   402   0002AB                     U1CON0          equ	683	;# 
   403   0002AC                     U1CON1          equ	684	;# 
   404   0002AD                     U1CON2          equ	685	;# 
   405   0002AE                     U1BRG           equ	686	;# 
   406   0002AE                     U1BRGL          equ	686	;# 
   407   0002AF                     U1BRGH          equ	687	;# 
   408   0002B0                     U1FIFO          equ	688	;# 
   409   0002B1                     U1UIR           equ	689	;# 
   410   0002B2                     U1ERRIR         equ	690	;# 
   411   0002B3                     U1ERRIE         equ	691	;# 
   412   0002B4                     U2RXB           equ	692	;# 
   413   0002B4                     U2RXBL          equ	692	;# 
   414   0002B6                     U2TXB           equ	694	;# 
   415   0002B6                     U2TXBL          equ	694	;# 
   416   0002B8                     U2P1            equ	696	;# 
   417   0002B8                     U2P1L           equ	696	;# 
   418   0002BA                     U2P2            equ	698	;# 
   419   0002BA                     U2P2L           equ	698	;# 
   420   0002BC                     U2P3            equ	700	;# 
   421   0002BC                     U2P3L           equ	700	;# 
   422   0002BE                     U2CON0          equ	702	;# 
   423   0002BF                     U2CON1          equ	703	;# 
   424   0002C0                     U2CON2          equ	704	;# 
   425   0002C1                     U2BRG           equ	705	;# 
   426   0002C1                     U2BRGL          equ	705	;# 
   427   0002C2                     U2BRGH          equ	706	;# 
   428   0002C3                     U2FIFO          equ	707	;# 
   429   0002C4                     U2UIR           equ	708	;# 
   430   0002C5                     U2ERRIR         equ	709	;# 
   431   0002C6                     U2ERRIE         equ	710	;# 
   432   0002C7                     U3RXB           equ	711	;# 
   433   0002C7                     U3RXBL          equ	711	;# 
   434   0002C9                     U3TXB           equ	713	;# 
   435   0002C9                     U3TXBL          equ	713	;# 
   436   0002CB                     U3P1            equ	715	;# 
   437   0002CB                     U3P1L           equ	715	;# 
   438   0002CD                     U3P2            equ	717	;# 
   439   0002CD                     U3P2L           equ	717	;# 
   440   0002CF                     U3P3            equ	719	;# 
   441   0002CF                     U3P3L           equ	719	;# 
   442   0002D1                     U3CON0          equ	721	;# 
   443   0002D2                     U3CON1          equ	722	;# 
   444   0002D3                     U3CON2          equ	723	;# 
   445   0002D4                     U3BRG           equ	724	;# 
   446   0002D4                     U3BRGL          equ	724	;# 
   447   0002D5                     U3BRGH          equ	725	;# 
   448   0002D6                     U3FIFO          equ	726	;# 
   449   0002D7                     U3UIR           equ	727	;# 
   450   0002D8                     U3ERRIR         equ	728	;# 
   451   0002D9                     U3ERRIE         equ	729	;# 
   452   0002DA                     U4RXB           equ	730	;# 
   453   0002DA                     U4RXBL          equ	730	;# 
   454   0002DC                     U4TXB           equ	732	;# 
   455   0002DC                     U4TXBL          equ	732	;# 
   456   0002DE                     U4P1            equ	734	;# 
   457   0002DE                     U4P1L           equ	734	;# 
   458   0002E0                     U4P2            equ	736	;# 
   459   0002E0                     U4P2L           equ	736	;# 
   460   0002E2                     U4P3            equ	738	;# 
   461   0002E2                     U4P3L           equ	738	;# 
   462   0002E4                     U4CON0          equ	740	;# 
   463   0002E5                     U4CON1          equ	741	;# 
   464   0002E6                     U4CON2          equ	742	;# 
   465   0002E7                     U4BRG           equ	743	;# 
   466   0002E7                     U4BRGL          equ	743	;# 
   467   0002E8                     U4BRGH          equ	744	;# 
   468   0002E9                     U4FIFO          equ	745	;# 
   469   0002EA                     U4UIR           equ	746	;# 
   470   0002EB                     U4ERRIR         equ	747	;# 
   471   0002EC                     U4ERRIE         equ	748	;# 
   472   0002ED                     U5RXB           equ	749	;# 
   473   0002ED                     U5RXBL          equ	749	;# 
   474   0002EF                     U5TXB           equ	751	;# 
   475   0002EF                     U5TXBL          equ	751	;# 
   476   0002F1                     U5P1            equ	753	;# 
   477   0002F1                     U5P1L           equ	753	;# 
   478   0002F3                     U5P2            equ	755	;# 
   479   0002F3                     U5P2L           equ	755	;# 
   480   0002F5                     U5P3            equ	757	;# 
   481   0002F5                     U5P3L           equ	757	;# 
   482   0002F7                     U5CON0          equ	759	;# 
   483   0002F8                     U5CON1          equ	760	;# 
   484   0002F9                     U5CON2          equ	761	;# 
   485   0002FA                     U5BRG           equ	762	;# 
   486   0002FA                     U5BRGL          equ	762	;# 
   487   0002FB                     U5BRGH          equ	763	;# 
   488   0002FC                     U5FIFO          equ	764	;# 
   489   0002FD                     U5UIR           equ	765	;# 
   490   0002FE                     U5ERRIR         equ	766	;# 
   491   0002FF                     U5ERRIE         equ	767	;# 
   492   000300                     SMT1TMR         equ	768	;# 
   493   000300                     SMT1TMRL        equ	768	;# 
   494   000301                     SMT1TMRH        equ	769	;# 
   495   000302                     SMT1TMRU        equ	770	;# 
   496   000303                     SMT1CPR         equ	771	;# 
   497   000303                     SMT1CPRL        equ	771	;# 
   498   000304                     SMT1CPRH        equ	772	;# 
   499   000305                     SMT1CPRU        equ	773	;# 
   500   000306                     SMT1CPW         equ	774	;# 
   501   000306                     SMT1CPWL        equ	774	;# 
   502   000307                     SMT1CPWH        equ	775	;# 
   503   000308                     SMT1CPWU        equ	776	;# 
   504   000309                     SMT1PR          equ	777	;# 
   505   000309                     SMT1PRL         equ	777	;# 
   506   00030A                     SMT1PRH         equ	778	;# 
   507   00030B                     SMT1PRU         equ	779	;# 
   508   00030C                     SMT1CON0        equ	780	;# 
   509   00030D                     SMT1CON1        equ	781	;# 
   510   00030E                     SMT1STAT        equ	782	;# 
   511   00030F                     SMT1CLK         equ	783	;# 
   512   000310                     SMT1SIG         equ	784	;# 
   513   000311                     SMT1WIN         equ	785	;# 
   514   000318                     TMR0L           equ	792	;# 
   515   000318                     TMR0            equ	792	;# 
   516   000319                     TMR0H           equ	793	;# 
   517   000319                     PR0             equ	793	;# 
   518   00031A                     T0CON0          equ	794	;# 
   519   00031B                     T0CON1          equ	795	;# 
   520   00031C                     TMR1            equ	796	;# 
   521   00031C                     TMR1L           equ	796	;# 
   522   00031D                     TMR1H           equ	797	;# 
   523   00031E                     T1CON           equ	798	;# 
   524   00031E                     TMR1CON         equ	798	;# 
   525   00031F                     T1GCON          equ	799	;# 
   526   00031F                     TMR1GCON        equ	799	;# 
   527   000320                     T1GATE          equ	800	;# 
   528   000320                     TMR1GATE        equ	800	;# 
   529   000321                     T1CLK           equ	801	;# 
   530   000321                     TMR1CLK         equ	801	;# 
   531   000321                     PR1             equ	801	;# 
   532   000322                     T2TMR           equ	802	;# 
   533   000322                     TMR2            equ	802	;# 
   534   000323                     T2PR            equ	803	;# 
   535   000323                     PR2             equ	803	;# 
   536   000324                     T2CON           equ	804	;# 
   537   000325                     T2HLT           equ	805	;# 
   538   000326                     T2CLKCON        equ	806	;# 
   539   000326                     T2CLK           equ	806	;# 
   540   000327                     T2RST           equ	807	;# 
   541   000328                     TMR3            equ	808	;# 
   542   000328                     TMR3L           equ	808	;# 
   543   000329                     TMR3H           equ	809	;# 
   544   00032A                     T3CON           equ	810	;# 
   545   00032A                     TMR3CON         equ	810	;# 
   546   00032B                     T3GCON          equ	811	;# 
   547   00032B                     TMR3GCON        equ	811	;# 
   548   00032C                     T3GATE          equ	812	;# 
   549   00032C                     TMR3GATE        equ	812	;# 
   550   00032D                     T3CLK           equ	813	;# 
   551   00032D                     TMR3CLK         equ	813	;# 
   552   00032D                     PR3             equ	813	;# 
   553   00032E                     T4TMR           equ	814	;# 
   554   00032E                     TMR4            equ	814	;# 
   555   00032F                     T4PR            equ	815	;# 
   556   00032F                     PR4             equ	815	;# 
   557   000330                     T4CON           equ	816	;# 
   558   000331                     T4HLT           equ	817	;# 
   559   000332                     T4CLKCON        equ	818	;# 
   560   000332                     T4CLK           equ	818	;# 
   561   000333                     T4RST           equ	819	;# 
   562   000334                     TMR5            equ	820	;# 
   563   000334                     TMR5L           equ	820	;# 
   564   000335                     TMR5H           equ	821	;# 
   565   000336                     T5CON           equ	822	;# 
   566   000336                     TMR5CON         equ	822	;# 
   567   000337                     T5GCON          equ	823	;# 
   568   000337                     TMR5GCON        equ	823	;# 
   569   000338                     T5GATE          equ	824	;# 
   570   000338                     TMR5GATE        equ	824	;# 
   571   000339                     T5CLK           equ	825	;# 
   572   000339                     TMR5CLK         equ	825	;# 
   573   000339                     PR5             equ	825	;# 
   574   00033A                     T6TMR           equ	826	;# 
   575   00033A                     TMR6            equ	826	;# 
   576   00033B                     T6PR            equ	827	;# 
   577   00033B                     PR6             equ	827	;# 
   578   00033C                     T6CON           equ	828	;# 
   579   00033D                     T6HLT           equ	829	;# 
   580   00033E                     T6CLKCON        equ	830	;# 
   581   00033E                     T6CLK           equ	830	;# 
   582   00033F                     T6RST           equ	831	;# 
   583   000340                     CCPR1           equ	832	;# 
   584   000340                     CCPR1L          equ	832	;# 
   585   000341                     CCPR1H          equ	833	;# 
   586   000342                     CCP1CON         equ	834	;# 
   587   000343                     CCP1CAP         equ	835	;# 
   588   000344                     CCPR2           equ	836	;# 
   589   000344                     CCPR2L          equ	836	;# 
   590   000345                     CCPR2H          equ	837	;# 
   591   000346                     CCP2CON         equ	838	;# 
   592   000347                     CCP2CAP         equ	839	;# 
   593   000348                     CCPR3           equ	840	;# 
   594   000348                     CCPR3L          equ	840	;# 
   595   000349                     CCPR3H          equ	841	;# 
   596   00034A                     CCP3CON         equ	842	;# 
   597   00034B                     CCP3CAP         equ	843	;# 
   598   00034C                     CCPTMRS0        equ	844	;# 
   599   00034F                     CRCDATA         equ	847	;# 
   600   00034F                     CRCDATL         equ	847	;# 
   601   000350                     CRCDATH         equ	848	;# 
   602   000351                     CRCACC          equ	849	;# 
   603   000351                     CRCACCL         equ	849	;# 
   604   000352                     CRCACCH         equ	850	;# 
   605   000353                     CRCSHFT         equ	851	;# 
   606   000353                     CRCSHIFTL       equ	851	;# 
   607   000354                     CRCSHIFTH       equ	852	;# 
   608   000355                     CRCXOR          equ	853	;# 
   609   000355                     CRCXORL         equ	853	;# 
   610   000356                     CRCXORH         equ	854	;# 
   611   000357                     CRCCON0         equ	855	;# 
   612   000358                     CRCCON1         equ	856	;# 
   613   00035A                     SCANLADR        equ	858	;# 
   614   00035A                     SCANLADRL       equ	858	;# 
   615   00035B                     SCANLADRH       equ	859	;# 
   616   00035C                     SCANLADRU       equ	860	;# 
   617   00035D                     SCANHADR        equ	861	;# 
   618   00035D                     SCANHADRL       equ	861	;# 
   619   00035E                     SCANHADRH       equ	862	;# 
   620   00035F                     SCANHADRU       equ	863	;# 
   621   000360                     SCANCON0        equ	864	;# 
   622   000361                     SCANTRIG        equ	865	;# 
   623   000362                     IPR0            equ	866	;# 
   624   000363                     IPR1            equ	867	;# 
   625   000364                     IPR2            equ	868	;# 
   626   000365                     IPR3            equ	869	;# 
   627   000366                     IPR4            equ	870	;# 
   628   000367                     IPR5            equ	871	;# 
   629   000368                     IPR6            equ	872	;# 
   630   000369                     IPR7            equ	873	;# 
   631   00036A                     IPR8            equ	874	;# 
   632   00036B                     IPR9            equ	875	;# 
   633   00036C                     IPR10           equ	876	;# 
   634   00036D                     IPR11           equ	877	;# 
   635   00036E                     IPR12           equ	878	;# 
   636   00036F                     IPR13           equ	879	;# 
   637   000370                     IPR14           equ	880	;# 
   638   000371                     IPR15           equ	881	;# 
   639   000373                     STATUS_CSHAD    equ	883	;# 
   640   000374                     WREG_CSHAD      equ	884	;# 
   641   000375                     BSR_CSHAD       equ	885	;# 
   642   000376                     SHADCON         equ	886	;# 
   643   000377                     STATUS_SHAD     equ	887	;# 
   644   000378                     WREG_SHAD       equ	888	;# 
   645   000379                     BSR_SHAD        equ	889	;# 
   646   00037A                     PCLATH_SHAD     equ	890	;# 
   647   00037B                     PCLATU_SHAD     equ	891	;# 
   648   00037C                     FSR0SH          equ	892	;# 
   649   00037C                     FSR0L_SHAD      equ	892	;# 
   650   00037D                     FSR0H_SHAD      equ	893	;# 
   651   00037E                     FSR1SH          equ	894	;# 
   652   00037E                     FSR1L_SHAD      equ	894	;# 
   653   00037F                     FSR1H_SHAD      equ	895	;# 
   654   000380                     FSR2SH          equ	896	;# 
   655   000380                     FSR2L_SHAD      equ	896	;# 
   656   000381                     FSR2H_SHAD      equ	897	;# 
   657   000382                     PRODSH          equ	898	;# 
   658   000382                     PRODL_SHAD      equ	898	;# 
   659   000383                     PRODH_SHAD      equ	899	;# 
   660   0003BC                     CWG1CLK         equ	956	;# 
   661   0003BC                     CWG1CLKCON      equ	956	;# 
   662   0003BD                     CWG1ISM         equ	957	;# 
   663   0003BD                     CWG1DAT         equ	957	;# 
   664   0003BE                     CWG1DBR         equ	958	;# 
   665   0003BF                     CWG1DBF         equ	959	;# 
   666   0003C0                     CWG1CON0        equ	960	;# 
   667   0003C1                     CWG1CON1        equ	961	;# 
   668   0003C2                     CWG1AS0         equ	962	;# 
   669   0003C3                     CWG1AS1         equ	963	;# 
   670   0003C4                     CWG1STR         equ	964	;# 
   671   0003C5                     CWG2CLK         equ	965	;# 
   672   0003C5                     CWG2CLKCON      equ	965	;# 
   673   0003C6                     CWG2ISM         equ	966	;# 
   674   0003C6                     CWG2DAT         equ	966	;# 
   675   0003C7                     CWG2DBR         equ	967	;# 
   676   0003C8                     CWG2DBF         equ	968	;# 
   677   0003C9                     CWG2CON0        equ	969	;# 
   678   0003CA                     CWG2CON1        equ	970	;# 
   679   0003CB                     CWG2AS0         equ	971	;# 
   680   0003CC                     CWG2AS1         equ	972	;# 
   681   0003CD                     CWG2STR         equ	973	;# 
   682   0003CE                     CWG3CLK         equ	974	;# 
   683   0003CE                     CWG3CLKCON      equ	974	;# 
   684   0003CF                     CWG3ISM         equ	975	;# 
   685   0003CF                     CWG3DAT         equ	975	;# 
   686   0003D0                     CWG3DBR         equ	976	;# 
   687   0003D1                     CWG3DBF         equ	977	;# 
   688   0003D2                     CWG3CON0        equ	978	;# 
   689   0003D3                     CWG3CON1        equ	979	;# 
   690   0003D4                     CWG3AS0         equ	980	;# 
   691   0003D5                     CWG3AS1         equ	981	;# 
   692   0003D6                     CWG3STR         equ	982	;# 
   693   0003D7                     FVRCON          equ	983	;# 
   694   0003D8                     ADCPCON         equ	984	;# 
   695   0003D8                     ADCP            equ	984	;# 
   696   0003D9                     ADLTH           equ	985	;# 
   697   0003D9                     ADLTHL          equ	985	;# 
   698   0003DA                     ADLTHH          equ	986	;# 
   699   0003DB                     ADUTH           equ	987	;# 
   700   0003DB                     ADUTHL          equ	987	;# 
   701   0003DC                     ADUTHH          equ	988	;# 
   702   0003DD                     ADERR           equ	989	;# 
   703   0003DD                     ADERRL          equ	989	;# 
   704   0003DE                     ADERRH          equ	990	;# 
   705   0003DF                     ADSTPT          equ	991	;# 
   706   0003DF                     ADSTPTL         equ	991	;# 
   707   0003E0                     ADSTPTH         equ	992	;# 
   708   0003E1                     ADFLTR          equ	993	;# 
   709   0003E1                     ADFLTRL         equ	993	;# 
   710   0003E2                     ADFLTRH         equ	994	;# 
   711   0003E3                     ADACC           equ	995	;# 
   712   0003E3                     ADACCL          equ	995	;# 
   713   0003E4                     ADACCH          equ	996	;# 
   714   0003E5                     ADACCU          equ	997	;# 
   715   0003E6                     ADCNT           equ	998	;# 
   716   0003E7                     ADRPT           equ	999	;# 
   717   0003E8                     ADPREV          equ	1000	;# 
   718   0003E8                     ADPREVL         equ	1000	;# 
   719   0003E9                     ADPREVH         equ	1001	;# 
   720   0003EA                     ADRES           equ	1002	;# 
   721   0003EA                     ADRESL          equ	1002	;# 
   722   0003EB                     ADRESH          equ	1003	;# 
   723   0003EC                     ADPCH           equ	1004	;# 
   724   0003EE                     ADACQ           equ	1006	;# 
   725   0003EE                     ADACQL          equ	1006	;# 
   726   0003EF                     ADACQH          equ	1007	;# 
   727   0003F0                     ADCAP           equ	1008	;# 
   728   0003F1                     ADPRE           equ	1009	;# 
   729   0003F1                     ADPREL          equ	1009	;# 
   730   0003F2                     ADPREH          equ	1010	;# 
   731   0003F3                     ADCON0          equ	1011	;# 
   732   0003F4                     ADCON1          equ	1012	;# 
   733   0003F5                     ADCON2          equ	1013	;# 
   734   0003F6                     ADCON3          equ	1014	;# 
   735   0003F7                     ADSTAT          equ	1015	;# 
   736   0003F8                     ADREF           equ	1016	;# 
   737   0003F9                     ADACT           equ	1017	;# 
   738   0003FA                     ADCLK           equ	1018	;# 
   739   000400                     ANSELA          equ	1024	;# 
   740   000401                     WPUA            equ	1025	;# 
   741   000402                     ODCONA          equ	1026	;# 
   742   000403                     SLRCONA         equ	1027	;# 
   743   000404                     INLVLA          equ	1028	;# 
   744   000405                     IOCAP           equ	1029	;# 
   745   000406                     IOCAN           equ	1030	;# 
   746   000407                     IOCAF           equ	1031	;# 
   747   000408                     ANSELB          equ	1032	;# 
   748   000409                     WPUB            equ	1033	;# 
   749   00040A                     ODCONB          equ	1034	;# 
   750   00040B                     SLRCONB         equ	1035	;# 
   751   00040C                     INLVLB          equ	1036	;# 
   752   00040D                     IOCBP           equ	1037	;# 
   753   00040E                     IOCBN           equ	1038	;# 
   754   00040F                     IOCBF           equ	1039	;# 
   755   000410                     ANSELC          equ	1040	;# 
   756   000411                     WPUC            equ	1041	;# 
   757   000412                     ODCONC          equ	1042	;# 
   758   000413                     SLRCONC         equ	1043	;# 
   759   000414                     INLVLC          equ	1044	;# 
   760   000415                     IOCCP           equ	1045	;# 
   761   000416                     IOCCN           equ	1046	;# 
   762   000417                     IOCCF           equ	1047	;# 
   763   000418                     ANSELD          equ	1048	;# 
   764   000419                     WPUD            equ	1049	;# 
   765   00041A                     ODCOND          equ	1050	;# 
   766   00041B                     SLRCOND         equ	1051	;# 
   767   00041C                     INLVLD          equ	1052	;# 
   768   000420                     ANSELE          equ	1056	;# 
   769   000421                     WPUE            equ	1057	;# 
   770   000422                     ODCONE          equ	1058	;# 
   771   000423                     SLRCONE         equ	1059	;# 
   772   000424                     INLVLE          equ	1060	;# 
   773   000425                     IOCEP           equ	1061	;# 
   774   000426                     IOCEN           equ	1062	;# 
   775   000427                     IOCEF           equ	1063	;# 
   776   000428                     ANSELF          equ	1064	;# 
   777   000429                     WPUF            equ	1065	;# 
   778   00042A                     ODCONF          equ	1066	;# 
   779   00042B                     SLRCONF         equ	1067	;# 
   780   00042C                     INLVLF          equ	1068	;# 
   781   000440                     NCO1ACC         equ	1088	;# 
   782   000440                     NCO1ACCL        equ	1088	;# 
   783   000441                     NCO1ACCH        equ	1089	;# 
   784   000442                     NCO1ACCU        equ	1090	;# 
   785   000443                     NCO1INC         equ	1091	;# 
   786   000443                     NCO1INCL        equ	1091	;# 
   787   000444                     NCO1INCH        equ	1092	;# 
   788   000445                     NCO1INCU        equ	1093	;# 
   789   000446                     NCO1CON         equ	1094	;# 
   790   000447                     NCO1CLK         equ	1095	;# 
   791   000448                     NCO2ACC         equ	1096	;# 
   792   000448                     NCO2ACCL        equ	1096	;# 
   793   000449                     NCO2ACCH        equ	1097	;# 
   794   00044A                     NCO2ACCU        equ	1098	;# 
   795   00044B                     NCO2INC         equ	1099	;# 
   796   00044B                     NCO2INCL        equ	1099	;# 
   797   00044C                     NCO2INCH        equ	1100	;# 
   798   00044D                     NCO2INCU        equ	1101	;# 
   799   00044E                     NCO2CON         equ	1102	;# 
   800   00044F                     NCO2CLK         equ	1103	;# 
   801   000450                     NCO3ACC         equ	1104	;# 
   802   000450                     NCO3ACCL        equ	1104	;# 
   803   000451                     NCO3ACCH        equ	1105	;# 
   804   000452                     NCO3ACCU        equ	1106	;# 
   805   000453                     NCO3INC         equ	1107	;# 
   806   000453                     NCO3INCL        equ	1107	;# 
   807   000454                     NCO3INCH        equ	1108	;# 
   808   000455                     NCO3INCU        equ	1109	;# 
   809   000456                     NCO3CON         equ	1110	;# 
   810   000457                     NCO3CLK         equ	1111	;# 
   811   000459                     IVTLOCK         equ	1113	;# 
   812   00045A                     IVTAD           equ	1114	;# 
   813   00045A                     IVTADL          equ	1114	;# 
   814   00045B                     IVTADH          equ	1115	;# 
   815   00045C                     IVTADU          equ	1116	;# 
   816   00045D                     IVTBASE         equ	1117	;# 
   817   00045D                     IVTBASEL        equ	1117	;# 
   818   00045E                     IVTBASEH        equ	1118	;# 
   819   00045F                     IVTBASEU        equ	1119	;# 
   820   000460                     PWM1ERS         equ	1120	;# 
   821   000461                     PWM1CLK         equ	1121	;# 
   822   000462                     PWM1LDS         equ	1122	;# 
   823   000463                     PWM1PR          equ	1123	;# 
   824   000463                     PWM1PRL         equ	1123	;# 
   825   000464                     PWM1PRH         equ	1124	;# 
   826   000465                     PWM1CPRE        equ	1125	;# 
   827   000466                     PWM1PIPOS       equ	1126	;# 
   828   000467                     PWM1GIR         equ	1127	;# 
   829   000468                     PWM1GIE         equ	1128	;# 
   830   000469                     PWM1CON         equ	1129	;# 
   831   00046A                     PWM1S1CFG       equ	1130	;# 
   832   00046B                     PWM1S1P1        equ	1131	;# 
   833   00046B                     PWM1S1P1L       equ	1131	;# 
   834   00046C                     PWM1S1P1H       equ	1132	;# 
   835   00046D                     PWM1S1P2        equ	1133	;# 
   836   00046D                     PWM1S1P2L       equ	1133	;# 
   837   00046E                     PWM1S1P2H       equ	1134	;# 
   838   00046F                     PWM2ERS         equ	1135	;# 
   839   000470                     PWM2CLK         equ	1136	;# 
   840   000471                     PWM2LDS         equ	1137	;# 
   841   000472                     PWM2PR          equ	1138	;# 
   842   000472                     PWM2PRL         equ	1138	;# 
   843   000473                     PWM2PRH         equ	1139	;# 
   844   000474                     PWM2CPRE        equ	1140	;# 
   845   000475                     PWM2PIPOS       equ	1141	;# 
   846   000476                     PWM2GIR         equ	1142	;# 
   847   000477                     PWM2GIE         equ	1143	;# 
   848   000478                     PWM2CON         equ	1144	;# 
   849   000479                     PWM2S1CFG       equ	1145	;# 
   850   00047A                     PWM2S1P1        equ	1146	;# 
   851   00047A                     PWM2S1P1L       equ	1146	;# 
   852   00047B                     PWM2S1P1H       equ	1147	;# 
   853   00047C                     PWM2S1P2        equ	1148	;# 
   854   00047C                     PWM2S1P2L       equ	1148	;# 
   855   00047D                     PWM2S1P2H       equ	1149	;# 
   856   00047E                     PWM3ERS         equ	1150	;# 
   857   00047F                     PWM3CLK         equ	1151	;# 
   858   000480                     PWM3LDS         equ	1152	;# 
   859   000481                     PWM3PR          equ	1153	;# 
   860   000481                     PWM3PRL         equ	1153	;# 
   861   000482                     PWM3PRH         equ	1154	;# 
   862   000483                     PWM3CPRE        equ	1155	;# 
   863   000484                     PWM3PIPOS       equ	1156	;# 
   864   000485                     PWM3GIR         equ	1157	;# 
   865   000486                     PWM3GIE         equ	1158	;# 
   866   000487                     PWM3CON         equ	1159	;# 
   867   000488                     PWM3S1CFG       equ	1160	;# 
   868   000489                     PWM3S1P1        equ	1161	;# 
   869   000489                     PWM3S1P1L       equ	1161	;# 
   870   00048A                     PWM3S1P1H       equ	1162	;# 
   871   00048B                     PWM3S1P2        equ	1163	;# 
   872   00048B                     PWM3S1P2L       equ	1163	;# 
   873   00048C                     PWM3S1P2H       equ	1164	;# 
   874   00049C                     PWMLOAD         equ	1180	;# 
   875   00049D                     PWMEN           equ	1181	;# 
   876   00049E                     PIE0            equ	1182	;# 
   877   00049F                     PIE1            equ	1183	;# 
   878   0004A0                     PIE2            equ	1184	;# 
   879   0004A1                     PIE3            equ	1185	;# 
   880   0004A2                     PIE4            equ	1186	;# 
   881   0004A3                     PIE5            equ	1187	;# 
   882   0004A4                     PIE6            equ	1188	;# 
   883   0004A5                     PIE7            equ	1189	;# 
   884   0004A6                     PIE8            equ	1190	;# 
   885   0004A7                     PIE9            equ	1191	;# 
   886   0004A8                     PIE10           equ	1192	;# 
   887   0004A9                     PIE11           equ	1193	;# 
   888   0004AA                     PIE12           equ	1194	;# 
   889   0004AB                     PIE13           equ	1195	;# 
   890   0004AC                     PIE14           equ	1196	;# 
   891   0004AD                     PIE15           equ	1197	;# 
   892   0004AE                     PIR0            equ	1198	;# 
   893   0004AF                     PIR1            equ	1199	;# 
   894   0004B0                     PIR2            equ	1200	;# 
   895   0004B1                     PIR3            equ	1201	;# 
   896   0004B2                     PIR4            equ	1202	;# 
   897   0004B3                     PIR5            equ	1203	;# 
   898   0004B4                     PIR6            equ	1204	;# 
   899   0004B5                     PIR7            equ	1205	;# 
   900   0004B6                     PIR8            equ	1206	;# 
   901   0004B7                     PIR9            equ	1207	;# 
   902   0004B8                     PIR10           equ	1208	;# 
   903   0004B9                     PIR11           equ	1209	;# 
   904   0004BA                     PIR12           equ	1210	;# 
   905   0004BB                     PIR13           equ	1211	;# 
   906   0004BC                     PIR14           equ	1212	;# 
   907   0004BD                     PIR15           equ	1213	;# 
   908   0004BE                     LATA            equ	1214	;# 
   909   0004BF                     LATB            equ	1215	;# 
   910   0004C0                     LATC            equ	1216	;# 
   911   0004C1                     LATD            equ	1217	;# 
   912   0004C2                     LATE            equ	1218	;# 
   913   0004C3                     LATF            equ	1219	;# 
   914   0004C6                     TRISA           equ	1222	;# 
   915   0004C7                     TRISB           equ	1223	;# 
   916   0004C8                     TRISC           equ	1224	;# 
   917   0004C9                     TRISD           equ	1225	;# 
   918   0004CA                     TRISE           equ	1226	;# 
   919   0004CB                     TRISF           equ	1227	;# 
   920   0004CE                     PORTA           equ	1230	;# 
   921   0004CF                     PORTB           equ	1231	;# 
   922   0004D0                     PORTC           equ	1232	;# 
   923   0004D1                     PORTD           equ	1233	;# 
   924   0004D2                     PORTE           equ	1234	;# 
   925   0004D3                     PORTF           equ	1235	;# 
   926   0004D6                     INTCON0         equ	1238	;# 
   927   0004D7                     INTCON1         equ	1239	;# 
   928   0004D8                     STATUS          equ	1240	;# 
   929   0004D9                     FSR2            equ	1241	;# 
   930   0004D9                     FSR2L           equ	1241	;# 
   931   0004DA                     FSR2H           equ	1242	;# 
   932   0004DB                     PLUSW2          equ	1243	;# 
   933   0004DC                     PREINC2         equ	1244	;# 
   934   0004DD                     POSTDEC2        equ	1245	;# 
   935   0004DE                     POSTINC2        equ	1246	;# 
   936   0004DF                     INDF2           equ	1247	;# 
   937   0004E0                     BSR             equ	1248	;# 
   938   0004E1                     FSR1            equ	1249	;# 
   939   0004E1                     FSR1L           equ	1249	;# 
   940   0004E2                     FSR1H           equ	1250	;# 
   941   0004E3                     PLUSW1          equ	1251	;# 
   942   0004E4                     PREINC1         equ	1252	;# 
   943   0004E5                     POSTDEC1        equ	1253	;# 
   944   0004E6                     POSTINC1        equ	1254	;# 
   945   0004E7                     INDF1           equ	1255	;# 
   946   0004E8                     WREG            equ	1256	;# 
   947   0004E9                     FSR0            equ	1257	;# 
   948   0004E9                     FSR0L           equ	1257	;# 
   949   0004EA                     FSR0H           equ	1258	;# 
   950   0004EB                     PLUSW0          equ	1259	;# 
   951   0004EC                     PREINC0         equ	1260	;# 
   952   0004ED                     POSTDEC0        equ	1261	;# 
   953   0004EE                     POSTINC0        equ	1262	;# 
   954   0004EF                     INDF0           equ	1263	;# 
   955   0004F0                     PCON0           equ	1264	;# 
   956   0004F1                     PCON1           equ	1265	;# 
   957   0004F2                     CPUDOZE         equ	1266	;# 
   958   0004F3                     PROD            equ	1267	;# 
   959   0004F3                     PRODL           equ	1267	;# 
   960   0004F4                     PRODH           equ	1268	;# 
   961   0004F5                     TABLAT          equ	1269	;# 
   962   0004F6                     TBLPTR          equ	1270	;# 
   963   0004F6                     TBLPTRL         equ	1270	;# 
   964   0004F7                     TBLPTRH         equ	1271	;# 
   965   0004F8                     TBLPTRU         equ	1272	;# 
   966   0004F9                     PCLAT           equ	1273	;# 
   967   0004F9                     PCL             equ	1273	;# 
   968   0004FA                     PCLATH          equ	1274	;# 
   969   0004FB                     PCLATU          equ	1275	;# 
   970   0004FC                     STKPTR          equ	1276	;# 
   971   0004FD                     TOS             equ	1277	;# 
   972   0004FD                     TOSL            equ	1277	;# 
   973   0004FE                     TOSH            equ	1278	;# 
   974   0004FF                     TOSU            equ	1279	;# 
   975   000039                     CLKRCON         equ	57	;# 
   976   00003A                     CLKRCLK         equ	58	;# 
   977   000040                     NVMCON0         equ	64	;# 
   978   000041                     NVMCON1         equ	65	;# 
   979   000042                     NVMLOCK         equ	66	;# 
   980   000043                     NVMADR          equ	67	;# 
   981   000043                     NVMADRL         equ	67	;# 
   982   000044                     NVMADRH         equ	68	;# 
   983   000045                     NVMADRU         equ	69	;# 
   984   000046                     NVMDAT          equ	70	;# 
   985   000046                     NVMDATL         equ	70	;# 
   986   000047                     NVMDATH         equ	71	;# 
   987   000048                     VREGCON         equ	72	;# 
   988   000049                     BORCON          equ	73	;# 
   989   00004A                     HLVDCON0        equ	74	;# 
   990   00004B                     HLVDCON1        equ	75	;# 
   991   00004C                     ZCDCON          equ	76	;# 
   992   000060                     PMD0            equ	96	;# 
   993   000061                     PMD1            equ	97	;# 
   994   000063                     PMD3            equ	99	;# 
   995   000064                     PMD4            equ	100	;# 
   996   000065                     PMD5            equ	101	;# 
   997   000066                     PMD6            equ	102	;# 
   998   000067                     PMD7            equ	103	;# 
   999   000068                     PMD8            equ	104	;# 
  1000   00006A                     MD1CON0         equ	106	;# 
  1001   00006B                     MD1CON1         equ	107	;# 
  1002   00006C                     MD1SRC          equ	108	;# 
  1003   00006D                     MD1CARL         equ	109	;# 
  1004   00006E                     MD1CARH         equ	110	;# 
  1005   00006F                     CMOUT           equ	111	;# 
  1006   000070                     CM1CON0         equ	112	;# 
  1007   000071                     CM1CON1         equ	113	;# 
  1008   000072                     CM1NCH          equ	114	;# 
  1009   000073                     CM1PCH          equ	115	;# 
  1010   000074                     CM2CON0         equ	116	;# 
  1011   000075                     CM2CON1         equ	117	;# 
  1012   000076                     CM2NCH          equ	118	;# 
  1013   000077                     CM2PCH          equ	119	;# 
  1014   000078                     WDTCON0         equ	120	;# 
  1015   000079                     WDTCON1         equ	121	;# 
  1016   00007A                     WDTPS           equ	122	;# 
  1017   00007A                     WDTPSL          equ	122	;# 
  1018   00007B                     WDTPSH          equ	123	;# 
  1019   00007C                     WDTTMR          equ	124	;# 
  1020   00007D                     DAC1DAT         equ	125	;# 
  1021   00007D                     DAC1DATL        equ	125	;# 
  1022   00007F                     DAC1CON         equ	127	;# 
  1023   000080                     SPI1RXB         equ	128	;# 
  1024   000081                     SPI1TXB         equ	129	;# 
  1025   000082                     SPI1TCNT        equ	130	;# 
  1026   000082                     SPI1TCNTL       equ	130	;# 
  1027   000083                     SPI1TCNTH       equ	131	;# 
  1028   000084                     SPI1CON0        equ	132	;# 
  1029   000085                     SPI1CON1        equ	133	;# 
  1030   000086                     SPI1CON2        equ	134	;# 
  1031   000087                     SPI1STATUS      equ	135	;# 
  1032   000088                     SPI1TWIDTH      equ	136	;# 
  1033   000089                     SPI1BAUD        equ	137	;# 
  1034   00008A                     SPI1INTF        equ	138	;# 
  1035   00008B                     SPI1INTE        equ	139	;# 
  1036   00008C                     SPI1CLK         equ	140	;# 
  1037   00008D                     SPI2RXB         equ	141	;# 
  1038   00008E                     SPI2TXB         equ	142	;# 
  1039   00008F                     SPI2TCNT        equ	143	;# 
  1040   00008F                     SPI2TCNTL       equ	143	;# 
  1041   000090                     SPI2TCNTH       equ	144	;# 
  1042   000091                     SPI2CON0        equ	145	;# 
  1043   000092                     SPI2CON1        equ	146	;# 
  1044   000093                     SPI2CON2        equ	147	;# 
  1045   000094                     SPI2STATUS      equ	148	;# 
  1046   000095                     SPI2TWIDTH      equ	149	;# 
  1047   000096                     SPI2BAUD        equ	150	;# 
  1048   000097                     SPI2INTF        equ	151	;# 
  1049   000098                     SPI2INTE        equ	152	;# 
  1050   000099                     SPI2CLK         equ	153	;# 
  1051   0000AC                     ACTCON          equ	172	;# 
  1052   0000AD                     OSCCON1         equ	173	;# 
  1053   0000AE                     OSCCON2         equ	174	;# 
  1054   0000AF                     OSCCON3         equ	175	;# 
  1055   0000B0                     OSCTUNE         equ	176	;# 
  1056   0000B1                     OSCFRQ          equ	177	;# 
  1057   0000B1                     OSCFREQ         equ	177	;# 
  1058   0000B2                     OSCSTAT         equ	178	;# 
  1059   0000B2                     OSCSTAT1        equ	178	;# 
  1060   0000B3                     OSCEN           equ	179	;# 
  1061   0000B4                     PRLOCK          equ	180	;# 
  1062   0000B5                     SCANPR          equ	181	;# 
  1063   0000B6                     DMA1PR          equ	182	;# 
  1064   0000B7                     DMA2PR          equ	183	;# 
  1065   0000B8                     DMA3PR          equ	184	;# 
  1066   0000B9                     DMA4PR          equ	185	;# 
  1067   0000BA                     DMA5PR          equ	186	;# 
  1068   0000BB                     DMA6PR          equ	187	;# 
  1069   0000BE                     MAINPR          equ	190	;# 
  1070   0000BF                     ISRPR           equ	191	;# 
  1071   0000D4                     CLCDATA         equ	212	;# 
  1072   0000D5                     CLCSELECT       equ	213	;# 
  1073   0000D6                     CLCnCON         equ	214	;# 
  1074   0000D7                     CLCnPOL         equ	215	;# 
  1075   0000D8                     CLCnSEL0        equ	216	;# 
  1076   0000D9                     CLCnSEL1        equ	217	;# 
  1077   0000DA                     CLCnSEL2        equ	218	;# 
  1078   0000DB                     CLCnSEL3        equ	219	;# 
  1079   0000DC                     CLCnGLS0        equ	220	;# 
  1080   0000DD                     CLCnGLS1        equ	221	;# 
  1081   0000DE                     CLCnGLS2        equ	222	;# 
  1082   0000DF                     CLCnGLS3        equ	223	;# 
  1083   0000E8                     DMASELECT       equ	232	;# 
  1084   0000E9                     DMAnBUF         equ	233	;# 
  1085   0000EA                     DMAnDCNT        equ	234	;# 
  1086   0000EA                     DMAnDCNTL       equ	234	;# 
  1087   0000EB                     DMAnDCNTH       equ	235	;# 
  1088   0000EC                     DMAnDPTR        equ	236	;# 
  1089   0000EC                     DMAnDPTRL       equ	236	;# 
  1090   0000ED                     DMAnDPTRH       equ	237	;# 
  1091   0000EE                     DMAnDSZ         equ	238	;# 
  1092   0000EE                     DMAnDSZL        equ	238	;# 
  1093   0000EF                     DMAnDSZH        equ	239	;# 
  1094   0000F0                     DMAnDSA         equ	240	;# 
  1095   0000F0                     DMAnDSAL        equ	240	;# 
  1096   0000F1                     DMAnDSAH        equ	241	;# 
  1097   0000F2                     DMAnSCNT        equ	242	;# 
  1098   0000F2                     DMAnSCNTL       equ	242	;# 
  1099   0000F3                     DMAnSCNTH       equ	243	;# 
  1100   0000F4                     DMAnSPTR        equ	244	;# 
  1101   0000F4                     DMAnSPTRL       equ	244	;# 
  1102   0000F5                     DMAnSPTRH       equ	245	;# 
  1103   0000F6                     DMAnSPTRU       equ	246	;# 
  1104   0000F7                     DMAnSSZ         equ	247	;# 
  1105   0000F7                     DMAnSSZL        equ	247	;# 
  1106   0000F8                     DMAnSSZH        equ	248	;# 
  1107   0000F9                     DMAnSSA         equ	249	;# 
  1108   0000F9                     DMAnSSAL        equ	249	;# 
  1109   0000FA                     DMAnSSAH        equ	250	;# 
  1110   0000FB                     DMAnSSAU        equ	251	;# 
  1111   0000FC                     DMAnCON0        equ	252	;# 
  1112   0000FD                     DMAnCON1        equ	253	;# 
  1113   0000FE                     DMAnAIRQ        equ	254	;# 
  1114   0000FF                     DMAnSIRQ        equ	255	;# 
  1115   000200                     PPSLOCK         equ	512	;# 
  1116   000201                     RA0PPS          equ	513	;# 
  1117   000202                     RA1PPS          equ	514	;# 
  1118   000203                     RA2PPS          equ	515	;# 
  1119   000204                     RA3PPS          equ	516	;# 
  1120   000205                     RA4PPS          equ	517	;# 
  1121   000206                     RA5PPS          equ	518	;# 
  1122   000207                     RA6PPS          equ	519	;# 
  1123   000208                     RA7PPS          equ	520	;# 
  1124   000209                     RB0PPS          equ	521	;# 
  1125   00020A                     RB1PPS          equ	522	;# 
  1126   00020B                     RB2PPS          equ	523	;# 
  1127   00020C                     RB3PPS          equ	524	;# 
  1128   00020D                     RB4PPS          equ	525	;# 
  1129   00020E                     RB5PPS          equ	526	;# 
  1130   00020F                     RB6PPS          equ	527	;# 
  1131   000210                     RB7PPS          equ	528	;# 
  1132   000211                     RC0PPS          equ	529	;# 
  1133   000212                     RC1PPS          equ	530	;# 
  1134   000213                     RC2PPS          equ	531	;# 
  1135   000214                     RC3PPS          equ	532	;# 
  1136   000215                     RC4PPS          equ	533	;# 
  1137   000216                     RC5PPS          equ	534	;# 
  1138   000217                     RC6PPS          equ	535	;# 
  1139   000218                     RC7PPS          equ	536	;# 
  1140   000219                     RD0PPS          equ	537	;# 
  1141   00021A                     RD1PPS          equ	538	;# 
  1142   00021B                     RD2PPS          equ	539	;# 
  1143   00021C                     RD3PPS          equ	540	;# 
  1144   00021D                     RD4PPS          equ	541	;# 
  1145   00021E                     RD5PPS          equ	542	;# 
  1146   00021F                     RD6PPS          equ	543	;# 
  1147   000220                     RD7PPS          equ	544	;# 
  1148   000221                     RE0PPS          equ	545	;# 
  1149   000222                     RE1PPS          equ	546	;# 
  1150   000223                     RE2PPS          equ	547	;# 
  1151   000229                     RF0PPS          equ	553	;# 
  1152   00022A                     RF1PPS          equ	554	;# 
  1153   00022B                     RF2PPS          equ	555	;# 
  1154   00022C                     RF3PPS          equ	556	;# 
  1155   00022D                     RF4PPS          equ	557	;# 
  1156   00022E                     RF5PPS          equ	558	;# 
  1157   00022F                     RF6PPS          equ	559	;# 
  1158   000230                     RF7PPS          equ	560	;# 
  1159   00023E                     INT0PPS         equ	574	;# 
  1160   00023F                     INT1PPS         equ	575	;# 
  1161   000240                     INT2PPS         equ	576	;# 
  1162   000241                     T0CKIPPS        equ	577	;# 
  1163   000242                     T1CKIPPS        equ	578	;# 
  1164   000243                     T1GPPS          equ	579	;# 
  1165   000244                     T3CKIPPS        equ	580	;# 
  1166   000245                     T3GPPS          equ	581	;# 
  1167   000246                     T5CKIPPS        equ	582	;# 
  1168   000247                     T5GPPS          equ	583	;# 
  1169   000248                     T2INPPS         equ	584	;# 
  1170   000249                     T4INPPS         equ	585	;# 
  1171   00024A                     T6INPPS         equ	586	;# 
  1172   00024F                     CCP1PPS         equ	591	;# 
  1173   000250                     CCP2PPS         equ	592	;# 
  1174   000251                     CCP3PPS         equ	593	;# 
  1175   000253                     PWM1ERSPPS      equ	595	;# 
  1176   000254                     PWM2ERSPPS      equ	596	;# 
  1177   000255                     PWM3ERSPPS      equ	597	;# 
  1178   000257                     PWMIN0PPS       equ	599	;# 
  1179   000258                     PWMIN1PPS       equ	600	;# 
  1180   000259                     SMT1WINPPS      equ	601	;# 
  1181   00025A                     SMT1SIGPPS      equ	602	;# 
  1182   00025B                     CWG1PPS         equ	603	;# 
  1183   00025B                     CWG1INPPS       equ	603	;# 
  1184   00025C                     CWG2PPS         equ	604	;# 
  1185   00025C                     CWG2INPPS       equ	604	;# 
  1186   00025D                     CWG3PPS         equ	605	;# 
  1187   00025D                     CWG3INPPS       equ	605	;# 
  1188   00025E                     MD1CARLPPS      equ	606	;# 
  1189   00025E                     MDCARLPPS       equ	606	;# 
  1190   00025F                     MD1CARHPPS      equ	607	;# 
  1191   00025F                     MDCARHPPS       equ	607	;# 
  1192   000260                     MD1SRCPPS       equ	608	;# 
  1193   000260                     MDSRCPPS        equ	608	;# 
  1194   000261                     CLCIN0PPS       equ	609	;# 
  1195   000262                     CLCIN1PPS       equ	610	;# 
  1196   000263                     CLCIN2PPS       equ	611	;# 
  1197   000264                     CLCIN3PPS       equ	612	;# 
  1198   000265                     CLCIN4PPS       equ	613	;# 
  1199   000266                     CLCIN5PPS       equ	614	;# 
  1200   000267                     CLCIN6PPS       equ	615	;# 
  1201   000268                     CLCIN7PPS       equ	616	;# 
  1202   000269                     ADACTPPS        equ	617	;# 
  1203   00026A                     SPI1SCKPPS      equ	618	;# 
  1204   00026B                     SPI1SDIPPS      equ	619	;# 
  1205   00026C                     SPI1SSPPS       equ	620	;# 
  1206   00026D                     SPI2SCKPPS      equ	621	;# 
  1207   00026E                     SPI2SDIPPS      equ	622	;# 
  1208   00026F                     SPI2SSPPS       equ	623	;# 
  1209   000270                     I2C1SDAPPS      equ	624	;# 
  1210   000271                     I2C1SCLPPS      equ	625	;# 
  1211   000272                     U1RXPPS         equ	626	;# 
  1212   000273                     U1CTSPPS        equ	627	;# 
  1213   000274                     U2RXPPS         equ	628	;# 
  1214   000275                     U2CTSPPS        equ	629	;# 
  1215   000276                     U3RXPPS         equ	630	;# 
  1216   000277                     U3CTSPPS        equ	631	;# 
  1217   000278                     U4RXPPS         equ	632	;# 
  1218   000279                     U4CTSPPS        equ	633	;# 
  1219   00027A                     U5RXPPS         equ	634	;# 
  1220   00027B                     U5CTSPPS        equ	635	;# 
  1221   000286                     RC4I2C          equ	646	;# 
  1222   000287                     RC3I2C          equ	647	;# 
  1223   000288                     RB2I2C          equ	648	;# 
  1224   000289                     RB1I2C          equ	649	;# 
  1225   00028B                     I2C1RXB         equ	651	;# 
  1226   00028C                     I2C1TXB         equ	652	;# 
  1227   00028D                     I2C1CNT         equ	653	;# 
  1228   00028E                     I2C1ADB0        equ	654	;# 
  1229   00028F                     I2C1ADB1        equ	655	;# 
  1230   000290                     I2C1ADR0        equ	656	;# 
  1231   000291                     I2C1ADR1        equ	657	;# 
  1232   000292                     I2C1ADR2        equ	658	;# 
  1233   000293                     I2C1ADR3        equ	659	;# 
  1234   000294                     I2C1CON0        equ	660	;# 
  1235   000295                     I2C1CON1        equ	661	;# 
  1236   000296                     I2C1CON2        equ	662	;# 
  1237   000297                     I2C1ERR         equ	663	;# 
  1238   000298                     I2C1STAT0       equ	664	;# 
  1239   000299                     I2C1STAT1       equ	665	;# 
  1240   00029A                     I2C1PIR         equ	666	;# 
  1241   00029B                     I2C1PIE         equ	667	;# 
  1242   00029C                     I2C1CLK         equ	668	;# 
  1243   00029D                     I2C1BTO         equ	669	;# 
  1244   0002A1                     U1RXB           equ	673	;# 
  1245   0002A1                     U1RXBL          equ	673	;# 
  1246   0002A2                     U1RXCHK         equ	674	;# 
  1247   0002A3                     U1TXB           equ	675	;# 
  1248   0002A3                     U1TXBL          equ	675	;# 
  1249   0002A4                     U1TXCHK         equ	676	;# 
  1250   0002A5                     U1P1            equ	677	;# 
  1251   0002A5                     U1P1L           equ	677	;# 
  1252   0002A6                     U1P1H           equ	678	;# 
  1253   0002A7                     U1P2            equ	679	;# 
  1254   0002A7                     U1P2L           equ	679	;# 
  1255   0002A8                     U1P2H           equ	680	;# 
  1256   0002A9                     U1P3            equ	681	;# 
  1257   0002A9                     U1P3L           equ	681	;# 
  1258   0002AA                     U1P3H           equ	682	;# 
  1259   0002AB                     U1CON0          equ	683	;# 
  1260   0002AC                     U1CON1          equ	684	;# 
  1261   0002AD                     U1CON2          equ	685	;# 
  1262   0002AE                     U1BRG           equ	686	;# 
  1263   0002AE                     U1BRGL          equ	686	;# 
  1264   0002AF                     U1BRGH          equ	687	;# 
  1265   0002B0                     U1FIFO          equ	688	;# 
  1266   0002B1                     U1UIR           equ	689	;# 
  1267   0002B2                     U1ERRIR         equ	690	;# 
  1268   0002B3                     U1ERRIE         equ	691	;# 
  1269   0002B4                     U2RXB           equ	692	;# 
  1270   0002B4                     U2RXBL          equ	692	;# 
  1271   0002B6                     U2TXB           equ	694	;# 
  1272   0002B6                     U2TXBL          equ	694	;# 
  1273   0002B8                     U2P1            equ	696	;# 
  1274   0002B8                     U2P1L           equ	696	;# 
  1275   0002BA                     U2P2            equ	698	;# 
  1276   0002BA                     U2P2L           equ	698	;# 
  1277   0002BC                     U2P3            equ	700	;# 
  1278   0002BC                     U2P3L           equ	700	;# 
  1279   0002BE                     U2CON0          equ	702	;# 
  1280   0002BF                     U2CON1          equ	703	;# 
  1281   0002C0                     U2CON2          equ	704	;# 
  1282   0002C1                     U2BRG           equ	705	;# 
  1283   0002C1                     U2BRGL          equ	705	;# 
  1284   0002C2                     U2BRGH          equ	706	;# 
  1285   0002C3                     U2FIFO          equ	707	;# 
  1286   0002C4                     U2UIR           equ	708	;# 
  1287   0002C5                     U2ERRIR         equ	709	;# 
  1288   0002C6                     U2ERRIE         equ	710	;# 
  1289   0002C7                     U3RXB           equ	711	;# 
  1290   0002C7                     U3RXBL          equ	711	;# 
  1291   0002C9                     U3TXB           equ	713	;# 
  1292   0002C9                     U3TXBL          equ	713	;# 
  1293   0002CB                     U3P1            equ	715	;# 
  1294   0002CB                     U3P1L           equ	715	;# 
  1295   0002CD                     U3P2            equ	717	;# 
  1296   0002CD                     U3P2L           equ	717	;# 
  1297   0002CF                     U3P3            equ	719	;# 
  1298   0002CF                     U3P3L           equ	719	;# 
  1299   0002D1                     U3CON0          equ	721	;# 
  1300   0002D2                     U3CON1          equ	722	;# 
  1301   0002D3                     U3CON2          equ	723	;# 
  1302   0002D4                     U3BRG           equ	724	;# 
  1303   0002D4                     U3BRGL          equ	724	;# 
  1304   0002D5                     U3BRGH          equ	725	;# 
  1305   0002D6                     U3FIFO          equ	726	;# 
  1306   0002D7                     U3UIR           equ	727	;# 
  1307   0002D8                     U3ERRIR         equ	728	;# 
  1308   0002D9                     U3ERRIE         equ	729	;# 
  1309   0002DA                     U4RXB           equ	730	;# 
  1310   0002DA                     U4RXBL          equ	730	;# 
  1311   0002DC                     U4TXB           equ	732	;# 
  1312   0002DC                     U4TXBL          equ	732	;# 
  1313   0002DE                     U4P1            equ	734	;# 
  1314   0002DE                     U4P1L           equ	734	;# 
  1315   0002E0                     U4P2            equ	736	;# 
  1316   0002E0                     U4P2L           equ	736	;# 
  1317   0002E2                     U4P3            equ	738	;# 
  1318   0002E2                     U4P3L           equ	738	;# 
  1319   0002E4                     U4CON0          equ	740	;# 
  1320   0002E5                     U4CON1          equ	741	;# 
  1321   0002E6                     U4CON2          equ	742	;# 
  1322   0002E7                     U4BRG           equ	743	;# 
  1323   0002E7                     U4BRGL          equ	743	;# 
  1324   0002E8                     U4BRGH          equ	744	;# 
  1325   0002E9                     U4FIFO          equ	745	;# 
  1326   0002EA                     U4UIR           equ	746	;# 
  1327   0002EB                     U4ERRIR         equ	747	;# 
  1328   0002EC                     U4ERRIE         equ	748	;# 
  1329   0002ED                     U5RXB           equ	749	;# 
  1330   0002ED                     U5RXBL          equ	749	;# 
  1331   0002EF                     U5TXB           equ	751	;# 
  1332   0002EF                     U5TXBL          equ	751	;# 
  1333   0002F1                     U5P1            equ	753	;# 
  1334   0002F1                     U5P1L           equ	753	;# 
  1335   0002F3                     U5P2            equ	755	;# 
  1336   0002F3                     U5P2L           equ	755	;# 
  1337   0002F5                     U5P3            equ	757	;# 
  1338   0002F5                     U5P3L           equ	757	;# 
  1339   0002F7                     U5CON0          equ	759	;# 
  1340   0002F8                     U5CON1          equ	760	;# 
  1341   0002F9                     U5CON2          equ	761	;# 
  1342   0002FA                     U5BRG           equ	762	;# 
  1343   0002FA                     U5BRGL          equ	762	;# 
  1344   0002FB                     U5BRGH          equ	763	;# 
  1345   0002FC                     U5FIFO          equ	764	;# 
  1346   0002FD                     U5UIR           equ	765	;# 
  1347   0002FE                     U5ERRIR         equ	766	;# 
  1348   0002FF                     U5ERRIE         equ	767	;# 
  1349   000300                     SMT1TMR         equ	768	;# 
  1350   000300                     SMT1TMRL        equ	768	;# 
  1351   000301                     SMT1TMRH        equ	769	;# 
  1352   000302                     SMT1TMRU        equ	770	;# 
  1353   000303                     SMT1CPR         equ	771	;# 
  1354   000303                     SMT1CPRL        equ	771	;# 
  1355   000304                     SMT1CPRH        equ	772	;# 
  1356   000305                     SMT1CPRU        equ	773	;# 
  1357   000306                     SMT1CPW         equ	774	;# 
  1358   000306                     SMT1CPWL        equ	774	;# 
  1359   000307                     SMT1CPWH        equ	775	;# 
  1360   000308                     SMT1CPWU        equ	776	;# 
  1361   000309                     SMT1PR          equ	777	;# 
  1362   000309                     SMT1PRL         equ	777	;# 
  1363   00030A                     SMT1PRH         equ	778	;# 
  1364   00030B                     SMT1PRU         equ	779	;# 
  1365   00030C                     SMT1CON0        equ	780	;# 
  1366   00030D                     SMT1CON1        equ	781	;# 
  1367   00030E                     SMT1STAT        equ	782	;# 
  1368   00030F                     SMT1CLK         equ	783	;# 
  1369   000310                     SMT1SIG         equ	784	;# 
  1370   000311                     SMT1WIN         equ	785	;# 
  1371   000318                     TMR0L           equ	792	;# 
  1372   000318                     TMR0            equ	792	;# 
  1373   000319                     TMR0H           equ	793	;# 
  1374   000319                     PR0             equ	793	;# 
  1375   00031A                     T0CON0          equ	794	;# 
  1376   00031B                     T0CON1          equ	795	;# 
  1377   00031C                     TMR1            equ	796	;# 
  1378   00031C                     TMR1L           equ	796	;# 
  1379   00031D                     TMR1H           equ	797	;# 
  1380   00031E                     T1CON           equ	798	;# 
  1381   00031E                     TMR1CON         equ	798	;# 
  1382   00031F                     T1GCON          equ	799	;# 
  1383   00031F                     TMR1GCON        equ	799	;# 
  1384   000320                     T1GATE          equ	800	;# 
  1385   000320                     TMR1GATE        equ	800	;# 
  1386   000321                     T1CLK           equ	801	;# 
  1387   000321                     TMR1CLK         equ	801	;# 
  1388   000321                     PR1             equ	801	;# 
  1389   000322                     T2TMR           equ	802	;# 
  1390   000322                     TMR2            equ	802	;# 
  1391   000323                     T2PR            equ	803	;# 
  1392   000323                     PR2             equ	803	;# 
  1393   000324                     T2CON           equ	804	;# 
  1394   000325                     T2HLT           equ	805	;# 
  1395   000326                     T2CLKCON        equ	806	;# 
  1396   000326                     T2CLK           equ	806	;# 
  1397   000327                     T2RST           equ	807	;# 
  1398   000328                     TMR3            equ	808	;# 
  1399   000328                     TMR3L           equ	808	;# 
  1400   000329                     TMR3H           equ	809	;# 
  1401   00032A                     T3CON           equ	810	;# 
  1402   00032A                     TMR3CON         equ	810	;# 
  1403   00032B                     T3GCON          equ	811	;# 
  1404   00032B                     TMR3GCON        equ	811	;# 
  1405   00032C                     T3GATE          equ	812	;# 
  1406   00032C                     TMR3GATE        equ	812	;# 
  1407   00032D                     T3CLK           equ	813	;# 
  1408   00032D                     TMR3CLK         equ	813	;# 
  1409   00032D                     PR3             equ	813	;# 
  1410   00032E                     T4TMR           equ	814	;# 
  1411   00032E                     TMR4            equ	814	;# 
  1412   00032F                     T4PR            equ	815	;# 
  1413   00032F                     PR4             equ	815	;# 
  1414   000330                     T4CON           equ	816	;# 
  1415   000331                     T4HLT           equ	817	;# 
  1416   000332                     T4CLKCON        equ	818	;# 
  1417   000332                     T4CLK           equ	818	;# 
  1418   000333                     T4RST           equ	819	;# 
  1419   000334                     TMR5            equ	820	;# 
  1420   000334                     TMR5L           equ	820	;# 
  1421   000335                     TMR5H           equ	821	;# 
  1422   000336                     T5CON           equ	822	;# 
  1423   000336                     TMR5CON         equ	822	;# 
  1424   000337                     T5GCON          equ	823	;# 
  1425   000337                     TMR5GCON        equ	823	;# 
  1426   000338                     T5GATE          equ	824	;# 
  1427   000338                     TMR5GATE        equ	824	;# 
  1428   000339                     T5CLK           equ	825	;# 
  1429   000339                     TMR5CLK         equ	825	;# 
  1430   000339                     PR5             equ	825	;# 
  1431   00033A                     T6TMR           equ	826	;# 
  1432   00033A                     TMR6            equ	826	;# 
  1433   00033B                     T6PR            equ	827	;# 
  1434   00033B                     PR6             equ	827	;# 
  1435   00033C                     T6CON           equ	828	;# 
  1436   00033D                     T6HLT           equ	829	;# 
  1437   00033E                     T6CLKCON        equ	830	;# 
  1438   00033E                     T6CLK           equ	830	;# 
  1439   00033F                     T6RST           equ	831	;# 
  1440   000340                     CCPR1           equ	832	;# 
  1441   000340                     CCPR1L          equ	832	;# 
  1442   000341                     CCPR1H          equ	833	;# 
  1443   000342                     CCP1CON         equ	834	;# 
  1444   000343                     CCP1CAP         equ	835	;# 
  1445   000344                     CCPR2           equ	836	;# 
  1446   000344                     CCPR2L          equ	836	;# 
  1447   000345                     CCPR2H          equ	837	;# 
  1448   000346                     CCP2CON         equ	838	;# 
  1449   000347                     CCP2CAP         equ	839	;# 
  1450   000348                     CCPR3           equ	840	;# 
  1451   000348                     CCPR3L          equ	840	;# 
  1452   000349                     CCPR3H          equ	841	;# 
  1453   00034A                     CCP3CON         equ	842	;# 
  1454   00034B                     CCP3CAP         equ	843	;# 
  1455   00034C                     CCPTMRS0        equ	844	;# 
  1456   00034F                     CRCDATA         equ	847	;# 
  1457   00034F                     CRCDATL         equ	847	;# 
  1458   000350                     CRCDATH         equ	848	;# 
  1459   000351                     CRCACC          equ	849	;# 
  1460   000351                     CRCACCL         equ	849	;# 
  1461   000352                     CRCACCH         equ	850	;# 
  1462   000353                     CRCSHFT         equ	851	;# 
  1463   000353                     CRCSHIFTL       equ	851	;# 
  1464   000354                     CRCSHIFTH       equ	852	;# 
  1465   000355                     CRCXOR          equ	853	;# 
  1466   000355                     CRCXORL         equ	853	;# 
  1467   000356                     CRCXORH         equ	854	;# 
  1468   000357                     CRCCON0         equ	855	;# 
  1469   000358                     CRCCON1         equ	856	;# 
  1470   00035A                     SCANLADR        equ	858	;# 
  1471   00035A                     SCANLADRL       equ	858	;# 
  1472   00035B                     SCANLADRH       equ	859	;# 
  1473   00035C                     SCANLADRU       equ	860	;# 
  1474   00035D                     SCANHADR        equ	861	;# 
  1475   00035D                     SCANHADRL       equ	861	;# 
  1476   00035E                     SCANHADRH       equ	862	;# 
  1477   00035F                     SCANHADRU       equ	863	;# 
  1478   000360                     SCANCON0        equ	864	;# 
  1479   000361                     SCANTRIG        equ	865	;# 
  1480   000362                     IPR0            equ	866	;# 
  1481   000363                     IPR1            equ	867	;# 
  1482   000364                     IPR2            equ	868	;# 
  1483   000365                     IPR3            equ	869	;# 
  1484   000366                     IPR4            equ	870	;# 
  1485   000367                     IPR5            equ	871	;# 
  1486   000368                     IPR6            equ	872	;# 
  1487   000369                     IPR7            equ	873	;# 
  1488   00036A                     IPR8            equ	874	;# 
  1489   00036B                     IPR9            equ	875	;# 
  1490   00036C                     IPR10           equ	876	;# 
  1491   00036D                     IPR11           equ	877	;# 
  1492   00036E                     IPR12           equ	878	;# 
  1493   00036F                     IPR13           equ	879	;# 
  1494   000370                     IPR14           equ	880	;# 
  1495   000371                     IPR15           equ	881	;# 
  1496   000373                     STATUS_CSHAD    equ	883	;# 
  1497   000374                     WREG_CSHAD      equ	884	;# 
  1498   000375                     BSR_CSHAD       equ	885	;# 
  1499   000376                     SHADCON         equ	886	;# 
  1500   000377                     STATUS_SHAD     equ	887	;# 
  1501   000378                     WREG_SHAD       equ	888	;# 
  1502   000379                     BSR_SHAD        equ	889	;# 
  1503   00037A                     PCLATH_SHAD     equ	890	;# 
  1504   00037B                     PCLATU_SHAD     equ	891	;# 
  1505   00037C                     FSR0SH          equ	892	;# 
  1506   00037C                     FSR0L_SHAD      equ	892	;# 
  1507   00037D                     FSR0H_SHAD      equ	893	;# 
  1508   00037E                     FSR1SH          equ	894	;# 
  1509   00037E                     FSR1L_SHAD      equ	894	;# 
  1510   00037F                     FSR1H_SHAD      equ	895	;# 
  1511   000380                     FSR2SH          equ	896	;# 
  1512   000380                     FSR2L_SHAD      equ	896	;# 
  1513   000381                     FSR2H_SHAD      equ	897	;# 
  1514   000382                     PRODSH          equ	898	;# 
  1515   000382                     PRODL_SHAD      equ	898	;# 
  1516   000383                     PRODH_SHAD      equ	899	;# 
  1517   0003BC                     CWG1CLK         equ	956	;# 
  1518   0003BC                     CWG1CLKCON      equ	956	;# 
  1519   0003BD                     CWG1ISM         equ	957	;# 
  1520   0003BD                     CWG1DAT         equ	957	;# 
  1521   0003BE                     CWG1DBR         equ	958	;# 
  1522   0003BF                     CWG1DBF         equ	959	;# 
  1523   0003C0                     CWG1CON0        equ	960	;# 
  1524   0003C1                     CWG1CON1        equ	961	;# 
  1525   0003C2                     CWG1AS0         equ	962	;# 
  1526   0003C3                     CWG1AS1         equ	963	;# 
  1527   0003C4                     CWG1STR         equ	964	;# 
  1528   0003C5                     CWG2CLK         equ	965	;# 
  1529   0003C5                     CWG2CLKCON      equ	965	;# 
  1530   0003C6                     CWG2ISM         equ	966	;# 
  1531   0003C6                     CWG2DAT         equ	966	;# 
  1532   0003C7                     CWG2DBR         equ	967	;# 
  1533   0003C8                     CWG2DBF         equ	968	;# 
  1534   0003C9                     CWG2CON0        equ	969	;# 
  1535   0003CA                     CWG2CON1        equ	970	;# 
  1536   0003CB                     CWG2AS0         equ	971	;# 
  1537   0003CC                     CWG2AS1         equ	972	;# 
  1538   0003CD                     CWG2STR         equ	973	;# 
  1539   0003CE                     CWG3CLK         equ	974	;# 
  1540   0003CE                     CWG3CLKCON      equ	974	;# 
  1541   0003CF                     CWG3ISM         equ	975	;# 
  1542   0003CF                     CWG3DAT         equ	975	;# 
  1543   0003D0                     CWG3DBR         equ	976	;# 
  1544   0003D1                     CWG3DBF         equ	977	;# 
  1545   0003D2                     CWG3CON0        equ	978	;# 
  1546   0003D3                     CWG3CON1        equ	979	;# 
  1547   0003D4                     CWG3AS0         equ	980	;# 
  1548   0003D5                     CWG3AS1         equ	981	;# 
  1549   0003D6                     CWG3STR         equ	982	;# 
  1550   0003D7                     FVRCON          equ	983	;# 
  1551   0003D8                     ADCPCON         equ	984	;# 
  1552   0003D8                     ADCP            equ	984	;# 
  1553   0003D9                     ADLTH           equ	985	;# 
  1554   0003D9                     ADLTHL          equ	985	;# 
  1555   0003DA                     ADLTHH          equ	986	;# 
  1556   0003DB                     ADUTH           equ	987	;# 
  1557   0003DB                     ADUTHL          equ	987	;# 
  1558   0003DC                     ADUTHH          equ	988	;# 
  1559   0003DD                     ADERR           equ	989	;# 
  1560   0003DD                     ADERRL          equ	989	;# 
  1561   0003DE                     ADERRH          equ	990	;# 
  1562   0003DF                     ADSTPT          equ	991	;# 
  1563   0003DF                     ADSTPTL         equ	991	;# 
  1564   0003E0                     ADSTPTH         equ	992	;# 
  1565   0003E1                     ADFLTR          equ	993	;# 
  1566   0003E1                     ADFLTRL         equ	993	;# 
  1567   0003E2                     ADFLTRH         equ	994	;# 
  1568   0003E3                     ADACC           equ	995	;# 
  1569   0003E3                     ADACCL          equ	995	;# 
  1570   0003E4                     ADACCH          equ	996	;# 
  1571   0003E5                     ADACCU          equ	997	;# 
  1572   0003E6                     ADCNT           equ	998	;# 
  1573   0003E7                     ADRPT           equ	999	;# 
  1574   0003E8                     ADPREV          equ	1000	;# 
  1575   0003E8                     ADPREVL         equ	1000	;# 
  1576   0003E9                     ADPREVH         equ	1001	;# 
  1577   0003EA                     ADRES           equ	1002	;# 
  1578   0003EA                     ADRESL          equ	1002	;# 
  1579   0003EB                     ADRESH          equ	1003	;# 
  1580   0003EC                     ADPCH           equ	1004	;# 
  1581   0003EE                     ADACQ           equ	1006	;# 
  1582   0003EE                     ADACQL          equ	1006	;# 
  1583   0003EF                     ADACQH          equ	1007	;# 
  1584   0003F0                     ADCAP           equ	1008	;# 
  1585   0003F1                     ADPRE           equ	1009	;# 
  1586   0003F1                     ADPREL          equ	1009	;# 
  1587   0003F2                     ADPREH          equ	1010	;# 
  1588   0003F3                     ADCON0          equ	1011	;# 
  1589   0003F4                     ADCON1          equ	1012	;# 
  1590   0003F5                     ADCON2          equ	1013	;# 
  1591   0003F6                     ADCON3          equ	1014	;# 
  1592   0003F7                     ADSTAT          equ	1015	;# 
  1593   0003F8                     ADREF           equ	1016	;# 
  1594   0003F9                     ADACT           equ	1017	;# 
  1595   0003FA                     ADCLK           equ	1018	;# 
  1596   000400                     ANSELA          equ	1024	;# 
  1597   000401                     WPUA            equ	1025	;# 
  1598   000402                     ODCONA          equ	1026	;# 
  1599   000403                     SLRCONA         equ	1027	;# 
  1600   000404                     INLVLA          equ	1028	;# 
  1601   000405                     IOCAP           equ	1029	;# 
  1602   000406                     IOCAN           equ	1030	;# 
  1603   000407                     IOCAF           equ	1031	;# 
  1604   000408                     ANSELB          equ	1032	;# 
  1605   000409                     WPUB            equ	1033	;# 
  1606   00040A                     ODCONB          equ	1034	;# 
  1607   00040B                     SLRCONB         equ	1035	;# 
  1608   00040C                     INLVLB          equ	1036	;# 
  1609   00040D                     IOCBP           equ	1037	;# 
  1610   00040E                     IOCBN           equ	1038	;# 
  1611   00040F                     IOCBF           equ	1039	;# 
  1612   000410                     ANSELC          equ	1040	;# 
  1613   000411                     WPUC            equ	1041	;# 
  1614   000412                     ODCONC          equ	1042	;# 
  1615   000413                     SLRCONC         equ	1043	;# 
  1616   000414                     INLVLC          equ	1044	;# 
  1617   000415                     IOCCP           equ	1045	;# 
  1618   000416                     IOCCN           equ	1046	;# 
  1619   000417                     IOCCF           equ	1047	;# 
  1620   000418                     ANSELD          equ	1048	;# 
  1621   000419                     WPUD            equ	1049	;# 
  1622   00041A                     ODCOND          equ	1050	;# 
  1623   00041B                     SLRCOND         equ	1051	;# 
  1624   00041C                     INLVLD          equ	1052	;# 
  1625   000420                     ANSELE          equ	1056	;# 
  1626   000421                     WPUE            equ	1057	;# 
  1627   000422                     ODCONE          equ	1058	;# 
  1628   000423                     SLRCONE         equ	1059	;# 
  1629   000424                     INLVLE          equ	1060	;# 
  1630   000425                     IOCEP           equ	1061	;# 
  1631   000426                     IOCEN           equ	1062	;# 
  1632   000427                     IOCEF           equ	1063	;# 
  1633   000428                     ANSELF          equ	1064	;# 
  1634   000429                     WPUF            equ	1065	;# 
  1635   00042A                     ODCONF          equ	1066	;# 
  1636   00042B                     SLRCONF         equ	1067	;# 
  1637   00042C                     INLVLF          equ	1068	;# 
  1638   000440                     NCO1ACC         equ	1088	;# 
  1639   000440                     NCO1ACCL        equ	1088	;# 
  1640   000441                     NCO1ACCH        equ	1089	;# 
  1641   000442                     NCO1ACCU        equ	1090	;# 
  1642   000443                     NCO1INC         equ	1091	;# 
  1643   000443                     NCO1INCL        equ	1091	;# 
  1644   000444                     NCO1INCH        equ	1092	;# 
  1645   000445                     NCO1INCU        equ	1093	;# 
  1646   000446                     NCO1CON         equ	1094	;# 
  1647   000447                     NCO1CLK         equ	1095	;# 
  1648   000448                     NCO2ACC         equ	1096	;# 
  1649   000448                     NCO2ACCL        equ	1096	;# 
  1650   000449                     NCO2ACCH        equ	1097	;# 
  1651   00044A                     NCO2ACCU        equ	1098	;# 
  1652   00044B                     NCO2INC         equ	1099	;# 
  1653   00044B                     NCO2INCL        equ	1099	;# 
  1654   00044C                     NCO2INCH        equ	1100	;# 
  1655   00044D                     NCO2INCU        equ	1101	;# 
  1656   00044E                     NCO2CON         equ	1102	;# 
  1657   00044F                     NCO2CLK         equ	1103	;# 
  1658   000450                     NCO3ACC         equ	1104	;# 
  1659   000450                     NCO3ACCL        equ	1104	;# 
  1660   000451                     NCO3ACCH        equ	1105	;# 
  1661   000452                     NCO3ACCU        equ	1106	;# 
  1662   000453                     NCO3INC         equ	1107	;# 
  1663   000453                     NCO3INCL        equ	1107	;# 
  1664   000454                     NCO3INCH        equ	1108	;# 
  1665   000455                     NCO3INCU        equ	1109	;# 
  1666   000456                     NCO3CON         equ	1110	;# 
  1667   000457                     NCO3CLK         equ	1111	;# 
  1668   000459                     IVTLOCK         equ	1113	;# 
  1669   00045A                     IVTAD           equ	1114	;# 
  1670   00045A                     IVTADL          equ	1114	;# 
  1671   00045B                     IVTADH          equ	1115	;# 
  1672   00045C                     IVTADU          equ	1116	;# 
  1673   00045D                     IVTBASE         equ	1117	;# 
  1674   00045D                     IVTBASEL        equ	1117	;# 
  1675   00045E                     IVTBASEH        equ	1118	;# 
  1676   00045F                     IVTBASEU        equ	1119	;# 
  1677   000460                     PWM1ERS         equ	1120	;# 
  1678   000461                     PWM1CLK         equ	1121	;# 
  1679   000462                     PWM1LDS         equ	1122	;# 
  1680   000463                     PWM1PR          equ	1123	;# 
  1681   000463                     PWM1PRL         equ	1123	;# 
  1682   000464                     PWM1PRH         equ	1124	;# 
  1683   000465                     PWM1CPRE        equ	1125	;# 
  1684   000466                     PWM1PIPOS       equ	1126	;# 
  1685   000467                     PWM1GIR         equ	1127	;# 
  1686   000468                     PWM1GIE         equ	1128	;# 
  1687   000469                     PWM1CON         equ	1129	;# 
  1688   00046A                     PWM1S1CFG       equ	1130	;# 
  1689   00046B                     PWM1S1P1        equ	1131	;# 
  1690   00046B                     PWM1S1P1L       equ	1131	;# 
  1691   00046C                     PWM1S1P1H       equ	1132	;# 
  1692   00046D                     PWM1S1P2        equ	1133	;# 
  1693   00046D                     PWM1S1P2L       equ	1133	;# 
  1694   00046E                     PWM1S1P2H       equ	1134	;# 
  1695   00046F                     PWM2ERS         equ	1135	;# 
  1696   000470                     PWM2CLK         equ	1136	;# 
  1697   000471                     PWM2LDS         equ	1137	;# 
  1698   000472                     PWM2PR          equ	1138	;# 
  1699   000472                     PWM2PRL         equ	1138	;# 
  1700   000473                     PWM2PRH         equ	1139	;# 
  1701   000474                     PWM2CPRE        equ	1140	;# 
  1702   000475                     PWM2PIPOS       equ	1141	;# 
  1703   000476                     PWM2GIR         equ	1142	;# 
  1704   000477                     PWM2GIE         equ	1143	;# 
  1705   000478                     PWM2CON         equ	1144	;# 
  1706   000479                     PWM2S1CFG       equ	1145	;# 
  1707   00047A                     PWM2S1P1        equ	1146	;# 
  1708   00047A                     PWM2S1P1L       equ	1146	;# 
  1709   00047B                     PWM2S1P1H       equ	1147	;# 
  1710   00047C                     PWM2S1P2        equ	1148	;# 
  1711   00047C                     PWM2S1P2L       equ	1148	;# 
  1712   00047D                     PWM2S1P2H       equ	1149	;# 
  1713   00047E                     PWM3ERS         equ	1150	;# 
  1714   00047F                     PWM3CLK         equ	1151	;# 
  1715   000480                     PWM3LDS         equ	1152	;# 
  1716   000481                     PWM3PR          equ	1153	;# 
  1717   000481                     PWM3PRL         equ	1153	;# 
  1718   000482                     PWM3PRH         equ	1154	;# 
  1719   000483                     PWM3CPRE        equ	1155	;# 
  1720   000484                     PWM3PIPOS       equ	1156	;# 
  1721   000485                     PWM3GIR         equ	1157	;# 
  1722   000486                     PWM3GIE         equ	1158	;# 
  1723   000487                     PWM3CON         equ	1159	;# 
  1724   000488                     PWM3S1CFG       equ	1160	;# 
  1725   000489                     PWM3S1P1        equ	1161	;# 
  1726   000489                     PWM3S1P1L       equ	1161	;# 
  1727   00048A                     PWM3S1P1H       equ	1162	;# 
  1728   00048B                     PWM3S1P2        equ	1163	;# 
  1729   00048B                     PWM3S1P2L       equ	1163	;# 
  1730   00048C                     PWM3S1P2H       equ	1164	;# 
  1731   00049C                     PWMLOAD         equ	1180	;# 
  1732   00049D                     PWMEN           equ	1181	;# 
  1733   00049E                     PIE0            equ	1182	;# 
  1734   00049F                     PIE1            equ	1183	;# 
  1735   0004A0                     PIE2            equ	1184	;# 
  1736   0004A1                     PIE3            equ	1185	;# 
  1737   0004A2                     PIE4            equ	1186	;# 
  1738   0004A3                     PIE5            equ	1187	;# 
  1739   0004A4                     PIE6            equ	1188	;# 
  1740   0004A5                     PIE7            equ	1189	;# 
  1741   0004A6                     PIE8            equ	1190	;# 
  1742   0004A7                     PIE9            equ	1191	;# 
  1743   0004A8                     PIE10           equ	1192	;# 
  1744   0004A9                     PIE11           equ	1193	;# 
  1745   0004AA                     PIE12           equ	1194	;# 
  1746   0004AB                     PIE13           equ	1195	;# 
  1747   0004AC                     PIE14           equ	1196	;# 
  1748   0004AD                     PIE15           equ	1197	;# 
  1749   0004AE                     PIR0            equ	1198	;# 
  1750   0004AF                     PIR1            equ	1199	;# 
  1751   0004B0                     PIR2            equ	1200	;# 
  1752   0004B1                     PIR3            equ	1201	;# 
  1753   0004B2                     PIR4            equ	1202	;# 
  1754   0004B3                     PIR5            equ	1203	;# 
  1755   0004B4                     PIR6            equ	1204	;# 
  1756   0004B5                     PIR7            equ	1205	;# 
  1757   0004B6                     PIR8            equ	1206	;# 
  1758   0004B7                     PIR9            equ	1207	;# 
  1759   0004B8                     PIR10           equ	1208	;# 
  1760   0004B9                     PIR11           equ	1209	;# 
  1761   0004BA                     PIR12           equ	1210	;# 
  1762   0004BB                     PIR13           equ	1211	;# 
  1763   0004BC                     PIR14           equ	1212	;# 
  1764   0004BD                     PIR15           equ	1213	;# 
  1765   0004BE                     LATA            equ	1214	;# 
  1766   0004BF                     LATB            equ	1215	;# 
  1767   0004C0                     LATC            equ	1216	;# 
  1768   0004C1                     LATD            equ	1217	;# 
  1769   0004C2                     LATE            equ	1218	;# 
  1770   0004C3                     LATF            equ	1219	;# 
  1771   0004C6                     TRISA           equ	1222	;# 
  1772   0004C7                     TRISB           equ	1223	;# 
  1773   0004C8                     TRISC           equ	1224	;# 
  1774   0004C9                     TRISD           equ	1225	;# 
  1775   0004CA                     TRISE           equ	1226	;# 
  1776   0004CB                     TRISF           equ	1227	;# 
  1777   0004CE                     PORTA           equ	1230	;# 
  1778   0004CF                     PORTB           equ	1231	;# 
  1779   0004D0                     PORTC           equ	1232	;# 
  1780   0004D1                     PORTD           equ	1233	;# 
  1781   0004D2                     PORTE           equ	1234	;# 
  1782   0004D3                     PORTF           equ	1235	;# 
  1783   0004D6                     INTCON0         equ	1238	;# 
  1784   0004D7                     INTCON1         equ	1239	;# 
  1785   0004D8                     STATUS          equ	1240	;# 
  1786   0004D9                     FSR2            equ	1241	;# 
  1787   0004D9                     FSR2L           equ	1241	;# 
  1788   0004DA                     FSR2H           equ	1242	;# 
  1789   0004DB                     PLUSW2          equ	1243	;# 
  1790   0004DC                     PREINC2         equ	1244	;# 
  1791   0004DD                     POSTDEC2        equ	1245	;# 
  1792   0004DE                     POSTINC2        equ	1246	;# 
  1793   0004DF                     INDF2           equ	1247	;# 
  1794   0004E0                     BSR             equ	1248	;# 
  1795   0004E1                     FSR1            equ	1249	;# 
  1796   0004E1                     FSR1L           equ	1249	;# 
  1797   0004E2                     FSR1H           equ	1250	;# 
  1798   0004E3                     PLUSW1          equ	1251	;# 
  1799   0004E4                     PREINC1         equ	1252	;# 
  1800   0004E5                     POSTDEC1        equ	1253	;# 
  1801   0004E6                     POSTINC1        equ	1254	;# 
  1802   0004E7                     INDF1           equ	1255	;# 
  1803   0004E8                     WREG            equ	1256	;# 
  1804   0004E9                     FSR0            equ	1257	;# 
  1805   0004E9                     FSR0L           equ	1257	;# 
  1806   0004EA                     FSR0H           equ	1258	;# 
  1807   0004EB                     PLUSW0          equ	1259	;# 
  1808   0004EC                     PREINC0         equ	1260	;# 
  1809   0004ED                     POSTDEC0        equ	1261	;# 
  1810   0004EE                     POSTINC0        equ	1262	;# 
  1811   0004EF                     INDF0           equ	1263	;# 
  1812   0004F0                     PCON0           equ	1264	;# 
  1813   0004F1                     PCON1           equ	1265	;# 
  1814   0004F2                     CPUDOZE         equ	1266	;# 
  1815   0004F3                     PROD            equ	1267	;# 
  1816   0004F3                     PRODL           equ	1267	;# 
  1817   0004F4                     PRODH           equ	1268	;# 
  1818   0004F5                     TABLAT          equ	1269	;# 
  1819   0004F6                     TBLPTR          equ	1270	;# 
  1820   0004F6                     TBLPTRL         equ	1270	;# 
  1821   0004F7                     TBLPTRH         equ	1271	;# 
  1822   0004F8                     TBLPTRU         equ	1272	;# 
  1823   0004F9                     PCLAT           equ	1273	;# 
  1824   0004F9                     PCL             equ	1273	;# 
  1825   0004FA                     PCLATH          equ	1274	;# 
  1826   0004FB                     PCLATU          equ	1275	;# 
  1827   0004FC                     STKPTR          equ	1276	;# 
  1828   0004FD                     TOS             equ	1277	;# 
  1829   0004FD                     TOSL            equ	1277	;# 
  1830   0004FE                     TOSH            equ	1278	;# 
  1831   0004FF                     TOSU            equ	1279	;# 
  1832   000039                     CLKRCON         equ	57	;# 
  1833   00003A                     CLKRCLK         equ	58	;# 
  1834   000040                     NVMCON0         equ	64	;# 
  1835   000041                     NVMCON1         equ	65	;# 
  1836   000042                     NVMLOCK         equ	66	;# 
  1837   000043                     NVMADR          equ	67	;# 
  1838   000043                     NVMADRL         equ	67	;# 
  1839   000044                     NVMADRH         equ	68	;# 
  1840   000045                     NVMADRU         equ	69	;# 
  1841   000046                     NVMDAT          equ	70	;# 
  1842   000046                     NVMDATL         equ	70	;# 
  1843   000047                     NVMDATH         equ	71	;# 
  1844   000048                     VREGCON         equ	72	;# 
  1845   000049                     BORCON          equ	73	;# 
  1846   00004A                     HLVDCON0        equ	74	;# 
  1847   00004B                     HLVDCON1        equ	75	;# 
  1848   00004C                     ZCDCON          equ	76	;# 
  1849   000060                     PMD0            equ	96	;# 
  1850   000061                     PMD1            equ	97	;# 
  1851   000063                     PMD3            equ	99	;# 
  1852   000064                     PMD4            equ	100	;# 
  1853   000065                     PMD5            equ	101	;# 
  1854   000066                     PMD6            equ	102	;# 
  1855   000067                     PMD7            equ	103	;# 
  1856   000068                     PMD8            equ	104	;# 
  1857   00006A                     MD1CON0         equ	106	;# 
  1858   00006B                     MD1CON1         equ	107	;# 
  1859   00006C                     MD1SRC          equ	108	;# 
  1860   00006D                     MD1CARL         equ	109	;# 
  1861   00006E                     MD1CARH         equ	110	;# 
  1862   00006F                     CMOUT           equ	111	;# 
  1863   000070                     CM1CON0         equ	112	;# 
  1864   000071                     CM1CON1         equ	113	;# 
  1865   000072                     CM1NCH          equ	114	;# 
  1866   000073                     CM1PCH          equ	115	;# 
  1867   000074                     CM2CON0         equ	116	;# 
  1868   000075                     CM2CON1         equ	117	;# 
  1869   000076                     CM2NCH          equ	118	;# 
  1870   000077                     CM2PCH          equ	119	;# 
  1871   000078                     WDTCON0         equ	120	;# 
  1872   000079                     WDTCON1         equ	121	;# 
  1873   00007A                     WDTPS           equ	122	;# 
  1874   00007A                     WDTPSL          equ	122	;# 
  1875   00007B                     WDTPSH          equ	123	;# 
  1876   00007C                     WDTTMR          equ	124	;# 
  1877   00007D                     DAC1DAT         equ	125	;# 
  1878   00007D                     DAC1DATL        equ	125	;# 
  1879   00007F                     DAC1CON         equ	127	;# 
  1880   000080                     SPI1RXB         equ	128	;# 
  1881   000081                     SPI1TXB         equ	129	;# 
  1882   000082                     SPI1TCNT        equ	130	;# 
  1883   000082                     SPI1TCNTL       equ	130	;# 
  1884   000083                     SPI1TCNTH       equ	131	;# 
  1885   000084                     SPI1CON0        equ	132	;# 
  1886   000085                     SPI1CON1        equ	133	;# 
  1887   000086                     SPI1CON2        equ	134	;# 
  1888   000087                     SPI1STATUS      equ	135	;# 
  1889   000088                     SPI1TWIDTH      equ	136	;# 
  1890   000089                     SPI1BAUD        equ	137	;# 
  1891   00008A                     SPI1INTF        equ	138	;# 
  1892   00008B                     SPI1INTE        equ	139	;# 
  1893   00008C                     SPI1CLK         equ	140	;# 
  1894   00008D                     SPI2RXB         equ	141	;# 
  1895   00008E                     SPI2TXB         equ	142	;# 
  1896   00008F                     SPI2TCNT        equ	143	;# 
  1897   00008F                     SPI2TCNTL       equ	143	;# 
  1898   000090                     SPI2TCNTH       equ	144	;# 
  1899   000091                     SPI2CON0        equ	145	;# 
  1900   000092                     SPI2CON1        equ	146	;# 
  1901   000093                     SPI2CON2        equ	147	;# 
  1902   000094                     SPI2STATUS      equ	148	;# 
  1903   000095                     SPI2TWIDTH      equ	149	;# 
  1904   000096                     SPI2BAUD        equ	150	;# 
  1905   000097                     SPI2INTF        equ	151	;# 
  1906   000098                     SPI2INTE        equ	152	;# 
  1907   000099                     SPI2CLK         equ	153	;# 
  1908   0000AC                     ACTCON          equ	172	;# 
  1909   0000AD                     OSCCON1         equ	173	;# 
  1910   0000AE                     OSCCON2         equ	174	;# 
  1911   0000AF                     OSCCON3         equ	175	;# 
  1912   0000B0                     OSCTUNE         equ	176	;# 
  1913   0000B1                     OSCFRQ          equ	177	;# 
  1914   0000B1                     OSCFREQ         equ	177	;# 
  1915   0000B2                     OSCSTAT         equ	178	;# 
  1916   0000B2                     OSCSTAT1        equ	178	;# 
  1917   0000B3                     OSCEN           equ	179	;# 
  1918   0000B4                     PRLOCK          equ	180	;# 
  1919   0000B5                     SCANPR          equ	181	;# 
  1920   0000B6                     DMA1PR          equ	182	;# 
  1921   0000B7                     DMA2PR          equ	183	;# 
  1922   0000B8                     DMA3PR          equ	184	;# 
  1923   0000B9                     DMA4PR          equ	185	;# 
  1924   0000BA                     DMA5PR          equ	186	;# 
  1925   0000BB                     DMA6PR          equ	187	;# 
  1926   0000BE                     MAINPR          equ	190	;# 
  1927   0000BF                     ISRPR           equ	191	;# 
  1928   0000D4                     CLCDATA         equ	212	;# 
  1929   0000D5                     CLCSELECT       equ	213	;# 
  1930   0000D6                     CLCnCON         equ	214	;# 
  1931   0000D7                     CLCnPOL         equ	215	;# 
  1932   0000D8                     CLCnSEL0        equ	216	;# 
  1933   0000D9                     CLCnSEL1        equ	217	;# 
  1934   0000DA                     CLCnSEL2        equ	218	;# 
  1935   0000DB                     CLCnSEL3        equ	219	;# 
  1936   0000DC                     CLCnGLS0        equ	220	;# 
  1937   0000DD                     CLCnGLS1        equ	221	;# 
  1938   0000DE                     CLCnGLS2        equ	222	;# 
  1939   0000DF                     CLCnGLS3        equ	223	;# 
  1940   0000E8                     DMASELECT       equ	232	;# 
  1941   0000E9                     DMAnBUF         equ	233	;# 
  1942   0000EA                     DMAnDCNT        equ	234	;# 
  1943   0000EA                     DMAnDCNTL       equ	234	;# 
  1944   0000EB                     DMAnDCNTH       equ	235	;# 
  1945   0000EC                     DMAnDPTR        equ	236	;# 
  1946   0000EC                     DMAnDPTRL       equ	236	;# 
  1947   0000ED                     DMAnDPTRH       equ	237	;# 
  1948   0000EE                     DMAnDSZ         equ	238	;# 
  1949   0000EE                     DMAnDSZL        equ	238	;# 
  1950   0000EF                     DMAnDSZH        equ	239	;# 
  1951   0000F0                     DMAnDSA         equ	240	;# 
  1952   0000F0                     DMAnDSAL        equ	240	;# 
  1953   0000F1                     DMAnDSAH        equ	241	;# 
  1954   0000F2                     DMAnSCNT        equ	242	;# 
  1955   0000F2                     DMAnSCNTL       equ	242	;# 
  1956   0000F3                     DMAnSCNTH       equ	243	;# 
  1957   0000F4                     DMAnSPTR        equ	244	;# 
  1958   0000F4                     DMAnSPTRL       equ	244	;# 
  1959   0000F5                     DMAnSPTRH       equ	245	;# 
  1960   0000F6                     DMAnSPTRU       equ	246	;# 
  1961   0000F7                     DMAnSSZ         equ	247	;# 
  1962   0000F7                     DMAnSSZL        equ	247	;# 
  1963   0000F8                     DMAnSSZH        equ	248	;# 
  1964   0000F9                     DMAnSSA         equ	249	;# 
  1965   0000F9                     DMAnSSAL        equ	249	;# 
  1966   0000FA                     DMAnSSAH        equ	250	;# 
  1967   0000FB                     DMAnSSAU        equ	251	;# 
  1968   0000FC                     DMAnCON0        equ	252	;# 
  1969   0000FD                     DMAnCON1        equ	253	;# 
  1970   0000FE                     DMAnAIRQ        equ	254	;# 
  1971   0000FF                     DMAnSIRQ        equ	255	;# 
  1972   000200                     PPSLOCK         equ	512	;# 
  1973   000201                     RA0PPS          equ	513	;# 
  1974   000202                     RA1PPS          equ	514	;# 
  1975   000203                     RA2PPS          equ	515	;# 
  1976   000204                     RA3PPS          equ	516	;# 
  1977   000205                     RA4PPS          equ	517	;# 
  1978   000206                     RA5PPS          equ	518	;# 
  1979   000207                     RA6PPS          equ	519	;# 
  1980   000208                     RA7PPS          equ	520	;# 
  1981   000209                     RB0PPS          equ	521	;# 
  1982   00020A                     RB1PPS          equ	522	;# 
  1983   00020B                     RB2PPS          equ	523	;# 
  1984   00020C                     RB3PPS          equ	524	;# 
  1985   00020D                     RB4PPS          equ	525	;# 
  1986   00020E                     RB5PPS          equ	526	;# 
  1987   00020F                     RB6PPS          equ	527	;# 
  1988   000210                     RB7PPS          equ	528	;# 
  1989   000211                     RC0PPS          equ	529	;# 
  1990   000212                     RC1PPS          equ	530	;# 
  1991   000213                     RC2PPS          equ	531	;# 
  1992   000214                     RC3PPS          equ	532	;# 
  1993   000215                     RC4PPS          equ	533	;# 
  1994   000216                     RC5PPS          equ	534	;# 
  1995   000217                     RC6PPS          equ	535	;# 
  1996   000218                     RC7PPS          equ	536	;# 
  1997   000219                     RD0PPS          equ	537	;# 
  1998   00021A                     RD1PPS          equ	538	;# 
  1999   00021B                     RD2PPS          equ	539	;# 
  2000   00021C                     RD3PPS          equ	540	;# 
  2001   00021D                     RD4PPS          equ	541	;# 
  2002   00021E                     RD5PPS          equ	542	;# 
  2003   00021F                     RD6PPS          equ	543	;# 
  2004   000220                     RD7PPS          equ	544	;# 
  2005   000221                     RE0PPS          equ	545	;# 
  2006   000222                     RE1PPS          equ	546	;# 
  2007   000223                     RE2PPS          equ	547	;# 
  2008   000229                     RF0PPS          equ	553	;# 
  2009   00022A                     RF1PPS          equ	554	;# 
  2010   00022B                     RF2PPS          equ	555	;# 
  2011   00022C                     RF3PPS          equ	556	;# 
  2012   00022D                     RF4PPS          equ	557	;# 
  2013   00022E                     RF5PPS          equ	558	;# 
  2014   00022F                     RF6PPS          equ	559	;# 
  2015   000230                     RF7PPS          equ	560	;# 
  2016   00023E                     INT0PPS         equ	574	;# 
  2017   00023F                     INT1PPS         equ	575	;# 
  2018   000240                     INT2PPS         equ	576	;# 
  2019   000241                     T0CKIPPS        equ	577	;# 
  2020   000242                     T1CKIPPS        equ	578	;# 
  2021   000243                     T1GPPS          equ	579	;# 
  2022   000244                     T3CKIPPS        equ	580	;# 
  2023   000245                     T3GPPS          equ	581	;# 
  2024   000246                     T5CKIPPS        equ	582	;# 
  2025   000247                     T5GPPS          equ	583	;# 
  2026   000248                     T2INPPS         equ	584	;# 
  2027   000249                     T4INPPS         equ	585	;# 
  2028   00024A                     T6INPPS         equ	586	;# 
  2029   00024F                     CCP1PPS         equ	591	;# 
  2030   000250                     CCP2PPS         equ	592	;# 
  2031   000251                     CCP3PPS         equ	593	;# 
  2032   000253                     PWM1ERSPPS      equ	595	;# 
  2033   000254                     PWM2ERSPPS      equ	596	;# 
  2034   000255                     PWM3ERSPPS      equ	597	;# 
  2035   000257                     PWMIN0PPS       equ	599	;# 
  2036   000258                     PWMIN1PPS       equ	600	;# 
  2037   000259                     SMT1WINPPS      equ	601	;# 
  2038   00025A                     SMT1SIGPPS      equ	602	;# 
  2039   00025B                     CWG1PPS         equ	603	;# 
  2040   00025B                     CWG1INPPS       equ	603	;# 
  2041   00025C                     CWG2PPS         equ	604	;# 
  2042   00025C                     CWG2INPPS       equ	604	;# 
  2043   00025D                     CWG3PPS         equ	605	;# 
  2044   00025D                     CWG3INPPS       equ	605	;# 
  2045   00025E                     MD1CARLPPS      equ	606	;# 
  2046   00025E                     MDCARLPPS       equ	606	;# 
  2047   00025F                     MD1CARHPPS      equ	607	;# 
  2048   00025F                     MDCARHPPS       equ	607	;# 
  2049   000260                     MD1SRCPPS       equ	608	;# 
  2050   000260                     MDSRCPPS        equ	608	;# 
  2051   000261                     CLCIN0PPS       equ	609	;# 
  2052   000262                     CLCIN1PPS       equ	610	;# 
  2053   000263                     CLCIN2PPS       equ	611	;# 
  2054   000264                     CLCIN3PPS       equ	612	;# 
  2055   000265                     CLCIN4PPS       equ	613	;# 
  2056   000266                     CLCIN5PPS       equ	614	;# 
  2057   000267                     CLCIN6PPS       equ	615	;# 
  2058   000268                     CLCIN7PPS       equ	616	;# 
  2059   000269                     ADACTPPS        equ	617	;# 
  2060   00026A                     SPI1SCKPPS      equ	618	;# 
  2061   00026B                     SPI1SDIPPS      equ	619	;# 
  2062   00026C                     SPI1SSPPS       equ	620	;# 
  2063   00026D                     SPI2SCKPPS      equ	621	;# 
  2064   00026E                     SPI2SDIPPS      equ	622	;# 
  2065   00026F                     SPI2SSPPS       equ	623	;# 
  2066   000270                     I2C1SDAPPS      equ	624	;# 
  2067   000271                     I2C1SCLPPS      equ	625	;# 
  2068   000272                     U1RXPPS         equ	626	;# 
  2069   000273                     U1CTSPPS        equ	627	;# 
  2070   000274                     U2RXPPS         equ	628	;# 
  2071   000275                     U2CTSPPS        equ	629	;# 
  2072   000276                     U3RXPPS         equ	630	;# 
  2073   000277                     U3CTSPPS        equ	631	;# 
  2074   000278                     U4RXPPS         equ	632	;# 
  2075   000279                     U4CTSPPS        equ	633	;# 
  2076   00027A                     U5RXPPS         equ	634	;# 
  2077   00027B                     U5CTSPPS        equ	635	;# 
  2078   000286                     RC4I2C          equ	646	;# 
  2079   000287                     RC3I2C          equ	647	;# 
  2080   000288                     RB2I2C          equ	648	;# 
  2081   000289                     RB1I2C          equ	649	;# 
  2082   00028B                     I2C1RXB         equ	651	;# 
  2083   00028C                     I2C1TXB         equ	652	;# 
  2084   00028D                     I2C1CNT         equ	653	;# 
  2085   00028E                     I2C1ADB0        equ	654	;# 
  2086   00028F                     I2C1ADB1        equ	655	;# 
  2087   000290                     I2C1ADR0        equ	656	;# 
  2088   000291                     I2C1ADR1        equ	657	;# 
  2089   000292                     I2C1ADR2        equ	658	;# 
  2090   000293                     I2C1ADR3        equ	659	;# 
  2091   000294                     I2C1CON0        equ	660	;# 
  2092   000295                     I2C1CON1        equ	661	;# 
  2093   000296                     I2C1CON2        equ	662	;# 
  2094   000297                     I2C1ERR         equ	663	;# 
  2095   000298                     I2C1STAT0       equ	664	;# 
  2096   000299                     I2C1STAT1       equ	665	;# 
  2097   00029A                     I2C1PIR         equ	666	;# 
  2098   00029B                     I2C1PIE         equ	667	;# 
  2099   00029C                     I2C1CLK         equ	668	;# 
  2100   00029D                     I2C1BTO         equ	669	;# 
  2101   0002A1                     U1RXB           equ	673	;# 
  2102   0002A1                     U1RXBL          equ	673	;# 
  2103   0002A2                     U1RXCHK         equ	674	;# 
  2104   0002A3                     U1TXB           equ	675	;# 
  2105   0002A3                     U1TXBL          equ	675	;# 
  2106   0002A4                     U1TXCHK         equ	676	;# 
  2107   0002A5                     U1P1            equ	677	;# 
  2108   0002A5                     U1P1L           equ	677	;# 
  2109   0002A6                     U1P1H           equ	678	;# 
  2110   0002A7                     U1P2            equ	679	;# 
  2111   0002A7                     U1P2L           equ	679	;# 
  2112   0002A8                     U1P2H           equ	680	;# 
  2113   0002A9                     U1P3            equ	681	;# 
  2114   0002A9                     U1P3L           equ	681	;# 
  2115   0002AA                     U1P3H           equ	682	;# 
  2116   0002AB                     U1CON0          equ	683	;# 
  2117   0002AC                     U1CON1          equ	684	;# 
  2118   0002AD                     U1CON2          equ	685	;# 
  2119   0002AE                     U1BRG           equ	686	;# 
  2120   0002AE                     U1BRGL          equ	686	;# 
  2121   0002AF                     U1BRGH          equ	687	;# 
  2122   0002B0                     U1FIFO          equ	688	;# 
  2123   0002B1                     U1UIR           equ	689	;# 
  2124   0002B2                     U1ERRIR         equ	690	;# 
  2125   0002B3                     U1ERRIE         equ	691	;# 
  2126   0002B4                     U2RXB           equ	692	;# 
  2127   0002B4                     U2RXBL          equ	692	;# 
  2128   0002B6                     U2TXB           equ	694	;# 
  2129   0002B6                     U2TXBL          equ	694	;# 
  2130   0002B8                     U2P1            equ	696	;# 
  2131   0002B8                     U2P1L           equ	696	;# 
  2132   0002BA                     U2P2            equ	698	;# 
  2133   0002BA                     U2P2L           equ	698	;# 
  2134   0002BC                     U2P3            equ	700	;# 
  2135   0002BC                     U2P3L           equ	700	;# 
  2136   0002BE                     U2CON0          equ	702	;# 
  2137   0002BF                     U2CON1          equ	703	;# 
  2138   0002C0                     U2CON2          equ	704	;# 
  2139   0002C1                     U2BRG           equ	705	;# 
  2140   0002C1                     U2BRGL          equ	705	;# 
  2141   0002C2                     U2BRGH          equ	706	;# 
  2142   0002C3                     U2FIFO          equ	707	;# 
  2143   0002C4                     U2UIR           equ	708	;# 
  2144   0002C5                     U2ERRIR         equ	709	;# 
  2145   0002C6                     U2ERRIE         equ	710	;# 
  2146   0002C7                     U3RXB           equ	711	;# 
  2147   0002C7                     U3RXBL          equ	711	;# 
  2148   0002C9                     U3TXB           equ	713	;# 
  2149   0002C9                     U3TXBL          equ	713	;# 
  2150   0002CB                     U3P1            equ	715	;# 
  2151   0002CB                     U3P1L           equ	715	;# 
  2152   0002CD                     U3P2            equ	717	;# 
  2153   0002CD                     U3P2L           equ	717	;# 
  2154   0002CF                     U3P3            equ	719	;# 
  2155   0002CF                     U3P3L           equ	719	;# 
  2156   0002D1                     U3CON0          equ	721	;# 
  2157   0002D2                     U3CON1          equ	722	;# 
  2158   0002D3                     U3CON2          equ	723	;# 
  2159   0002D4                     U3BRG           equ	724	;# 
  2160   0002D4                     U3BRGL          equ	724	;# 
  2161   0002D5                     U3BRGH          equ	725	;# 
  2162   0002D6                     U3FIFO          equ	726	;# 
  2163   0002D7                     U3UIR           equ	727	;# 
  2164   0002D8                     U3ERRIR         equ	728	;# 
  2165   0002D9                     U3ERRIE         equ	729	;# 
  2166   0002DA                     U4RXB           equ	730	;# 
  2167   0002DA                     U4RXBL          equ	730	;# 
  2168   0002DC                     U4TXB           equ	732	;# 
  2169   0002DC                     U4TXBL          equ	732	;# 
  2170   0002DE                     U4P1            equ	734	;# 
  2171   0002DE                     U4P1L           equ	734	;# 
  2172   0002E0                     U4P2            equ	736	;# 
  2173   0002E0                     U4P2L           equ	736	;# 
  2174   0002E2                     U4P3            equ	738	;# 
  2175   0002E2                     U4P3L           equ	738	;# 
  2176   0002E4                     U4CON0          equ	740	;# 
  2177   0002E5                     U4CON1          equ	741	;# 
  2178   0002E6                     U4CON2          equ	742	;# 
  2179   0002E7                     U4BRG           equ	743	;# 
  2180   0002E7                     U4BRGL          equ	743	;# 
  2181   0002E8                     U4BRGH          equ	744	;# 
  2182   0002E9                     U4FIFO          equ	745	;# 
  2183   0002EA                     U4UIR           equ	746	;# 
  2184   0002EB                     U4ERRIR         equ	747	;# 
  2185   0002EC                     U4ERRIE         equ	748	;# 
  2186   0002ED                     U5RXB           equ	749	;# 
  2187   0002ED                     U5RXBL          equ	749	;# 
  2188   0002EF                     U5TXB           equ	751	;# 
  2189   0002EF                     U5TXBL          equ	751	;# 
  2190   0002F1                     U5P1            equ	753	;# 
  2191   0002F1                     U5P1L           equ	753	;# 
  2192   0002F3                     U5P2            equ	755	;# 
  2193   0002F3                     U5P2L           equ	755	;# 
  2194   0002F5                     U5P3            equ	757	;# 
  2195   0002F5                     U5P3L           equ	757	;# 
  2196   0002F7                     U5CON0          equ	759	;# 
  2197   0002F8                     U5CON1          equ	760	;# 
  2198   0002F9                     U5CON2          equ	761	;# 
  2199   0002FA                     U5BRG           equ	762	;# 
  2200   0002FA                     U5BRGL          equ	762	;# 
  2201   0002FB                     U5BRGH          equ	763	;# 
  2202   0002FC                     U5FIFO          equ	764	;# 
  2203   0002FD                     U5UIR           equ	765	;# 
  2204   0002FE                     U5ERRIR         equ	766	;# 
  2205   0002FF                     U5ERRIE         equ	767	;# 
  2206   000300                     SMT1TMR         equ	768	;# 
  2207   000300                     SMT1TMRL        equ	768	;# 
  2208   000301                     SMT1TMRH        equ	769	;# 
  2209   000302                     SMT1TMRU        equ	770	;# 
  2210   000303                     SMT1CPR         equ	771	;# 
  2211   000303                     SMT1CPRL        equ	771	;# 
  2212   000304                     SMT1CPRH        equ	772	;# 
  2213   000305                     SMT1CPRU        equ	773	;# 
  2214   000306                     SMT1CPW         equ	774	;# 
  2215   000306                     SMT1CPWL        equ	774	;# 
  2216   000307                     SMT1CPWH        equ	775	;# 
  2217   000308                     SMT1CPWU        equ	776	;# 
  2218   000309                     SMT1PR          equ	777	;# 
  2219   000309                     SMT1PRL         equ	777	;# 
  2220   00030A                     SMT1PRH         equ	778	;# 
  2221   00030B                     SMT1PRU         equ	779	;# 
  2222   00030C                     SMT1CON0        equ	780	;# 
  2223   00030D                     SMT1CON1        equ	781	;# 
  2224   00030E                     SMT1STAT        equ	782	;# 
  2225   00030F                     SMT1CLK         equ	783	;# 
  2226   000310                     SMT1SIG         equ	784	;# 
  2227   000311                     SMT1WIN         equ	785	;# 
  2228   000318                     TMR0L           equ	792	;# 
  2229   000318                     TMR0            equ	792	;# 
  2230   000319                     TMR0H           equ	793	;# 
  2231   000319                     PR0             equ	793	;# 
  2232   00031A                     T0CON0          equ	794	;# 
  2233   00031B                     T0CON1          equ	795	;# 
  2234   00031C                     TMR1            equ	796	;# 
  2235   00031C                     TMR1L           equ	796	;# 
  2236   00031D                     TMR1H           equ	797	;# 
  2237   00031E                     T1CON           equ	798	;# 
  2238   00031E                     TMR1CON         equ	798	;# 
  2239   00031F                     T1GCON          equ	799	;# 
  2240   00031F                     TMR1GCON        equ	799	;# 
  2241   000320                     T1GATE          equ	800	;# 
  2242   000320                     TMR1GATE        equ	800	;# 
  2243   000321                     T1CLK           equ	801	;# 
  2244   000321                     TMR1CLK         equ	801	;# 
  2245   000321                     PR1             equ	801	;# 
  2246   000322                     T2TMR           equ	802	;# 
  2247   000322                     TMR2            equ	802	;# 
  2248   000323                     T2PR            equ	803	;# 
  2249   000323                     PR2             equ	803	;# 
  2250   000324                     T2CON           equ	804	;# 
  2251   000325                     T2HLT           equ	805	;# 
  2252   000326                     T2CLKCON        equ	806	;# 
  2253   000326                     T2CLK           equ	806	;# 
  2254   000327                     T2RST           equ	807	;# 
  2255   000328                     TMR3            equ	808	;# 
  2256   000328                     TMR3L           equ	808	;# 
  2257   000329                     TMR3H           equ	809	;# 
  2258   00032A                     T3CON           equ	810	;# 
  2259   00032A                     TMR3CON         equ	810	;# 
  2260   00032B                     T3GCON          equ	811	;# 
  2261   00032B                     TMR3GCON        equ	811	;# 
  2262   00032C                     T3GATE          equ	812	;# 
  2263   00032C                     TMR3GATE        equ	812	;# 
  2264   00032D                     T3CLK           equ	813	;# 
  2265   00032D                     TMR3CLK         equ	813	;# 
  2266   00032D                     PR3             equ	813	;# 
  2267   00032E                     T4TMR           equ	814	;# 
  2268   00032E                     TMR4            equ	814	;# 
  2269   00032F                     T4PR            equ	815	;# 
  2270   00032F                     PR4             equ	815	;# 
  2271   000330                     T4CON           equ	816	;# 
  2272   000331                     T4HLT           equ	817	;# 
  2273   000332                     T4CLKCON        equ	818	;# 
  2274   000332                     T4CLK           equ	818	;# 
  2275   000333                     T4RST           equ	819	;# 
  2276   000334                     TMR5            equ	820	;# 
  2277   000334                     TMR5L           equ	820	;# 
  2278   000335                     TMR5H           equ	821	;# 
  2279   000336                     T5CON           equ	822	;# 
  2280   000336                     TMR5CON         equ	822	;# 
  2281   000337                     T5GCON          equ	823	;# 
  2282   000337                     TMR5GCON        equ	823	;# 
  2283   000338                     T5GATE          equ	824	;# 
  2284   000338                     TMR5GATE        equ	824	;# 
  2285   000339                     T5CLK           equ	825	;# 
  2286   000339                     TMR5CLK         equ	825	;# 
  2287   000339                     PR5             equ	825	;# 
  2288   00033A                     T6TMR           equ	826	;# 
  2289   00033A                     TMR6            equ	826	;# 
  2290   00033B                     T6PR            equ	827	;# 
  2291   00033B                     PR6             equ	827	;# 
  2292   00033C                     T6CON           equ	828	;# 
  2293   00033D                     T6HLT           equ	829	;# 
  2294   00033E                     T6CLKCON        equ	830	;# 
  2295   00033E                     T6CLK           equ	830	;# 
  2296   00033F                     T6RST           equ	831	;# 
  2297   000340                     CCPR1           equ	832	;# 
  2298   000340                     CCPR1L          equ	832	;# 
  2299   000341                     CCPR1H          equ	833	;# 
  2300   000342                     CCP1CON         equ	834	;# 
  2301   000343                     CCP1CAP         equ	835	;# 
  2302   000344                     CCPR2           equ	836	;# 
  2303   000344                     CCPR2L          equ	836	;# 
  2304   000345                     CCPR2H          equ	837	;# 
  2305   000346                     CCP2CON         equ	838	;# 
  2306   000347                     CCP2CAP         equ	839	;# 
  2307   000348                     CCPR3           equ	840	;# 
  2308   000348                     CCPR3L          equ	840	;# 
  2309   000349                     CCPR3H          equ	841	;# 
  2310   00034A                     CCP3CON         equ	842	;# 
  2311   00034B                     CCP3CAP         equ	843	;# 
  2312   00034C                     CCPTMRS0        equ	844	;# 
  2313   00034F                     CRCDATA         equ	847	;# 
  2314   00034F                     CRCDATL         equ	847	;# 
  2315   000350                     CRCDATH         equ	848	;# 
  2316   000351                     CRCACC          equ	849	;# 
  2317   000351                     CRCACCL         equ	849	;# 
  2318   000352                     CRCACCH         equ	850	;# 
  2319   000353                     CRCSHFT         equ	851	;# 
  2320   000353                     CRCSHIFTL       equ	851	;# 
  2321   000354                     CRCSHIFTH       equ	852	;# 
  2322   000355                     CRCXOR          equ	853	;# 
  2323   000355                     CRCXORL         equ	853	;# 
  2324   000356                     CRCXORH         equ	854	;# 
  2325   000357                     CRCCON0         equ	855	;# 
  2326   000358                     CRCCON1         equ	856	;# 
  2327   00035A                     SCANLADR        equ	858	;# 
  2328   00035A                     SCANLADRL       equ	858	;# 
  2329   00035B                     SCANLADRH       equ	859	;# 
  2330   00035C                     SCANLADRU       equ	860	;# 
  2331   00035D                     SCANHADR        equ	861	;# 
  2332   00035D                     SCANHADRL       equ	861	;# 
  2333   00035E                     SCANHADRH       equ	862	;# 
  2334   00035F                     SCANHADRU       equ	863	;# 
  2335   000360                     SCANCON0        equ	864	;# 
  2336   000361                     SCANTRIG        equ	865	;# 
  2337   000362                     IPR0            equ	866	;# 
  2338   000363                     IPR1            equ	867	;# 
  2339   000364                     IPR2            equ	868	;# 
  2340   000365                     IPR3            equ	869	;# 
  2341   000366                     IPR4            equ	870	;# 
  2342   000367                     IPR5            equ	871	;# 
  2343   000368                     IPR6            equ	872	;# 
  2344   000369                     IPR7            equ	873	;# 
  2345   00036A                     IPR8            equ	874	;# 
  2346   00036B                     IPR9            equ	875	;# 
  2347   00036C                     IPR10           equ	876	;# 
  2348   00036D                     IPR11           equ	877	;# 
  2349   00036E                     IPR12           equ	878	;# 
  2350   00036F                     IPR13           equ	879	;# 
  2351   000370                     IPR14           equ	880	;# 
  2352   000371                     IPR15           equ	881	;# 
  2353   000373                     STATUS_CSHAD    equ	883	;# 
  2354   000374                     WREG_CSHAD      equ	884	;# 
  2355   000375                     BSR_CSHAD       equ	885	;# 
  2356   000376                     SHADCON         equ	886	;# 
  2357   000377                     STATUS_SHAD     equ	887	;# 
  2358   000378                     WREG_SHAD       equ	888	;# 
  2359   000379                     BSR_SHAD        equ	889	;# 
  2360   00037A                     PCLATH_SHAD     equ	890	;# 
  2361   00037B                     PCLATU_SHAD     equ	891	;# 
  2362   00037C                     FSR0SH          equ	892	;# 
  2363   00037C                     FSR0L_SHAD      equ	892	;# 
  2364   00037D                     FSR0H_SHAD      equ	893	;# 
  2365   00037E                     FSR1SH          equ	894	;# 
  2366   00037E                     FSR1L_SHAD      equ	894	;# 
  2367   00037F                     FSR1H_SHAD      equ	895	;# 
  2368   000380                     FSR2SH          equ	896	;# 
  2369   000380                     FSR2L_SHAD      equ	896	;# 
  2370   000381                     FSR2H_SHAD      equ	897	;# 
  2371   000382                     PRODSH          equ	898	;# 
  2372   000382                     PRODL_SHAD      equ	898	;# 
  2373   000383                     PRODH_SHAD      equ	899	;# 
  2374   0003BC                     CWG1CLK         equ	956	;# 
  2375   0003BC                     CWG1CLKCON      equ	956	;# 
  2376   0003BD                     CWG1ISM         equ	957	;# 
  2377   0003BD                     CWG1DAT         equ	957	;# 
  2378   0003BE                     CWG1DBR         equ	958	;# 
  2379   0003BF                     CWG1DBF         equ	959	;# 
  2380   0003C0                     CWG1CON0        equ	960	;# 
  2381   0003C1                     CWG1CON1        equ	961	;# 
  2382   0003C2                     CWG1AS0         equ	962	;# 
  2383   0003C3                     CWG1AS1         equ	963	;# 
  2384   0003C4                     CWG1STR         equ	964	;# 
  2385   0003C5                     CWG2CLK         equ	965	;# 
  2386   0003C5                     CWG2CLKCON      equ	965	;# 
  2387   0003C6                     CWG2ISM         equ	966	;# 
  2388   0003C6                     CWG2DAT         equ	966	;# 
  2389   0003C7                     CWG2DBR         equ	967	;# 
  2390   0003C8                     CWG2DBF         equ	968	;# 
  2391   0003C9                     CWG2CON0        equ	969	;# 
  2392   0003CA                     CWG2CON1        equ	970	;# 
  2393   0003CB                     CWG2AS0         equ	971	;# 
  2394   0003CC                     CWG2AS1         equ	972	;# 
  2395   0003CD                     CWG2STR         equ	973	;# 
  2396   0003CE                     CWG3CLK         equ	974	;# 
  2397   0003CE                     CWG3CLKCON      equ	974	;# 
  2398   0003CF                     CWG3ISM         equ	975	;# 
  2399   0003CF                     CWG3DAT         equ	975	;# 
  2400   0003D0                     CWG3DBR         equ	976	;# 
  2401   0003D1                     CWG3DBF         equ	977	;# 
  2402   0003D2                     CWG3CON0        equ	978	;# 
  2403   0003D3                     CWG3CON1        equ	979	;# 
  2404   0003D4                     CWG3AS0         equ	980	;# 
  2405   0003D5                     CWG3AS1         equ	981	;# 
  2406   0003D6                     CWG3STR         equ	982	;# 
  2407   0003D7                     FVRCON          equ	983	;# 
  2408   0003D8                     ADCPCON         equ	984	;# 
  2409   0003D8                     ADCP            equ	984	;# 
  2410   0003D9                     ADLTH           equ	985	;# 
  2411   0003D9                     ADLTHL          equ	985	;# 
  2412   0003DA                     ADLTHH          equ	986	;# 
  2413   0003DB                     ADUTH           equ	987	;# 
  2414   0003DB                     ADUTHL          equ	987	;# 
  2415   0003DC                     ADUTHH          equ	988	;# 
  2416   0003DD                     ADERR           equ	989	;# 
  2417   0003DD                     ADERRL          equ	989	;# 
  2418   0003DE                     ADERRH          equ	990	;# 
  2419   0003DF                     ADSTPT          equ	991	;# 
  2420   0003DF                     ADSTPTL         equ	991	;# 
  2421   0003E0                     ADSTPTH         equ	992	;# 
  2422   0003E1                     ADFLTR          equ	993	;# 
  2423   0003E1                     ADFLTRL         equ	993	;# 
  2424   0003E2                     ADFLTRH         equ	994	;# 
  2425   0003E3                     ADACC           equ	995	;# 
  2426   0003E3                     ADACCL          equ	995	;# 
  2427   0003E4                     ADACCH          equ	996	;# 
  2428   0003E5                     ADACCU          equ	997	;# 
  2429   0003E6                     ADCNT           equ	998	;# 
  2430   0003E7                     ADRPT           equ	999	;# 
  2431   0003E8                     ADPREV          equ	1000	;# 
  2432   0003E8                     ADPREVL         equ	1000	;# 
  2433   0003E9                     ADPREVH         equ	1001	;# 
  2434   0003EA                     ADRES           equ	1002	;# 
  2435   0003EA                     ADRESL          equ	1002	;# 
  2436   0003EB                     ADRESH          equ	1003	;# 
  2437   0003EC                     ADPCH           equ	1004	;# 
  2438   0003EE                     ADACQ           equ	1006	;# 
  2439   0003EE                     ADACQL          equ	1006	;# 
  2440   0003EF                     ADACQH          equ	1007	;# 
  2441   0003F0                     ADCAP           equ	1008	;# 
  2442   0003F1                     ADPRE           equ	1009	;# 
  2443   0003F1                     ADPREL          equ	1009	;# 
  2444   0003F2                     ADPREH          equ	1010	;# 
  2445   0003F3                     ADCON0          equ	1011	;# 
  2446   0003F4                     ADCON1          equ	1012	;# 
  2447   0003F5                     ADCON2          equ	1013	;# 
  2448   0003F6                     ADCON3          equ	1014	;# 
  2449   0003F7                     ADSTAT          equ	1015	;# 
  2450   0003F8                     ADREF           equ	1016	;# 
  2451   0003F9                     ADACT           equ	1017	;# 
  2452   0003FA                     ADCLK           equ	1018	;# 
  2453   000400                     ANSELA          equ	1024	;# 
  2454   000401                     WPUA            equ	1025	;# 
  2455   000402                     ODCONA          equ	1026	;# 
  2456   000403                     SLRCONA         equ	1027	;# 
  2457   000404                     INLVLA          equ	1028	;# 
  2458   000405                     IOCAP           equ	1029	;# 
  2459   000406                     IOCAN           equ	1030	;# 
  2460   000407                     IOCAF           equ	1031	;# 
  2461   000408                     ANSELB          equ	1032	;# 
  2462   000409                     WPUB            equ	1033	;# 
  2463   00040A                     ODCONB          equ	1034	;# 
  2464   00040B                     SLRCONB         equ	1035	;# 
  2465   00040C                     INLVLB          equ	1036	;# 
  2466   00040D                     IOCBP           equ	1037	;# 
  2467   00040E                     IOCBN           equ	1038	;# 
  2468   00040F                     IOCBF           equ	1039	;# 
  2469   000410                     ANSELC          equ	1040	;# 
  2470   000411                     WPUC            equ	1041	;# 
  2471   000412                     ODCONC          equ	1042	;# 
  2472   000413                     SLRCONC         equ	1043	;# 
  2473   000414                     INLVLC          equ	1044	;# 
  2474   000415                     IOCCP           equ	1045	;# 
  2475   000416                     IOCCN           equ	1046	;# 
  2476   000417                     IOCCF           equ	1047	;# 
  2477   000418                     ANSELD          equ	1048	;# 
  2478   000419                     WPUD            equ	1049	;# 
  2479   00041A                     ODCOND          equ	1050	;# 
  2480   00041B                     SLRCOND         equ	1051	;# 
  2481   00041C                     INLVLD          equ	1052	;# 
  2482   000420                     ANSELE          equ	1056	;# 
  2483   000421                     WPUE            equ	1057	;# 
  2484   000422                     ODCONE          equ	1058	;# 
  2485   000423                     SLRCONE         equ	1059	;# 
  2486   000424                     INLVLE          equ	1060	;# 
  2487   000425                     IOCEP           equ	1061	;# 
  2488   000426                     IOCEN           equ	1062	;# 
  2489   000427                     IOCEF           equ	1063	;# 
  2490   000428                     ANSELF          equ	1064	;# 
  2491   000429                     WPUF            equ	1065	;# 
  2492   00042A                     ODCONF          equ	1066	;# 
  2493   00042B                     SLRCONF         equ	1067	;# 
  2494   00042C                     INLVLF          equ	1068	;# 
  2495   000440                     NCO1ACC         equ	1088	;# 
  2496   000440                     NCO1ACCL        equ	1088	;# 
  2497   000441                     NCO1ACCH        equ	1089	;# 
  2498   000442                     NCO1ACCU        equ	1090	;# 
  2499   000443                     NCO1INC         equ	1091	;# 
  2500   000443                     NCO1INCL        equ	1091	;# 
  2501   000444                     NCO1INCH        equ	1092	;# 
  2502   000445                     NCO1INCU        equ	1093	;# 
  2503   000446                     NCO1CON         equ	1094	;# 
  2504   000447                     NCO1CLK         equ	1095	;# 
  2505   000448                     NCO2ACC         equ	1096	;# 
  2506   000448                     NCO2ACCL        equ	1096	;# 
  2507   000449                     NCO2ACCH        equ	1097	;# 
  2508   00044A                     NCO2ACCU        equ	1098	;# 
  2509   00044B                     NCO2INC         equ	1099	;# 
  2510   00044B                     NCO2INCL        equ	1099	;# 
  2511   00044C                     NCO2INCH        equ	1100	;# 
  2512   00044D                     NCO2INCU        equ	1101	;# 
  2513   00044E                     NCO2CON         equ	1102	;# 
  2514   00044F                     NCO2CLK         equ	1103	;# 
  2515   000450                     NCO3ACC         equ	1104	;# 
  2516   000450                     NCO3ACCL        equ	1104	;# 
  2517   000451                     NCO3ACCH        equ	1105	;# 
  2518   000452                     NCO3ACCU        equ	1106	;# 
  2519   000453                     NCO3INC         equ	1107	;# 
  2520   000453                     NCO3INCL        equ	1107	;# 
  2521   000454                     NCO3INCH        equ	1108	;# 
  2522   000455                     NCO3INCU        equ	1109	;# 
  2523   000456                     NCO3CON         equ	1110	;# 
  2524   000457                     NCO3CLK         equ	1111	;# 
  2525   000459                     IVTLOCK         equ	1113	;# 
  2526   00045A                     IVTAD           equ	1114	;# 
  2527   00045A                     IVTADL          equ	1114	;# 
  2528   00045B                     IVTADH          equ	1115	;# 
  2529   00045C                     IVTADU          equ	1116	;# 
  2530   00045D                     IVTBASE         equ	1117	;# 
  2531   00045D                     IVTBASEL        equ	1117	;# 
  2532   00045E                     IVTBASEH        equ	1118	;# 
  2533   00045F                     IVTBASEU        equ	1119	;# 
  2534   000460                     PWM1ERS         equ	1120	;# 
  2535   000461                     PWM1CLK         equ	1121	;# 
  2536   000462                     PWM1LDS         equ	1122	;# 
  2537   000463                     PWM1PR          equ	1123	;# 
  2538   000463                     PWM1PRL         equ	1123	;# 
  2539   000464                     PWM1PRH         equ	1124	;# 
  2540   000465                     PWM1CPRE        equ	1125	;# 
  2541   000466                     PWM1PIPOS       equ	1126	;# 
  2542   000467                     PWM1GIR         equ	1127	;# 
  2543   000468                     PWM1GIE         equ	1128	;# 
  2544   000469                     PWM1CON         equ	1129	;# 
  2545   00046A                     PWM1S1CFG       equ	1130	;# 
  2546   00046B                     PWM1S1P1        equ	1131	;# 
  2547   00046B                     PWM1S1P1L       equ	1131	;# 
  2548   00046C                     PWM1S1P1H       equ	1132	;# 
  2549   00046D                     PWM1S1P2        equ	1133	;# 
  2550   00046D                     PWM1S1P2L       equ	1133	;# 
  2551   00046E                     PWM1S1P2H       equ	1134	;# 
  2552   00046F                     PWM2ERS         equ	1135	;# 
  2553   000470                     PWM2CLK         equ	1136	;# 
  2554   000471                     PWM2LDS         equ	1137	;# 
  2555   000472                     PWM2PR          equ	1138	;# 
  2556   000472                     PWM2PRL         equ	1138	;# 
  2557   000473                     PWM2PRH         equ	1139	;# 
  2558   000474                     PWM2CPRE        equ	1140	;# 
  2559   000475                     PWM2PIPOS       equ	1141	;# 
  2560   000476                     PWM2GIR         equ	1142	;# 
  2561   000477                     PWM2GIE         equ	1143	;# 
  2562   000478                     PWM2CON         equ	1144	;# 
  2563   000479                     PWM2S1CFG       equ	1145	;# 
  2564   00047A                     PWM2S1P1        equ	1146	;# 
  2565   00047A                     PWM2S1P1L       equ	1146	;# 
  2566   00047B                     PWM2S1P1H       equ	1147	;# 
  2567   00047C                     PWM2S1P2        equ	1148	;# 
  2568   00047C                     PWM2S1P2L       equ	1148	;# 
  2569   00047D                     PWM2S1P2H       equ	1149	;# 
  2570   00047E                     PWM3ERS         equ	1150	;# 
  2571   00047F                     PWM3CLK         equ	1151	;# 
  2572   000480                     PWM3LDS         equ	1152	;# 
  2573   000481                     PWM3PR          equ	1153	;# 
  2574   000481                     PWM3PRL         equ	1153	;# 
  2575   000482                     PWM3PRH         equ	1154	;# 
  2576   000483                     PWM3CPRE        equ	1155	;# 
  2577   000484                     PWM3PIPOS       equ	1156	;# 
  2578   000485                     PWM3GIR         equ	1157	;# 
  2579   000486                     PWM3GIE         equ	1158	;# 
  2580   000487                     PWM3CON         equ	1159	;# 
  2581   000488                     PWM3S1CFG       equ	1160	;# 
  2582   000489                     PWM3S1P1        equ	1161	;# 
  2583   000489                     PWM3S1P1L       equ	1161	;# 
  2584   00048A                     PWM3S1P1H       equ	1162	;# 
  2585   00048B                     PWM3S1P2        equ	1163	;# 
  2586   00048B                     PWM3S1P2L       equ	1163	;# 
  2587   00048C                     PWM3S1P2H       equ	1164	;# 
  2588   00049C                     PWMLOAD         equ	1180	;# 
  2589   00049D                     PWMEN           equ	1181	;# 
  2590   00049E                     PIE0            equ	1182	;# 
  2591   00049F                     PIE1            equ	1183	;# 
  2592   0004A0                     PIE2            equ	1184	;# 
  2593   0004A1                     PIE3            equ	1185	;# 
  2594   0004A2                     PIE4            equ	1186	;# 
  2595   0004A3                     PIE5            equ	1187	;# 
  2596   0004A4                     PIE6            equ	1188	;# 
  2597   0004A5                     PIE7            equ	1189	;# 
  2598   0004A6                     PIE8            equ	1190	;# 
  2599   0004A7                     PIE9            equ	1191	;# 
  2600   0004A8                     PIE10           equ	1192	;# 
  2601   0004A9                     PIE11           equ	1193	;# 
  2602   0004AA                     PIE12           equ	1194	;# 
  2603   0004AB                     PIE13           equ	1195	;# 
  2604   0004AC                     PIE14           equ	1196	;# 
  2605   0004AD                     PIE15           equ	1197	;# 
  2606   0004AE                     PIR0            equ	1198	;# 
  2607   0004AF                     PIR1            equ	1199	;# 
  2608   0004B0                     PIR2            equ	1200	;# 
  2609   0004B1                     PIR3            equ	1201	;# 
  2610   0004B2                     PIR4            equ	1202	;# 
  2611   0004B3                     PIR5            equ	1203	;# 
  2612   0004B4                     PIR6            equ	1204	;# 
  2613   0004B5                     PIR7            equ	1205	;# 
  2614   0004B6                     PIR8            equ	1206	;# 
  2615   0004B7                     PIR9            equ	1207	;# 
  2616   0004B8                     PIR10           equ	1208	;# 
  2617   0004B9                     PIR11           equ	1209	;# 
  2618   0004BA                     PIR12           equ	1210	;# 
  2619   0004BB                     PIR13           equ	1211	;# 
  2620   0004BC                     PIR14           equ	1212	;# 
  2621   0004BD                     PIR15           equ	1213	;# 
  2622   0004BE                     LATA            equ	1214	;# 
  2623   0004BF                     LATB            equ	1215	;# 
  2624   0004C0                     LATC            equ	1216	;# 
  2625   0004C1                     LATD            equ	1217	;# 
  2626   0004C2                     LATE            equ	1218	;# 
  2627   0004C3                     LATF            equ	1219	;# 
  2628   0004C6                     TRISA           equ	1222	;# 
  2629   0004C7                     TRISB           equ	1223	;# 
  2630   0004C8                     TRISC           equ	1224	;# 
  2631   0004C9                     TRISD           equ	1225	;# 
  2632   0004CA                     TRISE           equ	1226	;# 
  2633   0004CB                     TRISF           equ	1227	;# 
  2634   0004CE                     PORTA           equ	1230	;# 
  2635   0004CF                     PORTB           equ	1231	;# 
  2636   0004D0                     PORTC           equ	1232	;# 
  2637   0004D1                     PORTD           equ	1233	;# 
  2638   0004D2                     PORTE           equ	1234	;# 
  2639   0004D3                     PORTF           equ	1235	;# 
  2640   0004D6                     INTCON0         equ	1238	;# 
  2641   0004D7                     INTCON1         equ	1239	;# 
  2642   0004D8                     STATUS          equ	1240	;# 
  2643   0004D9                     FSR2            equ	1241	;# 
  2644   0004D9                     FSR2L           equ	1241	;# 
  2645   0004DA                     FSR2H           equ	1242	;# 
  2646   0004DB                     PLUSW2          equ	1243	;# 
  2647   0004DC                     PREINC2         equ	1244	;# 
  2648   0004DD                     POSTDEC2        equ	1245	;# 
  2649   0004DE                     POSTINC2        equ	1246	;# 
  2650   0004DF                     INDF2           equ	1247	;# 
  2651   0004E0                     BSR             equ	1248	;# 
  2652   0004E1                     FSR1            equ	1249	;# 
  2653   0004E1                     FSR1L           equ	1249	;# 
  2654   0004E2                     FSR1H           equ	1250	;# 
  2655   0004E3                     PLUSW1          equ	1251	;# 
  2656   0004E4                     PREINC1         equ	1252	;# 
  2657   0004E5                     POSTDEC1        equ	1253	;# 
  2658   0004E6                     POSTINC1        equ	1254	;# 
  2659   0004E7                     INDF1           equ	1255	;# 
  2660   0004E8                     WREG            equ	1256	;# 
  2661   0004E9                     FSR0            equ	1257	;# 
  2662   0004E9                     FSR0L           equ	1257	;# 
  2663   0004EA                     FSR0H           equ	1258	;# 
  2664   0004EB                     PLUSW0          equ	1259	;# 
  2665   0004EC                     PREINC0         equ	1260	;# 
  2666   0004ED                     POSTDEC0        equ	1261	;# 
  2667   0004EE                     POSTINC0        equ	1262	;# 
  2668   0004EF                     INDF0           equ	1263	;# 
  2669   0004F0                     PCON0           equ	1264	;# 
  2670   0004F1                     PCON1           equ	1265	;# 
  2671   0004F2                     CPUDOZE         equ	1266	;# 
  2672   0004F3                     PROD            equ	1267	;# 
  2673   0004F3                     PRODL           equ	1267	;# 
  2674   0004F4                     PRODH           equ	1268	;# 
  2675   0004F5                     TABLAT          equ	1269	;# 
  2676   0004F6                     TBLPTR          equ	1270	;# 
  2677   0004F6                     TBLPTRL         equ	1270	;# 
  2678   0004F7                     TBLPTRH         equ	1271	;# 
  2679   0004F8                     TBLPTRU         equ	1272	;# 
  2680   0004F9                     PCLAT           equ	1273	;# 
  2681   0004F9                     PCL             equ	1273	;# 
  2682   0004FA                     PCLATH          equ	1274	;# 
  2683   0004FB                     PCLATU          equ	1275	;# 
  2684   0004FC                     STKPTR          equ	1276	;# 
  2685   0004FD                     TOS             equ	1277	;# 
  2686   0004FD                     TOSL            equ	1277	;# 
  2687   0004FE                     TOSH            equ	1278	;# 
  2688   0004FF                     TOSU            equ	1279	;# 
  2689   000039                     CLKRCON         equ	57	;# 
  2690   00003A                     CLKRCLK         equ	58	;# 
  2691   000040                     NVMCON0         equ	64	;# 
  2692   000041                     NVMCON1         equ	65	;# 
  2693   000042                     NVMLOCK         equ	66	;# 
  2694   000043                     NVMADR          equ	67	;# 
  2695   000043                     NVMADRL         equ	67	;# 
  2696   000044                     NVMADRH         equ	68	;# 
  2697   000045                     NVMADRU         equ	69	;# 
  2698   000046                     NVMDAT          equ	70	;# 
  2699   000046                     NVMDATL         equ	70	;# 
  2700   000047                     NVMDATH         equ	71	;# 
  2701   000048                     VREGCON         equ	72	;# 
  2702   000049                     BORCON          equ	73	;# 
  2703   00004A                     HLVDCON0        equ	74	;# 
  2704   00004B                     HLVDCON1        equ	75	;# 
  2705   00004C                     ZCDCON          equ	76	;# 
  2706   000060                     PMD0            equ	96	;# 
  2707   000061                     PMD1            equ	97	;# 
  2708   000063                     PMD3            equ	99	;# 
  2709   000064                     PMD4            equ	100	;# 
  2710   000065                     PMD5            equ	101	;# 
  2711   000066                     PMD6            equ	102	;# 
  2712   000067                     PMD7            equ	103	;# 
  2713   000068                     PMD8            equ	104	;# 
  2714   00006A                     MD1CON0         equ	106	;# 
  2715   00006B                     MD1CON1         equ	107	;# 
  2716   00006C                     MD1SRC          equ	108	;# 
  2717   00006D                     MD1CARL         equ	109	;# 
  2718   00006E                     MD1CARH         equ	110	;# 
  2719   00006F                     CMOUT           equ	111	;# 
  2720   000070                     CM1CON0         equ	112	;# 
  2721   000071                     CM1CON1         equ	113	;# 
  2722   000072                     CM1NCH          equ	114	;# 
  2723   000073                     CM1PCH          equ	115	;# 
  2724   000074                     CM2CON0         equ	116	;# 
  2725   000075                     CM2CON1         equ	117	;# 
  2726   000076                     CM2NCH          equ	118	;# 
  2727   000077                     CM2PCH          equ	119	;# 
  2728   000078                     WDTCON0         equ	120	;# 
  2729   000079                     WDTCON1         equ	121	;# 
  2730   00007A                     WDTPS           equ	122	;# 
  2731   00007A                     WDTPSL          equ	122	;# 
  2732   00007B                     WDTPSH          equ	123	;# 
  2733   00007C                     WDTTMR          equ	124	;# 
  2734   00007D                     DAC1DAT         equ	125	;# 
  2735   00007D                     DAC1DATL        equ	125	;# 
  2736   00007F                     DAC1CON         equ	127	;# 
  2737   000080                     SPI1RXB         equ	128	;# 
  2738   000081                     SPI1TXB         equ	129	;# 
  2739   000082                     SPI1TCNT        equ	130	;# 
  2740   000082                     SPI1TCNTL       equ	130	;# 
  2741   000083                     SPI1TCNTH       equ	131	;# 
  2742   000084                     SPI1CON0        equ	132	;# 
  2743   000085                     SPI1CON1        equ	133	;# 
  2744   000086                     SPI1CON2        equ	134	;# 
  2745   000087                     SPI1STATUS      equ	135	;# 
  2746   000088                     SPI1TWIDTH      equ	136	;# 
  2747   000089                     SPI1BAUD        equ	137	;# 
  2748   00008A                     SPI1INTF        equ	138	;# 
  2749   00008B                     SPI1INTE        equ	139	;# 
  2750   00008C                     SPI1CLK         equ	140	;# 
  2751   00008D                     SPI2RXB         equ	141	;# 
  2752   00008E                     SPI2TXB         equ	142	;# 
  2753   00008F                     SPI2TCNT        equ	143	;# 
  2754   00008F                     SPI2TCNTL       equ	143	;# 
  2755   000090                     SPI2TCNTH       equ	144	;# 
  2756   000091                     SPI2CON0        equ	145	;# 
  2757   000092                     SPI2CON1        equ	146	;# 
  2758   000093                     SPI2CON2        equ	147	;# 
  2759   000094                     SPI2STATUS      equ	148	;# 
  2760   000095                     SPI2TWIDTH      equ	149	;# 
  2761   000096                     SPI2BAUD        equ	150	;# 
  2762   000097                     SPI2INTF        equ	151	;# 
  2763   000098                     SPI2INTE        equ	152	;# 
  2764   000099                     SPI2CLK         equ	153	;# 
  2765   0000AC                     ACTCON          equ	172	;# 
  2766   0000AD                     OSCCON1         equ	173	;# 
  2767   0000AE                     OSCCON2         equ	174	;# 
  2768   0000AF                     OSCCON3         equ	175	;# 
  2769   0000B0                     OSCTUNE         equ	176	;# 
  2770   0000B1                     OSCFRQ          equ	177	;# 
  2771   0000B1                     OSCFREQ         equ	177	;# 
  2772   0000B2                     OSCSTAT         equ	178	;# 
  2773   0000B2                     OSCSTAT1        equ	178	;# 
  2774   0000B3                     OSCEN           equ	179	;# 
  2775   0000B4                     PRLOCK          equ	180	;# 
  2776   0000B5                     SCANPR          equ	181	;# 
  2777   0000B6                     DMA1PR          equ	182	;# 
  2778   0000B7                     DMA2PR          equ	183	;# 
  2779   0000B8                     DMA3PR          equ	184	;# 
  2780   0000B9                     DMA4PR          equ	185	;# 
  2781   0000BA                     DMA5PR          equ	186	;# 
  2782   0000BB                     DMA6PR          equ	187	;# 
  2783   0000BE                     MAINPR          equ	190	;# 
  2784   0000BF                     ISRPR           equ	191	;# 
  2785   0000D4                     CLCDATA         equ	212	;# 
  2786   0000D5                     CLCSELECT       equ	213	;# 
  2787   0000D6                     CLCnCON         equ	214	;# 
  2788   0000D7                     CLCnPOL         equ	215	;# 
  2789   0000D8                     CLCnSEL0        equ	216	;# 
  2790   0000D9                     CLCnSEL1        equ	217	;# 
  2791   0000DA                     CLCnSEL2        equ	218	;# 
  2792   0000DB                     CLCnSEL3        equ	219	;# 
  2793   0000DC                     CLCnGLS0        equ	220	;# 
  2794   0000DD                     CLCnGLS1        equ	221	;# 
  2795   0000DE                     CLCnGLS2        equ	222	;# 
  2796   0000DF                     CLCnGLS3        equ	223	;# 
  2797   0000E8                     DMASELECT       equ	232	;# 
  2798   0000E9                     DMAnBUF         equ	233	;# 
  2799   0000EA                     DMAnDCNT        equ	234	;# 
  2800   0000EA                     DMAnDCNTL       equ	234	;# 
  2801   0000EB                     DMAnDCNTH       equ	235	;# 
  2802   0000EC                     DMAnDPTR        equ	236	;# 
  2803   0000EC                     DMAnDPTRL       equ	236	;# 
  2804   0000ED                     DMAnDPTRH       equ	237	;# 
  2805   0000EE                     DMAnDSZ         equ	238	;# 
  2806   0000EE                     DMAnDSZL        equ	238	;# 
  2807   0000EF                     DMAnDSZH        equ	239	;# 
  2808   0000F0                     DMAnDSA         equ	240	;# 
  2809   0000F0                     DMAnDSAL        equ	240	;# 
  2810   0000F1                     DMAnDSAH        equ	241	;# 
  2811   0000F2                     DMAnSCNT        equ	242	;# 
  2812   0000F2                     DMAnSCNTL       equ	242	;# 
  2813   0000F3                     DMAnSCNTH       equ	243	;# 
  2814   0000F4                     DMAnSPTR        equ	244	;# 
  2815   0000F4                     DMAnSPTRL       equ	244	;# 
  2816   0000F5                     DMAnSPTRH       equ	245	;# 
  2817   0000F6                     DMAnSPTRU       equ	246	;# 
  2818   0000F7                     DMAnSSZ         equ	247	;# 
  2819   0000F7                     DMAnSSZL        equ	247	;# 
  2820   0000F8                     DMAnSSZH        equ	248	;# 
  2821   0000F9                     DMAnSSA         equ	249	;# 
  2822   0000F9                     DMAnSSAL        equ	249	;# 
  2823   0000FA                     DMAnSSAH        equ	250	;# 
  2824   0000FB                     DMAnSSAU        equ	251	;# 
  2825   0000FC                     DMAnCON0        equ	252	;# 
  2826   0000FD                     DMAnCON1        equ	253	;# 
  2827   0000FE                     DMAnAIRQ        equ	254	;# 
  2828   0000FF                     DMAnSIRQ        equ	255	;# 
  2829   000200                     PPSLOCK         equ	512	;# 
  2830   000201                     RA0PPS          equ	513	;# 
  2831   000202                     RA1PPS          equ	514	;# 
  2832   000203                     RA2PPS          equ	515	;# 
  2833   000204                     RA3PPS          equ	516	;# 
  2834   000205                     RA4PPS          equ	517	;# 
  2835   000206                     RA5PPS          equ	518	;# 
  2836   000207                     RA6PPS          equ	519	;# 
  2837   000208                     RA7PPS          equ	520	;# 
  2838   000209                     RB0PPS          equ	521	;# 
  2839   00020A                     RB1PPS          equ	522	;# 
  2840   00020B                     RB2PPS          equ	523	;# 
  2841   00020C                     RB3PPS          equ	524	;# 
  2842   00020D                     RB4PPS          equ	525	;# 
  2843   00020E                     RB5PPS          equ	526	;# 
  2844   00020F                     RB6PPS          equ	527	;# 
  2845   000210                     RB7PPS          equ	528	;# 
  2846   000211                     RC0PPS          equ	529	;# 
  2847   000212                     RC1PPS          equ	530	;# 
  2848   000213                     RC2PPS          equ	531	;# 
  2849   000214                     RC3PPS          equ	532	;# 
  2850   000215                     RC4PPS          equ	533	;# 
  2851   000216                     RC5PPS          equ	534	;# 
  2852   000217                     RC6PPS          equ	535	;# 
  2853   000218                     RC7PPS          equ	536	;# 
  2854   000219                     RD0PPS          equ	537	;# 
  2855   00021A                     RD1PPS          equ	538	;# 
  2856   00021B                     RD2PPS          equ	539	;# 
  2857   00021C                     RD3PPS          equ	540	;# 
  2858   00021D                     RD4PPS          equ	541	;# 
  2859   00021E                     RD5PPS          equ	542	;# 
  2860   00021F                     RD6PPS          equ	543	;# 
  2861   000220                     RD7PPS          equ	544	;# 
  2862   000221                     RE0PPS          equ	545	;# 
  2863   000222                     RE1PPS          equ	546	;# 
  2864   000223                     RE2PPS          equ	547	;# 
  2865   000229                     RF0PPS          equ	553	;# 
  2866   00022A                     RF1PPS          equ	554	;# 
  2867   00022B                     RF2PPS          equ	555	;# 
  2868   00022C                     RF3PPS          equ	556	;# 
  2869   00022D                     RF4PPS          equ	557	;# 
  2870   00022E                     RF5PPS          equ	558	;# 
  2871   00022F                     RF6PPS          equ	559	;# 
  2872   000230                     RF7PPS          equ	560	;# 
  2873   00023E                     INT0PPS         equ	574	;# 
  2874   00023F                     INT1PPS         equ	575	;# 
  2875   000240                     INT2PPS         equ	576	;# 
  2876   000241                     T0CKIPPS        equ	577	;# 
  2877   000242                     T1CKIPPS        equ	578	;# 
  2878   000243                     T1GPPS          equ	579	;# 
  2879   000244                     T3CKIPPS        equ	580	;# 
  2880   000245                     T3GPPS          equ	581	;# 
  2881   000246                     T5CKIPPS        equ	582	;# 
  2882   000247                     T5GPPS          equ	583	;# 
  2883   000248                     T2INPPS         equ	584	;# 
  2884   000249                     T4INPPS         equ	585	;# 
  2885   00024A                     T6INPPS         equ	586	;# 
  2886   00024F                     CCP1PPS         equ	591	;# 
  2887   000250                     CCP2PPS         equ	592	;# 
  2888   000251                     CCP3PPS         equ	593	;# 
  2889   000253                     PWM1ERSPPS      equ	595	;# 
  2890   000254                     PWM2ERSPPS      equ	596	;# 
  2891   000255                     PWM3ERSPPS      equ	597	;# 
  2892   000257                     PWMIN0PPS       equ	599	;# 
  2893   000258                     PWMIN1PPS       equ	600	;# 
  2894   000259                     SMT1WINPPS      equ	601	;# 
  2895   00025A                     SMT1SIGPPS      equ	602	;# 
  2896   00025B                     CWG1PPS         equ	603	;# 
  2897   00025B                     CWG1INPPS       equ	603	;# 
  2898   00025C                     CWG2PPS         equ	604	;# 
  2899   00025C                     CWG2INPPS       equ	604	;# 
  2900   00025D                     CWG3PPS         equ	605	;# 
  2901   00025D                     CWG3INPPS       equ	605	;# 
  2902   00025E                     MD1CARLPPS      equ	606	;# 
  2903   00025E                     MDCARLPPS       equ	606	;# 
  2904   00025F                     MD1CARHPPS      equ	607	;# 
  2905   00025F                     MDCARHPPS       equ	607	;# 
  2906   000260                     MD1SRCPPS       equ	608	;# 
  2907   000260                     MDSRCPPS        equ	608	;# 
  2908   000261                     CLCIN0PPS       equ	609	;# 
  2909   000262                     CLCIN1PPS       equ	610	;# 
  2910   000263                     CLCIN2PPS       equ	611	;# 
  2911   000264                     CLCIN3PPS       equ	612	;# 
  2912   000265                     CLCIN4PPS       equ	613	;# 
  2913   000266                     CLCIN5PPS       equ	614	;# 
  2914   000267                     CLCIN6PPS       equ	615	;# 
  2915   000268                     CLCIN7PPS       equ	616	;# 
  2916   000269                     ADACTPPS        equ	617	;# 
  2917   00026A                     SPI1SCKPPS      equ	618	;# 
  2918   00026B                     SPI1SDIPPS      equ	619	;# 
  2919   00026C                     SPI1SSPPS       equ	620	;# 
  2920   00026D                     SPI2SCKPPS      equ	621	;# 
  2921   00026E                     SPI2SDIPPS      equ	622	;# 
  2922   00026F                     SPI2SSPPS       equ	623	;# 
  2923   000270                     I2C1SDAPPS      equ	624	;# 
  2924   000271                     I2C1SCLPPS      equ	625	;# 
  2925   000272                     U1RXPPS         equ	626	;# 
  2926   000273                     U1CTSPPS        equ	627	;# 
  2927   000274                     U2RXPPS         equ	628	;# 
  2928   000275                     U2CTSPPS        equ	629	;# 
  2929   000276                     U3RXPPS         equ	630	;# 
  2930   000277                     U3CTSPPS        equ	631	;# 
  2931   000278                     U4RXPPS         equ	632	;# 
  2932   000279                     U4CTSPPS        equ	633	;# 
  2933   00027A                     U5RXPPS         equ	634	;# 
  2934   00027B                     U5CTSPPS        equ	635	;# 
  2935   000286                     RC4I2C          equ	646	;# 
  2936   000287                     RC3I2C          equ	647	;# 
  2937   000288                     RB2I2C          equ	648	;# 
  2938   000289                     RB1I2C          equ	649	;# 
  2939   00028B                     I2C1RXB         equ	651	;# 
  2940   00028C                     I2C1TXB         equ	652	;# 
  2941   00028D                     I2C1CNT         equ	653	;# 
  2942   00028E                     I2C1ADB0        equ	654	;# 
  2943   00028F                     I2C1ADB1        equ	655	;# 
  2944   000290                     I2C1ADR0        equ	656	;# 
  2945   000291                     I2C1ADR1        equ	657	;# 
  2946   000292                     I2C1ADR2        equ	658	;# 
  2947   000293                     I2C1ADR3        equ	659	;# 
  2948   000294                     I2C1CON0        equ	660	;# 
  2949   000295                     I2C1CON1        equ	661	;# 
  2950   000296                     I2C1CON2        equ	662	;# 
  2951   000297                     I2C1ERR         equ	663	;# 
  2952   000298                     I2C1STAT0       equ	664	;# 
  2953   000299                     I2C1STAT1       equ	665	;# 
  2954   00029A                     I2C1PIR         equ	666	;# 
  2955   00029B                     I2C1PIE         equ	667	;# 
  2956   00029C                     I2C1CLK         equ	668	;# 
  2957   00029D                     I2C1BTO         equ	669	;# 
  2958   0002A1                     U1RXB           equ	673	;# 
  2959   0002A1                     U1RXBL          equ	673	;# 
  2960   0002A2                     U1RXCHK         equ	674	;# 
  2961   0002A3                     U1TXB           equ	675	;# 
  2962   0002A3                     U1TXBL          equ	675	;# 
  2963   0002A4                     U1TXCHK         equ	676	;# 
  2964   0002A5                     U1P1            equ	677	;# 
  2965   0002A5                     U1P1L           equ	677	;# 
  2966   0002A6                     U1P1H           equ	678	;# 
  2967   0002A7                     U1P2            equ	679	;# 
  2968   0002A7                     U1P2L           equ	679	;# 
  2969   0002A8                     U1P2H           equ	680	;# 
  2970   0002A9                     U1P3            equ	681	;# 
  2971   0002A9                     U1P3L           equ	681	;# 
  2972   0002AA                     U1P3H           equ	682	;# 
  2973   0002AB                     U1CON0          equ	683	;# 
  2974   0002AC                     U1CON1          equ	684	;# 
  2975   0002AD                     U1CON2          equ	685	;# 
  2976   0002AE                     U1BRG           equ	686	;# 
  2977   0002AE                     U1BRGL          equ	686	;# 
  2978   0002AF                     U1BRGH          equ	687	;# 
  2979   0002B0                     U1FIFO          equ	688	;# 
  2980   0002B1                     U1UIR           equ	689	;# 
  2981   0002B2                     U1ERRIR         equ	690	;# 
  2982   0002B3                     U1ERRIE         equ	691	;# 
  2983   0002B4                     U2RXB           equ	692	;# 
  2984   0002B4                     U2RXBL          equ	692	;# 
  2985   0002B6                     U2TXB           equ	694	;# 
  2986   0002B6                     U2TXBL          equ	694	;# 
  2987   0002B8                     U2P1            equ	696	;# 
  2988   0002B8                     U2P1L           equ	696	;# 
  2989   0002BA                     U2P2            equ	698	;# 
  2990   0002BA                     U2P2L           equ	698	;# 
  2991   0002BC                     U2P3            equ	700	;# 
  2992   0002BC                     U2P3L           equ	700	;# 
  2993   0002BE                     U2CON0          equ	702	;# 
  2994   0002BF                     U2CON1          equ	703	;# 
  2995   0002C0                     U2CON2          equ	704	;# 
  2996   0002C1                     U2BRG           equ	705	;# 
  2997   0002C1                     U2BRGL          equ	705	;# 
  2998   0002C2                     U2BRGH          equ	706	;# 
  2999   0002C3                     U2FIFO          equ	707	;# 
  3000   0002C4                     U2UIR           equ	708	;# 
  3001   0002C5                     U2ERRIR         equ	709	;# 
  3002   0002C6                     U2ERRIE         equ	710	;# 
  3003   0002C7                     U3RXB           equ	711	;# 
  3004   0002C7                     U3RXBL          equ	711	;# 
  3005   0002C9                     U3TXB           equ	713	;# 
  3006   0002C9                     U3TXBL          equ	713	;# 
  3007   0002CB                     U3P1            equ	715	;# 
  3008   0002CB                     U3P1L           equ	715	;# 
  3009   0002CD                     U3P2            equ	717	;# 
  3010   0002CD                     U3P2L           equ	717	;# 
  3011   0002CF                     U3P3            equ	719	;# 
  3012   0002CF                     U3P3L           equ	719	;# 
  3013   0002D1                     U3CON0          equ	721	;# 
  3014   0002D2                     U3CON1          equ	722	;# 
  3015   0002D3                     U3CON2          equ	723	;# 
  3016   0002D4                     U3BRG           equ	724	;# 
  3017   0002D4                     U3BRGL          equ	724	;# 
  3018   0002D5                     U3BRGH          equ	725	;# 
  3019   0002D6                     U3FIFO          equ	726	;# 
  3020   0002D7                     U3UIR           equ	727	;# 
  3021   0002D8                     U3ERRIR         equ	728	;# 
  3022   0002D9                     U3ERRIE         equ	729	;# 
  3023   0002DA                     U4RXB           equ	730	;# 
  3024   0002DA                     U4RXBL          equ	730	;# 
  3025   0002DC                     U4TXB           equ	732	;# 
  3026   0002DC                     U4TXBL          equ	732	;# 
  3027   0002DE                     U4P1            equ	734	;# 
  3028   0002DE                     U4P1L           equ	734	;# 
  3029   0002E0                     U4P2            equ	736	;# 
  3030   0002E0                     U4P2L           equ	736	;# 
  3031   0002E2                     U4P3            equ	738	;# 
  3032   0002E2                     U4P3L           equ	738	;# 
  3033   0002E4                     U4CON0          equ	740	;# 
  3034   0002E5                     U4CON1          equ	741	;# 
  3035   0002E6                     U4CON2          equ	742	;# 
  3036   0002E7                     U4BRG           equ	743	;# 
  3037   0002E7                     U4BRGL          equ	743	;# 
  3038   0002E8                     U4BRGH          equ	744	;# 
  3039   0002E9                     U4FIFO          equ	745	;# 
  3040   0002EA                     U4UIR           equ	746	;# 
  3041   0002EB                     U4ERRIR         equ	747	;# 
  3042   0002EC                     U4ERRIE         equ	748	;# 
  3043   0002ED                     U5RXB           equ	749	;# 
  3044   0002ED                     U5RXBL          equ	749	;# 
  3045   0002EF                     U5TXB           equ	751	;# 
  3046   0002EF                     U5TXBL          equ	751	;# 
  3047   0002F1                     U5P1            equ	753	;# 
  3048   0002F1                     U5P1L           equ	753	;# 
  3049   0002F3                     U5P2            equ	755	;# 
  3050   0002F3                     U5P2L           equ	755	;# 
  3051   0002F5                     U5P3            equ	757	;# 
  3052   0002F5                     U5P3L           equ	757	;# 
  3053   0002F7                     U5CON0          equ	759	;# 
  3054   0002F8                     U5CON1          equ	760	;# 
  3055   0002F9                     U5CON2          equ	761	;# 
  3056   0002FA                     U5BRG           equ	762	;# 
  3057   0002FA                     U5BRGL          equ	762	;# 
  3058   0002FB                     U5BRGH          equ	763	;# 
  3059   0002FC                     U5FIFO          equ	764	;# 
  3060   0002FD                     U5UIR           equ	765	;# 
  3061   0002FE                     U5ERRIR         equ	766	;# 
  3062   0002FF                     U5ERRIE         equ	767	;# 
  3063   000300                     SMT1TMR         equ	768	;# 
  3064   000300                     SMT1TMRL        equ	768	;# 
  3065   000301                     SMT1TMRH        equ	769	;# 
  3066   000302                     SMT1TMRU        equ	770	;# 
  3067   000303                     SMT1CPR         equ	771	;# 
  3068   000303                     SMT1CPRL        equ	771	;# 
  3069   000304                     SMT1CPRH        equ	772	;# 
  3070   000305                     SMT1CPRU        equ	773	;# 
  3071   000306                     SMT1CPW         equ	774	;# 
  3072   000306                     SMT1CPWL        equ	774	;# 
  3073   000307                     SMT1CPWH        equ	775	;# 
  3074   000308                     SMT1CPWU        equ	776	;# 
  3075   000309                     SMT1PR          equ	777	;# 
  3076   000309                     SMT1PRL         equ	777	;# 
  3077   00030A                     SMT1PRH         equ	778	;# 
  3078   00030B                     SMT1PRU         equ	779	;# 
  3079   00030C                     SMT1CON0        equ	780	;# 
  3080   00030D                     SMT1CON1        equ	781	;# 
  3081   00030E                     SMT1STAT        equ	782	;# 
  3082   00030F                     SMT1CLK         equ	783	;# 
  3083   000310                     SMT1SIG         equ	784	;# 
  3084   000311                     SMT1WIN         equ	785	;# 
  3085   000318                     TMR0L           equ	792	;# 
  3086   000318                     TMR0            equ	792	;# 
  3087   000319                     TMR0H           equ	793	;# 
  3088   000319                     PR0             equ	793	;# 
  3089   00031A                     T0CON0          equ	794	;# 
  3090   00031B                     T0CON1          equ	795	;# 
  3091   00031C                     TMR1            equ	796	;# 
  3092   00031C                     TMR1L           equ	796	;# 
  3093   00031D                     TMR1H           equ	797	;# 
  3094   00031E                     T1CON           equ	798	;# 
  3095   00031E                     TMR1CON         equ	798	;# 
  3096   00031F                     T1GCON          equ	799	;# 
  3097   00031F                     TMR1GCON        equ	799	;# 
  3098   000320                     T1GATE          equ	800	;# 
  3099   000320                     TMR1GATE        equ	800	;# 
  3100   000321                     T1CLK           equ	801	;# 
  3101   000321                     TMR1CLK         equ	801	;# 
  3102   000321                     PR1             equ	801	;# 
  3103   000322                     T2TMR           equ	802	;# 
  3104   000322                     TMR2            equ	802	;# 
  3105   000323                     T2PR            equ	803	;# 
  3106   000323                     PR2             equ	803	;# 
  3107   000324                     T2CON           equ	804	;# 
  3108   000325                     T2HLT           equ	805	;# 
  3109   000326                     T2CLKCON        equ	806	;# 
  3110   000326                     T2CLK           equ	806	;# 
  3111   000327                     T2RST           equ	807	;# 
  3112   000328                     TMR3            equ	808	;# 
  3113   000328                     TMR3L           equ	808	;# 
  3114   000329                     TMR3H           equ	809	;# 
  3115   00032A                     T3CON           equ	810	;# 
  3116   00032A                     TMR3CON         equ	810	;# 
  3117   00032B                     T3GCON          equ	811	;# 
  3118   00032B                     TMR3GCON        equ	811	;# 
  3119   00032C                     T3GATE          equ	812	;# 
  3120   00032C                     TMR3GATE        equ	812	;# 
  3121   00032D                     T3CLK           equ	813	;# 
  3122   00032D                     TMR3CLK         equ	813	;# 
  3123   00032D                     PR3             equ	813	;# 
  3124   00032E                     T4TMR           equ	814	;# 
  3125   00032E                     TMR4            equ	814	;# 
  3126   00032F                     T4PR            equ	815	;# 
  3127   00032F                     PR4             equ	815	;# 
  3128   000330                     T4CON           equ	816	;# 
  3129   000331                     T4HLT           equ	817	;# 
  3130   000332                     T4CLKCON        equ	818	;# 
  3131   000332                     T4CLK           equ	818	;# 
  3132   000333                     T4RST           equ	819	;# 
  3133   000334                     TMR5            equ	820	;# 
  3134   000334                     TMR5L           equ	820	;# 
  3135   000335                     TMR5H           equ	821	;# 
  3136   000336                     T5CON           equ	822	;# 
  3137   000336                     TMR5CON         equ	822	;# 
  3138   000337                     T5GCON          equ	823	;# 
  3139   000337                     TMR5GCON        equ	823	;# 
  3140   000338                     T5GATE          equ	824	;# 
  3141   000338                     TMR5GATE        equ	824	;# 
  3142   000339                     T5CLK           equ	825	;# 
  3143   000339                     TMR5CLK         equ	825	;# 
  3144   000339                     PR5             equ	825	;# 
  3145   00033A                     T6TMR           equ	826	;# 
  3146   00033A                     TMR6            equ	826	;# 
  3147   00033B                     T6PR            equ	827	;# 
  3148   00033B                     PR6             equ	827	;# 
  3149   00033C                     T6CON           equ	828	;# 
  3150   00033D                     T6HLT           equ	829	;# 
  3151   00033E                     T6CLKCON        equ	830	;# 
  3152   00033E                     T6CLK           equ	830	;# 
  3153   00033F                     T6RST           equ	831	;# 
  3154   000340                     CCPR1           equ	832	;# 
  3155   000340                     CCPR1L          equ	832	;# 
  3156   000341                     CCPR1H          equ	833	;# 
  3157   000342                     CCP1CON         equ	834	;# 
  3158   000343                     CCP1CAP         equ	835	;# 
  3159   000344                     CCPR2           equ	836	;# 
  3160   000344                     CCPR2L          equ	836	;# 
  3161   000345                     CCPR2H          equ	837	;# 
  3162   000346                     CCP2CON         equ	838	;# 
  3163   000347                     CCP2CAP         equ	839	;# 
  3164   000348                     CCPR3           equ	840	;# 
  3165   000348                     CCPR3L          equ	840	;# 
  3166   000349                     CCPR3H          equ	841	;# 
  3167   00034A                     CCP3CON         equ	842	;# 
  3168   00034B                     CCP3CAP         equ	843	;# 
  3169   00034C                     CCPTMRS0        equ	844	;# 
  3170   00034F                     CRCDATA         equ	847	;# 
  3171   00034F                     CRCDATL         equ	847	;# 
  3172   000350                     CRCDATH         equ	848	;# 
  3173   000351                     CRCACC          equ	849	;# 
  3174   000351                     CRCACCL         equ	849	;# 
  3175   000352                     CRCACCH         equ	850	;# 
  3176   000353                     CRCSHFT         equ	851	;# 
  3177   000353                     CRCSHIFTL       equ	851	;# 
  3178   000354                     CRCSHIFTH       equ	852	;# 
  3179   000355                     CRCXOR          equ	853	;# 
  3180   000355                     CRCXORL         equ	853	;# 
  3181   000356                     CRCXORH         equ	854	;# 
  3182   000357                     CRCCON0         equ	855	;# 
  3183   000358                     CRCCON1         equ	856	;# 
  3184   00035A                     SCANLADR        equ	858	;# 
  3185   00035A                     SCANLADRL       equ	858	;# 
  3186   00035B                     SCANLADRH       equ	859	;# 
  3187   00035C                     SCANLADRU       equ	860	;# 
  3188   00035D                     SCANHADR        equ	861	;# 
  3189   00035D                     SCANHADRL       equ	861	;# 
  3190   00035E                     SCANHADRH       equ	862	;# 
  3191   00035F                     SCANHADRU       equ	863	;# 
  3192   000360                     SCANCON0        equ	864	;# 
  3193   000361                     SCANTRIG        equ	865	;# 
  3194   000362                     IPR0            equ	866	;# 
  3195   000363                     IPR1            equ	867	;# 
  3196   000364                     IPR2            equ	868	;# 
  3197   000365                     IPR3            equ	869	;# 
  3198   000366                     IPR4            equ	870	;# 
  3199   000367                     IPR5            equ	871	;# 
  3200   000368                     IPR6            equ	872	;# 
  3201   000369                     IPR7            equ	873	;# 
  3202   00036A                     IPR8            equ	874	;# 
  3203   00036B                     IPR9            equ	875	;# 
  3204   00036C                     IPR10           equ	876	;# 
  3205   00036D                     IPR11           equ	877	;# 
  3206   00036E                     IPR12           equ	878	;# 
  3207   00036F                     IPR13           equ	879	;# 
  3208   000370                     IPR14           equ	880	;# 
  3209   000371                     IPR15           equ	881	;# 
  3210   000373                     STATUS_CSHAD    equ	883	;# 
  3211   000374                     WREG_CSHAD      equ	884	;# 
  3212   000375                     BSR_CSHAD       equ	885	;# 
  3213   000376                     SHADCON         equ	886	;# 
  3214   000377                     STATUS_SHAD     equ	887	;# 
  3215   000378                     WREG_SHAD       equ	888	;# 
  3216   000379                     BSR_SHAD        equ	889	;# 
  3217   00037A                     PCLATH_SHAD     equ	890	;# 
  3218   00037B                     PCLATU_SHAD     equ	891	;# 
  3219   00037C                     FSR0SH          equ	892	;# 
  3220   00037C                     FSR0L_SHAD      equ	892	;# 
  3221   00037D                     FSR0H_SHAD      equ	893	;# 
  3222   00037E                     FSR1SH          equ	894	;# 
  3223   00037E                     FSR1L_SHAD      equ	894	;# 
  3224   00037F                     FSR1H_SHAD      equ	895	;# 
  3225   000380                     FSR2SH          equ	896	;# 
  3226   000380                     FSR2L_SHAD      equ	896	;# 
  3227   000381                     FSR2H_SHAD      equ	897	;# 
  3228   000382                     PRODSH          equ	898	;# 
  3229   000382                     PRODL_SHAD      equ	898	;# 
  3230   000383                     PRODH_SHAD      equ	899	;# 
  3231   0003BC                     CWG1CLK         equ	956	;# 
  3232   0003BC                     CWG1CLKCON      equ	956	;# 
  3233   0003BD                     CWG1ISM         equ	957	;# 
  3234   0003BD                     CWG1DAT         equ	957	;# 
  3235   0003BE                     CWG1DBR         equ	958	;# 
  3236   0003BF                     CWG1DBF         equ	959	;# 
  3237   0003C0                     CWG1CON0        equ	960	;# 
  3238   0003C1                     CWG1CON1        equ	961	;# 
  3239   0003C2                     CWG1AS0         equ	962	;# 
  3240   0003C3                     CWG1AS1         equ	963	;# 
  3241   0003C4                     CWG1STR         equ	964	;# 
  3242   0003C5                     CWG2CLK         equ	965	;# 
  3243   0003C5                     CWG2CLKCON      equ	965	;# 
  3244   0003C6                     CWG2ISM         equ	966	;# 
  3245   0003C6                     CWG2DAT         equ	966	;# 
  3246   0003C7                     CWG2DBR         equ	967	;# 
  3247   0003C8                     CWG2DBF         equ	968	;# 
  3248   0003C9                     CWG2CON0        equ	969	;# 
  3249   0003CA                     CWG2CON1        equ	970	;# 
  3250   0003CB                     CWG2AS0         equ	971	;# 
  3251   0003CC                     CWG2AS1         equ	972	;# 
  3252   0003CD                     CWG2STR         equ	973	;# 
  3253   0003CE                     CWG3CLK         equ	974	;# 
  3254   0003CE                     CWG3CLKCON      equ	974	;# 
  3255   0003CF                     CWG3ISM         equ	975	;# 
  3256   0003CF                     CWG3DAT         equ	975	;# 
  3257   0003D0                     CWG3DBR         equ	976	;# 
  3258   0003D1                     CWG3DBF         equ	977	;# 
  3259   0003D2                     CWG3CON0        equ	978	;# 
  3260   0003D3                     CWG3CON1        equ	979	;# 
  3261   0003D4                     CWG3AS0         equ	980	;# 
  3262   0003D5                     CWG3AS1         equ	981	;# 
  3263   0003D6                     CWG3STR         equ	982	;# 
  3264   0003D7                     FVRCON          equ	983	;# 
  3265   0003D8                     ADCPCON         equ	984	;# 
  3266   0003D8                     ADCP            equ	984	;# 
  3267   0003D9                     ADLTH           equ	985	;# 
  3268   0003D9                     ADLTHL          equ	985	;# 
  3269   0003DA                     ADLTHH          equ	986	;# 
  3270   0003DB                     ADUTH           equ	987	;# 
  3271   0003DB                     ADUTHL          equ	987	;# 
  3272   0003DC                     ADUTHH          equ	988	;# 
  3273   0003DD                     ADERR           equ	989	;# 
  3274   0003DD                     ADERRL          equ	989	;# 
  3275   0003DE                     ADERRH          equ	990	;# 
  3276   0003DF                     ADSTPT          equ	991	;# 
  3277   0003DF                     ADSTPTL         equ	991	;# 
  3278   0003E0                     ADSTPTH         equ	992	;# 
  3279   0003E1                     ADFLTR          equ	993	;# 
  3280   0003E1                     ADFLTRL         equ	993	;# 
  3281   0003E2                     ADFLTRH         equ	994	;# 
  3282   0003E3                     ADACC           equ	995	;# 
  3283   0003E3                     ADACCL          equ	995	;# 
  3284   0003E4                     ADACCH          equ	996	;# 
  3285   0003E5                     ADACCU          equ	997	;# 
  3286   0003E6                     ADCNT           equ	998	;# 
  3287   0003E7                     ADRPT           equ	999	;# 
  3288   0003E8                     ADPREV          equ	1000	;# 
  3289   0003E8                     ADPREVL         equ	1000	;# 
  3290   0003E9                     ADPREVH         equ	1001	;# 
  3291   0003EA                     ADRES           equ	1002	;# 
  3292   0003EA                     ADRESL          equ	1002	;# 
  3293   0003EB                     ADRESH          equ	1003	;# 
  3294   0003EC                     ADPCH           equ	1004	;# 
  3295   0003EE                     ADACQ           equ	1006	;# 
  3296   0003EE                     ADACQL          equ	1006	;# 
  3297   0003EF                     ADACQH          equ	1007	;# 
  3298   0003F0                     ADCAP           equ	1008	;# 
  3299   0003F1                     ADPRE           equ	1009	;# 
  3300   0003F1                     ADPREL          equ	1009	;# 
  3301   0003F2                     ADPREH          equ	1010	;# 
  3302   0003F3                     ADCON0          equ	1011	;# 
  3303   0003F4                     ADCON1          equ	1012	;# 
  3304   0003F5                     ADCON2          equ	1013	;# 
  3305   0003F6                     ADCON3          equ	1014	;# 
  3306   0003F7                     ADSTAT          equ	1015	;# 
  3307   0003F8                     ADREF           equ	1016	;# 
  3308   0003F9                     ADACT           equ	1017	;# 
  3309   0003FA                     ADCLK           equ	1018	;# 
  3310   000400                     ANSELA          equ	1024	;# 
  3311   000401                     WPUA            equ	1025	;# 
  3312   000402                     ODCONA          equ	1026	;# 
  3313   000403                     SLRCONA         equ	1027	;# 
  3314   000404                     INLVLA          equ	1028	;# 
  3315   000405                     IOCAP           equ	1029	;# 
  3316   000406                     IOCAN           equ	1030	;# 
  3317   000407                     IOCAF           equ	1031	;# 
  3318   000408                     ANSELB          equ	1032	;# 
  3319   000409                     WPUB            equ	1033	;# 
  3320   00040A                     ODCONB          equ	1034	;# 
  3321   00040B                     SLRCONB         equ	1035	;# 
  3322   00040C                     INLVLB          equ	1036	;# 
  3323   00040D                     IOCBP           equ	1037	;# 
  3324   00040E                     IOCBN           equ	1038	;# 
  3325   00040F                     IOCBF           equ	1039	;# 
  3326   000410                     ANSELC          equ	1040	;# 
  3327   000411                     WPUC            equ	1041	;# 
  3328   000412                     ODCONC          equ	1042	;# 
  3329   000413                     SLRCONC         equ	1043	;# 
  3330   000414                     INLVLC          equ	1044	;# 
  3331   000415                     IOCCP           equ	1045	;# 
  3332   000416                     IOCCN           equ	1046	;# 
  3333   000417                     IOCCF           equ	1047	;# 
  3334   000418                     ANSELD          equ	1048	;# 
  3335   000419                     WPUD            equ	1049	;# 
  3336   00041A                     ODCOND          equ	1050	;# 
  3337   00041B                     SLRCOND         equ	1051	;# 
  3338   00041C                     INLVLD          equ	1052	;# 
  3339   000420                     ANSELE          equ	1056	;# 
  3340   000421                     WPUE            equ	1057	;# 
  3341   000422                     ODCONE          equ	1058	;# 
  3342   000423                     SLRCONE         equ	1059	;# 
  3343   000424                     INLVLE          equ	1060	;# 
  3344   000425                     IOCEP           equ	1061	;# 
  3345   000426                     IOCEN           equ	1062	;# 
  3346   000427                     IOCEF           equ	1063	;# 
  3347   000428                     ANSELF          equ	1064	;# 
  3348   000429                     WPUF            equ	1065	;# 
  3349   00042A                     ODCONF          equ	1066	;# 
  3350   00042B                     SLRCONF         equ	1067	;# 
  3351   00042C                     INLVLF          equ	1068	;# 
  3352   000440                     NCO1ACC         equ	1088	;# 
  3353   000440                     NCO1ACCL        equ	1088	;# 
  3354   000441                     NCO1ACCH        equ	1089	;# 
  3355   000442                     NCO1ACCU        equ	1090	;# 
  3356   000443                     NCO1INC         equ	1091	;# 
  3357   000443                     NCO1INCL        equ	1091	;# 
  3358   000444                     NCO1INCH        equ	1092	;# 
  3359   000445                     NCO1INCU        equ	1093	;# 
  3360   000446                     NCO1CON         equ	1094	;# 
  3361   000447                     NCO1CLK         equ	1095	;# 
  3362   000448                     NCO2ACC         equ	1096	;# 
  3363   000448                     NCO2ACCL        equ	1096	;# 
  3364   000449                     NCO2ACCH        equ	1097	;# 
  3365   00044A                     NCO2ACCU        equ	1098	;# 
  3366   00044B                     NCO2INC         equ	1099	;# 
  3367   00044B                     NCO2INCL        equ	1099	;# 
  3368   00044C                     NCO2INCH        equ	1100	;# 
  3369   00044D                     NCO2INCU        equ	1101	;# 
  3370   00044E                     NCO2CON         equ	1102	;# 
  3371   00044F                     NCO2CLK         equ	1103	;# 
  3372   000450                     NCO3ACC         equ	1104	;# 
  3373   000450                     NCO3ACCL        equ	1104	;# 
  3374   000451                     NCO3ACCH        equ	1105	;# 
  3375   000452                     NCO3ACCU        equ	1106	;# 
  3376   000453                     NCO3INC         equ	1107	;# 
  3377   000453                     NCO3INCL        equ	1107	;# 
  3378   000454                     NCO3INCH        equ	1108	;# 
  3379   000455                     NCO3INCU        equ	1109	;# 
  3380   000456                     NCO3CON         equ	1110	;# 
  3381   000457                     NCO3CLK         equ	1111	;# 
  3382   000459                     IVTLOCK         equ	1113	;# 
  3383   00045A                     IVTAD           equ	1114	;# 
  3384   00045A                     IVTADL          equ	1114	;# 
  3385   00045B                     IVTADH          equ	1115	;# 
  3386   00045C                     IVTADU          equ	1116	;# 
  3387   00045D                     IVTBASE         equ	1117	;# 
  3388   00045D                     IVTBASEL        equ	1117	;# 
  3389   00045E                     IVTBASEH        equ	1118	;# 
  3390   00045F                     IVTBASEU        equ	1119	;# 
  3391   000460                     PWM1ERS         equ	1120	;# 
  3392   000461                     PWM1CLK         equ	1121	;# 
  3393   000462                     PWM1LDS         equ	1122	;# 
  3394   000463                     PWM1PR          equ	1123	;# 
  3395   000463                     PWM1PRL         equ	1123	;# 
  3396   000464                     PWM1PRH         equ	1124	;# 
  3397   000465                     PWM1CPRE        equ	1125	;# 
  3398   000466                     PWM1PIPOS       equ	1126	;# 
  3399   000467                     PWM1GIR         equ	1127	;# 
  3400   000468                     PWM1GIE         equ	1128	;# 
  3401   000469                     PWM1CON         equ	1129	;# 
  3402   00046A                     PWM1S1CFG       equ	1130	;# 
  3403   00046B                     PWM1S1P1        equ	1131	;# 
  3404   00046B                     PWM1S1P1L       equ	1131	;# 
  3405   00046C                     PWM1S1P1H       equ	1132	;# 
  3406   00046D                     PWM1S1P2        equ	1133	;# 
  3407   00046D                     PWM1S1P2L       equ	1133	;# 
  3408   00046E                     PWM1S1P2H       equ	1134	;# 
  3409   00046F                     PWM2ERS         equ	1135	;# 
  3410   000470                     PWM2CLK         equ	1136	;# 
  3411   000471                     PWM2LDS         equ	1137	;# 
  3412   000472                     PWM2PR          equ	1138	;# 
  3413   000472                     PWM2PRL         equ	1138	;# 
  3414   000473                     PWM2PRH         equ	1139	;# 
  3415   000474                     PWM2CPRE        equ	1140	;# 
  3416   000475                     PWM2PIPOS       equ	1141	;# 
  3417   000476                     PWM2GIR         equ	1142	;# 
  3418   000477                     PWM2GIE         equ	1143	;# 
  3419   000478                     PWM2CON         equ	1144	;# 
  3420   000479                     PWM2S1CFG       equ	1145	;# 
  3421   00047A                     PWM2S1P1        equ	1146	;# 
  3422   00047A                     PWM2S1P1L       equ	1146	;# 
  3423   00047B                     PWM2S1P1H       equ	1147	;# 
  3424   00047C                     PWM2S1P2        equ	1148	;# 
  3425   00047C                     PWM2S1P2L       equ	1148	;# 
  3426   00047D                     PWM2S1P2H       equ	1149	;# 
  3427   00047E                     PWM3ERS         equ	1150	;# 
  3428   00047F                     PWM3CLK         equ	1151	;# 
  3429   000480                     PWM3LDS         equ	1152	;# 
  3430   000481                     PWM3PR          equ	1153	;# 
  3431   000481                     PWM3PRL         equ	1153	;# 
  3432   000482                     PWM3PRH         equ	1154	;# 
  3433   000483                     PWM3CPRE        equ	1155	;# 
  3434   000484                     PWM3PIPOS       equ	1156	;# 
  3435   000485                     PWM3GIR         equ	1157	;# 
  3436   000486                     PWM3GIE         equ	1158	;# 
  3437   000487                     PWM3CON         equ	1159	;# 
  3438   000488                     PWM3S1CFG       equ	1160	;# 
  3439   000489                     PWM3S1P1        equ	1161	;# 
  3440   000489                     PWM3S1P1L       equ	1161	;# 
  3441   00048A                     PWM3S1P1H       equ	1162	;# 
  3442   00048B                     PWM3S1P2        equ	1163	;# 
  3443   00048B                     PWM3S1P2L       equ	1163	;# 
  3444   00048C                     PWM3S1P2H       equ	1164	;# 
  3445   00049C                     PWMLOAD         equ	1180	;# 
  3446   00049D                     PWMEN           equ	1181	;# 
  3447   00049E                     PIE0            equ	1182	;# 
  3448   00049F                     PIE1            equ	1183	;# 
  3449   0004A0                     PIE2            equ	1184	;# 
  3450   0004A1                     PIE3            equ	1185	;# 
  3451   0004A2                     PIE4            equ	1186	;# 
  3452   0004A3                     PIE5            equ	1187	;# 
  3453   0004A4                     PIE6            equ	1188	;# 
  3454   0004A5                     PIE7            equ	1189	;# 
  3455   0004A6                     PIE8            equ	1190	;# 
  3456   0004A7                     PIE9            equ	1191	;# 
  3457   0004A8                     PIE10           equ	1192	;# 
  3458   0004A9                     PIE11           equ	1193	;# 
  3459   0004AA                     PIE12           equ	1194	;# 
  3460   0004AB                     PIE13           equ	1195	;# 
  3461   0004AC                     PIE14           equ	1196	;# 
  3462   0004AD                     PIE15           equ	1197	;# 
  3463   0004AE                     PIR0            equ	1198	;# 
  3464   0004AF                     PIR1            equ	1199	;# 
  3465   0004B0                     PIR2            equ	1200	;# 
  3466   0004B1                     PIR3            equ	1201	;# 
  3467   0004B2                     PIR4            equ	1202	;# 
  3468   0004B3                     PIR5            equ	1203	;# 
  3469   0004B4                     PIR6            equ	1204	;# 
  3470   0004B5                     PIR7            equ	1205	;# 
  3471   0004B6                     PIR8            equ	1206	;# 
  3472   0004B7                     PIR9            equ	1207	;# 
  3473   0004B8                     PIR10           equ	1208	;# 
  3474   0004B9                     PIR11           equ	1209	;# 
  3475   0004BA                     PIR12           equ	1210	;# 
  3476   0004BB                     PIR13           equ	1211	;# 
  3477   0004BC                     PIR14           equ	1212	;# 
  3478   0004BD                     PIR15           equ	1213	;# 
  3479   0004BE                     LATA            equ	1214	;# 
  3480   0004BF                     LATB            equ	1215	;# 
  3481   0004C0                     LATC            equ	1216	;# 
  3482   0004C1                     LATD            equ	1217	;# 
  3483   0004C2                     LATE            equ	1218	;# 
  3484   0004C3                     LATF            equ	1219	;# 
  3485   0004C6                     TRISA           equ	1222	;# 
  3486   0004C7                     TRISB           equ	1223	;# 
  3487   0004C8                     TRISC           equ	1224	;# 
  3488   0004C9                     TRISD           equ	1225	;# 
  3489   0004CA                     TRISE           equ	1226	;# 
  3490   0004CB                     TRISF           equ	1227	;# 
  3491   0004CE                     PORTA           equ	1230	;# 
  3492   0004CF                     PORTB           equ	1231	;# 
  3493   0004D0                     PORTC           equ	1232	;# 
  3494   0004D1                     PORTD           equ	1233	;# 
  3495   0004D2                     PORTE           equ	1234	;# 
  3496   0004D3                     PORTF           equ	1235	;# 
  3497   0004D6                     INTCON0         equ	1238	;# 
  3498   0004D7                     INTCON1         equ	1239	;# 
  3499   0004D8                     STATUS          equ	1240	;# 
  3500   0004D9                     FSR2            equ	1241	;# 
  3501   0004D9                     FSR2L           equ	1241	;# 
  3502   0004DA                     FSR2H           equ	1242	;# 
  3503   0004DB                     PLUSW2          equ	1243	;# 
  3504   0004DC                     PREINC2         equ	1244	;# 
  3505   0004DD                     POSTDEC2        equ	1245	;# 
  3506   0004DE                     POSTINC2        equ	1246	;# 
  3507   0004DF                     INDF2           equ	1247	;# 
  3508   0004E0                     BSR             equ	1248	;# 
  3509   0004E1                     FSR1            equ	1249	;# 
  3510   0004E1                     FSR1L           equ	1249	;# 
  3511   0004E2                     FSR1H           equ	1250	;# 
  3512   0004E3                     PLUSW1          equ	1251	;# 
  3513   0004E4                     PREINC1         equ	1252	;# 
  3514   0004E5                     POSTDEC1        equ	1253	;# 
  3515   0004E6                     POSTINC1        equ	1254	;# 
  3516   0004E7                     INDF1           equ	1255	;# 
  3517   0004E8                     WREG            equ	1256	;# 
  3518   0004E9                     FSR0            equ	1257	;# 
  3519   0004E9                     FSR0L           equ	1257	;# 
  3520   0004EA                     FSR0H           equ	1258	;# 
  3521   0004EB                     PLUSW0          equ	1259	;# 
  3522   0004EC                     PREINC0         equ	1260	;# 
  3523   0004ED                     POSTDEC0        equ	1261	;# 
  3524   0004EE                     POSTINC0        equ	1262	;# 
  3525   0004EF                     INDF0           equ	1263	;# 
  3526   0004F0                     PCON0           equ	1264	;# 
  3527   0004F1                     PCON1           equ	1265	;# 
  3528   0004F2                     CPUDOZE         equ	1266	;# 
  3529   0004F3                     PROD            equ	1267	;# 
  3530   0004F3                     PRODL           equ	1267	;# 
  3531   0004F4                     PRODH           equ	1268	;# 
  3532   0004F5                     TABLAT          equ	1269	;# 
  3533   0004F6                     TBLPTR          equ	1270	;# 
  3534   0004F6                     TBLPTRL         equ	1270	;# 
  3535   0004F7                     TBLPTRH         equ	1271	;# 
  3536   0004F8                     TBLPTRU         equ	1272	;# 
  3537   0004F9                     PCLAT           equ	1273	;# 
  3538   0004F9                     PCL             equ	1273	;# 
  3539   0004FA                     PCLATH          equ	1274	;# 
  3540   0004FB                     PCLATU          equ	1275	;# 
  3541   0004FC                     STKPTR          equ	1276	;# 
  3542   0004FD                     TOS             equ	1277	;# 
  3543   0004FD                     TOSL            equ	1277	;# 
  3544   0004FE                     TOSH            equ	1278	;# 
  3545   0004FF                     TOSU            equ	1279	;# 
  3546                           
  3547                           	psect	idataCOMRAM
  3548   0034A2                     __pidataCOMRAM:
  3549                           	callstack 0
  3550                           
  3551                           ;initializer for _I2C_LCD_ADDR
  3552   0034A2  27                 	db	39
  3553   000087                     _SPI1STATUSbits set	135
  3554   000081                     _SPI1TXB        set	129
  3555   0000D6                     _CLCnCON        set	214
  3556   0000D7                     _CLCnPOL        set	215
  3557   0000DF                     _CLCnGLS3       set	223
  3558   0000DE                     _CLCnGLS2       set	222
  3559   0000DD                     _CLCnGLS1       set	221
  3560   0000DC                     _CLCnGLS0       set	220
  3561   0000DA                     _CLCnSEL2       set	218
  3562   0000D9                     _CLCnSEL1       set	217
  3563   0000D8                     _CLCnSEL0       set	216
  3564   0000D5                     _CLCSELECT      set	213
  3565   00008C                     _SPI1CLK        set	140
  3566   000086                     _SPI1CON2       set	134
  3567   000085                     _SPI1CON1       set	133
  3568   000084                     _SPI1CON0       set	132
  3569   0000B3                     _OSCEN          set	179
  3570   0000B1                     _OSCFRQ         set	177
  3571   0000AD                     _OSCCON1        set	173
  3572   00023F                     _INT1PPS        set	575
  3573   00023E                     _INT0PPS        set	574
  3574   00022B                     _RF2PPS         set	555
  3575   00029A                     _I2C1PIRbits    set	666
  3576   000295                     _I2C1CON1bits   set	661
  3577   000299                     _I2C1STAT1bits  set	665
  3578   00028C                     _I2C1TXB        set	652
  3579   00028F                     _I2C1ADB1       set	655
  3580   00028D                     _I2C1CNT        set	653
  3581   000296                     _I2C1CON2bits   set	662
  3582   00029C                     _I2C1CLKbits    set	668
  3583   000294                     _I2C1CON0bits   set	660
  3584   000286                     _RC4I2Cbits     set	646
  3585   000287                     _RC3I2Cbits     set	647
  3586   000215                     _RC4PPS         set	533
  3587   000214                     _RC3PPS         set	532
  3588   000340                     _CCPR1L         set	832
  3589   000341                     _CCPR1H         set	833
  3590   000342                     _CCP1CON        set	834
  3591   000323                     _T2PR           set	803
  3592   000326                     _T2CLKCON       set	806
  3593   000324                     _T2CON          set	804
  3594   000409                     _WPUBbits       set	1033
  3595   000428                     _ANSELFbits     set	1064
  3596   000408                     _ANSELBbits     set	1032
  3597   000412                     _ODCONCbits     set	1042
  3598   000410                     _ANSELCbits     set	1040
  3599   0004D6                     _INTCON0bits    set	1238
  3600   0004B4                     _PIR6bits       set	1204
  3601   0004A4                     _PIE6bits       set	1188
  3602   0004AF                     _PIR1bits       set	1199
  3603   00049F                     _PIE1bits       set	1183
  3604   0004CB                     _TRISFbits      set	1227
  3605   0004CF                     _PORTBbits      set	1231
  3606   0004BF                     _LATBbits       set	1215
  3607   0004C7                     _TRISBbits      set	1223
  3608   0004C8                     _TRISCbits      set	1224
  3609                           
  3610                           	psect	smallconst
  3611   002600                     __psmallconst:
  3612                           	callstack 0
  3613   002600  00                 	db	0
  3614   002601                     STR_1:
  3615                           
  3616                           ; BSR set to: 0
  3617   002601  48                 	db	72	;'H'
  3618   002602  65                 	db	101	;'e'
  3619   002603  6C                 	db	108	;'l'
  3620   002604  6C                 	db	108	;'l'
  3621   002605  6F                 	db	111	;'o'
  3622   002606  20                 	db	32
  3623   002607  55                 	db	85	;'U'
  3624   002608  50                 	db	80	;'P'
  3625   002609  43                 	db	67	;'C'
  3626   00260A  69                 	db	105	;'i'
  3627   00260B  6E                 	db	110	;'n'
  3628   00260C  6F                 	db	111	;'o'
  3629   00260D  21                 	db	33
  3630   00260E  00                 	db	0
  3631   00260F                     STR_2:
  3632                           
  3633                           ; BSR set to: 0
  3634   00260F  45                 	db	69	;'E'
  3635   002610  6C                 	db	108	;'l'
  3636   002611  65                 	db	101	;'e'
  3637   002612  63                 	db	99	;'c'
  3638   002613  20                 	db	32
  3639   002614  4D                 	db	77	;'M'
  3640   002615  65                 	db	101	;'e'
  3641   002616  63                 	db	99	;'c'
  3642   002617  61                 	db	97	;'a'
  3643   002618  20                 	db	32
  3644   002619  42                 	db	66	;'B'
  3645   00261A  69                 	db	105	;'i'
  3646   00261B  6F                 	db	111	;'o'
  3647   00261C  00                 	db	0
  3648   00261D                     STR_4:
  3649                           
  3650                           ; BSR set to: 0
  3651   00261D  48                 	db	72	;'H'
  3652   00261E  75                 	db	117	;'u'
  3653   00261F  6D                 	db	109	;'m'
  3654   002620  69                 	db	105	;'i'
  3655   002621  64                 	db	100	;'d'
  3656   002622  20                 	db	32
  3657   002623  44                 	db	68	;'D'
  3658   002624  48                 	db	72	;'H'
  3659   002625  54                 	db	84	;'T'
  3660   002626  3A                 	db	58	;':'
  3661   002627  00                 	db	0
  3662   002628                     STR_3:
  3663                           
  3664                           ; BSR set to: 0
  3665   002628  54                 	db	84	;'T'
  3666   002629  65                 	db	101	;'e'
  3667   00262A  6D                 	db	109	;'m'
  3668   00262B  70                 	db	112	;'p'
  3669   00262C  20                 	db	32
  3670   00262D  44                 	db	68	;'D'
  3671   00262E  48                 	db	72	;'H'
  3672   00262F  54                 	db	84	;'T'
  3673   002630  3A                 	db	58	;':'
  3674   002631  00                 	db	0
  3675   002632                     STR_5:
  3676                           
  3677                           ; BSR set to: 0
  3678   002632  25                 	db	37
  3679   002633  52                 	db	82	;'R'
  3680   002634  48                 	db	72	;'H'
  3681   002635  00                 	db	0
  3682   002636  00                 	db	0	; dummy byte at the end
  3683   002600                     __smallconst    set	__psmallconst
  3684   002600                     __mediumconst   set	__psmallconst
  3685   000003                     __activetblptr  equ	3
  3686                           
  3687                           ; #config settings
  3688                           
  3689                           	psect	cinit
  3690   0033A0                     __pcinit:
  3691                           	callstack 0
  3692   0033A0                     start_initialization:
  3693                           	callstack 0
  3694   0033A0                     __initialization:
  3695                           	callstack 0
  3696                           
  3697                           ; Initialize objects allocated to COMRAM (1 bytes)
  3698                           ; load TBLPTR registers with __pidataCOMRAM
  3699   0033A0  0EA2               	movlw	low __pidataCOMRAM
  3700   0033A2  6EF6               	movwf	tblptrl,c
  3701   0033A4  0E34               	movlw	high __pidataCOMRAM
  3702   0033A6  6EF7               	movwf	tblptrh,c
  3703   0033A8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3704   0033AA  6EF8               	movwf	tblptru,c
  3705   0033AC  0009               	tblrd		*+	;fetch initializer
  3706   0033AE  C4F5 F526          	movff	tablat,__pdataCOMRAM
  3707                           
  3708                           ; Clear objects allocated to COMRAM (6 bytes)
  3709   0033B2  6A25               	clrf	(__pbssCOMRAM+5)& (0+255),c
  3710   0033B4  6A24               	clrf	(__pbssCOMRAM+4)& (0+255),c
  3711   0033B6  6A23               	clrf	(__pbssCOMRAM+3)& (0+255),c
  3712   0033B8  6A22               	clrf	(__pbssCOMRAM+2)& (0+255),c
  3713   0033BA  6A21               	clrf	(__pbssCOMRAM+1)& (0+255),c
  3714   0033BC  6A20               	clrf	__pbssCOMRAM& (0+255),c
  3715                           
  3716                           ;
  3717                           ; Setup IVTBASE
  3718                           ;
  3719   00045D                     IVTBASEL        equ	1117
  3720   00045E                     IVTBASEH        equ	1118
  3721   00045F                     IVTBASEU        equ	1119
  3722   0033BE  0104               	movlb	4
  3723   0033C0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3724   0033C2  6F5D               	movwf	93,b
  3725   0033C4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3726   0033C6  6F5E               	movwf	94,b
  3727   0033C8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3728   0033CA  6F5F               	movwf	95,b
  3729   0033CC                     end_of_initialization:
  3730                           	callstack 0
  3731   0033CC                     __end_of__initialization:
  3732                           	callstack 0
  3733   0033CC  0100               	movlb	0
  3734   0033CE  EF6B  F016         	goto	_main	;jump to C main() function
  3735                           
  3736                           	psect	bssCOMRAM
  3737   000520                     __pbssCOMRAM:
  3738                           	callstack 0
  3739   000520                     _dht_humid:
  3740                           	callstack 0
  3741   000520                     	ds	2
  3742   000522                     _dht_temp:
  3743                           	callstack 0
  3744   000522                     	ds	2
  3745   000524                     _estado:
  3746                           	callstack 0
  3747   000524                     	ds	1
  3748   000525                     _cuenta:
  3749                           	callstack 0
  3750   000525                     	ds	1
  3751                           
  3752                           	psect	dataCOMRAM
  3753   000526                     __pdataCOMRAM:
  3754                           	callstack 0
  3755   000526                     _I2C_LCD_ADDR:
  3756                           	callstack 0
  3757   000526                     	ds	1
  3758                           
  3759                           	psect	cstackCOMRAM
  3760   000501                     __pcstackCOMRAM:
  3761                           	callstack 0
  3762   000501                     
  3763                           ; 1 bytes @ 0x0
  3764   000501                     	ds	3
  3765   000504                     WS2812_DATA_SEND@red:
  3766                           	callstack 0
  3767   000504                     
  3768                           ; 1 bytes @ 0x3
  3769   000504                     	ds	1
  3770   000505                     WS2812_DATA_SEND@blue:
  3771                           	callstack 0
  3772                           
  3773                           ; 1 bytes @ 0x4
  3774   000505                     	ds	1
  3775   000506                     WS2812_DATA_SEND@green:
  3776                           	callstack 0
  3777   000506                     
  3778                           ; 1 bytes @ 0x5
  3779   000506                     	ds	1
  3780   000507                     ?_strlen:
  3781                           	callstack 0
  3782   000507                     ?___lwmod:
  3783                           	callstack 0
  3784   000507                     I2C1_WRITESINGLEBYTE@dato:
  3785                           	callstack 0
  3786   000507                     DHT_Check@modelo:
  3787                           	callstack 0
  3788   000507                     DHT_Read@modelo:
  3789                           	callstack 0
  3790   000507                     strlen@s:
  3791                           	callstack 0
  3792   000507                     ___lwmod@dividend:
  3793                           	callstack 0
  3794   000507                     ??_DHT_Start:
  3795   000507                     
  3796                           ; 1 bytes @ 0x6
  3797   000507                     	ds	1
  3798   000508                     I2C1_WRITESINGLEBYTE@direccion:
  3799                           	callstack 0
  3800   000508                     DHT_Start@modelo:
  3801                           	callstack 0
  3802   000508                     DHT_Check@temp_x:
  3803                           	callstack 0
  3804   000508                     DHT_Read@x:
  3805                           	callstack 0
  3806   000508                     
  3807                           ; 1 bytes @ 0x7
  3808   000508                     	ds	1
  3809   000509                     DHT_Read@temp_x:
  3810                           	callstack 0
  3811   000509                     strlen@a:
  3812                           	callstack 0
  3813   000509                     ___lwmod@divisor:
  3814                           	callstack 0
  3815   000509                     ??_I2C_ENVIA_LCD_CMD:
  3816   000509                     ??_I2C_ENVIA_LCD_DATA:
  3817   000509                     
  3818                           ; 1 bytes @ 0x8
  3819   000509                     	ds	1
  3820   00050A                     I2C_ENVIA_LCD_DATA@data:
  3821                           	callstack 0
  3822   00050A                     I2C_ENVIA_LCD_CMD@command:
  3823                           	callstack 0
  3824   00050A                     DHT_Read@data:
  3825                           	callstack 0
  3826                           
  3827                           ; 1 bytes @ 0x9
  3828   00050A                     	ds	1
  3829   00050B                     ?_DHT_GetTemp:
  3830                           	callstack 0
  3831   00050B                     ?_DHT_GetHumid:
  3832                           	callstack 0
  3833   00050B                     I2C_ENVIA_LCD_DATA@highnibble:
  3834                           	callstack 0
  3835   00050B                     I2C_ENVIA_LCD_CMD@highnibble:
  3836                           	callstack 0
  3837   00050B                     ___lwmod@counter:
  3838                           	callstack 0
  3839   00050B                     
  3840                           ; 1 bytes @ 0xA
  3841   00050B                     	ds	1
  3842   00050C                     ?___lwdiv:
  3843                           	callstack 0
  3844   00050C                     I2C_ENVIA_LCD_DATA@lownibble:
  3845                           	callstack 0
  3846   00050C                     I2C_ENVIA_LCD_CMD@lownibble:
  3847                           	callstack 0
  3848   00050C                     ___lwdiv@dividend:
  3849                           	callstack 0
  3850                           
  3851                           ; 2 bytes @ 0xB
  3852   00050C                     	ds	1
  3853   00050D                     I2C_POS_CURSOR@columna:
  3854                           	callstack 0
  3855   00050D                     I2C_CURSOR_ONOFF@estado:
  3856                           	callstack 0
  3857   00050D                     I2C_ESCRIBE_MENSAJE2@cadena:
  3858                           	callstack 0
  3859   00050D                     ??_DHT_GetTemp:
  3860   00050D                     ??_DHT_GetHumid:
  3861                           
  3862                           ; 1 bytes @ 0xC
  3863   00050D                     	ds	1
  3864   00050E                     ___lwdiv@divisor:
  3865                           	callstack 0
  3866   00050E                     ??_I2C_POS_CURSOR:
  3867   00050E                     ??_I2C_ESCRIBE_MENSAJE2:
  3868   00050E                     ??_I2C_LCD_INIT:
  3869                           
  3870                           ; 1 bytes @ 0xD
  3871   00050E                     	ds	1
  3872   00050F                     I2C_POS_CURSOR@fila:
  3873                           	callstack 0
  3874   00050F                     I2C_ESCRIBE_MENSAJE2@tam:
  3875                           	callstack 0
  3876   00050F                     DHT_GetTemp@Temp_Dec:
  3877                           	callstack 0
  3878   00050F                     DHT_GetHumid@RH_Dec:
  3879                           	callstack 0
  3880                           
  3881                           ; 1 bytes @ 0xE
  3882   00050F                     	ds	1
  3883   000510                     I2C_ESCRIBE_MENSAJE2@i:
  3884                           	callstack 0
  3885   000510                     DHT_GetTemp@valor_dht:
  3886                           	callstack 0
  3887   000510                     DHT_GetHumid@valor_dht:
  3888                           	callstack 0
  3889   000510                     ___lwdiv@quotient:
  3890                           	callstack 0
  3891   000510                     
  3892                           ; 1 bytes @ 0xF
  3893   000510                     	ds	2
  3894   000512                     DHT_GetTemp@Temp_Ent:
  3895                           	callstack 0
  3896   000512                     DHT_GetHumid@RH_Ent:
  3897                           	callstack 0
  3898   000512                     ___lwdiv@counter:
  3899                           	callstack 0
  3900                           
  3901                           ; 1 bytes @ 0x11
  3902   000512                     	ds	1
  3903   000513                     DHT_GetTemp@modelo:
  3904                           	callstack 0
  3905   000513                     DHT_GetHumid@modelo:
  3906                           	callstack 0
  3907   000513                     I2C_LCD_ESCRIBE_VAR_INT@numero:
  3908                           	callstack 0
  3909                           
  3910                           ; 2 bytes @ 0x12
  3911   000513                     	ds	2
  3912   000515                     I2C_LCD_ESCRIBE_VAR_INT@n_digitos:
  3913                           	callstack 0
  3914                           
  3915                           ; 1 bytes @ 0x14
  3916   000515                     	ds	1
  3917   000516                     I2C_LCD_ESCRIBE_VAR_INT@punto:
  3918                           	callstack 0
  3919                           
  3920                           ; 1 bytes @ 0x15
  3921   000516                     	ds	1
  3922   000517                     I2C_LCD_ESCRIBE_VAR_INT@d_millar:
  3923                           	callstack 0
  3924   000517                     
  3925                           ; 1 bytes @ 0x16
  3926   000517                     	ds	1
  3927   000518                     I2C_LCD_ESCRIBE_VAR_INT@millar:
  3928                           	callstack 0
  3929                           
  3930                           ; 1 bytes @ 0x17
  3931   000518                     	ds	1
  3932   000519                     I2C_LCD_ESCRIBE_VAR_INT@centena:
  3933                           	callstack 0
  3934                           
  3935                           ; 1 bytes @ 0x18
  3936   000519                     	ds	1
  3937   00051A                     I2C_LCD_ESCRIBE_VAR_INT@decena:
  3938                           	callstack 0
  3939                           
  3940                           ; 1 bytes @ 0x19
  3941   00051A                     	ds	1
  3942   00051B                     I2C_LCD_ESCRIBE_VAR_INT@unidad:
  3943                           	callstack 0
  3944                           
  3945                           ; 1 bytes @ 0x1A
  3946   00051B                     	ds	1
  3947   00051C                     ??_main:
  3948                           
  3949                           ; 1 bytes @ 0x1B
  3950   00051C                     	ds	2
  3951   00051E                     _main$1776:
  3952                           	callstack 0
  3953                           
  3954                           ; 2 bytes @ 0x1D
  3955   00051E                     	ds	2
  3956                           
  3957 ;;
  3958 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3959 ;;
  3960 ;; *************** function _main *****************
  3961 ;; Defined at:
  3962 ;;		line 58 in file "maincode03.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;		None
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;		None
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      void 
  3969 ;; Registers used:
  3970 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3977 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3978 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3979 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3980 ;;Total ram usage:        4 bytes
  3981 ;; Hardware stack levels required when called: 7
  3982 ;; This function calls:
  3983 ;;		_DHT_GetHumid
  3984 ;;		_DHT_GetTemp
  3985 ;;		_I2C_BORRAR_LCD
  3986 ;;		_I2C_ENVIA_LCD_DATA
  3987 ;;		_I2C_ESCRIBE_MENSAJE2
  3988 ;;		_I2C_LCD_CHAR_GRADO
  3989 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  3990 ;;		_I2C_LCD_INIT
  3991 ;;		_I2C_POS_CURSOR
  3992 ;;		_WS2812_INIT
  3993 ;;		___lwdiv
  3994 ;;		_configuro
  3995 ;; This function is called by:
  3996 ;;		Startup code after reset
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text0
  4001   002CD6                     __ptext0:
  4002                           	callstack 0
  4003   002CD6                     _main:
  4004                           	callstack 120
  4005                           
  4006                           ;maincode03.c: 59:     configuro();
  4007                           
  4008                           ;incstack = 0
  4009   002CD6  EC71  F019         	call	_configuro	;wreg free
  4010                           
  4011                           ;maincode03.c: 60:     WS2812_INIT();
  4012   002CDA  ECF8  F018         	call	_WS2812_INIT	;wreg free
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;maincode03.c: 61:     I2C_LCD_INIT();
  4016   002CDE  EC1C  F013         	call	_I2C_LCD_INIT	;wreg free
  4017                           
  4018                           ;maincode03.c: 62:     I2C_POS_CURSOR(1,1);
  4019   002CE2  0E01               	movlw	1
  4020   002CE4  6E0D               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  4021   002CE6  0E01               	movlw	1
  4022   002CE8  ECA0  F018         	call	_I2C_POS_CURSOR
  4023                           
  4024                           ;maincode03.c: 63:     I2C_ESCRIBE_MENSAJE2("Hello UPCino!");
  4025   002CEC  0E01               	movlw	low STR_1
  4026   002CEE  6E0D               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  4027   002CF0  ECB5  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  4028                           
  4029                           ;maincode03.c: 64:     I2C_POS_CURSOR(2,1);
  4030   002CF4  0E01               	movlw	1
  4031   002CF6  6E0D               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  4032   002CF8  0E02               	movlw	2
  4033   002CFA  ECA0  F018         	call	_I2C_POS_CURSOR
  4034                           
  4035                           ;maincode03.c: 65:     I2C_ESCRIBE_MENSAJE2("Elec Meca Bio");
  4036   002CFE  0E0F               	movlw	low STR_2
  4037   002D00  6E0D               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  4038   002D02  ECB5  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  4039                           
  4040                           ;maincode03.c: 66:     _delay((unsigned long)((3000)*(32000000UL/4000.0)));
  4041   002D06  0E7A               	movlw	122
  4042   002D08  6E1D               	movwf	(??_main+1)^(0+1280),c
  4043   002D0A  0EC1               	movlw	193
  4044   002D0C  6E1C               	movwf	??_main^(0+1280),c
  4045   002D0E  0E82               	movlw	130
  4046   002D10                     u1177:
  4047   002D10  2EE8               	decfsz	wreg,f,c
  4048   002D12  D7FE               	bra	u1177
  4049   002D14  2E1C               	decfsz	??_main^(0+1280),f,c
  4050   002D16  D7FC               	bra	u1177
  4051   002D18  2E1D               	decfsz	(??_main+1)^(0+1280),f,c
  4052   002D1A  D7FA               	bra	u1177
  4053                           
  4054                           ;maincode03.c: 67:     I2C_BORRAR_LCD();
  4055   002D1C  EC49  F01A         	call	_I2C_BORRAR_LCD	;wreg free
  4056   002D20                     l2517:
  4057                           
  4058                           ;maincode03.c: 69:         I2C_POS_CURSOR(1,0);
  4059   002D20  0E00               	movlw	0
  4060   002D22  6E0D               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  4061   002D24  0E01               	movlw	1
  4062   002D26  ECA0  F018         	call	_I2C_POS_CURSOR
  4063                           
  4064                           ;maincode03.c: 70:         I2C_ESCRIBE_MENSAJE2("Temp DHT:");
  4065   002D2A  0E28               	movlw	low STR_3
  4066   002D2C  6E0D               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  4067   002D2E  ECB5  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  4068                           
  4069                           ;maincode03.c: 71:         dht_temp = DHT_GetTemp(1);
  4070   002D32  0E01               	movlw	1
  4071   002D34  EC3C  F018         	call	_DHT_GetTemp
  4072   002D38  C50B  F522         	movff	?_DHT_GetTemp,_dht_temp	;volatile
  4073   002D3C  C50C  F523         	movff	?_DHT_GetTemp+1,_dht_temp+1	;volatile
  4074                           
  4075                           ;maincode03.c: 72:         I2C_LCD_ESCRIBE_VAR_INT(dht_temp/10, 2, 0);
  4076   002D40  C522  F50C         	movff	_dht_temp,___lwdiv@dividend	;volatile
  4077   002D44  C523  F50D         	movff	_dht_temp+1,___lwdiv@dividend+1	;volatile
  4078   002D48  0E00               	movlw	0
  4079   002D4A  6E0F               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4080   002D4C  0E0A               	movlw	10
  4081   002D4E  6E0E               	movwf	___lwdiv@divisor^(0+1280),c
  4082   002D50  EC23  F019         	call	___lwdiv	;wreg free
  4083   002D54  C50C  F51E         	movff	?___lwdiv,_main$1776
  4084   002D58  C50D  F51F         	movff	?___lwdiv+1,_main$1776+1
  4085                           
  4086                           ;maincode03.c: 72:         I2C_LCD_ESCRIBE_VAR_INT(dht_temp/10, 2, 0);
  4087   002D5C  C51E  F513         	movff	_main$1776,I2C_LCD_ESCRIBE_VAR_INT@numero
  4088   002D60  C51F  F514         	movff	_main$1776+1,I2C_LCD_ESCRIBE_VAR_INT@numero+1
  4089   002D64  0E02               	movlw	2
  4090   002D66  6E15               	movwf	I2C_LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
  4091   002D68  0E00               	movlw	0
  4092   002D6A  6E16               	movwf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),c
  4093   002D6C  ECC6  F014         	call	_I2C_LCD_ESCRIBE_VAR_INT	;wreg free
  4094                           
  4095                           ;maincode03.c: 73:         I2C_LCD_CHAR_GRADO();
  4096   002D70  EC4D  F01A         	call	_I2C_LCD_CHAR_GRADO	;wreg free
  4097                           
  4098                           ;maincode03.c: 74:         I2C_ENVIA_LCD_DATA('C');
  4099   002D74  0E43               	movlw	67
  4100   002D76  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  4101                           
  4102                           ;maincode03.c: 75:         _delay((unsigned long)((1000)*(32000000UL/4000.0)));
  4103   002D7A  0E29               	movlw	41
  4104   002D7C  6E1D               	movwf	(??_main+1)^(0+1280),c
  4105   002D7E  0E96               	movlw	150
  4106   002D80  6E1C               	movwf	??_main^(0+1280),c
  4107   002D82  0E7F               	movlw	127
  4108   002D84                     u1187:
  4109   002D84  2EE8               	decfsz	wreg,f,c
  4110   002D86  D7FE               	bra	u1187
  4111   002D88  2E1C               	decfsz	??_main^(0+1280),f,c
  4112   002D8A  D7FC               	bra	u1187
  4113   002D8C  2E1D               	decfsz	(??_main+1)^(0+1280),f,c
  4114   002D8E  D7FA               	bra	u1187
  4115   002D90  0000               	nop	
  4116                           
  4117                           ;maincode03.c: 76:         I2C_POS_CURSOR(2,0);
  4118   002D92  0E00               	movlw	0
  4119   002D94  6E0D               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  4120   002D96  0E02               	movlw	2
  4121   002D98  ECA0  F018         	call	_I2C_POS_CURSOR
  4122                           
  4123                           ;maincode03.c: 77:         I2C_ESCRIBE_MENSAJE2("Humid DHT:");
  4124   002D9C  0E1D               	movlw	low STR_4
  4125   002D9E  6E0D               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  4126   002DA0  ECB5  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  4127                           
  4128                           ;maincode03.c: 78:         dht_humid = DHT_GetHumid(1);
  4129   002DA4  0E01               	movlw	1
  4130   002DA6  EC6E  F018         	call	_DHT_GetHumid
  4131   002DAA  C50B  F520         	movff	?_DHT_GetHumid,_dht_humid	;volatile
  4132   002DAE  C50C  F521         	movff	?_DHT_GetHumid+1,_dht_humid+1	;volatile
  4133                           
  4134                           ;maincode03.c: 79:         I2C_LCD_ESCRIBE_VAR_INT(dht_humid/10, 2, 0);
  4135   002DB2  C520  F50C         	movff	_dht_humid,___lwdiv@dividend	;volatile
  4136   002DB6  C521  F50D         	movff	_dht_humid+1,___lwdiv@dividend+1	;volatile
  4137   002DBA  0E00               	movlw	0
  4138   002DBC  6E0F               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4139   002DBE  0E0A               	movlw	10
  4140   002DC0  6E0E               	movwf	___lwdiv@divisor^(0+1280),c
  4141   002DC2  EC23  F019         	call	___lwdiv	;wreg free
  4142   002DC6  C50C  F51E         	movff	?___lwdiv,_main$1776
  4143   002DCA  C50D  F51F         	movff	?___lwdiv+1,_main$1776+1
  4144                           
  4145                           ;maincode03.c: 79:         I2C_LCD_ESCRIBE_VAR_INT(dht_humid/10, 2, 0);
  4146   002DCE  C51E  F513         	movff	_main$1776,I2C_LCD_ESCRIBE_VAR_INT@numero
  4147   002DD2  C51F  F514         	movff	_main$1776+1,I2C_LCD_ESCRIBE_VAR_INT@numero+1
  4148   002DD6  0E02               	movlw	2
  4149   002DD8  6E15               	movwf	I2C_LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
  4150   002DDA  0E00               	movlw	0
  4151   002DDC  6E16               	movwf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),c
  4152   002DDE  ECC6  F014         	call	_I2C_LCD_ESCRIBE_VAR_INT	;wreg free
  4153                           
  4154                           ;maincode03.c: 80:         I2C_ESCRIBE_MENSAJE2("%RH");
  4155   002DE2  0E32               	movlw	low STR_5
  4156   002DE4  6E0D               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  4157   002DE6  ECB5  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  4158                           
  4159                           ;maincode03.c: 81:         _delay((unsigned long)((1000)*(32000000UL/4000.0)));
  4160   002DEA  0E29               	movlw	41
  4161   002DEC  6E1D               	movwf	(??_main+1)^(0+1280),c
  4162   002DEE  0E96               	movlw	150
  4163   002DF0  6E1C               	movwf	??_main^(0+1280),c
  4164   002DF2  0E7F               	movlw	127
  4165   002DF4                     u1197:
  4166   002DF4  2EE8               	decfsz	wreg,f,c
  4167   002DF6  D7FE               	bra	u1197
  4168   002DF8  2E1C               	decfsz	??_main^(0+1280),f,c
  4169   002DFA  D7FC               	bra	u1197
  4170   002DFC  2E1D               	decfsz	(??_main+1)^(0+1280),f,c
  4171   002DFE  D7FA               	bra	u1197
  4172   002E00  0000               	nop	
  4173   002E02  D78E               	goto	l2517
  4174   002E04                     __end_of_main:
  4175                           	callstack 0
  4176                           
  4177 ;; *************** function _configuro *****************
  4178 ;; Defined at:
  4179 ;;		line 12 in file "maincode03.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;		None
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;		None
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      void 
  4186 ;; Registers used:
  4187 ;;		wreg, status,2
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 3F/4
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4197 ;;Total ram usage:        0 bytes
  4198 ;; Hardware stack levels used: 1
  4199 ;; Hardware stack levels required when called: 3
  4200 ;; This function calls:
  4201 ;;		Nothing
  4202 ;; This function is called by:
  4203 ;;		_main
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text1
  4208   0032E2                     __ptext1:
  4209                           	callstack 0
  4210   0032E2                     _configuro:
  4211                           	callstack 123
  4212                           
  4213                           ;maincode03.c: 13:     OSCCON1 = 0x60;
  4214                           
  4215                           ;incstack = 0
  4216   0032E2  0E60               	movlw	96
  4217   0032E4  0100               	movlb	0	; () banked
  4218   0032E6  6FAD               	movwf	173,b	;volatile
  4219                           
  4220                           ;maincode03.c: 14:     OSCFRQ = 0x06;
  4221   0032E8  0E06               	movlw	6
  4222   0032EA  6FB1               	movwf	177,b	;volatile
  4223                           
  4224                           ;maincode03.c: 15:     OSCEN = 0x40;
  4225   0032EC  0E40               	movlw	64
  4226   0032EE  6FB3               	movwf	179,b	;volatile
  4227                           
  4228                           ;maincode03.c: 17:     RF2PPS = 0x01;
  4229   0032F0  0E01               	movlw	1
  4230   0032F2  0102               	movlb	2	; () banked
  4231   0032F4  6F2B               	movwf	43,b	;volatile
  4232                           
  4233                           ; BSR set to: 2
  4234                           ;maincode03.c: 18:     TRISFbits.TRISF2 = 0;
  4235   0032F6  94CB               	bcf	203,2,c	;volatile
  4236                           
  4237                           ; BSR set to: 2
  4238                           ;maincode03.c: 19:     ANSELFbits.ANSELF2 = 0;
  4239   0032F8  0104               	movlb	4	; () banked
  4240   0032FA  9528               	bcf	40,2,b	;volatile
  4241                           
  4242                           ;maincode03.c: 21:     INT0PPS = 0x08;
  4243   0032FC  0E08               	movlw	8
  4244   0032FE  0102               	movlb	2	; () banked
  4245   003300  6F3E               	movwf	62,b	;volatile
  4246                           
  4247                           ; BSR set to: 2
  4248                           ;maincode03.c: 22:     TRISBbits.TRISB0 = 1;
  4249   003302  80C7               	bsf	199,0,c	;volatile
  4250                           
  4251                           ; BSR set to: 2
  4252                           ;maincode03.c: 23:     ANSELBbits.ANSELB0 = 0;
  4253   003304  0104               	movlb	4	; () banked
  4254   003306  9108               	bcf	8,0,b	;volatile
  4255                           
  4256                           ; BSR set to: 4
  4257                           ;maincode03.c: 24:     WPUBbits.WPUB0 = 1;
  4258   003308  8109               	bsf	9,0,b	;volatile
  4259                           
  4260                           ;maincode03.c: 25:     INT1PPS = 0x09;
  4261   00330A  0E09               	movlw	9
  4262   00330C  0102               	movlb	2	; () banked
  4263   00330E  6F3F               	movwf	63,b	;volatile
  4264                           
  4265                           ; BSR set to: 2
  4266                           ;maincode03.c: 26:     TRISBbits.TRISB1 = 1;
  4267   003310  82C7               	bsf	199,1,c	;volatile
  4268                           
  4269                           ; BSR set to: 2
  4270                           ;maincode03.c: 27:     ANSELBbits.ANSELB1 = 0;
  4271   003312  0104               	movlb	4	; () banked
  4272   003314  9308               	bcf	8,1,b	;volatile
  4273                           
  4274                           ; BSR set to: 4
  4275                           ;maincode03.c: 28:     WPUBbits.WPUB1 = 1;
  4276   003316  8309               	bsf	9,1,b	;volatile
  4277                           
  4278                           ; BSR set to: 4
  4279                           ;maincode03.c: 29:     PIE1bits.INT0IE = 1;
  4280   003318  809F               	bsf	159,0,c	;volatile
  4281                           
  4282                           ; BSR set to: 4
  4283                           ;maincode03.c: 30:     PIR1bits.INT0IF = 0;
  4284   00331A  90AF               	bcf	175,0,c	;volatile
  4285                           
  4286                           ; BSR set to: 4
  4287                           ;maincode03.c: 31:     PIE6bits.INT1IE = 1;
  4288   00331C  80A4               	bsf	164,0,c	;volatile
  4289                           
  4290                           ; BSR set to: 4
  4291                           ;maincode03.c: 32:     PIR6bits.INT1IF = 0;
  4292   00331E  90B4               	bcf	180,0,c	;volatile
  4293                           
  4294                           ; BSR set to: 4
  4295                           ;maincode03.c: 33:     INTCON0bits.INT0EDG = 0;
  4296   003320  90D6               	bcf	214,0,c	;volatile
  4297                           
  4298                           ; BSR set to: 4
  4299                           ;maincode03.c: 34:     INTCON0bits.INT1EDG = 0;
  4300   003322  92D6               	bcf	214,1,c	;volatile
  4301                           
  4302                           ; BSR set to: 4
  4303                           ;maincode03.c: 35:     INTCON0bits.GIE = 1;
  4304   003324  8ED6               	bsf	214,7,c	;volatile
  4305                           
  4306                           ; BSR set to: 4
  4307   003326  0012               	return		;funcret
  4308   003328                     __end_of_configuro:
  4309                           	callstack 0
  4310                           
  4311 ;; *************** function _WS2812_INIT *****************
  4312 ;; Defined at:
  4313 ;;		line 4 in file "LIB_WS2812.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;		None
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2
  4322 ;; Tracked objects:
  4323 ;;		On entry : 3F/4
  4324 ;;		On exit  : 3F/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4331 ;;Total ram usage:        0 bytes
  4332 ;; Hardware stack levels used: 1
  4333 ;; Hardware stack levels required when called: 3
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_main
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text2
  4342   0031F0                     __ptext2:
  4343                           	callstack 0
  4344   0031F0                     _WS2812_INIT:
  4345                           	callstack 123
  4346                           
  4347                           ; BSR set to: 4
  4348                           ;LIB_WS2812.c: 6:     T2CON = 0x80;
  4349                           
  4350                           ; BSR set to: 4
  4351                           ;incstack = 0
  4352   0031F0  0E80               	movlw	128
  4353   0031F2  0103               	movlb	3	; () banked
  4354   0031F4  6F24               	movwf	36,b	;volatile
  4355                           
  4356                           ;LIB_WS2812.c: 7:     T2CLKCON = 0x01;
  4357   0031F6  0E01               	movlw	1
  4358   0031F8  6F26               	movwf	38,b	;volatile
  4359                           
  4360                           ;LIB_WS2812.c: 8:     T2PR = 5;
  4361   0031FA  0E05               	movlw	5
  4362   0031FC  6F23               	movwf	35,b	;volatile
  4363                           
  4364                           ;LIB_WS2812.c: 10:     SPI1CON0 = 0x83;
  4365   0031FE  0E83               	movlw	131
  4366   003200  0100               	movlb	0	; () banked
  4367   003202  6F84               	movwf	132,b	;volatile
  4368                           
  4369                           ;LIB_WS2812.c: 11:     SPI1CON1 = 0x40;
  4370   003204  0E40               	movlw	64
  4371   003206  6F85               	movwf	133,b	;volatile
  4372                           
  4373                           ;LIB_WS2812.c: 12:     SPI1CON2 = 0x02;
  4374   003208  0E02               	movlw	2
  4375   00320A  6F86               	movwf	134,b	;volatile
  4376                           
  4377                           ;LIB_WS2812.c: 13:     SPI1CLK = 0x06;
  4378   00320C  0E06               	movlw	6
  4379   00320E  6F8C               	movwf	140,b	;volatile
  4380                           
  4381                           ;LIB_WS2812.c: 15:     CCP1CON = 0x8C;
  4382   003210  0E8C               	movlw	140
  4383   003212  0103               	movlb	3	; () banked
  4384   003214  6F42               	movwf	66,b	;volatile
  4385                           
  4386                           ; BSR set to: 3
  4387                           ;LIB_WS2812.c: 16:     CCPR1H = 0x00;
  4388   003216  6B41               	clrf	65,b	;volatile
  4389                           
  4390                           ;LIB_WS2812.c: 17:     CCPR1L = 0x0A;
  4391   003218  0E0A               	movlw	10
  4392   00321A  6F40               	movwf	64,b	;volatile
  4393                           
  4394                           ; BSR set to: 3
  4395                           ;LIB_WS2812.c: 19:     CLCSELECT = 0x00;
  4396   00321C  0100               	movlb	0	; () banked
  4397   00321E  6BD5               	clrf	213,b	;volatile
  4398                           
  4399                           ;LIB_WS2812.c: 20:     CLCnSEL0 = 0x1F;
  4400   003220  0E1F               	movlw	31
  4401   003222  6FD8               	movwf	216,b	;volatile
  4402                           
  4403                           ;LIB_WS2812.c: 21:     CLCnSEL1 = 0x41;
  4404   003224  0E41               	movlw	65
  4405   003226  6FD9               	movwf	217,b	;volatile
  4406                           
  4407                           ;LIB_WS2812.c: 22:     CLCnSEL2 = 0x40;
  4408   003228  0E40               	movlw	64
  4409   00322A  6FDA               	movwf	218,b	;volatile
  4410                           
  4411                           ;LIB_WS2812.c: 23:     CLCnGLS0 = 0x05;
  4412   00322C  0E05               	movlw	5
  4413   00322E  6FDC               	movwf	220,b	;volatile
  4414                           
  4415                           ;LIB_WS2812.c: 24:     CLCnGLS1 = 0x10;
  4416   003230  0E10               	movlw	16
  4417   003232  6FDD               	movwf	221,b	;volatile
  4418                           
  4419                           ;LIB_WS2812.c: 25:     CLCnGLS2 = 0x08;
  4420   003234  0E08               	movlw	8
  4421   003236  6FDE               	movwf	222,b	;volatile
  4422                           
  4423                           ;LIB_WS2812.c: 26:     CLCnGLS3 = 0x20;
  4424   003238  0E20               	movlw	32
  4425   00323A  6FDF               	movwf	223,b	;volatile
  4426                           
  4427                           ;LIB_WS2812.c: 27:     CLCnPOL = 0x01;
  4428   00323C  0E01               	movlw	1
  4429   00323E  6FD7               	movwf	215,b	;volatile
  4430                           
  4431                           ;LIB_WS2812.c: 28:     CLCnCON = 0x80;
  4432   003240  0E80               	movlw	128
  4433   003242  6FD6               	movwf	214,b	;volatile
  4434                           
  4435                           ; BSR set to: 0
  4436   003244  0012               	return		;funcret
  4437   003246                     __end_of_WS2812_INIT:
  4438                           	callstack 0
  4439                           
  4440 ;; *************** function _I2C_POS_CURSOR *****************
  4441 ;; Defined at:
  4442 ;;		line 91 in file "I2C_LCD.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  fila            1    wreg     unsigned char 
  4445 ;;  columna         1   12[COMRAM] unsigned char 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  fila            1   14[COMRAM] unsigned char 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1    wreg      void 
  4450 ;; Registers used:
  4451 ;;		wreg, status,2, status,0, cstack
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4457 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4459 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4460 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4461 ;;Total ram usage:        3 bytes
  4462 ;; Hardware stack levels used: 1
  4463 ;; Hardware stack levels required when called: 5
  4464 ;; This function calls:
  4465 ;;		_I2C_ENVIA_LCD_CMD
  4466 ;; This function is called by:
  4467 ;;		_main
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text3
  4472   003140                     __ptext3:
  4473                           	callstack 0
  4474   003140                     _I2C_POS_CURSOR:
  4475                           	callstack 121
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;incstack = 0
  4479                           ;I2C_POS_CURSOR@fila stored from wreg
  4480   003140  6E0F               	movwf	I2C_POS_CURSOR@fila^(0+1280),c
  4481                           
  4482                           ;I2C_LCD.c: 92:  if(fila == 1){
  4483   003142  040F               	decf	I2C_POS_CURSOR@fila^(0+1280),w,c
  4484   003144  A4D8               	btfss	status,2,c
  4485   003146  D005               	goto	l2119
  4486                           
  4487                           ;I2C_LCD.c: 93:   I2C_ENVIA_LCD_CMD(0x80+columna);
  4488   003148  500D               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  4489   00314A  0F80               	addlw	128
  4490   00314C  EC08  F018         	call	_I2C_ENVIA_LCD_CMD
  4491                           
  4492                           ;I2C_LCD.c: 94:  }
  4493   003150  D01A               	goto	l66
  4494   003152                     l2119:
  4495   003152  0E02               	movlw	2
  4496   003154  180F               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  4497   003156  A4D8               	btfss	status,2,c
  4498   003158  D005               	goto	l2123
  4499                           
  4500                           ;I2C_LCD.c: 96:   I2C_ENVIA_LCD_CMD(0xC0+columna);
  4501   00315A  500D               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  4502   00315C  0FC0               	addlw	192
  4503   00315E  EC08  F018         	call	_I2C_ENVIA_LCD_CMD
  4504                           
  4505                           ;I2C_LCD.c: 97:  }
  4506   003162  D011               	goto	l66
  4507   003164                     l2123:
  4508   003164  0E03               	movlw	3
  4509   003166  180F               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  4510   003168  A4D8               	btfss	status,2,c
  4511   00316A  D005               	goto	l2127
  4512                           
  4513                           ;I2C_LCD.c: 99:   I2C_ENVIA_LCD_CMD(0x94+columna);
  4514   00316C  500D               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  4515   00316E  0F94               	addlw	148
  4516   003170  EC08  F018         	call	_I2C_ENVIA_LCD_CMD
  4517                           
  4518                           ;I2C_LCD.c: 100:  }
  4519   003174  D008               	goto	l66
  4520   003176                     l2127:
  4521   003176  0E04               	movlw	4
  4522   003178  180F               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  4523   00317A  A4D8               	btfss	status,2,c
  4524   00317C  D004               	goto	l66
  4525                           
  4526                           ;I2C_LCD.c: 102:   I2C_ENVIA_LCD_CMD(0xD4+columna);
  4527   00317E  500D               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  4528   003180  0FD4               	addlw	212
  4529   003182  EC08  F018         	call	_I2C_ENVIA_LCD_CMD
  4530   003186                     l66:
  4531                           
  4532                           ;I2C_LCD.c: 104:  _delay((unsigned long)((1)*(32000000UL/4000.0)));
  4533   003186  0E0B               	movlw	11
  4534   003188  6E0E               	movwf	??_I2C_POS_CURSOR^(0+1280),c
  4535   00318A  0E62               	movlw	98
  4536   00318C                     u1207:
  4537   00318C  2EE8               	decfsz	wreg,f,c
  4538   00318E  D7FE               	bra	u1207
  4539   003190  2E0E               	decfsz	??_I2C_POS_CURSOR^(0+1280),f,c
  4540   003192  D7FC               	bra	u1207
  4541   003194  D000               	nop2	
  4542   003196  0012               	return		;funcret
  4543   003198                     __end_of_I2C_POS_CURSOR:
  4544                           	callstack 0
  4545                           
  4546 ;; *************** function _I2C_LCD_INIT *****************
  4547 ;; Defined at:
  4548 ;;		line 208 in file "I2C_LCD.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 3F/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4564 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4566 ;;Total ram usage:        2 bytes
  4567 ;; Hardware stack levels used: 1
  4568 ;; Hardware stack levels required when called: 6
  4569 ;; This function calls:
  4570 ;;		_I2C1_INIT
  4571 ;;		_I2C1_WRITESINGLEBYTE
  4572 ;;		_I2C_BORRAR_LCD
  4573 ;;		_I2C_CURSOR_HOME
  4574 ;;		_I2C_CURSOR_ONOFF
  4575 ;; This function is called by:
  4576 ;;		_main
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text4
  4581   002638                     __ptext4:
  4582                           	callstack 0
  4583   002638                     _I2C_LCD_INIT:
  4584                           	callstack 120
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;I2C_LCD.c: 209:     I2C1_INIT();
  4588                           
  4589                           ;incstack = 0
  4590   002638  EC4C  F019         	call	_I2C1_INIT	;wreg free
  4591                           
  4592                           ; BSR set to: 2
  4593                           ;I2C_LCD.c: 210:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  4594   00263C  0E9C               	movlw	156
  4595   00263E  6E0E               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4596   002640  0ED7               	movlw	215
  4597   002642                     u1217:
  4598   002642  2EE8               	decfsz	wreg,f,c
  4599   002644  D7FE               	bra	u1217
  4600   002646  2E0E               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4601   002648  D7FC               	bra	u1217
  4602   00264A  0000               	nop	
  4603                           
  4604                           ;I2C_LCD.c: 212:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4605   00264C  0E00               	movlw	0
  4606   00264E  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4607   002650  0E27               	movlw	39
  4608   002652  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4609                           
  4610                           ; BSR set to: 2
  4611                           ;I2C_LCD.c: 213:     _delay((unsigned long)((1000)*(32000000UL/4000.0)));
  4612   002656  0E29               	movlw	41
  4613   002658  6E0F               	movwf	(??_I2C_LCD_INIT+1)^(0+1280),c
  4614   00265A  0E96               	movlw	150
  4615   00265C  6E0E               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4616   00265E  0E7F               	movlw	127
  4617   002660                     u1227:
  4618   002660  2EE8               	decfsz	wreg,f,c
  4619   002662  D7FE               	bra	u1227
  4620   002664  2E0E               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4621   002666  D7FC               	bra	u1227
  4622   002668  2E0F               	decfsz	(??_I2C_LCD_INIT+1)^(0+1280),f,c
  4623   00266A  D7FA               	bra	u1227
  4624   00266C  0000               	nop	
  4625                           
  4626                           ;I2C_LCD.c: 216:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4627   00266E  0E30               	movlw	48
  4628   002670  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4629   002672  0E27               	movlw	39
  4630   002674  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4631                           
  4632                           ; BSR set to: 2
  4633                           ;I2C_LCD.c: 217:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4634   002678  0E30               	movlw	48
  4635   00267A  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4636   00267C  0E27               	movlw	39
  4637   00267E  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4638                           
  4639                           ; BSR set to: 2
  4640                           ;I2C_LCD.c: 218:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4641   002682  0E35               	movlw	53
  4642   002684                     u1237:
  4643   002684  2EE8               	decfsz	wreg,f,c
  4644   002686  D7FE               	bra	u1237
  4645   002688  0000               	nop	
  4646                           
  4647                           ;I2C_LCD.c: 219:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x34);
  4648   00268A  0E34               	movlw	52
  4649   00268C  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4650   00268E  0E27               	movlw	39
  4651   002690  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4652                           
  4653                           ; BSR set to: 2
  4654                           ;I2C_LCD.c: 220:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4655   002694  0E35               	movlw	53
  4656   002696                     u1247:
  4657   002696  2EE8               	decfsz	wreg,f,c
  4658   002698  D7FE               	bra	u1247
  4659   00269A  0000               	nop	
  4660                           
  4661                           ;I2C_LCD.c: 221:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4662   00269C  0E30               	movlw	48
  4663   00269E  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4664   0026A0  0E27               	movlw	39
  4665   0026A2  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4666                           
  4667                           ; BSR set to: 2
  4668                           ;I2C_LCD.c: 222:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
  4669   0026A6  0E34               	movlw	52
  4670   0026A8  6E0E               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4671   0026AA  0EF2               	movlw	242
  4672   0026AC                     u1257:
  4673   0026AC  2EE8               	decfsz	wreg,f,c
  4674   0026AE  D7FE               	bra	u1257
  4675   0026B0  2E0E               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4676   0026B2  D7FC               	bra	u1257
  4677                           
  4678                           ;I2C_LCD.c: 224:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4679   0026B4  0E30               	movlw	48
  4680   0026B6  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4681   0026B8  0E27               	movlw	39
  4682   0026BA  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4683                           
  4684                           ; BSR set to: 2
  4685                           ;I2C_LCD.c: 225:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4686   0026BE  0E35               	movlw	53
  4687   0026C0                     u1267:
  4688   0026C0  2EE8               	decfsz	wreg,f,c
  4689   0026C2  D7FE               	bra	u1267
  4690   0026C4  0000               	nop	
  4691                           
  4692                           ;I2C_LCD.c: 226:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x34);
  4693   0026C6  0E34               	movlw	52
  4694   0026C8  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4695   0026CA  0E27               	movlw	39
  4696   0026CC  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4697                           
  4698                           ; BSR set to: 2
  4699                           ;I2C_LCD.c: 227:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4700   0026D0  0E35               	movlw	53
  4701   0026D2                     u1277:
  4702   0026D2  2EE8               	decfsz	wreg,f,c
  4703   0026D4  D7FE               	bra	u1277
  4704   0026D6  0000               	nop	
  4705                           
  4706                           ;I2C_LCD.c: 228:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4707   0026D8  0E30               	movlw	48
  4708   0026DA  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4709   0026DC  0E27               	movlw	39
  4710   0026DE  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4711                           
  4712                           ; BSR set to: 2
  4713                           ;I2C_LCD.c: 230:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
  4714   0026E2  0E34               	movlw	52
  4715   0026E4  6E0E               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4716   0026E6  0EF2               	movlw	242
  4717   0026E8                     u1287:
  4718   0026E8  2EE8               	decfsz	wreg,f,c
  4719   0026EA  D7FE               	bra	u1287
  4720   0026EC  2E0E               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4721   0026EE  D7FC               	bra	u1287
  4722                           
  4723                           ;I2C_LCD.c: 232:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4724   0026F0  0E30               	movlw	48
  4725   0026F2  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4726   0026F4  0E27               	movlw	39
  4727   0026F6  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4728                           
  4729                           ; BSR set to: 2
  4730                           ;I2C_LCD.c: 233:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4731   0026FA  0E35               	movlw	53
  4732   0026FC                     u1297:
  4733   0026FC  2EE8               	decfsz	wreg,f,c
  4734   0026FE  D7FE               	bra	u1297
  4735   002700  0000               	nop	
  4736                           
  4737                           ;I2C_LCD.c: 234:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x34);
  4738   002702  0E34               	movlw	52
  4739   002704  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4740   002706  0E27               	movlw	39
  4741   002708  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4742                           
  4743                           ; BSR set to: 2
  4744                           ;I2C_LCD.c: 235:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4745   00270C  0E35               	movlw	53
  4746   00270E                     u1307:
  4747   00270E  2EE8               	decfsz	wreg,f,c
  4748   002710  D7FE               	bra	u1307
  4749   002712  0000               	nop	
  4750                           
  4751                           ;I2C_LCD.c: 236:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4752   002714  0E30               	movlw	48
  4753   002716  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4754   002718  0E27               	movlw	39
  4755   00271A  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4756                           
  4757                           ; BSR set to: 2
  4758                           ;I2C_LCD.c: 238:     _delay((unsigned long)((250)*(32000000UL/4000000.0)));
  4759   00271E  0E03               	movlw	3
  4760   002720  6E0E               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4761   002722  0E98               	movlw	152
  4762   002724                     u1317:
  4763   002724  2EE8               	decfsz	wreg,f,c
  4764   002726  D7FE               	bra	u1317
  4765   002728  2E0E               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4766   00272A  D7FC               	bra	u1317
  4767                           
  4768                           ;I2C_LCD.c: 240:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4769   00272C  0E20               	movlw	32
  4770   00272E  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4771   002730  0E27               	movlw	39
  4772   002732  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4773                           
  4774                           ; BSR set to: 2
  4775                           ;I2C_LCD.c: 241:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4776   002736  0E35               	movlw	53
  4777   002738                     u1327:
  4778   002738  2EE8               	decfsz	wreg,f,c
  4779   00273A  D7FE               	bra	u1327
  4780   00273C  0000               	nop	
  4781                           
  4782                           ;I2C_LCD.c: 242:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x24);
  4783   00273E  0E24               	movlw	36
  4784   002740  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4785   002742  0E27               	movlw	39
  4786   002744  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4787                           
  4788                           ; BSR set to: 2
  4789                           ;I2C_LCD.c: 243:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4790   002748  0E35               	movlw	53
  4791   00274A                     u1337:
  4792   00274A  2EE8               	decfsz	wreg,f,c
  4793   00274C  D7FE               	bra	u1337
  4794   00274E  0000               	nop	
  4795                           
  4796                           ;I2C_LCD.c: 244:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4797   002750  0E20               	movlw	32
  4798   002752  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4799   002754  0E27               	movlw	39
  4800   002756  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4801                           
  4802                           ; BSR set to: 2
  4803                           ;I2C_LCD.c: 246:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4804   00275A  0EC8               	movlw	200
  4805   00275C                     u1347:
  4806   00275C  2EE8               	decfsz	wreg,f,c
  4807   00275E  D7FE               	bra	u1347
  4808                           
  4809                           ;I2C_LCD.c: 248:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4810   002760  0E20               	movlw	32
  4811   002762  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4812   002764  0E27               	movlw	39
  4813   002766  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4814                           
  4815                           ; BSR set to: 2
  4816                           ;I2C_LCD.c: 249:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4817   00276A  0E35               	movlw	53
  4818   00276C                     u1357:
  4819   00276C  2EE8               	decfsz	wreg,f,c
  4820   00276E  D7FE               	bra	u1357
  4821   002770  0000               	nop	
  4822                           
  4823                           ;I2C_LCD.c: 250:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x24);
  4824   002772  0E24               	movlw	36
  4825   002774  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4826   002776  0E27               	movlw	39
  4827   002778  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4828                           
  4829                           ; BSR set to: 2
  4830                           ;I2C_LCD.c: 251:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4831   00277C  0E35               	movlw	53
  4832   00277E                     u1367:
  4833   00277E  2EE8               	decfsz	wreg,f,c
  4834   002780  D7FE               	bra	u1367
  4835   002782  0000               	nop	
  4836                           
  4837                           ;I2C_LCD.c: 252:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4838   002784  0E20               	movlw	32
  4839   002786  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4840   002788  0E27               	movlw	39
  4841   00278A  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4842                           
  4843                           ; BSR set to: 2
  4844                           ;I2C_LCD.c: 254:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4845   00278E  0EC8               	movlw	200
  4846   002790                     u1377:
  4847   002790  2EE8               	decfsz	wreg,f,c
  4848   002792  D7FE               	bra	u1377
  4849                           
  4850                           ;I2C_LCD.c: 256:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x80);
  4851   002794  0E80               	movlw	128
  4852   002796  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4853   002798  0E27               	movlw	39
  4854   00279A  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4855                           
  4856                           ; BSR set to: 2
  4857                           ;I2C_LCD.c: 257:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4858   00279E  0E35               	movlw	53
  4859   0027A0                     u1387:
  4860   0027A0  2EE8               	decfsz	wreg,f,c
  4861   0027A2  D7FE               	bra	u1387
  4862   0027A4  0000               	nop	
  4863                           
  4864                           ;I2C_LCD.c: 258:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x84);
  4865   0027A6  0E84               	movlw	132
  4866   0027A8  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4867   0027AA  0E27               	movlw	39
  4868   0027AC  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4869                           
  4870                           ; BSR set to: 2
  4871                           ;I2C_LCD.c: 259:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4872   0027B0  0E35               	movlw	53
  4873   0027B2                     u1397:
  4874   0027B2  2EE8               	decfsz	wreg,f,c
  4875   0027B4  D7FE               	bra	u1397
  4876   0027B6  0000               	nop	
  4877                           
  4878                           ;I2C_LCD.c: 260:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x80);
  4879   0027B8  0E80               	movlw	128
  4880   0027BA  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4881   0027BC  0E27               	movlw	39
  4882   0027BE  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4883                           
  4884                           ; BSR set to: 2
  4885                           ;I2C_LCD.c: 262:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4886   0027C2  0EC8               	movlw	200
  4887   0027C4                     u1407:
  4888   0027C4  2EE8               	decfsz	wreg,f,c
  4889   0027C6  D7FE               	bra	u1407
  4890                           
  4891                           ;I2C_LCD.c: 264:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4892   0027C8  0E00               	movlw	0
  4893   0027CA  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4894   0027CC  0E27               	movlw	39
  4895   0027CE  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4896                           
  4897                           ; BSR set to: 2
  4898                           ;I2C_LCD.c: 265:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4899   0027D2  0E35               	movlw	53
  4900   0027D4                     u1417:
  4901   0027D4  2EE8               	decfsz	wreg,f,c
  4902   0027D6  D7FE               	bra	u1417
  4903   0027D8  0000               	nop	
  4904                           
  4905                           ;I2C_LCD.c: 266:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  4906   0027DA  0E04               	movlw	4
  4907   0027DC  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4908   0027DE  0E27               	movlw	39
  4909   0027E0  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4910                           
  4911                           ; BSR set to: 2
  4912                           ;I2C_LCD.c: 267:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4913   0027E4  0E35               	movlw	53
  4914   0027E6                     u1427:
  4915   0027E6  2EE8               	decfsz	wreg,f,c
  4916   0027E8  D7FE               	bra	u1427
  4917   0027EA  0000               	nop	
  4918                           
  4919                           ;I2C_LCD.c: 268:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4920   0027EC  0E00               	movlw	0
  4921   0027EE  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4922   0027F0  0E27               	movlw	39
  4923   0027F2  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4924                           
  4925                           ; BSR set to: 2
  4926                           ;I2C_LCD.c: 270:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4927   0027F6  0EC8               	movlw	200
  4928   0027F8                     u1437:
  4929   0027F8  2EE8               	decfsz	wreg,f,c
  4930   0027FA  D7FE               	bra	u1437
  4931                           
  4932                           ;I2C_LCD.c: 272:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0xC0);
  4933   0027FC  0EC0               	movlw	192
  4934   0027FE  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4935   002800  0E27               	movlw	39
  4936   002802  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4937                           
  4938                           ; BSR set to: 2
  4939                           ;I2C_LCD.c: 273:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4940   002806  0E35               	movlw	53
  4941   002808                     u1447:
  4942   002808  2EE8               	decfsz	wreg,f,c
  4943   00280A  D7FE               	bra	u1447
  4944   00280C  0000               	nop	
  4945                           
  4946                           ;I2C_LCD.c: 274:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0xC4);
  4947   00280E  0EC4               	movlw	196
  4948   002810  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4949   002812  0E27               	movlw	39
  4950   002814  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4951                           
  4952                           ; BSR set to: 2
  4953                           ;I2C_LCD.c: 275:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4954   002818  0E35               	movlw	53
  4955   00281A                     u1457:
  4956   00281A  2EE8               	decfsz	wreg,f,c
  4957   00281C  D7FE               	bra	u1457
  4958   00281E  0000               	nop	
  4959                           
  4960                           ;I2C_LCD.c: 276:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0xC0);
  4961   002820  0EC0               	movlw	192
  4962   002822  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4963   002824  0E27               	movlw	39
  4964   002826  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4965                           
  4966                           ; BSR set to: 2
  4967                           ;I2C_LCD.c: 278:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4968   00282A  0EC8               	movlw	200
  4969   00282C                     u1467:
  4970   00282C  2EE8               	decfsz	wreg,f,c
  4971   00282E  D7FE               	bra	u1467
  4972                           
  4973                           ;I2C_LCD.c: 280:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4974   002830  0E00               	movlw	0
  4975   002832  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4976   002834  0E27               	movlw	39
  4977   002836  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4978                           
  4979                           ; BSR set to: 2
  4980                           ;I2C_LCD.c: 281:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4981   00283A  0E35               	movlw	53
  4982   00283C                     u1477:
  4983   00283C  2EE8               	decfsz	wreg,f,c
  4984   00283E  D7FE               	bra	u1477
  4985   002840  0000               	nop	
  4986                           
  4987                           ;I2C_LCD.c: 282:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  4988   002842  0E04               	movlw	4
  4989   002844  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4990   002846  0E27               	movlw	39
  4991   002848  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  4992                           
  4993                           ; BSR set to: 2
  4994                           ;I2C_LCD.c: 283:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4995   00284C  0E35               	movlw	53
  4996   00284E                     u1487:
  4997   00284E  2EE8               	decfsz	wreg,f,c
  4998   002850  D7FE               	bra	u1487
  4999   002852  0000               	nop	
  5000                           
  5001                           ;I2C_LCD.c: 284:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  5002   002854  0E00               	movlw	0
  5003   002856  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5004   002858  0E27               	movlw	39
  5005   00285A  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5006                           
  5007                           ; BSR set to: 2
  5008                           ;I2C_LCD.c: 286:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  5009   00285E  0EC8               	movlw	200
  5010   002860                     u1497:
  5011   002860  2EE8               	decfsz	wreg,f,c
  5012   002862  D7FE               	bra	u1497
  5013                           
  5014                           ;I2C_LCD.c: 288:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x10);
  5015   002864  0E10               	movlw	16
  5016   002866  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5017   002868  0E27               	movlw	39
  5018   00286A  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5019                           
  5020                           ; BSR set to: 2
  5021                           ;I2C_LCD.c: 289:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5022   00286E  0E35               	movlw	53
  5023   002870                     u1507:
  5024   002870  2EE8               	decfsz	wreg,f,c
  5025   002872  D7FE               	bra	u1507
  5026   002874  0000               	nop	
  5027                           
  5028                           ;I2C_LCD.c: 290:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x14);
  5029   002876  0E14               	movlw	20
  5030   002878  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5031   00287A  0E27               	movlw	39
  5032   00287C  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5033                           
  5034                           ; BSR set to: 2
  5035                           ;I2C_LCD.c: 291:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5036   002880  0E35               	movlw	53
  5037   002882                     u1517:
  5038   002882  2EE8               	decfsz	wreg,f,c
  5039   002884  D7FE               	bra	u1517
  5040   002886  0000               	nop	
  5041                           
  5042                           ;I2C_LCD.c: 292:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x10);
  5043   002888  0E10               	movlw	16
  5044   00288A  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5045   00288C  0E27               	movlw	39
  5046   00288E  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5047                           
  5048                           ; BSR set to: 2
  5049                           ;I2C_LCD.c: 294:      _delay((unsigned long)((2)*(32000000UL/4000.0)));
  5050   002892  0E15               	movlw	21
  5051   002894  6E0E               	movwf	??_I2C_LCD_INIT^(0+1280),c
  5052   002896  0EC6               	movlw	198
  5053   002898                     u1527:
  5054   002898  2EE8               	decfsz	wreg,f,c
  5055   00289A  D7FE               	bra	u1527
  5056   00289C  2E0E               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  5057   00289E  D7FC               	bra	u1527
  5058   0028A0  D000               	nop2	
  5059                           
  5060                           ;I2C_LCD.c: 296:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  5061   0028A2  0E00               	movlw	0
  5062   0028A4  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5063   0028A6  0E27               	movlw	39
  5064   0028A8  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5065                           
  5066                           ; BSR set to: 2
  5067                           ;I2C_LCD.c: 297:     _delay((unsigned long)((02)*(32000000UL/4000000.0)));
  5068   0028AC  0E05               	movlw	5
  5069   0028AE                     u1537:
  5070   0028AE  2EE8               	decfsz	wreg,f,c
  5071   0028B0  D7FE               	bra	u1537
  5072   0028B2  0000               	nop	
  5073                           
  5074                           ;I2C_LCD.c: 298:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  5075   0028B4  0E04               	movlw	4
  5076   0028B6  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5077   0028B8  0E27               	movlw	39
  5078   0028BA  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5079                           
  5080                           ; BSR set to: 2
  5081                           ;I2C_LCD.c: 299:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5082   0028BE  0E35               	movlw	53
  5083   0028C0                     u1547:
  5084   0028C0  2EE8               	decfsz	wreg,f,c
  5085   0028C2  D7FE               	bra	u1547
  5086   0028C4  0000               	nop	
  5087                           
  5088                           ;I2C_LCD.c: 300:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  5089   0028C6  0E00               	movlw	0
  5090   0028C8  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5091   0028CA  0E27               	movlw	39
  5092   0028CC  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5093                           
  5094                           ; BSR set to: 2
  5095                           ;I2C_LCD.c: 302:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  5096   0028D0  0EC8               	movlw	200
  5097   0028D2                     u1557:
  5098   0028D2  2EE8               	decfsz	wreg,f,c
  5099   0028D4  D7FE               	bra	u1557
  5100                           
  5101                           ;I2C_LCD.c: 304:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x60);
  5102   0028D6  0E60               	movlw	96
  5103   0028D8  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5104   0028DA  0E27               	movlw	39
  5105   0028DC  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5106                           
  5107                           ; BSR set to: 2
  5108                           ;I2C_LCD.c: 305:     _delay((unsigned long)((02)*(32000000UL/4000000.0)));
  5109   0028E0  0E05               	movlw	5
  5110   0028E2                     u1567:
  5111   0028E2  2EE8               	decfsz	wreg,f,c
  5112   0028E4  D7FE               	bra	u1567
  5113   0028E6  0000               	nop	
  5114                           
  5115                           ;I2C_LCD.c: 306:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x64);
  5116   0028E8  0E64               	movlw	100
  5117   0028EA  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5118   0028EC  0E27               	movlw	39
  5119   0028EE  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5120                           
  5121                           ; BSR set to: 2
  5122                           ;I2C_LCD.c: 307:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5123   0028F2  0E35               	movlw	53
  5124   0028F4                     u1577:
  5125   0028F4  2EE8               	decfsz	wreg,f,c
  5126   0028F6  D7FE               	bra	u1577
  5127   0028F8  0000               	nop	
  5128                           
  5129                           ;I2C_LCD.c: 308:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x60);
  5130   0028FA  0E60               	movlw	96
  5131   0028FC  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5132   0028FE  0E27               	movlw	39
  5133   002900  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5134                           
  5135                           ; BSR set to: 2
  5136                           ;I2C_LCD.c: 310:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  5137   002904  0EC8               	movlw	200
  5138   002906                     u1587:
  5139   002906  2EE8               	decfsz	wreg,f,c
  5140   002908  D7FE               	bra	u1587
  5141                           
  5142                           ;I2C_LCD.c: 312:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  5143   00290A  0E00               	movlw	0
  5144   00290C  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5145   00290E  0E27               	movlw	39
  5146   002910  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5147                           
  5148                           ; BSR set to: 2
  5149                           ;I2C_LCD.c: 313:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5150   002914  0E35               	movlw	53
  5151   002916                     u1597:
  5152   002916  2EE8               	decfsz	wreg,f,c
  5153   002918  D7FE               	bra	u1597
  5154   00291A  0000               	nop	
  5155                           
  5156                           ;I2C_LCD.c: 314:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  5157   00291C  0E04               	movlw	4
  5158   00291E  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5159   002920  0E27               	movlw	39
  5160   002922  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5161                           
  5162                           ; BSR set to: 2
  5163                           ;I2C_LCD.c: 315:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5164   002926  0E35               	movlw	53
  5165   002928                     u1607:
  5166   002928  2EE8               	decfsz	wreg,f,c
  5167   00292A  D7FE               	bra	u1607
  5168   00292C  0000               	nop	
  5169                           
  5170                           ;I2C_LCD.c: 316:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  5171   00292E  0E00               	movlw	0
  5172   002930  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5173   002932  0E27               	movlw	39
  5174   002934  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5175                           
  5176                           ; BSR set to: 2
  5177                           ;I2C_LCD.c: 318:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  5178   002938  0EC8               	movlw	200
  5179   00293A                     u1617:
  5180   00293A  2EE8               	decfsz	wreg,f,c
  5181   00293C  D7FE               	bra	u1617
  5182                           
  5183                           ;I2C_LCD.c: 320:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  5184   00293E  0E20               	movlw	32
  5185   002940  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5186   002942  0E27               	movlw	39
  5187   002944  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5188                           
  5189                           ; BSR set to: 2
  5190                           ;I2C_LCD.c: 321:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5191   002948  0E35               	movlw	53
  5192   00294A                     u1627:
  5193   00294A  2EE8               	decfsz	wreg,f,c
  5194   00294C  D7FE               	bra	u1627
  5195   00294E  0000               	nop	
  5196                           
  5197                           ;I2C_LCD.c: 322:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x24);
  5198   002950  0E24               	movlw	36
  5199   002952  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5200   002954  0E27               	movlw	39
  5201   002956  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5202                           
  5203                           ; BSR set to: 2
  5204                           ;I2C_LCD.c: 323:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5205   00295A  0E35               	movlw	53
  5206   00295C                     u1637:
  5207   00295C  2EE8               	decfsz	wreg,f,c
  5208   00295E  D7FE               	bra	u1637
  5209   002960  0000               	nop	
  5210                           
  5211                           ;I2C_LCD.c: 324:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  5212   002962  0E20               	movlw	32
  5213   002964  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5214   002966  0E27               	movlw	39
  5215   002968  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5216                           
  5217                           ; BSR set to: 2
  5218                           ;I2C_LCD.c: 326:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  5219   00296C  0E9C               	movlw	156
  5220   00296E  6E0E               	movwf	??_I2C_LCD_INIT^(0+1280),c
  5221   002970  0ED7               	movlw	215
  5222   002972                     u1647:
  5223   002972  2EE8               	decfsz	wreg,f,c
  5224   002974  D7FE               	bra	u1647
  5225   002976  2E0E               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  5226   002978  D7FC               	bra	u1647
  5227   00297A  0000               	nop	
  5228                           
  5229                           ;I2C_LCD.c: 327:     I2C_BORRAR_LCD();
  5230   00297C  EC49  F01A         	call	_I2C_BORRAR_LCD	;wreg free
  5231                           
  5232                           ;I2C_LCD.c: 328:     I2C_CURSOR_HOME();
  5233   002980  EC45  F01A         	call	_I2C_CURSOR_HOME	;wreg free
  5234                           
  5235                           ;I2C_LCD.c: 329:     I2C_CURSOR_ONOFF(1);
  5236   002984  0E01               	movlw	1
  5237   002986  EC20  F01A         	call	_I2C_CURSOR_ONOFF
  5238   00298A  0012               	return		;funcret
  5239   00298C                     __end_of_I2C_LCD_INIT:
  5240                           	callstack 0
  5241                           
  5242 ;; *************** function _I2C_CURSOR_ONOFF *****************
  5243 ;; Defined at:
  5244 ;;		line 137 in file "I2C_LCD.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  estado          1    wreg     unsigned char 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  estado          1   12[COMRAM] unsigned char 
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  1    wreg      void 
  5251 ;; Registers used:
  5252 ;;		wreg, status,2, status,0, cstack
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/2
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5262 ;;Total ram usage:        1 bytes
  5263 ;; Hardware stack levels used: 1
  5264 ;; Hardware stack levels required when called: 5
  5265 ;; This function calls:
  5266 ;;		_I2C_ENVIA_LCD_CMD
  5267 ;; This function is called by:
  5268 ;;		_I2C_LCD_INIT
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           	psect	text5
  5273   003440                     __ptext5:
  5274                           	callstack 0
  5275   003440                     _I2C_CURSOR_ONOFF:
  5276                           	callstack 120
  5277                           
  5278                           ;incstack = 0
  5279                           ;I2C_CURSOR_ONOFF@estado stored from wreg
  5280   003440  6E0D               	movwf	I2C_CURSOR_ONOFF@estado^(0+1280),c
  5281                           
  5282                           ;I2C_LCD.c: 138:  if(estado == 0) I2C_ENVIA_LCD_CMD(0x0E);
  5283   003442  500D               	movf	I2C_CURSOR_ONOFF@estado^(0+1280),w,c
  5284   003444  A4D8               	btfss	status,2,c
  5285   003446  D003               	goto	l1887
  5286   003448  0E0E               	movlw	14
  5287   00344A  EC08  F018         	call	_I2C_ENVIA_LCD_CMD
  5288   00344E                     l1887:
  5289                           
  5290                           ;I2C_LCD.c: 139:  if(estado == 1) I2C_ENVIA_LCD_CMD(0x0C);
  5291   00344E  040D               	decf	I2C_CURSOR_ONOFF@estado^(0+1280),w,c
  5292   003450  A4D8               	btfss	status,2,c
  5293   003452  0012               	return	
  5294   003454  0E0C               	movlw	12
  5295   003456  EC08  F018         	call	_I2C_ENVIA_LCD_CMD
  5296   00345A  0012               	return		;funcret
  5297   00345C                     __end_of_I2C_CURSOR_ONOFF:
  5298                           	callstack 0
  5299                           
  5300 ;; *************** function _I2C_CURSOR_HOME *****************
  5301 ;; Defined at:
  5302 ;;		line 117 in file "I2C_LCD.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;		None
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;		None
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  1    wreg      void 
  5309 ;; Registers used:
  5310 ;;		wreg, status,2, status,0, cstack
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/2
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5320 ;;Total ram usage:        0 bytes
  5321 ;; Hardware stack levels used: 1
  5322 ;; Hardware stack levels required when called: 5
  5323 ;; This function calls:
  5324 ;;		_I2C_ENVIA_LCD_CMD
  5325 ;; This function is called by:
  5326 ;;		_I2C_LCD_INIT
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text6
  5331   00348A                     __ptext6:
  5332                           	callstack 0
  5333   00348A                     _I2C_CURSOR_HOME:
  5334                           	callstack 120
  5335                           
  5336                           ;I2C_LCD.c: 118:  I2C_ENVIA_LCD_CMD(0x02);
  5337                           
  5338                           ;incstack = 0
  5339   00348A  0E02               	movlw	2
  5340   00348C  EC08  F018         	call	_I2C_ENVIA_LCD_CMD
  5341   003490  0012               	return		;funcret
  5342   003492                     __end_of_I2C_CURSOR_HOME:
  5343                           	callstack 0
  5344                           
  5345 ;; *************** function _I2C_BORRAR_LCD *****************
  5346 ;; Defined at:
  5347 ;;		line 176 in file "I2C_LCD.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;		None
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;		None
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  1    wreg      void 
  5354 ;; Registers used:
  5355 ;;		wreg, status,2, status,0, cstack
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5365 ;;Total ram usage:        0 bytes
  5366 ;; Hardware stack levels used: 1
  5367 ;; Hardware stack levels required when called: 5
  5368 ;; This function calls:
  5369 ;;		_I2C_ENVIA_LCD_CMD
  5370 ;; This function is called by:
  5371 ;;		_I2C_LCD_INIT
  5372 ;;		_main
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text7
  5377   003492                     __ptext7:
  5378                           	callstack 0
  5379   003492                     _I2C_BORRAR_LCD:
  5380                           	callstack 120
  5381                           
  5382                           ;I2C_LCD.c: 177:  I2C_ENVIA_LCD_CMD(0x01);
  5383                           
  5384                           ;incstack = 0
  5385   003492  0E01               	movlw	1
  5386   003494  EC08  F018         	call	_I2C_ENVIA_LCD_CMD
  5387   003498  0012               	return		;funcret
  5388   00349A                     __end_of_I2C_BORRAR_LCD:
  5389                           	callstack 0
  5390                           
  5391 ;; *************** function _I2C_ENVIA_LCD_CMD *****************
  5392 ;; Defined at:
  5393 ;;		line 180 in file "I2C_LCD.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;  command         1    wreg     unsigned char 
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;  command         1    9[COMRAM] unsigned char 
  5398 ;;  lownibble       1   11[COMRAM] unsigned char 
  5399 ;;  highnibble      1   10[COMRAM] unsigned char 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  1    wreg      void 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0, cstack
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5410 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5412 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5413 ;;Total ram usage:        4 bytes
  5414 ;; Hardware stack levels used: 1
  5415 ;; Hardware stack levels required when called: 4
  5416 ;; This function calls:
  5417 ;;		_I2C1_WRITESINGLEBYTE
  5418 ;; This function is called by:
  5419 ;;		_I2C_POS_CURSOR
  5420 ;;		_I2C_CURSOR_HOME
  5421 ;;		_I2C_CURSOR_ONOFF
  5422 ;;		_I2C_BORRAR_LCD
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           	psect	text8
  5427   003010                     __ptext8:
  5428                           	callstack 0
  5429   003010                     _I2C_ENVIA_LCD_CMD:
  5430                           	callstack 121
  5431                           
  5432                           ;incstack = 0
  5433                           ;I2C_ENVIA_LCD_CMD@command stored from wreg
  5434   003010  6E0A               	movwf	I2C_ENVIA_LCD_CMD@command^(0+1280),c
  5435                           
  5436                           ;I2C_LCD.c: 181:     unsigned char highnibble;;I2C_LCD.c: 182:     unsigned char lownibb
      +                          le;;I2C_LCD.c: 184:     highnibble = (command & 0xF0) | 0x08;
  5437   003012  500A               	movf	I2C_ENVIA_LCD_CMD@command^(0+1280),w,c
  5438   003014  0BF0               	andlw	240
  5439   003016  0908               	iorlw	8
  5440   003018  6E0B               	movwf	I2C_ENVIA_LCD_CMD@highnibble^(0+1280),c
  5441                           
  5442                           ;I2C_LCD.c: 185:     lownibble = (unsigned char)(((command & 0x0F)<<4)| 0x08);
  5443   00301A  C50A  F509         	movff	I2C_ENVIA_LCD_CMD@command,??_I2C_ENVIA_LCD_CMD
  5444   00301E  0E0F               	movlw	15
  5445   003020  1609               	andwf	??_I2C_ENVIA_LCD_CMD^(0+1280),f,c
  5446   003022  3809               	swapf	??_I2C_ENVIA_LCD_CMD^(0+1280),w,c
  5447   003024  0BF0               	andlw	240
  5448   003026  0908               	iorlw	8
  5449   003028  6E0C               	movwf	I2C_ENVIA_LCD_CMD@lownibble^(0+1280),c
  5450                           
  5451                           ;I2C_LCD.c: 187:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(highnibble | 0x04));
  5452   00302A  500B               	movf	I2C_ENVIA_LCD_CMD@highnibble^(0+1280),w,c
  5453   00302C  0904               	iorlw	4
  5454   00302E  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5455   003030  0E27               	movlw	39
  5456   003032  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5457                           
  5458                           ; BSR set to: 2
  5459                           ;I2C_LCD.c: 188:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5460   003036  0E35               	movlw	53
  5461   003038                     u1657:
  5462   003038  2EE8               	decfsz	wreg,f,c
  5463   00303A  D7FE               	bra	u1657
  5464   00303C  0000               	nop	
  5465                           
  5466                           ;I2C_LCD.c: 189:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,highnibble);
  5467   00303E  C50B  F507         	movff	I2C_ENVIA_LCD_CMD@highnibble,I2C1_WRITESINGLEBYTE@dato
  5468   003042  0E27               	movlw	39
  5469   003044  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5470                           
  5471                           ; BSR set to: 2
  5472                           ;I2C_LCD.c: 190:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5473   003048  0E35               	movlw	53
  5474   00304A                     u1667:
  5475   00304A  2EE8               	decfsz	wreg,f,c
  5476   00304C  D7FE               	bra	u1667
  5477   00304E  0000               	nop	
  5478                           
  5479                           ;I2C_LCD.c: 192:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(lownibble | 0x04));
  5480   003050  500C               	movf	I2C_ENVIA_LCD_CMD@lownibble^(0+1280),w,c
  5481   003052  0904               	iorlw	4
  5482   003054  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5483   003056  0E27               	movlw	39
  5484   003058  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5485                           
  5486                           ; BSR set to: 2
  5487                           ;I2C_LCD.c: 193:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5488   00305C  0E35               	movlw	53
  5489   00305E                     u1677:
  5490   00305E  2EE8               	decfsz	wreg,f,c
  5491   003060  D7FE               	bra	u1677
  5492   003062  0000               	nop	
  5493                           
  5494                           ;I2C_LCD.c: 194:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,lownibble);
  5495   003064  C50C  F507         	movff	I2C_ENVIA_LCD_CMD@lownibble,I2C1_WRITESINGLEBYTE@dato
  5496   003068  0E27               	movlw	39
  5497   00306A  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  5498                           
  5499                           ; BSR set to: 2
  5500                           ;I2C_LCD.c: 195:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5501   00306E  0E35               	movlw	53
  5502   003070                     u1687:
  5503   003070  2EE8               	decfsz	wreg,f,c
  5504   003072  D7FE               	bra	u1687
  5505   003074  0000               	nop	
  5506   003076  0012               	return		;funcret
  5507   003078                     __end_of_I2C_ENVIA_LCD_CMD:
  5508                           	callstack 0
  5509                           
  5510 ;; *************** function _I2C1_INIT *****************
  5511 ;; Defined at:
  5512 ;;		line 34 in file "I2C_LCD.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;		None
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;		None
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  1    wreg      void 
  5519 ;; Registers used:
  5520 ;;		wreg, status,2
  5521 ;; Tracked objects:
  5522 ;;		On entry : 3F/0
  5523 ;;		On exit  : 3F/2
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5530 ;;Total ram usage:        0 bytes
  5531 ;; Hardware stack levels used: 1
  5532 ;; Hardware stack levels required when called: 3
  5533 ;; This function calls:
  5534 ;;		Nothing
  5535 ;; This function is called by:
  5536 ;;		_I2C_LCD_INIT
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           	psect	text9
  5541   003298                     __ptext9:
  5542                           	callstack 0
  5543   003298                     _I2C1_INIT:
  5544                           	callstack 122
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;I2C_LCD.c: 36:     TRISCbits.TRISC3 = 0;
  5548                           
  5549                           ;incstack = 0
  5550   003298  96C8               	bcf	200,3,c	;volatile
  5551                           
  5552                           ;I2C_LCD.c: 37:     TRISCbits.TRISC4 = 0;
  5553   00329A  98C8               	bcf	200,4,c	;volatile
  5554                           
  5555                           ;I2C_LCD.c: 38:     ANSELCbits.ANSELC3 = 0;
  5556   00329C  0104               	movlb	4	; () banked
  5557   00329E  9710               	bcf	16,3,b	;volatile
  5558                           
  5559                           ;I2C_LCD.c: 39:     ANSELCbits.ANSELC4 = 0;
  5560   0032A0  9910               	bcf	16,4,b	;volatile
  5561                           
  5562                           ;I2C_LCD.c: 40:     ODCONCbits.ODCC3 = 1;
  5563   0032A2  8712               	bsf	18,3,b	;volatile
  5564                           
  5565                           ;I2C_LCD.c: 41:     ODCONCbits.ODCC4 = 1;
  5566   0032A4  8912               	bsf	18,4,b	;volatile
  5567                           
  5568                           ; BSR set to: 4
  5569                           ;I2C_LCD.c: 43:     RC3PPS = 0x37;
  5570   0032A6  0E37               	movlw	55
  5571   0032A8  0102               	movlb	2	; () banked
  5572   0032AA  6F14               	movwf	20,b	;volatile
  5573                           
  5574                           ;I2C_LCD.c: 44:     RC4PPS = 0x38;
  5575   0032AC  0E38               	movlw	56
  5576   0032AE  6F15               	movwf	21,b	;volatile
  5577                           
  5578                           ;I2C_LCD.c: 46:     RC3I2Cbits.PU = 2;
  5579   0032B0  5187               	movf	135,w,b	;volatile
  5580   0032B2  0BCF               	andlw	-49
  5581   0032B4  0920               	iorlw	32
  5582   0032B6  6F87               	movwf	135,b	;volatile
  5583                           
  5584                           ;I2C_LCD.c: 47:     RC3I2Cbits.TH = 1;
  5585   0032B8  5187               	movf	135,w,b	;volatile
  5586   0032BA  0BFC               	andlw	-4
  5587   0032BC  0901               	iorlw	1
  5588   0032BE  6F87               	movwf	135,b	;volatile
  5589                           
  5590                           ;I2C_LCD.c: 48:     RC4I2Cbits.PU = 2;
  5591   0032C0  5186               	movf	134,w,b	;volatile
  5592   0032C2  0BCF               	andlw	-49
  5593   0032C4  0920               	iorlw	32
  5594   0032C6  6F86               	movwf	134,b	;volatile
  5595                           
  5596                           ;I2C_LCD.c: 49:     RC4I2Cbits.TH = 1;
  5597   0032C8  5186               	movf	134,w,b	;volatile
  5598   0032CA  0BFC               	andlw	-4
  5599   0032CC  0901               	iorlw	1
  5600   0032CE  6F86               	movwf	134,b	;volatile
  5601                           
  5602                           ; BSR set to: 2
  5603                           ;I2C_LCD.c: 50:     I2C1CON0bits.EN = 1;
  5604   0032D0  8F94               	bsf	148,7,b	;volatile
  5605                           
  5606                           ;I2C_LCD.c: 51:     I2C1CLKbits.CLK = 3;
  5607   0032D2  0E03               	movlw	3
  5608   0032D4  6F9C               	movwf	156,b	;volatile
  5609                           
  5610                           ;I2C_LCD.c: 52:     I2C1CON0bits.MODE = 0x4;
  5611   0032D6  5194               	movf	148,w,b	;volatile
  5612   0032D8  0BF8               	andlw	-8
  5613   0032DA  0904               	iorlw	4
  5614   0032DC  6F94               	movwf	148,b	;volatile
  5615                           
  5616                           ; BSR set to: 2
  5617                           ;I2C_LCD.c: 53:     I2C1CON2bits.ABD = 0;
  5618   0032DE  9996               	bcf	150,4,b	;volatile
  5619                           
  5620                           ; BSR set to: 2
  5621   0032E0  0012               	return		;funcret
  5622   0032E2                     __end_of_I2C1_INIT:
  5623                           	callstack 0
  5624                           
  5625 ;; *************** function _I2C_LCD_ESCRIBE_VAR_INT *****************
  5626 ;; Defined at:
  5627 ;;		line 354 in file "I2C_LCD.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  numero          2   18[COMRAM] unsigned int 
  5630 ;;  n_digitos       1   20[COMRAM] unsigned char 
  5631 ;;  punto           1   21[COMRAM] unsigned char 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  unidad          1   26[COMRAM] unsigned char 
  5634 ;;  decena          1   25[COMRAM] unsigned char 
  5635 ;;  centena         1   24[COMRAM] unsigned char 
  5636 ;;  millar          1   23[COMRAM] unsigned char 
  5637 ;;  d_millar        1   22[COMRAM] unsigned char 
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  1    wreg      void 
  5640 ;; Registers used:
  5641 ;;		wreg, status,2, status,0, cstack
  5642 ;; Tracked objects:
  5643 ;;		On entry : 0/0
  5644 ;;		On exit  : 0/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5647 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5648 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5650 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5651 ;;Total ram usage:        9 bytes
  5652 ;; Hardware stack levels used: 1
  5653 ;; Hardware stack levels required when called: 5
  5654 ;; This function calls:
  5655 ;;		_I2C_ENVIA_LCD_DATA
  5656 ;;		___lwdiv
  5657 ;;		___lwmod
  5658 ;; This function is called by:
  5659 ;;		_main
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text10
  5664   00298C                     __ptext10:
  5665                           	callstack 0
  5666   00298C                     _I2C_LCD_ESCRIBE_VAR_INT:
  5667                           	callstack 121
  5668                           
  5669                           ;I2C_LCD.c: 355:     unsigned char d_millar, millar, centena, decena, unidad;;I2C_LCD.c:
      +                           356:     d_millar = numero / 10000;
  5670                           
  5671                           ; BSR set to: 2
  5672                           ;incstack = 0
  5673   00298C  C513  F50C         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  5674   002990  C514  F50D         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  5675   002994  0E27               	movlw	39
  5676   002996  6E0F               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5677   002998  0E10               	movlw	16
  5678   00299A  6E0E               	movwf	___lwdiv@divisor^(0+1280),c
  5679   00299C  EC23  F019         	call	___lwdiv	;wreg free
  5680   0029A0  500C               	movf	?___lwdiv^(0+1280),w,c
  5681   0029A2  6E17               	movwf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  5682                           
  5683                           ;I2C_LCD.c: 357:     millar = (numero % 10000) / 1000;
  5684   0029A4  0E27               	movlw	39
  5685   0029A6  6E0A               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5686   0029A8  0E10               	movlw	16
  5687   0029AA  6E09               	movwf	___lwmod@divisor^(0+1280),c
  5688   0029AC  C513  F507         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5689   0029B0  C514  F508         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5690   0029B4  EC94  F019         	call	___lwmod	;wreg free
  5691   0029B8  C507  F50C         	movff	?___lwmod,___lwdiv@dividend
  5692   0029BC  C508  F50D         	movff	?___lwmod+1,___lwdiv@dividend+1
  5693   0029C0  0E03               	movlw	3
  5694   0029C2  6E0F               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5695   0029C4  0EE8               	movlw	232
  5696   0029C6  6E0E               	movwf	___lwdiv@divisor^(0+1280),c
  5697   0029C8  EC23  F019         	call	___lwdiv	;wreg free
  5698   0029CC  500C               	movf	?___lwdiv^(0+1280),w,c
  5699   0029CE  6E18               	movwf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),c
  5700                           
  5701                           ;I2C_LCD.c: 358:     centena = (numero % 1000) / 100;
  5702   0029D0  0E03               	movlw	3
  5703   0029D2  6E0A               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5704   0029D4  0EE8               	movlw	232
  5705   0029D6  6E09               	movwf	___lwmod@divisor^(0+1280),c
  5706   0029D8  C513  F507         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5707   0029DC  C514  F508         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5708   0029E0  EC94  F019         	call	___lwmod	;wreg free
  5709   0029E4  C507  F50C         	movff	?___lwmod,___lwdiv@dividend
  5710   0029E8  C508  F50D         	movff	?___lwmod+1,___lwdiv@dividend+1
  5711   0029EC  0E00               	movlw	0
  5712   0029EE  6E0F               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5713   0029F0  0E64               	movlw	100
  5714   0029F2  6E0E               	movwf	___lwdiv@divisor^(0+1280),c
  5715   0029F4  EC23  F019         	call	___lwdiv	;wreg free
  5716   0029F8  500C               	movf	?___lwdiv^(0+1280),w,c
  5717   0029FA  6E19               	movwf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),c
  5718                           
  5719                           ;I2C_LCD.c: 359:     decena = (numero % 100) / 10;
  5720   0029FC  0E00               	movlw	0
  5721   0029FE  6E0A               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5722   002A00  0E64               	movlw	100
  5723   002A02  6E09               	movwf	___lwmod@divisor^(0+1280),c
  5724   002A04  C513  F507         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5725   002A08  C514  F508         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5726   002A0C  EC94  F019         	call	___lwmod	;wreg free
  5727   002A10  C507  F50C         	movff	?___lwmod,___lwdiv@dividend
  5728   002A14  C508  F50D         	movff	?___lwmod+1,___lwdiv@dividend+1
  5729   002A18  0E00               	movlw	0
  5730   002A1A  6E0F               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5731   002A1C  0E0A               	movlw	10
  5732   002A1E  6E0E               	movwf	___lwdiv@divisor^(0+1280),c
  5733   002A20  EC23  F019         	call	___lwdiv	;wreg free
  5734   002A24  500C               	movf	?___lwdiv^(0+1280),w,c
  5735   002A26  6E1A               	movwf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),c
  5736                           
  5737                           ;I2C_LCD.c: 360:     unidad = numero % 10;
  5738   002A28  C513  F507         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5739   002A2C  C514  F508         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5740   002A30  0E00               	movlw	0
  5741   002A32  6E0A               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5742   002A34  0E0A               	movlw	10
  5743   002A36  6E09               	movwf	___lwmod@divisor^(0+1280),c
  5744   002A38  EC94  F019         	call	___lwmod	;wreg free
  5745   002A3C  5007               	movf	?___lwmod^(0+1280),w,c
  5746   002A3E  6E1B               	movwf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),c
  5747                           
  5748                           ;I2C_LCD.c: 361:     switch(n_digitos){
  5749   002A40  D139               	goto	l2379
  5750   002A42                     l2331:
  5751                           
  5752                           ;I2C_LCD.c: 363:             I2C_ENVIA_LCD_DATA(unidad+0x30);
  5753   002A42  501B               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5754   002A44  0F30               	addlw	48
  5755   002A46  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5756                           
  5757                           ;I2C_LCD.c: 364:             break;
  5758   002A4A  0012               	return	
  5759   002A4C                     l2333:
  5760                           
  5761                           ;I2C_LCD.c: 366:             if(punto == 0){
  5762   002A4C  5016               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5763   002A4E  A4D8               	btfss	status,2,c
  5764   002A50  D009               	goto	l2337
  5765                           
  5766                           ;I2C_LCD.c: 367:                 I2C_ENVIA_LCD_DATA(decena+0x30);
  5767   002A52  501A               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5768   002A54  0F30               	addlw	48
  5769   002A56  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5770                           
  5771                           ;I2C_LCD.c: 368:                 I2C_ENVIA_LCD_DATA(unidad+0x30);
  5772   002A5A  501B               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5773   002A5C  0F30               	addlw	48
  5774   002A5E  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5775                           
  5776                           ;I2C_LCD.c: 369:             }
  5777   002A62  0012               	return	
  5778   002A64                     l2337:
  5779   002A64  0416               	decf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5780   002A66  A4D8               	btfss	status,2,c
  5781   002A68  0012               	return	
  5782                           
  5783                           ;I2C_LCD.c: 371:                 I2C_ENVIA_LCD_DATA(decena+0x30);
  5784   002A6A  501A               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5785   002A6C  0F30               	addlw	48
  5786   002A6E  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5787                           
  5788                           ;I2C_LCD.c: 372:                 I2C_ENVIA_LCD_DATA('.');
  5789   002A72  0E2E               	movlw	46
  5790   002A74  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5791                           
  5792                           ;I2C_LCD.c: 373:                 I2C_ENVIA_LCD_DATA(unidad+0x30);
  5793   002A78  501B               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5794   002A7A  0F30               	addlw	48
  5795   002A7C  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5796   002A80  0012               	return	
  5797   002A82                     l2341:
  5798                           
  5799                           ;I2C_LCD.c: 379:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5800   002A82  5019               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5801   002A84  0F30               	addlw	48
  5802   002A86  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5803                           
  5804                           ;I2C_LCD.c: 380:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5805   002A8A  501A               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5806   002A8C  0F30               	addlw	48
  5807   002A8E  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5808                           
  5809                           ;I2C_LCD.c: 381:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5810   002A92  501B               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5811   002A94  0F30               	addlw	48
  5812   002A96  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5813                           
  5814                           ;I2C_LCD.c: 382:                     break;
  5815   002A9A  0012               	return	
  5816   002A9C                     l2343:
  5817                           
  5818                           ;I2C_LCD.c: 384:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5819   002A9C  5019               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5820   002A9E  0F30               	addlw	48
  5821   002AA0  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5822                           
  5823                           ;I2C_LCD.c: 385:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5824   002AA4  501A               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5825   002AA6  0F30               	addlw	48
  5826   002AA8  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5827                           
  5828                           ;I2C_LCD.c: 386:                     I2C_ENVIA_LCD_DATA('.');
  5829   002AAC  0E2E               	movlw	46
  5830   002AAE  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5831                           
  5832                           ;I2C_LCD.c: 387:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5833   002AB2  501B               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5834   002AB4  0F30               	addlw	48
  5835   002AB6  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5836                           
  5837                           ;I2C_LCD.c: 388:                     break;
  5838   002ABA  0012               	return	
  5839   002ABC                     l2345:
  5840                           
  5841                           ;I2C_LCD.c: 390:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5842   002ABC  5019               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5843   002ABE  0F30               	addlw	48
  5844   002AC0  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5845                           
  5846                           ;I2C_LCD.c: 391:                     I2C_ENVIA_LCD_DATA('.');
  5847   002AC4  0E2E               	movlw	46
  5848   002AC6  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5849                           
  5850                           ;I2C_LCD.c: 392:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5851   002ACA  501A               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5852   002ACC  0F30               	addlw	48
  5853   002ACE  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5854                           
  5855                           ;I2C_LCD.c: 393:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5856   002AD2  501B               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5857   002AD4  0F30               	addlw	48
  5858   002AD6  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5859                           
  5860                           ;I2C_LCD.c: 394:                     break;
  5861   002ADA  0012               	return	
  5862   002ADC                     l2349:
  5863   002ADC  5016               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5864                           
  5865                           ; Switch size 1, requested type "simple"
  5866                           ; Number of cases is 3, Range of values is 0 to 2
  5867                           ; switch strategies available:
  5868                           ; Name         Instructions Cycles
  5869                           ; simple_byte           10     6 (average)
  5870                           ;	Chosen strategy is simple_byte
  5871   002ADE  0A00               	xorlw	0	; case 0
  5872   002AE0  B4D8               	btfsc	status,2,c
  5873   002AE2  D7CF               	goto	l2341
  5874   002AE4  0A01               	xorlw	1	; case 1
  5875   002AE6  B4D8               	btfsc	status,2,c
  5876   002AE8  D7D9               	goto	l2343
  5877   002AEA  0A03               	xorlw	3	; case 2
  5878   002AEC  A4D8               	btfss	status,2,c
  5879   002AEE  0012               	return	
  5880   002AF0  D7E5               	goto	l2345
  5881   002AF2                     l2351:
  5882                           
  5883                           ;I2C_LCD.c: 400:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5884   002AF2  5018               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5885   002AF4  0F30               	addlw	48
  5886   002AF6  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5887                           
  5888                           ;I2C_LCD.c: 401:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5889   002AFA  5019               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5890   002AFC  0F30               	addlw	48
  5891   002AFE  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5892                           
  5893                           ;I2C_LCD.c: 402:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5894   002B02  501A               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5895   002B04  0F30               	addlw	48
  5896   002B06  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5897                           
  5898                           ;I2C_LCD.c: 403:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5899   002B0A  501B               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5900   002B0C  0F30               	addlw	48
  5901   002B0E  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5902                           
  5903                           ;I2C_LCD.c: 404:                     break;
  5904   002B12  0012               	return	
  5905   002B14                     l2353:
  5906                           
  5907                           ;I2C_LCD.c: 406:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5908   002B14  5018               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5909   002B16  0F30               	addlw	48
  5910   002B18  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5911                           
  5912                           ;I2C_LCD.c: 407:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5913   002B1C  5019               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5914   002B1E  0F30               	addlw	48
  5915   002B20  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5916                           
  5917                           ;I2C_LCD.c: 408:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5918   002B24  501A               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5919   002B26  0F30               	addlw	48
  5920   002B28  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5921                           
  5922                           ;I2C_LCD.c: 409:                     I2C_ENVIA_LCD_DATA('.');
  5923   002B2C  0E2E               	movlw	46
  5924   002B2E  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5925                           
  5926                           ;I2C_LCD.c: 410:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5927   002B32  501B               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5928   002B34  0F30               	addlw	48
  5929   002B36  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5930                           
  5931                           ;I2C_LCD.c: 411:                     break;
  5932   002B3A  0012               	return	
  5933   002B3C                     l2355:
  5934                           
  5935                           ;I2C_LCD.c: 413:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5936   002B3C  5018               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5937   002B3E  0F30               	addlw	48
  5938   002B40  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5939                           
  5940                           ;I2C_LCD.c: 414:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5941   002B44  5019               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5942   002B46  0F30               	addlw	48
  5943   002B48  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5944                           
  5945                           ;I2C_LCD.c: 415:                     I2C_ENVIA_LCD_DATA('.');
  5946   002B4C  0E2E               	movlw	46
  5947   002B4E  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5948                           
  5949                           ;I2C_LCD.c: 416:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5950   002B52  501A               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5951   002B54  0F30               	addlw	48
  5952   002B56  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5953                           
  5954                           ;I2C_LCD.c: 417:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5955   002B5A  501B               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5956   002B5C  0F30               	addlw	48
  5957   002B5E  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5958                           
  5959                           ;I2C_LCD.c: 418:                     break;
  5960   002B62  0012               	return	
  5961   002B64                     l2357:
  5962                           
  5963                           ;I2C_LCD.c: 420:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5964   002B64  5018               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5965   002B66  0F30               	addlw	48
  5966   002B68  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5967                           
  5968                           ;I2C_LCD.c: 421:                     I2C_ENVIA_LCD_DATA('.');
  5969   002B6C  0E2E               	movlw	46
  5970   002B6E  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5971                           
  5972                           ;I2C_LCD.c: 422:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5973   002B72  5019               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5974   002B74  0F30               	addlw	48
  5975   002B76  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5976                           
  5977                           ;I2C_LCD.c: 423:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5978   002B7A  501A               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5979   002B7C  0F30               	addlw	48
  5980   002B7E  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5981                           
  5982                           ;I2C_LCD.c: 424:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5983   002B82  501B               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5984   002B84  0F30               	addlw	48
  5985   002B86  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  5986                           
  5987                           ;I2C_LCD.c: 425:                     break;
  5988   002B8A  0012               	return	
  5989   002B8C                     l2361:
  5990   002B8C  5016               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5991                           
  5992                           ; Switch size 1, requested type "simple"
  5993                           ; Number of cases is 4, Range of values is 0 to 3
  5994                           ; switch strategies available:
  5995                           ; Name         Instructions Cycles
  5996                           ; simple_byte           13     7 (average)
  5997                           ;	Chosen strategy is simple_byte
  5998   002B8E  0A00               	xorlw	0	; case 0
  5999   002B90  B4D8               	btfsc	status,2,c
  6000   002B92  D7AF               	goto	l2351
  6001   002B94  0A01               	xorlw	1	; case 1
  6002   002B96  B4D8               	btfsc	status,2,c
  6003   002B98  D7BD               	goto	l2353
  6004   002B9A  0A03               	xorlw	3	; case 2
  6005   002B9C  B4D8               	btfsc	status,2,c
  6006   002B9E  D7CE               	goto	l2355
  6007   002BA0  0A01               	xorlw	1	; case 3
  6008   002BA2  A4D8               	btfss	status,2,c
  6009   002BA4  0012               	return	
  6010   002BA6  D7DE               	goto	l2357
  6011   002BA8                     l2363:
  6012                           
  6013                           ;I2C_LCD.c: 431:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  6014   002BA8  5017               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  6015   002BAA  0F30               	addlw	48
  6016   002BAC  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6017                           
  6018                           ;I2C_LCD.c: 432:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  6019   002BB0  5018               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  6020   002BB2  0F30               	addlw	48
  6021   002BB4  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6022                           
  6023                           ;I2C_LCD.c: 433:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  6024   002BB8  5019               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  6025   002BBA  0F30               	addlw	48
  6026   002BBC  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6027                           
  6028                           ;I2C_LCD.c: 434:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  6029   002BC0  501A               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  6030   002BC2  0F30               	addlw	48
  6031   002BC4  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6032                           
  6033                           ;I2C_LCD.c: 435:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  6034   002BC8  501B               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  6035   002BCA  0F30               	addlw	48
  6036   002BCC  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6037                           
  6038                           ;I2C_LCD.c: 436:                     break;
  6039   002BD0  0012               	return	
  6040   002BD2                     l2365:
  6041                           
  6042                           ;I2C_LCD.c: 438:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  6043   002BD2  5017               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  6044   002BD4  0F30               	addlw	48
  6045   002BD6  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6046                           
  6047                           ;I2C_LCD.c: 439:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  6048   002BDA  5018               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  6049   002BDC  0F30               	addlw	48
  6050   002BDE  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6051                           
  6052                           ;I2C_LCD.c: 440:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  6053   002BE2  5019               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  6054   002BE4  0F30               	addlw	48
  6055   002BE6  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6056                           
  6057                           ;I2C_LCD.c: 441:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  6058   002BEA  501A               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  6059   002BEC  0F30               	addlw	48
  6060   002BEE  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6061                           
  6062                           ;I2C_LCD.c: 442:                     I2C_ENVIA_LCD_DATA('.');
  6063   002BF2  0E2E               	movlw	46
  6064   002BF4  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6065                           
  6066                           ;I2C_LCD.c: 443:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  6067   002BF8  501B               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  6068   002BFA  0F30               	addlw	48
  6069   002BFC  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6070                           
  6071                           ;I2C_LCD.c: 444:                     break;
  6072   002C00  0012               	return	
  6073   002C02                     l2367:
  6074                           
  6075                           ;I2C_LCD.c: 446:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  6076   002C02  5017               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  6077   002C04  0F30               	addlw	48
  6078   002C06  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6079                           
  6080                           ;I2C_LCD.c: 447:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  6081   002C0A  5018               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  6082   002C0C  0F30               	addlw	48
  6083   002C0E  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6084                           
  6085                           ;I2C_LCD.c: 448:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  6086   002C12  5019               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  6087   002C14  0F30               	addlw	48
  6088   002C16  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6089                           
  6090                           ;I2C_LCD.c: 449:                     I2C_ENVIA_LCD_DATA('.');
  6091   002C1A  0E2E               	movlw	46
  6092   002C1C  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6093                           
  6094                           ;I2C_LCD.c: 450:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  6095   002C20  501A               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  6096   002C22  0F30               	addlw	48
  6097   002C24  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6098                           
  6099                           ;I2C_LCD.c: 451:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  6100   002C28  501B               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  6101   002C2A  0F30               	addlw	48
  6102   002C2C  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6103                           
  6104                           ;I2C_LCD.c: 452:                     break;
  6105   002C30  0012               	return	
  6106   002C32                     l2369:
  6107                           
  6108                           ;I2C_LCD.c: 454:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  6109   002C32  5017               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  6110   002C34  0F30               	addlw	48
  6111   002C36  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6112                           
  6113                           ;I2C_LCD.c: 455:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  6114   002C3A  5018               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  6115   002C3C  0F30               	addlw	48
  6116   002C3E  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6117                           
  6118                           ;I2C_LCD.c: 456:                     I2C_ENVIA_LCD_DATA('.');
  6119   002C42  0E2E               	movlw	46
  6120   002C44  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6121                           
  6122                           ;I2C_LCD.c: 457:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  6123   002C48  5019               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  6124   002C4A  0F30               	addlw	48
  6125   002C4C  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6126                           
  6127                           ;I2C_LCD.c: 458:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  6128   002C50  501A               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  6129   002C52  0F30               	addlw	48
  6130   002C54  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6131                           
  6132                           ;I2C_LCD.c: 459:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  6133   002C58  501B               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  6134   002C5A  0F30               	addlw	48
  6135   002C5C  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6136                           
  6137                           ;I2C_LCD.c: 460:                     break;
  6138   002C60  0012               	return	
  6139   002C62                     l2371:
  6140                           
  6141                           ;I2C_LCD.c: 462:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  6142   002C62  5017               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  6143   002C64  0F30               	addlw	48
  6144   002C66  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6145                           
  6146                           ;I2C_LCD.c: 463:                     I2C_ENVIA_LCD_DATA('.');
  6147   002C6A  0E2E               	movlw	46
  6148   002C6C  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6149                           
  6150                           ;I2C_LCD.c: 464:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  6151   002C70  5018               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  6152   002C72  0F30               	addlw	48
  6153   002C74  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6154                           
  6155                           ;I2C_LCD.c: 465:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  6156   002C78  5019               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  6157   002C7A  0F30               	addlw	48
  6158   002C7C  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6159                           
  6160                           ;I2C_LCD.c: 466:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  6161   002C80  501A               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  6162   002C82  0F30               	addlw	48
  6163   002C84  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6164                           
  6165                           ;I2C_LCD.c: 467:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  6166   002C88  501B               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  6167   002C8A  0F30               	addlw	48
  6168   002C8C  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6169                           
  6170                           ;I2C_LCD.c: 468:                     break;
  6171   002C90  0012               	return	
  6172   002C92                     l2375:
  6173   002C92  5016               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  6174                           
  6175                           ; Switch size 1, requested type "simple"
  6176                           ; Number of cases is 5, Range of values is 0 to 4
  6177                           ; switch strategies available:
  6178                           ; Name         Instructions Cycles
  6179                           ; simple_byte           16     9 (average)
  6180                           ;	Chosen strategy is simple_byte
  6181   002C94  0A00               	xorlw	0	; case 0
  6182   002C96  B4D8               	btfsc	status,2,c
  6183   002C98  D787               	goto	l2363
  6184   002C9A  0A01               	xorlw	1	; case 1
  6185   002C9C  B4D8               	btfsc	status,2,c
  6186   002C9E  D799               	goto	l2365
  6187   002CA0  0A03               	xorlw	3	; case 2
  6188   002CA2  B4D8               	btfsc	status,2,c
  6189   002CA4  D7AE               	goto	l2367
  6190   002CA6  0A01               	xorlw	1	; case 3
  6191   002CA8  B4D8               	btfsc	status,2,c
  6192   002CAA  D7C3               	goto	l2369
  6193   002CAC  0A07               	xorlw	7	; case 4
  6194   002CAE  A4D8               	btfss	status,2,c
  6195   002CB0  0012               	return	
  6196   002CB2  D7D7               	goto	l2371
  6197   002CB4                     l2379:
  6198   002CB4  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  6199                           
  6200                           ; Switch size 1, requested type "simple"
  6201                           ; Number of cases is 5, Range of values is 1 to 5
  6202                           ; switch strategies available:
  6203                           ; Name         Instructions Cycles
  6204                           ; simple_byte           16     9 (average)
  6205                           ;	Chosen strategy is simple_byte
  6206   002CB6  0A01               	xorlw	1	; case 1
  6207   002CB8  B4D8               	btfsc	status,2,c
  6208   002CBA  D6C3               	goto	l2331
  6209   002CBC  0A03               	xorlw	3	; case 2
  6210   002CBE  B4D8               	btfsc	status,2,c
  6211   002CC0  D6C5               	goto	l2333
  6212   002CC2  0A01               	xorlw	1	; case 3
  6213   002CC4  B4D8               	btfsc	status,2,c
  6214   002CC6  D70A               	goto	l2349
  6215   002CC8  0A07               	xorlw	7	; case 4
  6216   002CCA  B4D8               	btfsc	status,2,c
  6217   002CCC  D75F               	goto	l2361
  6218   002CCE  0A01               	xorlw	1	; case 5
  6219   002CD0  A4D8               	btfss	status,2,c
  6220   002CD2  0012               	return	
  6221   002CD4  D7DE               	goto	l2375
  6222   002CD6                     __end_of_I2C_LCD_ESCRIBE_VAR_INT:
  6223                           	callstack 0
  6224                           
  6225 ;; *************** function ___lwmod *****************
  6226 ;; Defined at:
  6227 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;  dividend        2    6[COMRAM] unsigned int 
  6230 ;;  divisor         2    8[COMRAM] unsigned int 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;  counter         1   10[COMRAM] unsigned char 
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  2    6[COMRAM] unsigned int 
  6235 ;; Registers used:
  6236 ;;		wreg, status,2, status,0
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6242 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6245 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6246 ;;Total ram usage:        5 bytes
  6247 ;; Hardware stack levels used: 1
  6248 ;; Hardware stack levels required when called: 3
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text11
  6257   003328                     __ptext11:
  6258                           	callstack 0
  6259   003328                     ___lwmod:
  6260                           	callstack 122
  6261                           
  6262                           ;incstack = 0
  6263   003328  5009               	movf	___lwmod@divisor^(0+1280),w,c
  6264   00332A  100A               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  6265   00332C  B4D8               	btfsc	status,2,c
  6266   00332E  D018               	goto	l949
  6267   003330  0E01               	movlw	1
  6268   003332  6E0B               	movwf	___lwmod@counter^(0+1280),c
  6269   003334  D004               	goto	l2105
  6270   003336                     l2103:
  6271   003336  90D8               	bcf	status,0,c
  6272   003338  3609               	rlcf	___lwmod@divisor^(0+1280),f,c
  6273   00333A  360A               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  6274   00333C  2A0B               	incf	___lwmod@counter^(0+1280),f,c
  6275   00333E                     l2105:
  6276   00333E  AE0A               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  6277   003340  D7FA               	goto	l2103
  6278   003342                     u1020:
  6279   003342  5009               	movf	___lwmod@divisor^(0+1280),w,c
  6280   003344  5C07               	subwf	___lwmod@dividend^(0+1280),w,c
  6281   003346  500A               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  6282   003348  5808               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  6283   00334A  A0D8               	btfss	status,0,c
  6284   00334C  D004               	goto	l2111
  6285   00334E  5009               	movf	___lwmod@divisor^(0+1280),w,c
  6286   003350  5E07               	subwf	___lwmod@dividend^(0+1280),f,c
  6287   003352  500A               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  6288   003354  5A08               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  6289   003356                     l2111:
  6290   003356  90D8               	bcf	status,0,c
  6291   003358  320A               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  6292   00335A  3209               	rrcf	___lwmod@divisor^(0+1280),f,c
  6293   00335C  2E0B               	decfsz	___lwmod@counter^(0+1280),f,c
  6294   00335E  D7F1               	goto	u1020
  6295   003360                     l949:
  6296   003360  C507  F507         	movff	___lwmod@dividend,?___lwmod
  6297   003364  C508  F508         	movff	___lwmod@dividend+1,?___lwmod+1
  6298   003368  0012               	return		;funcret
  6299   00336A                     __end_of___lwmod:
  6300                           	callstack 0
  6301                           
  6302 ;; *************** function ___lwdiv *****************
  6303 ;; Defined at:
  6304 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;  dividend        2   11[COMRAM] unsigned int 
  6307 ;;  divisor         2   13[COMRAM] unsigned int 
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;  quotient        2   15[COMRAM] unsigned int 
  6310 ;;  counter         1   17[COMRAM] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  2   11[COMRAM] unsigned int 
  6313 ;; Registers used:
  6314 ;;		wreg, status,2, status,0
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6320 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6321 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6323 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6324 ;;Total ram usage:        7 bytes
  6325 ;; Hardware stack levels used: 1
  6326 ;; Hardware stack levels required when called: 3
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  6331 ;;		_main
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text12
  6336   003246                     __ptext12:
  6337                           	callstack 0
  6338   003246                     ___lwdiv:
  6339                           	callstack 123
  6340                           
  6341                           ;incstack = 0
  6342   003246  0E00               	movlw	0
  6343   003248  6E11               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  6344   00324A  0E00               	movlw	0
  6345   00324C  6E10               	movwf	___lwdiv@quotient^(0+1280),c
  6346   00324E  500E               	movf	___lwdiv@divisor^(0+1280),w,c
  6347   003250  100F               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  6348   003252  B4D8               	btfsc	status,2,c
  6349   003254  D01C               	goto	l939
  6350   003256  0E01               	movlw	1
  6351   003258  6E12               	movwf	___lwdiv@counter^(0+1280),c
  6352   00325A  D004               	goto	l2085
  6353   00325C                     l2083:
  6354   00325C  90D8               	bcf	status,0,c
  6355   00325E  360E               	rlcf	___lwdiv@divisor^(0+1280),f,c
  6356   003260  360F               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  6357   003262  2A12               	incf	___lwdiv@counter^(0+1280),f,c
  6358   003264                     l2085:
  6359   003264  AE0F               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  6360   003266  D7FA               	goto	l2083
  6361   003268                     u990:
  6362   003268  90D8               	bcf	status,0,c
  6363   00326A  3610               	rlcf	___lwdiv@quotient^(0+1280),f,c
  6364   00326C  3611               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  6365   00326E  500E               	movf	___lwdiv@divisor^(0+1280),w,c
  6366   003270  5C0C               	subwf	___lwdiv@dividend^(0+1280),w,c
  6367   003272  500F               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  6368   003274  580D               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  6369   003276  A0D8               	btfss	status,0,c
  6370   003278  D005               	goto	l2095
  6371   00327A  500E               	movf	___lwdiv@divisor^(0+1280),w,c
  6372   00327C  5E0C               	subwf	___lwdiv@dividend^(0+1280),f,c
  6373   00327E  500F               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  6374   003280  5A0D               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  6375   003282  8010               	bsf	___lwdiv@quotient^(0+1280),0,c
  6376   003284                     l2095:
  6377   003284  90D8               	bcf	status,0,c
  6378   003286  320F               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  6379   003288  320E               	rrcf	___lwdiv@divisor^(0+1280),f,c
  6380   00328A  2E12               	decfsz	___lwdiv@counter^(0+1280),f,c
  6381   00328C  D7ED               	goto	u990
  6382   00328E                     l939:
  6383   00328E  C510  F50C         	movff	___lwdiv@quotient,?___lwdiv
  6384   003292  C511  F50D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6385   003296  0012               	return		;funcret
  6386   003298                     __end_of___lwdiv:
  6387                           	callstack 0
  6388                           
  6389 ;; *************** function _I2C_LCD_CHAR_GRADO *****************
  6390 ;; Defined at:
  6391 ;;		line 474 in file "I2C_LCD.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;		None
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;		None
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  1    wreg      void 
  6398 ;; Registers used:
  6399 ;;		wreg, status,2, status,0, cstack
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6409 ;;Total ram usage:        0 bytes
  6410 ;; Hardware stack levels used: 1
  6411 ;; Hardware stack levels required when called: 5
  6412 ;; This function calls:
  6413 ;;		_I2C_ENVIA_LCD_DATA
  6414 ;; This function is called by:
  6415 ;;		_main
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           
  6419                           	psect	text13
  6420   00349A                     __ptext13:
  6421                           	callstack 0
  6422   00349A                     _I2C_LCD_CHAR_GRADO:
  6423                           	callstack 121
  6424                           
  6425                           ;I2C_LCD.c: 475:     I2C_ENVIA_LCD_DATA(0xDF);
  6426                           
  6427                           ;incstack = 0
  6428   00349A  0EDF               	movlw	223
  6429   00349C  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6430   0034A0  0012               	return		;funcret
  6431   0034A2                     __end_of_I2C_LCD_CHAR_GRADO:
  6432                           	callstack 0
  6433                           
  6434 ;; *************** function _I2C_ESCRIBE_MENSAJE2 *****************
  6435 ;; Defined at:
  6436 ;;		line 149 in file "I2C_LCD.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;  cadena          1   12[COMRAM] PTR const unsigned char 
  6439 ;;		 -> STR_5(4), STR_4(11), STR_3(10), STR_2(14), 
  6440 ;;		 -> STR_1(14), 
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;  i               1   15[COMRAM] unsigned char 
  6443 ;;  tam             1   14[COMRAM] unsigned char 
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  1    wreg      void 
  6446 ;; Registers used:
  6447 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6453 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6456 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6457 ;;Total ram usage:        4 bytes
  6458 ;; Hardware stack levels used: 1
  6459 ;; Hardware stack levels required when called: 5
  6460 ;; This function calls:
  6461 ;;		_I2C_ENVIA_LCD_DATA
  6462 ;;		_strlen
  6463 ;; This function is called by:
  6464 ;;		_main
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text14
  6469   00336A                     __ptext14:
  6470                           	callstack 0
  6471   00336A                     _I2C_ESCRIBE_MENSAJE2:
  6472                           	callstack 121
  6473                           
  6474                           ;I2C_LCD.c: 150:     unsigned char tam;;I2C_LCD.c: 151:     tam = strlen(cadena);
  6475                           
  6476                           ;incstack = 0
  6477   00336A  C50D  F507         	movff	I2C_ESCRIBE_MENSAJE2@cadena,strlen@s
  6478   00336E  ECE9  F019         	call	_strlen	;wreg free
  6479   003372  5007               	movf	?_strlen^(0+1280),w,c
  6480   003374  6E0F               	movwf	I2C_ESCRIBE_MENSAJE2@tam^(0+1280),c
  6481                           
  6482                           ;I2C_LCD.c: 153:  for(i = 0; i<tam; i++) {
  6483   003376  6A10               	clrf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),c
  6484   003378  D00E               	goto	l2143
  6485   00337A                     l2139:
  6486                           
  6487                           ;I2C_LCD.c: 154:   I2C_ENVIA_LCD_DATA(cadena[i]);
  6488   00337A  500D               	movf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  6489   00337C  2410               	addwf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),w,c
  6490   00337E  6E0E               	movwf	??_I2C_ESCRIBE_MENSAJE2^(0+1280),c
  6491   003380  C50E  F4F6         	movff	??_I2C_ESCRIBE_MENSAJE2,tblptrl
  6492   003384                     	if	1	;There is more than 1 active tblptr byte
  6493   003384  0E26               	movlw	high __psmallconst
  6494   003386  6EF7               	movwf	tblptrh,c
  6495   003388                     	endif
  6496   003388                     	if	0	;tblptru may be non-zero
  6497   003388                     	endif
  6498   003388                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6499   003388  0E00               	movlw	low (__psmallconst shr (0+16))
  6500   00338A  6EF8               	movwf	tblptru,c
  6501   00338C                     	endif
  6502   00338C  0008               	tblrd		*
  6503   00338E  50F5               	movf	tablat,w,c
  6504   003390  ECD2  F017         	call	_I2C_ENVIA_LCD_DATA
  6505                           
  6506                           ;I2C_LCD.c: 155:  }
  6507   003394  2A10               	incf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),f,c
  6508   003396                     l2143:
  6509   003396  500F               	movf	I2C_ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  6510   003398  5C10               	subwf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),w,c
  6511   00339A  B0D8               	btfsc	status,0,c
  6512   00339C  0012               	return	
  6513   00339E  D7ED               	goto	l2139
  6514   0033A0                     __end_of_I2C_ESCRIBE_MENSAJE2:
  6515                           	callstack 0
  6516                           
  6517 ;; *************** function _strlen *****************
  6518 ;; Defined at:
  6519 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  s               1    6[COMRAM] PTR const unsigned char 
  6522 ;;		 -> STR_5(4), STR_4(11), STR_3(10), STR_2(14), 
  6523 ;;		 -> STR_1(14), 
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;  a               1    8[COMRAM] PTR const unsigned char 
  6526 ;;		 -> STR_5(4), STR_4(11), STR_3(10), STR_2(14), 
  6527 ;;		 -> STR_1(14), 
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  2    6[COMRAM] unsigned int 
  6530 ;; Registers used:
  6531 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6540 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6541 ;;Total ram usage:        3 bytes
  6542 ;; Hardware stack levels used: 1
  6543 ;; Hardware stack levels required when called: 3
  6544 ;; This function calls:
  6545 ;;		Nothing
  6546 ;; This function is called by:
  6547 ;;		_I2C_ESCRIBE_MENSAJE2
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           	psect	text15
  6552   0033D2                     __ptext15:
  6553                           	callstack 0
  6554   0033D2                     _strlen:
  6555                           	callstack 122
  6556                           
  6557                           ;incstack = 0
  6558   0033D2  C507  F509         	movff	strlen@s,strlen@a
  6559   0033D6  D001               	goto	l1913
  6560   0033D8                     l1911:
  6561   0033D8  2A07               	incf	strlen@s^(0+1280),f,c
  6562   0033DA                     l1913:
  6563   0033DA  C507  F4F6         	movff	strlen@s,tblptrl
  6564   0033DE                     	if	1	;There is more than 1 active tblptr byte
  6565   0033DE  0E26               	movlw	high __psmallconst
  6566   0033E0  6EF7               	movwf	tblptrh,c
  6567   0033E2                     	endif
  6568   0033E2                     	if	0	;tblptru may be non-zero
  6569   0033E2                     	endif
  6570   0033E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6571   0033E2  0E00               	movlw	low (__psmallconst shr (0+16))
  6572   0033E4  6EF8               	movwf	tblptru,c
  6573   0033E6                     	endif
  6574   0033E6  0008               	tblrd		*
  6575   0033E8  50F5               	movf	tablat,w,c
  6576   0033EA  0900               	iorlw	0
  6577   0033EC  A4D8               	btfss	status,2,c
  6578   0033EE  D7F4               	goto	l1911
  6579   0033F0  5009               	movf	strlen@a^(0+1280),w,c
  6580   0033F2  5C07               	subwf	strlen@s^(0+1280),w,c
  6581   0033F4  6E07               	movwf	?_strlen^(0+1280),c
  6582   0033F6  6A08               	clrf	(?_strlen+1)^(0+1280),c
  6583   0033F8  BE07               	btfsc	?_strlen^(0+1280),7,c
  6584   0033FA  0608               	decf	(?_strlen+1)^(0+1280),f,c
  6585   0033FC  0012               	return		;funcret
  6586   0033FE                     __end_of_strlen:
  6587                           	callstack 0
  6588                           
  6589 ;; *************** function _I2C_ENVIA_LCD_DATA *****************
  6590 ;; Defined at:
  6591 ;;		line 158 in file "I2C_LCD.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  data            1    wreg     unsigned char 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  data            1    9[COMRAM] unsigned char 
  6596 ;;  lownibble       1   11[COMRAM] unsigned char 
  6597 ;;  highnibble      1   10[COMRAM] unsigned char 
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  1    wreg      void 
  6600 ;; Registers used:
  6601 ;;		wreg, status,2, status,0, cstack
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6608 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6609 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6611 ;;Total ram usage:        4 bytes
  6612 ;; Hardware stack levels used: 1
  6613 ;; Hardware stack levels required when called: 4
  6614 ;; This function calls:
  6615 ;;		_I2C1_WRITESINGLEBYTE
  6616 ;; This function is called by:
  6617 ;;		_I2C_ESCRIBE_MENSAJE2
  6618 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  6619 ;;		_I2C_LCD_CHAR_GRADO
  6620 ;;		_main
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text16
  6625   002FA4                     __ptext16:
  6626                           	callstack 0
  6627   002FA4                     _I2C_ENVIA_LCD_DATA:
  6628                           	callstack 121
  6629                           
  6630                           ;incstack = 0
  6631                           ;I2C_ENVIA_LCD_DATA@data stored from wreg
  6632   002FA4  6E0A               	movwf	I2C_ENVIA_LCD_DATA@data^(0+1280),c
  6633                           
  6634                           ;I2C_LCD.c: 159:     unsigned char highnibble;;I2C_LCD.c: 160:     unsigned char lownibb
      +                          le;;I2C_LCD.c: 162:     highnibble = (data & 0xF0) | 0x08;
  6635   002FA6  500A               	movf	I2C_ENVIA_LCD_DATA@data^(0+1280),w,c
  6636   002FA8  0BF0               	andlw	240
  6637   002FAA  0908               	iorlw	8
  6638   002FAC  6E0B               	movwf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),c
  6639                           
  6640                           ;I2C_LCD.c: 163:     lownibble = (unsigned char)(((data & 0x0F)<<4)| 0x08);
  6641   002FAE  C50A  F509         	movff	I2C_ENVIA_LCD_DATA@data,??_I2C_ENVIA_LCD_DATA
  6642   002FB2  0E0F               	movlw	15
  6643   002FB4  1609               	andwf	??_I2C_ENVIA_LCD_DATA^(0+1280),f,c
  6644   002FB6  3809               	swapf	??_I2C_ENVIA_LCD_DATA^(0+1280),w,c
  6645   002FB8  0BF0               	andlw	240
  6646   002FBA  0908               	iorlw	8
  6647   002FBC  6E0C               	movwf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),c
  6648                           
  6649                           ;I2C_LCD.c: 165:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(highnibble | 0x04 | 0x01));
  6650   002FBE  500B               	movf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),w,c
  6651   002FC0  0905               	iorlw	5
  6652   002FC2  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6653   002FC4  0E27               	movlw	39
  6654   002FC6  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  6655                           
  6656                           ; BSR set to: 2
  6657                           ;I2C_LCD.c: 166:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6658   002FCA  0E35               	movlw	53
  6659   002FCC                     u1697:
  6660   002FCC  2EE8               	decfsz	wreg,f,c
  6661   002FCE  D7FE               	bra	u1697
  6662   002FD0  0000               	nop	
  6663                           
  6664                           ;I2C_LCD.c: 167:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(highnibble | 0x01));
  6665   002FD2  500B               	movf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),w,c
  6666   002FD4  0901               	iorlw	1
  6667   002FD6  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6668   002FD8  0E27               	movlw	39
  6669   002FDA  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  6670                           
  6671                           ; BSR set to: 2
  6672                           ;I2C_LCD.c: 168:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6673   002FDE  0E35               	movlw	53
  6674   002FE0                     u1707:
  6675   002FE0  2EE8               	decfsz	wreg,f,c
  6676   002FE2  D7FE               	bra	u1707
  6677   002FE4  0000               	nop	
  6678                           
  6679                           ;I2C_LCD.c: 170:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(lownibble | 0x04 | 0x01));
  6680   002FE6  500C               	movf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),w,c
  6681   002FE8  0905               	iorlw	5
  6682   002FEA  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6683   002FEC  0E27               	movlw	39
  6684   002FEE  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  6685                           
  6686                           ; BSR set to: 2
  6687                           ;I2C_LCD.c: 171:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6688   002FF2  0E35               	movlw	53
  6689   002FF4                     u1717:
  6690   002FF4  2EE8               	decfsz	wreg,f,c
  6691   002FF6  D7FE               	bra	u1717
  6692   002FF8  0000               	nop	
  6693                           
  6694                           ;I2C_LCD.c: 172:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(lownibble | 0x01));
  6695   002FFA  500C               	movf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),w,c
  6696   002FFC  0901               	iorlw	1
  6697   002FFE  6E07               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6698   003000  0E27               	movlw	39
  6699   003002  ECFF  F019         	call	_I2C1_WRITESINGLEBYTE
  6700                           
  6701                           ; BSR set to: 2
  6702                           ;I2C_LCD.c: 173:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6703   003006  0E35               	movlw	53
  6704   003008                     u1727:
  6705   003008  2EE8               	decfsz	wreg,f,c
  6706   00300A  D7FE               	bra	u1727
  6707   00300C  0000               	nop	
  6708   00300E  0012               	return		;funcret
  6709   003010                     __end_of_I2C_ENVIA_LCD_DATA:
  6710                           	callstack 0
  6711                           
  6712 ;; *************** function _I2C1_WRITESINGLEBYTE *****************
  6713 ;; Defined at:
  6714 ;;		line 81 in file "I2C_LCD.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;  direccion       1    wreg     unsigned char 
  6717 ;;  dato            1    6[COMRAM] unsigned char 
  6718 ;; Auto vars:     Size  Location     Type
  6719 ;;  direccion       1    7[COMRAM] unsigned char 
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  1    wreg      void 
  6722 ;; Registers used:
  6723 ;;		wreg, status,2, status,0
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/2
  6726 ;;		On exit  : 3F/2
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6729 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6733 ;;Total ram usage:        2 bytes
  6734 ;; Hardware stack levels used: 1
  6735 ;; Hardware stack levels required when called: 3
  6736 ;; This function calls:
  6737 ;;		Nothing
  6738 ;; This function is called by:
  6739 ;;		_I2C_ENVIA_LCD_DATA
  6740 ;;		_I2C_ENVIA_LCD_CMD
  6741 ;;		_I2C_LCD_INIT
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           	psect	text17
  6746   0033FE                     __ptext17:
  6747                           	callstack 0
  6748   0033FE                     _I2C1_WRITESINGLEBYTE:
  6749                           	callstack 121
  6750                           
  6751                           ;incstack = 0
  6752                           ;I2C1_WRITESINGLEBYTE@direccion stored from wreg
  6753   0033FE  6E08               	movwf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),c
  6754                           
  6755                           ;I2C_LCD.c: 82:     I2C1CNT = 1;
  6756   003400  0E01               	movlw	1
  6757   003402  0102               	movlb	2	; () banked
  6758   003404  6F8D               	movwf	141,b	;volatile
  6759                           
  6760                           ; BSR set to: 2
  6761                           ;I2C_LCD.c: 83:     I2C1ADB1 = (direccion << 1) & 0xFE;
  6762   003406  5008               	movf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),w,c
  6763   003408  2408               	addwf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),w,c
  6764   00340A  0BFE               	andlw	254
  6765   00340C  6F8F               	movwf	143,b	;volatile
  6766                           
  6767                           ; BSR set to: 2
  6768                           ;I2C_LCD.c: 84:     I2C1TXB = dato;
  6769   00340E  C507  F28C         	movff	I2C1_WRITESINGLEBYTE@dato,652	;volatile
  6770                           
  6771                           ; BSR set to: 2
  6772                           ;I2C_LCD.c: 85:     I2C1CON0bits.S = 1;
  6773   003412  8B94               	bsf	148,5,b	;volatile
  6774   003414                     l51:
  6775                           
  6776                           ; BSR set to: 2
  6777   003414  AB99               	btfss	153,5,b	;volatile
  6778   003416  D7FE               	goto	l51
  6779   003418                     u590:
  6780                           
  6781                           ; BSR set to: 2
  6782   003418  BB95               	btfsc	149,5,b	;volatile
  6783   00341A  D7FE               	goto	u590
  6784   00341C                     u600:
  6785                           
  6786                           ; BSR set to: 2
  6787   00341C  B59A               	btfsc	154,2,b	;volatile
  6788   00341E  0012               	return	
  6789   003420  D7FD               	goto	u600
  6790   003422                     __end_of_I2C1_WRITESINGLEBYTE:
  6791                           	callstack 0
  6792                           
  6793 ;; *************** function _DHT_GetTemp *****************
  6794 ;; Defined at:
  6795 ;;		line 104 in file "LIB_DHT.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  modelo          1    wreg     unsigned char 
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  modelo          1   18[COMRAM] unsigned char 
  6800 ;;  valor_dht       2   15[COMRAM] unsigned int 
  6801 ;;  Temp_Ent        1   17[COMRAM] unsigned char 
  6802 ;;  Temp_Dec        1   14[COMRAM] unsigned char 
  6803 ;;  Chksum          1    0        unsigned char 
  6804 ;;  RH_Dec          1    0        unsigned char 
  6805 ;;  RH_Ent          1    0        unsigned char 
  6806 ;; Return value:  Size  Location     Type
  6807 ;;                  2   10[COMRAM] unsigned int 
  6808 ;; Registers used:
  6809 ;;		wreg, status,2, status,0, cstack
  6810 ;; Tracked objects:
  6811 ;;		On entry : 0/0
  6812 ;;		On exit  : 0/0
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6816 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6817 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6818 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6819 ;;Total ram usage:        9 bytes
  6820 ;; Hardware stack levels used: 1
  6821 ;; Hardware stack levels required when called: 4
  6822 ;; This function calls:
  6823 ;;		_DHT_Check
  6824 ;;		_DHT_Read
  6825 ;;		_DHT_Start
  6826 ;; This function is called by:
  6827 ;;		_main
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text18
  6832   003078                     __ptext18:
  6833                           	callstack 0
  6834   003078                     _DHT_GetTemp:
  6835                           	callstack 122
  6836                           
  6837                           ; BSR set to: 2
  6838                           ;incstack = 0
  6839                           ;DHT_GetTemp@modelo stored from wreg
  6840   003078  6E13               	movwf	DHT_GetTemp@modelo^(0+1280),c
  6841                           
  6842                           ;LIB_DHT.c: 107:     DHT_Start(modelo);
  6843   00307A  5013               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6844   00307C  ECCC  F018         	call	_DHT_Start
  6845                           
  6846                           ;LIB_DHT.c: 108:     DHT_Check(modelo);
  6847   003080  5013               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6848   003082  EC4F  F017         	call	_DHT_Check
  6849   003086  5013               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6850   003088  EC02  F017         	call	_DHT_Read
  6851   00308C  5013               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6852   00308E  EC02  F017         	call	_DHT_Read
  6853                           
  6854                           ;LIB_DHT.c: 111:     Temp_Ent = DHT_Read(modelo);
  6855   003092  5013               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6856   003094  EC02  F017         	call	_DHT_Read
  6857   003098  6E12               	movwf	DHT_GetTemp@Temp_Ent^(0+1280),c
  6858                           
  6859                           ;LIB_DHT.c: 112:     Temp_Dec = DHT_Read(modelo);
  6860   00309A  5013               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6861   00309C  EC02  F017         	call	_DHT_Read
  6862   0030A0  6E0F               	movwf	DHT_GetTemp@Temp_Dec^(0+1280),c
  6863   0030A2  5013               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6864   0030A4  EC02  F017         	call	_DHT_Read
  6865                           
  6866                           ;LIB_DHT.c: 114:     if(modelo == 0){
  6867   0030A8  5013               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6868   0030AA  A4D8               	btfss	status,2,c
  6869   0030AC  D004               	goto	l2407
  6870                           
  6871                           ;LIB_DHT.c: 115:         return(valor_dht + Temp_Ent);
  6872   0030AE  C512  F50B         	movff	DHT_GetTemp@Temp_Ent,?_DHT_GetTemp
  6873   0030B2  6A0C               	clrf	(?_DHT_GetTemp+1)^(0+1280),c
  6874   0030B4  0012               	return	
  6875   0030B6                     l2407:
  6876   0030B6  0413               	decf	DHT_GetTemp@modelo^(0+1280),w,c
  6877   0030B8  A4D8               	btfss	status,2,c
  6878   0030BA  0012               	return	
  6879                           
  6880                           ;LIB_DHT.c: 118:         valor_dht = (Temp_Ent << 8) | Temp_Dec;
  6881   0030BC  500F               	movf	DHT_GetTemp@Temp_Dec^(0+1280),w,c
  6882   0030BE  C512  F50D         	movff	DHT_GetTemp@Temp_Ent,??_DHT_GetTemp
  6883   0030C2  6A0E               	clrf	(??_DHT_GetTemp+1)^(0+1280),c
  6884   0030C4  C50D  F50E         	movff	??_DHT_GetTemp,??_DHT_GetTemp+1
  6885   0030C8  6A0D               	clrf	??_DHT_GetTemp^(0+1280),c
  6886   0030CA  100D               	iorwf	??_DHT_GetTemp^(0+1280),w,c
  6887   0030CC  6E10               	movwf	DHT_GetTemp@valor_dht^(0+1280),c
  6888   0030CE  500E               	movf	(??_DHT_GetTemp+1)^(0+1280),w,c
  6889   0030D0  6E11               	movwf	(DHT_GetTemp@valor_dht+1)^(0+1280),c
  6890                           
  6891                           ;LIB_DHT.c: 119:         return(valor_dht);
  6892   0030D2  C510  F50B         	movff	DHT_GetTemp@valor_dht,?_DHT_GetTemp
  6893   0030D6  C511  F50C         	movff	DHT_GetTemp@valor_dht+1,?_DHT_GetTemp+1
  6894   0030DA  0012               	return		;funcret
  6895   0030DC                     __end_of_DHT_GetTemp:
  6896                           	callstack 0
  6897                           
  6898 ;; *************** function _DHT_GetHumid *****************
  6899 ;; Defined at:
  6900 ;;		line 123 in file "LIB_DHT.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;  modelo          1    wreg     unsigned char 
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;  modelo          1   18[COMRAM] unsigned char 
  6905 ;;  valor_dht       2   15[COMRAM] unsigned int 
  6906 ;;  RH_Ent          1   17[COMRAM] unsigned char 
  6907 ;;  RH_Dec          1   14[COMRAM] unsigned char 
  6908 ;;  Chksum          1    0        unsigned char 
  6909 ;;  Temp_Dec        1    0        unsigned char 
  6910 ;;  Temp_Ent        1    0        unsigned char 
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  2   10[COMRAM] unsigned int 
  6913 ;; Registers used:
  6914 ;;		wreg, status,2, status,0, cstack
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6921 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6922 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6923 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6924 ;;Total ram usage:        9 bytes
  6925 ;; Hardware stack levels used: 1
  6926 ;; Hardware stack levels required when called: 4
  6927 ;; This function calls:
  6928 ;;		_DHT_Check
  6929 ;;		_DHT_Read
  6930 ;;		_DHT_Start
  6931 ;; This function is called by:
  6932 ;;		_main
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           	psect	text19
  6937   0030DC                     __ptext19:
  6938                           	callstack 0
  6939   0030DC                     _DHT_GetHumid:
  6940                           	callstack 122
  6941                           
  6942                           ;incstack = 0
  6943                           ;DHT_GetHumid@modelo stored from wreg
  6944   0030DC  6E13               	movwf	DHT_GetHumid@modelo^(0+1280),c
  6945                           
  6946                           ;LIB_DHT.c: 126:     DHT_Start(modelo);
  6947   0030DE  5013               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6948   0030E0  ECCC  F018         	call	_DHT_Start
  6949                           
  6950                           ;LIB_DHT.c: 127:     DHT_Check(modelo);
  6951   0030E4  5013               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6952   0030E6  EC4F  F017         	call	_DHT_Check
  6953                           
  6954                           ;LIB_DHT.c: 128:     RH_Ent = DHT_Read(modelo);
  6955   0030EA  5013               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6956   0030EC  EC02  F017         	call	_DHT_Read
  6957   0030F0  6E12               	movwf	DHT_GetHumid@RH_Ent^(0+1280),c
  6958                           
  6959                           ;LIB_DHT.c: 129:     RH_Dec = DHT_Read(modelo);
  6960   0030F2  5013               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6961   0030F4  EC02  F017         	call	_DHT_Read
  6962   0030F8  6E0F               	movwf	DHT_GetHumid@RH_Dec^(0+1280),c
  6963   0030FA  5013               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6964   0030FC  EC02  F017         	call	_DHT_Read
  6965   003100  5013               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6966   003102  EC02  F017         	call	_DHT_Read
  6967   003106  5013               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6968   003108  EC02  F017         	call	_DHT_Read
  6969                           
  6970                           ;LIB_DHT.c: 133:     if(modelo == 0){
  6971   00310C  5013               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6972   00310E  A4D8               	btfss	status,2,c
  6973   003110  D004               	goto	l2439
  6974                           
  6975                           ;LIB_DHT.c: 134:         return(valor_dht + RH_Ent);
  6976   003112  C512  F50B         	movff	DHT_GetHumid@RH_Ent,?_DHT_GetHumid
  6977   003116  6A0C               	clrf	(?_DHT_GetHumid+1)^(0+1280),c
  6978   003118  0012               	return	
  6979   00311A                     l2439:
  6980   00311A  0413               	decf	DHT_GetHumid@modelo^(0+1280),w,c
  6981   00311C  A4D8               	btfss	status,2,c
  6982   00311E  0012               	return	
  6983                           
  6984                           ;LIB_DHT.c: 137:         valor_dht = (RH_Ent << 8) | RH_Dec;
  6985   003120  500F               	movf	DHT_GetHumid@RH_Dec^(0+1280),w,c
  6986   003122  C512  F50D         	movff	DHT_GetHumid@RH_Ent,??_DHT_GetHumid
  6987   003126  6A0E               	clrf	(??_DHT_GetHumid+1)^(0+1280),c
  6988   003128  C50D  F50E         	movff	??_DHT_GetHumid,??_DHT_GetHumid+1
  6989   00312C  6A0D               	clrf	??_DHT_GetHumid^(0+1280),c
  6990   00312E  100D               	iorwf	??_DHT_GetHumid^(0+1280),w,c
  6991   003130  6E10               	movwf	DHT_GetHumid@valor_dht^(0+1280),c
  6992   003132  500E               	movf	(??_DHT_GetHumid+1)^(0+1280),w,c
  6993   003134  6E11               	movwf	(DHT_GetHumid@valor_dht+1)^(0+1280),c
  6994                           
  6995                           ;LIB_DHT.c: 138:         return(valor_dht);
  6996   003136  C510  F50B         	movff	DHT_GetHumid@valor_dht,?_DHT_GetHumid
  6997   00313A  C511  F50C         	movff	DHT_GetHumid@valor_dht+1,?_DHT_GetHumid+1
  6998   00313E  0012               	return		;funcret
  6999   003140                     __end_of_DHT_GetHumid:
  7000                           	callstack 0
  7001                           
  7002 ;; *************** function _DHT_Start *****************
  7003 ;; Defined at:
  7004 ;;		line 3 in file "LIB_DHT.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;  modelo          1    wreg     unsigned char 
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;  modelo          1    7[COMRAM] unsigned char 
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  1    wreg      void 
  7011 ;; Registers used:
  7012 ;;		wreg, status,2, status,0, cstack
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7020 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7021 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7022 ;;Total ram usage:        2 bytes
  7023 ;; Hardware stack levels used: 1
  7024 ;; Hardware stack levels required when called: 3
  7025 ;; This function calls:
  7026 ;;		Nothing
  7027 ;; This function is called by:
  7028 ;;		_DHT_GetTemp
  7029 ;;		_DHT_GetHumid
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           	psect	text20
  7034   003198                     __ptext20:
  7035                           	callstack 0
  7036   003198                     _DHT_Start:
  7037                           	callstack 122
  7038                           
  7039                           ;incstack = 0
  7040                           ;DHT_Start@modelo stored from wreg
  7041   003198  6E08               	movwf	DHT_Start@modelo^(0+1280),c
  7042                           
  7043                           ;LIB_DHT.c: 4:     if(modelo == 0){
  7044   00319A  5008               	movf	DHT_Start@modelo^(0+1280),w,c
  7045   00319C  A4D8               	btfss	status,2,c
  7046   00319E  D012               	goto	l1931
  7047                           
  7048                           ;LIB_DHT.c: 5:         TRISBbits.TRISB3 = 0;
  7049   0031A0  96C7               	bcf	199,3,c	;volatile
  7050                           
  7051                           ;LIB_DHT.c: 6:         ANSELBbits.ANSELB3 = 0;
  7052   0031A2  0104               	movlb	4	; () banked
  7053   0031A4  9708               	bcf	8,3,b	;volatile
  7054                           
  7055                           ;LIB_DHT.c: 7:         LATBbits.LATB3 = 0;
  7056   0031A6  96BF               	bcf	191,3,c	;volatile
  7057                           
  7058                           ; BSR set to: 4
  7059                           ;LIB_DHT.c: 8:         _delay((unsigned long)((18)*(32000000UL/4000.0)));
  7060   0031A8  0EBC               	movlw	188
  7061   0031AA  6E07               	movwf	??_DHT_Start^(0+1280),c
  7062   0031AC  0E02               	movlw	2
  7063   0031AE                     u1737:
  7064   0031AE  2EE8               	decfsz	wreg,f,c
  7065   0031B0  D7FE               	bra	u1737
  7066   0031B2  2E07               	decfsz	??_DHT_Start^(0+1280),f,c
  7067   0031B4  D7FC               	bra	u1737
  7068                           
  7069                           ;LIB_DHT.c: 9:         LATBbits.LATB3 = 1;
  7070   0031B6  86BF               	bsf	191,3,c	;volatile
  7071                           
  7072                           ;LIB_DHT.c: 10:         _delay((unsigned long)((40)*(32000000UL/4000000.0)));
  7073   0031B8  0E6A               	movlw	106
  7074   0031BA                     u1747:
  7075   0031BA  2EE8               	decfsz	wreg,f,c
  7076   0031BC  D7FE               	bra	u1747
  7077   0031BE  D000               	nop2	
  7078                           
  7079                           ;LIB_DHT.c: 11:         TRISBbits.TRISB3 = 1;
  7080   0031C0  86C7               	bsf	199,3,c	;volatile
  7081                           
  7082                           ;LIB_DHT.c: 12:     }
  7083   0031C2  0012               	return	
  7084   0031C4                     l1931:
  7085   0031C4  0408               	decf	DHT_Start@modelo^(0+1280),w,c
  7086   0031C6  A4D8               	btfss	status,2,c
  7087   0031C8  0012               	return	
  7088                           
  7089                           ;LIB_DHT.c: 14:         TRISBbits.TRISB3 = 0;
  7090   0031CA  96C7               	bcf	199,3,c	;volatile
  7091                           
  7092                           ;LIB_DHT.c: 15:         ANSELBbits.ANSELB3 = 0;
  7093   0031CC  0104               	movlb	4	; () banked
  7094   0031CE  9708               	bcf	8,3,b	;volatile
  7095                           
  7096                           ;LIB_DHT.c: 16:         LATBbits.LATB3 = 0;
  7097   0031D0  96BF               	bcf	191,3,c	;volatile
  7098                           
  7099                           ; BSR set to: 4
  7100                           ;LIB_DHT.c: 17:         _delay((unsigned long)((1)*(32000000UL/4000.0)));
  7101   0031D2  0E0B               	movlw	11
  7102   0031D4  6E07               	movwf	??_DHT_Start^(0+1280),c
  7103   0031D6  0E62               	movlw	98
  7104   0031D8                     u1757:
  7105   0031D8  2EE8               	decfsz	wreg,f,c
  7106   0031DA  D7FE               	bra	u1757
  7107   0031DC  2E07               	decfsz	??_DHT_Start^(0+1280),f,c
  7108   0031DE  D7FC               	bra	u1757
  7109   0031E0  D000               	nop2	
  7110                           
  7111                           ;LIB_DHT.c: 18:         LATBbits.LATB3 = 1;
  7112   0031E2  86BF               	bsf	191,3,c	;volatile
  7113                           
  7114                           ;LIB_DHT.c: 19:         _delay((unsigned long)((40)*(32000000UL/4000000.0)));
  7115   0031E4  0E6A               	movlw	106
  7116   0031E6                     u1767:
  7117   0031E6  2EE8               	decfsz	wreg,f,c
  7118   0031E8  D7FE               	bra	u1767
  7119   0031EA  D000               	nop2	
  7120                           
  7121                           ;LIB_DHT.c: 20:         TRISBbits.TRISB3 = 1;
  7122   0031EC  86C7               	bsf	199,3,c	;volatile
  7123   0031EE  0012               	return		;funcret
  7124   0031F0                     __end_of_DHT_Start:
  7125                           	callstack 0
  7126                           
  7127 ;; *************** function _DHT_Read *****************
  7128 ;; Defined at:
  7129 ;;		line 60 in file "LIB_DHT.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;  modelo          1    wreg     unsigned char 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  modelo          1    6[COMRAM] unsigned char 
  7134 ;;  data            1    9[COMRAM] unsigned char 
  7135 ;;  temp_x          1    8[COMRAM] unsigned char 
  7136 ;;  x               1    7[COMRAM] unsigned char 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      unsigned char 
  7139 ;; Registers used:
  7140 ;;		wreg, status,2, status,0
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7147 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7149 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7150 ;;Total ram usage:        4 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; Hardware stack levels required when called: 3
  7153 ;; This function calls:
  7154 ;;		Nothing
  7155 ;; This function is called by:
  7156 ;;		_DHT_GetTemp
  7157 ;;		_DHT_GetHumid
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           	psect	text21
  7162   002E04                     __ptext21:
  7163                           	callstack 0
  7164   002E04                     _DHT_Read:
  7165                           	callstack 122
  7166                           
  7167                           ;incstack = 0
  7168                           ;DHT_Read@modelo stored from wreg
  7169   002E04  6E07               	movwf	DHT_Read@modelo^(0+1280),c
  7170   002E06  6A0A               	clrf	DHT_Read@data^(0+1280),c
  7171                           
  7172                           ;LIB_DHT.c: 62:     unsigned char temp_x;;LIB_DHT.c: 63:     if(modelo == 0){
  7173   002E08  5007               	movf	DHT_Read@modelo^(0+1280),w,c
  7174   002E0A  A4D8               	btfss	status,2,c
  7175   002E0C  D022               	goto	l2037
  7176                           
  7177                           ;LIB_DHT.c: 64:         for(x=0;x<8;x++){
  7178   002E0E  6A08               	clrf	DHT_Read@x^(0+1280),c
  7179   002E10                     l245:
  7180                           
  7181                           ;LIB_DHT.c: 65:             temp_x = 0;
  7182   002E10  6A09               	clrf	DHT_Read@temp_x^(0+1280),c
  7183                           
  7184                           ;LIB_DHT.c: 66:             while((PORTBbits.RB3 == 0) && temp_x < 100){
  7185   002E12  D001               	goto	l2013
  7186   002E14                     l2011:
  7187                           
  7188                           ;LIB_DHT.c: 67:                 temp_x++;
  7189   002E14  2A09               	incf	DHT_Read@temp_x^(0+1280),f,c
  7190   002E16                     l2013:
  7191                           
  7192                           ;LIB_DHT.c: 66:             while((PORTBbits.RB3 == 0) && temp_x < 100){
  7193   002E16  B6CF               	btfsc	207,3,c	;volatile
  7194   002E18  D003               	goto	u830
  7195   002E1A  0E63               	movlw	99
  7196   002E1C  6409               	cpfsgt	DHT_Read@temp_x^(0+1280),c
  7197   002E1E  D7FA               	goto	l2011
  7198   002E20                     u830:
  7199                           
  7200                           ;LIB_DHT.c: 69:             _delay((unsigned long)((35)*(32000000UL/4000000.0)));
  7201   002E20  0E5D               	movlw	93
  7202   002E22                     u1777:
  7203   002E22  2EE8               	decfsz	wreg,f,c
  7204   002E24  D7FE               	bra	u1777
  7205   002E26  0000               	nop	
  7206                           
  7207                           ;LIB_DHT.c: 70:             if(PORTBbits.RB3){
  7208   002E28  A6CF               	btfss	207,3,c	;volatile
  7209   002E2A  D003               	goto	l2023
  7210                           
  7211                           ;LIB_DHT.c: 71:                 data = ((data<<1) | 1);
  7212   002E2C  80D8               	bsf	status,0,c
  7213   002E2E  360A               	rlcf	DHT_Read@data^(0+1280),f,c
  7214                           
  7215                           ;LIB_DHT.c: 72:             }
  7216   002E30  D003               	goto	l2025
  7217   002E32                     l2023:
  7218                           
  7219                           ;LIB_DHT.c: 74:                 data = (data<<1);
  7220   002E32  500A               	movf	DHT_Read@data^(0+1280),w,c
  7221   002E34  240A               	addwf	DHT_Read@data^(0+1280),w,c
  7222   002E36  6E0A               	movwf	DHT_Read@data^(0+1280),c
  7223   002E38                     l2025:
  7224                           
  7225                           ;LIB_DHT.c: 76:             temp_x = 0;
  7226   002E38  6A09               	clrf	DHT_Read@temp_x^(0+1280),c
  7227                           
  7228                           ;LIB_DHT.c: 77:             while((PORTBbits.RB3 == 1) && temp_x < 100){
  7229   002E3A  D001               	goto	l2029
  7230   002E3C                     l2027:
  7231                           
  7232                           ;LIB_DHT.c: 78:                 temp_x++;
  7233   002E3C  2A09               	incf	DHT_Read@temp_x^(0+1280),f,c
  7234   002E3E                     l2029:
  7235                           
  7236                           ;LIB_DHT.c: 77:             while((PORTBbits.RB3 == 1) && temp_x < 100){
  7237   002E3E  A6CF               	btfss	207,3,c	;volatile
  7238   002E40  D003               	goto	u860
  7239   002E42  0E63               	movlw	99
  7240   002E44  6409               	cpfsgt	DHT_Read@temp_x^(0+1280),c
  7241   002E46  D7FA               	goto	l2027
  7242   002E48                     u860:
  7243                           
  7244                           ;LIB_DHT.c: 80:         }
  7245   002E48  2A08               	incf	DHT_Read@x^(0+1280),f,c
  7246   002E4A  0E07               	movlw	7
  7247   002E4C  6408               	cpfsgt	DHT_Read@x^(0+1280),c
  7248   002E4E  D7E0               	goto	l245
  7249   002E50  D024               	goto	u940
  7250   002E52                     l2037:
  7251   002E52  0407               	decf	DHT_Read@modelo^(0+1280),w,c
  7252   002E54  A4D8               	btfss	status,2,c
  7253   002E56  D021               	goto	u940
  7254                           
  7255                           ;LIB_DHT.c: 83:         for(x=0;x<8;x++){
  7256   002E58  6A08               	clrf	DHT_Read@x^(0+1280),c
  7257   002E5A                     l261:
  7258                           
  7259                           ;LIB_DHT.c: 84:             temp_x = 0;
  7260   002E5A  6A09               	clrf	DHT_Read@temp_x^(0+1280),c
  7261                           
  7262                           ;LIB_DHT.c: 85:             while((PORTBbits.RB3 == 0) && temp_x < 100){
  7263   002E5C  D001               	goto	l2047
  7264   002E5E                     l2045:
  7265                           
  7266                           ;LIB_DHT.c: 86:                 temp_x++;
  7267   002E5E  2A09               	incf	DHT_Read@temp_x^(0+1280),f,c
  7268   002E60                     l2047:
  7269                           
  7270                           ;LIB_DHT.c: 85:             while((PORTBbits.RB3 == 0) && temp_x < 100){
  7271   002E60  B6CF               	btfsc	207,3,c	;volatile
  7272   002E62  D003               	goto	u900
  7273   002E64  0E63               	movlw	99
  7274   002E66  6409               	cpfsgt	DHT_Read@temp_x^(0+1280),c
  7275   002E68  D7FA               	goto	l2045
  7276   002E6A                     u900:
  7277                           
  7278                           ;LIB_DHT.c: 88:             _delay((unsigned long)((35)*(32000000UL/4000000.0)));
  7279   002E6A  0E5D               	movlw	93
  7280   002E6C                     u1787:
  7281   002E6C  2EE8               	decfsz	wreg,f,c
  7282   002E6E  D7FE               	bra	u1787
  7283   002E70  0000               	nop	
  7284                           
  7285                           ;LIB_DHT.c: 89:             if(PORTBbits.RB3){
  7286   002E72  A6CF               	btfss	207,3,c	;volatile
  7287   002E74  D003               	goto	l2057
  7288                           
  7289                           ;LIB_DHT.c: 90:                 data = ((data<<1) | 1);
  7290   002E76  80D8               	bsf	status,0,c
  7291   002E78  360A               	rlcf	DHT_Read@data^(0+1280),f,c
  7292                           
  7293                           ;LIB_DHT.c: 91:             }
  7294   002E7A  D003               	goto	l2059
  7295   002E7C                     l2057:
  7296                           
  7297                           ;LIB_DHT.c: 93:                 data = (data<<1);
  7298   002E7C  500A               	movf	DHT_Read@data^(0+1280),w,c
  7299   002E7E  240A               	addwf	DHT_Read@data^(0+1280),w,c
  7300   002E80  6E0A               	movwf	DHT_Read@data^(0+1280),c
  7301   002E82                     l2059:
  7302                           
  7303                           ;LIB_DHT.c: 95:             temp_x = 0;
  7304   002E82  6A09               	clrf	DHT_Read@temp_x^(0+1280),c
  7305                           
  7306                           ;LIB_DHT.c: 96:             while((PORTBbits.RB3 == 1) && temp_x < 100){
  7307   002E84  D001               	goto	l2063
  7308   002E86                     l2061:
  7309                           
  7310                           ;LIB_DHT.c: 97:                 temp_x++;
  7311   002E86  2A09               	incf	DHT_Read@temp_x^(0+1280),f,c
  7312   002E88                     l2063:
  7313                           
  7314                           ;LIB_DHT.c: 96:             while((PORTBbits.RB3 == 1) && temp_x < 100){
  7315   002E88  A6CF               	btfss	207,3,c	;volatile
  7316   002E8A  D003               	goto	u930
  7317   002E8C  0E63               	movlw	99
  7318   002E8E  6409               	cpfsgt	DHT_Read@temp_x^(0+1280),c
  7319   002E90  D7FA               	goto	l2061
  7320   002E92                     u930:
  7321                           
  7322                           ;LIB_DHT.c: 99:         }
  7323   002E92  2A08               	incf	DHT_Read@x^(0+1280),f,c
  7324   002E94  0E07               	movlw	7
  7325   002E96  6408               	cpfsgt	DHT_Read@x^(0+1280),c
  7326   002E98  D7E0               	goto	l261
  7327   002E9A                     u940:
  7328                           
  7329                           ;LIB_DHT.c: 101:     return data;
  7330   002E9A  500A               	movf	DHT_Read@data^(0+1280),w,c
  7331   002E9C  0012               	return		;funcret
  7332   002E9E                     __end_of_DHT_Read:
  7333                           	callstack 0
  7334                           
  7335 ;; *************** function _DHT_Check *****************
  7336 ;; Defined at:
  7337 ;;		line 24 in file "LIB_DHT.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;  modelo          1    wreg     unsigned char 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  modelo          1    6[COMRAM] unsigned char 
  7342 ;;  temp_x          1    7[COMRAM] unsigned char 
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  1    wreg      void 
  7345 ;; Registers used:
  7346 ;;		wreg, status,2, status,0
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7355 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7356 ;;Total ram usage:        2 bytes
  7357 ;; Hardware stack levels used: 1
  7358 ;; Hardware stack levels required when called: 3
  7359 ;; This function calls:
  7360 ;;		Nothing
  7361 ;; This function is called by:
  7362 ;;		_DHT_GetTemp
  7363 ;;		_DHT_GetHumid
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           	psect	text22
  7368   002E9E                     __ptext22:
  7369                           	callstack 0
  7370   002E9E                     _DHT_Check:
  7371                           	callstack 122
  7372                           
  7373                           ;incstack = 0
  7374                           ;DHT_Check@modelo stored from wreg
  7375   002E9E  6E07               	movwf	DHT_Check@modelo^(0+1280),c
  7376                           
  7377                           ;LIB_DHT.c: 25:     unsigned char temp_x;;LIB_DHT.c: 26:     if(modelo == 0){
  7378   002EA0  5007               	movf	DHT_Check@modelo^(0+1280),w,c
  7379   002EA2  A4D8               	btfss	status,2,c
  7380   002EA4  D021               	goto	l1971
  7381                           
  7382                           ;LIB_DHT.c: 27:         temp_x = 0;
  7383   002EA6  6A08               	clrf	DHT_Check@temp_x^(0+1280),c
  7384                           
  7385                           ;LIB_DHT.c: 28:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7386   002EA8  D001               	goto	l1947
  7387   002EAA                     l1945:
  7388                           
  7389                           ;LIB_DHT.c: 29:             temp_x++;
  7390   002EAA  2A08               	incf	DHT_Check@temp_x^(0+1280),f,c
  7391   002EAC                     l1947:
  7392                           
  7393                           ;LIB_DHT.c: 28:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7394   002EAC  A6CF               	btfss	207,3,c	;volatile
  7395   002EAE  D003               	goto	u690
  7396   002EB0  0E63               	movlw	99
  7397   002EB2  6408               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7398   002EB4  D7FA               	goto	l1945
  7399   002EB6                     u690:
  7400                           
  7401                           ;LIB_DHT.c: 31:         _delay((unsigned long)((80)*(32000000UL/4000000.0)));
  7402   002EB6  0ED5               	movlw	213
  7403   002EB8                     u1797:
  7404   002EB8  2EE8               	decfsz	wreg,f,c
  7405   002EBA  D7FE               	bra	u1797
  7406   002EBC  0000               	nop	
  7407                           
  7408                           ;LIB_DHT.c: 32:         temp_x = 0;
  7409   002EBE  6A08               	clrf	DHT_Check@temp_x^(0+1280),c
  7410                           
  7411                           ;LIB_DHT.c: 33:         while((PORTBbits.RB3 == 0) && temp_x < 100){
  7412   002EC0  D001               	goto	l1957
  7413   002EC2                     l1955:
  7414                           
  7415                           ;LIB_DHT.c: 34:             temp_x++;
  7416   002EC2  2A08               	incf	DHT_Check@temp_x^(0+1280),f,c
  7417   002EC4                     l1957:
  7418                           
  7419                           ;LIB_DHT.c: 33:         while((PORTBbits.RB3 == 0) && temp_x < 100){
  7420   002EC4  B6CF               	btfsc	207,3,c	;volatile
  7421   002EC6  D003               	goto	u710
  7422   002EC8  0E63               	movlw	99
  7423   002ECA  6408               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7424   002ECC  D7FA               	goto	l1955
  7425   002ECE                     u710:
  7426                           
  7427                           ;LIB_DHT.c: 36:         _delay((unsigned long)((80)*(32000000UL/4000000.0)));
  7428   002ECE  0ED5               	movlw	213
  7429   002ED0                     u1807:
  7430   002ED0  2EE8               	decfsz	wreg,f,c
  7431   002ED2  D7FE               	bra	u1807
  7432   002ED4  0000               	nop	
  7433                           
  7434                           ;LIB_DHT.c: 37:         temp_x = 0;
  7435   002ED6  6A08               	clrf	DHT_Check@temp_x^(0+1280),c
  7436                           
  7437                           ;LIB_DHT.c: 38:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7438   002ED8  D001               	goto	l1967
  7439   002EDA                     l1965:
  7440                           
  7441                           ;LIB_DHT.c: 39:             temp_x++;
  7442   002EDA  2A08               	incf	DHT_Check@temp_x^(0+1280),f,c
  7443   002EDC                     l1967:
  7444                           
  7445                           ;LIB_DHT.c: 38:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7446   002EDC  A6CF               	btfss	207,3,c	;volatile
  7447   002EDE  0012               	return	
  7448   002EE0  0E63               	movlw	99
  7449   002EE2  6408               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7450   002EE4  D7FA               	goto	l1965
  7451   002EE6  0012               	return	
  7452   002EE8                     l1971:
  7453   002EE8  0407               	decf	DHT_Check@modelo^(0+1280),w,c
  7454   002EEA  A4D8               	btfss	status,2,c
  7455   002EEC  0012               	return	
  7456                           
  7457                           ;LIB_DHT.c: 43:         temp_x = 0;
  7458   002EEE  6A08               	clrf	DHT_Check@temp_x^(0+1280),c
  7459                           
  7460                           ;LIB_DHT.c: 44:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7461   002EF0  D001               	goto	l1977
  7462   002EF2                     l1975:
  7463                           
  7464                           ;LIB_DHT.c: 45:             temp_x++;
  7465   002EF2  2A08               	incf	DHT_Check@temp_x^(0+1280),f,c
  7466   002EF4                     l1977:
  7467                           
  7468                           ;LIB_DHT.c: 44:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7469   002EF4  A6CF               	btfss	207,3,c	;volatile
  7470   002EF6  D003               	goto	u760
  7471   002EF8  0E63               	movlw	99
  7472   002EFA  6408               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7473   002EFC  D7FA               	goto	l1975
  7474   002EFE                     u760:
  7475                           
  7476                           ;LIB_DHT.c: 47:         _delay((unsigned long)((80)*(32000000UL/4000000.0)));
  7477   002EFE  0ED5               	movlw	213
  7478   002F00                     u1817:
  7479   002F00  2EE8               	decfsz	wreg,f,c
  7480   002F02  D7FE               	bra	u1817
  7481   002F04  0000               	nop	
  7482                           
  7483                           ;LIB_DHT.c: 48:         temp_x = 0;
  7484   002F06  6A08               	clrf	DHT_Check@temp_x^(0+1280),c
  7485                           
  7486                           ;LIB_DHT.c: 49:         while((PORTBbits.RB3 == 0) && temp_x < 100){
  7487   002F08  D001               	goto	l1987
  7488   002F0A                     l1985:
  7489                           
  7490                           ;LIB_DHT.c: 50:             temp_x++;
  7491   002F0A  2A08               	incf	DHT_Check@temp_x^(0+1280),f,c
  7492   002F0C                     l1987:
  7493                           
  7494                           ;LIB_DHT.c: 49:         while((PORTBbits.RB3 == 0) && temp_x < 100){
  7495   002F0C  B6CF               	btfsc	207,3,c	;volatile
  7496   002F0E  D003               	goto	u780
  7497   002F10  0E63               	movlw	99
  7498   002F12  6408               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7499   002F14  D7FA               	goto	l1985
  7500   002F16                     u780:
  7501                           
  7502                           ;LIB_DHT.c: 52:         _delay((unsigned long)((80)*(32000000UL/4000000.0)));
  7503   002F16  0ED5               	movlw	213
  7504   002F18                     u1827:
  7505   002F18  2EE8               	decfsz	wreg,f,c
  7506   002F1A  D7FE               	bra	u1827
  7507   002F1C  0000               	nop	
  7508                           
  7509                           ;LIB_DHT.c: 53:         temp_x = 0;
  7510   002F1E  6A08               	clrf	DHT_Check@temp_x^(0+1280),c
  7511                           
  7512                           ;LIB_DHT.c: 54:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7513   002F20  D001               	goto	l1997
  7514   002F22                     l1995:
  7515                           
  7516                           ;LIB_DHT.c: 55:             temp_x++;
  7517   002F22  2A08               	incf	DHT_Check@temp_x^(0+1280),f,c
  7518   002F24                     l1997:
  7519                           
  7520                           ;LIB_DHT.c: 54:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7521   002F24  A6CF               	btfss	207,3,c	;volatile
  7522   002F26  0012               	return	
  7523   002F28  0E63               	movlw	99
  7524   002F2A  6408               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7525   002F2C  D7FA               	goto	l1995
  7526   002F2E  0012               	return	
  7527   002F30                     __end_of_DHT_Check:
  7528                           	callstack 0
  7529                           
  7530 ;; *************** function _INT0_ISR *****************
  7531 ;; Defined at:
  7532 ;;		line 85 in file "maincode03.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;		None
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;		None
  7537 ;; Return value:  Size  Location     Type
  7538 ;;                  1    wreg      void 
  7539 ;; Registers used:
  7540 ;;		wreg, status,2, status,0, cstack
  7541 ;; Tracked objects:
  7542 ;;		On entry : 0/0
  7543 ;;		On exit  : 0/0
  7544 ;;		Unchanged: 0/0
  7545 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7550 ;;Total ram usage:        0 bytes
  7551 ;; Hardware stack levels used: 1
  7552 ;; Hardware stack levels required when called: 2
  7553 ;; This function calls:
  7554 ;;		_ws2812_update
  7555 ;; This function is called by:
  7556 ;;		Interrupt level 2
  7557 ;; This function uses a non-reentrant model
  7558 ;;
  7559                           
  7560                           	psect	text23
  7561   00345C                     __ptext23:
  7562                           	callstack 0
  7563   00345C                     _INT0_ISR:
  7564                           	callstack 120
  7565                           
  7566                           ;maincode03.c: 86:     PIR1bits.INT0IF = 0;
  7567                           
  7568                           ;incstack = 0
  7569   00345C  90AF               	bcf	175,0,c	;volatile
  7570                           
  7571                           ;maincode03.c: 87:     if(estado == 4){
  7572   00345E  0E04               	movlw	4
  7573   003460  1824               	xorwf	_estado^(0+1280),w,c	;volatile
  7574   003462  A4D8               	btfss	status,2,c
  7575   003464  D002               	goto	i2l2553
  7576                           
  7577                           ;maincode03.c: 88:         estado = 0;
  7578   003466  6A24               	clrf	_estado^(0+1280),c	;volatile
  7579                           
  7580                           ;maincode03.c: 89:     }
  7581   003468  D001               	goto	i2l2555
  7582   00346A                     i2l2553:
  7583                           
  7584                           ;maincode03.c: 91:         estado++;
  7585   00346A  2A24               	incf	_estado^(0+1280),f,c	;volatile
  7586   00346C                     i2l2555:
  7587                           
  7588                           ;maincode03.c: 93:     ws2812_update();
  7589   00346C  EC98  F017         	call	_ws2812_update	;wreg free
  7590   003470  0011               	retfie		f
  7591   003472                     __end_of_INT0_ISR:
  7592                           	callstack 0
  7593                           
  7594 ;; *************** function _ws2812_update *****************
  7595 ;; Defined at:
  7596 ;;		line 38 in file "maincode03.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;		None
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;		None
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  1    wreg      void 
  7603 ;; Registers used:
  7604 ;;		wreg, status,2, status,0, cstack
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7614 ;;Total ram usage:        0 bytes
  7615 ;; Hardware stack levels used: 1
  7616 ;; Hardware stack levels required when called: 1
  7617 ;; This function calls:
  7618 ;;		_WS2812_DATA_SEND
  7619 ;; This function is called by:
  7620 ;;		_INT0_ISR
  7621 ;;		_INT1_ISR
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           
  7625                           	psect	text24
  7626   002F30                     __ptext24:
  7627                           	callstack 0
  7628   002F30                     _ws2812_update:
  7629                           	callstack 120
  7630                           
  7631                           ;maincode03.c: 39:     switch(estado){
  7632                           
  7633                           ;incstack = 0
  7634   002F30  D028               	goto	i2l2493
  7635   002F32                     i2l2481:
  7636                           
  7637                           ;maincode03.c: 41:             WS2812_DATA_SEND(50,50,50);
  7638   002F32  0E32               	movlw	50
  7639   002F34  6E04               	movwf	WS2812_DATA_SEND@red^(0+1280),c
  7640   002F36  0E32               	movlw	50
  7641   002F38  6E05               	movwf	WS2812_DATA_SEND@blue^(0+1280),c
  7642   002F3A  0E32               	movlw	50
  7643   002F3C  EC11  F01A         	call	_WS2812_DATA_SEND
  7644                           
  7645                           ;maincode03.c: 42:             break;
  7646   002F40  0012               	return	
  7647   002F42                     i2l2483:
  7648                           
  7649                           ;maincode03.c: 44:             WS2812_DATA_SEND(50,50,0);
  7650   002F42  0E32               	movlw	50
  7651   002F44  6E04               	movwf	WS2812_DATA_SEND@red^(0+1280),c
  7652   002F46  0E00               	movlw	0
  7653   002F48  6E05               	movwf	WS2812_DATA_SEND@blue^(0+1280),c
  7654   002F4A  0E32               	movlw	50
  7655   002F4C  EC11  F01A         	call	_WS2812_DATA_SEND
  7656                           
  7657                           ;maincode03.c: 45:             break;
  7658   002F50  0012               	return	
  7659   002F52                     i2l2485:
  7660                           
  7661                           ;maincode03.c: 47:             WS2812_DATA_SEND(0,50,0);
  7662   002F52  0E32               	movlw	50
  7663   002F54  6E04               	movwf	WS2812_DATA_SEND@red^(0+1280),c
  7664   002F56  0E00               	movlw	0
  7665   002F58  6E05               	movwf	WS2812_DATA_SEND@blue^(0+1280),c
  7666   002F5A  0E00               	movlw	0
  7667   002F5C  EC11  F01A         	call	_WS2812_DATA_SEND
  7668                           
  7669                           ;maincode03.c: 48:             break;
  7670   002F60  0012               	return	
  7671   002F62                     i2l2487:
  7672                           
  7673                           ;maincode03.c: 50:             WS2812_DATA_SEND(50,0,0);
  7674   002F62  0E00               	movlw	0
  7675   002F64  6E04               	movwf	WS2812_DATA_SEND@red^(0+1280),c
  7676   002F66  0E00               	movlw	0
  7677   002F68  6E05               	movwf	WS2812_DATA_SEND@blue^(0+1280),c
  7678   002F6A  0E32               	movlw	50
  7679   002F6C  EC11  F01A         	call	_WS2812_DATA_SEND
  7680                           
  7681                           ;maincode03.c: 51:             break;
  7682   002F70  0012               	return	
  7683   002F72                     i2l2489:
  7684                           
  7685                           ;maincode03.c: 53:             WS2812_DATA_SEND(0,0,50);
  7686   002F72  0E00               	movlw	0
  7687   002F74  6E04               	movwf	WS2812_DATA_SEND@red^(0+1280),c
  7688   002F76  0E32               	movlw	50
  7689   002F78  6E05               	movwf	WS2812_DATA_SEND@blue^(0+1280),c
  7690   002F7A  0E00               	movlw	0
  7691   002F7C  EC11  F01A         	call	_WS2812_DATA_SEND
  7692                           
  7693                           ;maincode03.c: 54:             break;
  7694   002F80  0012               	return	
  7695   002F82                     i2l2493:
  7696   002F82  5024               	movf	_estado^(0+1280),w,c	;volatile
  7697                           
  7698                           ; Switch size 1, requested type "simple"
  7699                           ; Number of cases is 5, Range of values is 0 to 4
  7700                           ; switch strategies available:
  7701                           ; Name         Instructions Cycles
  7702                           ; simple_byte           16     9 (average)
  7703                           ;	Chosen strategy is simple_byte
  7704   002F84  0A00               	xorlw	0	; case 0
  7705   002F86  B4D8               	btfsc	status,2,c
  7706   002F88  D7D4               	goto	i2l2481
  7707   002F8A  0A01               	xorlw	1	; case 1
  7708   002F8C  B4D8               	btfsc	status,2,c
  7709   002F8E  D7D9               	goto	i2l2483
  7710   002F90  0A03               	xorlw	3	; case 2
  7711   002F92  B4D8               	btfsc	status,2,c
  7712   002F94  D7DE               	goto	i2l2485
  7713   002F96  0A01               	xorlw	1	; case 3
  7714   002F98  B4D8               	btfsc	status,2,c
  7715   002F9A  D7E3               	goto	i2l2487
  7716   002F9C  0A07               	xorlw	7	; case 4
  7717   002F9E  A4D8               	btfss	status,2,c
  7718   002FA0  0012               	return	
  7719   002FA2  D7E7               	goto	i2l2489
  7720   002FA4                     __end_of_ws2812_update:
  7721                           	callstack 0
  7722                           
  7723 ;; *************** function _WS2812_DATA_SEND *****************
  7724 ;; Defined at:
  7725 ;;		line 31 in file "LIB_WS2812.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;  green           1    wreg     unsigned char 
  7728 ;;  red             1    3[COMRAM] unsigned char 
  7729 ;;  blue            1    4[COMRAM] unsigned char 
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;  green           1    5[COMRAM] unsigned char 
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      void 
  7734 ;; Registers used:
  7735 ;;		wreg
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 3F/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7744 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7745 ;;Total ram usage:        3 bytes
  7746 ;; Hardware stack levels used: 1
  7747 ;; This function calls:
  7748 ;;		Nothing
  7749 ;; This function is called by:
  7750 ;;		_ws2812_update
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text25
  7755   003422                     __ptext25:
  7756                           	callstack 0
  7757   003422                     _WS2812_DATA_SEND:
  7758                           	callstack 120
  7759                           
  7760                           ;incstack = 0
  7761                           ;WS2812_DATA_SEND@green stored from wreg
  7762   003422  6E06               	movwf	WS2812_DATA_SEND@green^(0+1280),c
  7763                           
  7764                           ;LIB_WS2812.c: 32:     SPI1TXB = green;
  7765   003424  C506  F081         	movff	WS2812_DATA_SEND@green,129	;volatile
  7766   003428                     i2l436:
  7767   003428  0100               	movlb	0	; () banked
  7768   00342A  AB87               	btfss	135,5,b	;volatile
  7769   00342C  D7FD               	goto	i2l436
  7770                           
  7771                           ; BSR set to: 0
  7772                           ;LIB_WS2812.c: 34:     SPI1TXB = red;
  7773   00342E  C504  F081         	movff	WS2812_DATA_SEND@red,129	;volatile
  7774   003432                     i2l439:
  7775                           
  7776                           ; BSR set to: 0
  7777   003432  AB87               	btfss	135,5,b	;volatile
  7778   003434  D7FE               	goto	i2l439
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;LIB_WS2812.c: 36:     SPI1TXB = blue;
  7782   003436  C505  F081         	movff	WS2812_DATA_SEND@blue,129	;volatile
  7783   00343A                     i2l442:
  7784                           
  7785                           ; BSR set to: 0
  7786   00343A  BB87               	btfsc	135,5,b	;volatile
  7787   00343C  0012               	return	
  7788   00343E  D7FD               	goto	i2l442
  7789   003440                     __end_of_WS2812_DATA_SEND:
  7790                           	callstack 0
  7791                           
  7792 ;; *************** function _INT1_ISR *****************
  7793 ;; Defined at:
  7794 ;;		line 96 in file "maincode03.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;		None
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  1    wreg      void 
  7801 ;; Registers used:
  7802 ;;		wreg, status,2, status,0, cstack
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7812 ;;Total ram usage:        0 bytes
  7813 ;; Hardware stack levels used: 1
  7814 ;; Hardware stack levels required when called: 2
  7815 ;; This function calls:
  7816 ;;		_ws2812_update
  7817 ;; This function is called by:
  7818 ;;		Interrupt level 2
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           	psect	text26
  7823   003474                     __ptext26:
  7824                           	callstack 0
  7825   003474                     _INT1_ISR:
  7826                           	callstack 120
  7827                           
  7828                           ;maincode03.c: 97:     PIR6bits.INT1IF = 0;
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;incstack = 0
  7832   003474  90B4               	bcf	180,0,c	;volatile
  7833                           
  7834                           ;maincode03.c: 98:     if(estado == 0){
  7835   003476  5024               	movf	_estado^(0+1280),w,c	;volatile
  7836   003478  A4D8               	btfss	status,2,c
  7837   00347A  D003               	goto	i2l2563
  7838                           
  7839                           ;maincode03.c: 99:         estado = 4;
  7840   00347C  0E04               	movlw	4
  7841   00347E  6E24               	movwf	_estado^(0+1280),c	;volatile
  7842                           
  7843                           ;maincode03.c: 100:     }
  7844   003480  D001               	goto	i2l2565
  7845   003482                     i2l2563:
  7846                           
  7847                           ;maincode03.c: 102:         estado--;
  7848   003482  0624               	decf	_estado^(0+1280),f,c	;volatile
  7849   003484                     i2l2565:
  7850                           
  7851                           ;maincode03.c: 104:     ws2812_update();
  7852   003484  EC98  F017         	call	_ws2812_update	;wreg free
  7853   003488  0011               	retfie		f
  7854   00348A                     __end_of_INT1_ISR:
  7855                           	callstack 0
  7856                           
  7857                           ;
  7858                           ; H/W Interrupt Vector Table @ 0x8
  7859                           ;
  7860                           
  7861                           	psect	ivt0x8
  7862   000008                     __pivt0x8:
  7863                           	callstack 0
  7864   000008                     ivt0x8_base:
  7865                           	callstack 0
  7866                           
  7867                           ; Vector 0 : SWINT
  7868   000008  0040               	dw	ivt0x8_undefint shr (0+2)
  7869                           
  7870                           ; Vector 1 : HLVD
  7871   00000A  0040               	dw	ivt0x8_undefint shr (0+2)
  7872                           
  7873                           ; Vector 2 : OSF
  7874   00000C  0040               	dw	ivt0x8_undefint shr (0+2)
  7875                           
  7876                           ; Vector 3 : CSW
  7877   00000E  0040               	dw	ivt0x8_undefint shr (0+2)
  7878                           
  7879                           ; Vector 4 : Undefined
  7880   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  7881                           
  7882                           ; Vector 5 : CLC1
  7883   000012  0040               	dw	ivt0x8_undefint shr (0+2)
  7884                           
  7885                           ; Vector 6 : Undefined
  7886   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  7887                           
  7888                           ; Vector 7 : IOC
  7889   000016  0040               	dw	ivt0x8_undefint shr (0+2)
  7890                           
  7891                           ; Vector 8 : INT0
  7892   000018  0D17               	dw	_INT0_ISR shr (0+2)
  7893                           
  7894                           ; Vector 9 : ZCD
  7895   00001A  0040               	dw	ivt0x8_undefint shr (0+2)
  7896                           
  7897                           ; Vector 10 : AD
  7898   00001C  0040               	dw	ivt0x8_undefint shr (0+2)
  7899                           
  7900                           ; Vector 11 : ACT
  7901   00001E  0040               	dw	ivt0x8_undefint shr (0+2)
  7902                           
  7903                           ; Vector 12 : CMP1
  7904   000020  0040               	dw	ivt0x8_undefint shr (0+2)
  7905                           
  7906                           ; Vector 13 : SMT1
  7907   000022  0040               	dw	ivt0x8_undefint shr (0+2)
  7908                           
  7909                           ; Vector 14 : SMT1PRA
  7910   000024  0040               	dw	ivt0x8_undefint shr (0+2)
  7911                           
  7912                           ; Vector 15 : SMT1PRW
  7913   000026  0040               	dw	ivt0x8_undefint shr (0+2)
  7914                           
  7915                           ; Vector 16 : ADT
  7916   000028  0040               	dw	ivt0x8_undefint shr (0+2)
  7917                           
  7918                           ; Vector 17 : Undefined
  7919   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  7920                           
  7921                           ; Vector 18 : Undefined
  7922   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  7923                           
  7924                           ; Vector 19 : Undefined
  7925   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  7926                           
  7927                           ; Vector 20 : DMA1SCNT
  7928   000030  0040               	dw	ivt0x8_undefint shr (0+2)
  7929                           
  7930                           ; Vector 21 : DMA1DCNT
  7931   000032  0040               	dw	ivt0x8_undefint shr (0+2)
  7932                           
  7933                           ; Vector 22 : DMA1OR
  7934   000034  0040               	dw	ivt0x8_undefint shr (0+2)
  7935                           
  7936                           ; Vector 23 : DMA1A
  7937   000036  0040               	dw	ivt0x8_undefint shr (0+2)
  7938                           
  7939                           ; Vector 24 : SPI1RX
  7940   000038  0040               	dw	ivt0x8_undefint shr (0+2)
  7941                           
  7942                           ; Vector 25 : SPI1TX
  7943   00003A  0040               	dw	ivt0x8_undefint shr (0+2)
  7944                           
  7945                           ; Vector 26 : SPI1
  7946   00003C  0040               	dw	ivt0x8_undefint shr (0+2)
  7947                           
  7948                           ; Vector 27 : TMR2
  7949   00003E  0040               	dw	ivt0x8_undefint shr (0+2)
  7950                           
  7951                           ; Vector 28 : TMR1
  7952   000040  0040               	dw	ivt0x8_undefint shr (0+2)
  7953                           
  7954                           ; Vector 29 : TMR1G
  7955   000042  0040               	dw	ivt0x8_undefint shr (0+2)
  7956                           
  7957                           ; Vector 30 : CCP1
  7958   000044  0040               	dw	ivt0x8_undefint shr (0+2)
  7959                           
  7960                           ; Vector 31 : TMR0
  7961   000046  0040               	dw	ivt0x8_undefint shr (0+2)
  7962                           
  7963                           ; Vector 32 : U1RX
  7964   000048  0040               	dw	ivt0x8_undefint shr (0+2)
  7965                           
  7966                           ; Vector 33 : U1TX
  7967   00004A  0040               	dw	ivt0x8_undefint shr (0+2)
  7968                           
  7969                           ; Vector 34 : U1E
  7970   00004C  0040               	dw	ivt0x8_undefint shr (0+2)
  7971                           
  7972                           ; Vector 35 : U1
  7973   00004E  0040               	dw	ivt0x8_undefint shr (0+2)
  7974                           
  7975                           ; Vector 36 : Undefined
  7976   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  7977                           
  7978                           ; Vector 37 : Undefined
  7979   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  7980                           
  7981                           ; Vector 38 : PWM1PR
  7982   000054  0040               	dw	ivt0x8_undefint shr (0+2)
  7983                           
  7984                           ; Vector 39 : PWM1
  7985   000056  0040               	dw	ivt0x8_undefint shr (0+2)
  7986                           
  7987                           ; Vector 40 : SPI2RX
  7988   000058  0040               	dw	ivt0x8_undefint shr (0+2)
  7989                           
  7990                           ; Vector 41 : SPI2TX
  7991   00005A  0040               	dw	ivt0x8_undefint shr (0+2)
  7992                           
  7993                           ; Vector 42 : SPI2
  7994   00005C  0040               	dw	ivt0x8_undefint shr (0+2)
  7995                           
  7996                           ; Vector 43 : Undefined
  7997   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  7998                           
  7999                           ; Vector 44 : TMR3
  8000   000060  0040               	dw	ivt0x8_undefint shr (0+2)
  8001                           
  8002                           ; Vector 45 : TMR3G
  8003   000062  0040               	dw	ivt0x8_undefint shr (0+2)
  8004                           
  8005                           ; Vector 46 : PWM2PR
  8006   000064  0040               	dw	ivt0x8_undefint shr (0+2)
  8007                           
  8008                           ; Vector 47 : PWM2
  8009   000066  0040               	dw	ivt0x8_undefint shr (0+2)
  8010                           
  8011                           ; Vector 48 : INT1
  8012   000068  0D1D               	dw	_INT1_ISR shr (0+2)
  8013                           
  8014                           ; Vector 49 : CLC2
  8015   00006A  0040               	dw	ivt0x8_undefint shr (0+2)
  8016                           
  8017                           ; Vector 50 : CWG1
  8018   00006C  0040               	dw	ivt0x8_undefint shr (0+2)
  8019                           
  8020                           ; Vector 51 : NCO1
  8021   00006E  0040               	dw	ivt0x8_undefint shr (0+2)
  8022                           
  8023                           ; Vector 52 : DMA2SCNT
  8024   000070  0040               	dw	ivt0x8_undefint shr (0+2)
  8025                           
  8026                           ; Vector 53 : DMA2DCNT
  8027   000072  0040               	dw	ivt0x8_undefint shr (0+2)
  8028                           
  8029                           ; Vector 54 : DMA2OR
  8030   000074  0040               	dw	ivt0x8_undefint shr (0+2)
  8031                           
  8032                           ; Vector 55 : DMA2A
  8033   000076  0040               	dw	ivt0x8_undefint shr (0+2)
  8034                           
  8035                           ; Vector 56 : I2C1RX
  8036   000078  0040               	dw	ivt0x8_undefint shr (0+2)
  8037                           
  8038                           ; Vector 57 : I2C1TX
  8039   00007A  0040               	dw	ivt0x8_undefint shr (0+2)
  8040                           
  8041                           ; Vector 58 : I2C1
  8042   00007C  0040               	dw	ivt0x8_undefint shr (0+2)
  8043                           
  8044                           ; Vector 59 : I2C1E
  8045   00007E  0040               	dw	ivt0x8_undefint shr (0+2)
  8046                           
  8047                           ; Vector 60 : Undefined
  8048   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  8049                           
  8050                           ; Vector 61 : CLC3
  8051   000082  0040               	dw	ivt0x8_undefint shr (0+2)
  8052                           
  8053                           ; Vector 62 : PWM3PR
  8054   000084  0040               	dw	ivt0x8_undefint shr (0+2)
  8055                           
  8056                           ; Vector 63 : PWM3
  8057   000086  0040               	dw	ivt0x8_undefint shr (0+2)
  8058                           
  8059                           ; Vector 64 : U2RX
  8060   000088  0040               	dw	ivt0x8_undefint shr (0+2)
  8061                           
  8062                           ; Vector 65 : U2TX
  8063   00008A  0040               	dw	ivt0x8_undefint shr (0+2)
  8064                           
  8065                           ; Vector 66 : U2E
  8066   00008C  0040               	dw	ivt0x8_undefint shr (0+2)
  8067                           
  8068                           ; Vector 67 : U2
  8069   00008E  0040               	dw	ivt0x8_undefint shr (0+2)
  8070                           
  8071                           ; Vector 68 : TMR5
  8072   000090  0040               	dw	ivt0x8_undefint shr (0+2)
  8073                           
  8074                           ; Vector 69 : TMR5G
  8075   000092  0040               	dw	ivt0x8_undefint shr (0+2)
  8076                           
  8077                           ; Vector 70 : CCP2
  8078   000094  0040               	dw	ivt0x8_undefint shr (0+2)
  8079                           
  8080                           ; Vector 71 : SCAN
  8081   000096  0040               	dw	ivt0x8_undefint shr (0+2)
  8082                           
  8083                           ; Vector 72 : U3RX
  8084   000098  0040               	dw	ivt0x8_undefint shr (0+2)
  8085                           
  8086                           ; Vector 73 : U3TX
  8087   00009A  0040               	dw	ivt0x8_undefint shr (0+2)
  8088                           
  8089                           ; Vector 74 : U3E
  8090   00009C  0040               	dw	ivt0x8_undefint shr (0+2)
  8091                           
  8092                           ; Vector 75 : U3
  8093   00009E  0040               	dw	ivt0x8_undefint shr (0+2)
  8094                           
  8095                           ; Vector 76 : Undefined
  8096   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  8097                           
  8098                           ; Vector 77 : CLC4
  8099   0000A2  0040               	dw	ivt0x8_undefint shr (0+2)
  8100                           
  8101                           ; Vector 78 : Undefined
  8102   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  8103                           
  8104                           ; Vector 79 : Undefined
  8105   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  8106                           
  8107                           ; Vector 80 : INT2
  8108   0000A8  0040               	dw	ivt0x8_undefint shr (0+2)
  8109                           
  8110                           ; Vector 81 : CLC5
  8111   0000AA  0040               	dw	ivt0x8_undefint shr (0+2)
  8112                           
  8113                           ; Vector 82 : CWG2
  8114   0000AC  0040               	dw	ivt0x8_undefint shr (0+2)
  8115                           
  8116                           ; Vector 83 : NCO2
  8117   0000AE  0040               	dw	ivt0x8_undefint shr (0+2)
  8118                           
  8119                           ; Vector 84 : DMA3SCNT
  8120   0000B0  0040               	dw	ivt0x8_undefint shr (0+2)
  8121                           
  8122                           ; Vector 85 : DMA3DCNT
  8123   0000B2  0040               	dw	ivt0x8_undefint shr (0+2)
  8124                           
  8125                           ; Vector 86 : DMA3OR
  8126   0000B4  0040               	dw	ivt0x8_undefint shr (0+2)
  8127                           
  8128                           ; Vector 87 : DMA3A
  8129   0000B6  0040               	dw	ivt0x8_undefint shr (0+2)
  8130                           
  8131                           ; Vector 88 : CCP3
  8132   0000B8  0040               	dw	ivt0x8_undefint shr (0+2)
  8133                           
  8134                           ; Vector 89 : CLC6
  8135   0000BA  0040               	dw	ivt0x8_undefint shr (0+2)
  8136                           
  8137                           ; Vector 90 : CWG3
  8138   0000BC  0040               	dw	ivt0x8_undefint shr (0+2)
  8139                           
  8140                           ; Vector 91 : TMR4
  8141   0000BE  0040               	dw	ivt0x8_undefint shr (0+2)
  8142                           
  8143                           ; Vector 92 : DMA4SCNT
  8144   0000C0  0040               	dw	ivt0x8_undefint shr (0+2)
  8145                           
  8146                           ; Vector 93 : DMA4DCNT
  8147   0000C2  0040               	dw	ivt0x8_undefint shr (0+2)
  8148                           
  8149                           ; Vector 94 : DMA4OR
  8150   0000C4  0040               	dw	ivt0x8_undefint shr (0+2)
  8151                           
  8152                           ; Vector 95 : DMA4A
  8153   0000C6  0040               	dw	ivt0x8_undefint shr (0+2)
  8154                           
  8155                           ; Vector 96 : U4RX
  8156   0000C8  0040               	dw	ivt0x8_undefint shr (0+2)
  8157                           
  8158                           ; Vector 97 : U4TX
  8159   0000CA  0040               	dw	ivt0x8_undefint shr (0+2)
  8160                           
  8161                           ; Vector 98 : U4E
  8162   0000CC  0040               	dw	ivt0x8_undefint shr (0+2)
  8163                           
  8164                           ; Vector 99 : U4
  8165   0000CE  0040               	dw	ivt0x8_undefint shr (0+2)
  8166                           
  8167                           ; Vector 100 : DMA5SCNT
  8168   0000D0  0040               	dw	ivt0x8_undefint shr (0+2)
  8169                           
  8170                           ; Vector 101 : DMA5DCNT
  8171   0000D2  0040               	dw	ivt0x8_undefint shr (0+2)
  8172                           
  8173                           ; Vector 102 : DMA5OR
  8174   0000D4  0040               	dw	ivt0x8_undefint shr (0+2)
  8175                           
  8176                           ; Vector 103 : DMA5A
  8177   0000D6  0040               	dw	ivt0x8_undefint shr (0+2)
  8178                           
  8179                           ; Vector 104 : U5RX
  8180   0000D8  0040               	dw	ivt0x8_undefint shr (0+2)
  8181                           
  8182                           ; Vector 105 : U5TX
  8183   0000DA  0040               	dw	ivt0x8_undefint shr (0+2)
  8184                           
  8185                           ; Vector 106 : U5E
  8186   0000DC  0040               	dw	ivt0x8_undefint shr (0+2)
  8187                           
  8188                           ; Vector 107 : U5
  8189   0000DE  0040               	dw	ivt0x8_undefint shr (0+2)
  8190                           
  8191                           ; Vector 108 : DMA6SCNT
  8192   0000E0  0040               	dw	ivt0x8_undefint shr (0+2)
  8193                           
  8194                           ; Vector 109 : DMA6DCNT
  8195   0000E2  0040               	dw	ivt0x8_undefint shr (0+2)
  8196                           
  8197                           ; Vector 110 : DMA6OR
  8198   0000E4  0040               	dw	ivt0x8_undefint shr (0+2)
  8199                           
  8200                           ; Vector 111 : DMA6A
  8201   0000E6  0040               	dw	ivt0x8_undefint shr (0+2)
  8202                           
  8203                           ; Vector 112 : Undefined
  8204   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  8205                           
  8206                           ; Vector 113 : CLC7
  8207   0000EA  0040               	dw	ivt0x8_undefint shr (0+2)
  8208                           
  8209                           ; Vector 114 : CMP2
  8210   0000EC  0040               	dw	ivt0x8_undefint shr (0+2)
  8211                           
  8212                           ; Vector 115 : NCO3
  8213   0000EE  0040               	dw	ivt0x8_undefint shr (0+2)
  8214                           
  8215                           ; Vector 116 : Undefined
  8216   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  8217                           
  8218                           ; Vector 117 : Undefined
  8219   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  8220                           
  8221                           ; Vector 118 : Undefined
  8222   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  8223                           
  8224                           ; Vector 119 : Undefined
  8225   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  8226                           
  8227                           ; Vector 120 : NVM
  8228   0000F8  0040               	dw	ivt0x8_undefint shr (0+2)
  8229                           
  8230                           ; Vector 121 : CLC8
  8231   0000FA  0040               	dw	ivt0x8_undefint shr (0+2)
  8232                           
  8233                           ; Vector 122 : CRC
  8234   0000FC  0040               	dw	ivt0x8_undefint shr (0+2)
  8235                           
  8236                           ; Vector 123 : TMR6
  8237   0000FE  0040               	dw	ivt0x8_undefint shr (0+2)
  8238   000100                     ivt0x8_undefint:
  8239                           	callstack 0
  8240   000100  00FF               	reset	
  8241                           
  8242                           	psect	rparam
  8243   000001                     ___rparam_used  equ	1
  8244   000000                     ___param_bank   equ	0
  8245   000000                     __Lparam        equ	__Lrparam
  8246   000000                     __Hparam        equ	__Hrparam
  8247                           
  8248                           	psect	config
  8249                           
  8250                           ;Config register CONFIG1 @ 0x300000
  8251                           ;	External Oscillator Selection
  8252                           ;	FEXTOSC = OFF, Oscillator not enabled
  8253                           ;	Reset Oscillator Selection
  8254                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  8255   300000                     	org	3145728
  8256   300000  FC                 	db	252
  8257                           
  8258                           ;Config register CONFIG2 @ 0x300001
  8259                           ;	Clock out Enable bit
  8260                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  8261                           ;	PRLOCKED One-Way Set Enable bit
  8262                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  8263                           ;	Clock Switch Enable bit
  8264                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8265                           ;	Fail-Safe Clock Monitor Enable bit
  8266                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  8267   300001                     	org	3145729
  8268   300001  FF                 	db	255
  8269                           
  8270                           ;Config register CONFIG3 @ 0x300002
  8271                           ;	MCLR Enable bit
  8272                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  8273                           ;	Power-up timer selection bits
  8274                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  8275                           ;	Multi-vector enable bit
  8276                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  8277                           ;	IVTLOCK bit One-way set enable bit
  8278                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  8279                           ;	Low Power BOR Enable bit
  8280                           ;	LPBOREN = OFF, Low-Power BOR disabled
  8281                           ;	Brown-out Reset Enable bits
  8282                           ;	BOREN = OFF, Brown-out Reset disabled
  8283   300002                     	org	3145730
  8284   300002  3D                 	db	61
  8285                           
  8286                           ;Config register CONFIG4 @ 0x300003
  8287                           ;	Brown-out Reset Voltage Selection bits
  8288                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  8289                           ;	ZCD Disable bit
  8290                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  8291                           ;	PPSLOCK bit One-Way Set Enable bit
  8292                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  8293                           ;	Stack Full/Underflow Reset Enable bit
  8294                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8295                           ;	Low Voltage Programming Enable bit
  8296                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  8297                           ;	Extended Instruction Set Enable bit
  8298                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  8299   300003                     	org	3145731
  8300   300003  DF                 	db	223
  8301                           
  8302                           ;Config register CONFIG5 @ 0x300004
  8303                           ;	WDT Period selection bits
  8304                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8305                           ;	WDT operating mode
  8306                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  8307   300004                     	org	3145732
  8308   300004  9F                 	db	159
  8309                           
  8310                           ;Config register CONFIG6 @ 0x300005
  8311                           ;	WDT Window Select bits
  8312                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8313                           ;	WDT input clock selector
  8314                           ;	WDTCCS = SC, Software Control
  8315   300005                     	org	3145733
  8316   300005  FF                 	db	255
  8317                           
  8318                           ;Config register CONFIG7 @ 0x300006
  8319                           ;	Boot Block Size selection bits
  8320                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  8321                           ;	Boot Block enable bit
  8322                           ;	BBEN = OFF, Boot block disabled
  8323                           ;	Storage Area Flash enable bit
  8324                           ;	SAFEN = OFF, SAF disabled
  8325                           ;	Background Debugger
  8326                           ;	DEBUG = OFF, Background Debugger disabled
  8327   300006                     	org	3145734
  8328   300006  FF                 	db	255
  8329                           
  8330                           ;Config register CONFIG8 @ 0x300007
  8331                           ;	Boot Block Write Protection bit
  8332                           ;	WRTB = OFF, Boot Block not Write protected
  8333                           ;	Configuration Register Write Protection bit
  8334                           ;	WRTC = OFF, Configuration registers not Write protected
  8335                           ;	Data EEPROM Write Protection bit
  8336                           ;	WRTD = OFF, Data EEPROM not Write protected
  8337                           ;	SAF Write protection bit
  8338                           ;	WRTSAF = OFF, SAF not Write Protected
  8339                           ;	Application Block write protection bit
  8340                           ;	WRTAPP = OFF, Application Block not write protected
  8341   300007                     	org	3145735
  8342   300007  FF                 	db	255
  8343                           
  8344                           ;Config register CONFIG10 @ 0x300009
  8345                           ;	PFM and Data EEPROM Code Protection bit
  8346                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  8347   300009                     	org	3145737
  8348   300009  FF                 	db	255
  8349                           tosu	equ	0x4FF
  8350                           tosh	equ	0x4FE
  8351                           tosl	equ	0x4FD
  8352                           stkptr	equ	0x4FC
  8353                           pclatu	equ	0x4FB
  8354                           pclath	equ	0x4FA
  8355                           pcl	equ	0x4F9
  8356                           tblptru	equ	0x4F8
  8357                           tblptrh	equ	0x4F7
  8358                           tblptrl	equ	0x4F6
  8359                           tablat	equ	0x4F5
  8360                           prodh	equ	0x4F4
  8361                           prodl	equ	0x4F3
  8362                           indf0	equ	0x4EF
  8363                           postinc0	equ	0x4EE
  8364                           postdec0	equ	0x4ED
  8365                           preinc0	equ	0x4EC
  8366                           plusw0	equ	0x4EB
  8367                           fsr0h	equ	0x4EA
  8368                           fsr0l	equ	0x4E9
  8369                           wreg	equ	0x4E8
  8370                           indf1	equ	0x4E7
  8371                           postinc1	equ	0x4E6
  8372                           postdec1	equ	0x4E5
  8373                           preinc1	equ	0x4E4
  8374                           plusw1	equ	0x4E3
  8375                           fsr1h	equ	0x4E2
  8376                           fsr1l	equ	0x4E1
  8377                           bsr	equ	0x4E0
  8378                           indf2	equ	0x4DF
  8379                           postinc2	equ	0x4DE
  8380                           postdec2	equ	0x4DD
  8381                           preinc2	equ	0x4DC
  8382                           plusw2	equ	0x4DB
  8383                           fsr2h	equ	0x4DA
  8384                           fsr2l	equ	0x4D9
  8385                           status	equ	0x4D8

Data Sizes:
    Strings     53
    Constant    0
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      38
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    I2C_ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[14]), STR_3(CODE[10]), STR_4(CODE[11]), 
		 -> STR_5(CODE[4]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[14]), STR_3(CODE[10]), STR_4(CODE[11]), 
		 -> STR_5(CODE[4]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[14]), STR_3(CODE[10]), STR_4(CODE[11]), 
		 -> STR_5(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_I2C_LCD_ESCRIBE_VAR_INT
    _I2C_POS_CURSOR->_I2C_ENVIA_LCD_CMD
    _I2C_LCD_INIT->_I2C_CURSOR_ONOFF
    _I2C_CURSOR_ONOFF->_I2C_ENVIA_LCD_CMD
    _I2C_CURSOR_HOME->_I2C_ENVIA_LCD_CMD
    _I2C_BORRAR_LCD->_I2C_ENVIA_LCD_CMD
    _I2C_ENVIA_LCD_CMD->_I2C1_WRITESINGLEBYTE
    _I2C_LCD_ESCRIBE_VAR_INT->___lwdiv
    ___lwdiv->___lwmod
    _I2C_LCD_CHAR_GRADO->_I2C_ENVIA_LCD_DATA
    _I2C_ESCRIBE_MENSAJE2->_I2C_ENVIA_LCD_DATA
    _I2C_ENVIA_LCD_DATA->_I2C1_WRITESINGLEBYTE
    _DHT_GetTemp->_DHT_Read
    _DHT_GetHumid->_DHT_Read

Critical Paths under _INT0_ISR in COMRAM

    _ws2812_update->_WS2812_DATA_SEND

Critical Paths under _INT1_ISR in COMRAM

    _ws2812_update->_WS2812_DATA_SEND

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _INT1_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _INT1_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _INT1_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _INT1_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Critical Paths under _INT1_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6862
                                             27 COMRAM     4     4      0
                       _DHT_GetHumid
                        _DHT_GetTemp
                     _I2C_BORRAR_LCD
                 _I2C_ENVIA_LCD_DATA
               _I2C_ESCRIBE_MENSAJE2
                 _I2C_LCD_CHAR_GRADO
            _I2C_LCD_ESCRIBE_VAR_INT
                       _I2C_LCD_INIT
                     _I2C_POS_CURSOR
                        _WS2812_INIT
                            ___lwdiv
                          _configuro
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WS2812_INIT                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_POS_CURSOR                                       3     2      1     459
                                             12 COMRAM     3     2      1
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_INIT                                         2     2      0     914
                                             13 COMRAM     2     2      0
                          _I2C1_INIT
               _I2C1_WRITESINGLEBYTE
                     _I2C_BORRAR_LCD
                    _I2C_CURSOR_HOME
                   _I2C_CURSOR_ONOFF
 ---------------------------------------------------------------------------------
 (2) _I2C_CURSOR_ONOFF                                     1     1      0     309
                                             12 COMRAM     1     1      0
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_CURSOR_HOME                                      0     0      0     251
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_BORRAR_LCD                                       0     0      0     251
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_ENVIA_LCD_CMD                                    4     4      0     251
                                              8 COMRAM     4     4      0
               _I2C1_WRITESINGLEBYTE
 ---------------------------------------------------------------------------------
 (2) _I2C1_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_ESCRIBE_VAR_INT                              9     5      4    2055
                                             18 COMRAM     9     5      4
                 _I2C_ENVIA_LCD_DATA
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     167
                                              6 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     174
                                             11 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_CHAR_GRADO                                   0     0      0     251
                 _I2C_ENVIA_LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _I2C_ESCRIBE_MENSAJE2                                 4     3      1     461
                                             12 COMRAM     4     3      1
                 _I2C_ENVIA_LCD_DATA
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _I2C_ENVIA_LCD_DATA                                   4     4      0     251
                                              8 COMRAM     4     4      0
               _I2C1_WRITESINGLEBYTE
 ---------------------------------------------------------------------------------
 (3) _I2C1_WRITESINGLEBYTE                                 2     1      1     103
                                              6 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _DHT_GetTemp                                         12    10      2    1000
                                             10 COMRAM     9     7      2
                          _DHT_Check
                           _DHT_Read
                          _DHT_Start
 ---------------------------------------------------------------------------------
 (1) _DHT_GetHumid                                        12    10      2    1000
                                             10 COMRAM     9     7      2
                          _DHT_Check
                           _DHT_Read
                          _DHT_Start
 ---------------------------------------------------------------------------------
 (2) _DHT_Start                                            2     2      0      58
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT_Read                                             4     4      0     362
                                              6 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _DHT_Check                                            2     2      0     202
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0      83
                      _ws2812_update
 ---------------------------------------------------------------------------------
 (6) _ws2812_update                                        0     0      0      83
                   _WS2812_DATA_SEND
 ---------------------------------------------------------------------------------
 (7) _WS2812_DATA_SEND                                     3     1      2      83
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0      83
                      _ws2812_update
 ---------------------------------------------------------------------------------
 (6) _ws2812_update                                        0     0      0      83
                   _WS2812_DATA_SEND
 ---------------------------------------------------------------------------------
 (7) _WS2812_DATA_SEND                                     3     1      2      83
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT_GetHumid
     _DHT_Check
     _DHT_Read
     _DHT_Start
   _DHT_GetTemp
     _DHT_Check
     _DHT_Read
     _DHT_Start
   _I2C_BORRAR_LCD
     _I2C_ENVIA_LCD_CMD
       _I2C1_WRITESINGLEBYTE
   _I2C_ENVIA_LCD_DATA
     _I2C1_WRITESINGLEBYTE
   _I2C_ESCRIBE_MENSAJE2
     _I2C_ENVIA_LCD_DATA
     _strlen
   _I2C_LCD_CHAR_GRADO
     _I2C_ENVIA_LCD_DATA
   _I2C_LCD_ESCRIBE_VAR_INT
     _I2C_ENVIA_LCD_DATA
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _I2C_LCD_INIT
     _I2C1_INIT
     _I2C1_WRITESINGLEBYTE
     _I2C_BORRAR_LCD
     _I2C_CURSOR_HOME
       _I2C_ENVIA_LCD_CMD
     _I2C_CURSOR_ONOFF
       _I2C_ENVIA_LCD_CMD
   _I2C_POS_CURSOR
     _I2C_ENVIA_LCD_CMD
   _WS2812_INIT
   ___lwdiv
   _configuro

 _INT0_ISR (ROOT)
   _ws2812_update
     _WS2812_DATA_SEND

 _INT1_ISR (ROOT)
   _ws2812_update
     _WS2812_DATA_SEND

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRh        1065      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITBIGSFRll        129      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     31      38     40.0%
BITBIGSFRlh         84      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      38      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jun 23 19:41:34 2025

                              l51 3414                                l66 3186              ??_I2C_LCD_CHAR_GRADO 050D  
                             l261 2E5A                               l245 2E10                               l939 328E  
                             l949 3360                               u600 341C                               u710 2ECE  
                             u900 2E6A                               u830 2E20                               u590 3418  
                             u760 2EFE                               u690 2EB6                               u930 2E92  
                             u780 2F16                               u940 2E9A                               u860 2E48  
                             u990 3268                      DHT_Read@data 050A                    ??_DHT_GetHumid 050D  
                             wreg 04E8                      _I2C_LCD_ADDR 0526                      _I2C_LCD_INIT 2638  
               _I2C_ENVIA_LCD_CMD 3010                              l2011 2E14                              l2013 2E16  
                            l2023 2E32                              l2111 3356                              l2103 3336  
                            l2025 2E38                              l2105 333E                              l2027 2E3C  
                            l2123 3164                              l2061 2E86                              l2045 2E5E  
                            l2029 2E3E                              l2037 2E52                              l2063 2E88  
                            l2047 2E60                              l2143 3396                              l2127 3176  
                            l2119 3152                              l2057 2E7C                              l2059 2E82  
                            l2139 337A                              l2083 325C                              l2331 2A42  
                            l2085 3264                              l2341 2A82                              l2333 2A4C  
                            l2407 30B6                              l2095 3284                              l2351 2AF2  
                            l2343 2A9C                              l2361 2B8C                              l2353 2B14  
                            l2345 2ABC                              l2337 2A64                              l2371 2C62  
                            l2363 2BA8                              l2355 2B3C                              l2365 2BD2  
                            l2357 2B64                              l2349 2ADC                              l2517 2D20  
                            l2439 311A                              l1911 33D8                              l2375 2C92  
                            l2367 2C02                              l1913 33DA                              l2369 2C32  
                            l1931 31C4                              l2379 2CB4                              l1945 2EAA  
                            l1955 2EC2                              l1947 2EAC                              l1971 2EE8  
                            l1965 2EDA                              l1957 2EC4                              l1975 2EF2  
                            l1967 2EDC                              l1887 344E                              l1985 2F0A  
                            l1977 2EF4                              l1995 2F22                              l1987 2F0C  
                            l1997 2F24                              STR_1 2601                              STR_2 260F  
                            STR_3 2628                              STR_4 261D                              STR_5 2632  
                            u1020 3342                              u1207 318C                              u1217 2642  
                            u1307 270E                              u1227 2660                              u1317 2724  
                            u1237 2684                              u1407 27C4                              u1327 2738  
                            u1247 2696                              u1417 27D4                              u1337 274A  
                            u1257 26AC                              u1177 2D10                              u1507 2870  
                            u1427 27E6                              u1347 275C                              u1267 26C0  
                            u1187 2D84                              u1517 2882                              u1437 27F8  
                            u1357 276C                              u1277 26D2                              u1197 2DF4  
                            u1607 2928                              u1527 2898                              u1447 2808  
                            u1367 277E                              u1287 26E8                              u1617 293A  
                            u1537 28AE                              u1457 281A                              u1377 2790  
                            u1297 26FC                              _T2PR 0323                              u1707 2FE0  
                            u1627 294A                              u1547 28C0                              u1467 282C  
                            u1387 27A0                              u1717 2FF4                              u1637 295C  
                            u1557 28D2                              u1477 283C                              u1397 27B2  
                            u1807 2ED0                              u1727 3008                              u1647 2972  
                            u1567 28E2                              u1487 284E                              u1817 2F00  
                            u1737 31AE                              u1657 3038                              u1577 28F4  
                            u1497 2860                              u1827 2F18                              u1747 31BA  
                            u1667 304A                              u1587 2906                              u1757 31D8  
                            u1677 305E                              u1597 2916                              u1767 31E6  
                            u1687 3070                              u1777 2E22                              u1697 2FCC  
                            u1787 2E6C                              u1797 2EB8                ?_I2C_ENVIA_LCD_CMD 0501  
        I2C_ENVIA_LCD_CMD@command 050A                              _main 2CD6                DHT_GetHumid@RH_Dec 050F  
              DHT_GetHumid@RH_Ent 0512                 ??_I2C_CURSOR_HOME 050D                              start 0102  
             ??_I2C_ENVIA_LCD_CMD 0509                    _SPI1STATUSbits 0087                      ___param_bank 0000  
                __end_of_DHT_Read 2E9E                _I2C_ENVIA_LCD_DATA 2FA4                  __end_of_INT0_ISR 3472  
                __end_of_INT1_ISR 348A                 __end_of_I2C1_INIT 32E2                DHT_GetHumid@modelo 0513  
                           ?_main 0501                             _T2CON 0324                   __end_of___lwdiv 3298  
                 __end_of___lwmod 336A                             i2l442 343A                             i2l436 3428  
                           i2l439 3432                             _OSCEN 00B3               ?_I2C_ENVIA_LCD_DATA 0501  
       __end_of_I2C_ENVIA_LCD_CMD 3078                 DHT_GetTemp@modelo 0513                    _I2C_BORRAR_LCD 3492  
                    ?_WS2812_INIT 0501                 ?_I2C_CURSOR_ONOFF 0501                             tablat 04F5  
                  DHT_Read@modelo 0507                             status 04D8                ??_I2C_CURSOR_ONOFF 050D  
                  DHT_Read@temp_x 0509            I2C_CURSOR_ONOFF@estado 050D              ??_I2C_ENVIA_LCD_DATA 0509  
                 __initialization 33A0                      __end_of_main 2E04                 __end_of_DHT_Check 2F30  
         I2C_ESCRIBE_MENSAJE2@tam 050F                            ??_main 051C                 __end_of_DHT_Start 31F0  
                   __activetblptr 0003          ?_I2C_LCD_ESCRIBE_VAR_INT 0513               WS2812_DATA_SEND@red 0504  
          __end_of_I2C_BORRAR_LCD 349A                            _CCPR1H 0341                            _CCPR1L 0340  
                          _RC3PPS 0214                            _RC4PPS 0215                            _RF2PPS 022B  
                          i2l2481 2F32                            i2l2553 346A                            i2l2563 3482  
                          i2l2483 2F42                            i2l2555 346C                            i2l2565 3484  
                          i2l2485 2F52                            i2l2493 2F82                            i2l2487 2F62  
                          i2l2489 2F72                            _OSCFRQ 00B1             __end_of_ws2812_update 2FA4  
            __end_of_DHT_GetHumid 3140     I2C1_WRITESINGLEBYTE@direccion 0508                         ??___lwdiv 0510  
                       ??___lwmod 050B                            _cuenta 0525                            _estado 0524  
                          isa$std 0001                            _strlen 33D2                      __pdataCOMRAM 0526  
        __end_of_WS2812_DATA_SEND 3440                      __mediumconst 2600                            tblptrh 04F7  
                          tblptrl 04F6                            tblptru 04F8                   ?_I2C_BORRAR_LCD 0501  
                  _I2C_POS_CURSOR 3140                         ?_DHT_Read 0501                        __accesstop 0560  
         __end_of__initialization 33CC                         ?_INT0_ISR 0501                         ?_INT1_ISR 0501  
                       DHT_Read@x 0508                     ___rparam_used 0001                    __pcstackCOMRAM 0501  
    I2C_LCD_ESCRIBE_VAR_INT@punto 0516                    ivt0x8_undefint 0100   __end_of_I2C_LCD_ESCRIBE_VAR_INT 2CD6  
           I2C_ESCRIBE_MENSAJE2@i 0510                   _I2C_CURSOR_HOME 348A            __end_of_I2C_POS_CURSOR 3198  
                      ??_DHT_Read 0507                        ??_INT0_ISR 0504                        ??_INT1_ISR 0507  
            WS2812_DATA_SEND@blue 0505                           IVTBASEH 045E                           IVTBASEL 045D  
                         IVTBASEU 045F                           _I2C1CNT 028D                           _I2C1TXB 028C  
                         _CCP1CON 0342       I2C_ENVIA_LCD_DATA@lownibble 050C                           ?_strlen 0507  
                         _CLCnCON 00D6                           _CLCnPOL 00D7                           _INT0PPS 023E  
                         _INT1PPS 023F                         _I2C1_INIT 3298                           _OSCCON1 00AD  
    __end_of_I2C_ESCRIBE_MENSAJE2 33A0                           _SPI1CLK 008C                           _SPI1TXB 0081  
                 ?_I2C_POS_CURSOR 050D               DHT_GetTemp@Temp_Dec 050F               DHT_GetTemp@Temp_Ent 0512  
      I2C_ESCRIBE_MENSAJE2@cadena 050D                           __Hparam 0000                           __Lparam 0000  
                       _CLCSELECT 00D5                 __end_of_configuro 3328                           ___lwdiv 3246  
                         ___lwmod 3328                      __psmallconst 2600                           __pcinit 33A0  
                         __ramtop 2600                           __ptext0 2CD6                           __ptext1 32E2  
                         __ptext2 31F0                           __ptext3 3140                           __ptext4 2638  
                         __ptext5 3440                           __ptext6 348A                           __ptext7 3492  
                         __ptext8 3010                           __ptext9 3298           __end_of_I2C_CURSOR_HOME 3492  
                     _I2C1CLKbits 029C                        ?_I2C1_INIT 0501        I2C_ENVIA_LCD_CMD@lownibble 050C  
                       _DHT_Check 2E9E                      _DHT_GetHumid 30DC                         _DHT_Start 3198  
                     _I2C1PIRbits 029A              end_of_initialization 33CC  I2C_LCD_ESCRIBE_VAR_INT@n_digitos 0515  
              I2C_POS_CURSOR@fila 050F                           strlen@a 0509                           strlen@s 0507  
                       _PORTBbits 04CF                  ??_I2C_BORRAR_LCD 050D                        ?_DHT_Check 0501  
               ?_WS2812_DATA_SEND 0504                         _TRISBbits 04C7                         _TRISCbits 04C8  
                       _TRISFbits 04CB                        ?_DHT_Start 0501                ??_WS2812_DATA_SEND 0506  
                   ??_DHT_GetTemp 050D              _I2C_ESCRIBE_MENSAJE2 336A     I2C_LCD_ESCRIBE_VAR_INT@decena 051A  
   I2C_LCD_ESCRIBE_VAR_INT@millar 0518                     __pidataCOMRAM 34A2     I2C_LCD_ESCRIBE_VAR_INT@numero 0513  
   I2C_LCD_ESCRIBE_VAR_INT@unidad 051B                  ?_I2C_CURSOR_HOME 0501                       ??_I2C1_INIT 0507  
                  __end_of_strlen 33FE               start_initialization 33A0                     ?_I2C_LCD_INIT 0501  
    __end_of_I2C1_WRITESINGLEBYTE 3422                        ivt0x8_base 0008               __end_of_DHT_GetTemp 30DC  
           ?_I2C_ESCRIBE_MENSAJE2 050D      I2C_ENVIA_LCD_DATA@highnibble 050B                  _I2C_CURSOR_ONOFF 3440  
                        ??_strlen 0509                  ??_I2C_POS_CURSOR 050E                    ??_I2C_LCD_INIT 050E  
                     ??_DHT_Check 0507                       __pbssCOMRAM 0520                       ??_DHT_Start 0507  
                   ??_WS2812_INIT 0507                   DHT_Start@modelo 0508           _I2C_LCD_ESCRIBE_VAR_INT 298C  
           WS2812_DATA_SEND@green 0506                         _main$1776 051E                  ___lwdiv@dividend 050C  
                   _ws2812_update 2F30    I2C_LCD_ESCRIBE_VAR_INT@centena 0519        __end_of_I2C_LCD_CHAR_GRADO 34A2  
                        _I2C1ADB1 028F                          ?___lwdiv 050C                          ?___lwmod 0507  
                       _dht_humid 0520             DHT_GetHumid@valor_dht 0510                         _configuro 32E2  
                     __smallconst 2600                  ___lwdiv@quotient 0510                          _T2CLKCON 0326  
                        _CLCnGLS0 00DC                          _CLCnGLS1 00DD                          _CLCnGLS2 00DE  
                        _CLCnGLS3 00DF                          _CLCnSEL0 00D8                          _CLCnSEL1 00D9  
                        _CLCnSEL2 00DA                          _DHT_Read 2E04                       _DHT_GetTemp 3078  
                        _INT0_ISR 345C                          _INT1_ISR 3474                          _LATBbits 04BF  
                        _PIE1bits 049F                          _PIE6bits 04A4               __end_of_WS2812_INIT 3246  
          ??_I2C_ESCRIBE_MENSAJE2 050E                    ?_ws2812_update 0501                     _I2C1STAT1bits 0299  
                        _PIR1bits 04AF                          _SPI1CON0 0084                          _SPI1CON1 0085  
                        _SPI1CON2 0086                          _PIR6bits 04B4              _I2C1_WRITESINGLEBYTE 33FE  
          I2C_ENVIA_LCD_DATA@data 050A                        ?_configuro 0501       I2C_ENVIA_LCD_CMD@highnibble 050B  
                        _WPUBbits 0409         ??_I2C_LCD_ESCRIBE_VAR_INT 0517                       _INTCON0bits 04D6  
      __end_of_I2C_ENVIA_LCD_DATA 3010             I2C_POS_CURSOR@columna 050D                          __Hrparam 0000  
            __end_of_I2C_LCD_INIT 298C                          __Lrparam 0000             ?_I2C1_WRITESINGLEBYTE 0507  
                      _ANSELBbits 0408                        _ANSELCbits 0410                        _ANSELFbits 0428  
                    _I2C1CON0bits 0294                      _I2C1CON1bits 0295                      _I2C1CON2bits 0296  
                        __pivt0x8 0008                   ___lwdiv@divisor 050E          I2C1_WRITESINGLEBYTE@dato 0507  
                 ___lwdiv@counter 0512                          __ptext10 298C                          __ptext11 3328  
                        __ptext20 3198                          __ptext12 3246                          __ptext21 2E04  
                        __ptext13 349A                          __ptext22 2E9E                          __ptext14 336A  
                        __ptext23 345C                          __ptext15 33D2                          __ptext24 2F30  
                        __ptext16 2FA4                          __ptext25 3422                          __ptext17 33FE  
                        __ptext26 3474                          __ptext18 3078                          __ptext19 30DC  
                        _dht_temp 0522                        _RC3I2Cbits 0287          __end_of_I2C_CURSOR_ONOFF 345C  
                      _RC4I2Cbits 0286                       _WS2812_INIT 31F0                   DHT_Check@modelo 0507  
                 DHT_Check@temp_x 0508                   ??_ws2812_update 0507                          isa$xinst 0000  
                      _ODCONCbits 0412                       ??_configuro 0507              DHT_GetTemp@valor_dht 0510  
                        intlevel2 0000                  ___lwmod@dividend 0507   I2C_LCD_ESCRIBE_VAR_INT@d_millar 0517  
          ??_I2C1_WRITESINGLEBYTE 0508                   ___lwmod@divisor 0509                   ___lwmod@counter 050B  
                   ?_DHT_GetHumid 050B                _I2C_LCD_CHAR_GRADO 349A               ?_I2C_LCD_CHAR_GRADO 0501  
                    ?_DHT_GetTemp 050B                  _WS2812_DATA_SEND 3422  
