

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jun 09 16:00:46 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=4,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=4,class=CODE,space=0,delta=1
    31                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Generated 04/02/2025 GMT
    37                           ; 
    38                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F57Q43 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   0004E0                     bsr             equ	1248
    71   0004E9                     fsr0            equ	1257
    72   0004EA                     fsr0h           equ	1258
    73   0004E9                     fsr0l           equ	1257
    74   0004E1                     fsr1            equ	1249
    75   0004E2                     fsr1h           equ	1250
    76   0004E1                     fsr1l           equ	1249
    77   0004D9                     fsr2            equ	1241
    78   0004DA                     fsr2h           equ	1242
    79   0004D9                     fsr2l           equ	1241
    80   0004EF                     indf0           equ	1263
    81   0004E7                     indf1           equ	1255
    82   0004DF                     indf2           equ	1247
    83   0004D6                     intcon          equ	1238
    84   000041                     nvmcon          equ	65
    85   0004F9                     pcl             equ	1273
    86   0004FA                     pclath          equ	1274
    87   0004FB                     pclatu          equ	1275
    88   0004EB                     plusw0          equ	1259
    89   0004E3                     plusw1          equ	1251
    90   0004DB                     plusw2          equ	1243
    91   0004ED                     postdec0        equ	1261
    92   0004E5                     postdec1        equ	1253
    93   0004DD                     postdec2        equ	1245
    94   0004EE                     postinc0        equ	1262
    95   0004E6                     postinc1        equ	1254
    96   0004DE                     postinc2        equ	1246
    97   0004EC                     preinc0         equ	1260
    98   0004E4                     preinc1         equ	1252
    99   0004DC                     preinc2         equ	1244
   100   0004F3                     prod            equ	1267
   101   0004F4                     prodh           equ	1268
   102   0004F3                     prodl           equ	1267
   103   0004D8                     status          equ	1240
   104   0004F5                     tablat          equ	1269
   105   0004F6                     tblptr          equ	1270
   106   0004F7                     tblptrh         equ	1271
   107   0004F6                     tblptrl         equ	1270
   108   0004F8                     tblptru         equ	1272
   109   0004FD                     tosl            equ	1277
   110   0004E8                     wreg            equ	1256
   111   000039                     CLKRCON         equ	57	;# 
   112   00003A                     CLKRCLK         equ	58	;# 
   113   000040                     NVMCON0         equ	64	;# 
   114   000041                     NVMCON1         equ	65	;# 
   115   000042                     NVMLOCK         equ	66	;# 
   116   000043                     NVMADR          equ	67	;# 
   117   000043                     NVMADRL         equ	67	;# 
   118   000044                     NVMADRH         equ	68	;# 
   119   000045                     NVMADRU         equ	69	;# 
   120   000046                     NVMDAT          equ	70	;# 
   121   000046                     NVMDATL         equ	70	;# 
   122   000047                     NVMDATH         equ	71	;# 
   123   000048                     VREGCON         equ	72	;# 
   124   000049                     BORCON          equ	73	;# 
   125   00004A                     HLVDCON0        equ	74	;# 
   126   00004B                     HLVDCON1        equ	75	;# 
   127   00004C                     ZCDCON          equ	76	;# 
   128   000060                     PMD0            equ	96	;# 
   129   000061                     PMD1            equ	97	;# 
   130   000063                     PMD3            equ	99	;# 
   131   000064                     PMD4            equ	100	;# 
   132   000065                     PMD5            equ	101	;# 
   133   000066                     PMD6            equ	102	;# 
   134   000067                     PMD7            equ	103	;# 
   135   000068                     PMD8            equ	104	;# 
   136   00006A                     MD1CON0         equ	106	;# 
   137   00006B                     MD1CON1         equ	107	;# 
   138   00006C                     MD1SRC          equ	108	;# 
   139   00006D                     MD1CARL         equ	109	;# 
   140   00006E                     MD1CARH         equ	110	;# 
   141   00006F                     CMOUT           equ	111	;# 
   142   000070                     CM1CON0         equ	112	;# 
   143   000071                     CM1CON1         equ	113	;# 
   144   000072                     CM1NCH          equ	114	;# 
   145   000073                     CM1PCH          equ	115	;# 
   146   000074                     CM2CON0         equ	116	;# 
   147   000075                     CM2CON1         equ	117	;# 
   148   000076                     CM2NCH          equ	118	;# 
   149   000077                     CM2PCH          equ	119	;# 
   150   000078                     WDTCON0         equ	120	;# 
   151   000079                     WDTCON1         equ	121	;# 
   152   00007A                     WDTPS           equ	122	;# 
   153   00007A                     WDTPSL          equ	122	;# 
   154   00007B                     WDTPSH          equ	123	;# 
   155   00007C                     WDTTMR          equ	124	;# 
   156   00007D                     DAC1DAT         equ	125	;# 
   157   00007D                     DAC1DATL        equ	125	;# 
   158   00007F                     DAC1CON         equ	127	;# 
   159   000080                     SPI1RXB         equ	128	;# 
   160   000081                     SPI1TXB         equ	129	;# 
   161   000082                     SPI1TCNT        equ	130	;# 
   162   000082                     SPI1TCNTL       equ	130	;# 
   163   000083                     SPI1TCNTH       equ	131	;# 
   164   000084                     SPI1CON0        equ	132	;# 
   165   000085                     SPI1CON1        equ	133	;# 
   166   000086                     SPI1CON2        equ	134	;# 
   167   000087                     SPI1STATUS      equ	135	;# 
   168   000088                     SPI1TWIDTH      equ	136	;# 
   169   000089                     SPI1BAUD        equ	137	;# 
   170   00008A                     SPI1INTF        equ	138	;# 
   171   00008B                     SPI1INTE        equ	139	;# 
   172   00008C                     SPI1CLK         equ	140	;# 
   173   00008D                     SPI2RXB         equ	141	;# 
   174   00008E                     SPI2TXB         equ	142	;# 
   175   00008F                     SPI2TCNT        equ	143	;# 
   176   00008F                     SPI2TCNTL       equ	143	;# 
   177   000090                     SPI2TCNTH       equ	144	;# 
   178   000091                     SPI2CON0        equ	145	;# 
   179   000092                     SPI2CON1        equ	146	;# 
   180   000093                     SPI2CON2        equ	147	;# 
   181   000094                     SPI2STATUS      equ	148	;# 
   182   000095                     SPI2TWIDTH      equ	149	;# 
   183   000096                     SPI2BAUD        equ	150	;# 
   184   000097                     SPI2INTF        equ	151	;# 
   185   000098                     SPI2INTE        equ	152	;# 
   186   000099                     SPI2CLK         equ	153	;# 
   187   0000AC                     ACTCON          equ	172	;# 
   188   0000AD                     OSCCON1         equ	173	;# 
   189   0000AE                     OSCCON2         equ	174	;# 
   190   0000AF                     OSCCON3         equ	175	;# 
   191   0000B0                     OSCTUNE         equ	176	;# 
   192   0000B1                     OSCFRQ          equ	177	;# 
   193   0000B1                     OSCFREQ         equ	177	;# 
   194   0000B2                     OSCSTAT         equ	178	;# 
   195   0000B2                     OSCSTAT1        equ	178	;# 
   196   0000B3                     OSCEN           equ	179	;# 
   197   0000B4                     PRLOCK          equ	180	;# 
   198   0000B5                     SCANPR          equ	181	;# 
   199   0000B6                     DMA1PR          equ	182	;# 
   200   0000B7                     DMA2PR          equ	183	;# 
   201   0000B8                     DMA3PR          equ	184	;# 
   202   0000B9                     DMA4PR          equ	185	;# 
   203   0000BA                     DMA5PR          equ	186	;# 
   204   0000BB                     DMA6PR          equ	187	;# 
   205   0000BE                     MAINPR          equ	190	;# 
   206   0000BF                     ISRPR           equ	191	;# 
   207   0000D4                     CLCDATA         equ	212	;# 
   208   0000D5                     CLCSELECT       equ	213	;# 
   209   0000D6                     CLCnCON         equ	214	;# 
   210   0000D7                     CLCnPOL         equ	215	;# 
   211   0000D8                     CLCnSEL0        equ	216	;# 
   212   0000D9                     CLCnSEL1        equ	217	;# 
   213   0000DA                     CLCnSEL2        equ	218	;# 
   214   0000DB                     CLCnSEL3        equ	219	;# 
   215   0000DC                     CLCnGLS0        equ	220	;# 
   216   0000DD                     CLCnGLS1        equ	221	;# 
   217   0000DE                     CLCnGLS2        equ	222	;# 
   218   0000DF                     CLCnGLS3        equ	223	;# 
   219   0000E8                     DMASELECT       equ	232	;# 
   220   0000E9                     DMAnBUF         equ	233	;# 
   221   0000EA                     DMAnDCNT        equ	234	;# 
   222   0000EA                     DMAnDCNTL       equ	234	;# 
   223   0000EB                     DMAnDCNTH       equ	235	;# 
   224   0000EC                     DMAnDPTR        equ	236	;# 
   225   0000EC                     DMAnDPTRL       equ	236	;# 
   226   0000ED                     DMAnDPTRH       equ	237	;# 
   227   0000EE                     DMAnDSZ         equ	238	;# 
   228   0000EE                     DMAnDSZL        equ	238	;# 
   229   0000EF                     DMAnDSZH        equ	239	;# 
   230   0000F0                     DMAnDSA         equ	240	;# 
   231   0000F0                     DMAnDSAL        equ	240	;# 
   232   0000F1                     DMAnDSAH        equ	241	;# 
   233   0000F2                     DMAnSCNT        equ	242	;# 
   234   0000F2                     DMAnSCNTL       equ	242	;# 
   235   0000F3                     DMAnSCNTH       equ	243	;# 
   236   0000F4                     DMAnSPTR        equ	244	;# 
   237   0000F4                     DMAnSPTRL       equ	244	;# 
   238   0000F5                     DMAnSPTRH       equ	245	;# 
   239   0000F6                     DMAnSPTRU       equ	246	;# 
   240   0000F7                     DMAnSSZ         equ	247	;# 
   241   0000F7                     DMAnSSZL        equ	247	;# 
   242   0000F8                     DMAnSSZH        equ	248	;# 
   243   0000F9                     DMAnSSA         equ	249	;# 
   244   0000F9                     DMAnSSAL        equ	249	;# 
   245   0000FA                     DMAnSSAH        equ	250	;# 
   246   0000FB                     DMAnSSAU        equ	251	;# 
   247   0000FC                     DMAnCON0        equ	252	;# 
   248   0000FD                     DMAnCON1        equ	253	;# 
   249   0000FE                     DMAnAIRQ        equ	254	;# 
   250   0000FF                     DMAnSIRQ        equ	255	;# 
   251   000200                     PPSLOCK         equ	512	;# 
   252   000201                     RA0PPS          equ	513	;# 
   253   000202                     RA1PPS          equ	514	;# 
   254   000203                     RA2PPS          equ	515	;# 
   255   000204                     RA3PPS          equ	516	;# 
   256   000205                     RA4PPS          equ	517	;# 
   257   000206                     RA5PPS          equ	518	;# 
   258   000207                     RA6PPS          equ	519	;# 
   259   000208                     RA7PPS          equ	520	;# 
   260   000209                     RB0PPS          equ	521	;# 
   261   00020A                     RB1PPS          equ	522	;# 
   262   00020B                     RB2PPS          equ	523	;# 
   263   00020C                     RB3PPS          equ	524	;# 
   264   00020D                     RB4PPS          equ	525	;# 
   265   00020E                     RB5PPS          equ	526	;# 
   266   00020F                     RB6PPS          equ	527	;# 
   267   000210                     RB7PPS          equ	528	;# 
   268   000211                     RC0PPS          equ	529	;# 
   269   000212                     RC1PPS          equ	530	;# 
   270   000213                     RC2PPS          equ	531	;# 
   271   000214                     RC3PPS          equ	532	;# 
   272   000215                     RC4PPS          equ	533	;# 
   273   000216                     RC5PPS          equ	534	;# 
   274   000217                     RC6PPS          equ	535	;# 
   275   000218                     RC7PPS          equ	536	;# 
   276   000219                     RD0PPS          equ	537	;# 
   277   00021A                     RD1PPS          equ	538	;# 
   278   00021B                     RD2PPS          equ	539	;# 
   279   00021C                     RD3PPS          equ	540	;# 
   280   00021D                     RD4PPS          equ	541	;# 
   281   00021E                     RD5PPS          equ	542	;# 
   282   00021F                     RD6PPS          equ	543	;# 
   283   000220                     RD7PPS          equ	544	;# 
   284   000221                     RE0PPS          equ	545	;# 
   285   000222                     RE1PPS          equ	546	;# 
   286   000223                     RE2PPS          equ	547	;# 
   287   000229                     RF0PPS          equ	553	;# 
   288   00022A                     RF1PPS          equ	554	;# 
   289   00022B                     RF2PPS          equ	555	;# 
   290   00022C                     RF3PPS          equ	556	;# 
   291   00022D                     RF4PPS          equ	557	;# 
   292   00022E                     RF5PPS          equ	558	;# 
   293   00022F                     RF6PPS          equ	559	;# 
   294   000230                     RF7PPS          equ	560	;# 
   295   00023E                     INT0PPS         equ	574	;# 
   296   00023F                     INT1PPS         equ	575	;# 
   297   000240                     INT2PPS         equ	576	;# 
   298   000241                     T0CKIPPS        equ	577	;# 
   299   000242                     T1CKIPPS        equ	578	;# 
   300   000243                     T1GPPS          equ	579	;# 
   301   000244                     T3CKIPPS        equ	580	;# 
   302   000245                     T3GPPS          equ	581	;# 
   303   000246                     T5CKIPPS        equ	582	;# 
   304   000247                     T5GPPS          equ	583	;# 
   305   000248                     T2INPPS         equ	584	;# 
   306   000249                     T4INPPS         equ	585	;# 
   307   00024A                     T6INPPS         equ	586	;# 
   308   00024F                     CCP1PPS         equ	591	;# 
   309   000250                     CCP2PPS         equ	592	;# 
   310   000251                     CCP3PPS         equ	593	;# 
   311   000253                     PWM1ERSPPS      equ	595	;# 
   312   000254                     PWM2ERSPPS      equ	596	;# 
   313   000255                     PWM3ERSPPS      equ	597	;# 
   314   000257                     PWMIN0PPS       equ	599	;# 
   315   000258                     PWMIN1PPS       equ	600	;# 
   316   000259                     SMT1WINPPS      equ	601	;# 
   317   00025A                     SMT1SIGPPS      equ	602	;# 
   318   00025B                     CWG1PPS         equ	603	;# 
   319   00025B                     CWG1INPPS       equ	603	;# 
   320   00025C                     CWG2PPS         equ	604	;# 
   321   00025C                     CWG2INPPS       equ	604	;# 
   322   00025D                     CWG3PPS         equ	605	;# 
   323   00025D                     CWG3INPPS       equ	605	;# 
   324   00025E                     MD1CARLPPS      equ	606	;# 
   325   00025E                     MDCARLPPS       equ	606	;# 
   326   00025F                     MD1CARHPPS      equ	607	;# 
   327   00025F                     MDCARHPPS       equ	607	;# 
   328   000260                     MD1SRCPPS       equ	608	;# 
   329   000260                     MDSRCPPS        equ	608	;# 
   330   000261                     CLCIN0PPS       equ	609	;# 
   331   000262                     CLCIN1PPS       equ	610	;# 
   332   000263                     CLCIN2PPS       equ	611	;# 
   333   000264                     CLCIN3PPS       equ	612	;# 
   334   000265                     CLCIN4PPS       equ	613	;# 
   335   000266                     CLCIN5PPS       equ	614	;# 
   336   000267                     CLCIN6PPS       equ	615	;# 
   337   000268                     CLCIN7PPS       equ	616	;# 
   338   000269                     ADACTPPS        equ	617	;# 
   339   00026A                     SPI1SCKPPS      equ	618	;# 
   340   00026B                     SPI1SDIPPS      equ	619	;# 
   341   00026C                     SPI1SSPPS       equ	620	;# 
   342   00026D                     SPI2SCKPPS      equ	621	;# 
   343   00026E                     SPI2SDIPPS      equ	622	;# 
   344   00026F                     SPI2SSPPS       equ	623	;# 
   345   000270                     I2C1SDAPPS      equ	624	;# 
   346   000271                     I2C1SCLPPS      equ	625	;# 
   347   000272                     U1RXPPS         equ	626	;# 
   348   000273                     U1CTSPPS        equ	627	;# 
   349   000274                     U2RXPPS         equ	628	;# 
   350   000275                     U2CTSPPS        equ	629	;# 
   351   000276                     U3RXPPS         equ	630	;# 
   352   000277                     U3CTSPPS        equ	631	;# 
   353   000278                     U4RXPPS         equ	632	;# 
   354   000279                     U4CTSPPS        equ	633	;# 
   355   00027A                     U5RXPPS         equ	634	;# 
   356   00027B                     U5CTSPPS        equ	635	;# 
   357   000286                     RC4I2C          equ	646	;# 
   358   000287                     RC3I2C          equ	647	;# 
   359   000288                     RB2I2C          equ	648	;# 
   360   000289                     RB1I2C          equ	649	;# 
   361   00028B                     I2C1RXB         equ	651	;# 
   362   00028C                     I2C1TXB         equ	652	;# 
   363   00028D                     I2C1CNT         equ	653	;# 
   364   00028E                     I2C1ADB0        equ	654	;# 
   365   00028F                     I2C1ADB1        equ	655	;# 
   366   000290                     I2C1ADR0        equ	656	;# 
   367   000291                     I2C1ADR1        equ	657	;# 
   368   000292                     I2C1ADR2        equ	658	;# 
   369   000293                     I2C1ADR3        equ	659	;# 
   370   000294                     I2C1CON0        equ	660	;# 
   371   000295                     I2C1CON1        equ	661	;# 
   372   000296                     I2C1CON2        equ	662	;# 
   373   000297                     I2C1ERR         equ	663	;# 
   374   000298                     I2C1STAT0       equ	664	;# 
   375   000299                     I2C1STAT1       equ	665	;# 
   376   00029A                     I2C1PIR         equ	666	;# 
   377   00029B                     I2C1PIE         equ	667	;# 
   378   00029C                     I2C1CLK         equ	668	;# 
   379   00029D                     I2C1BTO         equ	669	;# 
   380   0002A1                     U1RXB           equ	673	;# 
   381   0002A1                     U1RXBL          equ	673	;# 
   382   0002A2                     U1RXCHK         equ	674	;# 
   383   0002A3                     U1TXB           equ	675	;# 
   384   0002A3                     U1TXBL          equ	675	;# 
   385   0002A4                     U1TXCHK         equ	676	;# 
   386   0002A5                     U1P1            equ	677	;# 
   387   0002A5                     U1P1L           equ	677	;# 
   388   0002A6                     U1P1H           equ	678	;# 
   389   0002A7                     U1P2            equ	679	;# 
   390   0002A7                     U1P2L           equ	679	;# 
   391   0002A8                     U1P2H           equ	680	;# 
   392   0002A9                     U1P3            equ	681	;# 
   393   0002A9                     U1P3L           equ	681	;# 
   394   0002AA                     U1P3H           equ	682	;# 
   395   0002AB                     U1CON0          equ	683	;# 
   396   0002AC                     U1CON1          equ	684	;# 
   397   0002AD                     U1CON2          equ	685	;# 
   398   0002AE                     U1BRG           equ	686	;# 
   399   0002AE                     U1BRGL          equ	686	;# 
   400   0002AF                     U1BRGH          equ	687	;# 
   401   0002B0                     U1FIFO          equ	688	;# 
   402   0002B1                     U1UIR           equ	689	;# 
   403   0002B2                     U1ERRIR         equ	690	;# 
   404   0002B3                     U1ERRIE         equ	691	;# 
   405   0002B4                     U2RXB           equ	692	;# 
   406   0002B4                     U2RXBL          equ	692	;# 
   407   0002B6                     U2TXB           equ	694	;# 
   408   0002B6                     U2TXBL          equ	694	;# 
   409   0002B8                     U2P1            equ	696	;# 
   410   0002B8                     U2P1L           equ	696	;# 
   411   0002BA                     U2P2            equ	698	;# 
   412   0002BA                     U2P2L           equ	698	;# 
   413   0002BC                     U2P3            equ	700	;# 
   414   0002BC                     U2P3L           equ	700	;# 
   415   0002BE                     U2CON0          equ	702	;# 
   416   0002BF                     U2CON1          equ	703	;# 
   417   0002C0                     U2CON2          equ	704	;# 
   418   0002C1                     U2BRG           equ	705	;# 
   419   0002C1                     U2BRGL          equ	705	;# 
   420   0002C2                     U2BRGH          equ	706	;# 
   421   0002C3                     U2FIFO          equ	707	;# 
   422   0002C4                     U2UIR           equ	708	;# 
   423   0002C5                     U2ERRIR         equ	709	;# 
   424   0002C6                     U2ERRIE         equ	710	;# 
   425   0002C7                     U3RXB           equ	711	;# 
   426   0002C7                     U3RXBL          equ	711	;# 
   427   0002C9                     U3TXB           equ	713	;# 
   428   0002C9                     U3TXBL          equ	713	;# 
   429   0002CB                     U3P1            equ	715	;# 
   430   0002CB                     U3P1L           equ	715	;# 
   431   0002CD                     U3P2            equ	717	;# 
   432   0002CD                     U3P2L           equ	717	;# 
   433   0002CF                     U3P3            equ	719	;# 
   434   0002CF                     U3P3L           equ	719	;# 
   435   0002D1                     U3CON0          equ	721	;# 
   436   0002D2                     U3CON1          equ	722	;# 
   437   0002D3                     U3CON2          equ	723	;# 
   438   0002D4                     U3BRG           equ	724	;# 
   439   0002D4                     U3BRGL          equ	724	;# 
   440   0002D5                     U3BRGH          equ	725	;# 
   441   0002D6                     U3FIFO          equ	726	;# 
   442   0002D7                     U3UIR           equ	727	;# 
   443   0002D8                     U3ERRIR         equ	728	;# 
   444   0002D9                     U3ERRIE         equ	729	;# 
   445   0002DA                     U4RXB           equ	730	;# 
   446   0002DA                     U4RXBL          equ	730	;# 
   447   0002DC                     U4TXB           equ	732	;# 
   448   0002DC                     U4TXBL          equ	732	;# 
   449   0002DE                     U4P1            equ	734	;# 
   450   0002DE                     U4P1L           equ	734	;# 
   451   0002E0                     U4P2            equ	736	;# 
   452   0002E0                     U4P2L           equ	736	;# 
   453   0002E2                     U4P3            equ	738	;# 
   454   0002E2                     U4P3L           equ	738	;# 
   455   0002E4                     U4CON0          equ	740	;# 
   456   0002E5                     U4CON1          equ	741	;# 
   457   0002E6                     U4CON2          equ	742	;# 
   458   0002E7                     U4BRG           equ	743	;# 
   459   0002E7                     U4BRGL          equ	743	;# 
   460   0002E8                     U4BRGH          equ	744	;# 
   461   0002E9                     U4FIFO          equ	745	;# 
   462   0002EA                     U4UIR           equ	746	;# 
   463   0002EB                     U4ERRIR         equ	747	;# 
   464   0002EC                     U4ERRIE         equ	748	;# 
   465   0002ED                     U5RXB           equ	749	;# 
   466   0002ED                     U5RXBL          equ	749	;# 
   467   0002EF                     U5TXB           equ	751	;# 
   468   0002EF                     U5TXBL          equ	751	;# 
   469   0002F1                     U5P1            equ	753	;# 
   470   0002F1                     U5P1L           equ	753	;# 
   471   0002F3                     U5P2            equ	755	;# 
   472   0002F3                     U5P2L           equ	755	;# 
   473   0002F5                     U5P3            equ	757	;# 
   474   0002F5                     U5P3L           equ	757	;# 
   475   0002F7                     U5CON0          equ	759	;# 
   476   0002F8                     U5CON1          equ	760	;# 
   477   0002F9                     U5CON2          equ	761	;# 
   478   0002FA                     U5BRG           equ	762	;# 
   479   0002FA                     U5BRGL          equ	762	;# 
   480   0002FB                     U5BRGH          equ	763	;# 
   481   0002FC                     U5FIFO          equ	764	;# 
   482   0002FD                     U5UIR           equ	765	;# 
   483   0002FE                     U5ERRIR         equ	766	;# 
   484   0002FF                     U5ERRIE         equ	767	;# 
   485   000300                     SMT1TMR         equ	768	;# 
   486   000300                     SMT1TMRL        equ	768	;# 
   487   000301                     SMT1TMRH        equ	769	;# 
   488   000302                     SMT1TMRU        equ	770	;# 
   489   000303                     SMT1CPR         equ	771	;# 
   490   000303                     SMT1CPRL        equ	771	;# 
   491   000304                     SMT1CPRH        equ	772	;# 
   492   000305                     SMT1CPRU        equ	773	;# 
   493   000306                     SMT1CPW         equ	774	;# 
   494   000306                     SMT1CPWL        equ	774	;# 
   495   000307                     SMT1CPWH        equ	775	;# 
   496   000308                     SMT1CPWU        equ	776	;# 
   497   000309                     SMT1PR          equ	777	;# 
   498   000309                     SMT1PRL         equ	777	;# 
   499   00030A                     SMT1PRH         equ	778	;# 
   500   00030B                     SMT1PRU         equ	779	;# 
   501   00030C                     SMT1CON0        equ	780	;# 
   502   00030D                     SMT1CON1        equ	781	;# 
   503   00030E                     SMT1STAT        equ	782	;# 
   504   00030F                     SMT1CLK         equ	783	;# 
   505   000310                     SMT1SIG         equ	784	;# 
   506   000311                     SMT1WIN         equ	785	;# 
   507   000318                     TMR0L           equ	792	;# 
   508   000318                     TMR0            equ	792	;# 
   509   000319                     TMR0H           equ	793	;# 
   510   000319                     PR0             equ	793	;# 
   511   00031A                     T0CON0          equ	794	;# 
   512   00031B                     T0CON1          equ	795	;# 
   513   00031C                     TMR1            equ	796	;# 
   514   00031C                     TMR1L           equ	796	;# 
   515   00031D                     TMR1H           equ	797	;# 
   516   00031E                     T1CON           equ	798	;# 
   517   00031E                     TMR1CON         equ	798	;# 
   518   00031F                     T1GCON          equ	799	;# 
   519   00031F                     TMR1GCON        equ	799	;# 
   520   000320                     T1GATE          equ	800	;# 
   521   000320                     TMR1GATE        equ	800	;# 
   522   000321                     T1CLK           equ	801	;# 
   523   000321                     TMR1CLK         equ	801	;# 
   524   000321                     PR1             equ	801	;# 
   525   000322                     T2TMR           equ	802	;# 
   526   000322                     TMR2            equ	802	;# 
   527   000323                     T2PR            equ	803	;# 
   528   000323                     PR2             equ	803	;# 
   529   000324                     T2CON           equ	804	;# 
   530   000325                     T2HLT           equ	805	;# 
   531   000326                     T2CLKCON        equ	806	;# 
   532   000326                     T2CLK           equ	806	;# 
   533   000327                     T2RST           equ	807	;# 
   534   000328                     TMR3            equ	808	;# 
   535   000328                     TMR3L           equ	808	;# 
   536   000329                     TMR3H           equ	809	;# 
   537   00032A                     T3CON           equ	810	;# 
   538   00032A                     TMR3CON         equ	810	;# 
   539   00032B                     T3GCON          equ	811	;# 
   540   00032B                     TMR3GCON        equ	811	;# 
   541   00032C                     T3GATE          equ	812	;# 
   542   00032C                     TMR3GATE        equ	812	;# 
   543   00032D                     T3CLK           equ	813	;# 
   544   00032D                     TMR3CLK         equ	813	;# 
   545   00032D                     PR3             equ	813	;# 
   546   00032E                     T4TMR           equ	814	;# 
   547   00032E                     TMR4            equ	814	;# 
   548   00032F                     T4PR            equ	815	;# 
   549   00032F                     PR4             equ	815	;# 
   550   000330                     T4CON           equ	816	;# 
   551   000331                     T4HLT           equ	817	;# 
   552   000332                     T4CLKCON        equ	818	;# 
   553   000332                     T4CLK           equ	818	;# 
   554   000333                     T4RST           equ	819	;# 
   555   000334                     TMR5            equ	820	;# 
   556   000334                     TMR5L           equ	820	;# 
   557   000335                     TMR5H           equ	821	;# 
   558   000336                     T5CON           equ	822	;# 
   559   000336                     TMR5CON         equ	822	;# 
   560   000337                     T5GCON          equ	823	;# 
   561   000337                     TMR5GCON        equ	823	;# 
   562   000338                     T5GATE          equ	824	;# 
   563   000338                     TMR5GATE        equ	824	;# 
   564   000339                     T5CLK           equ	825	;# 
   565   000339                     TMR5CLK         equ	825	;# 
   566   000339                     PR5             equ	825	;# 
   567   00033A                     T6TMR           equ	826	;# 
   568   00033A                     TMR6            equ	826	;# 
   569   00033B                     T6PR            equ	827	;# 
   570   00033B                     PR6             equ	827	;# 
   571   00033C                     T6CON           equ	828	;# 
   572   00033D                     T6HLT           equ	829	;# 
   573   00033E                     T6CLKCON        equ	830	;# 
   574   00033E                     T6CLK           equ	830	;# 
   575   00033F                     T6RST           equ	831	;# 
   576   000340                     CCPR1           equ	832	;# 
   577   000340                     CCPR1L          equ	832	;# 
   578   000341                     CCPR1H          equ	833	;# 
   579   000342                     CCP1CON         equ	834	;# 
   580   000343                     CCP1CAP         equ	835	;# 
   581   000344                     CCPR2           equ	836	;# 
   582   000344                     CCPR2L          equ	836	;# 
   583   000345                     CCPR2H          equ	837	;# 
   584   000346                     CCP2CON         equ	838	;# 
   585   000347                     CCP2CAP         equ	839	;# 
   586   000348                     CCPR3           equ	840	;# 
   587   000348                     CCPR3L          equ	840	;# 
   588   000349                     CCPR3H          equ	841	;# 
   589   00034A                     CCP3CON         equ	842	;# 
   590   00034B                     CCP3CAP         equ	843	;# 
   591   00034C                     CCPTMRS0        equ	844	;# 
   592   00034F                     CRCDATA         equ	847	;# 
   593   00034F                     CRCDATL         equ	847	;# 
   594   000350                     CRCDATH         equ	848	;# 
   595   000351                     CRCACC          equ	849	;# 
   596   000351                     CRCACCL         equ	849	;# 
   597   000352                     CRCACCH         equ	850	;# 
   598   000353                     CRCSHFT         equ	851	;# 
   599   000353                     CRCSHIFTL       equ	851	;# 
   600   000354                     CRCSHIFTH       equ	852	;# 
   601   000355                     CRCXOR          equ	853	;# 
   602   000355                     CRCXORL         equ	853	;# 
   603   000356                     CRCXORH         equ	854	;# 
   604   000357                     CRCCON0         equ	855	;# 
   605   000358                     CRCCON1         equ	856	;# 
   606   00035A                     SCANLADR        equ	858	;# 
   607   00035A                     SCANLADRL       equ	858	;# 
   608   00035B                     SCANLADRH       equ	859	;# 
   609   00035C                     SCANLADRU       equ	860	;# 
   610   00035D                     SCANHADR        equ	861	;# 
   611   00035D                     SCANHADRL       equ	861	;# 
   612   00035E                     SCANHADRH       equ	862	;# 
   613   00035F                     SCANHADRU       equ	863	;# 
   614   000360                     SCANCON0        equ	864	;# 
   615   000361                     SCANTRIG        equ	865	;# 
   616   000362                     IPR0            equ	866	;# 
   617   000363                     IPR1            equ	867	;# 
   618   000364                     IPR2            equ	868	;# 
   619   000365                     IPR3            equ	869	;# 
   620   000366                     IPR4            equ	870	;# 
   621   000367                     IPR5            equ	871	;# 
   622   000368                     IPR6            equ	872	;# 
   623   000369                     IPR7            equ	873	;# 
   624   00036A                     IPR8            equ	874	;# 
   625   00036B                     IPR9            equ	875	;# 
   626   00036C                     IPR10           equ	876	;# 
   627   00036D                     IPR11           equ	877	;# 
   628   00036E                     IPR12           equ	878	;# 
   629   00036F                     IPR13           equ	879	;# 
   630   000370                     IPR14           equ	880	;# 
   631   000371                     IPR15           equ	881	;# 
   632   000373                     STATUS_CSHAD    equ	883	;# 
   633   000374                     WREG_CSHAD      equ	884	;# 
   634   000375                     BSR_CSHAD       equ	885	;# 
   635   000376                     SHADCON         equ	886	;# 
   636   000377                     STATUS_SHAD     equ	887	;# 
   637   000378                     WREG_SHAD       equ	888	;# 
   638   000379                     BSR_SHAD        equ	889	;# 
   639   00037A                     PCLATH_SHAD     equ	890	;# 
   640   00037B                     PCLATU_SHAD     equ	891	;# 
   641   00037C                     FSR0SH          equ	892	;# 
   642   00037C                     FSR0L_SHAD      equ	892	;# 
   643   00037D                     FSR0H_SHAD      equ	893	;# 
   644   00037E                     FSR1SH          equ	894	;# 
   645   00037E                     FSR1L_SHAD      equ	894	;# 
   646   00037F                     FSR1H_SHAD      equ	895	;# 
   647   000380                     FSR2SH          equ	896	;# 
   648   000380                     FSR2L_SHAD      equ	896	;# 
   649   000381                     FSR2H_SHAD      equ	897	;# 
   650   000382                     PRODSH          equ	898	;# 
   651   000382                     PRODL_SHAD      equ	898	;# 
   652   000383                     PRODH_SHAD      equ	899	;# 
   653   0003BC                     CWG1CLK         equ	956	;# 
   654   0003BC                     CWG1CLKCON      equ	956	;# 
   655   0003BD                     CWG1ISM         equ	957	;# 
   656   0003BD                     CWG1DAT         equ	957	;# 
   657   0003BE                     CWG1DBR         equ	958	;# 
   658   0003BF                     CWG1DBF         equ	959	;# 
   659   0003C0                     CWG1CON0        equ	960	;# 
   660   0003C1                     CWG1CON1        equ	961	;# 
   661   0003C2                     CWG1AS0         equ	962	;# 
   662   0003C3                     CWG1AS1         equ	963	;# 
   663   0003C4                     CWG1STR         equ	964	;# 
   664   0003C5                     CWG2CLK         equ	965	;# 
   665   0003C5                     CWG2CLKCON      equ	965	;# 
   666   0003C6                     CWG2ISM         equ	966	;# 
   667   0003C6                     CWG2DAT         equ	966	;# 
   668   0003C7                     CWG2DBR         equ	967	;# 
   669   0003C8                     CWG2DBF         equ	968	;# 
   670   0003C9                     CWG2CON0        equ	969	;# 
   671   0003CA                     CWG2CON1        equ	970	;# 
   672   0003CB                     CWG2AS0         equ	971	;# 
   673   0003CC                     CWG2AS1         equ	972	;# 
   674   0003CD                     CWG2STR         equ	973	;# 
   675   0003CE                     CWG3CLK         equ	974	;# 
   676   0003CE                     CWG3CLKCON      equ	974	;# 
   677   0003CF                     CWG3ISM         equ	975	;# 
   678   0003CF                     CWG3DAT         equ	975	;# 
   679   0003D0                     CWG3DBR         equ	976	;# 
   680   0003D1                     CWG3DBF         equ	977	;# 
   681   0003D2                     CWG3CON0        equ	978	;# 
   682   0003D3                     CWG3CON1        equ	979	;# 
   683   0003D4                     CWG3AS0         equ	980	;# 
   684   0003D5                     CWG3AS1         equ	981	;# 
   685   0003D6                     CWG3STR         equ	982	;# 
   686   0003D7                     FVRCON          equ	983	;# 
   687   0003D8                     ADCPCON         equ	984	;# 
   688   0003D8                     ADCP            equ	984	;# 
   689   0003D9                     ADLTH           equ	985	;# 
   690   0003D9                     ADLTHL          equ	985	;# 
   691   0003DA                     ADLTHH          equ	986	;# 
   692   0003DB                     ADUTH           equ	987	;# 
   693   0003DB                     ADUTHL          equ	987	;# 
   694   0003DC                     ADUTHH          equ	988	;# 
   695   0003DD                     ADERR           equ	989	;# 
   696   0003DD                     ADERRL          equ	989	;# 
   697   0003DE                     ADERRH          equ	990	;# 
   698   0003DF                     ADSTPT          equ	991	;# 
   699   0003DF                     ADSTPTL         equ	991	;# 
   700   0003E0                     ADSTPTH         equ	992	;# 
   701   0003E1                     ADFLTR          equ	993	;# 
   702   0003E1                     ADFLTRL         equ	993	;# 
   703   0003E2                     ADFLTRH         equ	994	;# 
   704   0003E3                     ADACC           equ	995	;# 
   705   0003E3                     ADACCL          equ	995	;# 
   706   0003E4                     ADACCH          equ	996	;# 
   707   0003E5                     ADACCU          equ	997	;# 
   708   0003E6                     ADCNT           equ	998	;# 
   709   0003E7                     ADRPT           equ	999	;# 
   710   0003E8                     ADPREV          equ	1000	;# 
   711   0003E8                     ADPREVL         equ	1000	;# 
   712   0003E9                     ADPREVH         equ	1001	;# 
   713   0003EA                     ADRES           equ	1002	;# 
   714   0003EA                     ADRESL          equ	1002	;# 
   715   0003EB                     ADRESH          equ	1003	;# 
   716   0003EC                     ADPCH           equ	1004	;# 
   717   0003EE                     ADACQ           equ	1006	;# 
   718   0003EE                     ADACQL          equ	1006	;# 
   719   0003EF                     ADACQH          equ	1007	;# 
   720   0003F0                     ADCAP           equ	1008	;# 
   721   0003F1                     ADPRE           equ	1009	;# 
   722   0003F1                     ADPREL          equ	1009	;# 
   723   0003F2                     ADPREH          equ	1010	;# 
   724   0003F3                     ADCON0          equ	1011	;# 
   725   0003F4                     ADCON1          equ	1012	;# 
   726   0003F5                     ADCON2          equ	1013	;# 
   727   0003F6                     ADCON3          equ	1014	;# 
   728   0003F7                     ADSTAT          equ	1015	;# 
   729   0003F8                     ADREF           equ	1016	;# 
   730   0003F9                     ADACT           equ	1017	;# 
   731   0003FA                     ADCLK           equ	1018	;# 
   732   000400                     ANSELA          equ	1024	;# 
   733   000401                     WPUA            equ	1025	;# 
   734   000402                     ODCONA          equ	1026	;# 
   735   000403                     SLRCONA         equ	1027	;# 
   736   000404                     INLVLA          equ	1028	;# 
   737   000405                     IOCAP           equ	1029	;# 
   738   000406                     IOCAN           equ	1030	;# 
   739   000407                     IOCAF           equ	1031	;# 
   740   000408                     ANSELB          equ	1032	;# 
   741   000409                     WPUB            equ	1033	;# 
   742   00040A                     ODCONB          equ	1034	;# 
   743   00040B                     SLRCONB         equ	1035	;# 
   744   00040C                     INLVLB          equ	1036	;# 
   745   00040D                     IOCBP           equ	1037	;# 
   746   00040E                     IOCBN           equ	1038	;# 
   747   00040F                     IOCBF           equ	1039	;# 
   748   000410                     ANSELC          equ	1040	;# 
   749   000411                     WPUC            equ	1041	;# 
   750   000412                     ODCONC          equ	1042	;# 
   751   000413                     SLRCONC         equ	1043	;# 
   752   000414                     INLVLC          equ	1044	;# 
   753   000415                     IOCCP           equ	1045	;# 
   754   000416                     IOCCN           equ	1046	;# 
   755   000417                     IOCCF           equ	1047	;# 
   756   000418                     ANSELD          equ	1048	;# 
   757   000419                     WPUD            equ	1049	;# 
   758   00041A                     ODCOND          equ	1050	;# 
   759   00041B                     SLRCOND         equ	1051	;# 
   760   00041C                     INLVLD          equ	1052	;# 
   761   000420                     ANSELE          equ	1056	;# 
   762   000421                     WPUE            equ	1057	;# 
   763   000422                     ODCONE          equ	1058	;# 
   764   000423                     SLRCONE         equ	1059	;# 
   765   000424                     INLVLE          equ	1060	;# 
   766   000425                     IOCEP           equ	1061	;# 
   767   000426                     IOCEN           equ	1062	;# 
   768   000427                     IOCEF           equ	1063	;# 
   769   000428                     ANSELF          equ	1064	;# 
   770   000429                     WPUF            equ	1065	;# 
   771   00042A                     ODCONF          equ	1066	;# 
   772   00042B                     SLRCONF         equ	1067	;# 
   773   00042C                     INLVLF          equ	1068	;# 
   774   000440                     NCO1ACC         equ	1088	;# 
   775   000440                     NCO1ACCL        equ	1088	;# 
   776   000441                     NCO1ACCH        equ	1089	;# 
   777   000442                     NCO1ACCU        equ	1090	;# 
   778   000443                     NCO1INC         equ	1091	;# 
   779   000443                     NCO1INCL        equ	1091	;# 
   780   000444                     NCO1INCH        equ	1092	;# 
   781   000445                     NCO1INCU        equ	1093	;# 
   782   000446                     NCO1CON         equ	1094	;# 
   783   000447                     NCO1CLK         equ	1095	;# 
   784   000448                     NCO2ACC         equ	1096	;# 
   785   000448                     NCO2ACCL        equ	1096	;# 
   786   000449                     NCO2ACCH        equ	1097	;# 
   787   00044A                     NCO2ACCU        equ	1098	;# 
   788   00044B                     NCO2INC         equ	1099	;# 
   789   00044B                     NCO2INCL        equ	1099	;# 
   790   00044C                     NCO2INCH        equ	1100	;# 
   791   00044D                     NCO2INCU        equ	1101	;# 
   792   00044E                     NCO2CON         equ	1102	;# 
   793   00044F                     NCO2CLK         equ	1103	;# 
   794   000450                     NCO3ACC         equ	1104	;# 
   795   000450                     NCO3ACCL        equ	1104	;# 
   796   000451                     NCO3ACCH        equ	1105	;# 
   797   000452                     NCO3ACCU        equ	1106	;# 
   798   000453                     NCO3INC         equ	1107	;# 
   799   000453                     NCO3INCL        equ	1107	;# 
   800   000454                     NCO3INCH        equ	1108	;# 
   801   000455                     NCO3INCU        equ	1109	;# 
   802   000456                     NCO3CON         equ	1110	;# 
   803   000457                     NCO3CLK         equ	1111	;# 
   804   000459                     IVTLOCK         equ	1113	;# 
   805   00045A                     IVTAD           equ	1114	;# 
   806   00045A                     IVTADL          equ	1114	;# 
   807   00045B                     IVTADH          equ	1115	;# 
   808   00045C                     IVTADU          equ	1116	;# 
   809   00045D                     IVTBASE         equ	1117	;# 
   810   00045D                     IVTBASEL        equ	1117	;# 
   811   00045E                     IVTBASEH        equ	1118	;# 
   812   00045F                     IVTBASEU        equ	1119	;# 
   813   000460                     PWM1ERS         equ	1120	;# 
   814   000461                     PWM1CLK         equ	1121	;# 
   815   000462                     PWM1LDS         equ	1122	;# 
   816   000463                     PWM1PR          equ	1123	;# 
   817   000463                     PWM1PRL         equ	1123	;# 
   818   000464                     PWM1PRH         equ	1124	;# 
   819   000465                     PWM1CPRE        equ	1125	;# 
   820   000466                     PWM1PIPOS       equ	1126	;# 
   821   000467                     PWM1GIR         equ	1127	;# 
   822   000468                     PWM1GIE         equ	1128	;# 
   823   000469                     PWM1CON         equ	1129	;# 
   824   00046A                     PWM1S1CFG       equ	1130	;# 
   825   00046B                     PWM1S1P1        equ	1131	;# 
   826   00046B                     PWM1S1P1L       equ	1131	;# 
   827   00046C                     PWM1S1P1H       equ	1132	;# 
   828   00046D                     PWM1S1P2        equ	1133	;# 
   829   00046D                     PWM1S1P2L       equ	1133	;# 
   830   00046E                     PWM1S1P2H       equ	1134	;# 
   831   00046F                     PWM2ERS         equ	1135	;# 
   832   000470                     PWM2CLK         equ	1136	;# 
   833   000471                     PWM2LDS         equ	1137	;# 
   834   000472                     PWM2PR          equ	1138	;# 
   835   000472                     PWM2PRL         equ	1138	;# 
   836   000473                     PWM2PRH         equ	1139	;# 
   837   000474                     PWM2CPRE        equ	1140	;# 
   838   000475                     PWM2PIPOS       equ	1141	;# 
   839   000476                     PWM2GIR         equ	1142	;# 
   840   000477                     PWM2GIE         equ	1143	;# 
   841   000478                     PWM2CON         equ	1144	;# 
   842   000479                     PWM2S1CFG       equ	1145	;# 
   843   00047A                     PWM2S1P1        equ	1146	;# 
   844   00047A                     PWM2S1P1L       equ	1146	;# 
   845   00047B                     PWM2S1P1H       equ	1147	;# 
   846   00047C                     PWM2S1P2        equ	1148	;# 
   847   00047C                     PWM2S1P2L       equ	1148	;# 
   848   00047D                     PWM2S1P2H       equ	1149	;# 
   849   00047E                     PWM3ERS         equ	1150	;# 
   850   00047F                     PWM3CLK         equ	1151	;# 
   851   000480                     PWM3LDS         equ	1152	;# 
   852   000481                     PWM3PR          equ	1153	;# 
   853   000481                     PWM3PRL         equ	1153	;# 
   854   000482                     PWM3PRH         equ	1154	;# 
   855   000483                     PWM3CPRE        equ	1155	;# 
   856   000484                     PWM3PIPOS       equ	1156	;# 
   857   000485                     PWM3GIR         equ	1157	;# 
   858   000486                     PWM3GIE         equ	1158	;# 
   859   000487                     PWM3CON         equ	1159	;# 
   860   000488                     PWM3S1CFG       equ	1160	;# 
   861   000489                     PWM3S1P1        equ	1161	;# 
   862   000489                     PWM3S1P1L       equ	1161	;# 
   863   00048A                     PWM3S1P1H       equ	1162	;# 
   864   00048B                     PWM3S1P2        equ	1163	;# 
   865   00048B                     PWM3S1P2L       equ	1163	;# 
   866   00048C                     PWM3S1P2H       equ	1164	;# 
   867   00049C                     PWMLOAD         equ	1180	;# 
   868   00049D                     PWMEN           equ	1181	;# 
   869   00049E                     PIE0            equ	1182	;# 
   870   00049F                     PIE1            equ	1183	;# 
   871   0004A0                     PIE2            equ	1184	;# 
   872   0004A1                     PIE3            equ	1185	;# 
   873   0004A2                     PIE4            equ	1186	;# 
   874   0004A3                     PIE5            equ	1187	;# 
   875   0004A4                     PIE6            equ	1188	;# 
   876   0004A5                     PIE7            equ	1189	;# 
   877   0004A6                     PIE8            equ	1190	;# 
   878   0004A7                     PIE9            equ	1191	;# 
   879   0004A8                     PIE10           equ	1192	;# 
   880   0004A9                     PIE11           equ	1193	;# 
   881   0004AA                     PIE12           equ	1194	;# 
   882   0004AB                     PIE13           equ	1195	;# 
   883   0004AC                     PIE14           equ	1196	;# 
   884   0004AD                     PIE15           equ	1197	;# 
   885   0004AE                     PIR0            equ	1198	;# 
   886   0004AF                     PIR1            equ	1199	;# 
   887   0004B0                     PIR2            equ	1200	;# 
   888   0004B1                     PIR3            equ	1201	;# 
   889   0004B2                     PIR4            equ	1202	;# 
   890   0004B3                     PIR5            equ	1203	;# 
   891   0004B4                     PIR6            equ	1204	;# 
   892   0004B5                     PIR7            equ	1205	;# 
   893   0004B6                     PIR8            equ	1206	;# 
   894   0004B7                     PIR9            equ	1207	;# 
   895   0004B8                     PIR10           equ	1208	;# 
   896   0004B9                     PIR11           equ	1209	;# 
   897   0004BA                     PIR12           equ	1210	;# 
   898   0004BB                     PIR13           equ	1211	;# 
   899   0004BC                     PIR14           equ	1212	;# 
   900   0004BD                     PIR15           equ	1213	;# 
   901   0004BE                     LATA            equ	1214	;# 
   902   0004BF                     LATB            equ	1215	;# 
   903   0004C0                     LATC            equ	1216	;# 
   904   0004C1                     LATD            equ	1217	;# 
   905   0004C2                     LATE            equ	1218	;# 
   906   0004C3                     LATF            equ	1219	;# 
   907   0004C6                     TRISA           equ	1222	;# 
   908   0004C7                     TRISB           equ	1223	;# 
   909   0004C8                     TRISC           equ	1224	;# 
   910   0004C9                     TRISD           equ	1225	;# 
   911   0004CA                     TRISE           equ	1226	;# 
   912   0004CB                     TRISF           equ	1227	;# 
   913   0004CE                     PORTA           equ	1230	;# 
   914   0004CF                     PORTB           equ	1231	;# 
   915   0004D0                     PORTC           equ	1232	;# 
   916   0004D1                     PORTD           equ	1233	;# 
   917   0004D2                     PORTE           equ	1234	;# 
   918   0004D3                     PORTF           equ	1235	;# 
   919   0004D6                     INTCON0         equ	1238	;# 
   920   0004D7                     INTCON1         equ	1239	;# 
   921   0004D8                     STATUS          equ	1240	;# 
   922   0004D9                     FSR2            equ	1241	;# 
   923   0004D9                     FSR2L           equ	1241	;# 
   924   0004DA                     FSR2H           equ	1242	;# 
   925   0004DB                     PLUSW2          equ	1243	;# 
   926   0004DC                     PREINC2         equ	1244	;# 
   927   0004DD                     POSTDEC2        equ	1245	;# 
   928   0004DE                     POSTINC2        equ	1246	;# 
   929   0004DF                     INDF2           equ	1247	;# 
   930   0004E0                     BSR             equ	1248	;# 
   931   0004E1                     FSR1            equ	1249	;# 
   932   0004E1                     FSR1L           equ	1249	;# 
   933   0004E2                     FSR1H           equ	1250	;# 
   934   0004E3                     PLUSW1          equ	1251	;# 
   935   0004E4                     PREINC1         equ	1252	;# 
   936   0004E5                     POSTDEC1        equ	1253	;# 
   937   0004E6                     POSTINC1        equ	1254	;# 
   938   0004E7                     INDF1           equ	1255	;# 
   939   0004E8                     WREG            equ	1256	;# 
   940   0004E9                     FSR0            equ	1257	;# 
   941   0004E9                     FSR0L           equ	1257	;# 
   942   0004EA                     FSR0H           equ	1258	;# 
   943   0004EB                     PLUSW0          equ	1259	;# 
   944   0004EC                     PREINC0         equ	1260	;# 
   945   0004ED                     POSTDEC0        equ	1261	;# 
   946   0004EE                     POSTINC0        equ	1262	;# 
   947   0004EF                     INDF0           equ	1263	;# 
   948   0004F0                     PCON0           equ	1264	;# 
   949   0004F1                     PCON1           equ	1265	;# 
   950   0004F2                     CPUDOZE         equ	1266	;# 
   951   0004F3                     PROD            equ	1267	;# 
   952   0004F3                     PRODL           equ	1267	;# 
   953   0004F4                     PRODH           equ	1268	;# 
   954   0004F5                     TABLAT          equ	1269	;# 
   955   0004F6                     TBLPTR          equ	1270	;# 
   956   0004F6                     TBLPTRL         equ	1270	;# 
   957   0004F7                     TBLPTRH         equ	1271	;# 
   958   0004F8                     TBLPTRU         equ	1272	;# 
   959   0004F9                     PCLAT           equ	1273	;# 
   960   0004F9                     PCL             equ	1273	;# 
   961   0004FA                     PCLATH          equ	1274	;# 
   962   0004FB                     PCLATU          equ	1275	;# 
   963   0004FC                     STKPTR          equ	1276	;# 
   964   0004FD                     TOS             equ	1277	;# 
   965   0004FD                     TOSL            equ	1277	;# 
   966   0004FE                     TOSH            equ	1278	;# 
   967   0004FF                     TOSU            equ	1279	;# 
   968   000039                     CLKRCON         equ	57	;# 
   969   00003A                     CLKRCLK         equ	58	;# 
   970   000040                     NVMCON0         equ	64	;# 
   971   000041                     NVMCON1         equ	65	;# 
   972   000042                     NVMLOCK         equ	66	;# 
   973   000043                     NVMADR          equ	67	;# 
   974   000043                     NVMADRL         equ	67	;# 
   975   000044                     NVMADRH         equ	68	;# 
   976   000045                     NVMADRU         equ	69	;# 
   977   000046                     NVMDAT          equ	70	;# 
   978   000046                     NVMDATL         equ	70	;# 
   979   000047                     NVMDATH         equ	71	;# 
   980   000048                     VREGCON         equ	72	;# 
   981   000049                     BORCON          equ	73	;# 
   982   00004A                     HLVDCON0        equ	74	;# 
   983   00004B                     HLVDCON1        equ	75	;# 
   984   00004C                     ZCDCON          equ	76	;# 
   985   000060                     PMD0            equ	96	;# 
   986   000061                     PMD1            equ	97	;# 
   987   000063                     PMD3            equ	99	;# 
   988   000064                     PMD4            equ	100	;# 
   989   000065                     PMD5            equ	101	;# 
   990   000066                     PMD6            equ	102	;# 
   991   000067                     PMD7            equ	103	;# 
   992   000068                     PMD8            equ	104	;# 
   993   00006A                     MD1CON0         equ	106	;# 
   994   00006B                     MD1CON1         equ	107	;# 
   995   00006C                     MD1SRC          equ	108	;# 
   996   00006D                     MD1CARL         equ	109	;# 
   997   00006E                     MD1CARH         equ	110	;# 
   998   00006F                     CMOUT           equ	111	;# 
   999   000070                     CM1CON0         equ	112	;# 
  1000   000071                     CM1CON1         equ	113	;# 
  1001   000072                     CM1NCH          equ	114	;# 
  1002   000073                     CM1PCH          equ	115	;# 
  1003   000074                     CM2CON0         equ	116	;# 
  1004   000075                     CM2CON1         equ	117	;# 
  1005   000076                     CM2NCH          equ	118	;# 
  1006   000077                     CM2PCH          equ	119	;# 
  1007   000078                     WDTCON0         equ	120	;# 
  1008   000079                     WDTCON1         equ	121	;# 
  1009   00007A                     WDTPS           equ	122	;# 
  1010   00007A                     WDTPSL          equ	122	;# 
  1011   00007B                     WDTPSH          equ	123	;# 
  1012   00007C                     WDTTMR          equ	124	;# 
  1013   00007D                     DAC1DAT         equ	125	;# 
  1014   00007D                     DAC1DATL        equ	125	;# 
  1015   00007F                     DAC1CON         equ	127	;# 
  1016   000080                     SPI1RXB         equ	128	;# 
  1017   000081                     SPI1TXB         equ	129	;# 
  1018   000082                     SPI1TCNT        equ	130	;# 
  1019   000082                     SPI1TCNTL       equ	130	;# 
  1020   000083                     SPI1TCNTH       equ	131	;# 
  1021   000084                     SPI1CON0        equ	132	;# 
  1022   000085                     SPI1CON1        equ	133	;# 
  1023   000086                     SPI1CON2        equ	134	;# 
  1024   000087                     SPI1STATUS      equ	135	;# 
  1025   000088                     SPI1TWIDTH      equ	136	;# 
  1026   000089                     SPI1BAUD        equ	137	;# 
  1027   00008A                     SPI1INTF        equ	138	;# 
  1028   00008B                     SPI1INTE        equ	139	;# 
  1029   00008C                     SPI1CLK         equ	140	;# 
  1030   00008D                     SPI2RXB         equ	141	;# 
  1031   00008E                     SPI2TXB         equ	142	;# 
  1032   00008F                     SPI2TCNT        equ	143	;# 
  1033   00008F                     SPI2TCNTL       equ	143	;# 
  1034   000090                     SPI2TCNTH       equ	144	;# 
  1035   000091                     SPI2CON0        equ	145	;# 
  1036   000092                     SPI2CON1        equ	146	;# 
  1037   000093                     SPI2CON2        equ	147	;# 
  1038   000094                     SPI2STATUS      equ	148	;# 
  1039   000095                     SPI2TWIDTH      equ	149	;# 
  1040   000096                     SPI2BAUD        equ	150	;# 
  1041   000097                     SPI2INTF        equ	151	;# 
  1042   000098                     SPI2INTE        equ	152	;# 
  1043   000099                     SPI2CLK         equ	153	;# 
  1044   0000AC                     ACTCON          equ	172	;# 
  1045   0000AD                     OSCCON1         equ	173	;# 
  1046   0000AE                     OSCCON2         equ	174	;# 
  1047   0000AF                     OSCCON3         equ	175	;# 
  1048   0000B0                     OSCTUNE         equ	176	;# 
  1049   0000B1                     OSCFRQ          equ	177	;# 
  1050   0000B1                     OSCFREQ         equ	177	;# 
  1051   0000B2                     OSCSTAT         equ	178	;# 
  1052   0000B2                     OSCSTAT1        equ	178	;# 
  1053   0000B3                     OSCEN           equ	179	;# 
  1054   0000B4                     PRLOCK          equ	180	;# 
  1055   0000B5                     SCANPR          equ	181	;# 
  1056   0000B6                     DMA1PR          equ	182	;# 
  1057   0000B7                     DMA2PR          equ	183	;# 
  1058   0000B8                     DMA3PR          equ	184	;# 
  1059   0000B9                     DMA4PR          equ	185	;# 
  1060   0000BA                     DMA5PR          equ	186	;# 
  1061   0000BB                     DMA6PR          equ	187	;# 
  1062   0000BE                     MAINPR          equ	190	;# 
  1063   0000BF                     ISRPR           equ	191	;# 
  1064   0000D4                     CLCDATA         equ	212	;# 
  1065   0000D5                     CLCSELECT       equ	213	;# 
  1066   0000D6                     CLCnCON         equ	214	;# 
  1067   0000D7                     CLCnPOL         equ	215	;# 
  1068   0000D8                     CLCnSEL0        equ	216	;# 
  1069   0000D9                     CLCnSEL1        equ	217	;# 
  1070   0000DA                     CLCnSEL2        equ	218	;# 
  1071   0000DB                     CLCnSEL3        equ	219	;# 
  1072   0000DC                     CLCnGLS0        equ	220	;# 
  1073   0000DD                     CLCnGLS1        equ	221	;# 
  1074   0000DE                     CLCnGLS2        equ	222	;# 
  1075   0000DF                     CLCnGLS3        equ	223	;# 
  1076   0000E8                     DMASELECT       equ	232	;# 
  1077   0000E9                     DMAnBUF         equ	233	;# 
  1078   0000EA                     DMAnDCNT        equ	234	;# 
  1079   0000EA                     DMAnDCNTL       equ	234	;# 
  1080   0000EB                     DMAnDCNTH       equ	235	;# 
  1081   0000EC                     DMAnDPTR        equ	236	;# 
  1082   0000EC                     DMAnDPTRL       equ	236	;# 
  1083   0000ED                     DMAnDPTRH       equ	237	;# 
  1084   0000EE                     DMAnDSZ         equ	238	;# 
  1085   0000EE                     DMAnDSZL        equ	238	;# 
  1086   0000EF                     DMAnDSZH        equ	239	;# 
  1087   0000F0                     DMAnDSA         equ	240	;# 
  1088   0000F0                     DMAnDSAL        equ	240	;# 
  1089   0000F1                     DMAnDSAH        equ	241	;# 
  1090   0000F2                     DMAnSCNT        equ	242	;# 
  1091   0000F2                     DMAnSCNTL       equ	242	;# 
  1092   0000F3                     DMAnSCNTH       equ	243	;# 
  1093   0000F4                     DMAnSPTR        equ	244	;# 
  1094   0000F4                     DMAnSPTRL       equ	244	;# 
  1095   0000F5                     DMAnSPTRH       equ	245	;# 
  1096   0000F6                     DMAnSPTRU       equ	246	;# 
  1097   0000F7                     DMAnSSZ         equ	247	;# 
  1098   0000F7                     DMAnSSZL        equ	247	;# 
  1099   0000F8                     DMAnSSZH        equ	248	;# 
  1100   0000F9                     DMAnSSA         equ	249	;# 
  1101   0000F9                     DMAnSSAL        equ	249	;# 
  1102   0000FA                     DMAnSSAH        equ	250	;# 
  1103   0000FB                     DMAnSSAU        equ	251	;# 
  1104   0000FC                     DMAnCON0        equ	252	;# 
  1105   0000FD                     DMAnCON1        equ	253	;# 
  1106   0000FE                     DMAnAIRQ        equ	254	;# 
  1107   0000FF                     DMAnSIRQ        equ	255	;# 
  1108   000200                     PPSLOCK         equ	512	;# 
  1109   000201                     RA0PPS          equ	513	;# 
  1110   000202                     RA1PPS          equ	514	;# 
  1111   000203                     RA2PPS          equ	515	;# 
  1112   000204                     RA3PPS          equ	516	;# 
  1113   000205                     RA4PPS          equ	517	;# 
  1114   000206                     RA5PPS          equ	518	;# 
  1115   000207                     RA6PPS          equ	519	;# 
  1116   000208                     RA7PPS          equ	520	;# 
  1117   000209                     RB0PPS          equ	521	;# 
  1118   00020A                     RB1PPS          equ	522	;# 
  1119   00020B                     RB2PPS          equ	523	;# 
  1120   00020C                     RB3PPS          equ	524	;# 
  1121   00020D                     RB4PPS          equ	525	;# 
  1122   00020E                     RB5PPS          equ	526	;# 
  1123   00020F                     RB6PPS          equ	527	;# 
  1124   000210                     RB7PPS          equ	528	;# 
  1125   000211                     RC0PPS          equ	529	;# 
  1126   000212                     RC1PPS          equ	530	;# 
  1127   000213                     RC2PPS          equ	531	;# 
  1128   000214                     RC3PPS          equ	532	;# 
  1129   000215                     RC4PPS          equ	533	;# 
  1130   000216                     RC5PPS          equ	534	;# 
  1131   000217                     RC6PPS          equ	535	;# 
  1132   000218                     RC7PPS          equ	536	;# 
  1133   000219                     RD0PPS          equ	537	;# 
  1134   00021A                     RD1PPS          equ	538	;# 
  1135   00021B                     RD2PPS          equ	539	;# 
  1136   00021C                     RD3PPS          equ	540	;# 
  1137   00021D                     RD4PPS          equ	541	;# 
  1138   00021E                     RD5PPS          equ	542	;# 
  1139   00021F                     RD6PPS          equ	543	;# 
  1140   000220                     RD7PPS          equ	544	;# 
  1141   000221                     RE0PPS          equ	545	;# 
  1142   000222                     RE1PPS          equ	546	;# 
  1143   000223                     RE2PPS          equ	547	;# 
  1144   000229                     RF0PPS          equ	553	;# 
  1145   00022A                     RF1PPS          equ	554	;# 
  1146   00022B                     RF2PPS          equ	555	;# 
  1147   00022C                     RF3PPS          equ	556	;# 
  1148   00022D                     RF4PPS          equ	557	;# 
  1149   00022E                     RF5PPS          equ	558	;# 
  1150   00022F                     RF6PPS          equ	559	;# 
  1151   000230                     RF7PPS          equ	560	;# 
  1152   00023E                     INT0PPS         equ	574	;# 
  1153   00023F                     INT1PPS         equ	575	;# 
  1154   000240                     INT2PPS         equ	576	;# 
  1155   000241                     T0CKIPPS        equ	577	;# 
  1156   000242                     T1CKIPPS        equ	578	;# 
  1157   000243                     T1GPPS          equ	579	;# 
  1158   000244                     T3CKIPPS        equ	580	;# 
  1159   000245                     T3GPPS          equ	581	;# 
  1160   000246                     T5CKIPPS        equ	582	;# 
  1161   000247                     T5GPPS          equ	583	;# 
  1162   000248                     T2INPPS         equ	584	;# 
  1163   000249                     T4INPPS         equ	585	;# 
  1164   00024A                     T6INPPS         equ	586	;# 
  1165   00024F                     CCP1PPS         equ	591	;# 
  1166   000250                     CCP2PPS         equ	592	;# 
  1167   000251                     CCP3PPS         equ	593	;# 
  1168   000253                     PWM1ERSPPS      equ	595	;# 
  1169   000254                     PWM2ERSPPS      equ	596	;# 
  1170   000255                     PWM3ERSPPS      equ	597	;# 
  1171   000257                     PWMIN0PPS       equ	599	;# 
  1172   000258                     PWMIN1PPS       equ	600	;# 
  1173   000259                     SMT1WINPPS      equ	601	;# 
  1174   00025A                     SMT1SIGPPS      equ	602	;# 
  1175   00025B                     CWG1PPS         equ	603	;# 
  1176   00025B                     CWG1INPPS       equ	603	;# 
  1177   00025C                     CWG2PPS         equ	604	;# 
  1178   00025C                     CWG2INPPS       equ	604	;# 
  1179   00025D                     CWG3PPS         equ	605	;# 
  1180   00025D                     CWG3INPPS       equ	605	;# 
  1181   00025E                     MD1CARLPPS      equ	606	;# 
  1182   00025E                     MDCARLPPS       equ	606	;# 
  1183   00025F                     MD1CARHPPS      equ	607	;# 
  1184   00025F                     MDCARHPPS       equ	607	;# 
  1185   000260                     MD1SRCPPS       equ	608	;# 
  1186   000260                     MDSRCPPS        equ	608	;# 
  1187   000261                     CLCIN0PPS       equ	609	;# 
  1188   000262                     CLCIN1PPS       equ	610	;# 
  1189   000263                     CLCIN2PPS       equ	611	;# 
  1190   000264                     CLCIN3PPS       equ	612	;# 
  1191   000265                     CLCIN4PPS       equ	613	;# 
  1192   000266                     CLCIN5PPS       equ	614	;# 
  1193   000267                     CLCIN6PPS       equ	615	;# 
  1194   000268                     CLCIN7PPS       equ	616	;# 
  1195   000269                     ADACTPPS        equ	617	;# 
  1196   00026A                     SPI1SCKPPS      equ	618	;# 
  1197   00026B                     SPI1SDIPPS      equ	619	;# 
  1198   00026C                     SPI1SSPPS       equ	620	;# 
  1199   00026D                     SPI2SCKPPS      equ	621	;# 
  1200   00026E                     SPI2SDIPPS      equ	622	;# 
  1201   00026F                     SPI2SSPPS       equ	623	;# 
  1202   000270                     I2C1SDAPPS      equ	624	;# 
  1203   000271                     I2C1SCLPPS      equ	625	;# 
  1204   000272                     U1RXPPS         equ	626	;# 
  1205   000273                     U1CTSPPS        equ	627	;# 
  1206   000274                     U2RXPPS         equ	628	;# 
  1207   000275                     U2CTSPPS        equ	629	;# 
  1208   000276                     U3RXPPS         equ	630	;# 
  1209   000277                     U3CTSPPS        equ	631	;# 
  1210   000278                     U4RXPPS         equ	632	;# 
  1211   000279                     U4CTSPPS        equ	633	;# 
  1212   00027A                     U5RXPPS         equ	634	;# 
  1213   00027B                     U5CTSPPS        equ	635	;# 
  1214   000286                     RC4I2C          equ	646	;# 
  1215   000287                     RC3I2C          equ	647	;# 
  1216   000288                     RB2I2C          equ	648	;# 
  1217   000289                     RB1I2C          equ	649	;# 
  1218   00028B                     I2C1RXB         equ	651	;# 
  1219   00028C                     I2C1TXB         equ	652	;# 
  1220   00028D                     I2C1CNT         equ	653	;# 
  1221   00028E                     I2C1ADB0        equ	654	;# 
  1222   00028F                     I2C1ADB1        equ	655	;# 
  1223   000290                     I2C1ADR0        equ	656	;# 
  1224   000291                     I2C1ADR1        equ	657	;# 
  1225   000292                     I2C1ADR2        equ	658	;# 
  1226   000293                     I2C1ADR3        equ	659	;# 
  1227   000294                     I2C1CON0        equ	660	;# 
  1228   000295                     I2C1CON1        equ	661	;# 
  1229   000296                     I2C1CON2        equ	662	;# 
  1230   000297                     I2C1ERR         equ	663	;# 
  1231   000298                     I2C1STAT0       equ	664	;# 
  1232   000299                     I2C1STAT1       equ	665	;# 
  1233   00029A                     I2C1PIR         equ	666	;# 
  1234   00029B                     I2C1PIE         equ	667	;# 
  1235   00029C                     I2C1CLK         equ	668	;# 
  1236   00029D                     I2C1BTO         equ	669	;# 
  1237   0002A1                     U1RXB           equ	673	;# 
  1238   0002A1                     U1RXBL          equ	673	;# 
  1239   0002A2                     U1RXCHK         equ	674	;# 
  1240   0002A3                     U1TXB           equ	675	;# 
  1241   0002A3                     U1TXBL          equ	675	;# 
  1242   0002A4                     U1TXCHK         equ	676	;# 
  1243   0002A5                     U1P1            equ	677	;# 
  1244   0002A5                     U1P1L           equ	677	;# 
  1245   0002A6                     U1P1H           equ	678	;# 
  1246   0002A7                     U1P2            equ	679	;# 
  1247   0002A7                     U1P2L           equ	679	;# 
  1248   0002A8                     U1P2H           equ	680	;# 
  1249   0002A9                     U1P3            equ	681	;# 
  1250   0002A9                     U1P3L           equ	681	;# 
  1251   0002AA                     U1P3H           equ	682	;# 
  1252   0002AB                     U1CON0          equ	683	;# 
  1253   0002AC                     U1CON1          equ	684	;# 
  1254   0002AD                     U1CON2          equ	685	;# 
  1255   0002AE                     U1BRG           equ	686	;# 
  1256   0002AE                     U1BRGL          equ	686	;# 
  1257   0002AF                     U1BRGH          equ	687	;# 
  1258   0002B0                     U1FIFO          equ	688	;# 
  1259   0002B1                     U1UIR           equ	689	;# 
  1260   0002B2                     U1ERRIR         equ	690	;# 
  1261   0002B3                     U1ERRIE         equ	691	;# 
  1262   0002B4                     U2RXB           equ	692	;# 
  1263   0002B4                     U2RXBL          equ	692	;# 
  1264   0002B6                     U2TXB           equ	694	;# 
  1265   0002B6                     U2TXBL          equ	694	;# 
  1266   0002B8                     U2P1            equ	696	;# 
  1267   0002B8                     U2P1L           equ	696	;# 
  1268   0002BA                     U2P2            equ	698	;# 
  1269   0002BA                     U2P2L           equ	698	;# 
  1270   0002BC                     U2P3            equ	700	;# 
  1271   0002BC                     U2P3L           equ	700	;# 
  1272   0002BE                     U2CON0          equ	702	;# 
  1273   0002BF                     U2CON1          equ	703	;# 
  1274   0002C0                     U2CON2          equ	704	;# 
  1275   0002C1                     U2BRG           equ	705	;# 
  1276   0002C1                     U2BRGL          equ	705	;# 
  1277   0002C2                     U2BRGH          equ	706	;# 
  1278   0002C3                     U2FIFO          equ	707	;# 
  1279   0002C4                     U2UIR           equ	708	;# 
  1280   0002C5                     U2ERRIR         equ	709	;# 
  1281   0002C6                     U2ERRIE         equ	710	;# 
  1282   0002C7                     U3RXB           equ	711	;# 
  1283   0002C7                     U3RXBL          equ	711	;# 
  1284   0002C9                     U3TXB           equ	713	;# 
  1285   0002C9                     U3TXBL          equ	713	;# 
  1286   0002CB                     U3P1            equ	715	;# 
  1287   0002CB                     U3P1L           equ	715	;# 
  1288   0002CD                     U3P2            equ	717	;# 
  1289   0002CD                     U3P2L           equ	717	;# 
  1290   0002CF                     U3P3            equ	719	;# 
  1291   0002CF                     U3P3L           equ	719	;# 
  1292   0002D1                     U3CON0          equ	721	;# 
  1293   0002D2                     U3CON1          equ	722	;# 
  1294   0002D3                     U3CON2          equ	723	;# 
  1295   0002D4                     U3BRG           equ	724	;# 
  1296   0002D4                     U3BRGL          equ	724	;# 
  1297   0002D5                     U3BRGH          equ	725	;# 
  1298   0002D6                     U3FIFO          equ	726	;# 
  1299   0002D7                     U3UIR           equ	727	;# 
  1300   0002D8                     U3ERRIR         equ	728	;# 
  1301   0002D9                     U3ERRIE         equ	729	;# 
  1302   0002DA                     U4RXB           equ	730	;# 
  1303   0002DA                     U4RXBL          equ	730	;# 
  1304   0002DC                     U4TXB           equ	732	;# 
  1305   0002DC                     U4TXBL          equ	732	;# 
  1306   0002DE                     U4P1            equ	734	;# 
  1307   0002DE                     U4P1L           equ	734	;# 
  1308   0002E0                     U4P2            equ	736	;# 
  1309   0002E0                     U4P2L           equ	736	;# 
  1310   0002E2                     U4P3            equ	738	;# 
  1311   0002E2                     U4P3L           equ	738	;# 
  1312   0002E4                     U4CON0          equ	740	;# 
  1313   0002E5                     U4CON1          equ	741	;# 
  1314   0002E6                     U4CON2          equ	742	;# 
  1315   0002E7                     U4BRG           equ	743	;# 
  1316   0002E7                     U4BRGL          equ	743	;# 
  1317   0002E8                     U4BRGH          equ	744	;# 
  1318   0002E9                     U4FIFO          equ	745	;# 
  1319   0002EA                     U4UIR           equ	746	;# 
  1320   0002EB                     U4ERRIR         equ	747	;# 
  1321   0002EC                     U4ERRIE         equ	748	;# 
  1322   0002ED                     U5RXB           equ	749	;# 
  1323   0002ED                     U5RXBL          equ	749	;# 
  1324   0002EF                     U5TXB           equ	751	;# 
  1325   0002EF                     U5TXBL          equ	751	;# 
  1326   0002F1                     U5P1            equ	753	;# 
  1327   0002F1                     U5P1L           equ	753	;# 
  1328   0002F3                     U5P2            equ	755	;# 
  1329   0002F3                     U5P2L           equ	755	;# 
  1330   0002F5                     U5P3            equ	757	;# 
  1331   0002F5                     U5P3L           equ	757	;# 
  1332   0002F7                     U5CON0          equ	759	;# 
  1333   0002F8                     U5CON1          equ	760	;# 
  1334   0002F9                     U5CON2          equ	761	;# 
  1335   0002FA                     U5BRG           equ	762	;# 
  1336   0002FA                     U5BRGL          equ	762	;# 
  1337   0002FB                     U5BRGH          equ	763	;# 
  1338   0002FC                     U5FIFO          equ	764	;# 
  1339   0002FD                     U5UIR           equ	765	;# 
  1340   0002FE                     U5ERRIR         equ	766	;# 
  1341   0002FF                     U5ERRIE         equ	767	;# 
  1342   000300                     SMT1TMR         equ	768	;# 
  1343   000300                     SMT1TMRL        equ	768	;# 
  1344   000301                     SMT1TMRH        equ	769	;# 
  1345   000302                     SMT1TMRU        equ	770	;# 
  1346   000303                     SMT1CPR         equ	771	;# 
  1347   000303                     SMT1CPRL        equ	771	;# 
  1348   000304                     SMT1CPRH        equ	772	;# 
  1349   000305                     SMT1CPRU        equ	773	;# 
  1350   000306                     SMT1CPW         equ	774	;# 
  1351   000306                     SMT1CPWL        equ	774	;# 
  1352   000307                     SMT1CPWH        equ	775	;# 
  1353   000308                     SMT1CPWU        equ	776	;# 
  1354   000309                     SMT1PR          equ	777	;# 
  1355   000309                     SMT1PRL         equ	777	;# 
  1356   00030A                     SMT1PRH         equ	778	;# 
  1357   00030B                     SMT1PRU         equ	779	;# 
  1358   00030C                     SMT1CON0        equ	780	;# 
  1359   00030D                     SMT1CON1        equ	781	;# 
  1360   00030E                     SMT1STAT        equ	782	;# 
  1361   00030F                     SMT1CLK         equ	783	;# 
  1362   000310                     SMT1SIG         equ	784	;# 
  1363   000311                     SMT1WIN         equ	785	;# 
  1364   000318                     TMR0L           equ	792	;# 
  1365   000318                     TMR0            equ	792	;# 
  1366   000319                     TMR0H           equ	793	;# 
  1367   000319                     PR0             equ	793	;# 
  1368   00031A                     T0CON0          equ	794	;# 
  1369   00031B                     T0CON1          equ	795	;# 
  1370   00031C                     TMR1            equ	796	;# 
  1371   00031C                     TMR1L           equ	796	;# 
  1372   00031D                     TMR1H           equ	797	;# 
  1373   00031E                     T1CON           equ	798	;# 
  1374   00031E                     TMR1CON         equ	798	;# 
  1375   00031F                     T1GCON          equ	799	;# 
  1376   00031F                     TMR1GCON        equ	799	;# 
  1377   000320                     T1GATE          equ	800	;# 
  1378   000320                     TMR1GATE        equ	800	;# 
  1379   000321                     T1CLK           equ	801	;# 
  1380   000321                     TMR1CLK         equ	801	;# 
  1381   000321                     PR1             equ	801	;# 
  1382   000322                     T2TMR           equ	802	;# 
  1383   000322                     TMR2            equ	802	;# 
  1384   000323                     T2PR            equ	803	;# 
  1385   000323                     PR2             equ	803	;# 
  1386   000324                     T2CON           equ	804	;# 
  1387   000325                     T2HLT           equ	805	;# 
  1388   000326                     T2CLKCON        equ	806	;# 
  1389   000326                     T2CLK           equ	806	;# 
  1390   000327                     T2RST           equ	807	;# 
  1391   000328                     TMR3            equ	808	;# 
  1392   000328                     TMR3L           equ	808	;# 
  1393   000329                     TMR3H           equ	809	;# 
  1394   00032A                     T3CON           equ	810	;# 
  1395   00032A                     TMR3CON         equ	810	;# 
  1396   00032B                     T3GCON          equ	811	;# 
  1397   00032B                     TMR3GCON        equ	811	;# 
  1398   00032C                     T3GATE          equ	812	;# 
  1399   00032C                     TMR3GATE        equ	812	;# 
  1400   00032D                     T3CLK           equ	813	;# 
  1401   00032D                     TMR3CLK         equ	813	;# 
  1402   00032D                     PR3             equ	813	;# 
  1403   00032E                     T4TMR           equ	814	;# 
  1404   00032E                     TMR4            equ	814	;# 
  1405   00032F                     T4PR            equ	815	;# 
  1406   00032F                     PR4             equ	815	;# 
  1407   000330                     T4CON           equ	816	;# 
  1408   000331                     T4HLT           equ	817	;# 
  1409   000332                     T4CLKCON        equ	818	;# 
  1410   000332                     T4CLK           equ	818	;# 
  1411   000333                     T4RST           equ	819	;# 
  1412   000334                     TMR5            equ	820	;# 
  1413   000334                     TMR5L           equ	820	;# 
  1414   000335                     TMR5H           equ	821	;# 
  1415   000336                     T5CON           equ	822	;# 
  1416   000336                     TMR5CON         equ	822	;# 
  1417   000337                     T5GCON          equ	823	;# 
  1418   000337                     TMR5GCON        equ	823	;# 
  1419   000338                     T5GATE          equ	824	;# 
  1420   000338                     TMR5GATE        equ	824	;# 
  1421   000339                     T5CLK           equ	825	;# 
  1422   000339                     TMR5CLK         equ	825	;# 
  1423   000339                     PR5             equ	825	;# 
  1424   00033A                     T6TMR           equ	826	;# 
  1425   00033A                     TMR6            equ	826	;# 
  1426   00033B                     T6PR            equ	827	;# 
  1427   00033B                     PR6             equ	827	;# 
  1428   00033C                     T6CON           equ	828	;# 
  1429   00033D                     T6HLT           equ	829	;# 
  1430   00033E                     T6CLKCON        equ	830	;# 
  1431   00033E                     T6CLK           equ	830	;# 
  1432   00033F                     T6RST           equ	831	;# 
  1433   000340                     CCPR1           equ	832	;# 
  1434   000340                     CCPR1L          equ	832	;# 
  1435   000341                     CCPR1H          equ	833	;# 
  1436   000342                     CCP1CON         equ	834	;# 
  1437   000343                     CCP1CAP         equ	835	;# 
  1438   000344                     CCPR2           equ	836	;# 
  1439   000344                     CCPR2L          equ	836	;# 
  1440   000345                     CCPR2H          equ	837	;# 
  1441   000346                     CCP2CON         equ	838	;# 
  1442   000347                     CCP2CAP         equ	839	;# 
  1443   000348                     CCPR3           equ	840	;# 
  1444   000348                     CCPR3L          equ	840	;# 
  1445   000349                     CCPR3H          equ	841	;# 
  1446   00034A                     CCP3CON         equ	842	;# 
  1447   00034B                     CCP3CAP         equ	843	;# 
  1448   00034C                     CCPTMRS0        equ	844	;# 
  1449   00034F                     CRCDATA         equ	847	;# 
  1450   00034F                     CRCDATL         equ	847	;# 
  1451   000350                     CRCDATH         equ	848	;# 
  1452   000351                     CRCACC          equ	849	;# 
  1453   000351                     CRCACCL         equ	849	;# 
  1454   000352                     CRCACCH         equ	850	;# 
  1455   000353                     CRCSHFT         equ	851	;# 
  1456   000353                     CRCSHIFTL       equ	851	;# 
  1457   000354                     CRCSHIFTH       equ	852	;# 
  1458   000355                     CRCXOR          equ	853	;# 
  1459   000355                     CRCXORL         equ	853	;# 
  1460   000356                     CRCXORH         equ	854	;# 
  1461   000357                     CRCCON0         equ	855	;# 
  1462   000358                     CRCCON1         equ	856	;# 
  1463   00035A                     SCANLADR        equ	858	;# 
  1464   00035A                     SCANLADRL       equ	858	;# 
  1465   00035B                     SCANLADRH       equ	859	;# 
  1466   00035C                     SCANLADRU       equ	860	;# 
  1467   00035D                     SCANHADR        equ	861	;# 
  1468   00035D                     SCANHADRL       equ	861	;# 
  1469   00035E                     SCANHADRH       equ	862	;# 
  1470   00035F                     SCANHADRU       equ	863	;# 
  1471   000360                     SCANCON0        equ	864	;# 
  1472   000361                     SCANTRIG        equ	865	;# 
  1473   000362                     IPR0            equ	866	;# 
  1474   000363                     IPR1            equ	867	;# 
  1475   000364                     IPR2            equ	868	;# 
  1476   000365                     IPR3            equ	869	;# 
  1477   000366                     IPR4            equ	870	;# 
  1478   000367                     IPR5            equ	871	;# 
  1479   000368                     IPR6            equ	872	;# 
  1480   000369                     IPR7            equ	873	;# 
  1481   00036A                     IPR8            equ	874	;# 
  1482   00036B                     IPR9            equ	875	;# 
  1483   00036C                     IPR10           equ	876	;# 
  1484   00036D                     IPR11           equ	877	;# 
  1485   00036E                     IPR12           equ	878	;# 
  1486   00036F                     IPR13           equ	879	;# 
  1487   000370                     IPR14           equ	880	;# 
  1488   000371                     IPR15           equ	881	;# 
  1489   000373                     STATUS_CSHAD    equ	883	;# 
  1490   000374                     WREG_CSHAD      equ	884	;# 
  1491   000375                     BSR_CSHAD       equ	885	;# 
  1492   000376                     SHADCON         equ	886	;# 
  1493   000377                     STATUS_SHAD     equ	887	;# 
  1494   000378                     WREG_SHAD       equ	888	;# 
  1495   000379                     BSR_SHAD        equ	889	;# 
  1496   00037A                     PCLATH_SHAD     equ	890	;# 
  1497   00037B                     PCLATU_SHAD     equ	891	;# 
  1498   00037C                     FSR0SH          equ	892	;# 
  1499   00037C                     FSR0L_SHAD      equ	892	;# 
  1500   00037D                     FSR0H_SHAD      equ	893	;# 
  1501   00037E                     FSR1SH          equ	894	;# 
  1502   00037E                     FSR1L_SHAD      equ	894	;# 
  1503   00037F                     FSR1H_SHAD      equ	895	;# 
  1504   000380                     FSR2SH          equ	896	;# 
  1505   000380                     FSR2L_SHAD      equ	896	;# 
  1506   000381                     FSR2H_SHAD      equ	897	;# 
  1507   000382                     PRODSH          equ	898	;# 
  1508   000382                     PRODL_SHAD      equ	898	;# 
  1509   000383                     PRODH_SHAD      equ	899	;# 
  1510   0003BC                     CWG1CLK         equ	956	;# 
  1511   0003BC                     CWG1CLKCON      equ	956	;# 
  1512   0003BD                     CWG1ISM         equ	957	;# 
  1513   0003BD                     CWG1DAT         equ	957	;# 
  1514   0003BE                     CWG1DBR         equ	958	;# 
  1515   0003BF                     CWG1DBF         equ	959	;# 
  1516   0003C0                     CWG1CON0        equ	960	;# 
  1517   0003C1                     CWG1CON1        equ	961	;# 
  1518   0003C2                     CWG1AS0         equ	962	;# 
  1519   0003C3                     CWG1AS1         equ	963	;# 
  1520   0003C4                     CWG1STR         equ	964	;# 
  1521   0003C5                     CWG2CLK         equ	965	;# 
  1522   0003C5                     CWG2CLKCON      equ	965	;# 
  1523   0003C6                     CWG2ISM         equ	966	;# 
  1524   0003C6                     CWG2DAT         equ	966	;# 
  1525   0003C7                     CWG2DBR         equ	967	;# 
  1526   0003C8                     CWG2DBF         equ	968	;# 
  1527   0003C9                     CWG2CON0        equ	969	;# 
  1528   0003CA                     CWG2CON1        equ	970	;# 
  1529   0003CB                     CWG2AS0         equ	971	;# 
  1530   0003CC                     CWG2AS1         equ	972	;# 
  1531   0003CD                     CWG2STR         equ	973	;# 
  1532   0003CE                     CWG3CLK         equ	974	;# 
  1533   0003CE                     CWG3CLKCON      equ	974	;# 
  1534   0003CF                     CWG3ISM         equ	975	;# 
  1535   0003CF                     CWG3DAT         equ	975	;# 
  1536   0003D0                     CWG3DBR         equ	976	;# 
  1537   0003D1                     CWG3DBF         equ	977	;# 
  1538   0003D2                     CWG3CON0        equ	978	;# 
  1539   0003D3                     CWG3CON1        equ	979	;# 
  1540   0003D4                     CWG3AS0         equ	980	;# 
  1541   0003D5                     CWG3AS1         equ	981	;# 
  1542   0003D6                     CWG3STR         equ	982	;# 
  1543   0003D7                     FVRCON          equ	983	;# 
  1544   0003D8                     ADCPCON         equ	984	;# 
  1545   0003D8                     ADCP            equ	984	;# 
  1546   0003D9                     ADLTH           equ	985	;# 
  1547   0003D9                     ADLTHL          equ	985	;# 
  1548   0003DA                     ADLTHH          equ	986	;# 
  1549   0003DB                     ADUTH           equ	987	;# 
  1550   0003DB                     ADUTHL          equ	987	;# 
  1551   0003DC                     ADUTHH          equ	988	;# 
  1552   0003DD                     ADERR           equ	989	;# 
  1553   0003DD                     ADERRL          equ	989	;# 
  1554   0003DE                     ADERRH          equ	990	;# 
  1555   0003DF                     ADSTPT          equ	991	;# 
  1556   0003DF                     ADSTPTL         equ	991	;# 
  1557   0003E0                     ADSTPTH         equ	992	;# 
  1558   0003E1                     ADFLTR          equ	993	;# 
  1559   0003E1                     ADFLTRL         equ	993	;# 
  1560   0003E2                     ADFLTRH         equ	994	;# 
  1561   0003E3                     ADACC           equ	995	;# 
  1562   0003E3                     ADACCL          equ	995	;# 
  1563   0003E4                     ADACCH          equ	996	;# 
  1564   0003E5                     ADACCU          equ	997	;# 
  1565   0003E6                     ADCNT           equ	998	;# 
  1566   0003E7                     ADRPT           equ	999	;# 
  1567   0003E8                     ADPREV          equ	1000	;# 
  1568   0003E8                     ADPREVL         equ	1000	;# 
  1569   0003E9                     ADPREVH         equ	1001	;# 
  1570   0003EA                     ADRES           equ	1002	;# 
  1571   0003EA                     ADRESL          equ	1002	;# 
  1572   0003EB                     ADRESH          equ	1003	;# 
  1573   0003EC                     ADPCH           equ	1004	;# 
  1574   0003EE                     ADACQ           equ	1006	;# 
  1575   0003EE                     ADACQL          equ	1006	;# 
  1576   0003EF                     ADACQH          equ	1007	;# 
  1577   0003F0                     ADCAP           equ	1008	;# 
  1578   0003F1                     ADPRE           equ	1009	;# 
  1579   0003F1                     ADPREL          equ	1009	;# 
  1580   0003F2                     ADPREH          equ	1010	;# 
  1581   0003F3                     ADCON0          equ	1011	;# 
  1582   0003F4                     ADCON1          equ	1012	;# 
  1583   0003F5                     ADCON2          equ	1013	;# 
  1584   0003F6                     ADCON3          equ	1014	;# 
  1585   0003F7                     ADSTAT          equ	1015	;# 
  1586   0003F8                     ADREF           equ	1016	;# 
  1587   0003F9                     ADACT           equ	1017	;# 
  1588   0003FA                     ADCLK           equ	1018	;# 
  1589   000400                     ANSELA          equ	1024	;# 
  1590   000401                     WPUA            equ	1025	;# 
  1591   000402                     ODCONA          equ	1026	;# 
  1592   000403                     SLRCONA         equ	1027	;# 
  1593   000404                     INLVLA          equ	1028	;# 
  1594   000405                     IOCAP           equ	1029	;# 
  1595   000406                     IOCAN           equ	1030	;# 
  1596   000407                     IOCAF           equ	1031	;# 
  1597   000408                     ANSELB          equ	1032	;# 
  1598   000409                     WPUB            equ	1033	;# 
  1599   00040A                     ODCONB          equ	1034	;# 
  1600   00040B                     SLRCONB         equ	1035	;# 
  1601   00040C                     INLVLB          equ	1036	;# 
  1602   00040D                     IOCBP           equ	1037	;# 
  1603   00040E                     IOCBN           equ	1038	;# 
  1604   00040F                     IOCBF           equ	1039	;# 
  1605   000410                     ANSELC          equ	1040	;# 
  1606   000411                     WPUC            equ	1041	;# 
  1607   000412                     ODCONC          equ	1042	;# 
  1608   000413                     SLRCONC         equ	1043	;# 
  1609   000414                     INLVLC          equ	1044	;# 
  1610   000415                     IOCCP           equ	1045	;# 
  1611   000416                     IOCCN           equ	1046	;# 
  1612   000417                     IOCCF           equ	1047	;# 
  1613   000418                     ANSELD          equ	1048	;# 
  1614   000419                     WPUD            equ	1049	;# 
  1615   00041A                     ODCOND          equ	1050	;# 
  1616   00041B                     SLRCOND         equ	1051	;# 
  1617   00041C                     INLVLD          equ	1052	;# 
  1618   000420                     ANSELE          equ	1056	;# 
  1619   000421                     WPUE            equ	1057	;# 
  1620   000422                     ODCONE          equ	1058	;# 
  1621   000423                     SLRCONE         equ	1059	;# 
  1622   000424                     INLVLE          equ	1060	;# 
  1623   000425                     IOCEP           equ	1061	;# 
  1624   000426                     IOCEN           equ	1062	;# 
  1625   000427                     IOCEF           equ	1063	;# 
  1626   000428                     ANSELF          equ	1064	;# 
  1627   000429                     WPUF            equ	1065	;# 
  1628   00042A                     ODCONF          equ	1066	;# 
  1629   00042B                     SLRCONF         equ	1067	;# 
  1630   00042C                     INLVLF          equ	1068	;# 
  1631   000440                     NCO1ACC         equ	1088	;# 
  1632   000440                     NCO1ACCL        equ	1088	;# 
  1633   000441                     NCO1ACCH        equ	1089	;# 
  1634   000442                     NCO1ACCU        equ	1090	;# 
  1635   000443                     NCO1INC         equ	1091	;# 
  1636   000443                     NCO1INCL        equ	1091	;# 
  1637   000444                     NCO1INCH        equ	1092	;# 
  1638   000445                     NCO1INCU        equ	1093	;# 
  1639   000446                     NCO1CON         equ	1094	;# 
  1640   000447                     NCO1CLK         equ	1095	;# 
  1641   000448                     NCO2ACC         equ	1096	;# 
  1642   000448                     NCO2ACCL        equ	1096	;# 
  1643   000449                     NCO2ACCH        equ	1097	;# 
  1644   00044A                     NCO2ACCU        equ	1098	;# 
  1645   00044B                     NCO2INC         equ	1099	;# 
  1646   00044B                     NCO2INCL        equ	1099	;# 
  1647   00044C                     NCO2INCH        equ	1100	;# 
  1648   00044D                     NCO2INCU        equ	1101	;# 
  1649   00044E                     NCO2CON         equ	1102	;# 
  1650   00044F                     NCO2CLK         equ	1103	;# 
  1651   000450                     NCO3ACC         equ	1104	;# 
  1652   000450                     NCO3ACCL        equ	1104	;# 
  1653   000451                     NCO3ACCH        equ	1105	;# 
  1654   000452                     NCO3ACCU        equ	1106	;# 
  1655   000453                     NCO3INC         equ	1107	;# 
  1656   000453                     NCO3INCL        equ	1107	;# 
  1657   000454                     NCO3INCH        equ	1108	;# 
  1658   000455                     NCO3INCU        equ	1109	;# 
  1659   000456                     NCO3CON         equ	1110	;# 
  1660   000457                     NCO3CLK         equ	1111	;# 
  1661   000459                     IVTLOCK         equ	1113	;# 
  1662   00045A                     IVTAD           equ	1114	;# 
  1663   00045A                     IVTADL          equ	1114	;# 
  1664   00045B                     IVTADH          equ	1115	;# 
  1665   00045C                     IVTADU          equ	1116	;# 
  1666   00045D                     IVTBASE         equ	1117	;# 
  1667   00045D                     IVTBASEL        equ	1117	;# 
  1668   00045E                     IVTBASEH        equ	1118	;# 
  1669   00045F                     IVTBASEU        equ	1119	;# 
  1670   000460                     PWM1ERS         equ	1120	;# 
  1671   000461                     PWM1CLK         equ	1121	;# 
  1672   000462                     PWM1LDS         equ	1122	;# 
  1673   000463                     PWM1PR          equ	1123	;# 
  1674   000463                     PWM1PRL         equ	1123	;# 
  1675   000464                     PWM1PRH         equ	1124	;# 
  1676   000465                     PWM1CPRE        equ	1125	;# 
  1677   000466                     PWM1PIPOS       equ	1126	;# 
  1678   000467                     PWM1GIR         equ	1127	;# 
  1679   000468                     PWM1GIE         equ	1128	;# 
  1680   000469                     PWM1CON         equ	1129	;# 
  1681   00046A                     PWM1S1CFG       equ	1130	;# 
  1682   00046B                     PWM1S1P1        equ	1131	;# 
  1683   00046B                     PWM1S1P1L       equ	1131	;# 
  1684   00046C                     PWM1S1P1H       equ	1132	;# 
  1685   00046D                     PWM1S1P2        equ	1133	;# 
  1686   00046D                     PWM1S1P2L       equ	1133	;# 
  1687   00046E                     PWM1S1P2H       equ	1134	;# 
  1688   00046F                     PWM2ERS         equ	1135	;# 
  1689   000470                     PWM2CLK         equ	1136	;# 
  1690   000471                     PWM2LDS         equ	1137	;# 
  1691   000472                     PWM2PR          equ	1138	;# 
  1692   000472                     PWM2PRL         equ	1138	;# 
  1693   000473                     PWM2PRH         equ	1139	;# 
  1694   000474                     PWM2CPRE        equ	1140	;# 
  1695   000475                     PWM2PIPOS       equ	1141	;# 
  1696   000476                     PWM2GIR         equ	1142	;# 
  1697   000477                     PWM2GIE         equ	1143	;# 
  1698   000478                     PWM2CON         equ	1144	;# 
  1699   000479                     PWM2S1CFG       equ	1145	;# 
  1700   00047A                     PWM2S1P1        equ	1146	;# 
  1701   00047A                     PWM2S1P1L       equ	1146	;# 
  1702   00047B                     PWM2S1P1H       equ	1147	;# 
  1703   00047C                     PWM2S1P2        equ	1148	;# 
  1704   00047C                     PWM2S1P2L       equ	1148	;# 
  1705   00047D                     PWM2S1P2H       equ	1149	;# 
  1706   00047E                     PWM3ERS         equ	1150	;# 
  1707   00047F                     PWM3CLK         equ	1151	;# 
  1708   000480                     PWM3LDS         equ	1152	;# 
  1709   000481                     PWM3PR          equ	1153	;# 
  1710   000481                     PWM3PRL         equ	1153	;# 
  1711   000482                     PWM3PRH         equ	1154	;# 
  1712   000483                     PWM3CPRE        equ	1155	;# 
  1713   000484                     PWM3PIPOS       equ	1156	;# 
  1714   000485                     PWM3GIR         equ	1157	;# 
  1715   000486                     PWM3GIE         equ	1158	;# 
  1716   000487                     PWM3CON         equ	1159	;# 
  1717   000488                     PWM3S1CFG       equ	1160	;# 
  1718   000489                     PWM3S1P1        equ	1161	;# 
  1719   000489                     PWM3S1P1L       equ	1161	;# 
  1720   00048A                     PWM3S1P1H       equ	1162	;# 
  1721   00048B                     PWM3S1P2        equ	1163	;# 
  1722   00048B                     PWM3S1P2L       equ	1163	;# 
  1723   00048C                     PWM3S1P2H       equ	1164	;# 
  1724   00049C                     PWMLOAD         equ	1180	;# 
  1725   00049D                     PWMEN           equ	1181	;# 
  1726   00049E                     PIE0            equ	1182	;# 
  1727   00049F                     PIE1            equ	1183	;# 
  1728   0004A0                     PIE2            equ	1184	;# 
  1729   0004A1                     PIE3            equ	1185	;# 
  1730   0004A2                     PIE4            equ	1186	;# 
  1731   0004A3                     PIE5            equ	1187	;# 
  1732   0004A4                     PIE6            equ	1188	;# 
  1733   0004A5                     PIE7            equ	1189	;# 
  1734   0004A6                     PIE8            equ	1190	;# 
  1735   0004A7                     PIE9            equ	1191	;# 
  1736   0004A8                     PIE10           equ	1192	;# 
  1737   0004A9                     PIE11           equ	1193	;# 
  1738   0004AA                     PIE12           equ	1194	;# 
  1739   0004AB                     PIE13           equ	1195	;# 
  1740   0004AC                     PIE14           equ	1196	;# 
  1741   0004AD                     PIE15           equ	1197	;# 
  1742   0004AE                     PIR0            equ	1198	;# 
  1743   0004AF                     PIR1            equ	1199	;# 
  1744   0004B0                     PIR2            equ	1200	;# 
  1745   0004B1                     PIR3            equ	1201	;# 
  1746   0004B2                     PIR4            equ	1202	;# 
  1747   0004B3                     PIR5            equ	1203	;# 
  1748   0004B4                     PIR6            equ	1204	;# 
  1749   0004B5                     PIR7            equ	1205	;# 
  1750   0004B6                     PIR8            equ	1206	;# 
  1751   0004B7                     PIR9            equ	1207	;# 
  1752   0004B8                     PIR10           equ	1208	;# 
  1753   0004B9                     PIR11           equ	1209	;# 
  1754   0004BA                     PIR12           equ	1210	;# 
  1755   0004BB                     PIR13           equ	1211	;# 
  1756   0004BC                     PIR14           equ	1212	;# 
  1757   0004BD                     PIR15           equ	1213	;# 
  1758   0004BE                     LATA            equ	1214	;# 
  1759   0004BF                     LATB            equ	1215	;# 
  1760   0004C0                     LATC            equ	1216	;# 
  1761   0004C1                     LATD            equ	1217	;# 
  1762   0004C2                     LATE            equ	1218	;# 
  1763   0004C3                     LATF            equ	1219	;# 
  1764   0004C6                     TRISA           equ	1222	;# 
  1765   0004C7                     TRISB           equ	1223	;# 
  1766   0004C8                     TRISC           equ	1224	;# 
  1767   0004C9                     TRISD           equ	1225	;# 
  1768   0004CA                     TRISE           equ	1226	;# 
  1769   0004CB                     TRISF           equ	1227	;# 
  1770   0004CE                     PORTA           equ	1230	;# 
  1771   0004CF                     PORTB           equ	1231	;# 
  1772   0004D0                     PORTC           equ	1232	;# 
  1773   0004D1                     PORTD           equ	1233	;# 
  1774   0004D2                     PORTE           equ	1234	;# 
  1775   0004D3                     PORTF           equ	1235	;# 
  1776   0004D6                     INTCON0         equ	1238	;# 
  1777   0004D7                     INTCON1         equ	1239	;# 
  1778   0004D8                     STATUS          equ	1240	;# 
  1779   0004D9                     FSR2            equ	1241	;# 
  1780   0004D9                     FSR2L           equ	1241	;# 
  1781   0004DA                     FSR2H           equ	1242	;# 
  1782   0004DB                     PLUSW2          equ	1243	;# 
  1783   0004DC                     PREINC2         equ	1244	;# 
  1784   0004DD                     POSTDEC2        equ	1245	;# 
  1785   0004DE                     POSTINC2        equ	1246	;# 
  1786   0004DF                     INDF2           equ	1247	;# 
  1787   0004E0                     BSR             equ	1248	;# 
  1788   0004E1                     FSR1            equ	1249	;# 
  1789   0004E1                     FSR1L           equ	1249	;# 
  1790   0004E2                     FSR1H           equ	1250	;# 
  1791   0004E3                     PLUSW1          equ	1251	;# 
  1792   0004E4                     PREINC1         equ	1252	;# 
  1793   0004E5                     POSTDEC1        equ	1253	;# 
  1794   0004E6                     POSTINC1        equ	1254	;# 
  1795   0004E7                     INDF1           equ	1255	;# 
  1796   0004E8                     WREG            equ	1256	;# 
  1797   0004E9                     FSR0            equ	1257	;# 
  1798   0004E9                     FSR0L           equ	1257	;# 
  1799   0004EA                     FSR0H           equ	1258	;# 
  1800   0004EB                     PLUSW0          equ	1259	;# 
  1801   0004EC                     PREINC0         equ	1260	;# 
  1802   0004ED                     POSTDEC0        equ	1261	;# 
  1803   0004EE                     POSTINC0        equ	1262	;# 
  1804   0004EF                     INDF0           equ	1263	;# 
  1805   0004F0                     PCON0           equ	1264	;# 
  1806   0004F1                     PCON1           equ	1265	;# 
  1807   0004F2                     CPUDOZE         equ	1266	;# 
  1808   0004F3                     PROD            equ	1267	;# 
  1809   0004F3                     PRODL           equ	1267	;# 
  1810   0004F4                     PRODH           equ	1268	;# 
  1811   0004F5                     TABLAT          equ	1269	;# 
  1812   0004F6                     TBLPTR          equ	1270	;# 
  1813   0004F6                     TBLPTRL         equ	1270	;# 
  1814   0004F7                     TBLPTRH         equ	1271	;# 
  1815   0004F8                     TBLPTRU         equ	1272	;# 
  1816   0004F9                     PCLAT           equ	1273	;# 
  1817   0004F9                     PCL             equ	1273	;# 
  1818   0004FA                     PCLATH          equ	1274	;# 
  1819   0004FB                     PCLATU          equ	1275	;# 
  1820   0004FC                     STKPTR          equ	1276	;# 
  1821   0004FD                     TOS             equ	1277	;# 
  1822   0004FD                     TOSL            equ	1277	;# 
  1823   0004FE                     TOSH            equ	1278	;# 
  1824   0004FF                     TOSU            equ	1279	;# 
  1825                           
  1826                           	psect	idataCOMRAM
  1827   002A66                     __pidataCOMRAM:
  1828                           	callstack 0
  1829                           
  1830                           ;initializer for _minutos
  1831   002A66  36                 	db	54
  1832                           
  1833                           ;initializer for _horas
  1834   002A67  0F                 	db	15
  1835   0000B3                     _OSCEN          set	179
  1836   0000B1                     _OSCFRQ         set	177
  1837   0000AD                     _OSCCON1        set	173
  1838   000229                     _RF0PPS         set	553
  1839   0003EB                     _ADRESH         set	1003
  1840   000340                     _CCPR1L         set	832
  1841   000341                     _CCPR1H         set	833
  1842   000342                     _CCP1CON        set	834
  1843   00031E                     _T1CON          set	798
  1844   000321                     _T1CLK          set	801
  1845   0003EC                     _ADPCH          set	1004
  1846   0003F3                     _ADCON0bits     set	1011
  1847   000324                     _T2CON          set	804
  1848   000326                     _T2CLKCON       set	806
  1849   000344                     _CCPR2L         set	836
  1850   000345                     _CCPR2H         set	837
  1851   000346                     _CCP2CON        set	838
  1852   000323                     _T2PR           set	803
  1853   000418                     _ANSELD         set	1048
  1854   000400                     _ANSELAbits     set	1024
  1855   000428                     _ANSELFbits     set	1064
  1856   0004D1                     _PORTD          set	1233
  1857   0004C1                     _LATD           set	1217
  1858   0004C1                     _LATDbits       set	1217
  1859   0004C9                     _TRISD          set	1225
  1860   0004D6                     _INTCON0bits    set	1238
  1861   0004B1                     _PIR3bits       set	1201
  1862   0004A1                     _PIE3bits       set	1185
  1863   0004C6                     _TRISAbits      set	1222
  1864   0004CB                     _TRISFbits      set	1227
  1865                           
  1866                           	psect	smallconst
  1867   002600                     __psmallconst:
  1868                           	callstack 0
  1869   002600  00                 	db	0
  1870   002601                     STR_2:
  1871   002601  55                 	db	85	;'U'
  1872   002602  50                 	db	80	;'P'
  1873   002603  43                 	db	67	;'C'
  1874   002604  20                 	db	32
  1875   002605  53                 	db	83	;'S'
  1876   002606  65                 	db	101	;'e'
  1877   002607  6D                 	db	109	;'m'
  1878   002608  31                 	db	49	;'1'
  1879   002609  31                 	db	49	;'1'
  1880   00260A  20                 	db	32
  1881   00260B  32                 	db	50	;'2'
  1882   00260C  30                 	db	48	;'0'
  1883   00260D  32                 	db	50	;'2'
  1884   00260E  35                 	db	53	;'5'
  1885   00260F  2D                 	db	45
  1886   002610  31                 	db	49	;'1'
  1887   002611  00                 	db	0
  1888   002612                     STR_1:
  1889   002612  45                 	db	69	;'E'
  1890   002613  6A                 	db	106	;'j'
  1891   002614  65                 	db	101	;'e'
  1892   002615  6D                 	db	109	;'m'
  1893   002616  70                 	db	112	;'p'
  1894   002617  6C                 	db	108	;'l'
  1895   002618  6F                 	db	111	;'o'
  1896   002619  20                 	db	32
  1897   00261A  64                 	db	100	;'d'
  1898   00261B  65                 	db	101	;'e'
  1899   00261C  20                 	db	32
  1900   00261D  72                 	db	114	;'r'
  1901   00261E  65                 	db	101	;'e'
  1902   00261F  6C                 	db	108	;'l'
  1903   002620  6F                 	db	111	;'o'
  1904   002621  6A                 	db	106	;'j'
  1905   002622  00                 	db	0
  1906   002623                     STR_3:
  1907   002623  48                 	db	72	;'H'
  1908   002624  6F                 	db	111	;'o'
  1909   002625  72                 	db	114	;'r'
  1910   002626  61                 	db	97	;'a'
  1911   002627  20                 	db	32
  1912   002628  61                 	db	97	;'a'
  1913   002629  63                 	db	99	;'c'
  1914   00262A  74                 	db	116	;'t'
  1915   00262B  75                 	db	117	;'u'
  1916   00262C  61                 	db	97	;'a'
  1917   00262D  6C                 	db	108	;'l'
  1918   00262E  3A                 	db	58	;':'
  1919   00262F  00                 	db	0
  1920   002630  00                 	db	0	; dummy byte at the end
  1921   002600                     __smallconst    set	__psmallconst
  1922   002600                     __mediumconst   set	__psmallconst
  1923   000001                     __activetblptr  equ	1
  1924                           
  1925                           ; #config settings
  1926                           
  1927                           	psect	cinit
  1928   00288C                     __pcinit:
  1929                           	callstack 0
  1930   00288C                     start_initialization:
  1931                           	callstack 0
  1932   00288C                     __initialization:
  1933                           	callstack 0
  1934                           
  1935                           ; Initialize objects allocated to COMRAM (2 bytes)
  1936                           ; load TBLPTR registers with __pidataCOMRAM
  1937   00288C  0E66               	movlw	low __pidataCOMRAM
  1938   00288E  6EF6               	movwf	tblptrl,c
  1939   002890  0E2A               	movlw	high __pidataCOMRAM
  1940   002892  6EF7               	movwf	tblptrh,c
  1941   002894  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1942   002896  6EF8               	movwf	tblptru,c
  1943   002898  0009               	tblrd		*+	;fetch initializer
  1944   00289A  C4F5 F50C          	movff	tablat,__pdataCOMRAM
  1945   00289E  0009               	tblrd		*+	;fetch initializer
  1946   0028A0  C4F5 F50D          	movff	tablat,__pdataCOMRAM+1
  1947                           
  1948                           ; Clear objects allocated to COMRAM (2 bytes)
  1949   0028A4  6A0B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1950   0028A6  6A0A               	clrf	__pbssCOMRAM& (0+255),c
  1951                           
  1952                           ;
  1953                           ; Setup IVTBASE
  1954                           ;
  1955   00045D                     IVTBASEL        equ	1117
  1956   00045E                     IVTBASEH        equ	1118
  1957   00045F                     IVTBASEU        equ	1119
  1958   0028A8  0104               	movlb	4
  1959   0028AA  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1960   0028AC  6F5D               	movwf	93,b
  1961   0028AE  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1962   0028B0  6F5E               	movwf	94,b
  1963   0028B2  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1964   0028B4  6F5F               	movwf	95,b
  1965   0028B6                     end_of_initialization:
  1966                           	callstack 0
  1967   0028B6                     __end_of__initialization:
  1968                           	callstack 0
  1969   0028B6  0E00               	movlw	low (__Lsmallconst shr (0+16))
  1970   0028B8  6EF8               	movwf	tblptru,c
  1971   0028BA  0E26               	movlw	high __Lsmallconst
  1972   0028BC  6EF7               	movwf	tblptrh,c
  1973   0028BE  0100               	movlb	0
  1974   0028C0  EF19  F015         	goto	_main	;jump to C main() function
  1975                           
  1976                           	psect	bssCOMRAM
  1977   00050A                     __pbssCOMRAM:
  1978                           	callstack 0
  1979   00050A                     _centesimas:
  1980                           	callstack 0
  1981   00050A                     	ds	1
  1982   00050B                     _segundos:
  1983                           	callstack 0
  1984   00050B                     	ds	1
  1985                           
  1986                           	psect	dataCOMRAM
  1987   00050C                     __pdataCOMRAM:
  1988                           	callstack 0
  1989   00050C                     _minutos:
  1990                           	callstack 0
  1991   00050C                     	ds	1
  1992   00050D                     _horas:
  1993                           	callstack 0
  1994   00050D                     	ds	1
  1995                           
  1996                           	psect	cstackCOMRAM
  1997   000501                     __pcstackCOMRAM:
  1998                           	callstack 0
  1999   000501                     ENVIA_NIBBLE@dato:
  2000                           	callstack 0
  2001   000501                     LEER_LCD@aux:
  2002                           	callstack 0
  2003   000501                     ___lbdiv@divisor:
  2004                           	callstack 0
  2005   000501                     ___lbmod@divisor:
  2006                           	callstack 0
  2007   000501                     
  2008                           ; 1 bytes @ 0x0
  2009   000501                     	ds	1
  2010   000502                     ENVIA_CHAR@dato:
  2011                           	callstack 0
  2012   000502                     ENVIA_LCD_CMD@dato:
  2013                           	callstack 0
  2014   000502                     ___lbdiv@dividend:
  2015                           	callstack 0
  2016   000502                     ___lbmod@dividend:
  2017                           	callstack 0
  2018   000502                     
  2019                           ; 1 bytes @ 0x1
  2020   000502                     	ds	1
  2021   000503                     ENVIA_CHAR@aux:
  2022                           	callstack 0
  2023   000503                     ENVIA_LCD_CMD@aux:
  2024                           	callstack 0
  2025   000503                     ___lbdiv@counter:
  2026                           	callstack 0
  2027   000503                     ___lbmod@counter:
  2028                           	callstack 0
  2029                           
  2030                           ; 1 bytes @ 0x2
  2031   000503                     	ds	1
  2032   000504                     POS_CURSOR@columna:
  2033                           	callstack 0
  2034   000504                     CURSOR_ONOFF@estado:
  2035                           	callstack 0
  2036   000504                     ESCRIBE_MENSAJE@cadena:
  2037                           	callstack 0
  2038   000504                     ___lbdiv@quotient:
  2039                           	callstack 0
  2040   000504                     ___lbmod@rem:
  2041                           	callstack 0
  2042   000504                     ??_LCD_CONFIG:
  2043   000504                     
  2044                           ; 1 bytes @ 0x3
  2045   000504                     	ds	1
  2046   000505                     POS_CURSOR@fila:
  2047                           	callstack 0
  2048   000505                     ESCRIBE_MENSAJE@tam:
  2049                           	callstack 0
  2050   000505                     ??_lcd_init:
  2051                           
  2052                           ; 1 bytes @ 0x4
  2053   000505                     	ds	1
  2054   000506                     ??_ESCRIBE_MENSAJE:
  2055                           
  2056                           ; 1 bytes @ 0x5
  2057   000506                     	ds	1
  2058   000507                     ESCRIBE_MENSAJE@i:
  2059                           	callstack 0
  2060                           
  2061                           ; 1 bytes @ 0x6
  2062   000507                     	ds	1
  2063   000508                     ??_pantallazo:
  2064   000508                     
  2065                           ; 1 bytes @ 0x7
  2066   000508                     	ds	2
  2067   00050A                     
  2068                           ; 1 bytes @ 0x9
  2069 ;;
  2070 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2071 ;;
  2072 ;; *************** function _main *****************
  2073 ;; Defined at:
  2074 ;;		line 95 in file "maincode02.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2092 ;;Total ram usage:        0 bytes
  2093 ;; Hardware stack levels required when called: 5
  2094 ;; This function calls:
  2095 ;;		_ajuste_backlight
  2096 ;;		_configuro
  2097 ;;		_lcd_init
  2098 ;;		_pantallazo
  2099 ;;		_visualizacion_hora
  2100 ;; This function is called by:
  2101 ;;		Startup code after reset
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text0
  2106   002A32                     __ptext0:
  2107                           	callstack 0
  2108   002A32                     _main:
  2109                           	callstack 122
  2110                           
  2111                           ;maincode02.c: 96:     configuro();
  2112                           
  2113                           ;incstack = 0
  2114   002A32  ECD4  F013         	call	_configuro	;wreg free
  2115                           
  2116                           ; BSR set to: 3
  2117                           ;maincode02.c: 97:     lcd_init();
  2118   002A36  ECB0  F014         	call	_lcd_init	;wreg free
  2119                           
  2120                           ;maincode02.c: 98:     pantallazo();
  2121   002A3A  EC04  F014         	call	_pantallazo	;wreg free
  2122   002A3E                     l1274:
  2123                           
  2124                           ;maincode02.c: 100:         ajuste_backlight();
  2125   002A3E  EC24  F015         	call	_ajuste_backlight	;wreg free
  2126                           
  2127                           ; BSR set to: 3
  2128                           ;maincode02.c: 101:         visualizacion_hora();
  2129   002A42  EC19  F013         	call	_visualizacion_hora	;wreg free
  2130   002A46  D7FB               	goto	l1274
  2131   002A48                     __end_of_main:
  2132                           	callstack 0
  2133                           
  2134 ;; *************** function _visualizacion_hora *****************
  2135 ;; Defined at:
  2136 ;;		line 78 in file "maincode02.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;		None
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 3F/3
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2154 ;;Total ram usage:        0 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 4
  2157 ;; This function calls:
  2158 ;;		_ENVIA_CHAR
  2159 ;;		_ESCRIBE_MENSAJE
  2160 ;;		_POS_CURSOR
  2161 ;;		___lbdiv
  2162 ;;		___lbmod
  2163 ;; This function is called by:
  2164 ;;		_main
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text1
  2169   002632                     __ptext1:
  2170                           	callstack 0
  2171   002632                     _visualizacion_hora:
  2172                           	callstack 122
  2173                           
  2174                           ; BSR set to: 3
  2175                           ;maincode02.c: 79:     POS_CURSOR(1,2);
  2176                           
  2177                           ;incstack = 0
  2178   002632  0E02               	movlw	2
  2179   002634  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2180   002636  0E01               	movlw	1
  2181   002638  ECD9  F014         	call	_POS_CURSOR
  2182                           
  2183                           ;maincode02.c: 80:     ESCRIBE_MENSAJE("Hora actual:",12);
  2184   00263C  0E23               	movlw	low STR_3
  2185   00263E  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2186   002640  0E0C               	movlw	12
  2187   002642  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2188   002644  ECEB  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2189                           
  2190                           ;maincode02.c: 81:     POS_CURSOR(2,2);
  2191   002648  0E02               	movlw	2
  2192   00264A  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2193   00264C  0E02               	movlw	2
  2194   00264E  ECD9  F014         	call	_POS_CURSOR
  2195                           
  2196                           ;maincode02.c: 82:     ENVIA_CHAR((horas/10) + 0x30);
  2197   002652  0E0A               	movlw	10
  2198   002654  6E01               	movwf	___lbdiv@divisor^(0+1280),c
  2199   002656  500D               	movf	_horas^(0+1280),w,c
  2200   002658  EC62  F014         	call	___lbdiv
  2201   00265C  0F30               	addlw	48
  2202   00265E  EC7E  F014         	call	_ENVIA_CHAR
  2203                           
  2204                           ;maincode02.c: 83:     ENVIA_CHAR((horas%10) + 0x30);
  2205   002662  0E0A               	movlw	10
  2206   002664  6E01               	movwf	___lbmod@divisor^(0+1280),c
  2207   002666  500D               	movf	_horas^(0+1280),w,c
  2208   002668  ECC5  F014         	call	___lbmod
  2209   00266C  0F30               	addlw	48
  2210   00266E  EC7E  F014         	call	_ENVIA_CHAR
  2211                           
  2212                           ;maincode02.c: 84:     ENVIA_CHAR(':');
  2213   002672  0E3A               	movlw	58
  2214   002674  EC7E  F014         	call	_ENVIA_CHAR
  2215                           
  2216                           ;maincode02.c: 85:     ENVIA_CHAR((minutos/10) + 0x30);
  2217   002678  0E0A               	movlw	10
  2218   00267A  6E01               	movwf	___lbdiv@divisor^(0+1280),c
  2219   00267C  500C               	movf	_minutos^(0+1280),w,c
  2220   00267E  EC62  F014         	call	___lbdiv
  2221   002682  0F30               	addlw	48
  2222   002684  EC7E  F014         	call	_ENVIA_CHAR
  2223                           
  2224                           ;maincode02.c: 86:     ENVIA_CHAR((minutos%10) + 0x30);
  2225   002688  0E0A               	movlw	10
  2226   00268A  6E01               	movwf	___lbmod@divisor^(0+1280),c
  2227   00268C  500C               	movf	_minutos^(0+1280),w,c
  2228   00268E  ECC5  F014         	call	___lbmod
  2229   002692  0F30               	addlw	48
  2230   002694  EC7E  F014         	call	_ENVIA_CHAR
  2231                           
  2232                           ;maincode02.c: 87:     ENVIA_CHAR(':');
  2233   002698  0E3A               	movlw	58
  2234   00269A  EC7E  F014         	call	_ENVIA_CHAR
  2235                           
  2236                           ;maincode02.c: 88:     ENVIA_CHAR((segundos/10) + 0x30);
  2237   00269E  0E0A               	movlw	10
  2238   0026A0  6E01               	movwf	___lbdiv@divisor^(0+1280),c
  2239   0026A2  500B               	movf	_segundos^(0+1280),w,c
  2240   0026A4  EC62  F014         	call	___lbdiv
  2241   0026A8  0F30               	addlw	48
  2242   0026AA  EC7E  F014         	call	_ENVIA_CHAR
  2243                           
  2244                           ;maincode02.c: 89:     ENVIA_CHAR((segundos%10) + 0x30);
  2245   0026AE  0E0A               	movlw	10
  2246   0026B0  6E01               	movwf	___lbmod@divisor^(0+1280),c
  2247   0026B2  500B               	movf	_segundos^(0+1280),w,c
  2248   0026B4  ECC5  F014         	call	___lbmod
  2249   0026B8  0F30               	addlw	48
  2250   0026BA  EC7E  F014         	call	_ENVIA_CHAR
  2251                           
  2252                           ;maincode02.c: 90:     ENVIA_CHAR(':');
  2253   0026BE  0E3A               	movlw	58
  2254   0026C0  EC7E  F014         	call	_ENVIA_CHAR
  2255                           
  2256                           ;maincode02.c: 91:     ENVIA_CHAR((centesimas/10) + 0x30);
  2257   0026C4  0E0A               	movlw	10
  2258   0026C6  6E01               	movwf	___lbdiv@divisor^(0+1280),c
  2259   0026C8  500A               	movf	_centesimas^(0+1280),w,c
  2260   0026CA  EC62  F014         	call	___lbdiv
  2261   0026CE  0F30               	addlw	48
  2262   0026D0  EC7E  F014         	call	_ENVIA_CHAR
  2263                           
  2264                           ;maincode02.c: 92:     ENVIA_CHAR((centesimas%10) + 0x30);
  2265   0026D4  0E0A               	movlw	10
  2266   0026D6  6E01               	movwf	___lbmod@divisor^(0+1280),c
  2267   0026D8  500A               	movf	_centesimas^(0+1280),w,c
  2268   0026DA  ECC5  F014         	call	___lbmod
  2269   0026DE  0F30               	addlw	48
  2270   0026E0  EC7E  F014         	call	_ENVIA_CHAR
  2271   0026E4  0012               	return		;funcret
  2272   0026E6                     __end_of_visualizacion_hora:
  2273                           	callstack 0
  2274                           
  2275 ;; *************** function ___lbmod *****************
  2276 ;; Defined at:
  2277 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lbmod.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  dividend        1    wreg     unsigned char 
  2280 ;;  divisor         1    0[COMRAM] unsigned char 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  dividend        1    1[COMRAM] unsigned char 
  2283 ;;  rem             1    3[COMRAM] unsigned char 
  2284 ;;  counter         1    2[COMRAM] unsigned char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      unsigned char 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/3
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2294 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2295 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2297 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2298 ;;Total ram usage:        4 bytes
  2299 ;; Hardware stack levels used: 1
  2300 ;; Hardware stack levels required when called: 1
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_visualizacion_hora
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text2
  2309   00298A                     __ptext2:
  2310                           	callstack 0
  2311   00298A                     ___lbmod:
  2312                           	callstack 124
  2313                           
  2314                           ;incstack = 0
  2315                           ;___lbmod@dividend stored from wreg
  2316   00298A  6E02               	movwf	___lbmod@dividend^(0+1280),c
  2317   00298C  0E08               	movlw	8
  2318   00298E  6E03               	movwf	___lbmod@counter^(0+1280),c
  2319   002990  6A04               	clrf	___lbmod@rem^(0+1280),c
  2320   002992                     l1216:
  2321   002992  90D8               	bcf	status,0,c
  2322   002994  3402               	rlcf	___lbmod@dividend^(0+1280),w,c
  2323   002996  3404               	rlcf	___lbmod@rem^(0+1280),w,c
  2324   002998  6E04               	movwf	___lbmod@rem^(0+1280),c
  2325   00299A  90D8               	bcf	status,0,c
  2326   00299C  3602               	rlcf	___lbmod@dividend^(0+1280),f,c
  2327   00299E  5001               	movf	___lbmod@divisor^(0+1280),w,c
  2328   0029A0  5C04               	subwf	___lbmod@rem^(0+1280),w,c
  2329   0029A2  A0D8               	btfss	status,0,c
  2330   0029A4  D002               	goto	l1224
  2331   0029A6  5001               	movf	___lbmod@divisor^(0+1280),w,c
  2332   0029A8  5E04               	subwf	___lbmod@rem^(0+1280),f,c
  2333   0029AA                     l1224:
  2334   0029AA  2E03               	decfsz	___lbmod@counter^(0+1280),f,c
  2335   0029AC  D7F2               	goto	l1216
  2336   0029AE  5004               	movf	___lbmod@rem^(0+1280),w,c
  2337   0029B0  0012               	return		;funcret
  2338   0029B2                     __end_of___lbmod:
  2339                           	callstack 0
  2340                           
  2341 ;; *************** function ___lbdiv *****************
  2342 ;; Defined at:
  2343 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lbdiv.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  dividend        1    wreg     unsigned char 
  2346 ;;  divisor         1    0[COMRAM] unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  dividend        1    1[COMRAM] unsigned char 
  2349 ;;  quotient        1    3[COMRAM] unsigned char 
  2350 ;;  counter         1    2[COMRAM] unsigned char 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      unsigned char 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2, status,0
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/3
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2360 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2361 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2363 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2364 ;;Total ram usage:        4 bytes
  2365 ;; Hardware stack levels used: 1
  2366 ;; Hardware stack levels required when called: 1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_visualizacion_hora
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text3
  2375   0028C4                     __ptext3:
  2376                           	callstack 0
  2377   0028C4                     ___lbdiv:
  2378                           	callstack 124
  2379                           
  2380                           ;incstack = 0
  2381                           ;___lbdiv@dividend stored from wreg
  2382   0028C4  6E02               	movwf	___lbdiv@dividend^(0+1280),c
  2383   0028C6  6A04               	clrf	___lbdiv@quotient^(0+1280),c
  2384   0028C8  5001               	movf	___lbdiv@divisor^(0+1280),w,c
  2385   0028CA  B4D8               	btfsc	status,2,c
  2386   0028CC  D015               	goto	l1208
  2387   0028CE  0E01               	movlw	1
  2388   0028D0  6E03               	movwf	___lbdiv@counter^(0+1280),c
  2389   0028D2  D003               	goto	l1196
  2390   0028D4                     l1192:
  2391   0028D4  90D8               	bcf	status,0,c
  2392   0028D6  3601               	rlcf	___lbdiv@divisor^(0+1280),f,c
  2393   0028D8  2A03               	incf	___lbdiv@counter^(0+1280),f,c
  2394   0028DA                     l1196:
  2395   0028DA  AE01               	btfss	___lbdiv@divisor^(0+1280),7,c
  2396   0028DC  D7FB               	goto	l1192
  2397   0028DE                     u200:
  2398   0028DE  90D8               	bcf	status,0,c
  2399   0028E0  3604               	rlcf	___lbdiv@quotient^(0+1280),f,c
  2400   0028E2  5001               	movf	___lbdiv@divisor^(0+1280),w,c
  2401   0028E4  5C02               	subwf	___lbdiv@dividend^(0+1280),w,c
  2402   0028E6  A0D8               	btfss	status,0,c
  2403   0028E8  D003               	goto	l1204
  2404   0028EA  5001               	movf	___lbdiv@divisor^(0+1280),w,c
  2405   0028EC  5E02               	subwf	___lbdiv@dividend^(0+1280),f,c
  2406   0028EE  8004               	bsf	___lbdiv@quotient^(0+1280),0,c
  2407   0028F0                     l1204:
  2408   0028F0  90D8               	bcf	status,0,c
  2409   0028F2  3201               	rrcf	___lbdiv@divisor^(0+1280),f,c
  2410   0028F4  2E03               	decfsz	___lbdiv@counter^(0+1280),f,c
  2411   0028F6  D7F3               	goto	u200
  2412   0028F8                     l1208:
  2413   0028F8  5004               	movf	___lbdiv@quotient^(0+1280),w,c
  2414   0028FA  0012               	return		;funcret
  2415   0028FC                     __end_of___lbdiv:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _pantallazo *****************
  2419 ;; Defined at:
  2420 ;;		line 63 in file "maincode02.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/3
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2436 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2438 ;;Total ram usage:        2 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; Hardware stack levels required when called: 4
  2441 ;; This function calls:
  2442 ;;		_BORRAR_LCD
  2443 ;;		_ESCRIBE_MENSAJE
  2444 ;;		_POS_CURSOR
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text4
  2451   002808                     __ptext4:
  2452                           	callstack 0
  2453   002808                     _pantallazo:
  2454                           	callstack 122
  2455                           
  2456                           ;maincode02.c: 64:     POS_CURSOR(1,0);
  2457                           
  2458                           ;incstack = 0
  2459   002808  0E00               	movlw	0
  2460   00280A  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2461   00280C  0E01               	movlw	1
  2462   00280E  ECD9  F014         	call	_POS_CURSOR
  2463                           
  2464                           ;maincode02.c: 65:     ESCRIBE_MENSAJE("Ejemplo de reloj",16);
  2465   002812  0E12               	movlw	low STR_1
  2466   002814  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2467   002816  0E10               	movlw	16
  2468   002818  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2469   00281A  ECEB  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2470                           
  2471                           ;maincode02.c: 66:     POS_CURSOR(2,0);
  2472   00281E  0E00               	movlw	0
  2473   002820  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2474   002822  0E02               	movlw	2
  2475   002824  ECD9  F014         	call	_POS_CURSOR
  2476                           
  2477                           ;maincode02.c: 67:     ESCRIBE_MENSAJE("UPC Sem11 2025-1",16);
  2478   002828  0E01               	movlw	low STR_2
  2479   00282A  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2480   00282C  0E10               	movlw	16
  2481   00282E  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2482   002830  ECEB  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2483                           
  2484                           ;maincode02.c: 68:     _delay((unsigned long)((3000)*(32000000UL/4000.0)));
  2485   002834  0E7A               	movlw	122
  2486   002836  6E09               	movwf	(??_pantallazo+1)^(0+1280),c
  2487   002838  0EC1               	movlw	193
  2488   00283A  6E08               	movwf	??_pantallazo^(0+1280),c
  2489   00283C  0E82               	movlw	130
  2490   00283E                     u237:
  2491   00283E  2EE8               	decfsz	wreg,f,c
  2492   002840  D7FE               	bra	u237
  2493   002842  2E08               	decfsz	??_pantallazo^(0+1280),f,c
  2494   002844  D7FC               	bra	u237
  2495   002846  2E09               	decfsz	(??_pantallazo+1)^(0+1280),f,c
  2496   002848  D7FA               	bra	u237
  2497                           
  2498                           ;maincode02.c: 69:     BORRAR_LCD();
  2499   00284A  EC2F  F015         	call	_BORRAR_LCD	;wreg free
  2500   00284E  0012               	return		;funcret
  2501   002850                     __end_of_pantallazo:
  2502                           	callstack 0
  2503                           
  2504 ;; *************** function _POS_CURSOR *****************
  2505 ;; Defined at:
  2506 ;;		line 6 in file "LCD.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  fila            1    wreg     unsigned char 
  2509 ;;  columna         1    3[COMRAM] unsigned char 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  fila            1    4[COMRAM] unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2, status,0, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/3
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2521 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2525 ;;Total ram usage:        2 bytes
  2526 ;; Hardware stack levels used: 1
  2527 ;; Hardware stack levels required when called: 3
  2528 ;; This function calls:
  2529 ;;		_ENVIA_LCD_CMD
  2530 ;; This function is called by:
  2531 ;;		_pantallazo
  2532 ;;		_visualizacion_hora
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text5
  2537   0029B2                     __ptext5:
  2538                           	callstack 0
  2539   0029B2                     _POS_CURSOR:
  2540                           	callstack 122
  2541                           
  2542                           ;incstack = 0
  2543                           ;POS_CURSOR@fila stored from wreg
  2544   0029B2  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  2545                           
  2546                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2547   0029B4  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  2548   0029B6  A4D8               	btfss	status,2,c
  2549   0029B8  D005               	goto	l1174
  2550                           
  2551                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2552   0029BA  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2553   0029BC  0F80               	addlw	128
  2554   0029BE  EC97  F014         	call	_ENVIA_LCD_CMD
  2555                           
  2556                           ;LCD.c: 11:  }
  2557   0029C2  0012               	return	
  2558   0029C4                     l1174:
  2559   0029C4  0E02               	movlw	2
  2560   0029C6  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2561   0029C8  A4D8               	btfss	status,2,c
  2562   0029CA  0012               	return	
  2563                           
  2564                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2565   0029CC  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2566   0029CE  0FC0               	addlw	192
  2567   0029D0  EC97  F014         	call	_ENVIA_LCD_CMD
  2568   0029D4  0012               	return		;funcret
  2569   0029D6                     __end_of_POS_CURSOR:
  2570                           	callstack 0
  2571                           
  2572 ;; *************** function _ESCRIBE_MENSAJE *****************
  2573 ;; Defined at:
  2574 ;;		line 41 in file "LCD.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2577 ;;		 -> STR_3(13), STR_2(17), STR_1(17), 
  2578 ;;  tam             1    4[COMRAM] unsigned char 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  i               1    6[COMRAM] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/3
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2593 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2594 ;;Total ram usage:        4 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 3
  2597 ;; This function calls:
  2598 ;;		_ENVIA_CHAR
  2599 ;; This function is called by:
  2600 ;;		_pantallazo
  2601 ;;		_visualizacion_hora
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text6
  2606   0029D6                     __ptext6:
  2607                           	callstack 0
  2608   0029D6                     _ESCRIBE_MENSAJE:
  2609                           	callstack 122
  2610                           
  2611                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2612                           
  2613                           ;incstack = 0
  2614   0029D6  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2615                           
  2616                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2617   0029D8  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2618   0029DA  D00A               	goto	l1184
  2619   0029DC                     l1180:
  2620                           
  2621                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2622   0029DC  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  2623   0029DE  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2624   0029E0  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  2625   0029E2  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2626   0029E6                     	if	0	;There is only one active tblptr byte
  2627   0029E6                     	endif
  2628   0029E6                     	if	0	;tblptru may be non-zero
  2629   0029E6                     	endif
  2630   0029E6                     	if	0	;tblptru may be non-zero
  2631   0029E6                     	endif
  2632   0029E6  0008               	tblrd		*
  2633   0029E8  50F5               	movf	tablat,w,c
  2634   0029EA  EC7E  F014         	call	_ENVIA_CHAR
  2635                           
  2636                           ;LCD.c: 47:  }
  2637   0029EE  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  2638   0029F0                     l1184:
  2639   0029F0  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  2640   0029F2  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2641   0029F4  B0D8               	btfsc	status,0,c
  2642   0029F6  0012               	return	
  2643   0029F8  D7F1               	goto	l1180
  2644   0029FA                     __end_of_ESCRIBE_MENSAJE:
  2645                           	callstack 0
  2646                           
  2647 ;; *************** function _ENVIA_CHAR *****************
  2648 ;; Defined at:
  2649 ;;		line 50 in file "LCD.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  dato            1    wreg     unsigned char 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  dato            1    1[COMRAM] unsigned char 
  2654 ;;  aux             1    2[COMRAM] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/3
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2668 ;;Total ram usage:        2 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; Hardware stack levels required when called: 2
  2671 ;; This function calls:
  2672 ;;		_ENVIA_NIBBLE
  2673 ;;		_LEER_LCD
  2674 ;; This function is called by:
  2675 ;;		_visualizacion_hora
  2676 ;;		_ESCRIBE_MENSAJE
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text7
  2681   0028FC                     __ptext7:
  2682                           	callstack 0
  2683   0028FC                     _ENVIA_CHAR:
  2684                           	callstack 122
  2685                           
  2686                           ;incstack = 0
  2687                           ;ENVIA_CHAR@dato stored from wreg
  2688   0028FC  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2689                           
  2690                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2691   0028FE  80C1               	bsf	193,0,c	;volatile
  2692                           
  2693                           ;LCD.c: 54:  LEER_LCD();
  2694   002900  EC73  F013         	call	_LEER_LCD	;wreg free
  2695                           
  2696                           ;LCD.c: 55:  TRISD = 0x00;
  2697   002904  6AC9               	clrf	201,c	;volatile
  2698                           
  2699                           ;LCD.c: 56:         _delay(1200);
  2700   002906  0EF0               	movlw	240
  2701   002908                     u247:
  2702   002908  D000               	nop2	
  2703   00290A  2EE8               	decfsz	wreg,f,c
  2704   00290C  D7FD               	bra	u247
  2705                           
  2706                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2707   00290E  92C1               	bcf	193,1,c	;volatile
  2708                           
  2709                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2710   002910  94C1               	bcf	193,2,c	;volatile
  2711                           
  2712                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2713   002912  80C1               	bsf	193,0,c	;volatile
  2714                           
  2715                           ;LCD.c: 61:  aux = dato & 0xF0;
  2716   002914  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2717   002916  0BF0               	andlw	240
  2718   002918  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2719                           
  2720                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2721   00291A  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2722   00291C  EC0B  F015         	call	_ENVIA_NIBBLE
  2723                           
  2724                           ;LCD.c: 63:  aux = dato << 4;
  2725   002920  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2726   002922  0BF0               	andlw	240
  2727   002924  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2728                           
  2729                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2730   002926  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2731   002928  EC0B  F015         	call	_ENVIA_NIBBLE
  2732   00292C  0012               	return		;funcret
  2733   00292E                     __end_of_ENVIA_CHAR:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function _lcd_init *****************
  2737 ;; Defined at:
  2738 ;;		line 53 in file "maincode02.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 3F/3
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2754 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2755 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2756 ;;Total ram usage:        1 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 4
  2759 ;; This function calls:
  2760 ;;		_BORRAR_LCD
  2761 ;;		_CURSOR_HOME
  2762 ;;		_CURSOR_ONOFF
  2763 ;;		_LCD_CONFIG
  2764 ;; This function is called by:
  2765 ;;		_main
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text8
  2770   002960                     __ptext8:
  2771                           	callstack 0
  2772   002960                     _lcd_init:
  2773                           	callstack 122
  2774                           
  2775                           ; BSR set to: 3
  2776                           ;maincode02.c: 54:     TRISD = 0x00;
  2777                           
  2778                           ;incstack = 0
  2779   002960  6AC9               	clrf	201,c	;volatile
  2780                           
  2781                           ;maincode02.c: 55:     ANSELD = 0x00;
  2782   002962  0104               	movlb	4	; () banked
  2783   002964  6B18               	clrf	24,b	;volatile
  2784                           
  2785                           ; BSR set to: 4
  2786                           ;maincode02.c: 56:     LCD_CONFIG();
  2787   002966  ECA4  F013         	call	_LCD_CONFIG	;wreg free
  2788                           
  2789                           ;maincode02.c: 57:     _delay((unsigned long)((16)*(32000000UL/4000.0)));
  2790   00296A  0EA7               	movlw	167
  2791   00296C  6E05               	movwf	??_lcd_init^(0+1280),c
  2792   00296E  0E3A               	movlw	58
  2793   002970                     u257:
  2794   002970  2EE8               	decfsz	wreg,f,c
  2795   002972  D7FE               	bra	u257
  2796   002974  2E05               	decfsz	??_lcd_init^(0+1280),f,c
  2797   002976  D7FC               	bra	u257
  2798   002978  D000               	nop2	
  2799                           
  2800                           ;maincode02.c: 58:     BORRAR_LCD();
  2801   00297A  EC2F  F015         	call	_BORRAR_LCD	;wreg free
  2802                           
  2803                           ;maincode02.c: 59:     CURSOR_HOME();
  2804   00297E  EC2B  F015         	call	_CURSOR_HOME	;wreg free
  2805                           
  2806                           ;maincode02.c: 60:     CURSOR_ONOFF(1);
  2807   002982  0E01               	movlw	1
  2808   002984  ECFD  F014         	call	_CURSOR_ONOFF
  2809   002988  0012               	return		;funcret
  2810   00298A                     __end_of_lcd_init:
  2811                           	callstack 0
  2812                           
  2813 ;; *************** function _LCD_CONFIG *****************
  2814 ;; Defined at:
  2815 ;;		line 72 in file "LCD.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;		None
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;		None
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 3F/4
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2832 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2833 ;;Total ram usage:        1 bytes
  2834 ;; Hardware stack levels used: 1
  2835 ;; Hardware stack levels required when called: 3
  2836 ;; This function calls:
  2837 ;;		_ENVIA_LCD_CMD
  2838 ;;		_ENVIA_NIBBLE
  2839 ;; This function is called by:
  2840 ;;		_lcd_init
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text9
  2845   002748                     __ptext9:
  2846                           	callstack 0
  2847   002748                     _LCD_CONFIG:
  2848                           	callstack 122
  2849                           
  2850                           ; BSR set to: 4
  2851                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  2852                           
  2853                           ;incstack = 0
  2854   002748  90C1               	bcf	193,0,c	;volatile
  2855                           
  2856                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  2857   00274A  92C1               	bcf	193,1,c	;volatile
  2858                           
  2859                           ; BSR set to: 4
  2860                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  2861   00274C  0E30               	movlw	48
  2862   00274E  EC0B  F015         	call	_ENVIA_NIBBLE
  2863                           
  2864                           ;LCD.c: 77:         _delay(24000);
  2865   002752  0E20               	movlw	32
  2866   002754  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2867   002756  0E2A               	movlw	42
  2868   002758                     u267:
  2869   002758  2EE8               	decfsz	wreg,f,c
  2870   00275A  D7FE               	bra	u267
  2871   00275C  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2872   00275E  D7FC               	bra	u267
  2873                           
  2874                           ;LCD.c: 78:         _delay(24000);
  2875   002760  0E20               	movlw	32
  2876   002762  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2877   002764  0E2A               	movlw	42
  2878   002766                     u277:
  2879   002766  2EE8               	decfsz	wreg,f,c
  2880   002768  D7FE               	bra	u277
  2881   00276A  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2882   00276C  D7FC               	bra	u277
  2883                           
  2884                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  2885   00276E  0E30               	movlw	48
  2886   002770  EC0B  F015         	call	_ENVIA_NIBBLE
  2887                           
  2888                           ;LCD.c: 83:  _delay(1200);
  2889   002774  0EF0               	movlw	240
  2890   002776                     u287:
  2891   002776  D000               	nop2	
  2892   002778  2EE8               	decfsz	wreg,f,c
  2893   00277A  D7FD               	bra	u287
  2894                           
  2895                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  2896   00277C  0E30               	movlw	48
  2897   00277E  EC0B  F015         	call	_ENVIA_NIBBLE
  2898                           
  2899                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  2900   002782  0E20               	movlw	32
  2901   002784  EC0B  F015         	call	_ENVIA_NIBBLE
  2902                           
  2903                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  2904   002788  0E01               	movlw	1
  2905   00278A  EC97  F014         	call	_ENVIA_LCD_CMD
  2906                           
  2907                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  2908   00278E  0E28               	movlw	40
  2909   002790  EC97  F014         	call	_ENVIA_LCD_CMD
  2910                           
  2911                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  2912   002794  0E0F               	movlw	15
  2913   002796  EC97  F014         	call	_ENVIA_LCD_CMD
  2914                           
  2915                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  2916   00279A  0E06               	movlw	6
  2917   00279C  EC97  F014         	call	_ENVIA_LCD_CMD
  2918                           
  2919                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  2920   0027A0  0E01               	movlw	1
  2921   0027A2  EC97  F014         	call	_ENVIA_LCD_CMD
  2922   0027A6  0012               	return		;funcret
  2923   0027A8                     __end_of_LCD_CONFIG:
  2924                           	callstack 0
  2925                           
  2926 ;; *************** function _CURSOR_ONOFF *****************
  2927 ;; Defined at:
  2928 ;;		line 35 in file "LCD.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  estado          1    wreg     unsigned char 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  estado          1    3[COMRAM] unsigned char 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg, status,2, status,0, cstack
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/4
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2945 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2946 ;;Total ram usage:        1 bytes
  2947 ;; Hardware stack levels used: 1
  2948 ;; Hardware stack levels required when called: 3
  2949 ;; This function calls:
  2950 ;;		_ENVIA_LCD_CMD
  2951 ;; This function is called by:
  2952 ;;		_lcd_init
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text10
  2957   0029FA                     __ptext10:
  2958                           	callstack 0
  2959   0029FA                     _CURSOR_ONOFF:
  2960                           	callstack 122
  2961                           
  2962                           ;incstack = 0
  2963                           ;CURSOR_ONOFF@estado stored from wreg
  2964   0029FA  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  2965                           
  2966                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  2967   0029FC  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  2968   0029FE  A4D8               	btfss	status,2,c
  2969   002A00  D003               	goto	l994
  2970   002A02  0E0E               	movlw	14
  2971   002A04  EC97  F014         	call	_ENVIA_LCD_CMD
  2972   002A08                     l994:
  2973                           
  2974                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2975   002A08  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  2976   002A0A  A4D8               	btfss	status,2,c
  2977   002A0C  0012               	return	
  2978   002A0E  0E0C               	movlw	12
  2979   002A10  EC97  F014         	call	_ENVIA_LCD_CMD
  2980   002A14  0012               	return		;funcret
  2981   002A16                     __end_of_CURSOR_ONOFF:
  2982                           	callstack 0
  2983                           
  2984 ;; *************** function _CURSOR_HOME *****************
  2985 ;; Defined at:
  2986 ;;		line 30 in file "LCD.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;		None
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/4
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3004 ;;Total ram usage:        0 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 3
  3007 ;; This function calls:
  3008 ;;		_ENVIA_LCD_CMD
  3009 ;; This function is called by:
  3010 ;;		_lcd_init
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text11
  3015   002A56                     __ptext11:
  3016                           	callstack 0
  3017   002A56                     _CURSOR_HOME:
  3018                           	callstack 122
  3019                           
  3020                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  3021                           
  3022                           ;incstack = 0
  3023   002A56  0E02               	movlw	2
  3024   002A58  EC97  F014         	call	_ENVIA_LCD_CMD
  3025   002A5C  0012               	return		;funcret
  3026   002A5E                     __end_of_CURSOR_HOME:
  3027                           	callstack 0
  3028                           
  3029 ;; *************** function _BORRAR_LCD *****************
  3030 ;; Defined at:
  3031 ;;		line 67 in file "LCD.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/3
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3049 ;;Total ram usage:        0 bytes
  3050 ;; Hardware stack levels used: 1
  3051 ;; Hardware stack levels required when called: 3
  3052 ;; This function calls:
  3053 ;;		_ENVIA_LCD_CMD
  3054 ;; This function is called by:
  3055 ;;		_lcd_init
  3056 ;;		_pantallazo
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           	psect	text12
  3061   002A5E                     __ptext12:
  3062                           	callstack 0
  3063   002A5E                     _BORRAR_LCD:
  3064                           	callstack 122
  3065                           
  3066                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  3067                           
  3068                           ;incstack = 0
  3069   002A5E  0E01               	movlw	1
  3070   002A60  EC97  F014         	call	_ENVIA_LCD_CMD
  3071   002A64  0012               	return		;funcret
  3072   002A66                     __end_of_BORRAR_LCD:
  3073                           	callstack 0
  3074                           
  3075 ;; *************** function _ENVIA_LCD_CMD *****************
  3076 ;; Defined at:
  3077 ;;		line 104 in file "LCD.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  dato            1    wreg     unsigned char 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  dato            1    1[COMRAM] unsigned char 
  3082 ;;  aux             1    2[COMRAM] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/3
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3095 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3096 ;;Total ram usage:        2 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 2
  3099 ;; This function calls:
  3100 ;;		_ENVIA_NIBBLE
  3101 ;;		_LEER_LCD
  3102 ;; This function is called by:
  3103 ;;		_POS_CURSOR
  3104 ;;		_CURSOR_HOME
  3105 ;;		_CURSOR_ONOFF
  3106 ;;		_BORRAR_LCD
  3107 ;;		_LCD_CONFIG
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text13
  3112   00292E                     __ptext13:
  3113                           	callstack 0
  3114   00292E                     _ENVIA_LCD_CMD:
  3115                           	callstack 122
  3116                           
  3117                           ;incstack = 0
  3118                           ;ENVIA_LCD_CMD@dato stored from wreg
  3119   00292E  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  3120                           
  3121                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  3122   002930  90C1               	bcf	193,0,c	;volatile
  3123                           
  3124                           ;LCD.c: 108:  LEER_LCD();
  3125   002932  EC73  F013         	call	_LEER_LCD	;wreg free
  3126                           
  3127                           ;LCD.c: 109:  TRISD = 0b00000000;
  3128   002936  6AC9               	clrf	201,c	;volatile
  3129                           
  3130                           ;LCD.c: 111:         _delay(1200);
  3131   002938  0EF0               	movlw	240
  3132   00293A                     u297:
  3133   00293A  D000               	nop2	
  3134   00293C  2EE8               	decfsz	wreg,f,c
  3135   00293E  D7FD               	bra	u297
  3136                           
  3137                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  3138   002940  92C1               	bcf	193,1,c	;volatile
  3139                           
  3140                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  3141   002942  94C1               	bcf	193,2,c	;volatile
  3142                           
  3143                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  3144   002944  90C1               	bcf	193,0,c	;volatile
  3145                           
  3146                           ;LCD.c: 115:  aux = dato & 0xF0;
  3147   002946  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  3148   002948  0BF0               	andlw	240
  3149   00294A  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  3150                           
  3151                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  3152   00294C  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  3153   00294E  EC0B  F015         	call	_ENVIA_NIBBLE
  3154                           
  3155                           ;LCD.c: 117:  aux = dato<<4;
  3156   002952  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  3157   002954  0BF0               	andlw	240
  3158   002956  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  3159                           
  3160                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  3161   002958  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  3162   00295A  EC0B  F015         	call	_ENVIA_NIBBLE
  3163   00295E  0012               	return		;funcret
  3164   002960                     __end_of_ENVIA_LCD_CMD:
  3165                           	callstack 0
  3166                           
  3167 ;; *************** function _LEER_LCD *****************
  3168 ;; Defined at:
  3169 ;;		line 121 in file "LCD.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  aux             1    0[COMRAM] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/3
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3186 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3187 ;;Total ram usage:        1 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 1
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_ENVIA_CHAR
  3194 ;;		_ENVIA_LCD_CMD
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text14
  3199   0026E6                     __ptext14:
  3200                           	callstack 0
  3201   0026E6                     _LEER_LCD:
  3202                           	callstack 122
  3203                           
  3204                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3205                           
  3206                           ;incstack = 0
  3207   0026E6  0EF8               	movlw	248
  3208   0026E8  6EC9               	movwf	201,c	;volatile
  3209                           
  3210                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  3211   0026EA  90C1               	bcf	193,0,c	;volatile
  3212                           
  3213                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  3214   0026EC  82C1               	bsf	193,1,c	;volatile
  3215                           
  3216                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  3217   0026EE  84C1               	bsf	193,2,c	;volatile
  3218                           
  3219                           ;LCD.c: 128:         _delay(1200);
  3220   0026F0  0EF0               	movlw	240
  3221   0026F2                     u307:
  3222   0026F2  D000               	nop2	
  3223   0026F4  2EE8               	decfsz	wreg,f,c
  3224   0026F6  D7FD               	bra	u307
  3225                           
  3226                           ;LCD.c: 130:  aux = PORTD;
  3227   0026F8  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  3228                           
  3229                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  3230   0026FC  94C1               	bcf	193,2,c	;volatile
  3231                           
  3232                           ;LCD.c: 132:         _delay(1200);
  3233   0026FE  0EF0               	movlw	240
  3234   002700                     u317:
  3235   002700  D000               	nop2	
  3236   002702  2EE8               	decfsz	wreg,f,c
  3237   002704  D7FD               	bra	u317
  3238                           
  3239                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  3240   002706  84C1               	bsf	193,2,c	;volatile
  3241                           
  3242                           ;LCD.c: 135:         _delay(1200);
  3243   002708  0EF0               	movlw	240
  3244   00270A                     u327:
  3245   00270A  D000               	nop2	
  3246   00270C  2EE8               	decfsz	wreg,f,c
  3247   00270E  D7FD               	bra	u327
  3248   002710                     l892:
  3249                           
  3250                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3251   002710  94C1               	bcf	193,2,c	;volatile
  3252                           
  3253                           ;LCD.c: 138:  aux = aux & 0x80;
  3254   002712  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  3255   002714  0B80               	andlw	128
  3256   002716  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  3257                           
  3258                           ;LCD.c: 139:  while(aux == 0x80)
  3259   002718  D012               	goto	l908
  3260   00271A                     l189:
  3261                           
  3262                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3263   00271A  84C1               	bsf	193,2,c	;volatile
  3264                           
  3265                           ;LCD.c: 142:             _delay(1200);
  3266   00271C  0EF0               	movlw	240
  3267   00271E                     u337:
  3268   00271E  D000               	nop2	
  3269   002720  2EE8               	decfsz	wreg,f,c
  3270   002722  D7FD               	bra	u337
  3271                           
  3272                           ;LCD.c: 143:             aux = PORTD;
  3273   002724  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  3274                           
  3275                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3276   002728  94C1               	bcf	193,2,c	;volatile
  3277                           
  3278                           ;LCD.c: 145:             _delay(1200);
  3279   00272A  0EF0               	movlw	240
  3280   00272C                     u347:
  3281   00272C  D000               	nop2	
  3282   00272E  2EE8               	decfsz	wreg,f,c
  3283   002730  D7FD               	bra	u347
  3284                           
  3285                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3286   002732  84C1               	bsf	193,2,c	;volatile
  3287                           
  3288                           ;LCD.c: 147:             _delay(1200);
  3289   002734  0EF0               	movlw	240
  3290   002736                     u357:
  3291   002736  D000               	nop2	
  3292   002738  2EE8               	decfsz	wreg,f,c
  3293   00273A  D7FD               	bra	u357
  3294   00273C  D7E9               	goto	l892
  3295   00273E                     l908:
  3296                           
  3297                           ;LCD.c: 139:  while(aux == 0x80)
  3298   00273E  0E80               	movlw	128
  3299   002740  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  3300   002742  A4D8               	btfss	status,2,c
  3301   002744  0012               	return	
  3302   002746  D7E9               	goto	l189
  3303   002748                     __end_of_LEER_LCD:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function _ENVIA_NIBBLE *****************
  3307 ;; Defined at:
  3308 ;;		line 93 in file "LCD.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  dato            1    wreg     unsigned char 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  dato            1    0[COMRAM] unsigned char 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/3
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3326 ;;Total ram usage:        1 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 1
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_ENVIA_CHAR
  3333 ;;		_LCD_CONFIG
  3334 ;;		_ENVIA_LCD_CMD
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text15
  3339   002A16                     __ptext15:
  3340                           	callstack 0
  3341   002A16                     _ENVIA_NIBBLE:
  3342                           	callstack 122
  3343                           
  3344                           ;incstack = 0
  3345                           ;ENVIA_NIBBLE@dato stored from wreg
  3346   002A16  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  3347                           
  3348                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3349   002A18  0E0F               	movlw	15
  3350   002A1A  16C1               	andwf	193,f,c	;volatile
  3351                           
  3352                           ;LCD.c: 96:  dato &= 0xF0;
  3353   002A1C  0EF0               	movlw	240
  3354   002A1E  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  3355                           
  3356                           ;LCD.c: 97:  LATD|= dato;
  3357   002A20  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  3358   002A22  12C1               	iorwf	193,f,c	;volatile
  3359                           
  3360                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3361   002A24  84C1               	bsf	193,2,c	;volatile
  3362                           
  3363                           ;LCD.c: 100:         _delay(1200);
  3364   002A26  0EF0               	movlw	240
  3365   002A28                     u367:
  3366   002A28  D000               	nop2	
  3367   002A2A  2EE8               	decfsz	wreg,f,c
  3368   002A2C  D7FD               	bra	u367
  3369                           
  3370                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3371   002A2E  94C1               	bcf	193,2,c	;volatile
  3372   002A30  0012               	return		;funcret
  3373   002A32                     __end_of_ENVIA_NIBBLE:
  3374                           	callstack 0
  3375                           
  3376 ;; *************** function _configuro *****************
  3377 ;; Defined at:
  3378 ;;		line 17 in file "maincode02.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      void 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 3F/3
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3396 ;;Total ram usage:        0 bytes
  3397 ;; Hardware stack levels used: 1
  3398 ;; Hardware stack levels required when called: 1
  3399 ;; This function calls:
  3400 ;;		Nothing
  3401 ;; This function is called by:
  3402 ;;		_main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text16
  3407   0027A8                     __ptext16:
  3408                           	callstack 0
  3409   0027A8                     _configuro:
  3410                           	callstack 125
  3411                           
  3412                           ;maincode02.c: 19:     OSCCON1 = 0x60;
  3413                           
  3414                           ;incstack = 0
  3415   0027A8  0E60               	movlw	96
  3416   0027AA  0100               	movlb	0	; () banked
  3417   0027AC  6FAD               	movwf	173,b	;volatile
  3418                           
  3419                           ;maincode02.c: 20:     OSCFRQ = 0x06;
  3420   0027AE  0E06               	movlw	6
  3421   0027B0  6FB1               	movwf	177,b	;volatile
  3422                           
  3423                           ;maincode02.c: 21:     OSCEN = 0x40;
  3424   0027B2  0E40               	movlw	64
  3425   0027B4  6FB3               	movwf	179,b	;volatile
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;maincode02.c: 24:     TRISFbits.TRISF0 = 0;
  3429   0027B6  90CB               	bcf	203,0,c	;volatile
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;maincode02.c: 25:     ANSELFbits.ANSELF0 = 0;
  3433   0027B8  0104               	movlb	4	; () banked
  3434   0027BA  9128               	bcf	40,0,b	;volatile
  3435                           
  3436                           ;maincode02.c: 26:     RF0PPS = 0x16;
  3437   0027BC  0E16               	movlw	22
  3438   0027BE  0102               	movlb	2	; () banked
  3439   0027C0  6F29               	movwf	41,b	;volatile
  3440                           
  3441                           ;maincode02.c: 27:     T2PR = 98;
  3442   0027C2  0E62               	movlw	98
  3443   0027C4  0103               	movlb	3	; () banked
  3444   0027C6  6F23               	movwf	35,b	;volatile
  3445                           
  3446                           ;maincode02.c: 28:     CCP2CON = 0x9C;
  3447   0027C8  0E9C               	movlw	156
  3448   0027CA  6F46               	movwf	70,b	;volatile
  3449                           
  3450                           ;maincode02.c: 29:     CCPR2H = 49;
  3451   0027CC  0E31               	movlw	49
  3452   0027CE  6F45               	movwf	69,b	;volatile
  3453                           
  3454                           ; BSR set to: 3
  3455                           ;maincode02.c: 30:     CCPR2L = 0;
  3456   0027D0  6B44               	clrf	68,b	;volatile
  3457                           
  3458                           ;maincode02.c: 31:     T2CLKCON = 0x01;
  3459   0027D2  0E01               	movlw	1
  3460   0027D4  6F26               	movwf	38,b	;volatile
  3461                           
  3462                           ;maincode02.c: 32:     T2CON = 0xC0;
  3463   0027D6  0EC0               	movlw	192
  3464   0027D8  6F24               	movwf	36,b	;volatile
  3465                           
  3466                           ; BSR set to: 3
  3467                           ;maincode02.c: 34:     TRISAbits.TRISA0 = 1;
  3468   0027DA  80C6               	bsf	198,0,c	;volatile
  3469                           
  3470                           ; BSR set to: 3
  3471                           ;maincode02.c: 35:     ANSELAbits.ANSELA0 = 1;
  3472   0027DC  0104               	movlb	4	; () banked
  3473   0027DE  8100               	bsf	0,0,b	;volatile
  3474                           
  3475                           ;maincode02.c: 36:     ADCON0bits.ADFM = 0;
  3476   0027E0  0EF3               	movlw	-13
  3477   0027E2  0103               	movlb	3	; () banked
  3478   0027E4  17F3               	andwf	243,f,b	;volatile
  3479                           
  3480                           ; BSR set to: 3
  3481                           ;maincode02.c: 37:     ADCON0bits.CS = 1;
  3482   0027E6  89F3               	bsf	243,4,b	;volatile
  3483                           
  3484                           ; BSR set to: 3
  3485                           ;maincode02.c: 38:     ADPCH = 0x00;
  3486   0027E8  6BEC               	clrf	236,b	;volatile
  3487                           
  3488                           ; BSR set to: 3
  3489                           ;maincode02.c: 39:     ADCON0bits.ADON = 1;
  3490   0027EA  8FF3               	bsf	243,7,b	;volatile
  3491                           
  3492                           ;maincode02.c: 41:     T1CLK = 0x01;
  3493   0027EC  0E01               	movlw	1
  3494   0027EE  6F21               	movwf	33,b	;volatile
  3495                           
  3496                           ;maincode02.c: 42:     T1CON = 0x33;
  3497   0027F0  0E33               	movlw	51
  3498   0027F2  6F1E               	movwf	30,b	;volatile
  3499                           
  3500                           ;maincode02.c: 44:     CCP1CON = 0x8B;
  3501   0027F4  0E8B               	movlw	139
  3502   0027F6  6F42               	movwf	66,b	;volatile
  3503                           
  3504                           ;maincode02.c: 45:     CCPR1H = 0x27;
  3505   0027F8  0E27               	movlw	39
  3506   0027FA  6F41               	movwf	65,b	;volatile
  3507                           
  3508                           ;maincode02.c: 46:     CCPR1L = 0x10;
  3509   0027FC  0E10               	movlw	16
  3510   0027FE  6F40               	movwf	64,b	;volatile
  3511                           
  3512                           ; BSR set to: 3
  3513                           ;maincode02.c: 48:     PIE3bits.CCP1IE = 1;
  3514   002800  8CA1               	bsf	161,6,c	;volatile
  3515                           
  3516                           ; BSR set to: 3
  3517                           ;maincode02.c: 49:     PIR3bits.CCP1IF = 0;
  3518   002802  9CB1               	bcf	177,6,c	;volatile
  3519                           
  3520                           ; BSR set to: 3
  3521                           ;maincode02.c: 50:     INTCON0bits.GIE = 1;
  3522   002804  8ED6               	bsf	214,7,c	;volatile
  3523                           
  3524                           ; BSR set to: 3
  3525   002806  0012               	return		;funcret
  3526   002808                     __end_of_configuro:
  3527                           	callstack 0
  3528                           
  3529 ;; *************** function _ajuste_backlight *****************
  3530 ;; Defined at:
  3531 ;;		line 72 in file "maincode02.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;		None
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;		None
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		None
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/3
  3542 ;;		On exit  : 3F/3
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3549 ;;Total ram usage:        0 bytes
  3550 ;; Hardware stack levels used: 1
  3551 ;; Hardware stack levels required when called: 1
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_main
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text17
  3560   002A48                     __ptext17:
  3561                           	callstack 0
  3562   002A48                     _ajuste_backlight:
  3563                           	callstack 125
  3564                           
  3565                           ;maincode02.c: 73:     ADCON0bits.GO = 1;
  3566                           
  3567                           ; BSR set to: 3
  3568                           ;incstack = 0
  3569   002A48  0103               	movlb	3	; () banked
  3570   002A4A  81F3               	bsf	243,0,b	;volatile
  3571   002A4C                     l90:
  3572                           
  3573                           ; BSR set to: 3
  3574   002A4C  B1F3               	btfsc	243,0,b	;volatile
  3575   002A4E  D7FE               	goto	l90
  3576                           
  3577                           ; BSR set to: 3
  3578                           ;maincode02.c: 75:     CCPR2H = ADRESH;
  3579   002A50  C3EB F345          	movff	1003,837	;volatile
  3580                           
  3581                           ; BSR set to: 3
  3582   002A54  0012               	return		;funcret
  3583   002A56                     __end_of_ajuste_backlight:
  3584                           	callstack 0
  3585                           
  3586 ;; *************** function _CCP1_ISR *****************
  3587 ;; Defined at:
  3588 ;;		line 105 in file "maincode02.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3606 ;;Total ram usage:        0 bytes
  3607 ;; Hardware stack levels used: 1
  3608 ;; This function calls:
  3609 ;;		Nothing
  3610 ;; This function is called by:
  3611 ;;		Interrupt level 2
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           	psect	text18
  3616   002850                     __ptext18:
  3617                           	callstack 0
  3618   002850                     _CCP1_ISR:
  3619                           	callstack 122
  3620                           
  3621                           ;maincode02.c: 106:     PIR3bits.CCP1IF = 0;
  3622                           
  3623                           ; BSR set to: 3
  3624                           ;incstack = 0
  3625   002850  9CB1               	bcf	177,6,c	;volatile
  3626                           
  3627                           ;maincode02.c: 107:     if(centesimas == 99){
  3628   002852  0E63               	movlw	99
  3629   002854  180A               	xorwf	_centesimas^(0+1280),w,c
  3630   002856  A4D8               	btfss	status,2,c
  3631   002858  D017               	goto	i2l1168
  3632                           
  3633                           ;maincode02.c: 108:         centesimas = 0;
  3634   00285A  6A0A               	clrf	_centesimas^(0+1280),c
  3635                           
  3636                           ;maincode02.c: 109:         if(segundos == 59){
  3637   00285C  0E3B               	movlw	59
  3638   00285E  180B               	xorwf	_segundos^(0+1280),w,c
  3639   002860  A4D8               	btfss	status,2,c
  3640   002862  D010               	goto	i2l1166
  3641                           
  3642                           ;maincode02.c: 110:             segundos = 0;
  3643   002864  6A0B               	clrf	_segundos^(0+1280),c
  3644                           
  3645                           ;maincode02.c: 111:             if(minutos == 59){
  3646   002866  0E3B               	movlw	59
  3647   002868  180C               	xorwf	_minutos^(0+1280),w,c
  3648   00286A  A4D8               	btfss	status,2,c
  3649   00286C  D009               	goto	i2l1164
  3650                           
  3651                           ;maincode02.c: 112:                 minutos = 0;
  3652   00286E  6A0C               	clrf	_minutos^(0+1280),c
  3653                           
  3654                           ;maincode02.c: 113:                 if(horas == 23){
  3655   002870  0E17               	movlw	23
  3656   002872  180D               	xorwf	_horas^(0+1280),w,c
  3657   002874  A4D8               	btfss	status,2,c
  3658   002876  D002               	goto	i2l1162
  3659                           
  3660                           ;maincode02.c: 114:                     horas = 0;
  3661   002878  6A0D               	clrf	_horas^(0+1280),c
  3662                           
  3663                           ;maincode02.c: 115:                 }
  3664   00287A  0011               	retfie		f
  3665   00287C                     i2l1162:
  3666                           
  3667                           ;maincode02.c: 117:                     horas++;
  3668   00287C  2A0D               	incf	_horas^(0+1280),f,c
  3669   00287E  0011               	retfie		f
  3670   002880                     i2l1164:
  3671                           
  3672                           ;maincode02.c: 121:                 minutos++;
  3673   002880  2A0C               	incf	_minutos^(0+1280),f,c
  3674   002882  0011               	retfie		f
  3675   002884                     i2l1166:
  3676                           
  3677                           ;maincode02.c: 125:             segundos++;
  3678   002884  2A0B               	incf	_segundos^(0+1280),f,c
  3679   002886  0011               	retfie		f
  3680   002888                     i2l1168:
  3681                           
  3682                           ;maincode02.c: 129:         centesimas++;
  3683   002888  2A0A               	incf	_centesimas^(0+1280),f,c
  3684   00288A  0011               	retfie		f
  3685   00288C                     __end_of_CCP1_ISR:
  3686                           	callstack 0
  3687                           
  3688 ;; *************** function _DEFAULT_ISR *****************
  3689 ;; Defined at:
  3690 ;;		line 133 in file "maincode02.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;		None
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		None
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3708 ;;Total ram usage:        0 bytes
  3709 ;; Hardware stack levels used: 1
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		Interrupt level 2
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text19
  3718   002A68                     __ptext19:
  3719                           	callstack 0
  3720   002A68                     _DEFAULT_ISR:
  3721                           	callstack 122
  3722                           
  3723                           ;incstack = 0
  3724   002A68  0011               	retfie		f
  3725   002A6A                     __end_of_DEFAULT_ISR:
  3726                           	callstack 0
  3727                           
  3728                           ;
  3729                           ; H/W Interrupt Vector Table @ 0x8
  3730                           ;
  3731                           
  3732                           	psect	ivt0x8
  3733   000008                     __pivt0x8:
  3734                           	callstack 0
  3735   000008                     ivt0x8_base:
  3736                           	callstack 0
  3737                           
  3738                           ; Vector 0 : SWINT
  3739   000008  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3740                           
  3741                           ; Vector 1 : HLVD
  3742   00000A  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3743                           
  3744                           ; Vector 2 : OSF
  3745   00000C  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3746                           
  3747                           ; Vector 3 : CSW
  3748   00000E  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3749                           
  3750                           ; Vector 4 : Undefined
  3751   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  3752                           
  3753                           ; Vector 5 : CLC1
  3754   000012  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3755                           
  3756                           ; Vector 6 : Undefined
  3757   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  3758                           
  3759                           ; Vector 7 : IOC
  3760   000016  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3761                           
  3762                           ; Vector 8 : INT0
  3763   000018  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3764                           
  3765                           ; Vector 9 : ZCD
  3766   00001A  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3767                           
  3768                           ; Vector 10 : AD
  3769   00001C  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3770                           
  3771                           ; Vector 11 : ACT
  3772   00001E  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3773                           
  3774                           ; Vector 12 : CMP1
  3775   000020  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3776                           
  3777                           ; Vector 13 : SMT1
  3778   000022  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3779                           
  3780                           ; Vector 14 : SMT1PRA
  3781   000024  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3782                           
  3783                           ; Vector 15 : SMT1PRW
  3784   000026  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3785                           
  3786                           ; Vector 16 : ADT
  3787   000028  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3788                           
  3789                           ; Vector 17 : Undefined
  3790   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  3791                           
  3792                           ; Vector 18 : Undefined
  3793   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  3794                           
  3795                           ; Vector 19 : Undefined
  3796   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  3797                           
  3798                           ; Vector 20 : DMA1SCNT
  3799   000030  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3800                           
  3801                           ; Vector 21 : DMA1DCNT
  3802   000032  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3803                           
  3804                           ; Vector 22 : DMA1OR
  3805   000034  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3806                           
  3807                           ; Vector 23 : DMA1A
  3808   000036  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3809                           
  3810                           ; Vector 24 : SPI1RX
  3811   000038  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3812                           
  3813                           ; Vector 25 : SPI1TX
  3814   00003A  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3815                           
  3816                           ; Vector 26 : SPI1
  3817   00003C  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3818                           
  3819                           ; Vector 27 : TMR2
  3820   00003E  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3821                           
  3822                           ; Vector 28 : TMR1
  3823   000040  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3824                           
  3825                           ; Vector 29 : TMR1G
  3826   000042  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3827                           
  3828                           ; Vector 30 : CCP1
  3829   000044  0A14               	dw	_CCP1_ISR shr (0+2)
  3830                           
  3831                           ; Vector 31 : TMR0
  3832   000046  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3833                           
  3834                           ; Vector 32 : U1RX
  3835   000048  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3836                           
  3837                           ; Vector 33 : U1TX
  3838   00004A  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3839                           
  3840                           ; Vector 34 : U1E
  3841   00004C  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3842                           
  3843                           ; Vector 35 : U1
  3844   00004E  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3845                           
  3846                           ; Vector 36 : Undefined
  3847   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  3848                           
  3849                           ; Vector 37 : Undefined
  3850   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  3851                           
  3852                           ; Vector 38 : PWM1PR
  3853   000054  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3854                           
  3855                           ; Vector 39 : PWM1
  3856   000056  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3857                           
  3858                           ; Vector 40 : SPI2RX
  3859   000058  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3860                           
  3861                           ; Vector 41 : SPI2TX
  3862   00005A  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3863                           
  3864                           ; Vector 42 : SPI2
  3865   00005C  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3866                           
  3867                           ; Vector 43 : Undefined
  3868   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  3869                           
  3870                           ; Vector 44 : TMR3
  3871   000060  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3872                           
  3873                           ; Vector 45 : TMR3G
  3874   000062  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3875                           
  3876                           ; Vector 46 : PWM2PR
  3877   000064  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3878                           
  3879                           ; Vector 47 : PWM2
  3880   000066  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3881                           
  3882                           ; Vector 48 : INT1
  3883   000068  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3884                           
  3885                           ; Vector 49 : CLC2
  3886   00006A  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3887                           
  3888                           ; Vector 50 : CWG1
  3889   00006C  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3890                           
  3891                           ; Vector 51 : NCO1
  3892   00006E  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3893                           
  3894                           ; Vector 52 : DMA2SCNT
  3895   000070  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3896                           
  3897                           ; Vector 53 : DMA2DCNT
  3898   000072  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3899                           
  3900                           ; Vector 54 : DMA2OR
  3901   000074  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3902                           
  3903                           ; Vector 55 : DMA2A
  3904   000076  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3905                           
  3906                           ; Vector 56 : I2C1RX
  3907   000078  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3908                           
  3909                           ; Vector 57 : I2C1TX
  3910   00007A  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3911                           
  3912                           ; Vector 58 : I2C1
  3913   00007C  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3914                           
  3915                           ; Vector 59 : I2C1E
  3916   00007E  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3917                           
  3918                           ; Vector 60 : Undefined
  3919   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  3920                           
  3921                           ; Vector 61 : CLC3
  3922   000082  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3923                           
  3924                           ; Vector 62 : PWM3PR
  3925   000084  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3926                           
  3927                           ; Vector 63 : PWM3
  3928   000086  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3929                           
  3930                           ; Vector 64 : U2RX
  3931   000088  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3932                           
  3933                           ; Vector 65 : U2TX
  3934   00008A  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3935                           
  3936                           ; Vector 66 : U2E
  3937   00008C  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3938                           
  3939                           ; Vector 67 : U2
  3940   00008E  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3941                           
  3942                           ; Vector 68 : TMR5
  3943   000090  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3944                           
  3945                           ; Vector 69 : TMR5G
  3946   000092  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3947                           
  3948                           ; Vector 70 : CCP2
  3949   000094  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3950                           
  3951                           ; Vector 71 : SCAN
  3952   000096  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3953                           
  3954                           ; Vector 72 : U3RX
  3955   000098  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3956                           
  3957                           ; Vector 73 : U3TX
  3958   00009A  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3959                           
  3960                           ; Vector 74 : U3E
  3961   00009C  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3962                           
  3963                           ; Vector 75 : U3
  3964   00009E  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3965                           
  3966                           ; Vector 76 : Undefined
  3967   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  3968                           
  3969                           ; Vector 77 : CLC4
  3970   0000A2  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3971                           
  3972                           ; Vector 78 : Undefined
  3973   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  3974                           
  3975                           ; Vector 79 : Undefined
  3976   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  3977                           
  3978                           ; Vector 80 : INT2
  3979   0000A8  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3980                           
  3981                           ; Vector 81 : CLC5
  3982   0000AA  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3983                           
  3984                           ; Vector 82 : CWG2
  3985   0000AC  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3986                           
  3987                           ; Vector 83 : NCO2
  3988   0000AE  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3989                           
  3990                           ; Vector 84 : DMA3SCNT
  3991   0000B0  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3992                           
  3993                           ; Vector 85 : DMA3DCNT
  3994   0000B2  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3995                           
  3996                           ; Vector 86 : DMA3OR
  3997   0000B4  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  3998                           
  3999                           ; Vector 87 : DMA3A
  4000   0000B6  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4001                           
  4002                           ; Vector 88 : CCP3
  4003   0000B8  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4004                           
  4005                           ; Vector 89 : CLC6
  4006   0000BA  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4007                           
  4008                           ; Vector 90 : CWG3
  4009   0000BC  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4010                           
  4011                           ; Vector 91 : TMR4
  4012   0000BE  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4013                           
  4014                           ; Vector 92 : DMA4SCNT
  4015   0000C0  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4016                           
  4017                           ; Vector 93 : DMA4DCNT
  4018   0000C2  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4019                           
  4020                           ; Vector 94 : DMA4OR
  4021   0000C4  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4022                           
  4023                           ; Vector 95 : DMA4A
  4024   0000C6  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4025                           
  4026                           ; Vector 96 : U4RX
  4027   0000C8  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4028                           
  4029                           ; Vector 97 : U4TX
  4030   0000CA  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4031                           
  4032                           ; Vector 98 : U4E
  4033   0000CC  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4034                           
  4035                           ; Vector 99 : U4
  4036   0000CE  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4037                           
  4038                           ; Vector 100 : DMA5SCNT
  4039   0000D0  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4040                           
  4041                           ; Vector 101 : DMA5DCNT
  4042   0000D2  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4043                           
  4044                           ; Vector 102 : DMA5OR
  4045   0000D4  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4046                           
  4047                           ; Vector 103 : DMA5A
  4048   0000D6  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4049                           
  4050                           ; Vector 104 : U5RX
  4051   0000D8  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4052                           
  4053                           ; Vector 105 : U5TX
  4054   0000DA  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4055                           
  4056                           ; Vector 106 : U5E
  4057   0000DC  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4058                           
  4059                           ; Vector 107 : U5
  4060   0000DE  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4061                           
  4062                           ; Vector 108 : DMA6SCNT
  4063   0000E0  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4064                           
  4065                           ; Vector 109 : DMA6DCNT
  4066   0000E2  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4067                           
  4068                           ; Vector 110 : DMA6OR
  4069   0000E4  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4070                           
  4071                           ; Vector 111 : DMA6A
  4072   0000E6  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4073                           
  4074                           ; Vector 112 : Undefined
  4075   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  4076                           
  4077                           ; Vector 113 : CLC7
  4078   0000EA  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4079                           
  4080                           ; Vector 114 : CMP2
  4081   0000EC  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4082                           
  4083                           ; Vector 115 : NCO3
  4084   0000EE  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4085                           
  4086                           ; Vector 116 : Undefined
  4087   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  4088                           
  4089                           ; Vector 117 : Undefined
  4090   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  4091                           
  4092                           ; Vector 118 : Undefined
  4093   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  4094                           
  4095                           ; Vector 119 : Undefined
  4096   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  4097                           
  4098                           ; Vector 120 : NVM
  4099   0000F8  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4100                           
  4101                           ; Vector 121 : CLC8
  4102   0000FA  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4103                           
  4104                           ; Vector 122 : CRC
  4105   0000FC  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4106                           
  4107                           ; Vector 123 : TMR6
  4108   0000FE  0A9A               	dw	_DEFAULT_ISR shr (0+2)
  4109   000100                     ivt0x8_undefint:
  4110                           	callstack 0
  4111   000100  00FF               	reset	
  4112                           
  4113                           	psect	rparam
  4114   000001                     ___rparam_used  equ	1
  4115   000000                     ___param_bank   equ	0
  4116   000000                     __Lparam        equ	__Lrparam
  4117   000000                     __Hparam        equ	__Hrparam
  4118                           
  4119                           	psect	config
  4120                           
  4121                           ;Config register CONFIG1 @ 0x300000
  4122                           ;	External Oscillator Selection
  4123                           ;	FEXTOSC = OFF, Oscillator not enabled
  4124                           ;	Reset Oscillator Selection
  4125                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  4126   300000                     	org	3145728
  4127   300000  FC                 	db	252
  4128                           
  4129                           ;Config register CONFIG2 @ 0x300001
  4130                           ;	Clock out Enable bit
  4131                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4132                           ;	PRLOCKED One-Way Set Enable bit
  4133                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  4134                           ;	Clock Switch Enable bit
  4135                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4136                           ;	Fail-Safe Clock Monitor Enable bit
  4137                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4138   300001                     	org	3145729
  4139   300001  FF                 	db	255
  4140                           
  4141                           ;Config register CONFIG3 @ 0x300002
  4142                           ;	MCLR Enable bit
  4143                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4144                           ;	Power-up timer selection bits
  4145                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  4146                           ;	Multi-vector enable bit
  4147                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  4148                           ;	IVTLOCK bit One-way set enable bit
  4149                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  4150                           ;	Low Power BOR Enable bit
  4151                           ;	LPBOREN = OFF, Low-Power BOR disabled
  4152                           ;	Brown-out Reset Enable bits
  4153                           ;	BOREN = OFF, Brown-out Reset disabled
  4154   300002                     	org	3145730
  4155   300002  3D                 	db	61
  4156                           
  4157                           ;Config register CONFIG4 @ 0x300003
  4158                           ;	Brown-out Reset Voltage Selection bits
  4159                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  4160                           ;	ZCD Disable bit
  4161                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  4162                           ;	PPSLOCK bit One-Way Set Enable bit
  4163                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  4164                           ;	Stack Full/Underflow Reset Enable bit
  4165                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4166                           ;	Low Voltage Programming Enable bit
  4167                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  4168                           ;	Extended Instruction Set Enable bit
  4169                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4170   300003                     	org	3145731
  4171   300003  DF                 	db	223
  4172                           
  4173                           ;Config register CONFIG5 @ 0x300004
  4174                           ;	WDT Period selection bits
  4175                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4176                           ;	WDT operating mode
  4177                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4178   300004                     	org	3145732
  4179   300004  9F                 	db	159
  4180                           
  4181                           ;Config register CONFIG6 @ 0x300005
  4182                           ;	WDT Window Select bits
  4183                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4184                           ;	WDT input clock selector
  4185                           ;	WDTCCS = SC, Software Control
  4186   300005                     	org	3145733
  4187   300005  FF                 	db	255
  4188                           
  4189                           ;Config register CONFIG7 @ 0x300006
  4190                           ;	Boot Block Size selection bits
  4191                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4192                           ;	Boot Block enable bit
  4193                           ;	BBEN = OFF, Boot block disabled
  4194                           ;	Storage Area Flash enable bit
  4195                           ;	SAFEN = OFF, SAF disabled
  4196                           ;	Background Debugger
  4197                           ;	DEBUG = OFF, Background Debugger disabled
  4198   300006                     	org	3145734
  4199   300006  FF                 	db	255
  4200                           
  4201                           ;Config register CONFIG8 @ 0x300007
  4202                           ;	Boot Block Write Protection bit
  4203                           ;	WRTB = OFF, Boot Block not Write protected
  4204                           ;	Configuration Register Write Protection bit
  4205                           ;	WRTC = OFF, Configuration registers not Write protected
  4206                           ;	Data EEPROM Write Protection bit
  4207                           ;	WRTD = OFF, Data EEPROM not Write protected
  4208                           ;	SAF Write protection bit
  4209                           ;	WRTSAF = OFF, SAF not Write Protected
  4210                           ;	Application Block write protection bit
  4211                           ;	WRTAPP = OFF, Application Block not write protected
  4212   300007                     	org	3145735
  4213   300007  FF                 	db	255
  4214                           
  4215                           ;Config register CONFIG10 @ 0x300009
  4216                           ;	PFM and Data EEPROM Code Protection bit
  4217                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  4218   300009                     	org	3145737
  4219   300009  FF                 	db	255
  4220                           tosu	equ	0x4FF
  4221                           tosh	equ	0x4FE
  4222                           tosl	equ	0x4FD
  4223                           stkptr	equ	0x4FC
  4224                           pclatu	equ	0x4FB
  4225                           pclath	equ	0x4FA
  4226                           pcl	equ	0x4F9
  4227                           tblptru	equ	0x4F8
  4228                           tblptrh	equ	0x4F7
  4229                           tblptrl	equ	0x4F6
  4230                           tablat	equ	0x4F5
  4231                           prodh	equ	0x4F4
  4232                           prodl	equ	0x4F3
  4233                           indf0	equ	0x4EF
  4234                           postinc0	equ	0x4EE
  4235                           postdec0	equ	0x4ED
  4236                           preinc0	equ	0x4EC
  4237                           plusw0	equ	0x4EB
  4238                           fsr0h	equ	0x4EA
  4239                           fsr0l	equ	0x4E9
  4240                           wreg	equ	0x4E8
  4241                           indf1	equ	0x4E7
  4242                           postinc1	equ	0x4E6
  4243                           postdec1	equ	0x4E5
  4244                           preinc1	equ	0x4E4
  4245                           plusw1	equ	0x4E3
  4246                           fsr1h	equ	0x4E2
  4247                           fsr1l	equ	0x4E1
  4248                           bsr	equ	0x4E0
  4249                           indf2	equ	0x4DF
  4250                           postinc2	equ	0x4DE
  4251                           postdec2	equ	0x4DD
  4252                           preinc2	equ	0x4DC
  4253                           plusw2	equ	0x4DB
  4254                           fsr2h	equ	0x4DA
  4255                           fsr2l	equ	0x4D9
  4256                           status	equ	0x4D8

Data Sizes:
    Strings     47
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      13
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[17]), STR_3(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_pantallazo
    _visualizacion_hora->_ESCRIBE_MENSAJE
    _pantallazo->_ESCRIBE_MENSAJE
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _CCP1_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _CCP1_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _CCP1_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _CCP1_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _CCP1_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _CCP1_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _CCP1_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _CCP1_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _CCP1_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _CCP1_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _CCP1_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _CCP1_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _CCP1_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _CCP1_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _CCP1_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _CCP1_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _CCP1_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _CCP1_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _CCP1_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _CCP1_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _CCP1_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _CCP1_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _CCP1_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _CCP1_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _CCP1_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _CCP1_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _CCP1_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _CCP1_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _CCP1_ISR in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _CCP1_ISR in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _CCP1_ISR in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _CCP1_ISR in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _CCP1_ISR in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1996
                   _ajuste_backlight
                          _configuro
                           _lcd_init
                         _pantallazo
                 _visualizacion_hora
 ---------------------------------------------------------------------------------
 (1) _visualizacion_hora                                   0     0      0     908
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     171
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     174
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _pantallazo                                           2     2      0     563
                                              7 COMRAM     2     2      0
                         _BORRAR_LCD
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     226
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE                                      4     2      2     217
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ajuste_backlight                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _DEFAULT_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ajuste_backlight
   _configuro
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _pantallazo
     _BORRAR_LCD
     _ESCRIBE_MENSAJE
       _ENVIA_CHAR
         _ENVIA_NIBBLE
         _LEER_LCD
     _POS_CURSOR
       _ENVIA_LCD_CMD
   _visualizacion_hora
     _ENVIA_CHAR
     _ESCRIBE_MENSAJE
     _POS_CURSOR
     ___lbdiv
     ___lbmod

 _CCP1_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRllh       624      0       0      0.0%
BITBIGSFRh         268      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBIGSFRlh        206      0       0      0.0%
BITBIGSFRllll      173      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95      9      13     13.7%
BITBIGSFRlllh        5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      13      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jun 09 16:00:46 2025

                        l90 2A4C               ENVIA_CHAR@aux 0503                         l189 271A  
                       l908 273E                         l892 2710                         l994 2A08  
                       u200 28DE                         u307 26F2                         u317 2700  
                       u237 283E                         u327 270A                         u247 2908  
                       u337 271E                         u257 2970                         u347 272C  
                       u267 2758                         u357 2736                         u277 2766  
                       u367 2A28                         u287 2776                         u297 293A  
               LEER_LCD@aux 0501                         wreg 04E8                ?_CURSOR_HOME 0501  
            ??_ENVIA_NIBBLE 0501              ENVIA_CHAR@dato 0502                        l1204 28F0  
                      l1208 28F8                        l1224 29AA                        l1216 2992  
                      l1180 29DC                        l1174 29C4                        l1184 29F0  
                      l1192 28D4                        l1274 2A3E                        l1196 28DA  
                      STR_1 2612                        STR_2 2601                        STR_3 2623  
                      _LATD 04C1                        _T2PR 0323                        _main 2A32  
          __end_of_CCP1_ISR 288C                        start 0102               ?_CURSOR_ONOFF 0501  
              ___param_bank 0000             ??_ENVIA_LCD_CMD 0502            __end_of_LEER_LCD 2748  
          _ajuste_backlight 2A48                       ?_main 0501                       _ADPCH 03EC  
           __end_of___lbdiv 28FC             __end_of___lbmod 29B2                       _T1CLK 0321  
                     _T1CON 031E                       _T2CON 0324                       _OSCEN 00B3  
                     _PORTD 04D1                       _TRISD 04C9                       _horas 050D  
               ?_POS_CURSOR 0504                       tablat 04F5                       status 04D8  
           ___lbdiv@divisor 0501             ___lbdiv@counter 0503              ??_CURSOR_ONOFF 0504  
           __initialization 288C                __end_of_main 2A48             _ESCRIBE_MENSAJE 29D6  
                    ??_main 050A               __activetblptr 0001                      _ADRESH 03EB  
                    _CCPR1H 0341                      _CCPR2H 0345                      _CCPR1L 0340  
                    _CCPR2L 0344                      _ANSELD 0418                      _RF0PPS 0229  
                    i2l1162 287C                      i2l1164 2880                      i2l1166 2884  
                    i2l1168 2888                      _OSCFRQ 00B1            __end_of_lcd_init 298A  
                 ??___lbdiv 0502        __end_of_ENVIA_NIBBLE 2A32                   ??___lbmod 0502  
                    isa$std 0001                   ?_CCP1_ISR 0501                __pdataCOMRAM 050C  
              __mediumconst 2600                      tblptrh 04F7                      tblptrl 04F6  
                    tblptru 04F8                ??_BORRAR_LCD 0504            ___lbdiv@dividend 0502  
           ___lbmod@divisor 0501                   ?_LEER_LCD 0501                  __accesstop 0560  
   __end_of__initialization 28B6             ___lbmod@counter 0503                ??_LCD_CONFIG 0504  
             ___rparam_used 0001                ??_ENVIA_CHAR 0502     __end_of_ESCRIBE_MENSAJE 29FA  
            __pcstackCOMRAM 0501              ivt0x8_undefint 0100          __end_of_BORRAR_LCD 2A66  
          ___lbdiv@quotient 0504                  ??_CCP1_ISR 0501            ENVIA_LCD_CMD@aux 0503  
      __end_of_CURSOR_ONOFF 2A16          __end_of_LCD_CONFIG 27A8          __end_of_ENVIA_CHAR 292E  
  __end_of_ajuste_backlight 2A56                  ??_LEER_LCD 0501            ENVIA_NIBBLE@dato 0501  
                   IVTBASEH 045E                     IVTBASEL 045D                     IVTBASEU 045F  
                _centesimas 050A                     _CCP1CON 0342                     _CCP2CON 0346  
             ??_DEFAULT_ISR 0501                     _OSCCON1 00AD                ??_POS_CURSOR 0505  
                 ?_lcd_init 0501                     __Hparam 0000                     __Lparam 0000  
          ?_ESCRIBE_MENSAJE 0504           __end_of_configuro 2808                     ___lbdiv 28C4  
                   ___lbmod 298A                __psmallconst 2600       __end_of_ENVIA_LCD_CMD 2960  
                   __pcinit 288C          __end_of_POS_CURSOR 29D6                     __ramtop 2600  
                   __ptext0 2A32                     __ptext1 2632                     __ptext2 298A  
                   __ptext3 28C4                     __ptext4 2808                     __ptext5 29B2  
                   __ptext6 29D6                     __ptext7 28FC                     __ptext8 2960  
                   __ptext9 2748                  _pantallazo 2808                     _minutos 050C  
                ??_lcd_init 0505                _ENVIA_NIBBLE 2A16         __end_of_DEFAULT_ISR 2A6A  
      end_of_initialization 28B6            ___lbmod@dividend 0502                   _TRISAbits 04C6  
                 _TRISFbits 04CB                 ___lbmod@rem 0504                _CURSOR_ONOFF 29FA  
        CURSOR_ONOFF@estado 0504               __pidataCOMRAM 2A66  __end_of_visualizacion_hora 26E6  
               _DEFAULT_ISR 2A68               ??_CURSOR_HOME 0504         start_initialization 288C  
               ?_pantallazo 0501                  ivt0x8_base 0008           ?_ajuste_backlight 0501  
         ENVIA_LCD_CMD@dato 0502          ??_ajuste_backlight 0501                 __pbssCOMRAM 050A  
       __end_of_CURSOR_HOME 2A5E                    ?___lbdiv 0501                    ?___lbmod 0501  
                 _configuro 27A8                 __smallconst 2600                    _CCP1_ISR 2850  
                  _T2CLKCON 0326                    _LEER_LCD 26E6                    _LATDbits 04C1  
                  _PIE3bits 04A1                    _PIR3bits 04B1            ESCRIBE_MENSAJE@i 0507  
            POS_CURSOR@fila 0505                  ?_configuro 0501                  _ADCON0bits 03F3  
               _CURSOR_HOME 2A56                 _INTCON0bits 04D6                    __Hrparam 0000  
                  __Lrparam 0000                __Lsmallconst 2600                  _ANSELAbits 0400  
                _ANSELFbits 0428                ?_DEFAULT_ISR 0501                ??_pantallazo 0508  
                  __pivt0x8 0008                    __ptext10 29FA                    __ptext11 2A56  
                  __ptext12 2A5E                    __ptext13 292E                    __ptext14 26E6  
                  __ptext15 2A16                    __ptext16 27A8                    __ptext17 2A48  
                  __ptext18 2850                    __ptext19 2A68                  _BORRAR_LCD 2A5E  
                  _lcd_init 2960          _visualizacion_hora 2632                  _LCD_CONFIG 2748  
                _ENVIA_CHAR 28FC         ?_visualizacion_hora 0501                    _segundos 050B  
                  isa$xinst 0000          __end_of_pantallazo 2850               _ENVIA_LCD_CMD 292E  
               ??_configuro 0501        ??_visualizacion_hora 0508           ??_ESCRIBE_MENSAJE 0506  
                  intlevel2 0000       ESCRIBE_MENSAJE@cadena 0504              ?_ENVIA_LCD_CMD 0501  
               ?_BORRAR_LCD 0501               ?_ENVIA_NIBBLE 0501                  _POS_CURSOR 29B2  
               ?_LCD_CONFIG 0501          ESCRIBE_MENSAJE@tam 0505                 ?_ENVIA_CHAR 0501  
         POS_CURSOR@columna 0504  
