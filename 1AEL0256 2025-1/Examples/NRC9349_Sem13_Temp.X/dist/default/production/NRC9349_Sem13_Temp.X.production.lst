

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jun 23 16:41:15 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Generated 04/02/2025 GMT
    40                           ; 
    41                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F57Q43 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   0004E0                     bsr             equ	1248
    74   0004E9                     fsr0            equ	1257
    75   0004EA                     fsr0h           equ	1258
    76   0004E9                     fsr0l           equ	1257
    77   0004E1                     fsr1            equ	1249
    78   0004E2                     fsr1h           equ	1250
    79   0004E1                     fsr1l           equ	1249
    80   0004D9                     fsr2            equ	1241
    81   0004DA                     fsr2h           equ	1242
    82   0004D9                     fsr2l           equ	1241
    83   0004EF                     indf0           equ	1263
    84   0004E7                     indf1           equ	1255
    85   0004DF                     indf2           equ	1247
    86   0004D6                     intcon          equ	1238
    87   000041                     nvmcon          equ	65
    88   0004F9                     pcl             equ	1273
    89   0004FA                     pclath          equ	1274
    90   0004FB                     pclatu          equ	1275
    91   0004EB                     plusw0          equ	1259
    92   0004E3                     plusw1          equ	1251
    93   0004DB                     plusw2          equ	1243
    94   0004ED                     postdec0        equ	1261
    95   0004E5                     postdec1        equ	1253
    96   0004DD                     postdec2        equ	1245
    97   0004EE                     postinc0        equ	1262
    98   0004E6                     postinc1        equ	1254
    99   0004DE                     postinc2        equ	1246
   100   0004EC                     preinc0         equ	1260
   101   0004E4                     preinc1         equ	1252
   102   0004DC                     preinc2         equ	1244
   103   0004F3                     prod            equ	1267
   104   0004F4                     prodh           equ	1268
   105   0004F3                     prodl           equ	1267
   106   0004D8                     status          equ	1240
   107   0004F5                     tablat          equ	1269
   108   0004F6                     tblptr          equ	1270
   109   0004F7                     tblptrh         equ	1271
   110   0004F6                     tblptrl         equ	1270
   111   0004F8                     tblptru         equ	1272
   112   0004FD                     tosl            equ	1277
   113   0004E8                     wreg            equ	1256
   114   000039                     CLKRCON         equ	57	;# 
   115   00003A                     CLKRCLK         equ	58	;# 
   116   000040                     NVMCON0         equ	64	;# 
   117   000041                     NVMCON1         equ	65	;# 
   118   000042                     NVMLOCK         equ	66	;# 
   119   000043                     NVMADR          equ	67	;# 
   120   000043                     NVMADRL         equ	67	;# 
   121   000044                     NVMADRH         equ	68	;# 
   122   000045                     NVMADRU         equ	69	;# 
   123   000046                     NVMDAT          equ	70	;# 
   124   000046                     NVMDATL         equ	70	;# 
   125   000047                     NVMDATH         equ	71	;# 
   126   000048                     VREGCON         equ	72	;# 
   127   000049                     BORCON          equ	73	;# 
   128   00004A                     HLVDCON0        equ	74	;# 
   129   00004B                     HLVDCON1        equ	75	;# 
   130   00004C                     ZCDCON          equ	76	;# 
   131   000060                     PMD0            equ	96	;# 
   132   000061                     PMD1            equ	97	;# 
   133   000063                     PMD3            equ	99	;# 
   134   000064                     PMD4            equ	100	;# 
   135   000065                     PMD5            equ	101	;# 
   136   000066                     PMD6            equ	102	;# 
   137   000067                     PMD7            equ	103	;# 
   138   000068                     PMD8            equ	104	;# 
   139   00006A                     MD1CON0         equ	106	;# 
   140   00006B                     MD1CON1         equ	107	;# 
   141   00006C                     MD1SRC          equ	108	;# 
   142   00006D                     MD1CARL         equ	109	;# 
   143   00006E                     MD1CARH         equ	110	;# 
   144   00006F                     CMOUT           equ	111	;# 
   145   000070                     CM1CON0         equ	112	;# 
   146   000071                     CM1CON1         equ	113	;# 
   147   000072                     CM1NCH          equ	114	;# 
   148   000073                     CM1PCH          equ	115	;# 
   149   000074                     CM2CON0         equ	116	;# 
   150   000075                     CM2CON1         equ	117	;# 
   151   000076                     CM2NCH          equ	118	;# 
   152   000077                     CM2PCH          equ	119	;# 
   153   000078                     WDTCON0         equ	120	;# 
   154   000079                     WDTCON1         equ	121	;# 
   155   00007A                     WDTPS           equ	122	;# 
   156   00007A                     WDTPSL          equ	122	;# 
   157   00007B                     WDTPSH          equ	123	;# 
   158   00007C                     WDTTMR          equ	124	;# 
   159   00007D                     DAC1DAT         equ	125	;# 
   160   00007D                     DAC1DATL        equ	125	;# 
   161   00007F                     DAC1CON         equ	127	;# 
   162   000080                     SPI1RXB         equ	128	;# 
   163   000081                     SPI1TXB         equ	129	;# 
   164   000082                     SPI1TCNT        equ	130	;# 
   165   000082                     SPI1TCNTL       equ	130	;# 
   166   000083                     SPI1TCNTH       equ	131	;# 
   167   000084                     SPI1CON0        equ	132	;# 
   168   000085                     SPI1CON1        equ	133	;# 
   169   000086                     SPI1CON2        equ	134	;# 
   170   000087                     SPI1STATUS      equ	135	;# 
   171   000088                     SPI1TWIDTH      equ	136	;# 
   172   000089                     SPI1BAUD        equ	137	;# 
   173   00008A                     SPI1INTF        equ	138	;# 
   174   00008B                     SPI1INTE        equ	139	;# 
   175   00008C                     SPI1CLK         equ	140	;# 
   176   00008D                     SPI2RXB         equ	141	;# 
   177   00008E                     SPI2TXB         equ	142	;# 
   178   00008F                     SPI2TCNT        equ	143	;# 
   179   00008F                     SPI2TCNTL       equ	143	;# 
   180   000090                     SPI2TCNTH       equ	144	;# 
   181   000091                     SPI2CON0        equ	145	;# 
   182   000092                     SPI2CON1        equ	146	;# 
   183   000093                     SPI2CON2        equ	147	;# 
   184   000094                     SPI2STATUS      equ	148	;# 
   185   000095                     SPI2TWIDTH      equ	149	;# 
   186   000096                     SPI2BAUD        equ	150	;# 
   187   000097                     SPI2INTF        equ	151	;# 
   188   000098                     SPI2INTE        equ	152	;# 
   189   000099                     SPI2CLK         equ	153	;# 
   190   0000AC                     ACTCON          equ	172	;# 
   191   0000AD                     OSCCON1         equ	173	;# 
   192   0000AE                     OSCCON2         equ	174	;# 
   193   0000AF                     OSCCON3         equ	175	;# 
   194   0000B0                     OSCTUNE         equ	176	;# 
   195   0000B1                     OSCFRQ          equ	177	;# 
   196   0000B1                     OSCFREQ         equ	177	;# 
   197   0000B2                     OSCSTAT         equ	178	;# 
   198   0000B2                     OSCSTAT1        equ	178	;# 
   199   0000B3                     OSCEN           equ	179	;# 
   200   0000B4                     PRLOCK          equ	180	;# 
   201   0000B5                     SCANPR          equ	181	;# 
   202   0000B6                     DMA1PR          equ	182	;# 
   203   0000B7                     DMA2PR          equ	183	;# 
   204   0000B8                     DMA3PR          equ	184	;# 
   205   0000B9                     DMA4PR          equ	185	;# 
   206   0000BA                     DMA5PR          equ	186	;# 
   207   0000BB                     DMA6PR          equ	187	;# 
   208   0000BE                     MAINPR          equ	190	;# 
   209   0000BF                     ISRPR           equ	191	;# 
   210   0000D4                     CLCDATA         equ	212	;# 
   211   0000D5                     CLCSELECT       equ	213	;# 
   212   0000D6                     CLCnCON         equ	214	;# 
   213   0000D7                     CLCnPOL         equ	215	;# 
   214   0000D8                     CLCnSEL0        equ	216	;# 
   215   0000D9                     CLCnSEL1        equ	217	;# 
   216   0000DA                     CLCnSEL2        equ	218	;# 
   217   0000DB                     CLCnSEL3        equ	219	;# 
   218   0000DC                     CLCnGLS0        equ	220	;# 
   219   0000DD                     CLCnGLS1        equ	221	;# 
   220   0000DE                     CLCnGLS2        equ	222	;# 
   221   0000DF                     CLCnGLS3        equ	223	;# 
   222   0000E8                     DMASELECT       equ	232	;# 
   223   0000E9                     DMAnBUF         equ	233	;# 
   224   0000EA                     DMAnDCNT        equ	234	;# 
   225   0000EA                     DMAnDCNTL       equ	234	;# 
   226   0000EB                     DMAnDCNTH       equ	235	;# 
   227   0000EC                     DMAnDPTR        equ	236	;# 
   228   0000EC                     DMAnDPTRL       equ	236	;# 
   229   0000ED                     DMAnDPTRH       equ	237	;# 
   230   0000EE                     DMAnDSZ         equ	238	;# 
   231   0000EE                     DMAnDSZL        equ	238	;# 
   232   0000EF                     DMAnDSZH        equ	239	;# 
   233   0000F0                     DMAnDSA         equ	240	;# 
   234   0000F0                     DMAnDSAL        equ	240	;# 
   235   0000F1                     DMAnDSAH        equ	241	;# 
   236   0000F2                     DMAnSCNT        equ	242	;# 
   237   0000F2                     DMAnSCNTL       equ	242	;# 
   238   0000F3                     DMAnSCNTH       equ	243	;# 
   239   0000F4                     DMAnSPTR        equ	244	;# 
   240   0000F4                     DMAnSPTRL       equ	244	;# 
   241   0000F5                     DMAnSPTRH       equ	245	;# 
   242   0000F6                     DMAnSPTRU       equ	246	;# 
   243   0000F7                     DMAnSSZ         equ	247	;# 
   244   0000F7                     DMAnSSZL        equ	247	;# 
   245   0000F8                     DMAnSSZH        equ	248	;# 
   246   0000F9                     DMAnSSA         equ	249	;# 
   247   0000F9                     DMAnSSAL        equ	249	;# 
   248   0000FA                     DMAnSSAH        equ	250	;# 
   249   0000FB                     DMAnSSAU        equ	251	;# 
   250   0000FC                     DMAnCON0        equ	252	;# 
   251   0000FD                     DMAnCON1        equ	253	;# 
   252   0000FE                     DMAnAIRQ        equ	254	;# 
   253   0000FF                     DMAnSIRQ        equ	255	;# 
   254   000200                     PPSLOCK         equ	512	;# 
   255   000201                     RA0PPS          equ	513	;# 
   256   000202                     RA1PPS          equ	514	;# 
   257   000203                     RA2PPS          equ	515	;# 
   258   000204                     RA3PPS          equ	516	;# 
   259   000205                     RA4PPS          equ	517	;# 
   260   000206                     RA5PPS          equ	518	;# 
   261   000207                     RA6PPS          equ	519	;# 
   262   000208                     RA7PPS          equ	520	;# 
   263   000209                     RB0PPS          equ	521	;# 
   264   00020A                     RB1PPS          equ	522	;# 
   265   00020B                     RB2PPS          equ	523	;# 
   266   00020C                     RB3PPS          equ	524	;# 
   267   00020D                     RB4PPS          equ	525	;# 
   268   00020E                     RB5PPS          equ	526	;# 
   269   00020F                     RB6PPS          equ	527	;# 
   270   000210                     RB7PPS          equ	528	;# 
   271   000211                     RC0PPS          equ	529	;# 
   272   000212                     RC1PPS          equ	530	;# 
   273   000213                     RC2PPS          equ	531	;# 
   274   000214                     RC3PPS          equ	532	;# 
   275   000215                     RC4PPS          equ	533	;# 
   276   000216                     RC5PPS          equ	534	;# 
   277   000217                     RC6PPS          equ	535	;# 
   278   000218                     RC7PPS          equ	536	;# 
   279   000219                     RD0PPS          equ	537	;# 
   280   00021A                     RD1PPS          equ	538	;# 
   281   00021B                     RD2PPS          equ	539	;# 
   282   00021C                     RD3PPS          equ	540	;# 
   283   00021D                     RD4PPS          equ	541	;# 
   284   00021E                     RD5PPS          equ	542	;# 
   285   00021F                     RD6PPS          equ	543	;# 
   286   000220                     RD7PPS          equ	544	;# 
   287   000221                     RE0PPS          equ	545	;# 
   288   000222                     RE1PPS          equ	546	;# 
   289   000223                     RE2PPS          equ	547	;# 
   290   000229                     RF0PPS          equ	553	;# 
   291   00022A                     RF1PPS          equ	554	;# 
   292   00022B                     RF2PPS          equ	555	;# 
   293   00022C                     RF3PPS          equ	556	;# 
   294   00022D                     RF4PPS          equ	557	;# 
   295   00022E                     RF5PPS          equ	558	;# 
   296   00022F                     RF6PPS          equ	559	;# 
   297   000230                     RF7PPS          equ	560	;# 
   298   00023E                     INT0PPS         equ	574	;# 
   299   00023F                     INT1PPS         equ	575	;# 
   300   000240                     INT2PPS         equ	576	;# 
   301   000241                     T0CKIPPS        equ	577	;# 
   302   000242                     T1CKIPPS        equ	578	;# 
   303   000243                     T1GPPS          equ	579	;# 
   304   000244                     T3CKIPPS        equ	580	;# 
   305   000245                     T3GPPS          equ	581	;# 
   306   000246                     T5CKIPPS        equ	582	;# 
   307   000247                     T5GPPS          equ	583	;# 
   308   000248                     T2INPPS         equ	584	;# 
   309   000249                     T4INPPS         equ	585	;# 
   310   00024A                     T6INPPS         equ	586	;# 
   311   00024F                     CCP1PPS         equ	591	;# 
   312   000250                     CCP2PPS         equ	592	;# 
   313   000251                     CCP3PPS         equ	593	;# 
   314   000253                     PWM1ERSPPS      equ	595	;# 
   315   000254                     PWM2ERSPPS      equ	596	;# 
   316   000255                     PWM3ERSPPS      equ	597	;# 
   317   000257                     PWMIN0PPS       equ	599	;# 
   318   000258                     PWMIN1PPS       equ	600	;# 
   319   000259                     SMT1WINPPS      equ	601	;# 
   320   00025A                     SMT1SIGPPS      equ	602	;# 
   321   00025B                     CWG1PPS         equ	603	;# 
   322   00025B                     CWG1INPPS       equ	603	;# 
   323   00025C                     CWG2PPS         equ	604	;# 
   324   00025C                     CWG2INPPS       equ	604	;# 
   325   00025D                     CWG3PPS         equ	605	;# 
   326   00025D                     CWG3INPPS       equ	605	;# 
   327   00025E                     MD1CARLPPS      equ	606	;# 
   328   00025E                     MDCARLPPS       equ	606	;# 
   329   00025F                     MD1CARHPPS      equ	607	;# 
   330   00025F                     MDCARHPPS       equ	607	;# 
   331   000260                     MD1SRCPPS       equ	608	;# 
   332   000260                     MDSRCPPS        equ	608	;# 
   333   000261                     CLCIN0PPS       equ	609	;# 
   334   000262                     CLCIN1PPS       equ	610	;# 
   335   000263                     CLCIN2PPS       equ	611	;# 
   336   000264                     CLCIN3PPS       equ	612	;# 
   337   000265                     CLCIN4PPS       equ	613	;# 
   338   000266                     CLCIN5PPS       equ	614	;# 
   339   000267                     CLCIN6PPS       equ	615	;# 
   340   000268                     CLCIN7PPS       equ	616	;# 
   341   000269                     ADACTPPS        equ	617	;# 
   342   00026A                     SPI1SCKPPS      equ	618	;# 
   343   00026B                     SPI1SDIPPS      equ	619	;# 
   344   00026C                     SPI1SSPPS       equ	620	;# 
   345   00026D                     SPI2SCKPPS      equ	621	;# 
   346   00026E                     SPI2SDIPPS      equ	622	;# 
   347   00026F                     SPI2SSPPS       equ	623	;# 
   348   000270                     I2C1SDAPPS      equ	624	;# 
   349   000271                     I2C1SCLPPS      equ	625	;# 
   350   000272                     U1RXPPS         equ	626	;# 
   351   000273                     U1CTSPPS        equ	627	;# 
   352   000274                     U2RXPPS         equ	628	;# 
   353   000275                     U2CTSPPS        equ	629	;# 
   354   000276                     U3RXPPS         equ	630	;# 
   355   000277                     U3CTSPPS        equ	631	;# 
   356   000278                     U4RXPPS         equ	632	;# 
   357   000279                     U4CTSPPS        equ	633	;# 
   358   00027A                     U5RXPPS         equ	634	;# 
   359   00027B                     U5CTSPPS        equ	635	;# 
   360   000286                     RC4I2C          equ	646	;# 
   361   000287                     RC3I2C          equ	647	;# 
   362   000288                     RB2I2C          equ	648	;# 
   363   000289                     RB1I2C          equ	649	;# 
   364   00028B                     I2C1RXB         equ	651	;# 
   365   00028C                     I2C1TXB         equ	652	;# 
   366   00028D                     I2C1CNT         equ	653	;# 
   367   00028E                     I2C1ADB0        equ	654	;# 
   368   00028F                     I2C1ADB1        equ	655	;# 
   369   000290                     I2C1ADR0        equ	656	;# 
   370   000291                     I2C1ADR1        equ	657	;# 
   371   000292                     I2C1ADR2        equ	658	;# 
   372   000293                     I2C1ADR3        equ	659	;# 
   373   000294                     I2C1CON0        equ	660	;# 
   374   000295                     I2C1CON1        equ	661	;# 
   375   000296                     I2C1CON2        equ	662	;# 
   376   000297                     I2C1ERR         equ	663	;# 
   377   000298                     I2C1STAT0       equ	664	;# 
   378   000299                     I2C1STAT1       equ	665	;# 
   379   00029A                     I2C1PIR         equ	666	;# 
   380   00029B                     I2C1PIE         equ	667	;# 
   381   00029C                     I2C1CLK         equ	668	;# 
   382   00029D                     I2C1BTO         equ	669	;# 
   383   0002A1                     U1RXB           equ	673	;# 
   384   0002A1                     U1RXBL          equ	673	;# 
   385   0002A2                     U1RXCHK         equ	674	;# 
   386   0002A3                     U1TXB           equ	675	;# 
   387   0002A3                     U1TXBL          equ	675	;# 
   388   0002A4                     U1TXCHK         equ	676	;# 
   389   0002A5                     U1P1            equ	677	;# 
   390   0002A5                     U1P1L           equ	677	;# 
   391   0002A6                     U1P1H           equ	678	;# 
   392   0002A7                     U1P2            equ	679	;# 
   393   0002A7                     U1P2L           equ	679	;# 
   394   0002A8                     U1P2H           equ	680	;# 
   395   0002A9                     U1P3            equ	681	;# 
   396   0002A9                     U1P3L           equ	681	;# 
   397   0002AA                     U1P3H           equ	682	;# 
   398   0002AB                     U1CON0          equ	683	;# 
   399   0002AC                     U1CON1          equ	684	;# 
   400   0002AD                     U1CON2          equ	685	;# 
   401   0002AE                     U1BRG           equ	686	;# 
   402   0002AE                     U1BRGL          equ	686	;# 
   403   0002AF                     U1BRGH          equ	687	;# 
   404   0002B0                     U1FIFO          equ	688	;# 
   405   0002B1                     U1UIR           equ	689	;# 
   406   0002B2                     U1ERRIR         equ	690	;# 
   407   0002B3                     U1ERRIE         equ	691	;# 
   408   0002B4                     U2RXB           equ	692	;# 
   409   0002B4                     U2RXBL          equ	692	;# 
   410   0002B6                     U2TXB           equ	694	;# 
   411   0002B6                     U2TXBL          equ	694	;# 
   412   0002B8                     U2P1            equ	696	;# 
   413   0002B8                     U2P1L           equ	696	;# 
   414   0002BA                     U2P2            equ	698	;# 
   415   0002BA                     U2P2L           equ	698	;# 
   416   0002BC                     U2P3            equ	700	;# 
   417   0002BC                     U2P3L           equ	700	;# 
   418   0002BE                     U2CON0          equ	702	;# 
   419   0002BF                     U2CON1          equ	703	;# 
   420   0002C0                     U2CON2          equ	704	;# 
   421   0002C1                     U2BRG           equ	705	;# 
   422   0002C1                     U2BRGL          equ	705	;# 
   423   0002C2                     U2BRGH          equ	706	;# 
   424   0002C3                     U2FIFO          equ	707	;# 
   425   0002C4                     U2UIR           equ	708	;# 
   426   0002C5                     U2ERRIR         equ	709	;# 
   427   0002C6                     U2ERRIE         equ	710	;# 
   428   0002C7                     U3RXB           equ	711	;# 
   429   0002C7                     U3RXBL          equ	711	;# 
   430   0002C9                     U3TXB           equ	713	;# 
   431   0002C9                     U3TXBL          equ	713	;# 
   432   0002CB                     U3P1            equ	715	;# 
   433   0002CB                     U3P1L           equ	715	;# 
   434   0002CD                     U3P2            equ	717	;# 
   435   0002CD                     U3P2L           equ	717	;# 
   436   0002CF                     U3P3            equ	719	;# 
   437   0002CF                     U3P3L           equ	719	;# 
   438   0002D1                     U3CON0          equ	721	;# 
   439   0002D2                     U3CON1          equ	722	;# 
   440   0002D3                     U3CON2          equ	723	;# 
   441   0002D4                     U3BRG           equ	724	;# 
   442   0002D4                     U3BRGL          equ	724	;# 
   443   0002D5                     U3BRGH          equ	725	;# 
   444   0002D6                     U3FIFO          equ	726	;# 
   445   0002D7                     U3UIR           equ	727	;# 
   446   0002D8                     U3ERRIR         equ	728	;# 
   447   0002D9                     U3ERRIE         equ	729	;# 
   448   0002DA                     U4RXB           equ	730	;# 
   449   0002DA                     U4RXBL          equ	730	;# 
   450   0002DC                     U4TXB           equ	732	;# 
   451   0002DC                     U4TXBL          equ	732	;# 
   452   0002DE                     U4P1            equ	734	;# 
   453   0002DE                     U4P1L           equ	734	;# 
   454   0002E0                     U4P2            equ	736	;# 
   455   0002E0                     U4P2L           equ	736	;# 
   456   0002E2                     U4P3            equ	738	;# 
   457   0002E2                     U4P3L           equ	738	;# 
   458   0002E4                     U4CON0          equ	740	;# 
   459   0002E5                     U4CON1          equ	741	;# 
   460   0002E6                     U4CON2          equ	742	;# 
   461   0002E7                     U4BRG           equ	743	;# 
   462   0002E7                     U4BRGL          equ	743	;# 
   463   0002E8                     U4BRGH          equ	744	;# 
   464   0002E9                     U4FIFO          equ	745	;# 
   465   0002EA                     U4UIR           equ	746	;# 
   466   0002EB                     U4ERRIR         equ	747	;# 
   467   0002EC                     U4ERRIE         equ	748	;# 
   468   0002ED                     U5RXB           equ	749	;# 
   469   0002ED                     U5RXBL          equ	749	;# 
   470   0002EF                     U5TXB           equ	751	;# 
   471   0002EF                     U5TXBL          equ	751	;# 
   472   0002F1                     U5P1            equ	753	;# 
   473   0002F1                     U5P1L           equ	753	;# 
   474   0002F3                     U5P2            equ	755	;# 
   475   0002F3                     U5P2L           equ	755	;# 
   476   0002F5                     U5P3            equ	757	;# 
   477   0002F5                     U5P3L           equ	757	;# 
   478   0002F7                     U5CON0          equ	759	;# 
   479   0002F8                     U5CON1          equ	760	;# 
   480   0002F9                     U5CON2          equ	761	;# 
   481   0002FA                     U5BRG           equ	762	;# 
   482   0002FA                     U5BRGL          equ	762	;# 
   483   0002FB                     U5BRGH          equ	763	;# 
   484   0002FC                     U5FIFO          equ	764	;# 
   485   0002FD                     U5UIR           equ	765	;# 
   486   0002FE                     U5ERRIR         equ	766	;# 
   487   0002FF                     U5ERRIE         equ	767	;# 
   488   000300                     SMT1TMR         equ	768	;# 
   489   000300                     SMT1TMRL        equ	768	;# 
   490   000301                     SMT1TMRH        equ	769	;# 
   491   000302                     SMT1TMRU        equ	770	;# 
   492   000303                     SMT1CPR         equ	771	;# 
   493   000303                     SMT1CPRL        equ	771	;# 
   494   000304                     SMT1CPRH        equ	772	;# 
   495   000305                     SMT1CPRU        equ	773	;# 
   496   000306                     SMT1CPW         equ	774	;# 
   497   000306                     SMT1CPWL        equ	774	;# 
   498   000307                     SMT1CPWH        equ	775	;# 
   499   000308                     SMT1CPWU        equ	776	;# 
   500   000309                     SMT1PR          equ	777	;# 
   501   000309                     SMT1PRL         equ	777	;# 
   502   00030A                     SMT1PRH         equ	778	;# 
   503   00030B                     SMT1PRU         equ	779	;# 
   504   00030C                     SMT1CON0        equ	780	;# 
   505   00030D                     SMT1CON1        equ	781	;# 
   506   00030E                     SMT1STAT        equ	782	;# 
   507   00030F                     SMT1CLK         equ	783	;# 
   508   000310                     SMT1SIG         equ	784	;# 
   509   000311                     SMT1WIN         equ	785	;# 
   510   000318                     TMR0L           equ	792	;# 
   511   000318                     TMR0            equ	792	;# 
   512   000319                     TMR0H           equ	793	;# 
   513   000319                     PR0             equ	793	;# 
   514   00031A                     T0CON0          equ	794	;# 
   515   00031B                     T0CON1          equ	795	;# 
   516   00031C                     TMR1            equ	796	;# 
   517   00031C                     TMR1L           equ	796	;# 
   518   00031D                     TMR1H           equ	797	;# 
   519   00031E                     T1CON           equ	798	;# 
   520   00031E                     TMR1CON         equ	798	;# 
   521   00031F                     T1GCON          equ	799	;# 
   522   00031F                     TMR1GCON        equ	799	;# 
   523   000320                     T1GATE          equ	800	;# 
   524   000320                     TMR1GATE        equ	800	;# 
   525   000321                     T1CLK           equ	801	;# 
   526   000321                     TMR1CLK         equ	801	;# 
   527   000321                     PR1             equ	801	;# 
   528   000322                     T2TMR           equ	802	;# 
   529   000322                     TMR2            equ	802	;# 
   530   000323                     T2PR            equ	803	;# 
   531   000323                     PR2             equ	803	;# 
   532   000324                     T2CON           equ	804	;# 
   533   000325                     T2HLT           equ	805	;# 
   534   000326                     T2CLKCON        equ	806	;# 
   535   000326                     T2CLK           equ	806	;# 
   536   000327                     T2RST           equ	807	;# 
   537   000328                     TMR3            equ	808	;# 
   538   000328                     TMR3L           equ	808	;# 
   539   000329                     TMR3H           equ	809	;# 
   540   00032A                     T3CON           equ	810	;# 
   541   00032A                     TMR3CON         equ	810	;# 
   542   00032B                     T3GCON          equ	811	;# 
   543   00032B                     TMR3GCON        equ	811	;# 
   544   00032C                     T3GATE          equ	812	;# 
   545   00032C                     TMR3GATE        equ	812	;# 
   546   00032D                     T3CLK           equ	813	;# 
   547   00032D                     TMR3CLK         equ	813	;# 
   548   00032D                     PR3             equ	813	;# 
   549   00032E                     T4TMR           equ	814	;# 
   550   00032E                     TMR4            equ	814	;# 
   551   00032F                     T4PR            equ	815	;# 
   552   00032F                     PR4             equ	815	;# 
   553   000330                     T4CON           equ	816	;# 
   554   000331                     T4HLT           equ	817	;# 
   555   000332                     T4CLKCON        equ	818	;# 
   556   000332                     T4CLK           equ	818	;# 
   557   000333                     T4RST           equ	819	;# 
   558   000334                     TMR5            equ	820	;# 
   559   000334                     TMR5L           equ	820	;# 
   560   000335                     TMR5H           equ	821	;# 
   561   000336                     T5CON           equ	822	;# 
   562   000336                     TMR5CON         equ	822	;# 
   563   000337                     T5GCON          equ	823	;# 
   564   000337                     TMR5GCON        equ	823	;# 
   565   000338                     T5GATE          equ	824	;# 
   566   000338                     TMR5GATE        equ	824	;# 
   567   000339                     T5CLK           equ	825	;# 
   568   000339                     TMR5CLK         equ	825	;# 
   569   000339                     PR5             equ	825	;# 
   570   00033A                     T6TMR           equ	826	;# 
   571   00033A                     TMR6            equ	826	;# 
   572   00033B                     T6PR            equ	827	;# 
   573   00033B                     PR6             equ	827	;# 
   574   00033C                     T6CON           equ	828	;# 
   575   00033D                     T6HLT           equ	829	;# 
   576   00033E                     T6CLKCON        equ	830	;# 
   577   00033E                     T6CLK           equ	830	;# 
   578   00033F                     T6RST           equ	831	;# 
   579   000340                     CCPR1           equ	832	;# 
   580   000340                     CCPR1L          equ	832	;# 
   581   000341                     CCPR1H          equ	833	;# 
   582   000342                     CCP1CON         equ	834	;# 
   583   000343                     CCP1CAP         equ	835	;# 
   584   000344                     CCPR2           equ	836	;# 
   585   000344                     CCPR2L          equ	836	;# 
   586   000345                     CCPR2H          equ	837	;# 
   587   000346                     CCP2CON         equ	838	;# 
   588   000347                     CCP2CAP         equ	839	;# 
   589   000348                     CCPR3           equ	840	;# 
   590   000348                     CCPR3L          equ	840	;# 
   591   000349                     CCPR3H          equ	841	;# 
   592   00034A                     CCP3CON         equ	842	;# 
   593   00034B                     CCP3CAP         equ	843	;# 
   594   00034C                     CCPTMRS0        equ	844	;# 
   595   00034F                     CRCDATA         equ	847	;# 
   596   00034F                     CRCDATL         equ	847	;# 
   597   000350                     CRCDATH         equ	848	;# 
   598   000351                     CRCACC          equ	849	;# 
   599   000351                     CRCACCL         equ	849	;# 
   600   000352                     CRCACCH         equ	850	;# 
   601   000353                     CRCSHFT         equ	851	;# 
   602   000353                     CRCSHIFTL       equ	851	;# 
   603   000354                     CRCSHIFTH       equ	852	;# 
   604   000355                     CRCXOR          equ	853	;# 
   605   000355                     CRCXORL         equ	853	;# 
   606   000356                     CRCXORH         equ	854	;# 
   607   000357                     CRCCON0         equ	855	;# 
   608   000358                     CRCCON1         equ	856	;# 
   609   00035A                     SCANLADR        equ	858	;# 
   610   00035A                     SCANLADRL       equ	858	;# 
   611   00035B                     SCANLADRH       equ	859	;# 
   612   00035C                     SCANLADRU       equ	860	;# 
   613   00035D                     SCANHADR        equ	861	;# 
   614   00035D                     SCANHADRL       equ	861	;# 
   615   00035E                     SCANHADRH       equ	862	;# 
   616   00035F                     SCANHADRU       equ	863	;# 
   617   000360                     SCANCON0        equ	864	;# 
   618   000361                     SCANTRIG        equ	865	;# 
   619   000362                     IPR0            equ	866	;# 
   620   000363                     IPR1            equ	867	;# 
   621   000364                     IPR2            equ	868	;# 
   622   000365                     IPR3            equ	869	;# 
   623   000366                     IPR4            equ	870	;# 
   624   000367                     IPR5            equ	871	;# 
   625   000368                     IPR6            equ	872	;# 
   626   000369                     IPR7            equ	873	;# 
   627   00036A                     IPR8            equ	874	;# 
   628   00036B                     IPR9            equ	875	;# 
   629   00036C                     IPR10           equ	876	;# 
   630   00036D                     IPR11           equ	877	;# 
   631   00036E                     IPR12           equ	878	;# 
   632   00036F                     IPR13           equ	879	;# 
   633   000370                     IPR14           equ	880	;# 
   634   000371                     IPR15           equ	881	;# 
   635   000373                     STATUS_CSHAD    equ	883	;# 
   636   000374                     WREG_CSHAD      equ	884	;# 
   637   000375                     BSR_CSHAD       equ	885	;# 
   638   000376                     SHADCON         equ	886	;# 
   639   000377                     STATUS_SHAD     equ	887	;# 
   640   000378                     WREG_SHAD       equ	888	;# 
   641   000379                     BSR_SHAD        equ	889	;# 
   642   00037A                     PCLATH_SHAD     equ	890	;# 
   643   00037B                     PCLATU_SHAD     equ	891	;# 
   644   00037C                     FSR0SH          equ	892	;# 
   645   00037C                     FSR0L_SHAD      equ	892	;# 
   646   00037D                     FSR0H_SHAD      equ	893	;# 
   647   00037E                     FSR1SH          equ	894	;# 
   648   00037E                     FSR1L_SHAD      equ	894	;# 
   649   00037F                     FSR1H_SHAD      equ	895	;# 
   650   000380                     FSR2SH          equ	896	;# 
   651   000380                     FSR2L_SHAD      equ	896	;# 
   652   000381                     FSR2H_SHAD      equ	897	;# 
   653   000382                     PRODSH          equ	898	;# 
   654   000382                     PRODL_SHAD      equ	898	;# 
   655   000383                     PRODH_SHAD      equ	899	;# 
   656   0003BC                     CWG1CLK         equ	956	;# 
   657   0003BC                     CWG1CLKCON      equ	956	;# 
   658   0003BD                     CWG1ISM         equ	957	;# 
   659   0003BD                     CWG1DAT         equ	957	;# 
   660   0003BE                     CWG1DBR         equ	958	;# 
   661   0003BF                     CWG1DBF         equ	959	;# 
   662   0003C0                     CWG1CON0        equ	960	;# 
   663   0003C1                     CWG1CON1        equ	961	;# 
   664   0003C2                     CWG1AS0         equ	962	;# 
   665   0003C3                     CWG1AS1         equ	963	;# 
   666   0003C4                     CWG1STR         equ	964	;# 
   667   0003C5                     CWG2CLK         equ	965	;# 
   668   0003C5                     CWG2CLKCON      equ	965	;# 
   669   0003C6                     CWG2ISM         equ	966	;# 
   670   0003C6                     CWG2DAT         equ	966	;# 
   671   0003C7                     CWG2DBR         equ	967	;# 
   672   0003C8                     CWG2DBF         equ	968	;# 
   673   0003C9                     CWG2CON0        equ	969	;# 
   674   0003CA                     CWG2CON1        equ	970	;# 
   675   0003CB                     CWG2AS0         equ	971	;# 
   676   0003CC                     CWG2AS1         equ	972	;# 
   677   0003CD                     CWG2STR         equ	973	;# 
   678   0003CE                     CWG3CLK         equ	974	;# 
   679   0003CE                     CWG3CLKCON      equ	974	;# 
   680   0003CF                     CWG3ISM         equ	975	;# 
   681   0003CF                     CWG3DAT         equ	975	;# 
   682   0003D0                     CWG3DBR         equ	976	;# 
   683   0003D1                     CWG3DBF         equ	977	;# 
   684   0003D2                     CWG3CON0        equ	978	;# 
   685   0003D3                     CWG3CON1        equ	979	;# 
   686   0003D4                     CWG3AS0         equ	980	;# 
   687   0003D5                     CWG3AS1         equ	981	;# 
   688   0003D6                     CWG3STR         equ	982	;# 
   689   0003D7                     FVRCON          equ	983	;# 
   690   0003D8                     ADCPCON         equ	984	;# 
   691   0003D8                     ADCP            equ	984	;# 
   692   0003D9                     ADLTH           equ	985	;# 
   693   0003D9                     ADLTHL          equ	985	;# 
   694   0003DA                     ADLTHH          equ	986	;# 
   695   0003DB                     ADUTH           equ	987	;# 
   696   0003DB                     ADUTHL          equ	987	;# 
   697   0003DC                     ADUTHH          equ	988	;# 
   698   0003DD                     ADERR           equ	989	;# 
   699   0003DD                     ADERRL          equ	989	;# 
   700   0003DE                     ADERRH          equ	990	;# 
   701   0003DF                     ADSTPT          equ	991	;# 
   702   0003DF                     ADSTPTL         equ	991	;# 
   703   0003E0                     ADSTPTH         equ	992	;# 
   704   0003E1                     ADFLTR          equ	993	;# 
   705   0003E1                     ADFLTRL         equ	993	;# 
   706   0003E2                     ADFLTRH         equ	994	;# 
   707   0003E3                     ADACC           equ	995	;# 
   708   0003E3                     ADACCL          equ	995	;# 
   709   0003E4                     ADACCH          equ	996	;# 
   710   0003E5                     ADACCU          equ	997	;# 
   711   0003E6                     ADCNT           equ	998	;# 
   712   0003E7                     ADRPT           equ	999	;# 
   713   0003E8                     ADPREV          equ	1000	;# 
   714   0003E8                     ADPREVL         equ	1000	;# 
   715   0003E9                     ADPREVH         equ	1001	;# 
   716   0003EA                     ADRES           equ	1002	;# 
   717   0003EA                     ADRESL          equ	1002	;# 
   718   0003EB                     ADRESH          equ	1003	;# 
   719   0003EC                     ADPCH           equ	1004	;# 
   720   0003EE                     ADACQ           equ	1006	;# 
   721   0003EE                     ADACQL          equ	1006	;# 
   722   0003EF                     ADACQH          equ	1007	;# 
   723   0003F0                     ADCAP           equ	1008	;# 
   724   0003F1                     ADPRE           equ	1009	;# 
   725   0003F1                     ADPREL          equ	1009	;# 
   726   0003F2                     ADPREH          equ	1010	;# 
   727   0003F3                     ADCON0          equ	1011	;# 
   728   0003F4                     ADCON1          equ	1012	;# 
   729   0003F5                     ADCON2          equ	1013	;# 
   730   0003F6                     ADCON3          equ	1014	;# 
   731   0003F7                     ADSTAT          equ	1015	;# 
   732   0003F8                     ADREF           equ	1016	;# 
   733   0003F9                     ADACT           equ	1017	;# 
   734   0003FA                     ADCLK           equ	1018	;# 
   735   000400                     ANSELA          equ	1024	;# 
   736   000401                     WPUA            equ	1025	;# 
   737   000402                     ODCONA          equ	1026	;# 
   738   000403                     SLRCONA         equ	1027	;# 
   739   000404                     INLVLA          equ	1028	;# 
   740   000405                     IOCAP           equ	1029	;# 
   741   000406                     IOCAN           equ	1030	;# 
   742   000407                     IOCAF           equ	1031	;# 
   743   000408                     ANSELB          equ	1032	;# 
   744   000409                     WPUB            equ	1033	;# 
   745   00040A                     ODCONB          equ	1034	;# 
   746   00040B                     SLRCONB         equ	1035	;# 
   747   00040C                     INLVLB          equ	1036	;# 
   748   00040D                     IOCBP           equ	1037	;# 
   749   00040E                     IOCBN           equ	1038	;# 
   750   00040F                     IOCBF           equ	1039	;# 
   751   000410                     ANSELC          equ	1040	;# 
   752   000411                     WPUC            equ	1041	;# 
   753   000412                     ODCONC          equ	1042	;# 
   754   000413                     SLRCONC         equ	1043	;# 
   755   000414                     INLVLC          equ	1044	;# 
   756   000415                     IOCCP           equ	1045	;# 
   757   000416                     IOCCN           equ	1046	;# 
   758   000417                     IOCCF           equ	1047	;# 
   759   000418                     ANSELD          equ	1048	;# 
   760   000419                     WPUD            equ	1049	;# 
   761   00041A                     ODCOND          equ	1050	;# 
   762   00041B                     SLRCOND         equ	1051	;# 
   763   00041C                     INLVLD          equ	1052	;# 
   764   000420                     ANSELE          equ	1056	;# 
   765   000421                     WPUE            equ	1057	;# 
   766   000422                     ODCONE          equ	1058	;# 
   767   000423                     SLRCONE         equ	1059	;# 
   768   000424                     INLVLE          equ	1060	;# 
   769   000425                     IOCEP           equ	1061	;# 
   770   000426                     IOCEN           equ	1062	;# 
   771   000427                     IOCEF           equ	1063	;# 
   772   000428                     ANSELF          equ	1064	;# 
   773   000429                     WPUF            equ	1065	;# 
   774   00042A                     ODCONF          equ	1066	;# 
   775   00042B                     SLRCONF         equ	1067	;# 
   776   00042C                     INLVLF          equ	1068	;# 
   777   000440                     NCO1ACC         equ	1088	;# 
   778   000440                     NCO1ACCL        equ	1088	;# 
   779   000441                     NCO1ACCH        equ	1089	;# 
   780   000442                     NCO1ACCU        equ	1090	;# 
   781   000443                     NCO1INC         equ	1091	;# 
   782   000443                     NCO1INCL        equ	1091	;# 
   783   000444                     NCO1INCH        equ	1092	;# 
   784   000445                     NCO1INCU        equ	1093	;# 
   785   000446                     NCO1CON         equ	1094	;# 
   786   000447                     NCO1CLK         equ	1095	;# 
   787   000448                     NCO2ACC         equ	1096	;# 
   788   000448                     NCO2ACCL        equ	1096	;# 
   789   000449                     NCO2ACCH        equ	1097	;# 
   790   00044A                     NCO2ACCU        equ	1098	;# 
   791   00044B                     NCO2INC         equ	1099	;# 
   792   00044B                     NCO2INCL        equ	1099	;# 
   793   00044C                     NCO2INCH        equ	1100	;# 
   794   00044D                     NCO2INCU        equ	1101	;# 
   795   00044E                     NCO2CON         equ	1102	;# 
   796   00044F                     NCO2CLK         equ	1103	;# 
   797   000450                     NCO3ACC         equ	1104	;# 
   798   000450                     NCO3ACCL        equ	1104	;# 
   799   000451                     NCO3ACCH        equ	1105	;# 
   800   000452                     NCO3ACCU        equ	1106	;# 
   801   000453                     NCO3INC         equ	1107	;# 
   802   000453                     NCO3INCL        equ	1107	;# 
   803   000454                     NCO3INCH        equ	1108	;# 
   804   000455                     NCO3INCU        equ	1109	;# 
   805   000456                     NCO3CON         equ	1110	;# 
   806   000457                     NCO3CLK         equ	1111	;# 
   807   000459                     IVTLOCK         equ	1113	;# 
   808   00045A                     IVTAD           equ	1114	;# 
   809   00045A                     IVTADL          equ	1114	;# 
   810   00045B                     IVTADH          equ	1115	;# 
   811   00045C                     IVTADU          equ	1116	;# 
   812   00045D                     IVTBASE         equ	1117	;# 
   813   00045D                     IVTBASEL        equ	1117	;# 
   814   00045E                     IVTBASEH        equ	1118	;# 
   815   00045F                     IVTBASEU        equ	1119	;# 
   816   000460                     PWM1ERS         equ	1120	;# 
   817   000461                     PWM1CLK         equ	1121	;# 
   818   000462                     PWM1LDS         equ	1122	;# 
   819   000463                     PWM1PR          equ	1123	;# 
   820   000463                     PWM1PRL         equ	1123	;# 
   821   000464                     PWM1PRH         equ	1124	;# 
   822   000465                     PWM1CPRE        equ	1125	;# 
   823   000466                     PWM1PIPOS       equ	1126	;# 
   824   000467                     PWM1GIR         equ	1127	;# 
   825   000468                     PWM1GIE         equ	1128	;# 
   826   000469                     PWM1CON         equ	1129	;# 
   827   00046A                     PWM1S1CFG       equ	1130	;# 
   828   00046B                     PWM1S1P1        equ	1131	;# 
   829   00046B                     PWM1S1P1L       equ	1131	;# 
   830   00046C                     PWM1S1P1H       equ	1132	;# 
   831   00046D                     PWM1S1P2        equ	1133	;# 
   832   00046D                     PWM1S1P2L       equ	1133	;# 
   833   00046E                     PWM1S1P2H       equ	1134	;# 
   834   00046F                     PWM2ERS         equ	1135	;# 
   835   000470                     PWM2CLK         equ	1136	;# 
   836   000471                     PWM2LDS         equ	1137	;# 
   837   000472                     PWM2PR          equ	1138	;# 
   838   000472                     PWM2PRL         equ	1138	;# 
   839   000473                     PWM2PRH         equ	1139	;# 
   840   000474                     PWM2CPRE        equ	1140	;# 
   841   000475                     PWM2PIPOS       equ	1141	;# 
   842   000476                     PWM2GIR         equ	1142	;# 
   843   000477                     PWM2GIE         equ	1143	;# 
   844   000478                     PWM2CON         equ	1144	;# 
   845   000479                     PWM2S1CFG       equ	1145	;# 
   846   00047A                     PWM2S1P1        equ	1146	;# 
   847   00047A                     PWM2S1P1L       equ	1146	;# 
   848   00047B                     PWM2S1P1H       equ	1147	;# 
   849   00047C                     PWM2S1P2        equ	1148	;# 
   850   00047C                     PWM2S1P2L       equ	1148	;# 
   851   00047D                     PWM2S1P2H       equ	1149	;# 
   852   00047E                     PWM3ERS         equ	1150	;# 
   853   00047F                     PWM3CLK         equ	1151	;# 
   854   000480                     PWM3LDS         equ	1152	;# 
   855   000481                     PWM3PR          equ	1153	;# 
   856   000481                     PWM3PRL         equ	1153	;# 
   857   000482                     PWM3PRH         equ	1154	;# 
   858   000483                     PWM3CPRE        equ	1155	;# 
   859   000484                     PWM3PIPOS       equ	1156	;# 
   860   000485                     PWM3GIR         equ	1157	;# 
   861   000486                     PWM3GIE         equ	1158	;# 
   862   000487                     PWM3CON         equ	1159	;# 
   863   000488                     PWM3S1CFG       equ	1160	;# 
   864   000489                     PWM3S1P1        equ	1161	;# 
   865   000489                     PWM3S1P1L       equ	1161	;# 
   866   00048A                     PWM3S1P1H       equ	1162	;# 
   867   00048B                     PWM3S1P2        equ	1163	;# 
   868   00048B                     PWM3S1P2L       equ	1163	;# 
   869   00048C                     PWM3S1P2H       equ	1164	;# 
   870   00049C                     PWMLOAD         equ	1180	;# 
   871   00049D                     PWMEN           equ	1181	;# 
   872   00049E                     PIE0            equ	1182	;# 
   873   00049F                     PIE1            equ	1183	;# 
   874   0004A0                     PIE2            equ	1184	;# 
   875   0004A1                     PIE3            equ	1185	;# 
   876   0004A2                     PIE4            equ	1186	;# 
   877   0004A3                     PIE5            equ	1187	;# 
   878   0004A4                     PIE6            equ	1188	;# 
   879   0004A5                     PIE7            equ	1189	;# 
   880   0004A6                     PIE8            equ	1190	;# 
   881   0004A7                     PIE9            equ	1191	;# 
   882   0004A8                     PIE10           equ	1192	;# 
   883   0004A9                     PIE11           equ	1193	;# 
   884   0004AA                     PIE12           equ	1194	;# 
   885   0004AB                     PIE13           equ	1195	;# 
   886   0004AC                     PIE14           equ	1196	;# 
   887   0004AD                     PIE15           equ	1197	;# 
   888   0004AE                     PIR0            equ	1198	;# 
   889   0004AF                     PIR1            equ	1199	;# 
   890   0004B0                     PIR2            equ	1200	;# 
   891   0004B1                     PIR3            equ	1201	;# 
   892   0004B2                     PIR4            equ	1202	;# 
   893   0004B3                     PIR5            equ	1203	;# 
   894   0004B4                     PIR6            equ	1204	;# 
   895   0004B5                     PIR7            equ	1205	;# 
   896   0004B6                     PIR8            equ	1206	;# 
   897   0004B7                     PIR9            equ	1207	;# 
   898   0004B8                     PIR10           equ	1208	;# 
   899   0004B9                     PIR11           equ	1209	;# 
   900   0004BA                     PIR12           equ	1210	;# 
   901   0004BB                     PIR13           equ	1211	;# 
   902   0004BC                     PIR14           equ	1212	;# 
   903   0004BD                     PIR15           equ	1213	;# 
   904   0004BE                     LATA            equ	1214	;# 
   905   0004BF                     LATB            equ	1215	;# 
   906   0004C0                     LATC            equ	1216	;# 
   907   0004C1                     LATD            equ	1217	;# 
   908   0004C2                     LATE            equ	1218	;# 
   909   0004C3                     LATF            equ	1219	;# 
   910   0004C6                     TRISA           equ	1222	;# 
   911   0004C7                     TRISB           equ	1223	;# 
   912   0004C8                     TRISC           equ	1224	;# 
   913   0004C9                     TRISD           equ	1225	;# 
   914   0004CA                     TRISE           equ	1226	;# 
   915   0004CB                     TRISF           equ	1227	;# 
   916   0004CE                     PORTA           equ	1230	;# 
   917   0004CF                     PORTB           equ	1231	;# 
   918   0004D0                     PORTC           equ	1232	;# 
   919   0004D1                     PORTD           equ	1233	;# 
   920   0004D2                     PORTE           equ	1234	;# 
   921   0004D3                     PORTF           equ	1235	;# 
   922   0004D6                     INTCON0         equ	1238	;# 
   923   0004D7                     INTCON1         equ	1239	;# 
   924   0004D8                     STATUS          equ	1240	;# 
   925   0004D9                     FSR2            equ	1241	;# 
   926   0004D9                     FSR2L           equ	1241	;# 
   927   0004DA                     FSR2H           equ	1242	;# 
   928   0004DB                     PLUSW2          equ	1243	;# 
   929   0004DC                     PREINC2         equ	1244	;# 
   930   0004DD                     POSTDEC2        equ	1245	;# 
   931   0004DE                     POSTINC2        equ	1246	;# 
   932   0004DF                     INDF2           equ	1247	;# 
   933   0004E0                     BSR             equ	1248	;# 
   934   0004E1                     FSR1            equ	1249	;# 
   935   0004E1                     FSR1L           equ	1249	;# 
   936   0004E2                     FSR1H           equ	1250	;# 
   937   0004E3                     PLUSW1          equ	1251	;# 
   938   0004E4                     PREINC1         equ	1252	;# 
   939   0004E5                     POSTDEC1        equ	1253	;# 
   940   0004E6                     POSTINC1        equ	1254	;# 
   941   0004E7                     INDF1           equ	1255	;# 
   942   0004E8                     WREG            equ	1256	;# 
   943   0004E9                     FSR0            equ	1257	;# 
   944   0004E9                     FSR0L           equ	1257	;# 
   945   0004EA                     FSR0H           equ	1258	;# 
   946   0004EB                     PLUSW0          equ	1259	;# 
   947   0004EC                     PREINC0         equ	1260	;# 
   948   0004ED                     POSTDEC0        equ	1261	;# 
   949   0004EE                     POSTINC0        equ	1262	;# 
   950   0004EF                     INDF0           equ	1263	;# 
   951   0004F0                     PCON0           equ	1264	;# 
   952   0004F1                     PCON1           equ	1265	;# 
   953   0004F2                     CPUDOZE         equ	1266	;# 
   954   0004F3                     PROD            equ	1267	;# 
   955   0004F3                     PRODL           equ	1267	;# 
   956   0004F4                     PRODH           equ	1268	;# 
   957   0004F5                     TABLAT          equ	1269	;# 
   958   0004F6                     TBLPTR          equ	1270	;# 
   959   0004F6                     TBLPTRL         equ	1270	;# 
   960   0004F7                     TBLPTRH         equ	1271	;# 
   961   0004F8                     TBLPTRU         equ	1272	;# 
   962   0004F9                     PCLAT           equ	1273	;# 
   963   0004F9                     PCL             equ	1273	;# 
   964   0004FA                     PCLATH          equ	1274	;# 
   965   0004FB                     PCLATU          equ	1275	;# 
   966   0004FC                     STKPTR          equ	1276	;# 
   967   0004FD                     TOS             equ	1277	;# 
   968   0004FD                     TOSL            equ	1277	;# 
   969   0004FE                     TOSH            equ	1278	;# 
   970   0004FF                     TOSU            equ	1279	;# 
   971   000039                     CLKRCON         equ	57	;# 
   972   00003A                     CLKRCLK         equ	58	;# 
   973   000040                     NVMCON0         equ	64	;# 
   974   000041                     NVMCON1         equ	65	;# 
   975   000042                     NVMLOCK         equ	66	;# 
   976   000043                     NVMADR          equ	67	;# 
   977   000043                     NVMADRL         equ	67	;# 
   978   000044                     NVMADRH         equ	68	;# 
   979   000045                     NVMADRU         equ	69	;# 
   980   000046                     NVMDAT          equ	70	;# 
   981   000046                     NVMDATL         equ	70	;# 
   982   000047                     NVMDATH         equ	71	;# 
   983   000048                     VREGCON         equ	72	;# 
   984   000049                     BORCON          equ	73	;# 
   985   00004A                     HLVDCON0        equ	74	;# 
   986   00004B                     HLVDCON1        equ	75	;# 
   987   00004C                     ZCDCON          equ	76	;# 
   988   000060                     PMD0            equ	96	;# 
   989   000061                     PMD1            equ	97	;# 
   990   000063                     PMD3            equ	99	;# 
   991   000064                     PMD4            equ	100	;# 
   992   000065                     PMD5            equ	101	;# 
   993   000066                     PMD6            equ	102	;# 
   994   000067                     PMD7            equ	103	;# 
   995   000068                     PMD8            equ	104	;# 
   996   00006A                     MD1CON0         equ	106	;# 
   997   00006B                     MD1CON1         equ	107	;# 
   998   00006C                     MD1SRC          equ	108	;# 
   999   00006D                     MD1CARL         equ	109	;# 
  1000   00006E                     MD1CARH         equ	110	;# 
  1001   00006F                     CMOUT           equ	111	;# 
  1002   000070                     CM1CON0         equ	112	;# 
  1003   000071                     CM1CON1         equ	113	;# 
  1004   000072                     CM1NCH          equ	114	;# 
  1005   000073                     CM1PCH          equ	115	;# 
  1006   000074                     CM2CON0         equ	116	;# 
  1007   000075                     CM2CON1         equ	117	;# 
  1008   000076                     CM2NCH          equ	118	;# 
  1009   000077                     CM2PCH          equ	119	;# 
  1010   000078                     WDTCON0         equ	120	;# 
  1011   000079                     WDTCON1         equ	121	;# 
  1012   00007A                     WDTPS           equ	122	;# 
  1013   00007A                     WDTPSL          equ	122	;# 
  1014   00007B                     WDTPSH          equ	123	;# 
  1015   00007C                     WDTTMR          equ	124	;# 
  1016   00007D                     DAC1DAT         equ	125	;# 
  1017   00007D                     DAC1DATL        equ	125	;# 
  1018   00007F                     DAC1CON         equ	127	;# 
  1019   000080                     SPI1RXB         equ	128	;# 
  1020   000081                     SPI1TXB         equ	129	;# 
  1021   000082                     SPI1TCNT        equ	130	;# 
  1022   000082                     SPI1TCNTL       equ	130	;# 
  1023   000083                     SPI1TCNTH       equ	131	;# 
  1024   000084                     SPI1CON0        equ	132	;# 
  1025   000085                     SPI1CON1        equ	133	;# 
  1026   000086                     SPI1CON2        equ	134	;# 
  1027   000087                     SPI1STATUS      equ	135	;# 
  1028   000088                     SPI1TWIDTH      equ	136	;# 
  1029   000089                     SPI1BAUD        equ	137	;# 
  1030   00008A                     SPI1INTF        equ	138	;# 
  1031   00008B                     SPI1INTE        equ	139	;# 
  1032   00008C                     SPI1CLK         equ	140	;# 
  1033   00008D                     SPI2RXB         equ	141	;# 
  1034   00008E                     SPI2TXB         equ	142	;# 
  1035   00008F                     SPI2TCNT        equ	143	;# 
  1036   00008F                     SPI2TCNTL       equ	143	;# 
  1037   000090                     SPI2TCNTH       equ	144	;# 
  1038   000091                     SPI2CON0        equ	145	;# 
  1039   000092                     SPI2CON1        equ	146	;# 
  1040   000093                     SPI2CON2        equ	147	;# 
  1041   000094                     SPI2STATUS      equ	148	;# 
  1042   000095                     SPI2TWIDTH      equ	149	;# 
  1043   000096                     SPI2BAUD        equ	150	;# 
  1044   000097                     SPI2INTF        equ	151	;# 
  1045   000098                     SPI2INTE        equ	152	;# 
  1046   000099                     SPI2CLK         equ	153	;# 
  1047   0000AC                     ACTCON          equ	172	;# 
  1048   0000AD                     OSCCON1         equ	173	;# 
  1049   0000AE                     OSCCON2         equ	174	;# 
  1050   0000AF                     OSCCON3         equ	175	;# 
  1051   0000B0                     OSCTUNE         equ	176	;# 
  1052   0000B1                     OSCFRQ          equ	177	;# 
  1053   0000B1                     OSCFREQ         equ	177	;# 
  1054   0000B2                     OSCSTAT         equ	178	;# 
  1055   0000B2                     OSCSTAT1        equ	178	;# 
  1056   0000B3                     OSCEN           equ	179	;# 
  1057   0000B4                     PRLOCK          equ	180	;# 
  1058   0000B5                     SCANPR          equ	181	;# 
  1059   0000B6                     DMA1PR          equ	182	;# 
  1060   0000B7                     DMA2PR          equ	183	;# 
  1061   0000B8                     DMA3PR          equ	184	;# 
  1062   0000B9                     DMA4PR          equ	185	;# 
  1063   0000BA                     DMA5PR          equ	186	;# 
  1064   0000BB                     DMA6PR          equ	187	;# 
  1065   0000BE                     MAINPR          equ	190	;# 
  1066   0000BF                     ISRPR           equ	191	;# 
  1067   0000D4                     CLCDATA         equ	212	;# 
  1068   0000D5                     CLCSELECT       equ	213	;# 
  1069   0000D6                     CLCnCON         equ	214	;# 
  1070   0000D7                     CLCnPOL         equ	215	;# 
  1071   0000D8                     CLCnSEL0        equ	216	;# 
  1072   0000D9                     CLCnSEL1        equ	217	;# 
  1073   0000DA                     CLCnSEL2        equ	218	;# 
  1074   0000DB                     CLCnSEL3        equ	219	;# 
  1075   0000DC                     CLCnGLS0        equ	220	;# 
  1076   0000DD                     CLCnGLS1        equ	221	;# 
  1077   0000DE                     CLCnGLS2        equ	222	;# 
  1078   0000DF                     CLCnGLS3        equ	223	;# 
  1079   0000E8                     DMASELECT       equ	232	;# 
  1080   0000E9                     DMAnBUF         equ	233	;# 
  1081   0000EA                     DMAnDCNT        equ	234	;# 
  1082   0000EA                     DMAnDCNTL       equ	234	;# 
  1083   0000EB                     DMAnDCNTH       equ	235	;# 
  1084   0000EC                     DMAnDPTR        equ	236	;# 
  1085   0000EC                     DMAnDPTRL       equ	236	;# 
  1086   0000ED                     DMAnDPTRH       equ	237	;# 
  1087   0000EE                     DMAnDSZ         equ	238	;# 
  1088   0000EE                     DMAnDSZL        equ	238	;# 
  1089   0000EF                     DMAnDSZH        equ	239	;# 
  1090   0000F0                     DMAnDSA         equ	240	;# 
  1091   0000F0                     DMAnDSAL        equ	240	;# 
  1092   0000F1                     DMAnDSAH        equ	241	;# 
  1093   0000F2                     DMAnSCNT        equ	242	;# 
  1094   0000F2                     DMAnSCNTL       equ	242	;# 
  1095   0000F3                     DMAnSCNTH       equ	243	;# 
  1096   0000F4                     DMAnSPTR        equ	244	;# 
  1097   0000F4                     DMAnSPTRL       equ	244	;# 
  1098   0000F5                     DMAnSPTRH       equ	245	;# 
  1099   0000F6                     DMAnSPTRU       equ	246	;# 
  1100   0000F7                     DMAnSSZ         equ	247	;# 
  1101   0000F7                     DMAnSSZL        equ	247	;# 
  1102   0000F8                     DMAnSSZH        equ	248	;# 
  1103   0000F9                     DMAnSSA         equ	249	;# 
  1104   0000F9                     DMAnSSAL        equ	249	;# 
  1105   0000FA                     DMAnSSAH        equ	250	;# 
  1106   0000FB                     DMAnSSAU        equ	251	;# 
  1107   0000FC                     DMAnCON0        equ	252	;# 
  1108   0000FD                     DMAnCON1        equ	253	;# 
  1109   0000FE                     DMAnAIRQ        equ	254	;# 
  1110   0000FF                     DMAnSIRQ        equ	255	;# 
  1111   000200                     PPSLOCK         equ	512	;# 
  1112   000201                     RA0PPS          equ	513	;# 
  1113   000202                     RA1PPS          equ	514	;# 
  1114   000203                     RA2PPS          equ	515	;# 
  1115   000204                     RA3PPS          equ	516	;# 
  1116   000205                     RA4PPS          equ	517	;# 
  1117   000206                     RA5PPS          equ	518	;# 
  1118   000207                     RA6PPS          equ	519	;# 
  1119   000208                     RA7PPS          equ	520	;# 
  1120   000209                     RB0PPS          equ	521	;# 
  1121   00020A                     RB1PPS          equ	522	;# 
  1122   00020B                     RB2PPS          equ	523	;# 
  1123   00020C                     RB3PPS          equ	524	;# 
  1124   00020D                     RB4PPS          equ	525	;# 
  1125   00020E                     RB5PPS          equ	526	;# 
  1126   00020F                     RB6PPS          equ	527	;# 
  1127   000210                     RB7PPS          equ	528	;# 
  1128   000211                     RC0PPS          equ	529	;# 
  1129   000212                     RC1PPS          equ	530	;# 
  1130   000213                     RC2PPS          equ	531	;# 
  1131   000214                     RC3PPS          equ	532	;# 
  1132   000215                     RC4PPS          equ	533	;# 
  1133   000216                     RC5PPS          equ	534	;# 
  1134   000217                     RC6PPS          equ	535	;# 
  1135   000218                     RC7PPS          equ	536	;# 
  1136   000219                     RD0PPS          equ	537	;# 
  1137   00021A                     RD1PPS          equ	538	;# 
  1138   00021B                     RD2PPS          equ	539	;# 
  1139   00021C                     RD3PPS          equ	540	;# 
  1140   00021D                     RD4PPS          equ	541	;# 
  1141   00021E                     RD5PPS          equ	542	;# 
  1142   00021F                     RD6PPS          equ	543	;# 
  1143   000220                     RD7PPS          equ	544	;# 
  1144   000221                     RE0PPS          equ	545	;# 
  1145   000222                     RE1PPS          equ	546	;# 
  1146   000223                     RE2PPS          equ	547	;# 
  1147   000229                     RF0PPS          equ	553	;# 
  1148   00022A                     RF1PPS          equ	554	;# 
  1149   00022B                     RF2PPS          equ	555	;# 
  1150   00022C                     RF3PPS          equ	556	;# 
  1151   00022D                     RF4PPS          equ	557	;# 
  1152   00022E                     RF5PPS          equ	558	;# 
  1153   00022F                     RF6PPS          equ	559	;# 
  1154   000230                     RF7PPS          equ	560	;# 
  1155   00023E                     INT0PPS         equ	574	;# 
  1156   00023F                     INT1PPS         equ	575	;# 
  1157   000240                     INT2PPS         equ	576	;# 
  1158   000241                     T0CKIPPS        equ	577	;# 
  1159   000242                     T1CKIPPS        equ	578	;# 
  1160   000243                     T1GPPS          equ	579	;# 
  1161   000244                     T3CKIPPS        equ	580	;# 
  1162   000245                     T3GPPS          equ	581	;# 
  1163   000246                     T5CKIPPS        equ	582	;# 
  1164   000247                     T5GPPS          equ	583	;# 
  1165   000248                     T2INPPS         equ	584	;# 
  1166   000249                     T4INPPS         equ	585	;# 
  1167   00024A                     T6INPPS         equ	586	;# 
  1168   00024F                     CCP1PPS         equ	591	;# 
  1169   000250                     CCP2PPS         equ	592	;# 
  1170   000251                     CCP3PPS         equ	593	;# 
  1171   000253                     PWM1ERSPPS      equ	595	;# 
  1172   000254                     PWM2ERSPPS      equ	596	;# 
  1173   000255                     PWM3ERSPPS      equ	597	;# 
  1174   000257                     PWMIN0PPS       equ	599	;# 
  1175   000258                     PWMIN1PPS       equ	600	;# 
  1176   000259                     SMT1WINPPS      equ	601	;# 
  1177   00025A                     SMT1SIGPPS      equ	602	;# 
  1178   00025B                     CWG1PPS         equ	603	;# 
  1179   00025B                     CWG1INPPS       equ	603	;# 
  1180   00025C                     CWG2PPS         equ	604	;# 
  1181   00025C                     CWG2INPPS       equ	604	;# 
  1182   00025D                     CWG3PPS         equ	605	;# 
  1183   00025D                     CWG3INPPS       equ	605	;# 
  1184   00025E                     MD1CARLPPS      equ	606	;# 
  1185   00025E                     MDCARLPPS       equ	606	;# 
  1186   00025F                     MD1CARHPPS      equ	607	;# 
  1187   00025F                     MDCARHPPS       equ	607	;# 
  1188   000260                     MD1SRCPPS       equ	608	;# 
  1189   000260                     MDSRCPPS        equ	608	;# 
  1190   000261                     CLCIN0PPS       equ	609	;# 
  1191   000262                     CLCIN1PPS       equ	610	;# 
  1192   000263                     CLCIN2PPS       equ	611	;# 
  1193   000264                     CLCIN3PPS       equ	612	;# 
  1194   000265                     CLCIN4PPS       equ	613	;# 
  1195   000266                     CLCIN5PPS       equ	614	;# 
  1196   000267                     CLCIN6PPS       equ	615	;# 
  1197   000268                     CLCIN7PPS       equ	616	;# 
  1198   000269                     ADACTPPS        equ	617	;# 
  1199   00026A                     SPI1SCKPPS      equ	618	;# 
  1200   00026B                     SPI1SDIPPS      equ	619	;# 
  1201   00026C                     SPI1SSPPS       equ	620	;# 
  1202   00026D                     SPI2SCKPPS      equ	621	;# 
  1203   00026E                     SPI2SDIPPS      equ	622	;# 
  1204   00026F                     SPI2SSPPS       equ	623	;# 
  1205   000270                     I2C1SDAPPS      equ	624	;# 
  1206   000271                     I2C1SCLPPS      equ	625	;# 
  1207   000272                     U1RXPPS         equ	626	;# 
  1208   000273                     U1CTSPPS        equ	627	;# 
  1209   000274                     U2RXPPS         equ	628	;# 
  1210   000275                     U2CTSPPS        equ	629	;# 
  1211   000276                     U3RXPPS         equ	630	;# 
  1212   000277                     U3CTSPPS        equ	631	;# 
  1213   000278                     U4RXPPS         equ	632	;# 
  1214   000279                     U4CTSPPS        equ	633	;# 
  1215   00027A                     U5RXPPS         equ	634	;# 
  1216   00027B                     U5CTSPPS        equ	635	;# 
  1217   000286                     RC4I2C          equ	646	;# 
  1218   000287                     RC3I2C          equ	647	;# 
  1219   000288                     RB2I2C          equ	648	;# 
  1220   000289                     RB1I2C          equ	649	;# 
  1221   00028B                     I2C1RXB         equ	651	;# 
  1222   00028C                     I2C1TXB         equ	652	;# 
  1223   00028D                     I2C1CNT         equ	653	;# 
  1224   00028E                     I2C1ADB0        equ	654	;# 
  1225   00028F                     I2C1ADB1        equ	655	;# 
  1226   000290                     I2C1ADR0        equ	656	;# 
  1227   000291                     I2C1ADR1        equ	657	;# 
  1228   000292                     I2C1ADR2        equ	658	;# 
  1229   000293                     I2C1ADR3        equ	659	;# 
  1230   000294                     I2C1CON0        equ	660	;# 
  1231   000295                     I2C1CON1        equ	661	;# 
  1232   000296                     I2C1CON2        equ	662	;# 
  1233   000297                     I2C1ERR         equ	663	;# 
  1234   000298                     I2C1STAT0       equ	664	;# 
  1235   000299                     I2C1STAT1       equ	665	;# 
  1236   00029A                     I2C1PIR         equ	666	;# 
  1237   00029B                     I2C1PIE         equ	667	;# 
  1238   00029C                     I2C1CLK         equ	668	;# 
  1239   00029D                     I2C1BTO         equ	669	;# 
  1240   0002A1                     U1RXB           equ	673	;# 
  1241   0002A1                     U1RXBL          equ	673	;# 
  1242   0002A2                     U1RXCHK         equ	674	;# 
  1243   0002A3                     U1TXB           equ	675	;# 
  1244   0002A3                     U1TXBL          equ	675	;# 
  1245   0002A4                     U1TXCHK         equ	676	;# 
  1246   0002A5                     U1P1            equ	677	;# 
  1247   0002A5                     U1P1L           equ	677	;# 
  1248   0002A6                     U1P1H           equ	678	;# 
  1249   0002A7                     U1P2            equ	679	;# 
  1250   0002A7                     U1P2L           equ	679	;# 
  1251   0002A8                     U1P2H           equ	680	;# 
  1252   0002A9                     U1P3            equ	681	;# 
  1253   0002A9                     U1P3L           equ	681	;# 
  1254   0002AA                     U1P3H           equ	682	;# 
  1255   0002AB                     U1CON0          equ	683	;# 
  1256   0002AC                     U1CON1          equ	684	;# 
  1257   0002AD                     U1CON2          equ	685	;# 
  1258   0002AE                     U1BRG           equ	686	;# 
  1259   0002AE                     U1BRGL          equ	686	;# 
  1260   0002AF                     U1BRGH          equ	687	;# 
  1261   0002B0                     U1FIFO          equ	688	;# 
  1262   0002B1                     U1UIR           equ	689	;# 
  1263   0002B2                     U1ERRIR         equ	690	;# 
  1264   0002B3                     U1ERRIE         equ	691	;# 
  1265   0002B4                     U2RXB           equ	692	;# 
  1266   0002B4                     U2RXBL          equ	692	;# 
  1267   0002B6                     U2TXB           equ	694	;# 
  1268   0002B6                     U2TXBL          equ	694	;# 
  1269   0002B8                     U2P1            equ	696	;# 
  1270   0002B8                     U2P1L           equ	696	;# 
  1271   0002BA                     U2P2            equ	698	;# 
  1272   0002BA                     U2P2L           equ	698	;# 
  1273   0002BC                     U2P3            equ	700	;# 
  1274   0002BC                     U2P3L           equ	700	;# 
  1275   0002BE                     U2CON0          equ	702	;# 
  1276   0002BF                     U2CON1          equ	703	;# 
  1277   0002C0                     U2CON2          equ	704	;# 
  1278   0002C1                     U2BRG           equ	705	;# 
  1279   0002C1                     U2BRGL          equ	705	;# 
  1280   0002C2                     U2BRGH          equ	706	;# 
  1281   0002C3                     U2FIFO          equ	707	;# 
  1282   0002C4                     U2UIR           equ	708	;# 
  1283   0002C5                     U2ERRIR         equ	709	;# 
  1284   0002C6                     U2ERRIE         equ	710	;# 
  1285   0002C7                     U3RXB           equ	711	;# 
  1286   0002C7                     U3RXBL          equ	711	;# 
  1287   0002C9                     U3TXB           equ	713	;# 
  1288   0002C9                     U3TXBL          equ	713	;# 
  1289   0002CB                     U3P1            equ	715	;# 
  1290   0002CB                     U3P1L           equ	715	;# 
  1291   0002CD                     U3P2            equ	717	;# 
  1292   0002CD                     U3P2L           equ	717	;# 
  1293   0002CF                     U3P3            equ	719	;# 
  1294   0002CF                     U3P3L           equ	719	;# 
  1295   0002D1                     U3CON0          equ	721	;# 
  1296   0002D2                     U3CON1          equ	722	;# 
  1297   0002D3                     U3CON2          equ	723	;# 
  1298   0002D4                     U3BRG           equ	724	;# 
  1299   0002D4                     U3BRGL          equ	724	;# 
  1300   0002D5                     U3BRGH          equ	725	;# 
  1301   0002D6                     U3FIFO          equ	726	;# 
  1302   0002D7                     U3UIR           equ	727	;# 
  1303   0002D8                     U3ERRIR         equ	728	;# 
  1304   0002D9                     U3ERRIE         equ	729	;# 
  1305   0002DA                     U4RXB           equ	730	;# 
  1306   0002DA                     U4RXBL          equ	730	;# 
  1307   0002DC                     U4TXB           equ	732	;# 
  1308   0002DC                     U4TXBL          equ	732	;# 
  1309   0002DE                     U4P1            equ	734	;# 
  1310   0002DE                     U4P1L           equ	734	;# 
  1311   0002E0                     U4P2            equ	736	;# 
  1312   0002E0                     U4P2L           equ	736	;# 
  1313   0002E2                     U4P3            equ	738	;# 
  1314   0002E2                     U4P3L           equ	738	;# 
  1315   0002E4                     U4CON0          equ	740	;# 
  1316   0002E5                     U4CON1          equ	741	;# 
  1317   0002E6                     U4CON2          equ	742	;# 
  1318   0002E7                     U4BRG           equ	743	;# 
  1319   0002E7                     U4BRGL          equ	743	;# 
  1320   0002E8                     U4BRGH          equ	744	;# 
  1321   0002E9                     U4FIFO          equ	745	;# 
  1322   0002EA                     U4UIR           equ	746	;# 
  1323   0002EB                     U4ERRIR         equ	747	;# 
  1324   0002EC                     U4ERRIE         equ	748	;# 
  1325   0002ED                     U5RXB           equ	749	;# 
  1326   0002ED                     U5RXBL          equ	749	;# 
  1327   0002EF                     U5TXB           equ	751	;# 
  1328   0002EF                     U5TXBL          equ	751	;# 
  1329   0002F1                     U5P1            equ	753	;# 
  1330   0002F1                     U5P1L           equ	753	;# 
  1331   0002F3                     U5P2            equ	755	;# 
  1332   0002F3                     U5P2L           equ	755	;# 
  1333   0002F5                     U5P3            equ	757	;# 
  1334   0002F5                     U5P3L           equ	757	;# 
  1335   0002F7                     U5CON0          equ	759	;# 
  1336   0002F8                     U5CON1          equ	760	;# 
  1337   0002F9                     U5CON2          equ	761	;# 
  1338   0002FA                     U5BRG           equ	762	;# 
  1339   0002FA                     U5BRGL          equ	762	;# 
  1340   0002FB                     U5BRGH          equ	763	;# 
  1341   0002FC                     U5FIFO          equ	764	;# 
  1342   0002FD                     U5UIR           equ	765	;# 
  1343   0002FE                     U5ERRIR         equ	766	;# 
  1344   0002FF                     U5ERRIE         equ	767	;# 
  1345   000300                     SMT1TMR         equ	768	;# 
  1346   000300                     SMT1TMRL        equ	768	;# 
  1347   000301                     SMT1TMRH        equ	769	;# 
  1348   000302                     SMT1TMRU        equ	770	;# 
  1349   000303                     SMT1CPR         equ	771	;# 
  1350   000303                     SMT1CPRL        equ	771	;# 
  1351   000304                     SMT1CPRH        equ	772	;# 
  1352   000305                     SMT1CPRU        equ	773	;# 
  1353   000306                     SMT1CPW         equ	774	;# 
  1354   000306                     SMT1CPWL        equ	774	;# 
  1355   000307                     SMT1CPWH        equ	775	;# 
  1356   000308                     SMT1CPWU        equ	776	;# 
  1357   000309                     SMT1PR          equ	777	;# 
  1358   000309                     SMT1PRL         equ	777	;# 
  1359   00030A                     SMT1PRH         equ	778	;# 
  1360   00030B                     SMT1PRU         equ	779	;# 
  1361   00030C                     SMT1CON0        equ	780	;# 
  1362   00030D                     SMT1CON1        equ	781	;# 
  1363   00030E                     SMT1STAT        equ	782	;# 
  1364   00030F                     SMT1CLK         equ	783	;# 
  1365   000310                     SMT1SIG         equ	784	;# 
  1366   000311                     SMT1WIN         equ	785	;# 
  1367   000318                     TMR0L           equ	792	;# 
  1368   000318                     TMR0            equ	792	;# 
  1369   000319                     TMR0H           equ	793	;# 
  1370   000319                     PR0             equ	793	;# 
  1371   00031A                     T0CON0          equ	794	;# 
  1372   00031B                     T0CON1          equ	795	;# 
  1373   00031C                     TMR1            equ	796	;# 
  1374   00031C                     TMR1L           equ	796	;# 
  1375   00031D                     TMR1H           equ	797	;# 
  1376   00031E                     T1CON           equ	798	;# 
  1377   00031E                     TMR1CON         equ	798	;# 
  1378   00031F                     T1GCON          equ	799	;# 
  1379   00031F                     TMR1GCON        equ	799	;# 
  1380   000320                     T1GATE          equ	800	;# 
  1381   000320                     TMR1GATE        equ	800	;# 
  1382   000321                     T1CLK           equ	801	;# 
  1383   000321                     TMR1CLK         equ	801	;# 
  1384   000321                     PR1             equ	801	;# 
  1385   000322                     T2TMR           equ	802	;# 
  1386   000322                     TMR2            equ	802	;# 
  1387   000323                     T2PR            equ	803	;# 
  1388   000323                     PR2             equ	803	;# 
  1389   000324                     T2CON           equ	804	;# 
  1390   000325                     T2HLT           equ	805	;# 
  1391   000326                     T2CLKCON        equ	806	;# 
  1392   000326                     T2CLK           equ	806	;# 
  1393   000327                     T2RST           equ	807	;# 
  1394   000328                     TMR3            equ	808	;# 
  1395   000328                     TMR3L           equ	808	;# 
  1396   000329                     TMR3H           equ	809	;# 
  1397   00032A                     T3CON           equ	810	;# 
  1398   00032A                     TMR3CON         equ	810	;# 
  1399   00032B                     T3GCON          equ	811	;# 
  1400   00032B                     TMR3GCON        equ	811	;# 
  1401   00032C                     T3GATE          equ	812	;# 
  1402   00032C                     TMR3GATE        equ	812	;# 
  1403   00032D                     T3CLK           equ	813	;# 
  1404   00032D                     TMR3CLK         equ	813	;# 
  1405   00032D                     PR3             equ	813	;# 
  1406   00032E                     T4TMR           equ	814	;# 
  1407   00032E                     TMR4            equ	814	;# 
  1408   00032F                     T4PR            equ	815	;# 
  1409   00032F                     PR4             equ	815	;# 
  1410   000330                     T4CON           equ	816	;# 
  1411   000331                     T4HLT           equ	817	;# 
  1412   000332                     T4CLKCON        equ	818	;# 
  1413   000332                     T4CLK           equ	818	;# 
  1414   000333                     T4RST           equ	819	;# 
  1415   000334                     TMR5            equ	820	;# 
  1416   000334                     TMR5L           equ	820	;# 
  1417   000335                     TMR5H           equ	821	;# 
  1418   000336                     T5CON           equ	822	;# 
  1419   000336                     TMR5CON         equ	822	;# 
  1420   000337                     T5GCON          equ	823	;# 
  1421   000337                     TMR5GCON        equ	823	;# 
  1422   000338                     T5GATE          equ	824	;# 
  1423   000338                     TMR5GATE        equ	824	;# 
  1424   000339                     T5CLK           equ	825	;# 
  1425   000339                     TMR5CLK         equ	825	;# 
  1426   000339                     PR5             equ	825	;# 
  1427   00033A                     T6TMR           equ	826	;# 
  1428   00033A                     TMR6            equ	826	;# 
  1429   00033B                     T6PR            equ	827	;# 
  1430   00033B                     PR6             equ	827	;# 
  1431   00033C                     T6CON           equ	828	;# 
  1432   00033D                     T6HLT           equ	829	;# 
  1433   00033E                     T6CLKCON        equ	830	;# 
  1434   00033E                     T6CLK           equ	830	;# 
  1435   00033F                     T6RST           equ	831	;# 
  1436   000340                     CCPR1           equ	832	;# 
  1437   000340                     CCPR1L          equ	832	;# 
  1438   000341                     CCPR1H          equ	833	;# 
  1439   000342                     CCP1CON         equ	834	;# 
  1440   000343                     CCP1CAP         equ	835	;# 
  1441   000344                     CCPR2           equ	836	;# 
  1442   000344                     CCPR2L          equ	836	;# 
  1443   000345                     CCPR2H          equ	837	;# 
  1444   000346                     CCP2CON         equ	838	;# 
  1445   000347                     CCP2CAP         equ	839	;# 
  1446   000348                     CCPR3           equ	840	;# 
  1447   000348                     CCPR3L          equ	840	;# 
  1448   000349                     CCPR3H          equ	841	;# 
  1449   00034A                     CCP3CON         equ	842	;# 
  1450   00034B                     CCP3CAP         equ	843	;# 
  1451   00034C                     CCPTMRS0        equ	844	;# 
  1452   00034F                     CRCDATA         equ	847	;# 
  1453   00034F                     CRCDATL         equ	847	;# 
  1454   000350                     CRCDATH         equ	848	;# 
  1455   000351                     CRCACC          equ	849	;# 
  1456   000351                     CRCACCL         equ	849	;# 
  1457   000352                     CRCACCH         equ	850	;# 
  1458   000353                     CRCSHFT         equ	851	;# 
  1459   000353                     CRCSHIFTL       equ	851	;# 
  1460   000354                     CRCSHIFTH       equ	852	;# 
  1461   000355                     CRCXOR          equ	853	;# 
  1462   000355                     CRCXORL         equ	853	;# 
  1463   000356                     CRCXORH         equ	854	;# 
  1464   000357                     CRCCON0         equ	855	;# 
  1465   000358                     CRCCON1         equ	856	;# 
  1466   00035A                     SCANLADR        equ	858	;# 
  1467   00035A                     SCANLADRL       equ	858	;# 
  1468   00035B                     SCANLADRH       equ	859	;# 
  1469   00035C                     SCANLADRU       equ	860	;# 
  1470   00035D                     SCANHADR        equ	861	;# 
  1471   00035D                     SCANHADRL       equ	861	;# 
  1472   00035E                     SCANHADRH       equ	862	;# 
  1473   00035F                     SCANHADRU       equ	863	;# 
  1474   000360                     SCANCON0        equ	864	;# 
  1475   000361                     SCANTRIG        equ	865	;# 
  1476   000362                     IPR0            equ	866	;# 
  1477   000363                     IPR1            equ	867	;# 
  1478   000364                     IPR2            equ	868	;# 
  1479   000365                     IPR3            equ	869	;# 
  1480   000366                     IPR4            equ	870	;# 
  1481   000367                     IPR5            equ	871	;# 
  1482   000368                     IPR6            equ	872	;# 
  1483   000369                     IPR7            equ	873	;# 
  1484   00036A                     IPR8            equ	874	;# 
  1485   00036B                     IPR9            equ	875	;# 
  1486   00036C                     IPR10           equ	876	;# 
  1487   00036D                     IPR11           equ	877	;# 
  1488   00036E                     IPR12           equ	878	;# 
  1489   00036F                     IPR13           equ	879	;# 
  1490   000370                     IPR14           equ	880	;# 
  1491   000371                     IPR15           equ	881	;# 
  1492   000373                     STATUS_CSHAD    equ	883	;# 
  1493   000374                     WREG_CSHAD      equ	884	;# 
  1494   000375                     BSR_CSHAD       equ	885	;# 
  1495   000376                     SHADCON         equ	886	;# 
  1496   000377                     STATUS_SHAD     equ	887	;# 
  1497   000378                     WREG_SHAD       equ	888	;# 
  1498   000379                     BSR_SHAD        equ	889	;# 
  1499   00037A                     PCLATH_SHAD     equ	890	;# 
  1500   00037B                     PCLATU_SHAD     equ	891	;# 
  1501   00037C                     FSR0SH          equ	892	;# 
  1502   00037C                     FSR0L_SHAD      equ	892	;# 
  1503   00037D                     FSR0H_SHAD      equ	893	;# 
  1504   00037E                     FSR1SH          equ	894	;# 
  1505   00037E                     FSR1L_SHAD      equ	894	;# 
  1506   00037F                     FSR1H_SHAD      equ	895	;# 
  1507   000380                     FSR2SH          equ	896	;# 
  1508   000380                     FSR2L_SHAD      equ	896	;# 
  1509   000381                     FSR2H_SHAD      equ	897	;# 
  1510   000382                     PRODSH          equ	898	;# 
  1511   000382                     PRODL_SHAD      equ	898	;# 
  1512   000383                     PRODH_SHAD      equ	899	;# 
  1513   0003BC                     CWG1CLK         equ	956	;# 
  1514   0003BC                     CWG1CLKCON      equ	956	;# 
  1515   0003BD                     CWG1ISM         equ	957	;# 
  1516   0003BD                     CWG1DAT         equ	957	;# 
  1517   0003BE                     CWG1DBR         equ	958	;# 
  1518   0003BF                     CWG1DBF         equ	959	;# 
  1519   0003C0                     CWG1CON0        equ	960	;# 
  1520   0003C1                     CWG1CON1        equ	961	;# 
  1521   0003C2                     CWG1AS0         equ	962	;# 
  1522   0003C3                     CWG1AS1         equ	963	;# 
  1523   0003C4                     CWG1STR         equ	964	;# 
  1524   0003C5                     CWG2CLK         equ	965	;# 
  1525   0003C5                     CWG2CLKCON      equ	965	;# 
  1526   0003C6                     CWG2ISM         equ	966	;# 
  1527   0003C6                     CWG2DAT         equ	966	;# 
  1528   0003C7                     CWG2DBR         equ	967	;# 
  1529   0003C8                     CWG2DBF         equ	968	;# 
  1530   0003C9                     CWG2CON0        equ	969	;# 
  1531   0003CA                     CWG2CON1        equ	970	;# 
  1532   0003CB                     CWG2AS0         equ	971	;# 
  1533   0003CC                     CWG2AS1         equ	972	;# 
  1534   0003CD                     CWG2STR         equ	973	;# 
  1535   0003CE                     CWG3CLK         equ	974	;# 
  1536   0003CE                     CWG3CLKCON      equ	974	;# 
  1537   0003CF                     CWG3ISM         equ	975	;# 
  1538   0003CF                     CWG3DAT         equ	975	;# 
  1539   0003D0                     CWG3DBR         equ	976	;# 
  1540   0003D1                     CWG3DBF         equ	977	;# 
  1541   0003D2                     CWG3CON0        equ	978	;# 
  1542   0003D3                     CWG3CON1        equ	979	;# 
  1543   0003D4                     CWG3AS0         equ	980	;# 
  1544   0003D5                     CWG3AS1         equ	981	;# 
  1545   0003D6                     CWG3STR         equ	982	;# 
  1546   0003D7                     FVRCON          equ	983	;# 
  1547   0003D8                     ADCPCON         equ	984	;# 
  1548   0003D8                     ADCP            equ	984	;# 
  1549   0003D9                     ADLTH           equ	985	;# 
  1550   0003D9                     ADLTHL          equ	985	;# 
  1551   0003DA                     ADLTHH          equ	986	;# 
  1552   0003DB                     ADUTH           equ	987	;# 
  1553   0003DB                     ADUTHL          equ	987	;# 
  1554   0003DC                     ADUTHH          equ	988	;# 
  1555   0003DD                     ADERR           equ	989	;# 
  1556   0003DD                     ADERRL          equ	989	;# 
  1557   0003DE                     ADERRH          equ	990	;# 
  1558   0003DF                     ADSTPT          equ	991	;# 
  1559   0003DF                     ADSTPTL         equ	991	;# 
  1560   0003E0                     ADSTPTH         equ	992	;# 
  1561   0003E1                     ADFLTR          equ	993	;# 
  1562   0003E1                     ADFLTRL         equ	993	;# 
  1563   0003E2                     ADFLTRH         equ	994	;# 
  1564   0003E3                     ADACC           equ	995	;# 
  1565   0003E3                     ADACCL          equ	995	;# 
  1566   0003E4                     ADACCH          equ	996	;# 
  1567   0003E5                     ADACCU          equ	997	;# 
  1568   0003E6                     ADCNT           equ	998	;# 
  1569   0003E7                     ADRPT           equ	999	;# 
  1570   0003E8                     ADPREV          equ	1000	;# 
  1571   0003E8                     ADPREVL         equ	1000	;# 
  1572   0003E9                     ADPREVH         equ	1001	;# 
  1573   0003EA                     ADRES           equ	1002	;# 
  1574   0003EA                     ADRESL          equ	1002	;# 
  1575   0003EB                     ADRESH          equ	1003	;# 
  1576   0003EC                     ADPCH           equ	1004	;# 
  1577   0003EE                     ADACQ           equ	1006	;# 
  1578   0003EE                     ADACQL          equ	1006	;# 
  1579   0003EF                     ADACQH          equ	1007	;# 
  1580   0003F0                     ADCAP           equ	1008	;# 
  1581   0003F1                     ADPRE           equ	1009	;# 
  1582   0003F1                     ADPREL          equ	1009	;# 
  1583   0003F2                     ADPREH          equ	1010	;# 
  1584   0003F3                     ADCON0          equ	1011	;# 
  1585   0003F4                     ADCON1          equ	1012	;# 
  1586   0003F5                     ADCON2          equ	1013	;# 
  1587   0003F6                     ADCON3          equ	1014	;# 
  1588   0003F7                     ADSTAT          equ	1015	;# 
  1589   0003F8                     ADREF           equ	1016	;# 
  1590   0003F9                     ADACT           equ	1017	;# 
  1591   0003FA                     ADCLK           equ	1018	;# 
  1592   000400                     ANSELA          equ	1024	;# 
  1593   000401                     WPUA            equ	1025	;# 
  1594   000402                     ODCONA          equ	1026	;# 
  1595   000403                     SLRCONA         equ	1027	;# 
  1596   000404                     INLVLA          equ	1028	;# 
  1597   000405                     IOCAP           equ	1029	;# 
  1598   000406                     IOCAN           equ	1030	;# 
  1599   000407                     IOCAF           equ	1031	;# 
  1600   000408                     ANSELB          equ	1032	;# 
  1601   000409                     WPUB            equ	1033	;# 
  1602   00040A                     ODCONB          equ	1034	;# 
  1603   00040B                     SLRCONB         equ	1035	;# 
  1604   00040C                     INLVLB          equ	1036	;# 
  1605   00040D                     IOCBP           equ	1037	;# 
  1606   00040E                     IOCBN           equ	1038	;# 
  1607   00040F                     IOCBF           equ	1039	;# 
  1608   000410                     ANSELC          equ	1040	;# 
  1609   000411                     WPUC            equ	1041	;# 
  1610   000412                     ODCONC          equ	1042	;# 
  1611   000413                     SLRCONC         equ	1043	;# 
  1612   000414                     INLVLC          equ	1044	;# 
  1613   000415                     IOCCP           equ	1045	;# 
  1614   000416                     IOCCN           equ	1046	;# 
  1615   000417                     IOCCF           equ	1047	;# 
  1616   000418                     ANSELD          equ	1048	;# 
  1617   000419                     WPUD            equ	1049	;# 
  1618   00041A                     ODCOND          equ	1050	;# 
  1619   00041B                     SLRCOND         equ	1051	;# 
  1620   00041C                     INLVLD          equ	1052	;# 
  1621   000420                     ANSELE          equ	1056	;# 
  1622   000421                     WPUE            equ	1057	;# 
  1623   000422                     ODCONE          equ	1058	;# 
  1624   000423                     SLRCONE         equ	1059	;# 
  1625   000424                     INLVLE          equ	1060	;# 
  1626   000425                     IOCEP           equ	1061	;# 
  1627   000426                     IOCEN           equ	1062	;# 
  1628   000427                     IOCEF           equ	1063	;# 
  1629   000428                     ANSELF          equ	1064	;# 
  1630   000429                     WPUF            equ	1065	;# 
  1631   00042A                     ODCONF          equ	1066	;# 
  1632   00042B                     SLRCONF         equ	1067	;# 
  1633   00042C                     INLVLF          equ	1068	;# 
  1634   000440                     NCO1ACC         equ	1088	;# 
  1635   000440                     NCO1ACCL        equ	1088	;# 
  1636   000441                     NCO1ACCH        equ	1089	;# 
  1637   000442                     NCO1ACCU        equ	1090	;# 
  1638   000443                     NCO1INC         equ	1091	;# 
  1639   000443                     NCO1INCL        equ	1091	;# 
  1640   000444                     NCO1INCH        equ	1092	;# 
  1641   000445                     NCO1INCU        equ	1093	;# 
  1642   000446                     NCO1CON         equ	1094	;# 
  1643   000447                     NCO1CLK         equ	1095	;# 
  1644   000448                     NCO2ACC         equ	1096	;# 
  1645   000448                     NCO2ACCL        equ	1096	;# 
  1646   000449                     NCO2ACCH        equ	1097	;# 
  1647   00044A                     NCO2ACCU        equ	1098	;# 
  1648   00044B                     NCO2INC         equ	1099	;# 
  1649   00044B                     NCO2INCL        equ	1099	;# 
  1650   00044C                     NCO2INCH        equ	1100	;# 
  1651   00044D                     NCO2INCU        equ	1101	;# 
  1652   00044E                     NCO2CON         equ	1102	;# 
  1653   00044F                     NCO2CLK         equ	1103	;# 
  1654   000450                     NCO3ACC         equ	1104	;# 
  1655   000450                     NCO3ACCL        equ	1104	;# 
  1656   000451                     NCO3ACCH        equ	1105	;# 
  1657   000452                     NCO3ACCU        equ	1106	;# 
  1658   000453                     NCO3INC         equ	1107	;# 
  1659   000453                     NCO3INCL        equ	1107	;# 
  1660   000454                     NCO3INCH        equ	1108	;# 
  1661   000455                     NCO3INCU        equ	1109	;# 
  1662   000456                     NCO3CON         equ	1110	;# 
  1663   000457                     NCO3CLK         equ	1111	;# 
  1664   000459                     IVTLOCK         equ	1113	;# 
  1665   00045A                     IVTAD           equ	1114	;# 
  1666   00045A                     IVTADL          equ	1114	;# 
  1667   00045B                     IVTADH          equ	1115	;# 
  1668   00045C                     IVTADU          equ	1116	;# 
  1669   00045D                     IVTBASE         equ	1117	;# 
  1670   00045D                     IVTBASEL        equ	1117	;# 
  1671   00045E                     IVTBASEH        equ	1118	;# 
  1672   00045F                     IVTBASEU        equ	1119	;# 
  1673   000460                     PWM1ERS         equ	1120	;# 
  1674   000461                     PWM1CLK         equ	1121	;# 
  1675   000462                     PWM1LDS         equ	1122	;# 
  1676   000463                     PWM1PR          equ	1123	;# 
  1677   000463                     PWM1PRL         equ	1123	;# 
  1678   000464                     PWM1PRH         equ	1124	;# 
  1679   000465                     PWM1CPRE        equ	1125	;# 
  1680   000466                     PWM1PIPOS       equ	1126	;# 
  1681   000467                     PWM1GIR         equ	1127	;# 
  1682   000468                     PWM1GIE         equ	1128	;# 
  1683   000469                     PWM1CON         equ	1129	;# 
  1684   00046A                     PWM1S1CFG       equ	1130	;# 
  1685   00046B                     PWM1S1P1        equ	1131	;# 
  1686   00046B                     PWM1S1P1L       equ	1131	;# 
  1687   00046C                     PWM1S1P1H       equ	1132	;# 
  1688   00046D                     PWM1S1P2        equ	1133	;# 
  1689   00046D                     PWM1S1P2L       equ	1133	;# 
  1690   00046E                     PWM1S1P2H       equ	1134	;# 
  1691   00046F                     PWM2ERS         equ	1135	;# 
  1692   000470                     PWM2CLK         equ	1136	;# 
  1693   000471                     PWM2LDS         equ	1137	;# 
  1694   000472                     PWM2PR          equ	1138	;# 
  1695   000472                     PWM2PRL         equ	1138	;# 
  1696   000473                     PWM2PRH         equ	1139	;# 
  1697   000474                     PWM2CPRE        equ	1140	;# 
  1698   000475                     PWM2PIPOS       equ	1141	;# 
  1699   000476                     PWM2GIR         equ	1142	;# 
  1700   000477                     PWM2GIE         equ	1143	;# 
  1701   000478                     PWM2CON         equ	1144	;# 
  1702   000479                     PWM2S1CFG       equ	1145	;# 
  1703   00047A                     PWM2S1P1        equ	1146	;# 
  1704   00047A                     PWM2S1P1L       equ	1146	;# 
  1705   00047B                     PWM2S1P1H       equ	1147	;# 
  1706   00047C                     PWM2S1P2        equ	1148	;# 
  1707   00047C                     PWM2S1P2L       equ	1148	;# 
  1708   00047D                     PWM2S1P2H       equ	1149	;# 
  1709   00047E                     PWM3ERS         equ	1150	;# 
  1710   00047F                     PWM3CLK         equ	1151	;# 
  1711   000480                     PWM3LDS         equ	1152	;# 
  1712   000481                     PWM3PR          equ	1153	;# 
  1713   000481                     PWM3PRL         equ	1153	;# 
  1714   000482                     PWM3PRH         equ	1154	;# 
  1715   000483                     PWM3CPRE        equ	1155	;# 
  1716   000484                     PWM3PIPOS       equ	1156	;# 
  1717   000485                     PWM3GIR         equ	1157	;# 
  1718   000486                     PWM3GIE         equ	1158	;# 
  1719   000487                     PWM3CON         equ	1159	;# 
  1720   000488                     PWM3S1CFG       equ	1160	;# 
  1721   000489                     PWM3S1P1        equ	1161	;# 
  1722   000489                     PWM3S1P1L       equ	1161	;# 
  1723   00048A                     PWM3S1P1H       equ	1162	;# 
  1724   00048B                     PWM3S1P2        equ	1163	;# 
  1725   00048B                     PWM3S1P2L       equ	1163	;# 
  1726   00048C                     PWM3S1P2H       equ	1164	;# 
  1727   00049C                     PWMLOAD         equ	1180	;# 
  1728   00049D                     PWMEN           equ	1181	;# 
  1729   00049E                     PIE0            equ	1182	;# 
  1730   00049F                     PIE1            equ	1183	;# 
  1731   0004A0                     PIE2            equ	1184	;# 
  1732   0004A1                     PIE3            equ	1185	;# 
  1733   0004A2                     PIE4            equ	1186	;# 
  1734   0004A3                     PIE5            equ	1187	;# 
  1735   0004A4                     PIE6            equ	1188	;# 
  1736   0004A5                     PIE7            equ	1189	;# 
  1737   0004A6                     PIE8            equ	1190	;# 
  1738   0004A7                     PIE9            equ	1191	;# 
  1739   0004A8                     PIE10           equ	1192	;# 
  1740   0004A9                     PIE11           equ	1193	;# 
  1741   0004AA                     PIE12           equ	1194	;# 
  1742   0004AB                     PIE13           equ	1195	;# 
  1743   0004AC                     PIE14           equ	1196	;# 
  1744   0004AD                     PIE15           equ	1197	;# 
  1745   0004AE                     PIR0            equ	1198	;# 
  1746   0004AF                     PIR1            equ	1199	;# 
  1747   0004B0                     PIR2            equ	1200	;# 
  1748   0004B1                     PIR3            equ	1201	;# 
  1749   0004B2                     PIR4            equ	1202	;# 
  1750   0004B3                     PIR5            equ	1203	;# 
  1751   0004B4                     PIR6            equ	1204	;# 
  1752   0004B5                     PIR7            equ	1205	;# 
  1753   0004B6                     PIR8            equ	1206	;# 
  1754   0004B7                     PIR9            equ	1207	;# 
  1755   0004B8                     PIR10           equ	1208	;# 
  1756   0004B9                     PIR11           equ	1209	;# 
  1757   0004BA                     PIR12           equ	1210	;# 
  1758   0004BB                     PIR13           equ	1211	;# 
  1759   0004BC                     PIR14           equ	1212	;# 
  1760   0004BD                     PIR15           equ	1213	;# 
  1761   0004BE                     LATA            equ	1214	;# 
  1762   0004BF                     LATB            equ	1215	;# 
  1763   0004C0                     LATC            equ	1216	;# 
  1764   0004C1                     LATD            equ	1217	;# 
  1765   0004C2                     LATE            equ	1218	;# 
  1766   0004C3                     LATF            equ	1219	;# 
  1767   0004C6                     TRISA           equ	1222	;# 
  1768   0004C7                     TRISB           equ	1223	;# 
  1769   0004C8                     TRISC           equ	1224	;# 
  1770   0004C9                     TRISD           equ	1225	;# 
  1771   0004CA                     TRISE           equ	1226	;# 
  1772   0004CB                     TRISF           equ	1227	;# 
  1773   0004CE                     PORTA           equ	1230	;# 
  1774   0004CF                     PORTB           equ	1231	;# 
  1775   0004D0                     PORTC           equ	1232	;# 
  1776   0004D1                     PORTD           equ	1233	;# 
  1777   0004D2                     PORTE           equ	1234	;# 
  1778   0004D3                     PORTF           equ	1235	;# 
  1779   0004D6                     INTCON0         equ	1238	;# 
  1780   0004D7                     INTCON1         equ	1239	;# 
  1781   0004D8                     STATUS          equ	1240	;# 
  1782   0004D9                     FSR2            equ	1241	;# 
  1783   0004D9                     FSR2L           equ	1241	;# 
  1784   0004DA                     FSR2H           equ	1242	;# 
  1785   0004DB                     PLUSW2          equ	1243	;# 
  1786   0004DC                     PREINC2         equ	1244	;# 
  1787   0004DD                     POSTDEC2        equ	1245	;# 
  1788   0004DE                     POSTINC2        equ	1246	;# 
  1789   0004DF                     INDF2           equ	1247	;# 
  1790   0004E0                     BSR             equ	1248	;# 
  1791   0004E1                     FSR1            equ	1249	;# 
  1792   0004E1                     FSR1L           equ	1249	;# 
  1793   0004E2                     FSR1H           equ	1250	;# 
  1794   0004E3                     PLUSW1          equ	1251	;# 
  1795   0004E4                     PREINC1         equ	1252	;# 
  1796   0004E5                     POSTDEC1        equ	1253	;# 
  1797   0004E6                     POSTINC1        equ	1254	;# 
  1798   0004E7                     INDF1           equ	1255	;# 
  1799   0004E8                     WREG            equ	1256	;# 
  1800   0004E9                     FSR0            equ	1257	;# 
  1801   0004E9                     FSR0L           equ	1257	;# 
  1802   0004EA                     FSR0H           equ	1258	;# 
  1803   0004EB                     PLUSW0          equ	1259	;# 
  1804   0004EC                     PREINC0         equ	1260	;# 
  1805   0004ED                     POSTDEC0        equ	1261	;# 
  1806   0004EE                     POSTINC0        equ	1262	;# 
  1807   0004EF                     INDF0           equ	1263	;# 
  1808   0004F0                     PCON0           equ	1264	;# 
  1809   0004F1                     PCON1           equ	1265	;# 
  1810   0004F2                     CPUDOZE         equ	1266	;# 
  1811   0004F3                     PROD            equ	1267	;# 
  1812   0004F3                     PRODL           equ	1267	;# 
  1813   0004F4                     PRODH           equ	1268	;# 
  1814   0004F5                     TABLAT          equ	1269	;# 
  1815   0004F6                     TBLPTR          equ	1270	;# 
  1816   0004F6                     TBLPTRL         equ	1270	;# 
  1817   0004F7                     TBLPTRH         equ	1271	;# 
  1818   0004F8                     TBLPTRU         equ	1272	;# 
  1819   0004F9                     PCLAT           equ	1273	;# 
  1820   0004F9                     PCL             equ	1273	;# 
  1821   0004FA                     PCLATH          equ	1274	;# 
  1822   0004FB                     PCLATU          equ	1275	;# 
  1823   0004FC                     STKPTR          equ	1276	;# 
  1824   0004FD                     TOS             equ	1277	;# 
  1825   0004FD                     TOSL            equ	1277	;# 
  1826   0004FE                     TOSH            equ	1278	;# 
  1827   0004FF                     TOSU            equ	1279	;# 
  1828   000039                     CLKRCON         equ	57	;# 
  1829   00003A                     CLKRCLK         equ	58	;# 
  1830   000040                     NVMCON0         equ	64	;# 
  1831   000041                     NVMCON1         equ	65	;# 
  1832   000042                     NVMLOCK         equ	66	;# 
  1833   000043                     NVMADR          equ	67	;# 
  1834   000043                     NVMADRL         equ	67	;# 
  1835   000044                     NVMADRH         equ	68	;# 
  1836   000045                     NVMADRU         equ	69	;# 
  1837   000046                     NVMDAT          equ	70	;# 
  1838   000046                     NVMDATL         equ	70	;# 
  1839   000047                     NVMDATH         equ	71	;# 
  1840   000048                     VREGCON         equ	72	;# 
  1841   000049                     BORCON          equ	73	;# 
  1842   00004A                     HLVDCON0        equ	74	;# 
  1843   00004B                     HLVDCON1        equ	75	;# 
  1844   00004C                     ZCDCON          equ	76	;# 
  1845   000060                     PMD0            equ	96	;# 
  1846   000061                     PMD1            equ	97	;# 
  1847   000063                     PMD3            equ	99	;# 
  1848   000064                     PMD4            equ	100	;# 
  1849   000065                     PMD5            equ	101	;# 
  1850   000066                     PMD6            equ	102	;# 
  1851   000067                     PMD7            equ	103	;# 
  1852   000068                     PMD8            equ	104	;# 
  1853   00006A                     MD1CON0         equ	106	;# 
  1854   00006B                     MD1CON1         equ	107	;# 
  1855   00006C                     MD1SRC          equ	108	;# 
  1856   00006D                     MD1CARL         equ	109	;# 
  1857   00006E                     MD1CARH         equ	110	;# 
  1858   00006F                     CMOUT           equ	111	;# 
  1859   000070                     CM1CON0         equ	112	;# 
  1860   000071                     CM1CON1         equ	113	;# 
  1861   000072                     CM1NCH          equ	114	;# 
  1862   000073                     CM1PCH          equ	115	;# 
  1863   000074                     CM2CON0         equ	116	;# 
  1864   000075                     CM2CON1         equ	117	;# 
  1865   000076                     CM2NCH          equ	118	;# 
  1866   000077                     CM2PCH          equ	119	;# 
  1867   000078                     WDTCON0         equ	120	;# 
  1868   000079                     WDTCON1         equ	121	;# 
  1869   00007A                     WDTPS           equ	122	;# 
  1870   00007A                     WDTPSL          equ	122	;# 
  1871   00007B                     WDTPSH          equ	123	;# 
  1872   00007C                     WDTTMR          equ	124	;# 
  1873   00007D                     DAC1DAT         equ	125	;# 
  1874   00007D                     DAC1DATL        equ	125	;# 
  1875   00007F                     DAC1CON         equ	127	;# 
  1876   000080                     SPI1RXB         equ	128	;# 
  1877   000081                     SPI1TXB         equ	129	;# 
  1878   000082                     SPI1TCNT        equ	130	;# 
  1879   000082                     SPI1TCNTL       equ	130	;# 
  1880   000083                     SPI1TCNTH       equ	131	;# 
  1881   000084                     SPI1CON0        equ	132	;# 
  1882   000085                     SPI1CON1        equ	133	;# 
  1883   000086                     SPI1CON2        equ	134	;# 
  1884   000087                     SPI1STATUS      equ	135	;# 
  1885   000088                     SPI1TWIDTH      equ	136	;# 
  1886   000089                     SPI1BAUD        equ	137	;# 
  1887   00008A                     SPI1INTF        equ	138	;# 
  1888   00008B                     SPI1INTE        equ	139	;# 
  1889   00008C                     SPI1CLK         equ	140	;# 
  1890   00008D                     SPI2RXB         equ	141	;# 
  1891   00008E                     SPI2TXB         equ	142	;# 
  1892   00008F                     SPI2TCNT        equ	143	;# 
  1893   00008F                     SPI2TCNTL       equ	143	;# 
  1894   000090                     SPI2TCNTH       equ	144	;# 
  1895   000091                     SPI2CON0        equ	145	;# 
  1896   000092                     SPI2CON1        equ	146	;# 
  1897   000093                     SPI2CON2        equ	147	;# 
  1898   000094                     SPI2STATUS      equ	148	;# 
  1899   000095                     SPI2TWIDTH      equ	149	;# 
  1900   000096                     SPI2BAUD        equ	150	;# 
  1901   000097                     SPI2INTF        equ	151	;# 
  1902   000098                     SPI2INTE        equ	152	;# 
  1903   000099                     SPI2CLK         equ	153	;# 
  1904   0000AC                     ACTCON          equ	172	;# 
  1905   0000AD                     OSCCON1         equ	173	;# 
  1906   0000AE                     OSCCON2         equ	174	;# 
  1907   0000AF                     OSCCON3         equ	175	;# 
  1908   0000B0                     OSCTUNE         equ	176	;# 
  1909   0000B1                     OSCFRQ          equ	177	;# 
  1910   0000B1                     OSCFREQ         equ	177	;# 
  1911   0000B2                     OSCSTAT         equ	178	;# 
  1912   0000B2                     OSCSTAT1        equ	178	;# 
  1913   0000B3                     OSCEN           equ	179	;# 
  1914   0000B4                     PRLOCK          equ	180	;# 
  1915   0000B5                     SCANPR          equ	181	;# 
  1916   0000B6                     DMA1PR          equ	182	;# 
  1917   0000B7                     DMA2PR          equ	183	;# 
  1918   0000B8                     DMA3PR          equ	184	;# 
  1919   0000B9                     DMA4PR          equ	185	;# 
  1920   0000BA                     DMA5PR          equ	186	;# 
  1921   0000BB                     DMA6PR          equ	187	;# 
  1922   0000BE                     MAINPR          equ	190	;# 
  1923   0000BF                     ISRPR           equ	191	;# 
  1924   0000D4                     CLCDATA         equ	212	;# 
  1925   0000D5                     CLCSELECT       equ	213	;# 
  1926   0000D6                     CLCnCON         equ	214	;# 
  1927   0000D7                     CLCnPOL         equ	215	;# 
  1928   0000D8                     CLCnSEL0        equ	216	;# 
  1929   0000D9                     CLCnSEL1        equ	217	;# 
  1930   0000DA                     CLCnSEL2        equ	218	;# 
  1931   0000DB                     CLCnSEL3        equ	219	;# 
  1932   0000DC                     CLCnGLS0        equ	220	;# 
  1933   0000DD                     CLCnGLS1        equ	221	;# 
  1934   0000DE                     CLCnGLS2        equ	222	;# 
  1935   0000DF                     CLCnGLS3        equ	223	;# 
  1936   0000E8                     DMASELECT       equ	232	;# 
  1937   0000E9                     DMAnBUF         equ	233	;# 
  1938   0000EA                     DMAnDCNT        equ	234	;# 
  1939   0000EA                     DMAnDCNTL       equ	234	;# 
  1940   0000EB                     DMAnDCNTH       equ	235	;# 
  1941   0000EC                     DMAnDPTR        equ	236	;# 
  1942   0000EC                     DMAnDPTRL       equ	236	;# 
  1943   0000ED                     DMAnDPTRH       equ	237	;# 
  1944   0000EE                     DMAnDSZ         equ	238	;# 
  1945   0000EE                     DMAnDSZL        equ	238	;# 
  1946   0000EF                     DMAnDSZH        equ	239	;# 
  1947   0000F0                     DMAnDSA         equ	240	;# 
  1948   0000F0                     DMAnDSAL        equ	240	;# 
  1949   0000F1                     DMAnDSAH        equ	241	;# 
  1950   0000F2                     DMAnSCNT        equ	242	;# 
  1951   0000F2                     DMAnSCNTL       equ	242	;# 
  1952   0000F3                     DMAnSCNTH       equ	243	;# 
  1953   0000F4                     DMAnSPTR        equ	244	;# 
  1954   0000F4                     DMAnSPTRL       equ	244	;# 
  1955   0000F5                     DMAnSPTRH       equ	245	;# 
  1956   0000F6                     DMAnSPTRU       equ	246	;# 
  1957   0000F7                     DMAnSSZ         equ	247	;# 
  1958   0000F7                     DMAnSSZL        equ	247	;# 
  1959   0000F8                     DMAnSSZH        equ	248	;# 
  1960   0000F9                     DMAnSSA         equ	249	;# 
  1961   0000F9                     DMAnSSAL        equ	249	;# 
  1962   0000FA                     DMAnSSAH        equ	250	;# 
  1963   0000FB                     DMAnSSAU        equ	251	;# 
  1964   0000FC                     DMAnCON0        equ	252	;# 
  1965   0000FD                     DMAnCON1        equ	253	;# 
  1966   0000FE                     DMAnAIRQ        equ	254	;# 
  1967   0000FF                     DMAnSIRQ        equ	255	;# 
  1968   000200                     PPSLOCK         equ	512	;# 
  1969   000201                     RA0PPS          equ	513	;# 
  1970   000202                     RA1PPS          equ	514	;# 
  1971   000203                     RA2PPS          equ	515	;# 
  1972   000204                     RA3PPS          equ	516	;# 
  1973   000205                     RA4PPS          equ	517	;# 
  1974   000206                     RA5PPS          equ	518	;# 
  1975   000207                     RA6PPS          equ	519	;# 
  1976   000208                     RA7PPS          equ	520	;# 
  1977   000209                     RB0PPS          equ	521	;# 
  1978   00020A                     RB1PPS          equ	522	;# 
  1979   00020B                     RB2PPS          equ	523	;# 
  1980   00020C                     RB3PPS          equ	524	;# 
  1981   00020D                     RB4PPS          equ	525	;# 
  1982   00020E                     RB5PPS          equ	526	;# 
  1983   00020F                     RB6PPS          equ	527	;# 
  1984   000210                     RB7PPS          equ	528	;# 
  1985   000211                     RC0PPS          equ	529	;# 
  1986   000212                     RC1PPS          equ	530	;# 
  1987   000213                     RC2PPS          equ	531	;# 
  1988   000214                     RC3PPS          equ	532	;# 
  1989   000215                     RC4PPS          equ	533	;# 
  1990   000216                     RC5PPS          equ	534	;# 
  1991   000217                     RC6PPS          equ	535	;# 
  1992   000218                     RC7PPS          equ	536	;# 
  1993   000219                     RD0PPS          equ	537	;# 
  1994   00021A                     RD1PPS          equ	538	;# 
  1995   00021B                     RD2PPS          equ	539	;# 
  1996   00021C                     RD3PPS          equ	540	;# 
  1997   00021D                     RD4PPS          equ	541	;# 
  1998   00021E                     RD5PPS          equ	542	;# 
  1999   00021F                     RD6PPS          equ	543	;# 
  2000   000220                     RD7PPS          equ	544	;# 
  2001   000221                     RE0PPS          equ	545	;# 
  2002   000222                     RE1PPS          equ	546	;# 
  2003   000223                     RE2PPS          equ	547	;# 
  2004   000229                     RF0PPS          equ	553	;# 
  2005   00022A                     RF1PPS          equ	554	;# 
  2006   00022B                     RF2PPS          equ	555	;# 
  2007   00022C                     RF3PPS          equ	556	;# 
  2008   00022D                     RF4PPS          equ	557	;# 
  2009   00022E                     RF5PPS          equ	558	;# 
  2010   00022F                     RF6PPS          equ	559	;# 
  2011   000230                     RF7PPS          equ	560	;# 
  2012   00023E                     INT0PPS         equ	574	;# 
  2013   00023F                     INT1PPS         equ	575	;# 
  2014   000240                     INT2PPS         equ	576	;# 
  2015   000241                     T0CKIPPS        equ	577	;# 
  2016   000242                     T1CKIPPS        equ	578	;# 
  2017   000243                     T1GPPS          equ	579	;# 
  2018   000244                     T3CKIPPS        equ	580	;# 
  2019   000245                     T3GPPS          equ	581	;# 
  2020   000246                     T5CKIPPS        equ	582	;# 
  2021   000247                     T5GPPS          equ	583	;# 
  2022   000248                     T2INPPS         equ	584	;# 
  2023   000249                     T4INPPS         equ	585	;# 
  2024   00024A                     T6INPPS         equ	586	;# 
  2025   00024F                     CCP1PPS         equ	591	;# 
  2026   000250                     CCP2PPS         equ	592	;# 
  2027   000251                     CCP3PPS         equ	593	;# 
  2028   000253                     PWM1ERSPPS      equ	595	;# 
  2029   000254                     PWM2ERSPPS      equ	596	;# 
  2030   000255                     PWM3ERSPPS      equ	597	;# 
  2031   000257                     PWMIN0PPS       equ	599	;# 
  2032   000258                     PWMIN1PPS       equ	600	;# 
  2033   000259                     SMT1WINPPS      equ	601	;# 
  2034   00025A                     SMT1SIGPPS      equ	602	;# 
  2035   00025B                     CWG1PPS         equ	603	;# 
  2036   00025B                     CWG1INPPS       equ	603	;# 
  2037   00025C                     CWG2PPS         equ	604	;# 
  2038   00025C                     CWG2INPPS       equ	604	;# 
  2039   00025D                     CWG3PPS         equ	605	;# 
  2040   00025D                     CWG3INPPS       equ	605	;# 
  2041   00025E                     MD1CARLPPS      equ	606	;# 
  2042   00025E                     MDCARLPPS       equ	606	;# 
  2043   00025F                     MD1CARHPPS      equ	607	;# 
  2044   00025F                     MDCARHPPS       equ	607	;# 
  2045   000260                     MD1SRCPPS       equ	608	;# 
  2046   000260                     MDSRCPPS        equ	608	;# 
  2047   000261                     CLCIN0PPS       equ	609	;# 
  2048   000262                     CLCIN1PPS       equ	610	;# 
  2049   000263                     CLCIN2PPS       equ	611	;# 
  2050   000264                     CLCIN3PPS       equ	612	;# 
  2051   000265                     CLCIN4PPS       equ	613	;# 
  2052   000266                     CLCIN5PPS       equ	614	;# 
  2053   000267                     CLCIN6PPS       equ	615	;# 
  2054   000268                     CLCIN7PPS       equ	616	;# 
  2055   000269                     ADACTPPS        equ	617	;# 
  2056   00026A                     SPI1SCKPPS      equ	618	;# 
  2057   00026B                     SPI1SDIPPS      equ	619	;# 
  2058   00026C                     SPI1SSPPS       equ	620	;# 
  2059   00026D                     SPI2SCKPPS      equ	621	;# 
  2060   00026E                     SPI2SDIPPS      equ	622	;# 
  2061   00026F                     SPI2SSPPS       equ	623	;# 
  2062   000270                     I2C1SDAPPS      equ	624	;# 
  2063   000271                     I2C1SCLPPS      equ	625	;# 
  2064   000272                     U1RXPPS         equ	626	;# 
  2065   000273                     U1CTSPPS        equ	627	;# 
  2066   000274                     U2RXPPS         equ	628	;# 
  2067   000275                     U2CTSPPS        equ	629	;# 
  2068   000276                     U3RXPPS         equ	630	;# 
  2069   000277                     U3CTSPPS        equ	631	;# 
  2070   000278                     U4RXPPS         equ	632	;# 
  2071   000279                     U4CTSPPS        equ	633	;# 
  2072   00027A                     U5RXPPS         equ	634	;# 
  2073   00027B                     U5CTSPPS        equ	635	;# 
  2074   000286                     RC4I2C          equ	646	;# 
  2075   000287                     RC3I2C          equ	647	;# 
  2076   000288                     RB2I2C          equ	648	;# 
  2077   000289                     RB1I2C          equ	649	;# 
  2078   00028B                     I2C1RXB         equ	651	;# 
  2079   00028C                     I2C1TXB         equ	652	;# 
  2080   00028D                     I2C1CNT         equ	653	;# 
  2081   00028E                     I2C1ADB0        equ	654	;# 
  2082   00028F                     I2C1ADB1        equ	655	;# 
  2083   000290                     I2C1ADR0        equ	656	;# 
  2084   000291                     I2C1ADR1        equ	657	;# 
  2085   000292                     I2C1ADR2        equ	658	;# 
  2086   000293                     I2C1ADR3        equ	659	;# 
  2087   000294                     I2C1CON0        equ	660	;# 
  2088   000295                     I2C1CON1        equ	661	;# 
  2089   000296                     I2C1CON2        equ	662	;# 
  2090   000297                     I2C1ERR         equ	663	;# 
  2091   000298                     I2C1STAT0       equ	664	;# 
  2092   000299                     I2C1STAT1       equ	665	;# 
  2093   00029A                     I2C1PIR         equ	666	;# 
  2094   00029B                     I2C1PIE         equ	667	;# 
  2095   00029C                     I2C1CLK         equ	668	;# 
  2096   00029D                     I2C1BTO         equ	669	;# 
  2097   0002A1                     U1RXB           equ	673	;# 
  2098   0002A1                     U1RXBL          equ	673	;# 
  2099   0002A2                     U1RXCHK         equ	674	;# 
  2100   0002A3                     U1TXB           equ	675	;# 
  2101   0002A3                     U1TXBL          equ	675	;# 
  2102   0002A4                     U1TXCHK         equ	676	;# 
  2103   0002A5                     U1P1            equ	677	;# 
  2104   0002A5                     U1P1L           equ	677	;# 
  2105   0002A6                     U1P1H           equ	678	;# 
  2106   0002A7                     U1P2            equ	679	;# 
  2107   0002A7                     U1P2L           equ	679	;# 
  2108   0002A8                     U1P2H           equ	680	;# 
  2109   0002A9                     U1P3            equ	681	;# 
  2110   0002A9                     U1P3L           equ	681	;# 
  2111   0002AA                     U1P3H           equ	682	;# 
  2112   0002AB                     U1CON0          equ	683	;# 
  2113   0002AC                     U1CON1          equ	684	;# 
  2114   0002AD                     U1CON2          equ	685	;# 
  2115   0002AE                     U1BRG           equ	686	;# 
  2116   0002AE                     U1BRGL          equ	686	;# 
  2117   0002AF                     U1BRGH          equ	687	;# 
  2118   0002B0                     U1FIFO          equ	688	;# 
  2119   0002B1                     U1UIR           equ	689	;# 
  2120   0002B2                     U1ERRIR         equ	690	;# 
  2121   0002B3                     U1ERRIE         equ	691	;# 
  2122   0002B4                     U2RXB           equ	692	;# 
  2123   0002B4                     U2RXBL          equ	692	;# 
  2124   0002B6                     U2TXB           equ	694	;# 
  2125   0002B6                     U2TXBL          equ	694	;# 
  2126   0002B8                     U2P1            equ	696	;# 
  2127   0002B8                     U2P1L           equ	696	;# 
  2128   0002BA                     U2P2            equ	698	;# 
  2129   0002BA                     U2P2L           equ	698	;# 
  2130   0002BC                     U2P3            equ	700	;# 
  2131   0002BC                     U2P3L           equ	700	;# 
  2132   0002BE                     U2CON0          equ	702	;# 
  2133   0002BF                     U2CON1          equ	703	;# 
  2134   0002C0                     U2CON2          equ	704	;# 
  2135   0002C1                     U2BRG           equ	705	;# 
  2136   0002C1                     U2BRGL          equ	705	;# 
  2137   0002C2                     U2BRGH          equ	706	;# 
  2138   0002C3                     U2FIFO          equ	707	;# 
  2139   0002C4                     U2UIR           equ	708	;# 
  2140   0002C5                     U2ERRIR         equ	709	;# 
  2141   0002C6                     U2ERRIE         equ	710	;# 
  2142   0002C7                     U3RXB           equ	711	;# 
  2143   0002C7                     U3RXBL          equ	711	;# 
  2144   0002C9                     U3TXB           equ	713	;# 
  2145   0002C9                     U3TXBL          equ	713	;# 
  2146   0002CB                     U3P1            equ	715	;# 
  2147   0002CB                     U3P1L           equ	715	;# 
  2148   0002CD                     U3P2            equ	717	;# 
  2149   0002CD                     U3P2L           equ	717	;# 
  2150   0002CF                     U3P3            equ	719	;# 
  2151   0002CF                     U3P3L           equ	719	;# 
  2152   0002D1                     U3CON0          equ	721	;# 
  2153   0002D2                     U3CON1          equ	722	;# 
  2154   0002D3                     U3CON2          equ	723	;# 
  2155   0002D4                     U3BRG           equ	724	;# 
  2156   0002D4                     U3BRGL          equ	724	;# 
  2157   0002D5                     U3BRGH          equ	725	;# 
  2158   0002D6                     U3FIFO          equ	726	;# 
  2159   0002D7                     U3UIR           equ	727	;# 
  2160   0002D8                     U3ERRIR         equ	728	;# 
  2161   0002D9                     U3ERRIE         equ	729	;# 
  2162   0002DA                     U4RXB           equ	730	;# 
  2163   0002DA                     U4RXBL          equ	730	;# 
  2164   0002DC                     U4TXB           equ	732	;# 
  2165   0002DC                     U4TXBL          equ	732	;# 
  2166   0002DE                     U4P1            equ	734	;# 
  2167   0002DE                     U4P1L           equ	734	;# 
  2168   0002E0                     U4P2            equ	736	;# 
  2169   0002E0                     U4P2L           equ	736	;# 
  2170   0002E2                     U4P3            equ	738	;# 
  2171   0002E2                     U4P3L           equ	738	;# 
  2172   0002E4                     U4CON0          equ	740	;# 
  2173   0002E5                     U4CON1          equ	741	;# 
  2174   0002E6                     U4CON2          equ	742	;# 
  2175   0002E7                     U4BRG           equ	743	;# 
  2176   0002E7                     U4BRGL          equ	743	;# 
  2177   0002E8                     U4BRGH          equ	744	;# 
  2178   0002E9                     U4FIFO          equ	745	;# 
  2179   0002EA                     U4UIR           equ	746	;# 
  2180   0002EB                     U4ERRIR         equ	747	;# 
  2181   0002EC                     U4ERRIE         equ	748	;# 
  2182   0002ED                     U5RXB           equ	749	;# 
  2183   0002ED                     U5RXBL          equ	749	;# 
  2184   0002EF                     U5TXB           equ	751	;# 
  2185   0002EF                     U5TXBL          equ	751	;# 
  2186   0002F1                     U5P1            equ	753	;# 
  2187   0002F1                     U5P1L           equ	753	;# 
  2188   0002F3                     U5P2            equ	755	;# 
  2189   0002F3                     U5P2L           equ	755	;# 
  2190   0002F5                     U5P3            equ	757	;# 
  2191   0002F5                     U5P3L           equ	757	;# 
  2192   0002F7                     U5CON0          equ	759	;# 
  2193   0002F8                     U5CON1          equ	760	;# 
  2194   0002F9                     U5CON2          equ	761	;# 
  2195   0002FA                     U5BRG           equ	762	;# 
  2196   0002FA                     U5BRGL          equ	762	;# 
  2197   0002FB                     U5BRGH          equ	763	;# 
  2198   0002FC                     U5FIFO          equ	764	;# 
  2199   0002FD                     U5UIR           equ	765	;# 
  2200   0002FE                     U5ERRIR         equ	766	;# 
  2201   0002FF                     U5ERRIE         equ	767	;# 
  2202   000300                     SMT1TMR         equ	768	;# 
  2203   000300                     SMT1TMRL        equ	768	;# 
  2204   000301                     SMT1TMRH        equ	769	;# 
  2205   000302                     SMT1TMRU        equ	770	;# 
  2206   000303                     SMT1CPR         equ	771	;# 
  2207   000303                     SMT1CPRL        equ	771	;# 
  2208   000304                     SMT1CPRH        equ	772	;# 
  2209   000305                     SMT1CPRU        equ	773	;# 
  2210   000306                     SMT1CPW         equ	774	;# 
  2211   000306                     SMT1CPWL        equ	774	;# 
  2212   000307                     SMT1CPWH        equ	775	;# 
  2213   000308                     SMT1CPWU        equ	776	;# 
  2214   000309                     SMT1PR          equ	777	;# 
  2215   000309                     SMT1PRL         equ	777	;# 
  2216   00030A                     SMT1PRH         equ	778	;# 
  2217   00030B                     SMT1PRU         equ	779	;# 
  2218   00030C                     SMT1CON0        equ	780	;# 
  2219   00030D                     SMT1CON1        equ	781	;# 
  2220   00030E                     SMT1STAT        equ	782	;# 
  2221   00030F                     SMT1CLK         equ	783	;# 
  2222   000310                     SMT1SIG         equ	784	;# 
  2223   000311                     SMT1WIN         equ	785	;# 
  2224   000318                     TMR0L           equ	792	;# 
  2225   000318                     TMR0            equ	792	;# 
  2226   000319                     TMR0H           equ	793	;# 
  2227   000319                     PR0             equ	793	;# 
  2228   00031A                     T0CON0          equ	794	;# 
  2229   00031B                     T0CON1          equ	795	;# 
  2230   00031C                     TMR1            equ	796	;# 
  2231   00031C                     TMR1L           equ	796	;# 
  2232   00031D                     TMR1H           equ	797	;# 
  2233   00031E                     T1CON           equ	798	;# 
  2234   00031E                     TMR1CON         equ	798	;# 
  2235   00031F                     T1GCON          equ	799	;# 
  2236   00031F                     TMR1GCON        equ	799	;# 
  2237   000320                     T1GATE          equ	800	;# 
  2238   000320                     TMR1GATE        equ	800	;# 
  2239   000321                     T1CLK           equ	801	;# 
  2240   000321                     TMR1CLK         equ	801	;# 
  2241   000321                     PR1             equ	801	;# 
  2242   000322                     T2TMR           equ	802	;# 
  2243   000322                     TMR2            equ	802	;# 
  2244   000323                     T2PR            equ	803	;# 
  2245   000323                     PR2             equ	803	;# 
  2246   000324                     T2CON           equ	804	;# 
  2247   000325                     T2HLT           equ	805	;# 
  2248   000326                     T2CLKCON        equ	806	;# 
  2249   000326                     T2CLK           equ	806	;# 
  2250   000327                     T2RST           equ	807	;# 
  2251   000328                     TMR3            equ	808	;# 
  2252   000328                     TMR3L           equ	808	;# 
  2253   000329                     TMR3H           equ	809	;# 
  2254   00032A                     T3CON           equ	810	;# 
  2255   00032A                     TMR3CON         equ	810	;# 
  2256   00032B                     T3GCON          equ	811	;# 
  2257   00032B                     TMR3GCON        equ	811	;# 
  2258   00032C                     T3GATE          equ	812	;# 
  2259   00032C                     TMR3GATE        equ	812	;# 
  2260   00032D                     T3CLK           equ	813	;# 
  2261   00032D                     TMR3CLK         equ	813	;# 
  2262   00032D                     PR3             equ	813	;# 
  2263   00032E                     T4TMR           equ	814	;# 
  2264   00032E                     TMR4            equ	814	;# 
  2265   00032F                     T4PR            equ	815	;# 
  2266   00032F                     PR4             equ	815	;# 
  2267   000330                     T4CON           equ	816	;# 
  2268   000331                     T4HLT           equ	817	;# 
  2269   000332                     T4CLKCON        equ	818	;# 
  2270   000332                     T4CLK           equ	818	;# 
  2271   000333                     T4RST           equ	819	;# 
  2272   000334                     TMR5            equ	820	;# 
  2273   000334                     TMR5L           equ	820	;# 
  2274   000335                     TMR5H           equ	821	;# 
  2275   000336                     T5CON           equ	822	;# 
  2276   000336                     TMR5CON         equ	822	;# 
  2277   000337                     T5GCON          equ	823	;# 
  2278   000337                     TMR5GCON        equ	823	;# 
  2279   000338                     T5GATE          equ	824	;# 
  2280   000338                     TMR5GATE        equ	824	;# 
  2281   000339                     T5CLK           equ	825	;# 
  2282   000339                     TMR5CLK         equ	825	;# 
  2283   000339                     PR5             equ	825	;# 
  2284   00033A                     T6TMR           equ	826	;# 
  2285   00033A                     TMR6            equ	826	;# 
  2286   00033B                     T6PR            equ	827	;# 
  2287   00033B                     PR6             equ	827	;# 
  2288   00033C                     T6CON           equ	828	;# 
  2289   00033D                     T6HLT           equ	829	;# 
  2290   00033E                     T6CLKCON        equ	830	;# 
  2291   00033E                     T6CLK           equ	830	;# 
  2292   00033F                     T6RST           equ	831	;# 
  2293   000340                     CCPR1           equ	832	;# 
  2294   000340                     CCPR1L          equ	832	;# 
  2295   000341                     CCPR1H          equ	833	;# 
  2296   000342                     CCP1CON         equ	834	;# 
  2297   000343                     CCP1CAP         equ	835	;# 
  2298   000344                     CCPR2           equ	836	;# 
  2299   000344                     CCPR2L          equ	836	;# 
  2300   000345                     CCPR2H          equ	837	;# 
  2301   000346                     CCP2CON         equ	838	;# 
  2302   000347                     CCP2CAP         equ	839	;# 
  2303   000348                     CCPR3           equ	840	;# 
  2304   000348                     CCPR3L          equ	840	;# 
  2305   000349                     CCPR3H          equ	841	;# 
  2306   00034A                     CCP3CON         equ	842	;# 
  2307   00034B                     CCP3CAP         equ	843	;# 
  2308   00034C                     CCPTMRS0        equ	844	;# 
  2309   00034F                     CRCDATA         equ	847	;# 
  2310   00034F                     CRCDATL         equ	847	;# 
  2311   000350                     CRCDATH         equ	848	;# 
  2312   000351                     CRCACC          equ	849	;# 
  2313   000351                     CRCACCL         equ	849	;# 
  2314   000352                     CRCACCH         equ	850	;# 
  2315   000353                     CRCSHFT         equ	851	;# 
  2316   000353                     CRCSHIFTL       equ	851	;# 
  2317   000354                     CRCSHIFTH       equ	852	;# 
  2318   000355                     CRCXOR          equ	853	;# 
  2319   000355                     CRCXORL         equ	853	;# 
  2320   000356                     CRCXORH         equ	854	;# 
  2321   000357                     CRCCON0         equ	855	;# 
  2322   000358                     CRCCON1         equ	856	;# 
  2323   00035A                     SCANLADR        equ	858	;# 
  2324   00035A                     SCANLADRL       equ	858	;# 
  2325   00035B                     SCANLADRH       equ	859	;# 
  2326   00035C                     SCANLADRU       equ	860	;# 
  2327   00035D                     SCANHADR        equ	861	;# 
  2328   00035D                     SCANHADRL       equ	861	;# 
  2329   00035E                     SCANHADRH       equ	862	;# 
  2330   00035F                     SCANHADRU       equ	863	;# 
  2331   000360                     SCANCON0        equ	864	;# 
  2332   000361                     SCANTRIG        equ	865	;# 
  2333   000362                     IPR0            equ	866	;# 
  2334   000363                     IPR1            equ	867	;# 
  2335   000364                     IPR2            equ	868	;# 
  2336   000365                     IPR3            equ	869	;# 
  2337   000366                     IPR4            equ	870	;# 
  2338   000367                     IPR5            equ	871	;# 
  2339   000368                     IPR6            equ	872	;# 
  2340   000369                     IPR7            equ	873	;# 
  2341   00036A                     IPR8            equ	874	;# 
  2342   00036B                     IPR9            equ	875	;# 
  2343   00036C                     IPR10           equ	876	;# 
  2344   00036D                     IPR11           equ	877	;# 
  2345   00036E                     IPR12           equ	878	;# 
  2346   00036F                     IPR13           equ	879	;# 
  2347   000370                     IPR14           equ	880	;# 
  2348   000371                     IPR15           equ	881	;# 
  2349   000373                     STATUS_CSHAD    equ	883	;# 
  2350   000374                     WREG_CSHAD      equ	884	;# 
  2351   000375                     BSR_CSHAD       equ	885	;# 
  2352   000376                     SHADCON         equ	886	;# 
  2353   000377                     STATUS_SHAD     equ	887	;# 
  2354   000378                     WREG_SHAD       equ	888	;# 
  2355   000379                     BSR_SHAD        equ	889	;# 
  2356   00037A                     PCLATH_SHAD     equ	890	;# 
  2357   00037B                     PCLATU_SHAD     equ	891	;# 
  2358   00037C                     FSR0SH          equ	892	;# 
  2359   00037C                     FSR0L_SHAD      equ	892	;# 
  2360   00037D                     FSR0H_SHAD      equ	893	;# 
  2361   00037E                     FSR1SH          equ	894	;# 
  2362   00037E                     FSR1L_SHAD      equ	894	;# 
  2363   00037F                     FSR1H_SHAD      equ	895	;# 
  2364   000380                     FSR2SH          equ	896	;# 
  2365   000380                     FSR2L_SHAD      equ	896	;# 
  2366   000381                     FSR2H_SHAD      equ	897	;# 
  2367   000382                     PRODSH          equ	898	;# 
  2368   000382                     PRODL_SHAD      equ	898	;# 
  2369   000383                     PRODH_SHAD      equ	899	;# 
  2370   0003BC                     CWG1CLK         equ	956	;# 
  2371   0003BC                     CWG1CLKCON      equ	956	;# 
  2372   0003BD                     CWG1ISM         equ	957	;# 
  2373   0003BD                     CWG1DAT         equ	957	;# 
  2374   0003BE                     CWG1DBR         equ	958	;# 
  2375   0003BF                     CWG1DBF         equ	959	;# 
  2376   0003C0                     CWG1CON0        equ	960	;# 
  2377   0003C1                     CWG1CON1        equ	961	;# 
  2378   0003C2                     CWG1AS0         equ	962	;# 
  2379   0003C3                     CWG1AS1         equ	963	;# 
  2380   0003C4                     CWG1STR         equ	964	;# 
  2381   0003C5                     CWG2CLK         equ	965	;# 
  2382   0003C5                     CWG2CLKCON      equ	965	;# 
  2383   0003C6                     CWG2ISM         equ	966	;# 
  2384   0003C6                     CWG2DAT         equ	966	;# 
  2385   0003C7                     CWG2DBR         equ	967	;# 
  2386   0003C8                     CWG2DBF         equ	968	;# 
  2387   0003C9                     CWG2CON0        equ	969	;# 
  2388   0003CA                     CWG2CON1        equ	970	;# 
  2389   0003CB                     CWG2AS0         equ	971	;# 
  2390   0003CC                     CWG2AS1         equ	972	;# 
  2391   0003CD                     CWG2STR         equ	973	;# 
  2392   0003CE                     CWG3CLK         equ	974	;# 
  2393   0003CE                     CWG3CLKCON      equ	974	;# 
  2394   0003CF                     CWG3ISM         equ	975	;# 
  2395   0003CF                     CWG3DAT         equ	975	;# 
  2396   0003D0                     CWG3DBR         equ	976	;# 
  2397   0003D1                     CWG3DBF         equ	977	;# 
  2398   0003D2                     CWG3CON0        equ	978	;# 
  2399   0003D3                     CWG3CON1        equ	979	;# 
  2400   0003D4                     CWG3AS0         equ	980	;# 
  2401   0003D5                     CWG3AS1         equ	981	;# 
  2402   0003D6                     CWG3STR         equ	982	;# 
  2403   0003D7                     FVRCON          equ	983	;# 
  2404   0003D8                     ADCPCON         equ	984	;# 
  2405   0003D8                     ADCP            equ	984	;# 
  2406   0003D9                     ADLTH           equ	985	;# 
  2407   0003D9                     ADLTHL          equ	985	;# 
  2408   0003DA                     ADLTHH          equ	986	;# 
  2409   0003DB                     ADUTH           equ	987	;# 
  2410   0003DB                     ADUTHL          equ	987	;# 
  2411   0003DC                     ADUTHH          equ	988	;# 
  2412   0003DD                     ADERR           equ	989	;# 
  2413   0003DD                     ADERRL          equ	989	;# 
  2414   0003DE                     ADERRH          equ	990	;# 
  2415   0003DF                     ADSTPT          equ	991	;# 
  2416   0003DF                     ADSTPTL         equ	991	;# 
  2417   0003E0                     ADSTPTH         equ	992	;# 
  2418   0003E1                     ADFLTR          equ	993	;# 
  2419   0003E1                     ADFLTRL         equ	993	;# 
  2420   0003E2                     ADFLTRH         equ	994	;# 
  2421   0003E3                     ADACC           equ	995	;# 
  2422   0003E3                     ADACCL          equ	995	;# 
  2423   0003E4                     ADACCH          equ	996	;# 
  2424   0003E5                     ADACCU          equ	997	;# 
  2425   0003E6                     ADCNT           equ	998	;# 
  2426   0003E7                     ADRPT           equ	999	;# 
  2427   0003E8                     ADPREV          equ	1000	;# 
  2428   0003E8                     ADPREVL         equ	1000	;# 
  2429   0003E9                     ADPREVH         equ	1001	;# 
  2430   0003EA                     ADRES           equ	1002	;# 
  2431   0003EA                     ADRESL          equ	1002	;# 
  2432   0003EB                     ADRESH          equ	1003	;# 
  2433   0003EC                     ADPCH           equ	1004	;# 
  2434   0003EE                     ADACQ           equ	1006	;# 
  2435   0003EE                     ADACQL          equ	1006	;# 
  2436   0003EF                     ADACQH          equ	1007	;# 
  2437   0003F0                     ADCAP           equ	1008	;# 
  2438   0003F1                     ADPRE           equ	1009	;# 
  2439   0003F1                     ADPREL          equ	1009	;# 
  2440   0003F2                     ADPREH          equ	1010	;# 
  2441   0003F3                     ADCON0          equ	1011	;# 
  2442   0003F4                     ADCON1          equ	1012	;# 
  2443   0003F5                     ADCON2          equ	1013	;# 
  2444   0003F6                     ADCON3          equ	1014	;# 
  2445   0003F7                     ADSTAT          equ	1015	;# 
  2446   0003F8                     ADREF           equ	1016	;# 
  2447   0003F9                     ADACT           equ	1017	;# 
  2448   0003FA                     ADCLK           equ	1018	;# 
  2449   000400                     ANSELA          equ	1024	;# 
  2450   000401                     WPUA            equ	1025	;# 
  2451   000402                     ODCONA          equ	1026	;# 
  2452   000403                     SLRCONA         equ	1027	;# 
  2453   000404                     INLVLA          equ	1028	;# 
  2454   000405                     IOCAP           equ	1029	;# 
  2455   000406                     IOCAN           equ	1030	;# 
  2456   000407                     IOCAF           equ	1031	;# 
  2457   000408                     ANSELB          equ	1032	;# 
  2458   000409                     WPUB            equ	1033	;# 
  2459   00040A                     ODCONB          equ	1034	;# 
  2460   00040B                     SLRCONB         equ	1035	;# 
  2461   00040C                     INLVLB          equ	1036	;# 
  2462   00040D                     IOCBP           equ	1037	;# 
  2463   00040E                     IOCBN           equ	1038	;# 
  2464   00040F                     IOCBF           equ	1039	;# 
  2465   000410                     ANSELC          equ	1040	;# 
  2466   000411                     WPUC            equ	1041	;# 
  2467   000412                     ODCONC          equ	1042	;# 
  2468   000413                     SLRCONC         equ	1043	;# 
  2469   000414                     INLVLC          equ	1044	;# 
  2470   000415                     IOCCP           equ	1045	;# 
  2471   000416                     IOCCN           equ	1046	;# 
  2472   000417                     IOCCF           equ	1047	;# 
  2473   000418                     ANSELD          equ	1048	;# 
  2474   000419                     WPUD            equ	1049	;# 
  2475   00041A                     ODCOND          equ	1050	;# 
  2476   00041B                     SLRCOND         equ	1051	;# 
  2477   00041C                     INLVLD          equ	1052	;# 
  2478   000420                     ANSELE          equ	1056	;# 
  2479   000421                     WPUE            equ	1057	;# 
  2480   000422                     ODCONE          equ	1058	;# 
  2481   000423                     SLRCONE         equ	1059	;# 
  2482   000424                     INLVLE          equ	1060	;# 
  2483   000425                     IOCEP           equ	1061	;# 
  2484   000426                     IOCEN           equ	1062	;# 
  2485   000427                     IOCEF           equ	1063	;# 
  2486   000428                     ANSELF          equ	1064	;# 
  2487   000429                     WPUF            equ	1065	;# 
  2488   00042A                     ODCONF          equ	1066	;# 
  2489   00042B                     SLRCONF         equ	1067	;# 
  2490   00042C                     INLVLF          equ	1068	;# 
  2491   000440                     NCO1ACC         equ	1088	;# 
  2492   000440                     NCO1ACCL        equ	1088	;# 
  2493   000441                     NCO1ACCH        equ	1089	;# 
  2494   000442                     NCO1ACCU        equ	1090	;# 
  2495   000443                     NCO1INC         equ	1091	;# 
  2496   000443                     NCO1INCL        equ	1091	;# 
  2497   000444                     NCO1INCH        equ	1092	;# 
  2498   000445                     NCO1INCU        equ	1093	;# 
  2499   000446                     NCO1CON         equ	1094	;# 
  2500   000447                     NCO1CLK         equ	1095	;# 
  2501   000448                     NCO2ACC         equ	1096	;# 
  2502   000448                     NCO2ACCL        equ	1096	;# 
  2503   000449                     NCO2ACCH        equ	1097	;# 
  2504   00044A                     NCO2ACCU        equ	1098	;# 
  2505   00044B                     NCO2INC         equ	1099	;# 
  2506   00044B                     NCO2INCL        equ	1099	;# 
  2507   00044C                     NCO2INCH        equ	1100	;# 
  2508   00044D                     NCO2INCU        equ	1101	;# 
  2509   00044E                     NCO2CON         equ	1102	;# 
  2510   00044F                     NCO2CLK         equ	1103	;# 
  2511   000450                     NCO3ACC         equ	1104	;# 
  2512   000450                     NCO3ACCL        equ	1104	;# 
  2513   000451                     NCO3ACCH        equ	1105	;# 
  2514   000452                     NCO3ACCU        equ	1106	;# 
  2515   000453                     NCO3INC         equ	1107	;# 
  2516   000453                     NCO3INCL        equ	1107	;# 
  2517   000454                     NCO3INCH        equ	1108	;# 
  2518   000455                     NCO3INCU        equ	1109	;# 
  2519   000456                     NCO3CON         equ	1110	;# 
  2520   000457                     NCO3CLK         equ	1111	;# 
  2521   000459                     IVTLOCK         equ	1113	;# 
  2522   00045A                     IVTAD           equ	1114	;# 
  2523   00045A                     IVTADL          equ	1114	;# 
  2524   00045B                     IVTADH          equ	1115	;# 
  2525   00045C                     IVTADU          equ	1116	;# 
  2526   00045D                     IVTBASE         equ	1117	;# 
  2527   00045D                     IVTBASEL        equ	1117	;# 
  2528   00045E                     IVTBASEH        equ	1118	;# 
  2529   00045F                     IVTBASEU        equ	1119	;# 
  2530   000460                     PWM1ERS         equ	1120	;# 
  2531   000461                     PWM1CLK         equ	1121	;# 
  2532   000462                     PWM1LDS         equ	1122	;# 
  2533   000463                     PWM1PR          equ	1123	;# 
  2534   000463                     PWM1PRL         equ	1123	;# 
  2535   000464                     PWM1PRH         equ	1124	;# 
  2536   000465                     PWM1CPRE        equ	1125	;# 
  2537   000466                     PWM1PIPOS       equ	1126	;# 
  2538   000467                     PWM1GIR         equ	1127	;# 
  2539   000468                     PWM1GIE         equ	1128	;# 
  2540   000469                     PWM1CON         equ	1129	;# 
  2541   00046A                     PWM1S1CFG       equ	1130	;# 
  2542   00046B                     PWM1S1P1        equ	1131	;# 
  2543   00046B                     PWM1S1P1L       equ	1131	;# 
  2544   00046C                     PWM1S1P1H       equ	1132	;# 
  2545   00046D                     PWM1S1P2        equ	1133	;# 
  2546   00046D                     PWM1S1P2L       equ	1133	;# 
  2547   00046E                     PWM1S1P2H       equ	1134	;# 
  2548   00046F                     PWM2ERS         equ	1135	;# 
  2549   000470                     PWM2CLK         equ	1136	;# 
  2550   000471                     PWM2LDS         equ	1137	;# 
  2551   000472                     PWM2PR          equ	1138	;# 
  2552   000472                     PWM2PRL         equ	1138	;# 
  2553   000473                     PWM2PRH         equ	1139	;# 
  2554   000474                     PWM2CPRE        equ	1140	;# 
  2555   000475                     PWM2PIPOS       equ	1141	;# 
  2556   000476                     PWM2GIR         equ	1142	;# 
  2557   000477                     PWM2GIE         equ	1143	;# 
  2558   000478                     PWM2CON         equ	1144	;# 
  2559   000479                     PWM2S1CFG       equ	1145	;# 
  2560   00047A                     PWM2S1P1        equ	1146	;# 
  2561   00047A                     PWM2S1P1L       equ	1146	;# 
  2562   00047B                     PWM2S1P1H       equ	1147	;# 
  2563   00047C                     PWM2S1P2        equ	1148	;# 
  2564   00047C                     PWM2S1P2L       equ	1148	;# 
  2565   00047D                     PWM2S1P2H       equ	1149	;# 
  2566   00047E                     PWM3ERS         equ	1150	;# 
  2567   00047F                     PWM3CLK         equ	1151	;# 
  2568   000480                     PWM3LDS         equ	1152	;# 
  2569   000481                     PWM3PR          equ	1153	;# 
  2570   000481                     PWM3PRL         equ	1153	;# 
  2571   000482                     PWM3PRH         equ	1154	;# 
  2572   000483                     PWM3CPRE        equ	1155	;# 
  2573   000484                     PWM3PIPOS       equ	1156	;# 
  2574   000485                     PWM3GIR         equ	1157	;# 
  2575   000486                     PWM3GIE         equ	1158	;# 
  2576   000487                     PWM3CON         equ	1159	;# 
  2577   000488                     PWM3S1CFG       equ	1160	;# 
  2578   000489                     PWM3S1P1        equ	1161	;# 
  2579   000489                     PWM3S1P1L       equ	1161	;# 
  2580   00048A                     PWM3S1P1H       equ	1162	;# 
  2581   00048B                     PWM3S1P2        equ	1163	;# 
  2582   00048B                     PWM3S1P2L       equ	1163	;# 
  2583   00048C                     PWM3S1P2H       equ	1164	;# 
  2584   00049C                     PWMLOAD         equ	1180	;# 
  2585   00049D                     PWMEN           equ	1181	;# 
  2586   00049E                     PIE0            equ	1182	;# 
  2587   00049F                     PIE1            equ	1183	;# 
  2588   0004A0                     PIE2            equ	1184	;# 
  2589   0004A1                     PIE3            equ	1185	;# 
  2590   0004A2                     PIE4            equ	1186	;# 
  2591   0004A3                     PIE5            equ	1187	;# 
  2592   0004A4                     PIE6            equ	1188	;# 
  2593   0004A5                     PIE7            equ	1189	;# 
  2594   0004A6                     PIE8            equ	1190	;# 
  2595   0004A7                     PIE9            equ	1191	;# 
  2596   0004A8                     PIE10           equ	1192	;# 
  2597   0004A9                     PIE11           equ	1193	;# 
  2598   0004AA                     PIE12           equ	1194	;# 
  2599   0004AB                     PIE13           equ	1195	;# 
  2600   0004AC                     PIE14           equ	1196	;# 
  2601   0004AD                     PIE15           equ	1197	;# 
  2602   0004AE                     PIR0            equ	1198	;# 
  2603   0004AF                     PIR1            equ	1199	;# 
  2604   0004B0                     PIR2            equ	1200	;# 
  2605   0004B1                     PIR3            equ	1201	;# 
  2606   0004B2                     PIR4            equ	1202	;# 
  2607   0004B3                     PIR5            equ	1203	;# 
  2608   0004B4                     PIR6            equ	1204	;# 
  2609   0004B5                     PIR7            equ	1205	;# 
  2610   0004B6                     PIR8            equ	1206	;# 
  2611   0004B7                     PIR9            equ	1207	;# 
  2612   0004B8                     PIR10           equ	1208	;# 
  2613   0004B9                     PIR11           equ	1209	;# 
  2614   0004BA                     PIR12           equ	1210	;# 
  2615   0004BB                     PIR13           equ	1211	;# 
  2616   0004BC                     PIR14           equ	1212	;# 
  2617   0004BD                     PIR15           equ	1213	;# 
  2618   0004BE                     LATA            equ	1214	;# 
  2619   0004BF                     LATB            equ	1215	;# 
  2620   0004C0                     LATC            equ	1216	;# 
  2621   0004C1                     LATD            equ	1217	;# 
  2622   0004C2                     LATE            equ	1218	;# 
  2623   0004C3                     LATF            equ	1219	;# 
  2624   0004C6                     TRISA           equ	1222	;# 
  2625   0004C7                     TRISB           equ	1223	;# 
  2626   0004C8                     TRISC           equ	1224	;# 
  2627   0004C9                     TRISD           equ	1225	;# 
  2628   0004CA                     TRISE           equ	1226	;# 
  2629   0004CB                     TRISF           equ	1227	;# 
  2630   0004CE                     PORTA           equ	1230	;# 
  2631   0004CF                     PORTB           equ	1231	;# 
  2632   0004D0                     PORTC           equ	1232	;# 
  2633   0004D1                     PORTD           equ	1233	;# 
  2634   0004D2                     PORTE           equ	1234	;# 
  2635   0004D3                     PORTF           equ	1235	;# 
  2636   0004D6                     INTCON0         equ	1238	;# 
  2637   0004D7                     INTCON1         equ	1239	;# 
  2638   0004D8                     STATUS          equ	1240	;# 
  2639   0004D9                     FSR2            equ	1241	;# 
  2640   0004D9                     FSR2L           equ	1241	;# 
  2641   0004DA                     FSR2H           equ	1242	;# 
  2642   0004DB                     PLUSW2          equ	1243	;# 
  2643   0004DC                     PREINC2         equ	1244	;# 
  2644   0004DD                     POSTDEC2        equ	1245	;# 
  2645   0004DE                     POSTINC2        equ	1246	;# 
  2646   0004DF                     INDF2           equ	1247	;# 
  2647   0004E0                     BSR             equ	1248	;# 
  2648   0004E1                     FSR1            equ	1249	;# 
  2649   0004E1                     FSR1L           equ	1249	;# 
  2650   0004E2                     FSR1H           equ	1250	;# 
  2651   0004E3                     PLUSW1          equ	1251	;# 
  2652   0004E4                     PREINC1         equ	1252	;# 
  2653   0004E5                     POSTDEC1        equ	1253	;# 
  2654   0004E6                     POSTINC1        equ	1254	;# 
  2655   0004E7                     INDF1           equ	1255	;# 
  2656   0004E8                     WREG            equ	1256	;# 
  2657   0004E9                     FSR0            equ	1257	;# 
  2658   0004E9                     FSR0L           equ	1257	;# 
  2659   0004EA                     FSR0H           equ	1258	;# 
  2660   0004EB                     PLUSW0          equ	1259	;# 
  2661   0004EC                     PREINC0         equ	1260	;# 
  2662   0004ED                     POSTDEC0        equ	1261	;# 
  2663   0004EE                     POSTINC0        equ	1262	;# 
  2664   0004EF                     INDF0           equ	1263	;# 
  2665   0004F0                     PCON0           equ	1264	;# 
  2666   0004F1                     PCON1           equ	1265	;# 
  2667   0004F2                     CPUDOZE         equ	1266	;# 
  2668   0004F3                     PROD            equ	1267	;# 
  2669   0004F3                     PRODL           equ	1267	;# 
  2670   0004F4                     PRODH           equ	1268	;# 
  2671   0004F5                     TABLAT          equ	1269	;# 
  2672   0004F6                     TBLPTR          equ	1270	;# 
  2673   0004F6                     TBLPTRL         equ	1270	;# 
  2674   0004F7                     TBLPTRH         equ	1271	;# 
  2675   0004F8                     TBLPTRU         equ	1272	;# 
  2676   0004F9                     PCLAT           equ	1273	;# 
  2677   0004F9                     PCL             equ	1273	;# 
  2678   0004FA                     PCLATH          equ	1274	;# 
  2679   0004FB                     PCLATU          equ	1275	;# 
  2680   0004FC                     STKPTR          equ	1276	;# 
  2681   0004FD                     TOS             equ	1277	;# 
  2682   0004FD                     TOSL            equ	1277	;# 
  2683   0004FE                     TOSH            equ	1278	;# 
  2684   0004FF                     TOSU            equ	1279	;# 
  2685   000039                     CLKRCON         equ	57	;# 
  2686   00003A                     CLKRCLK         equ	58	;# 
  2687   000040                     NVMCON0         equ	64	;# 
  2688   000041                     NVMCON1         equ	65	;# 
  2689   000042                     NVMLOCK         equ	66	;# 
  2690   000043                     NVMADR          equ	67	;# 
  2691   000043                     NVMADRL         equ	67	;# 
  2692   000044                     NVMADRH         equ	68	;# 
  2693   000045                     NVMADRU         equ	69	;# 
  2694   000046                     NVMDAT          equ	70	;# 
  2695   000046                     NVMDATL         equ	70	;# 
  2696   000047                     NVMDATH         equ	71	;# 
  2697   000048                     VREGCON         equ	72	;# 
  2698   000049                     BORCON          equ	73	;# 
  2699   00004A                     HLVDCON0        equ	74	;# 
  2700   00004B                     HLVDCON1        equ	75	;# 
  2701   00004C                     ZCDCON          equ	76	;# 
  2702   000060                     PMD0            equ	96	;# 
  2703   000061                     PMD1            equ	97	;# 
  2704   000063                     PMD3            equ	99	;# 
  2705   000064                     PMD4            equ	100	;# 
  2706   000065                     PMD5            equ	101	;# 
  2707   000066                     PMD6            equ	102	;# 
  2708   000067                     PMD7            equ	103	;# 
  2709   000068                     PMD8            equ	104	;# 
  2710   00006A                     MD1CON0         equ	106	;# 
  2711   00006B                     MD1CON1         equ	107	;# 
  2712   00006C                     MD1SRC          equ	108	;# 
  2713   00006D                     MD1CARL         equ	109	;# 
  2714   00006E                     MD1CARH         equ	110	;# 
  2715   00006F                     CMOUT           equ	111	;# 
  2716   000070                     CM1CON0         equ	112	;# 
  2717   000071                     CM1CON1         equ	113	;# 
  2718   000072                     CM1NCH          equ	114	;# 
  2719   000073                     CM1PCH          equ	115	;# 
  2720   000074                     CM2CON0         equ	116	;# 
  2721   000075                     CM2CON1         equ	117	;# 
  2722   000076                     CM2NCH          equ	118	;# 
  2723   000077                     CM2PCH          equ	119	;# 
  2724   000078                     WDTCON0         equ	120	;# 
  2725   000079                     WDTCON1         equ	121	;# 
  2726   00007A                     WDTPS           equ	122	;# 
  2727   00007A                     WDTPSL          equ	122	;# 
  2728   00007B                     WDTPSH          equ	123	;# 
  2729   00007C                     WDTTMR          equ	124	;# 
  2730   00007D                     DAC1DAT         equ	125	;# 
  2731   00007D                     DAC1DATL        equ	125	;# 
  2732   00007F                     DAC1CON         equ	127	;# 
  2733   000080                     SPI1RXB         equ	128	;# 
  2734   000081                     SPI1TXB         equ	129	;# 
  2735   000082                     SPI1TCNT        equ	130	;# 
  2736   000082                     SPI1TCNTL       equ	130	;# 
  2737   000083                     SPI1TCNTH       equ	131	;# 
  2738   000084                     SPI1CON0        equ	132	;# 
  2739   000085                     SPI1CON1        equ	133	;# 
  2740   000086                     SPI1CON2        equ	134	;# 
  2741   000087                     SPI1STATUS      equ	135	;# 
  2742   000088                     SPI1TWIDTH      equ	136	;# 
  2743   000089                     SPI1BAUD        equ	137	;# 
  2744   00008A                     SPI1INTF        equ	138	;# 
  2745   00008B                     SPI1INTE        equ	139	;# 
  2746   00008C                     SPI1CLK         equ	140	;# 
  2747   00008D                     SPI2RXB         equ	141	;# 
  2748   00008E                     SPI2TXB         equ	142	;# 
  2749   00008F                     SPI2TCNT        equ	143	;# 
  2750   00008F                     SPI2TCNTL       equ	143	;# 
  2751   000090                     SPI2TCNTH       equ	144	;# 
  2752   000091                     SPI2CON0        equ	145	;# 
  2753   000092                     SPI2CON1        equ	146	;# 
  2754   000093                     SPI2CON2        equ	147	;# 
  2755   000094                     SPI2STATUS      equ	148	;# 
  2756   000095                     SPI2TWIDTH      equ	149	;# 
  2757   000096                     SPI2BAUD        equ	150	;# 
  2758   000097                     SPI2INTF        equ	151	;# 
  2759   000098                     SPI2INTE        equ	152	;# 
  2760   000099                     SPI2CLK         equ	153	;# 
  2761   0000AC                     ACTCON          equ	172	;# 
  2762   0000AD                     OSCCON1         equ	173	;# 
  2763   0000AE                     OSCCON2         equ	174	;# 
  2764   0000AF                     OSCCON3         equ	175	;# 
  2765   0000B0                     OSCTUNE         equ	176	;# 
  2766   0000B1                     OSCFRQ          equ	177	;# 
  2767   0000B1                     OSCFREQ         equ	177	;# 
  2768   0000B2                     OSCSTAT         equ	178	;# 
  2769   0000B2                     OSCSTAT1        equ	178	;# 
  2770   0000B3                     OSCEN           equ	179	;# 
  2771   0000B4                     PRLOCK          equ	180	;# 
  2772   0000B5                     SCANPR          equ	181	;# 
  2773   0000B6                     DMA1PR          equ	182	;# 
  2774   0000B7                     DMA2PR          equ	183	;# 
  2775   0000B8                     DMA3PR          equ	184	;# 
  2776   0000B9                     DMA4PR          equ	185	;# 
  2777   0000BA                     DMA5PR          equ	186	;# 
  2778   0000BB                     DMA6PR          equ	187	;# 
  2779   0000BE                     MAINPR          equ	190	;# 
  2780   0000BF                     ISRPR           equ	191	;# 
  2781   0000D4                     CLCDATA         equ	212	;# 
  2782   0000D5                     CLCSELECT       equ	213	;# 
  2783   0000D6                     CLCnCON         equ	214	;# 
  2784   0000D7                     CLCnPOL         equ	215	;# 
  2785   0000D8                     CLCnSEL0        equ	216	;# 
  2786   0000D9                     CLCnSEL1        equ	217	;# 
  2787   0000DA                     CLCnSEL2        equ	218	;# 
  2788   0000DB                     CLCnSEL3        equ	219	;# 
  2789   0000DC                     CLCnGLS0        equ	220	;# 
  2790   0000DD                     CLCnGLS1        equ	221	;# 
  2791   0000DE                     CLCnGLS2        equ	222	;# 
  2792   0000DF                     CLCnGLS3        equ	223	;# 
  2793   0000E8                     DMASELECT       equ	232	;# 
  2794   0000E9                     DMAnBUF         equ	233	;# 
  2795   0000EA                     DMAnDCNT        equ	234	;# 
  2796   0000EA                     DMAnDCNTL       equ	234	;# 
  2797   0000EB                     DMAnDCNTH       equ	235	;# 
  2798   0000EC                     DMAnDPTR        equ	236	;# 
  2799   0000EC                     DMAnDPTRL       equ	236	;# 
  2800   0000ED                     DMAnDPTRH       equ	237	;# 
  2801   0000EE                     DMAnDSZ         equ	238	;# 
  2802   0000EE                     DMAnDSZL        equ	238	;# 
  2803   0000EF                     DMAnDSZH        equ	239	;# 
  2804   0000F0                     DMAnDSA         equ	240	;# 
  2805   0000F0                     DMAnDSAL        equ	240	;# 
  2806   0000F1                     DMAnDSAH        equ	241	;# 
  2807   0000F2                     DMAnSCNT        equ	242	;# 
  2808   0000F2                     DMAnSCNTL       equ	242	;# 
  2809   0000F3                     DMAnSCNTH       equ	243	;# 
  2810   0000F4                     DMAnSPTR        equ	244	;# 
  2811   0000F4                     DMAnSPTRL       equ	244	;# 
  2812   0000F5                     DMAnSPTRH       equ	245	;# 
  2813   0000F6                     DMAnSPTRU       equ	246	;# 
  2814   0000F7                     DMAnSSZ         equ	247	;# 
  2815   0000F7                     DMAnSSZL        equ	247	;# 
  2816   0000F8                     DMAnSSZH        equ	248	;# 
  2817   0000F9                     DMAnSSA         equ	249	;# 
  2818   0000F9                     DMAnSSAL        equ	249	;# 
  2819   0000FA                     DMAnSSAH        equ	250	;# 
  2820   0000FB                     DMAnSSAU        equ	251	;# 
  2821   0000FC                     DMAnCON0        equ	252	;# 
  2822   0000FD                     DMAnCON1        equ	253	;# 
  2823   0000FE                     DMAnAIRQ        equ	254	;# 
  2824   0000FF                     DMAnSIRQ        equ	255	;# 
  2825   000200                     PPSLOCK         equ	512	;# 
  2826   000201                     RA0PPS          equ	513	;# 
  2827   000202                     RA1PPS          equ	514	;# 
  2828   000203                     RA2PPS          equ	515	;# 
  2829   000204                     RA3PPS          equ	516	;# 
  2830   000205                     RA4PPS          equ	517	;# 
  2831   000206                     RA5PPS          equ	518	;# 
  2832   000207                     RA6PPS          equ	519	;# 
  2833   000208                     RA7PPS          equ	520	;# 
  2834   000209                     RB0PPS          equ	521	;# 
  2835   00020A                     RB1PPS          equ	522	;# 
  2836   00020B                     RB2PPS          equ	523	;# 
  2837   00020C                     RB3PPS          equ	524	;# 
  2838   00020D                     RB4PPS          equ	525	;# 
  2839   00020E                     RB5PPS          equ	526	;# 
  2840   00020F                     RB6PPS          equ	527	;# 
  2841   000210                     RB7PPS          equ	528	;# 
  2842   000211                     RC0PPS          equ	529	;# 
  2843   000212                     RC1PPS          equ	530	;# 
  2844   000213                     RC2PPS          equ	531	;# 
  2845   000214                     RC3PPS          equ	532	;# 
  2846   000215                     RC4PPS          equ	533	;# 
  2847   000216                     RC5PPS          equ	534	;# 
  2848   000217                     RC6PPS          equ	535	;# 
  2849   000218                     RC7PPS          equ	536	;# 
  2850   000219                     RD0PPS          equ	537	;# 
  2851   00021A                     RD1PPS          equ	538	;# 
  2852   00021B                     RD2PPS          equ	539	;# 
  2853   00021C                     RD3PPS          equ	540	;# 
  2854   00021D                     RD4PPS          equ	541	;# 
  2855   00021E                     RD5PPS          equ	542	;# 
  2856   00021F                     RD6PPS          equ	543	;# 
  2857   000220                     RD7PPS          equ	544	;# 
  2858   000221                     RE0PPS          equ	545	;# 
  2859   000222                     RE1PPS          equ	546	;# 
  2860   000223                     RE2PPS          equ	547	;# 
  2861   000229                     RF0PPS          equ	553	;# 
  2862   00022A                     RF1PPS          equ	554	;# 
  2863   00022B                     RF2PPS          equ	555	;# 
  2864   00022C                     RF3PPS          equ	556	;# 
  2865   00022D                     RF4PPS          equ	557	;# 
  2866   00022E                     RF5PPS          equ	558	;# 
  2867   00022F                     RF6PPS          equ	559	;# 
  2868   000230                     RF7PPS          equ	560	;# 
  2869   00023E                     INT0PPS         equ	574	;# 
  2870   00023F                     INT1PPS         equ	575	;# 
  2871   000240                     INT2PPS         equ	576	;# 
  2872   000241                     T0CKIPPS        equ	577	;# 
  2873   000242                     T1CKIPPS        equ	578	;# 
  2874   000243                     T1GPPS          equ	579	;# 
  2875   000244                     T3CKIPPS        equ	580	;# 
  2876   000245                     T3GPPS          equ	581	;# 
  2877   000246                     T5CKIPPS        equ	582	;# 
  2878   000247                     T5GPPS          equ	583	;# 
  2879   000248                     T2INPPS         equ	584	;# 
  2880   000249                     T4INPPS         equ	585	;# 
  2881   00024A                     T6INPPS         equ	586	;# 
  2882   00024F                     CCP1PPS         equ	591	;# 
  2883   000250                     CCP2PPS         equ	592	;# 
  2884   000251                     CCP3PPS         equ	593	;# 
  2885   000253                     PWM1ERSPPS      equ	595	;# 
  2886   000254                     PWM2ERSPPS      equ	596	;# 
  2887   000255                     PWM3ERSPPS      equ	597	;# 
  2888   000257                     PWMIN0PPS       equ	599	;# 
  2889   000258                     PWMIN1PPS       equ	600	;# 
  2890   000259                     SMT1WINPPS      equ	601	;# 
  2891   00025A                     SMT1SIGPPS      equ	602	;# 
  2892   00025B                     CWG1PPS         equ	603	;# 
  2893   00025B                     CWG1INPPS       equ	603	;# 
  2894   00025C                     CWG2PPS         equ	604	;# 
  2895   00025C                     CWG2INPPS       equ	604	;# 
  2896   00025D                     CWG3PPS         equ	605	;# 
  2897   00025D                     CWG3INPPS       equ	605	;# 
  2898   00025E                     MD1CARLPPS      equ	606	;# 
  2899   00025E                     MDCARLPPS       equ	606	;# 
  2900   00025F                     MD1CARHPPS      equ	607	;# 
  2901   00025F                     MDCARHPPS       equ	607	;# 
  2902   000260                     MD1SRCPPS       equ	608	;# 
  2903   000260                     MDSRCPPS        equ	608	;# 
  2904   000261                     CLCIN0PPS       equ	609	;# 
  2905   000262                     CLCIN1PPS       equ	610	;# 
  2906   000263                     CLCIN2PPS       equ	611	;# 
  2907   000264                     CLCIN3PPS       equ	612	;# 
  2908   000265                     CLCIN4PPS       equ	613	;# 
  2909   000266                     CLCIN5PPS       equ	614	;# 
  2910   000267                     CLCIN6PPS       equ	615	;# 
  2911   000268                     CLCIN7PPS       equ	616	;# 
  2912   000269                     ADACTPPS        equ	617	;# 
  2913   00026A                     SPI1SCKPPS      equ	618	;# 
  2914   00026B                     SPI1SDIPPS      equ	619	;# 
  2915   00026C                     SPI1SSPPS       equ	620	;# 
  2916   00026D                     SPI2SCKPPS      equ	621	;# 
  2917   00026E                     SPI2SDIPPS      equ	622	;# 
  2918   00026F                     SPI2SSPPS       equ	623	;# 
  2919   000270                     I2C1SDAPPS      equ	624	;# 
  2920   000271                     I2C1SCLPPS      equ	625	;# 
  2921   000272                     U1RXPPS         equ	626	;# 
  2922   000273                     U1CTSPPS        equ	627	;# 
  2923   000274                     U2RXPPS         equ	628	;# 
  2924   000275                     U2CTSPPS        equ	629	;# 
  2925   000276                     U3RXPPS         equ	630	;# 
  2926   000277                     U3CTSPPS        equ	631	;# 
  2927   000278                     U4RXPPS         equ	632	;# 
  2928   000279                     U4CTSPPS        equ	633	;# 
  2929   00027A                     U5RXPPS         equ	634	;# 
  2930   00027B                     U5CTSPPS        equ	635	;# 
  2931   000286                     RC4I2C          equ	646	;# 
  2932   000287                     RC3I2C          equ	647	;# 
  2933   000288                     RB2I2C          equ	648	;# 
  2934   000289                     RB1I2C          equ	649	;# 
  2935   00028B                     I2C1RXB         equ	651	;# 
  2936   00028C                     I2C1TXB         equ	652	;# 
  2937   00028D                     I2C1CNT         equ	653	;# 
  2938   00028E                     I2C1ADB0        equ	654	;# 
  2939   00028F                     I2C1ADB1        equ	655	;# 
  2940   000290                     I2C1ADR0        equ	656	;# 
  2941   000291                     I2C1ADR1        equ	657	;# 
  2942   000292                     I2C1ADR2        equ	658	;# 
  2943   000293                     I2C1ADR3        equ	659	;# 
  2944   000294                     I2C1CON0        equ	660	;# 
  2945   000295                     I2C1CON1        equ	661	;# 
  2946   000296                     I2C1CON2        equ	662	;# 
  2947   000297                     I2C1ERR         equ	663	;# 
  2948   000298                     I2C1STAT0       equ	664	;# 
  2949   000299                     I2C1STAT1       equ	665	;# 
  2950   00029A                     I2C1PIR         equ	666	;# 
  2951   00029B                     I2C1PIE         equ	667	;# 
  2952   00029C                     I2C1CLK         equ	668	;# 
  2953   00029D                     I2C1BTO         equ	669	;# 
  2954   0002A1                     U1RXB           equ	673	;# 
  2955   0002A1                     U1RXBL          equ	673	;# 
  2956   0002A2                     U1RXCHK         equ	674	;# 
  2957   0002A3                     U1TXB           equ	675	;# 
  2958   0002A3                     U1TXBL          equ	675	;# 
  2959   0002A4                     U1TXCHK         equ	676	;# 
  2960   0002A5                     U1P1            equ	677	;# 
  2961   0002A5                     U1P1L           equ	677	;# 
  2962   0002A6                     U1P1H           equ	678	;# 
  2963   0002A7                     U1P2            equ	679	;# 
  2964   0002A7                     U1P2L           equ	679	;# 
  2965   0002A8                     U1P2H           equ	680	;# 
  2966   0002A9                     U1P3            equ	681	;# 
  2967   0002A9                     U1P3L           equ	681	;# 
  2968   0002AA                     U1P3H           equ	682	;# 
  2969   0002AB                     U1CON0          equ	683	;# 
  2970   0002AC                     U1CON1          equ	684	;# 
  2971   0002AD                     U1CON2          equ	685	;# 
  2972   0002AE                     U1BRG           equ	686	;# 
  2973   0002AE                     U1BRGL          equ	686	;# 
  2974   0002AF                     U1BRGH          equ	687	;# 
  2975   0002B0                     U1FIFO          equ	688	;# 
  2976   0002B1                     U1UIR           equ	689	;# 
  2977   0002B2                     U1ERRIR         equ	690	;# 
  2978   0002B3                     U1ERRIE         equ	691	;# 
  2979   0002B4                     U2RXB           equ	692	;# 
  2980   0002B4                     U2RXBL          equ	692	;# 
  2981   0002B6                     U2TXB           equ	694	;# 
  2982   0002B6                     U2TXBL          equ	694	;# 
  2983   0002B8                     U2P1            equ	696	;# 
  2984   0002B8                     U2P1L           equ	696	;# 
  2985   0002BA                     U2P2            equ	698	;# 
  2986   0002BA                     U2P2L           equ	698	;# 
  2987   0002BC                     U2P3            equ	700	;# 
  2988   0002BC                     U2P3L           equ	700	;# 
  2989   0002BE                     U2CON0          equ	702	;# 
  2990   0002BF                     U2CON1          equ	703	;# 
  2991   0002C0                     U2CON2          equ	704	;# 
  2992   0002C1                     U2BRG           equ	705	;# 
  2993   0002C1                     U2BRGL          equ	705	;# 
  2994   0002C2                     U2BRGH          equ	706	;# 
  2995   0002C3                     U2FIFO          equ	707	;# 
  2996   0002C4                     U2UIR           equ	708	;# 
  2997   0002C5                     U2ERRIR         equ	709	;# 
  2998   0002C6                     U2ERRIE         equ	710	;# 
  2999   0002C7                     U3RXB           equ	711	;# 
  3000   0002C7                     U3RXBL          equ	711	;# 
  3001   0002C9                     U3TXB           equ	713	;# 
  3002   0002C9                     U3TXBL          equ	713	;# 
  3003   0002CB                     U3P1            equ	715	;# 
  3004   0002CB                     U3P1L           equ	715	;# 
  3005   0002CD                     U3P2            equ	717	;# 
  3006   0002CD                     U3P2L           equ	717	;# 
  3007   0002CF                     U3P3            equ	719	;# 
  3008   0002CF                     U3P3L           equ	719	;# 
  3009   0002D1                     U3CON0          equ	721	;# 
  3010   0002D2                     U3CON1          equ	722	;# 
  3011   0002D3                     U3CON2          equ	723	;# 
  3012   0002D4                     U3BRG           equ	724	;# 
  3013   0002D4                     U3BRGL          equ	724	;# 
  3014   0002D5                     U3BRGH          equ	725	;# 
  3015   0002D6                     U3FIFO          equ	726	;# 
  3016   0002D7                     U3UIR           equ	727	;# 
  3017   0002D8                     U3ERRIR         equ	728	;# 
  3018   0002D9                     U3ERRIE         equ	729	;# 
  3019   0002DA                     U4RXB           equ	730	;# 
  3020   0002DA                     U4RXBL          equ	730	;# 
  3021   0002DC                     U4TXB           equ	732	;# 
  3022   0002DC                     U4TXBL          equ	732	;# 
  3023   0002DE                     U4P1            equ	734	;# 
  3024   0002DE                     U4P1L           equ	734	;# 
  3025   0002E0                     U4P2            equ	736	;# 
  3026   0002E0                     U4P2L           equ	736	;# 
  3027   0002E2                     U4P3            equ	738	;# 
  3028   0002E2                     U4P3L           equ	738	;# 
  3029   0002E4                     U4CON0          equ	740	;# 
  3030   0002E5                     U4CON1          equ	741	;# 
  3031   0002E6                     U4CON2          equ	742	;# 
  3032   0002E7                     U4BRG           equ	743	;# 
  3033   0002E7                     U4BRGL          equ	743	;# 
  3034   0002E8                     U4BRGH          equ	744	;# 
  3035   0002E9                     U4FIFO          equ	745	;# 
  3036   0002EA                     U4UIR           equ	746	;# 
  3037   0002EB                     U4ERRIR         equ	747	;# 
  3038   0002EC                     U4ERRIE         equ	748	;# 
  3039   0002ED                     U5RXB           equ	749	;# 
  3040   0002ED                     U5RXBL          equ	749	;# 
  3041   0002EF                     U5TXB           equ	751	;# 
  3042   0002EF                     U5TXBL          equ	751	;# 
  3043   0002F1                     U5P1            equ	753	;# 
  3044   0002F1                     U5P1L           equ	753	;# 
  3045   0002F3                     U5P2            equ	755	;# 
  3046   0002F3                     U5P2L           equ	755	;# 
  3047   0002F5                     U5P3            equ	757	;# 
  3048   0002F5                     U5P3L           equ	757	;# 
  3049   0002F7                     U5CON0          equ	759	;# 
  3050   0002F8                     U5CON1          equ	760	;# 
  3051   0002F9                     U5CON2          equ	761	;# 
  3052   0002FA                     U5BRG           equ	762	;# 
  3053   0002FA                     U5BRGL          equ	762	;# 
  3054   0002FB                     U5BRGH          equ	763	;# 
  3055   0002FC                     U5FIFO          equ	764	;# 
  3056   0002FD                     U5UIR           equ	765	;# 
  3057   0002FE                     U5ERRIR         equ	766	;# 
  3058   0002FF                     U5ERRIE         equ	767	;# 
  3059   000300                     SMT1TMR         equ	768	;# 
  3060   000300                     SMT1TMRL        equ	768	;# 
  3061   000301                     SMT1TMRH        equ	769	;# 
  3062   000302                     SMT1TMRU        equ	770	;# 
  3063   000303                     SMT1CPR         equ	771	;# 
  3064   000303                     SMT1CPRL        equ	771	;# 
  3065   000304                     SMT1CPRH        equ	772	;# 
  3066   000305                     SMT1CPRU        equ	773	;# 
  3067   000306                     SMT1CPW         equ	774	;# 
  3068   000306                     SMT1CPWL        equ	774	;# 
  3069   000307                     SMT1CPWH        equ	775	;# 
  3070   000308                     SMT1CPWU        equ	776	;# 
  3071   000309                     SMT1PR          equ	777	;# 
  3072   000309                     SMT1PRL         equ	777	;# 
  3073   00030A                     SMT1PRH         equ	778	;# 
  3074   00030B                     SMT1PRU         equ	779	;# 
  3075   00030C                     SMT1CON0        equ	780	;# 
  3076   00030D                     SMT1CON1        equ	781	;# 
  3077   00030E                     SMT1STAT        equ	782	;# 
  3078   00030F                     SMT1CLK         equ	783	;# 
  3079   000310                     SMT1SIG         equ	784	;# 
  3080   000311                     SMT1WIN         equ	785	;# 
  3081   000318                     TMR0L           equ	792	;# 
  3082   000318                     TMR0            equ	792	;# 
  3083   000319                     TMR0H           equ	793	;# 
  3084   000319                     PR0             equ	793	;# 
  3085   00031A                     T0CON0          equ	794	;# 
  3086   00031B                     T0CON1          equ	795	;# 
  3087   00031C                     TMR1            equ	796	;# 
  3088   00031C                     TMR1L           equ	796	;# 
  3089   00031D                     TMR1H           equ	797	;# 
  3090   00031E                     T1CON           equ	798	;# 
  3091   00031E                     TMR1CON         equ	798	;# 
  3092   00031F                     T1GCON          equ	799	;# 
  3093   00031F                     TMR1GCON        equ	799	;# 
  3094   000320                     T1GATE          equ	800	;# 
  3095   000320                     TMR1GATE        equ	800	;# 
  3096   000321                     T1CLK           equ	801	;# 
  3097   000321                     TMR1CLK         equ	801	;# 
  3098   000321                     PR1             equ	801	;# 
  3099   000322                     T2TMR           equ	802	;# 
  3100   000322                     TMR2            equ	802	;# 
  3101   000323                     T2PR            equ	803	;# 
  3102   000323                     PR2             equ	803	;# 
  3103   000324                     T2CON           equ	804	;# 
  3104   000325                     T2HLT           equ	805	;# 
  3105   000326                     T2CLKCON        equ	806	;# 
  3106   000326                     T2CLK           equ	806	;# 
  3107   000327                     T2RST           equ	807	;# 
  3108   000328                     TMR3            equ	808	;# 
  3109   000328                     TMR3L           equ	808	;# 
  3110   000329                     TMR3H           equ	809	;# 
  3111   00032A                     T3CON           equ	810	;# 
  3112   00032A                     TMR3CON         equ	810	;# 
  3113   00032B                     T3GCON          equ	811	;# 
  3114   00032B                     TMR3GCON        equ	811	;# 
  3115   00032C                     T3GATE          equ	812	;# 
  3116   00032C                     TMR3GATE        equ	812	;# 
  3117   00032D                     T3CLK           equ	813	;# 
  3118   00032D                     TMR3CLK         equ	813	;# 
  3119   00032D                     PR3             equ	813	;# 
  3120   00032E                     T4TMR           equ	814	;# 
  3121   00032E                     TMR4            equ	814	;# 
  3122   00032F                     T4PR            equ	815	;# 
  3123   00032F                     PR4             equ	815	;# 
  3124   000330                     T4CON           equ	816	;# 
  3125   000331                     T4HLT           equ	817	;# 
  3126   000332                     T4CLKCON        equ	818	;# 
  3127   000332                     T4CLK           equ	818	;# 
  3128   000333                     T4RST           equ	819	;# 
  3129   000334                     TMR5            equ	820	;# 
  3130   000334                     TMR5L           equ	820	;# 
  3131   000335                     TMR5H           equ	821	;# 
  3132   000336                     T5CON           equ	822	;# 
  3133   000336                     TMR5CON         equ	822	;# 
  3134   000337                     T5GCON          equ	823	;# 
  3135   000337                     TMR5GCON        equ	823	;# 
  3136   000338                     T5GATE          equ	824	;# 
  3137   000338                     TMR5GATE        equ	824	;# 
  3138   000339                     T5CLK           equ	825	;# 
  3139   000339                     TMR5CLK         equ	825	;# 
  3140   000339                     PR5             equ	825	;# 
  3141   00033A                     T6TMR           equ	826	;# 
  3142   00033A                     TMR6            equ	826	;# 
  3143   00033B                     T6PR            equ	827	;# 
  3144   00033B                     PR6             equ	827	;# 
  3145   00033C                     T6CON           equ	828	;# 
  3146   00033D                     T6HLT           equ	829	;# 
  3147   00033E                     T6CLKCON        equ	830	;# 
  3148   00033E                     T6CLK           equ	830	;# 
  3149   00033F                     T6RST           equ	831	;# 
  3150   000340                     CCPR1           equ	832	;# 
  3151   000340                     CCPR1L          equ	832	;# 
  3152   000341                     CCPR1H          equ	833	;# 
  3153   000342                     CCP1CON         equ	834	;# 
  3154   000343                     CCP1CAP         equ	835	;# 
  3155   000344                     CCPR2           equ	836	;# 
  3156   000344                     CCPR2L          equ	836	;# 
  3157   000345                     CCPR2H          equ	837	;# 
  3158   000346                     CCP2CON         equ	838	;# 
  3159   000347                     CCP2CAP         equ	839	;# 
  3160   000348                     CCPR3           equ	840	;# 
  3161   000348                     CCPR3L          equ	840	;# 
  3162   000349                     CCPR3H          equ	841	;# 
  3163   00034A                     CCP3CON         equ	842	;# 
  3164   00034B                     CCP3CAP         equ	843	;# 
  3165   00034C                     CCPTMRS0        equ	844	;# 
  3166   00034F                     CRCDATA         equ	847	;# 
  3167   00034F                     CRCDATL         equ	847	;# 
  3168   000350                     CRCDATH         equ	848	;# 
  3169   000351                     CRCACC          equ	849	;# 
  3170   000351                     CRCACCL         equ	849	;# 
  3171   000352                     CRCACCH         equ	850	;# 
  3172   000353                     CRCSHFT         equ	851	;# 
  3173   000353                     CRCSHIFTL       equ	851	;# 
  3174   000354                     CRCSHIFTH       equ	852	;# 
  3175   000355                     CRCXOR          equ	853	;# 
  3176   000355                     CRCXORL         equ	853	;# 
  3177   000356                     CRCXORH         equ	854	;# 
  3178   000357                     CRCCON0         equ	855	;# 
  3179   000358                     CRCCON1         equ	856	;# 
  3180   00035A                     SCANLADR        equ	858	;# 
  3181   00035A                     SCANLADRL       equ	858	;# 
  3182   00035B                     SCANLADRH       equ	859	;# 
  3183   00035C                     SCANLADRU       equ	860	;# 
  3184   00035D                     SCANHADR        equ	861	;# 
  3185   00035D                     SCANHADRL       equ	861	;# 
  3186   00035E                     SCANHADRH       equ	862	;# 
  3187   00035F                     SCANHADRU       equ	863	;# 
  3188   000360                     SCANCON0        equ	864	;# 
  3189   000361                     SCANTRIG        equ	865	;# 
  3190   000362                     IPR0            equ	866	;# 
  3191   000363                     IPR1            equ	867	;# 
  3192   000364                     IPR2            equ	868	;# 
  3193   000365                     IPR3            equ	869	;# 
  3194   000366                     IPR4            equ	870	;# 
  3195   000367                     IPR5            equ	871	;# 
  3196   000368                     IPR6            equ	872	;# 
  3197   000369                     IPR7            equ	873	;# 
  3198   00036A                     IPR8            equ	874	;# 
  3199   00036B                     IPR9            equ	875	;# 
  3200   00036C                     IPR10           equ	876	;# 
  3201   00036D                     IPR11           equ	877	;# 
  3202   00036E                     IPR12           equ	878	;# 
  3203   00036F                     IPR13           equ	879	;# 
  3204   000370                     IPR14           equ	880	;# 
  3205   000371                     IPR15           equ	881	;# 
  3206   000373                     STATUS_CSHAD    equ	883	;# 
  3207   000374                     WREG_CSHAD      equ	884	;# 
  3208   000375                     BSR_CSHAD       equ	885	;# 
  3209   000376                     SHADCON         equ	886	;# 
  3210   000377                     STATUS_SHAD     equ	887	;# 
  3211   000378                     WREG_SHAD       equ	888	;# 
  3212   000379                     BSR_SHAD        equ	889	;# 
  3213   00037A                     PCLATH_SHAD     equ	890	;# 
  3214   00037B                     PCLATU_SHAD     equ	891	;# 
  3215   00037C                     FSR0SH          equ	892	;# 
  3216   00037C                     FSR0L_SHAD      equ	892	;# 
  3217   00037D                     FSR0H_SHAD      equ	893	;# 
  3218   00037E                     FSR1SH          equ	894	;# 
  3219   00037E                     FSR1L_SHAD      equ	894	;# 
  3220   00037F                     FSR1H_SHAD      equ	895	;# 
  3221   000380                     FSR2SH          equ	896	;# 
  3222   000380                     FSR2L_SHAD      equ	896	;# 
  3223   000381                     FSR2H_SHAD      equ	897	;# 
  3224   000382                     PRODSH          equ	898	;# 
  3225   000382                     PRODL_SHAD      equ	898	;# 
  3226   000383                     PRODH_SHAD      equ	899	;# 
  3227   0003BC                     CWG1CLK         equ	956	;# 
  3228   0003BC                     CWG1CLKCON      equ	956	;# 
  3229   0003BD                     CWG1ISM         equ	957	;# 
  3230   0003BD                     CWG1DAT         equ	957	;# 
  3231   0003BE                     CWG1DBR         equ	958	;# 
  3232   0003BF                     CWG1DBF         equ	959	;# 
  3233   0003C0                     CWG1CON0        equ	960	;# 
  3234   0003C1                     CWG1CON1        equ	961	;# 
  3235   0003C2                     CWG1AS0         equ	962	;# 
  3236   0003C3                     CWG1AS1         equ	963	;# 
  3237   0003C4                     CWG1STR         equ	964	;# 
  3238   0003C5                     CWG2CLK         equ	965	;# 
  3239   0003C5                     CWG2CLKCON      equ	965	;# 
  3240   0003C6                     CWG2ISM         equ	966	;# 
  3241   0003C6                     CWG2DAT         equ	966	;# 
  3242   0003C7                     CWG2DBR         equ	967	;# 
  3243   0003C8                     CWG2DBF         equ	968	;# 
  3244   0003C9                     CWG2CON0        equ	969	;# 
  3245   0003CA                     CWG2CON1        equ	970	;# 
  3246   0003CB                     CWG2AS0         equ	971	;# 
  3247   0003CC                     CWG2AS1         equ	972	;# 
  3248   0003CD                     CWG2STR         equ	973	;# 
  3249   0003CE                     CWG3CLK         equ	974	;# 
  3250   0003CE                     CWG3CLKCON      equ	974	;# 
  3251   0003CF                     CWG3ISM         equ	975	;# 
  3252   0003CF                     CWG3DAT         equ	975	;# 
  3253   0003D0                     CWG3DBR         equ	976	;# 
  3254   0003D1                     CWG3DBF         equ	977	;# 
  3255   0003D2                     CWG3CON0        equ	978	;# 
  3256   0003D3                     CWG3CON1        equ	979	;# 
  3257   0003D4                     CWG3AS0         equ	980	;# 
  3258   0003D5                     CWG3AS1         equ	981	;# 
  3259   0003D6                     CWG3STR         equ	982	;# 
  3260   0003D7                     FVRCON          equ	983	;# 
  3261   0003D8                     ADCPCON         equ	984	;# 
  3262   0003D8                     ADCP            equ	984	;# 
  3263   0003D9                     ADLTH           equ	985	;# 
  3264   0003D9                     ADLTHL          equ	985	;# 
  3265   0003DA                     ADLTHH          equ	986	;# 
  3266   0003DB                     ADUTH           equ	987	;# 
  3267   0003DB                     ADUTHL          equ	987	;# 
  3268   0003DC                     ADUTHH          equ	988	;# 
  3269   0003DD                     ADERR           equ	989	;# 
  3270   0003DD                     ADERRL          equ	989	;# 
  3271   0003DE                     ADERRH          equ	990	;# 
  3272   0003DF                     ADSTPT          equ	991	;# 
  3273   0003DF                     ADSTPTL         equ	991	;# 
  3274   0003E0                     ADSTPTH         equ	992	;# 
  3275   0003E1                     ADFLTR          equ	993	;# 
  3276   0003E1                     ADFLTRL         equ	993	;# 
  3277   0003E2                     ADFLTRH         equ	994	;# 
  3278   0003E3                     ADACC           equ	995	;# 
  3279   0003E3                     ADACCL          equ	995	;# 
  3280   0003E4                     ADACCH          equ	996	;# 
  3281   0003E5                     ADACCU          equ	997	;# 
  3282   0003E6                     ADCNT           equ	998	;# 
  3283   0003E7                     ADRPT           equ	999	;# 
  3284   0003E8                     ADPREV          equ	1000	;# 
  3285   0003E8                     ADPREVL         equ	1000	;# 
  3286   0003E9                     ADPREVH         equ	1001	;# 
  3287   0003EA                     ADRES           equ	1002	;# 
  3288   0003EA                     ADRESL          equ	1002	;# 
  3289   0003EB                     ADRESH          equ	1003	;# 
  3290   0003EC                     ADPCH           equ	1004	;# 
  3291   0003EE                     ADACQ           equ	1006	;# 
  3292   0003EE                     ADACQL          equ	1006	;# 
  3293   0003EF                     ADACQH          equ	1007	;# 
  3294   0003F0                     ADCAP           equ	1008	;# 
  3295   0003F1                     ADPRE           equ	1009	;# 
  3296   0003F1                     ADPREL          equ	1009	;# 
  3297   0003F2                     ADPREH          equ	1010	;# 
  3298   0003F3                     ADCON0          equ	1011	;# 
  3299   0003F4                     ADCON1          equ	1012	;# 
  3300   0003F5                     ADCON2          equ	1013	;# 
  3301   0003F6                     ADCON3          equ	1014	;# 
  3302   0003F7                     ADSTAT          equ	1015	;# 
  3303   0003F8                     ADREF           equ	1016	;# 
  3304   0003F9                     ADACT           equ	1017	;# 
  3305   0003FA                     ADCLK           equ	1018	;# 
  3306   000400                     ANSELA          equ	1024	;# 
  3307   000401                     WPUA            equ	1025	;# 
  3308   000402                     ODCONA          equ	1026	;# 
  3309   000403                     SLRCONA         equ	1027	;# 
  3310   000404                     INLVLA          equ	1028	;# 
  3311   000405                     IOCAP           equ	1029	;# 
  3312   000406                     IOCAN           equ	1030	;# 
  3313   000407                     IOCAF           equ	1031	;# 
  3314   000408                     ANSELB          equ	1032	;# 
  3315   000409                     WPUB            equ	1033	;# 
  3316   00040A                     ODCONB          equ	1034	;# 
  3317   00040B                     SLRCONB         equ	1035	;# 
  3318   00040C                     INLVLB          equ	1036	;# 
  3319   00040D                     IOCBP           equ	1037	;# 
  3320   00040E                     IOCBN           equ	1038	;# 
  3321   00040F                     IOCBF           equ	1039	;# 
  3322   000410                     ANSELC          equ	1040	;# 
  3323   000411                     WPUC            equ	1041	;# 
  3324   000412                     ODCONC          equ	1042	;# 
  3325   000413                     SLRCONC         equ	1043	;# 
  3326   000414                     INLVLC          equ	1044	;# 
  3327   000415                     IOCCP           equ	1045	;# 
  3328   000416                     IOCCN           equ	1046	;# 
  3329   000417                     IOCCF           equ	1047	;# 
  3330   000418                     ANSELD          equ	1048	;# 
  3331   000419                     WPUD            equ	1049	;# 
  3332   00041A                     ODCOND          equ	1050	;# 
  3333   00041B                     SLRCOND         equ	1051	;# 
  3334   00041C                     INLVLD          equ	1052	;# 
  3335   000420                     ANSELE          equ	1056	;# 
  3336   000421                     WPUE            equ	1057	;# 
  3337   000422                     ODCONE          equ	1058	;# 
  3338   000423                     SLRCONE         equ	1059	;# 
  3339   000424                     INLVLE          equ	1060	;# 
  3340   000425                     IOCEP           equ	1061	;# 
  3341   000426                     IOCEN           equ	1062	;# 
  3342   000427                     IOCEF           equ	1063	;# 
  3343   000428                     ANSELF          equ	1064	;# 
  3344   000429                     WPUF            equ	1065	;# 
  3345   00042A                     ODCONF          equ	1066	;# 
  3346   00042B                     SLRCONF         equ	1067	;# 
  3347   00042C                     INLVLF          equ	1068	;# 
  3348   000440                     NCO1ACC         equ	1088	;# 
  3349   000440                     NCO1ACCL        equ	1088	;# 
  3350   000441                     NCO1ACCH        equ	1089	;# 
  3351   000442                     NCO1ACCU        equ	1090	;# 
  3352   000443                     NCO1INC         equ	1091	;# 
  3353   000443                     NCO1INCL        equ	1091	;# 
  3354   000444                     NCO1INCH        equ	1092	;# 
  3355   000445                     NCO1INCU        equ	1093	;# 
  3356   000446                     NCO1CON         equ	1094	;# 
  3357   000447                     NCO1CLK         equ	1095	;# 
  3358   000448                     NCO2ACC         equ	1096	;# 
  3359   000448                     NCO2ACCL        equ	1096	;# 
  3360   000449                     NCO2ACCH        equ	1097	;# 
  3361   00044A                     NCO2ACCU        equ	1098	;# 
  3362   00044B                     NCO2INC         equ	1099	;# 
  3363   00044B                     NCO2INCL        equ	1099	;# 
  3364   00044C                     NCO2INCH        equ	1100	;# 
  3365   00044D                     NCO2INCU        equ	1101	;# 
  3366   00044E                     NCO2CON         equ	1102	;# 
  3367   00044F                     NCO2CLK         equ	1103	;# 
  3368   000450                     NCO3ACC         equ	1104	;# 
  3369   000450                     NCO3ACCL        equ	1104	;# 
  3370   000451                     NCO3ACCH        equ	1105	;# 
  3371   000452                     NCO3ACCU        equ	1106	;# 
  3372   000453                     NCO3INC         equ	1107	;# 
  3373   000453                     NCO3INCL        equ	1107	;# 
  3374   000454                     NCO3INCH        equ	1108	;# 
  3375   000455                     NCO3INCU        equ	1109	;# 
  3376   000456                     NCO3CON         equ	1110	;# 
  3377   000457                     NCO3CLK         equ	1111	;# 
  3378   000459                     IVTLOCK         equ	1113	;# 
  3379   00045A                     IVTAD           equ	1114	;# 
  3380   00045A                     IVTADL          equ	1114	;# 
  3381   00045B                     IVTADH          equ	1115	;# 
  3382   00045C                     IVTADU          equ	1116	;# 
  3383   00045D                     IVTBASE         equ	1117	;# 
  3384   00045D                     IVTBASEL        equ	1117	;# 
  3385   00045E                     IVTBASEH        equ	1118	;# 
  3386   00045F                     IVTBASEU        equ	1119	;# 
  3387   000460                     PWM1ERS         equ	1120	;# 
  3388   000461                     PWM1CLK         equ	1121	;# 
  3389   000462                     PWM1LDS         equ	1122	;# 
  3390   000463                     PWM1PR          equ	1123	;# 
  3391   000463                     PWM1PRL         equ	1123	;# 
  3392   000464                     PWM1PRH         equ	1124	;# 
  3393   000465                     PWM1CPRE        equ	1125	;# 
  3394   000466                     PWM1PIPOS       equ	1126	;# 
  3395   000467                     PWM1GIR         equ	1127	;# 
  3396   000468                     PWM1GIE         equ	1128	;# 
  3397   000469                     PWM1CON         equ	1129	;# 
  3398   00046A                     PWM1S1CFG       equ	1130	;# 
  3399   00046B                     PWM1S1P1        equ	1131	;# 
  3400   00046B                     PWM1S1P1L       equ	1131	;# 
  3401   00046C                     PWM1S1P1H       equ	1132	;# 
  3402   00046D                     PWM1S1P2        equ	1133	;# 
  3403   00046D                     PWM1S1P2L       equ	1133	;# 
  3404   00046E                     PWM1S1P2H       equ	1134	;# 
  3405   00046F                     PWM2ERS         equ	1135	;# 
  3406   000470                     PWM2CLK         equ	1136	;# 
  3407   000471                     PWM2LDS         equ	1137	;# 
  3408   000472                     PWM2PR          equ	1138	;# 
  3409   000472                     PWM2PRL         equ	1138	;# 
  3410   000473                     PWM2PRH         equ	1139	;# 
  3411   000474                     PWM2CPRE        equ	1140	;# 
  3412   000475                     PWM2PIPOS       equ	1141	;# 
  3413   000476                     PWM2GIR         equ	1142	;# 
  3414   000477                     PWM2GIE         equ	1143	;# 
  3415   000478                     PWM2CON         equ	1144	;# 
  3416   000479                     PWM2S1CFG       equ	1145	;# 
  3417   00047A                     PWM2S1P1        equ	1146	;# 
  3418   00047A                     PWM2S1P1L       equ	1146	;# 
  3419   00047B                     PWM2S1P1H       equ	1147	;# 
  3420   00047C                     PWM2S1P2        equ	1148	;# 
  3421   00047C                     PWM2S1P2L       equ	1148	;# 
  3422   00047D                     PWM2S1P2H       equ	1149	;# 
  3423   00047E                     PWM3ERS         equ	1150	;# 
  3424   00047F                     PWM3CLK         equ	1151	;# 
  3425   000480                     PWM3LDS         equ	1152	;# 
  3426   000481                     PWM3PR          equ	1153	;# 
  3427   000481                     PWM3PRL         equ	1153	;# 
  3428   000482                     PWM3PRH         equ	1154	;# 
  3429   000483                     PWM3CPRE        equ	1155	;# 
  3430   000484                     PWM3PIPOS       equ	1156	;# 
  3431   000485                     PWM3GIR         equ	1157	;# 
  3432   000486                     PWM3GIE         equ	1158	;# 
  3433   000487                     PWM3CON         equ	1159	;# 
  3434   000488                     PWM3S1CFG       equ	1160	;# 
  3435   000489                     PWM3S1P1        equ	1161	;# 
  3436   000489                     PWM3S1P1L       equ	1161	;# 
  3437   00048A                     PWM3S1P1H       equ	1162	;# 
  3438   00048B                     PWM3S1P2        equ	1163	;# 
  3439   00048B                     PWM3S1P2L       equ	1163	;# 
  3440   00048C                     PWM3S1P2H       equ	1164	;# 
  3441   00049C                     PWMLOAD         equ	1180	;# 
  3442   00049D                     PWMEN           equ	1181	;# 
  3443   00049E                     PIE0            equ	1182	;# 
  3444   00049F                     PIE1            equ	1183	;# 
  3445   0004A0                     PIE2            equ	1184	;# 
  3446   0004A1                     PIE3            equ	1185	;# 
  3447   0004A2                     PIE4            equ	1186	;# 
  3448   0004A3                     PIE5            equ	1187	;# 
  3449   0004A4                     PIE6            equ	1188	;# 
  3450   0004A5                     PIE7            equ	1189	;# 
  3451   0004A6                     PIE8            equ	1190	;# 
  3452   0004A7                     PIE9            equ	1191	;# 
  3453   0004A8                     PIE10           equ	1192	;# 
  3454   0004A9                     PIE11           equ	1193	;# 
  3455   0004AA                     PIE12           equ	1194	;# 
  3456   0004AB                     PIE13           equ	1195	;# 
  3457   0004AC                     PIE14           equ	1196	;# 
  3458   0004AD                     PIE15           equ	1197	;# 
  3459   0004AE                     PIR0            equ	1198	;# 
  3460   0004AF                     PIR1            equ	1199	;# 
  3461   0004B0                     PIR2            equ	1200	;# 
  3462   0004B1                     PIR3            equ	1201	;# 
  3463   0004B2                     PIR4            equ	1202	;# 
  3464   0004B3                     PIR5            equ	1203	;# 
  3465   0004B4                     PIR6            equ	1204	;# 
  3466   0004B5                     PIR7            equ	1205	;# 
  3467   0004B6                     PIR8            equ	1206	;# 
  3468   0004B7                     PIR9            equ	1207	;# 
  3469   0004B8                     PIR10           equ	1208	;# 
  3470   0004B9                     PIR11           equ	1209	;# 
  3471   0004BA                     PIR12           equ	1210	;# 
  3472   0004BB                     PIR13           equ	1211	;# 
  3473   0004BC                     PIR14           equ	1212	;# 
  3474   0004BD                     PIR15           equ	1213	;# 
  3475   0004BE                     LATA            equ	1214	;# 
  3476   0004BF                     LATB            equ	1215	;# 
  3477   0004C0                     LATC            equ	1216	;# 
  3478   0004C1                     LATD            equ	1217	;# 
  3479   0004C2                     LATE            equ	1218	;# 
  3480   0004C3                     LATF            equ	1219	;# 
  3481   0004C6                     TRISA           equ	1222	;# 
  3482   0004C7                     TRISB           equ	1223	;# 
  3483   0004C8                     TRISC           equ	1224	;# 
  3484   0004C9                     TRISD           equ	1225	;# 
  3485   0004CA                     TRISE           equ	1226	;# 
  3486   0004CB                     TRISF           equ	1227	;# 
  3487   0004CE                     PORTA           equ	1230	;# 
  3488   0004CF                     PORTB           equ	1231	;# 
  3489   0004D0                     PORTC           equ	1232	;# 
  3490   0004D1                     PORTD           equ	1233	;# 
  3491   0004D2                     PORTE           equ	1234	;# 
  3492   0004D3                     PORTF           equ	1235	;# 
  3493   0004D6                     INTCON0         equ	1238	;# 
  3494   0004D7                     INTCON1         equ	1239	;# 
  3495   0004D8                     STATUS          equ	1240	;# 
  3496   0004D9                     FSR2            equ	1241	;# 
  3497   0004D9                     FSR2L           equ	1241	;# 
  3498   0004DA                     FSR2H           equ	1242	;# 
  3499   0004DB                     PLUSW2          equ	1243	;# 
  3500   0004DC                     PREINC2         equ	1244	;# 
  3501   0004DD                     POSTDEC2        equ	1245	;# 
  3502   0004DE                     POSTINC2        equ	1246	;# 
  3503   0004DF                     INDF2           equ	1247	;# 
  3504   0004E0                     BSR             equ	1248	;# 
  3505   0004E1                     FSR1            equ	1249	;# 
  3506   0004E1                     FSR1L           equ	1249	;# 
  3507   0004E2                     FSR1H           equ	1250	;# 
  3508   0004E3                     PLUSW1          equ	1251	;# 
  3509   0004E4                     PREINC1         equ	1252	;# 
  3510   0004E5                     POSTDEC1        equ	1253	;# 
  3511   0004E6                     POSTINC1        equ	1254	;# 
  3512   0004E7                     INDF1           equ	1255	;# 
  3513   0004E8                     WREG            equ	1256	;# 
  3514   0004E9                     FSR0            equ	1257	;# 
  3515   0004E9                     FSR0L           equ	1257	;# 
  3516   0004EA                     FSR0H           equ	1258	;# 
  3517   0004EB                     PLUSW0          equ	1259	;# 
  3518   0004EC                     PREINC0         equ	1260	;# 
  3519   0004ED                     POSTDEC0        equ	1261	;# 
  3520   0004EE                     POSTINC0        equ	1262	;# 
  3521   0004EF                     INDF0           equ	1263	;# 
  3522   0004F0                     PCON0           equ	1264	;# 
  3523   0004F1                     PCON1           equ	1265	;# 
  3524   0004F2                     CPUDOZE         equ	1266	;# 
  3525   0004F3                     PROD            equ	1267	;# 
  3526   0004F3                     PRODL           equ	1267	;# 
  3527   0004F4                     PRODH           equ	1268	;# 
  3528   0004F5                     TABLAT          equ	1269	;# 
  3529   0004F6                     TBLPTR          equ	1270	;# 
  3530   0004F6                     TBLPTRL         equ	1270	;# 
  3531   0004F7                     TBLPTRH         equ	1271	;# 
  3532   0004F8                     TBLPTRU         equ	1272	;# 
  3533   0004F9                     PCLAT           equ	1273	;# 
  3534   0004F9                     PCL             equ	1273	;# 
  3535   0004FA                     PCLATH          equ	1274	;# 
  3536   0004FB                     PCLATU          equ	1275	;# 
  3537   0004FC                     STKPTR          equ	1276	;# 
  3538   0004FD                     TOS             equ	1277	;# 
  3539   0004FD                     TOSL            equ	1277	;# 
  3540   0004FE                     TOSH            equ	1278	;# 
  3541   0004FF                     TOSU            equ	1279	;# 
  3542                           
  3543                           	psect	idataCOMRAM
  3544   003416                     __pidataCOMRAM:
  3545                           	callstack 0
  3546                           
  3547                           ;initializer for _I2C_LCD_ADDR
  3548   003416  27                 	db	39
  3549   000087                     _SPI1STATUSbits set	135
  3550   000081                     _SPI1TXB        set	129
  3551   0000D6                     _CLCnCON        set	214
  3552   0000D7                     _CLCnPOL        set	215
  3553   0000DF                     _CLCnGLS3       set	223
  3554   0000DE                     _CLCnGLS2       set	222
  3555   0000DD                     _CLCnGLS1       set	221
  3556   0000DC                     _CLCnGLS0       set	220
  3557   0000DA                     _CLCnSEL2       set	218
  3558   0000D9                     _CLCnSEL1       set	217
  3559   0000D8                     _CLCnSEL0       set	216
  3560   0000D5                     _CLCSELECT      set	213
  3561   00008C                     _SPI1CLK        set	140
  3562   000086                     _SPI1CON2       set	134
  3563   000085                     _SPI1CON1       set	133
  3564   000084                     _SPI1CON0       set	132
  3565   0000B3                     _OSCEN          set	179
  3566   0000B1                     _OSCFRQ         set	177
  3567   0000AD                     _OSCCON1        set	173
  3568   00022B                     _RF2PPS         set	555
  3569   00029A                     _I2C1PIRbits    set	666
  3570   000295                     _I2C1CON1bits   set	661
  3571   000299                     _I2C1STAT1bits  set	665
  3572   00028C                     _I2C1TXB        set	652
  3573   00028F                     _I2C1ADB1       set	655
  3574   00028D                     _I2C1CNT        set	653
  3575   000296                     _I2C1CON2bits   set	662
  3576   00029C                     _I2C1CLKbits    set	668
  3577   000294                     _I2C1CON0bits   set	660
  3578   000286                     _RC4I2Cbits     set	646
  3579   000287                     _RC3I2Cbits     set	647
  3580   000215                     _RC4PPS         set	533
  3581   000214                     _RC3PPS         set	532
  3582   000340                     _CCPR1L         set	832
  3583   000341                     _CCPR1H         set	833
  3584   000342                     _CCP1CON        set	834
  3585   000323                     _T2PR           set	803
  3586   000326                     _T2CLKCON       set	806
  3587   000324                     _T2CON          set	804
  3588   000428                     _ANSELFbits     set	1064
  3589   000408                     _ANSELBbits     set	1032
  3590   000412                     _ODCONCbits     set	1042
  3591   000410                     _ANSELCbits     set	1040
  3592   0004CB                     _TRISFbits      set	1227
  3593   0004CF                     _PORTBbits      set	1231
  3594   0004BF                     _LATBbits       set	1215
  3595   0004C7                     _TRISBbits      set	1223
  3596   0004C8                     _TRISCbits      set	1224
  3597                           
  3598                           	psect	smallconst
  3599   002600                     __psmallconst:
  3600                           	callstack 0
  3601   002600  00                 	db	0
  3602   002601                     STR_2:
  3603   002601  4D                 	db	77	;'M'
  3604   002602  69                 	db	105	;'i'
  3605   002603  63                 	db	99	;'c'
  3606   002604  72                 	db	114	;'r'
  3607   002605  6F                 	db	111	;'o'
  3608   002606  20                 	db	32
  3609   002607  32                 	db	50	;'2'
  3610   002608  30                 	db	48	;'0'
  3611   002609  32                 	db	50	;'2'
  3612   00260A  35                 	db	53	;'5'
  3613   00260B  2D                 	db	45
  3614   00260C  31                 	db	49	;'1'
  3615   00260D  00                 	db	0
  3616   00260E                     STR_1:
  3617   00260E  48                 	db	72	;'H'
  3618   00260F  6F                 	db	111	;'o'
  3619   002610  6C                 	db	108	;'l'
  3620   002611  61                 	db	97	;'a'
  3621   002612  20                 	db	32
  3622   002613  55                 	db	85	;'U'
  3623   002614  50                 	db	80	;'P'
  3624   002615  43                 	db	67	;'C'
  3625   002616  69                 	db	105	;'i'
  3626   002617  6E                 	db	110	;'n'
  3627   002618  6F                 	db	111	;'o'
  3628   002619  00                 	db	0
  3629   00261A                     STR_4:
  3630   00261A  48                 	db	72	;'H'
  3631   00261B  75                 	db	117	;'u'
  3632   00261C  6D                 	db	109	;'m'
  3633   00261D  65                 	db	101	;'e'
  3634   00261E  64                 	db	100	;'d'
  3635   00261F  20                 	db	32
  3636   002620  44                 	db	68	;'D'
  3637   002621  48                 	db	72	;'H'
  3638   002622  54                 	db	84	;'T'
  3639   002623  3A                 	db	58	;':'
  3640   002624  00                 	db	0
  3641   002625                     STR_3:
  3642   002625  54                 	db	84	;'T'
  3643   002626  65                 	db	101	;'e'
  3644   002627  6D                 	db	109	;'m'
  3645   002628  70                 	db	112	;'p'
  3646   002629  20                 	db	32
  3647   00262A  44                 	db	68	;'D'
  3648   00262B  48                 	db	72	;'H'
  3649   00262C  54                 	db	84	;'T'
  3650   00262D  3A                 	db	58	;':'
  3651   00262E  00                 	db	0
  3652   00262F  00                 	db	0	; dummy byte at the end
  3653   002600                     __smallconst    set	__psmallconst
  3654   002600                     __mediumconst   set	__psmallconst
  3655   000003                     __activetblptr  equ	3
  3656                           
  3657                           ; #config settings
  3658                           
  3659                           	psect	cinit
  3660   003388                     __pcinit:
  3661                           	callstack 0
  3662   003388                     start_initialization:
  3663                           	callstack 0
  3664   003388                     __initialization:
  3665                           	callstack 0
  3666                           
  3667                           ; Initialize objects allocated to COMRAM (1 bytes)
  3668                           ; load TBLPTR registers with __pidataCOMRAM
  3669   003388  0E16               	movlw	low __pidataCOMRAM
  3670   00338A  6EF6               	movwf	tblptrl,c
  3671   00338C  0E34               	movlw	high __pidataCOMRAM
  3672   00338E  6EF7               	movwf	tblptrh,c
  3673   003390  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3674   003392  6EF8               	movwf	tblptru,c
  3675   003394  0009               	tblrd		*+	;fetch initializer
  3676   003396  C4F5 F51E          	movff	tablat,__pdataCOMRAM
  3677                           
  3678                           ; Clear objects allocated to COMRAM (4 bytes)
  3679   00339A  6A1D               	clrf	(__pbssCOMRAM+3)& (0+255),c
  3680   00339C  6A1C               	clrf	(__pbssCOMRAM+2)& (0+255),c
  3681   00339E  6A1B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  3682   0033A0  6A1A               	clrf	__pbssCOMRAM& (0+255),c
  3683   0033A2                     end_of_initialization:
  3684                           	callstack 0
  3685   0033A2                     __end_of__initialization:
  3686                           	callstack 0
  3687   0033A2  0100               	movlb	0
  3688   0033A4  EF67  F016         	goto	_main	;jump to C main() function
  3689                           
  3690                           	psect	bssCOMRAM
  3691   00051A                     __pbssCOMRAM:
  3692                           	callstack 0
  3693   00051A                     _humedad_dht11:
  3694                           	callstack 0
  3695   00051A                     	ds	2
  3696   00051C                     _temperatura_dht11:
  3697                           	callstack 0
  3698   00051C                     	ds	2
  3699                           
  3700                           	psect	dataCOMRAM
  3701   00051E                     __pdataCOMRAM:
  3702                           	callstack 0
  3703   00051E                     _I2C_LCD_ADDR:
  3704                           	callstack 0
  3705   00051E                     	ds	1
  3706                           
  3707                           	psect	cstackCOMRAM
  3708   000501                     __pcstackCOMRAM:
  3709                           	callstack 0
  3710   000501                     ?_strlen:
  3711                           	callstack 0
  3712   000501                     ?___lwmod:
  3713                           	callstack 0
  3714   000501                     I2C1_WRITESINGLEBYTE@dato:
  3715                           	callstack 0
  3716   000501                     DHT_Check@modelo:
  3717                           	callstack 0
  3718   000501                     DHT_Read@modelo:
  3719                           	callstack 0
  3720   000501                     WS2812_DATA_SEND@red:
  3721                           	callstack 0
  3722   000501                     strlen@s:
  3723                           	callstack 0
  3724   000501                     ___lwmod@dividend:
  3725                           	callstack 0
  3726   000501                     ??_DHT_Start:
  3727   000501                     
  3728                           ; 1 bytes @ 0x0
  3729   000501                     	ds	1
  3730   000502                     I2C1_WRITESINGLEBYTE@direccion:
  3731                           	callstack 0
  3732   000502                     DHT_Start@modelo:
  3733                           	callstack 0
  3734   000502                     DHT_Check@temp_x:
  3735                           	callstack 0
  3736   000502                     DHT_Read@x:
  3737                           	callstack 0
  3738   000502                     WS2812_DATA_SEND@blue:
  3739                           	callstack 0
  3740   000502                     
  3741                           ; 1 bytes @ 0x1
  3742   000502                     	ds	1
  3743   000503                     DHT_Read@temp_x:
  3744                           	callstack 0
  3745   000503                     WS2812_DATA_SEND@green:
  3746                           	callstack 0
  3747   000503                     strlen@a:
  3748                           	callstack 0
  3749   000503                     ___lwmod@divisor:
  3750                           	callstack 0
  3751   000503                     ??_I2C_ENVIA_LCD_CMD:
  3752   000503                     ??_I2C_ENVIA_LCD_DATA:
  3753   000503                     
  3754                           ; 1 bytes @ 0x2
  3755   000503                     	ds	1
  3756   000504                     I2C_ENVIA_LCD_DATA@data:
  3757                           	callstack 0
  3758   000504                     I2C_ENVIA_LCD_CMD@command:
  3759                           	callstack 0
  3760   000504                     DHT_Read@data:
  3761                           	callstack 0
  3762                           
  3763                           ; 1 bytes @ 0x3
  3764   000504                     	ds	1
  3765   000505                     ?_DHT_GetTemp:
  3766                           	callstack 0
  3767   000505                     ?_DHT_GetHumid:
  3768                           	callstack 0
  3769   000505                     I2C_ENVIA_LCD_DATA@highnibble:
  3770                           	callstack 0
  3771   000505                     I2C_ENVIA_LCD_CMD@highnibble:
  3772                           	callstack 0
  3773   000505                     ___lwmod@counter:
  3774                           	callstack 0
  3775   000505                     
  3776                           ; 1 bytes @ 0x4
  3777   000505                     	ds	1
  3778   000506                     ?___lwdiv:
  3779                           	callstack 0
  3780   000506                     I2C_ENVIA_LCD_DATA@lownibble:
  3781                           	callstack 0
  3782   000506                     I2C_ENVIA_LCD_CMD@lownibble:
  3783                           	callstack 0
  3784   000506                     ___lwdiv@dividend:
  3785                           	callstack 0
  3786                           
  3787                           ; 2 bytes @ 0x5
  3788   000506                     	ds	1
  3789   000507                     I2C_POS_CURSOR@columna:
  3790                           	callstack 0
  3791   000507                     I2C_CURSOR_ONOFF@estado:
  3792                           	callstack 0
  3793   000507                     I2C_ESCRIBE_MENSAJE2@cadena:
  3794                           	callstack 0
  3795   000507                     ??_DHT_GetTemp:
  3796   000507                     ??_DHT_GetHumid:
  3797                           
  3798                           ; 1 bytes @ 0x6
  3799   000507                     	ds	1
  3800   000508                     ___lwdiv@divisor:
  3801                           	callstack 0
  3802   000508                     ??_I2C_POS_CURSOR:
  3803   000508                     ??_I2C_ESCRIBE_MENSAJE2:
  3804   000508                     ??_I2C_LCD_INIT:
  3805                           
  3806                           ; 1 bytes @ 0x7
  3807   000508                     	ds	1
  3808   000509                     I2C_POS_CURSOR@fila:
  3809                           	callstack 0
  3810   000509                     I2C_ESCRIBE_MENSAJE2@tam:
  3811                           	callstack 0
  3812   000509                     DHT_GetTemp@Temp_Dec:
  3813                           	callstack 0
  3814   000509                     DHT_GetHumid@RH_Dec:
  3815                           	callstack 0
  3816                           
  3817                           ; 1 bytes @ 0x8
  3818   000509                     	ds	1
  3819   00050A                     I2C_ESCRIBE_MENSAJE2@i:
  3820                           	callstack 0
  3821   00050A                     DHT_GetTemp@valor_dht:
  3822                           	callstack 0
  3823   00050A                     DHT_GetHumid@valor_dht:
  3824                           	callstack 0
  3825   00050A                     ___lwdiv@quotient:
  3826                           	callstack 0
  3827   00050A                     
  3828                           ; 1 bytes @ 0x9
  3829   00050A                     	ds	2
  3830   00050C                     DHT_GetTemp@Temp_Ent:
  3831                           	callstack 0
  3832   00050C                     DHT_GetHumid@RH_Ent:
  3833                           	callstack 0
  3834   00050C                     ___lwdiv@counter:
  3835                           	callstack 0
  3836                           
  3837                           ; 1 bytes @ 0xB
  3838   00050C                     	ds	1
  3839   00050D                     DHT_GetTemp@modelo:
  3840                           	callstack 0
  3841   00050D                     DHT_GetHumid@modelo:
  3842                           	callstack 0
  3843   00050D                     I2C_LCD_ESCRIBE_VAR_INT@numero:
  3844                           	callstack 0
  3845                           
  3846                           ; 2 bytes @ 0xC
  3847   00050D                     	ds	2
  3848   00050F                     I2C_LCD_ESCRIBE_VAR_INT@n_digitos:
  3849                           	callstack 0
  3850                           
  3851                           ; 1 bytes @ 0xE
  3852   00050F                     	ds	1
  3853   000510                     I2C_LCD_ESCRIBE_VAR_INT@punto:
  3854                           	callstack 0
  3855                           
  3856                           ; 1 bytes @ 0xF
  3857   000510                     	ds	1
  3858   000511                     I2C_LCD_ESCRIBE_VAR_INT@d_millar:
  3859                           	callstack 0
  3860   000511                     
  3861                           ; 1 bytes @ 0x10
  3862   000511                     	ds	1
  3863   000512                     I2C_LCD_ESCRIBE_VAR_INT@millar:
  3864                           	callstack 0
  3865                           
  3866                           ; 1 bytes @ 0x11
  3867   000512                     	ds	1
  3868   000513                     I2C_LCD_ESCRIBE_VAR_INT@centena:
  3869                           	callstack 0
  3870                           
  3871                           ; 1 bytes @ 0x12
  3872   000513                     	ds	1
  3873   000514                     I2C_LCD_ESCRIBE_VAR_INT@decena:
  3874                           	callstack 0
  3875                           
  3876                           ; 1 bytes @ 0x13
  3877   000514                     	ds	1
  3878   000515                     I2C_LCD_ESCRIBE_VAR_INT@unidad:
  3879                           	callstack 0
  3880                           
  3881                           ; 1 bytes @ 0x14
  3882   000515                     	ds	1
  3883   000516                     ??_main:
  3884                           
  3885                           ; 1 bytes @ 0x15
  3886   000516                     	ds	2
  3887   000518                     _main$1549:
  3888                           	callstack 0
  3889                           
  3890                           ; 2 bytes @ 0x17
  3891   000518                     	ds	2
  3892                           
  3893 ;;
  3894 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3895 ;;
  3896 ;; *************** function _main *****************
  3897 ;; Defined at:
  3898 ;;		line 19 in file "maincode03.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3913 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3915 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3916 ;;Total ram usage:        4 bytes
  3917 ;; Hardware stack levels required when called: 4
  3918 ;; This function calls:
  3919 ;;		_DHT_GetHumid
  3920 ;;		_DHT_GetTemp
  3921 ;;		_I2C_BORRAR_LCD
  3922 ;;		_I2C_ENVIA_LCD_DATA
  3923 ;;		_I2C_ESCRIBE_MENSAJE2
  3924 ;;		_I2C_LCD_CHAR_GRADO
  3925 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  3926 ;;		_I2C_LCD_INIT
  3927 ;;		_I2C_POS_CURSOR
  3928 ;;		_WS2812_DATA_SEND
  3929 ;;		_WS2812_INIT
  3930 ;;		___lwdiv
  3931 ;;		_configuro
  3932 ;; This function is called by:
  3933 ;;		Startup code after reset
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text0
  3938   002CCE                     __ptext0:
  3939                           	callstack 0
  3940   002CCE                     _main:
  3941                           	callstack 123
  3942                           
  3943                           ;maincode03.c: 20:     configuro();
  3944                           
  3945                           ;incstack = 0
  3946   002CCE  ECE3  F019         	call	_configuro	;wreg free
  3947                           
  3948                           ; BSR set to: 2
  3949                           ;maincode03.c: 21:     I2C_LCD_INIT();
  3950   002CD2  EC18  F013         	call	_I2C_LCD_INIT	;wreg free
  3951                           
  3952                           ;maincode03.c: 22:     WS2812_INIT();
  3953   002CD6  ECE7  F018         	call	_WS2812_INIT	;wreg free
  3954                           
  3955                           ;maincode03.c: 23:     I2C_POS_CURSOR(1,0);
  3956   002CDA  0E00               	movlw	0
  3957   002CDC  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  3958   002CDE  0E01               	movlw	1
  3959   002CE0  EC8F  F018         	call	_I2C_POS_CURSOR
  3960                           
  3961                           ;maincode03.c: 24:     I2C_ESCRIBE_MENSAJE2("Hola UPCino");
  3962   002CE4  0E0E               	movlw	low STR_1
  3963   002CE6  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  3964   002CE8  EC81  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  3965                           
  3966                           ;maincode03.c: 25:     I2C_POS_CURSOR(2,0);
  3967   002CEC  0E00               	movlw	0
  3968   002CEE  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  3969   002CF0  0E02               	movlw	2
  3970   002CF2  EC8F  F018         	call	_I2C_POS_CURSOR
  3971                           
  3972                           ;maincode03.c: 26:     I2C_ESCRIBE_MENSAJE2("Micro 2025-1");
  3973   002CF6  0E01               	movlw	low STR_2
  3974   002CF8  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  3975   002CFA  EC81  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  3976                           
  3977                           ;maincode03.c: 27:     WS2812_DATA_SEND(0,100,0);
  3978   002CFE  0E64               	movlw	100
  3979   002D00  6E01               	movwf	WS2812_DATA_SEND@red^(0+1280),c
  3980   002D02  0E00               	movlw	0
  3981   002D04  6E02               	movwf	WS2812_DATA_SEND@blue^(0+1280),c
  3982   002D06  0E00               	movlw	0
  3983   002D08  ECD4  F019         	call	_WS2812_DATA_SEND
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;maincode03.c: 28:     _delay((unsigned long)((2000)*(32000000UL/4000.0)));
  3987   002D0C  0E52               	movlw	82
  3988   002D0E  6E17               	movwf	(??_main+1)^(0+1280),c
  3989   002D10  0E2B               	movlw	43
  3990   002D12  6E16               	movwf	??_main^(0+1280),c
  3991   002D14  0E00               	movlw	0
  3992   002D16                     u1157:
  3993   002D16  2EE8               	decfsz	wreg,f,c
  3994   002D18  D7FE               	bra	u1157
  3995   002D1A  2E16               	decfsz	??_main^(0+1280),f,c
  3996   002D1C  D7FC               	bra	u1157
  3997   002D1E  2E17               	decfsz	(??_main+1)^(0+1280),f,c
  3998   002D20  D7FA               	bra	u1157
  3999   002D22  D000               	nop2	
  4000                           
  4001                           ;maincode03.c: 29:     WS2812_DATA_SEND(50,0,0);
  4002   002D24  0E00               	movlw	0
  4003   002D26  6E01               	movwf	WS2812_DATA_SEND@red^(0+1280),c
  4004   002D28  0E00               	movlw	0
  4005   002D2A  6E02               	movwf	WS2812_DATA_SEND@blue^(0+1280),c
  4006   002D2C  0E32               	movlw	50
  4007   002D2E  ECD4  F019         	call	_WS2812_DATA_SEND
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;maincode03.c: 30:     I2C_BORRAR_LCD();
  4011   002D32  EC03  F01A         	call	_I2C_BORRAR_LCD	;wreg free
  4012   002D36                     l2373:
  4013                           
  4014                           ;maincode03.c: 32:         temperatura_dht11 = DHT_GetTemp(1);
  4015   002D36  0E01               	movlw	1
  4016   002D38  EC2B  F018         	call	_DHT_GetTemp
  4017   002D3C  C505  F51C         	movff	?_DHT_GetTemp,_temperatura_dht11
  4018   002D40  C506  F51D         	movff	?_DHT_GetTemp+1,_temperatura_dht11+1
  4019                           
  4020                           ;maincode03.c: 33:         I2C_POS_CURSOR(1,0);
  4021   002D44  0E00               	movlw	0
  4022   002D46  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  4023   002D48  0E01               	movlw	1
  4024   002D4A  EC8F  F018         	call	_I2C_POS_CURSOR
  4025                           
  4026                           ;maincode03.c: 34:         I2C_ESCRIBE_MENSAJE2("Temp DHT:");
  4027   002D4E  0E25               	movlw	low STR_3
  4028   002D50  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  4029   002D52  EC81  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  4030                           
  4031                           ;maincode03.c: 35:         I2C_LCD_ESCRIBE_VAR_INT(temperatura_dht11/10, 2, 0);
  4032   002D56  C51C  F506         	movff	_temperatura_dht11,___lwdiv@dividend
  4033   002D5A  C51D  F507         	movff	_temperatura_dht11+1,___lwdiv@dividend+1
  4034   002D5E  0E00               	movlw	0
  4035   002D60  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4036   002D62  0E0A               	movlw	10
  4037   002D64  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4038   002D66  EC12  F019         	call	___lwdiv	;wreg free
  4039   002D6A  C506  F518         	movff	?___lwdiv,_main$1549
  4040   002D6E  C507  F519         	movff	?___lwdiv+1,_main$1549+1
  4041                           
  4042                           ;maincode03.c: 35:         I2C_LCD_ESCRIBE_VAR_INT(temperatura_dht11/10, 2, 0);
  4043   002D72  C518  F50D         	movff	_main$1549,I2C_LCD_ESCRIBE_VAR_INT@numero
  4044   002D76  C519  F50E         	movff	_main$1549+1,I2C_LCD_ESCRIBE_VAR_INT@numero+1
  4045   002D7A  0E02               	movlw	2
  4046   002D7C  6E0F               	movwf	I2C_LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
  4047   002D7E  0E00               	movlw	0
  4048   002D80  6E10               	movwf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),c
  4049   002D82  ECC2  F014         	call	_I2C_LCD_ESCRIBE_VAR_INT	;wreg free
  4050                           
  4051                           ;maincode03.c: 36:         I2C_LCD_CHAR_GRADO();
  4052   002D86  EC07  F01A         	call	_I2C_LCD_CHAR_GRADO	;wreg free
  4053                           
  4054                           ;maincode03.c: 37:         I2C_ENVIA_LCD_DATA('C');
  4055   002D8A  0E43               	movlw	67
  4056   002D8C  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  4057                           
  4058                           ;maincode03.c: 38:         _delay((unsigned long)((1000)*(32000000UL/4000.0)));
  4059   002D90  0E29               	movlw	41
  4060   002D92  6E17               	movwf	(??_main+1)^(0+1280),c
  4061   002D94  0E96               	movlw	150
  4062   002D96  6E16               	movwf	??_main^(0+1280),c
  4063   002D98  0E7F               	movlw	127
  4064   002D9A                     u1167:
  4065   002D9A  2EE8               	decfsz	wreg,f,c
  4066   002D9C  D7FE               	bra	u1167
  4067   002D9E  2E16               	decfsz	??_main^(0+1280),f,c
  4068   002DA0  D7FC               	bra	u1167
  4069   002DA2  2E17               	decfsz	(??_main+1)^(0+1280),f,c
  4070   002DA4  D7FA               	bra	u1167
  4071   002DA6  0000               	nop	
  4072                           
  4073                           ;maincode03.c: 39:         humedad_dht11 = DHT_GetHumid(1);
  4074   002DA8  0E01               	movlw	1
  4075   002DAA  EC5D  F018         	call	_DHT_GetHumid
  4076   002DAE  C505  F51A         	movff	?_DHT_GetHumid,_humedad_dht11
  4077   002DB2  C506  F51B         	movff	?_DHT_GetHumid+1,_humedad_dht11+1
  4078                           
  4079                           ;maincode03.c: 40:         I2C_POS_CURSOR(2,0);
  4080   002DB6  0E00               	movlw	0
  4081   002DB8  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  4082   002DBA  0E02               	movlw	2
  4083   002DBC  EC8F  F018         	call	_I2C_POS_CURSOR
  4084                           
  4085                           ;maincode03.c: 41:         I2C_ESCRIBE_MENSAJE2("Humed DHT:");
  4086   002DC0  0E1A               	movlw	low STR_4
  4087   002DC2  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  4088   002DC4  EC81  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  4089                           
  4090                           ;maincode03.c: 42:         I2C_LCD_ESCRIBE_VAR_INT(humedad_dht11/10, 2, 0);
  4091   002DC8  C51A  F506         	movff	_humedad_dht11,___lwdiv@dividend
  4092   002DCC  C51B  F507         	movff	_humedad_dht11+1,___lwdiv@dividend+1
  4093   002DD0  0E00               	movlw	0
  4094   002DD2  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4095   002DD4  0E0A               	movlw	10
  4096   002DD6  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4097   002DD8  EC12  F019         	call	___lwdiv	;wreg free
  4098   002DDC  C506  F518         	movff	?___lwdiv,_main$1549
  4099   002DE0  C507  F519         	movff	?___lwdiv+1,_main$1549+1
  4100                           
  4101                           ;maincode03.c: 42:         I2C_LCD_ESCRIBE_VAR_INT(humedad_dht11/10, 2, 0);
  4102   002DE4  C518  F50D         	movff	_main$1549,I2C_LCD_ESCRIBE_VAR_INT@numero
  4103   002DE8  C519  F50E         	movff	_main$1549+1,I2C_LCD_ESCRIBE_VAR_INT@numero+1
  4104   002DEC  0E02               	movlw	2
  4105   002DEE  6E0F               	movwf	I2C_LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
  4106   002DF0  0E00               	movlw	0
  4107   002DF2  6E10               	movwf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),c
  4108   002DF4  ECC2  F014         	call	_I2C_LCD_ESCRIBE_VAR_INT	;wreg free
  4109                           
  4110                           ;maincode03.c: 43:         I2C_ENVIA_LCD_DATA('%');
  4111   002DF8  0E25               	movlw	37
  4112   002DFA  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  4113                           
  4114                           ;maincode03.c: 44:         if((humedad_dht11/10) >= 80){
  4115   002DFE  C51A  F506         	movff	_humedad_dht11,___lwdiv@dividend
  4116   002E02  C51B  F507         	movff	_humedad_dht11+1,___lwdiv@dividend+1
  4117   002E06  0E00               	movlw	0
  4118   002E08  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4119   002E0A  0E0A               	movlw	10
  4120   002E0C  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4121   002E0E  EC12  F019         	call	___lwdiv	;wreg free
  4122   002E12  5007               	movf	(?___lwdiv+1)^(0+1280),w,c
  4123   002E14  E104               	bnz	u1140
  4124   002E16  0E50               	movlw	80
  4125   002E18  5C06               	subwf	?___lwdiv^(0+1280),w,c
  4126   002E1A  A0D8               	btfss	status,0,c
  4127   002E1C  D008               	goto	l2401
  4128   002E1E                     u1140:
  4129                           
  4130                           ;maincode03.c: 45:             WS2812_DATA_SEND(0,0,50);
  4131   002E1E  0E00               	movlw	0
  4132   002E20  6E01               	movwf	WS2812_DATA_SEND@red^(0+1280),c
  4133   002E22  0E32               	movlw	50
  4134   002E24  6E02               	movwf	WS2812_DATA_SEND@blue^(0+1280),c
  4135   002E26  0E00               	movlw	0
  4136   002E28  ECD4  F019         	call	_WS2812_DATA_SEND
  4137                           
  4138                           ;maincode03.c: 46:         }
  4139   002E2C  D007               	goto	l2403
  4140   002E2E                     l2401:
  4141                           
  4142                           ;maincode03.c: 48:             WS2812_DATA_SEND(50,0,0);
  4143   002E2E  0E00               	movlw	0
  4144   002E30  6E01               	movwf	WS2812_DATA_SEND@red^(0+1280),c
  4145   002E32  0E00               	movlw	0
  4146   002E34  6E02               	movwf	WS2812_DATA_SEND@blue^(0+1280),c
  4147   002E36  0E32               	movlw	50
  4148   002E38  ECD4  F019         	call	_WS2812_DATA_SEND
  4149   002E3C                     l2403:
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;maincode03.c: 50:         _delay((unsigned long)((1000)*(32000000UL/4000.0)));
  4153   002E3C  0E29               	movlw	41
  4154   002E3E  6E17               	movwf	(??_main+1)^(0+1280),c
  4155   002E40  0E96               	movlw	150
  4156   002E42  6E16               	movwf	??_main^(0+1280),c
  4157   002E44  0E7F               	movlw	127
  4158   002E46                     u1177:
  4159   002E46  2EE8               	decfsz	wreg,f,c
  4160   002E48  D7FE               	bra	u1177
  4161   002E4A  2E16               	decfsz	??_main^(0+1280),f,c
  4162   002E4C  D7FC               	bra	u1177
  4163   002E4E  2E17               	decfsz	(??_main+1)^(0+1280),f,c
  4164   002E50  D7FA               	bra	u1177
  4165   002E52  0000               	nop	
  4166   002E54  D770               	goto	l2373
  4167   002E56                     __end_of_main:
  4168                           	callstack 0
  4169                           
  4170 ;; *************** function _configuro *****************
  4171 ;; Defined at:
  4172 ;;		line 10 in file "maincode03.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 3F/2
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4190 ;;Total ram usage:        0 bytes
  4191 ;; Hardware stack levels used: 1
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_main
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           	psect	text1
  4200   0033C6                     __ptext1:
  4201                           	callstack 0
  4202   0033C6                     _configuro:
  4203                           	callstack 126
  4204                           
  4205                           ;maincode03.c: 11:     OSCCON1 = 0x60;
  4206                           
  4207                           ;incstack = 0
  4208   0033C6  0E60               	movlw	96
  4209   0033C8  0100               	movlb	0	; () banked
  4210   0033CA  6FAD               	movwf	173,b	;volatile
  4211                           
  4212                           ;maincode03.c: 12:     OSCFRQ = 0x06;
  4213   0033CC  0E06               	movlw	6
  4214   0033CE  6FB1               	movwf	177,b	;volatile
  4215                           
  4216                           ;maincode03.c: 13:     OSCEN = 0x40;
  4217   0033D0  0E40               	movlw	64
  4218   0033D2  6FB3               	movwf	179,b	;volatile
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;maincode03.c: 14:     TRISFbits.TRISF2 = 0;
  4222   0033D4  94CB               	bcf	203,2,c	;volatile
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;maincode03.c: 15:     ANSELFbits.ANSELF2 = 0;
  4226   0033D6  0104               	movlb	4	; () banked
  4227   0033D8  9528               	bcf	40,2,b	;volatile
  4228                           
  4229                           ;maincode03.c: 16:     RF2PPS = 0x01;
  4230   0033DA  0E01               	movlw	1
  4231   0033DC  0102               	movlb	2	; () banked
  4232   0033DE  6F2B               	movwf	43,b	;volatile
  4233                           
  4234                           ; BSR set to: 2
  4235   0033E0  0012               	return		;funcret
  4236   0033E2                     __end_of_configuro:
  4237                           	callstack 0
  4238                           
  4239 ;; *************** function _WS2812_INIT *****************
  4240 ;; Defined at:
  4241 ;;		line 4 in file "LIB_WS2812.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;		None
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;		None
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      void 
  4248 ;; Registers used:
  4249 ;;		wreg, status,2
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/2
  4252 ;;		On exit  : 3F/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4259 ;;Total ram usage:        0 bytes
  4260 ;; Hardware stack levels used: 1
  4261 ;; This function calls:
  4262 ;;		Nothing
  4263 ;; This function is called by:
  4264 ;;		_main
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text2
  4269   0031CE                     __ptext2:
  4270                           	callstack 0
  4271   0031CE                     _WS2812_INIT:
  4272                           	callstack 126
  4273                           
  4274                           ;LIB_WS2812.c: 6:     T2CON = 0x80;
  4275                           
  4276                           ; BSR set to: 2
  4277                           ;incstack = 0
  4278   0031CE  0E80               	movlw	128
  4279   0031D0  0103               	movlb	3	; () banked
  4280   0031D2  6F24               	movwf	36,b	;volatile
  4281                           
  4282                           ;LIB_WS2812.c: 7:     T2CLKCON = 0x01;
  4283   0031D4  0E01               	movlw	1
  4284   0031D6  6F26               	movwf	38,b	;volatile
  4285                           
  4286                           ;LIB_WS2812.c: 8:     T2PR = 5;
  4287   0031D8  0E05               	movlw	5
  4288   0031DA  6F23               	movwf	35,b	;volatile
  4289                           
  4290                           ;LIB_WS2812.c: 10:     SPI1CON0 = 0x83;
  4291   0031DC  0E83               	movlw	131
  4292   0031DE  0100               	movlb	0	; () banked
  4293   0031E0  6F84               	movwf	132,b	;volatile
  4294                           
  4295                           ;LIB_WS2812.c: 11:     SPI1CON1 = 0x40;
  4296   0031E2  0E40               	movlw	64
  4297   0031E4  6F85               	movwf	133,b	;volatile
  4298                           
  4299                           ;LIB_WS2812.c: 12:     SPI1CON2 = 0x02;
  4300   0031E6  0E02               	movlw	2
  4301   0031E8  6F86               	movwf	134,b	;volatile
  4302                           
  4303                           ;LIB_WS2812.c: 13:     SPI1CLK = 0x06;
  4304   0031EA  0E06               	movlw	6
  4305   0031EC  6F8C               	movwf	140,b	;volatile
  4306                           
  4307                           ;LIB_WS2812.c: 15:     CCP1CON = 0x8C;
  4308   0031EE  0E8C               	movlw	140
  4309   0031F0  0103               	movlb	3	; () banked
  4310   0031F2  6F42               	movwf	66,b	;volatile
  4311                           
  4312                           ; BSR set to: 3
  4313                           ;LIB_WS2812.c: 16:     CCPR1H = 0x00;
  4314   0031F4  6B41               	clrf	65,b	;volatile
  4315                           
  4316                           ;LIB_WS2812.c: 17:     CCPR1L = 0x0A;
  4317   0031F6  0E0A               	movlw	10
  4318   0031F8  6F40               	movwf	64,b	;volatile
  4319                           
  4320                           ; BSR set to: 3
  4321                           ;LIB_WS2812.c: 19:     CLCSELECT = 0x00;
  4322   0031FA  0100               	movlb	0	; () banked
  4323   0031FC  6BD5               	clrf	213,b	;volatile
  4324                           
  4325                           ;LIB_WS2812.c: 20:     CLCnSEL0 = 0x1F;
  4326   0031FE  0E1F               	movlw	31
  4327   003200  6FD8               	movwf	216,b	;volatile
  4328                           
  4329                           ;LIB_WS2812.c: 21:     CLCnSEL1 = 0x41;
  4330   003202  0E41               	movlw	65
  4331   003204  6FD9               	movwf	217,b	;volatile
  4332                           
  4333                           ;LIB_WS2812.c: 22:     CLCnSEL2 = 0x40;
  4334   003206  0E40               	movlw	64
  4335   003208  6FDA               	movwf	218,b	;volatile
  4336                           
  4337                           ;LIB_WS2812.c: 23:     CLCnGLS0 = 0x05;
  4338   00320A  0E05               	movlw	5
  4339   00320C  6FDC               	movwf	220,b	;volatile
  4340                           
  4341                           ;LIB_WS2812.c: 24:     CLCnGLS1 = 0x10;
  4342   00320E  0E10               	movlw	16
  4343   003210  6FDD               	movwf	221,b	;volatile
  4344                           
  4345                           ;LIB_WS2812.c: 25:     CLCnGLS2 = 0x08;
  4346   003212  0E08               	movlw	8
  4347   003214  6FDE               	movwf	222,b	;volatile
  4348                           
  4349                           ;LIB_WS2812.c: 26:     CLCnGLS3 = 0x20;
  4350   003216  0E20               	movlw	32
  4351   003218  6FDF               	movwf	223,b	;volatile
  4352                           
  4353                           ;LIB_WS2812.c: 27:     CLCnPOL = 0x01;
  4354   00321A  0E01               	movlw	1
  4355   00321C  6FD7               	movwf	215,b	;volatile
  4356                           
  4357                           ;LIB_WS2812.c: 28:     CLCnCON = 0x80;
  4358   00321E  0E80               	movlw	128
  4359   003220  6FD6               	movwf	214,b	;volatile
  4360                           
  4361                           ; BSR set to: 0
  4362   003222  0012               	return		;funcret
  4363   003224                     __end_of_WS2812_INIT:
  4364                           	callstack 0
  4365                           
  4366 ;; *************** function _WS2812_DATA_SEND *****************
  4367 ;; Defined at:
  4368 ;;		line 31 in file "LIB_WS2812.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  green           1    wreg     unsigned char 
  4371 ;;  red             1    0[COMRAM] unsigned char 
  4372 ;;  blue            1    1[COMRAM] unsigned char 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  green           1    2[COMRAM] unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      void 
  4377 ;; Registers used:
  4378 ;;		wreg
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/2
  4381 ;;		On exit  : 3F/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4387 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4388 ;;Total ram usage:        3 bytes
  4389 ;; Hardware stack levels used: 1
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_main
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text3
  4398   0033A8                     __ptext3:
  4399                           	callstack 0
  4400   0033A8                     _WS2812_DATA_SEND:
  4401                           	callstack 126
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;incstack = 0
  4405                           ;WS2812_DATA_SEND@green stored from wreg
  4406   0033A8  6E03               	movwf	WS2812_DATA_SEND@green^(0+1280),c
  4407                           
  4408                           ;LIB_WS2812.c: 32:     SPI1TXB = green;
  4409   0033AA  C503  F081         	movff	WS2812_DATA_SEND@green,129	;volatile
  4410   0033AE                     l390:
  4411   0033AE  0100               	movlb	0	; () banked
  4412   0033B0  AB87               	btfss	135,5,b	;volatile
  4413   0033B2  D7FD               	goto	l390
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;LIB_WS2812.c: 34:     SPI1TXB = red;
  4417   0033B4  C501  F081         	movff	WS2812_DATA_SEND@red,129	;volatile
  4418   0033B8                     l393:
  4419                           
  4420                           ; BSR set to: 0
  4421   0033B8  AB87               	btfss	135,5,b	;volatile
  4422   0033BA  D7FE               	goto	l393
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;LIB_WS2812.c: 36:     SPI1TXB = blue;
  4426   0033BC  C502  F081         	movff	WS2812_DATA_SEND@blue,129	;volatile
  4427   0033C0                     l396:
  4428                           
  4429                           ; BSR set to: 0
  4430   0033C0  BB87               	btfsc	135,5,b	;volatile
  4431   0033C2  0012               	return	
  4432   0033C4  D7FD               	goto	l396
  4433   0033C6                     __end_of_WS2812_DATA_SEND:
  4434                           	callstack 0
  4435                           
  4436 ;; *************** function _I2C_POS_CURSOR *****************
  4437 ;; Defined at:
  4438 ;;		line 70 in file "I2C_LCD.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  fila            1    wreg     unsigned char 
  4441 ;;  columna         1    6[COMRAM] unsigned char 
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;  fila            1    8[COMRAM] unsigned char 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      void 
  4446 ;; Registers used:
  4447 ;;		wreg, status,2, status,0, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4453 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4456 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4457 ;;Total ram usage:        3 bytes
  4458 ;; Hardware stack levels used: 1
  4459 ;; Hardware stack levels required when called: 2
  4460 ;; This function calls:
  4461 ;;		_I2C_ENVIA_LCD_CMD
  4462 ;; This function is called by:
  4463 ;;		_main
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text4
  4468   00311E                     __ptext4:
  4469                           	callstack 0
  4470   00311E                     _I2C_POS_CURSOR:
  4471                           	callstack 124
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;incstack = 0
  4475                           ;I2C_POS_CURSOR@fila stored from wreg
  4476   00311E  6E09               	movwf	I2C_POS_CURSOR@fila^(0+1280),c
  4477                           
  4478                           ;I2C_LCD.c: 71:  if(fila == 1){
  4479   003120  0409               	decf	I2C_POS_CURSOR@fila^(0+1280),w,c
  4480   003122  A4D8               	btfss	status,2,c
  4481   003124  D005               	goto	l2013
  4482                           
  4483                           ;I2C_LCD.c: 72:   I2C_ENVIA_LCD_CMD(0x80+columna);
  4484   003126  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  4485   003128  0F80               	addlw	128
  4486   00312A  ECF7  F017         	call	_I2C_ENVIA_LCD_CMD
  4487                           
  4488                           ;I2C_LCD.c: 73:  }
  4489   00312E  D01A               	goto	l66
  4490   003130                     l2013:
  4491   003130  0E02               	movlw	2
  4492   003132  1809               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  4493   003134  A4D8               	btfss	status,2,c
  4494   003136  D005               	goto	l2017
  4495                           
  4496                           ;I2C_LCD.c: 75:   I2C_ENVIA_LCD_CMD(0xC0+columna);
  4497   003138  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  4498   00313A  0FC0               	addlw	192
  4499   00313C  ECF7  F017         	call	_I2C_ENVIA_LCD_CMD
  4500                           
  4501                           ;I2C_LCD.c: 76:  }
  4502   003140  D011               	goto	l66
  4503   003142                     l2017:
  4504   003142  0E03               	movlw	3
  4505   003144  1809               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  4506   003146  A4D8               	btfss	status,2,c
  4507   003148  D005               	goto	l2021
  4508                           
  4509                           ;I2C_LCD.c: 78:   I2C_ENVIA_LCD_CMD(0x94+columna);
  4510   00314A  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  4511   00314C  0F94               	addlw	148
  4512   00314E  ECF7  F017         	call	_I2C_ENVIA_LCD_CMD
  4513                           
  4514                           ;I2C_LCD.c: 79:  }
  4515   003152  D008               	goto	l66
  4516   003154                     l2021:
  4517   003154  0E04               	movlw	4
  4518   003156  1809               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  4519   003158  A4D8               	btfss	status,2,c
  4520   00315A  D004               	goto	l66
  4521                           
  4522                           ;I2C_LCD.c: 81:   I2C_ENVIA_LCD_CMD(0xD4+columna);
  4523   00315C  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  4524   00315E  0FD4               	addlw	212
  4525   003160  ECF7  F017         	call	_I2C_ENVIA_LCD_CMD
  4526   003164                     l66:
  4527                           
  4528                           ;I2C_LCD.c: 83:  _delay((unsigned long)((1)*(32000000UL/4000.0)));
  4529   003164  0E0B               	movlw	11
  4530   003166  6E08               	movwf	??_I2C_POS_CURSOR^(0+1280),c
  4531   003168  0E62               	movlw	98
  4532   00316A                     u1187:
  4533   00316A  2EE8               	decfsz	wreg,f,c
  4534   00316C  D7FE               	bra	u1187
  4535   00316E  2E08               	decfsz	??_I2C_POS_CURSOR^(0+1280),f,c
  4536   003170  D7FC               	bra	u1187
  4537   003172  D000               	nop2	
  4538   003174  0012               	return		;funcret
  4539   003176                     __end_of_I2C_POS_CURSOR:
  4540                           	callstack 0
  4541                           
  4542 ;; *************** function _I2C_LCD_INIT *****************
  4543 ;; Defined at:
  4544 ;;		line 187 in file "I2C_LCD.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 3F/2
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4560 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4561 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4562 ;;Total ram usage:        2 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; Hardware stack levels required when called: 3
  4565 ;; This function calls:
  4566 ;;		_I2C1_INIT
  4567 ;;		_I2C1_WRITESINGLEBYTE
  4568 ;;		_I2C_BORRAR_LCD
  4569 ;;		_I2C_CURSOR_HOME
  4570 ;;		_I2C_CURSOR_ONOFF
  4571 ;; This function is called by:
  4572 ;;		_main
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text5
  4577   002630                     __ptext5:
  4578                           	callstack 0
  4579   002630                     _I2C_LCD_INIT:
  4580                           	callstack 123
  4581                           
  4582                           ; BSR set to: 2
  4583                           ;I2C_LCD.c: 188:     I2C1_INIT();
  4584                           
  4585                           ;incstack = 0
  4586   002630  EC3B  F019         	call	_I2C1_INIT	;wreg free
  4587                           
  4588                           ; BSR set to: 2
  4589                           ;I2C_LCD.c: 189:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  4590   002634  0E9C               	movlw	156
  4591   002636  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4592   002638  0ED7               	movlw	215
  4593   00263A                     u1197:
  4594   00263A  2EE8               	decfsz	wreg,f,c
  4595   00263C  D7FE               	bra	u1197
  4596   00263E  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4597   002640  D7FC               	bra	u1197
  4598   002642  0000               	nop	
  4599                           
  4600                           ;I2C_LCD.c: 191:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4601   002644  0E00               	movlw	0
  4602   002646  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4603   002648  0E27               	movlw	39
  4604   00264A  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4605                           
  4606                           ; BSR set to: 2
  4607                           ;I2C_LCD.c: 192:     _delay((unsigned long)((1000)*(32000000UL/4000.0)));
  4608   00264E  0E29               	movlw	41
  4609   002650  6E09               	movwf	(??_I2C_LCD_INIT+1)^(0+1280),c
  4610   002652  0E96               	movlw	150
  4611   002654  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4612   002656  0E7F               	movlw	127
  4613   002658                     u1207:
  4614   002658  2EE8               	decfsz	wreg,f,c
  4615   00265A  D7FE               	bra	u1207
  4616   00265C  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4617   00265E  D7FC               	bra	u1207
  4618   002660  2E09               	decfsz	(??_I2C_LCD_INIT+1)^(0+1280),f,c
  4619   002662  D7FA               	bra	u1207
  4620   002664  0000               	nop	
  4621                           
  4622                           ;I2C_LCD.c: 195:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4623   002666  0E30               	movlw	48
  4624   002668  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4625   00266A  0E27               	movlw	39
  4626   00266C  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4627                           
  4628                           ; BSR set to: 2
  4629                           ;I2C_LCD.c: 196:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4630   002670  0E30               	movlw	48
  4631   002672  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4632   002674  0E27               	movlw	39
  4633   002676  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4634                           
  4635                           ; BSR set to: 2
  4636                           ;I2C_LCD.c: 197:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4637   00267A  0E35               	movlw	53
  4638   00267C                     u1217:
  4639   00267C  2EE8               	decfsz	wreg,f,c
  4640   00267E  D7FE               	bra	u1217
  4641   002680  0000               	nop	
  4642                           
  4643                           ;I2C_LCD.c: 198:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x34);
  4644   002682  0E34               	movlw	52
  4645   002684  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4646   002686  0E27               	movlw	39
  4647   002688  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4648                           
  4649                           ; BSR set to: 2
  4650                           ;I2C_LCD.c: 199:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4651   00268C  0E35               	movlw	53
  4652   00268E                     u1227:
  4653   00268E  2EE8               	decfsz	wreg,f,c
  4654   002690  D7FE               	bra	u1227
  4655   002692  0000               	nop	
  4656                           
  4657                           ;I2C_LCD.c: 200:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4658   002694  0E30               	movlw	48
  4659   002696  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4660   002698  0E27               	movlw	39
  4661   00269A  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4662                           
  4663                           ; BSR set to: 2
  4664                           ;I2C_LCD.c: 201:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
  4665   00269E  0E34               	movlw	52
  4666   0026A0  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4667   0026A2  0EF2               	movlw	242
  4668   0026A4                     u1237:
  4669   0026A4  2EE8               	decfsz	wreg,f,c
  4670   0026A6  D7FE               	bra	u1237
  4671   0026A8  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4672   0026AA  D7FC               	bra	u1237
  4673                           
  4674                           ;I2C_LCD.c: 203:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4675   0026AC  0E30               	movlw	48
  4676   0026AE  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4677   0026B0  0E27               	movlw	39
  4678   0026B2  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4679                           
  4680                           ; BSR set to: 2
  4681                           ;I2C_LCD.c: 204:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4682   0026B6  0E35               	movlw	53
  4683   0026B8                     u1247:
  4684   0026B8  2EE8               	decfsz	wreg,f,c
  4685   0026BA  D7FE               	bra	u1247
  4686   0026BC  0000               	nop	
  4687                           
  4688                           ;I2C_LCD.c: 205:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x34);
  4689   0026BE  0E34               	movlw	52
  4690   0026C0  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4691   0026C2  0E27               	movlw	39
  4692   0026C4  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4693                           
  4694                           ; BSR set to: 2
  4695                           ;I2C_LCD.c: 206:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4696   0026C8  0E35               	movlw	53
  4697   0026CA                     u1257:
  4698   0026CA  2EE8               	decfsz	wreg,f,c
  4699   0026CC  D7FE               	bra	u1257
  4700   0026CE  0000               	nop	
  4701                           
  4702                           ;I2C_LCD.c: 207:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4703   0026D0  0E30               	movlw	48
  4704   0026D2  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4705   0026D4  0E27               	movlw	39
  4706   0026D6  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4707                           
  4708                           ; BSR set to: 2
  4709                           ;I2C_LCD.c: 209:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
  4710   0026DA  0E34               	movlw	52
  4711   0026DC  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4712   0026DE  0EF2               	movlw	242
  4713   0026E0                     u1267:
  4714   0026E0  2EE8               	decfsz	wreg,f,c
  4715   0026E2  D7FE               	bra	u1267
  4716   0026E4  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4717   0026E6  D7FC               	bra	u1267
  4718                           
  4719                           ;I2C_LCD.c: 211:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4720   0026E8  0E30               	movlw	48
  4721   0026EA  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4722   0026EC  0E27               	movlw	39
  4723   0026EE  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4724                           
  4725                           ; BSR set to: 2
  4726                           ;I2C_LCD.c: 212:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4727   0026F2  0E35               	movlw	53
  4728   0026F4                     u1277:
  4729   0026F4  2EE8               	decfsz	wreg,f,c
  4730   0026F6  D7FE               	bra	u1277
  4731   0026F8  0000               	nop	
  4732                           
  4733                           ;I2C_LCD.c: 213:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x34);
  4734   0026FA  0E34               	movlw	52
  4735   0026FC  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4736   0026FE  0E27               	movlw	39
  4737   002700  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4738                           
  4739                           ; BSR set to: 2
  4740                           ;I2C_LCD.c: 214:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4741   002704  0E35               	movlw	53
  4742   002706                     u1287:
  4743   002706  2EE8               	decfsz	wreg,f,c
  4744   002708  D7FE               	bra	u1287
  4745   00270A  0000               	nop	
  4746                           
  4747                           ;I2C_LCD.c: 215:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4748   00270C  0E30               	movlw	48
  4749   00270E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4750   002710  0E27               	movlw	39
  4751   002712  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4752                           
  4753                           ; BSR set to: 2
  4754                           ;I2C_LCD.c: 217:     _delay((unsigned long)((250)*(32000000UL/4000000.0)));
  4755   002716  0E03               	movlw	3
  4756   002718  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4757   00271A  0E98               	movlw	152
  4758   00271C                     u1297:
  4759   00271C  2EE8               	decfsz	wreg,f,c
  4760   00271E  D7FE               	bra	u1297
  4761   002720  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4762   002722  D7FC               	bra	u1297
  4763                           
  4764                           ;I2C_LCD.c: 219:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4765   002724  0E20               	movlw	32
  4766   002726  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4767   002728  0E27               	movlw	39
  4768   00272A  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4769                           
  4770                           ; BSR set to: 2
  4771                           ;I2C_LCD.c: 220:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4772   00272E  0E35               	movlw	53
  4773   002730                     u1307:
  4774   002730  2EE8               	decfsz	wreg,f,c
  4775   002732  D7FE               	bra	u1307
  4776   002734  0000               	nop	
  4777                           
  4778                           ;I2C_LCD.c: 221:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x24);
  4779   002736  0E24               	movlw	36
  4780   002738  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4781   00273A  0E27               	movlw	39
  4782   00273C  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4783                           
  4784                           ; BSR set to: 2
  4785                           ;I2C_LCD.c: 222:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4786   002740  0E35               	movlw	53
  4787   002742                     u1317:
  4788   002742  2EE8               	decfsz	wreg,f,c
  4789   002744  D7FE               	bra	u1317
  4790   002746  0000               	nop	
  4791                           
  4792                           ;I2C_LCD.c: 223:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4793   002748  0E20               	movlw	32
  4794   00274A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4795   00274C  0E27               	movlw	39
  4796   00274E  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4797                           
  4798                           ; BSR set to: 2
  4799                           ;I2C_LCD.c: 225:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4800   002752  0EC8               	movlw	200
  4801   002754                     u1327:
  4802   002754  2EE8               	decfsz	wreg,f,c
  4803   002756  D7FE               	bra	u1327
  4804                           
  4805                           ;I2C_LCD.c: 227:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4806   002758  0E20               	movlw	32
  4807   00275A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4808   00275C  0E27               	movlw	39
  4809   00275E  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4810                           
  4811                           ; BSR set to: 2
  4812                           ;I2C_LCD.c: 228:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4813   002762  0E35               	movlw	53
  4814   002764                     u1337:
  4815   002764  2EE8               	decfsz	wreg,f,c
  4816   002766  D7FE               	bra	u1337
  4817   002768  0000               	nop	
  4818                           
  4819                           ;I2C_LCD.c: 229:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x24);
  4820   00276A  0E24               	movlw	36
  4821   00276C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4822   00276E  0E27               	movlw	39
  4823   002770  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4824                           
  4825                           ; BSR set to: 2
  4826                           ;I2C_LCD.c: 230:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4827   002774  0E35               	movlw	53
  4828   002776                     u1347:
  4829   002776  2EE8               	decfsz	wreg,f,c
  4830   002778  D7FE               	bra	u1347
  4831   00277A  0000               	nop	
  4832                           
  4833                           ;I2C_LCD.c: 231:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4834   00277C  0E20               	movlw	32
  4835   00277E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4836   002780  0E27               	movlw	39
  4837   002782  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4838                           
  4839                           ; BSR set to: 2
  4840                           ;I2C_LCD.c: 233:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4841   002786  0EC8               	movlw	200
  4842   002788                     u1357:
  4843   002788  2EE8               	decfsz	wreg,f,c
  4844   00278A  D7FE               	bra	u1357
  4845                           
  4846                           ;I2C_LCD.c: 235:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x80);
  4847   00278C  0E80               	movlw	128
  4848   00278E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4849   002790  0E27               	movlw	39
  4850   002792  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4851                           
  4852                           ; BSR set to: 2
  4853                           ;I2C_LCD.c: 236:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4854   002796  0E35               	movlw	53
  4855   002798                     u1367:
  4856   002798  2EE8               	decfsz	wreg,f,c
  4857   00279A  D7FE               	bra	u1367
  4858   00279C  0000               	nop	
  4859                           
  4860                           ;I2C_LCD.c: 237:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x84);
  4861   00279E  0E84               	movlw	132
  4862   0027A0  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4863   0027A2  0E27               	movlw	39
  4864   0027A4  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4865                           
  4866                           ; BSR set to: 2
  4867                           ;I2C_LCD.c: 238:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4868   0027A8  0E35               	movlw	53
  4869   0027AA                     u1377:
  4870   0027AA  2EE8               	decfsz	wreg,f,c
  4871   0027AC  D7FE               	bra	u1377
  4872   0027AE  0000               	nop	
  4873                           
  4874                           ;I2C_LCD.c: 239:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x80);
  4875   0027B0  0E80               	movlw	128
  4876   0027B2  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4877   0027B4  0E27               	movlw	39
  4878   0027B6  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4879                           
  4880                           ; BSR set to: 2
  4881                           ;I2C_LCD.c: 241:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4882   0027BA  0EC8               	movlw	200
  4883   0027BC                     u1387:
  4884   0027BC  2EE8               	decfsz	wreg,f,c
  4885   0027BE  D7FE               	bra	u1387
  4886                           
  4887                           ;I2C_LCD.c: 243:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4888   0027C0  0E00               	movlw	0
  4889   0027C2  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4890   0027C4  0E27               	movlw	39
  4891   0027C6  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4892                           
  4893                           ; BSR set to: 2
  4894                           ;I2C_LCD.c: 244:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4895   0027CA  0E35               	movlw	53
  4896   0027CC                     u1397:
  4897   0027CC  2EE8               	decfsz	wreg,f,c
  4898   0027CE  D7FE               	bra	u1397
  4899   0027D0  0000               	nop	
  4900                           
  4901                           ;I2C_LCD.c: 245:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  4902   0027D2  0E04               	movlw	4
  4903   0027D4  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4904   0027D6  0E27               	movlw	39
  4905   0027D8  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4906                           
  4907                           ; BSR set to: 2
  4908                           ;I2C_LCD.c: 246:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4909   0027DC  0E35               	movlw	53
  4910   0027DE                     u1407:
  4911   0027DE  2EE8               	decfsz	wreg,f,c
  4912   0027E0  D7FE               	bra	u1407
  4913   0027E2  0000               	nop	
  4914                           
  4915                           ;I2C_LCD.c: 247:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4916   0027E4  0E00               	movlw	0
  4917   0027E6  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4918   0027E8  0E27               	movlw	39
  4919   0027EA  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4920                           
  4921                           ; BSR set to: 2
  4922                           ;I2C_LCD.c: 249:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4923   0027EE  0EC8               	movlw	200
  4924   0027F0                     u1417:
  4925   0027F0  2EE8               	decfsz	wreg,f,c
  4926   0027F2  D7FE               	bra	u1417
  4927                           
  4928                           ;I2C_LCD.c: 251:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0xC0);
  4929   0027F4  0EC0               	movlw	192
  4930   0027F6  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4931   0027F8  0E27               	movlw	39
  4932   0027FA  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4933                           
  4934                           ; BSR set to: 2
  4935                           ;I2C_LCD.c: 252:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4936   0027FE  0E35               	movlw	53
  4937   002800                     u1427:
  4938   002800  2EE8               	decfsz	wreg,f,c
  4939   002802  D7FE               	bra	u1427
  4940   002804  0000               	nop	
  4941                           
  4942                           ;I2C_LCD.c: 253:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0xC4);
  4943   002806  0EC4               	movlw	196
  4944   002808  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4945   00280A  0E27               	movlw	39
  4946   00280C  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4947                           
  4948                           ; BSR set to: 2
  4949                           ;I2C_LCD.c: 254:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4950   002810  0E35               	movlw	53
  4951   002812                     u1437:
  4952   002812  2EE8               	decfsz	wreg,f,c
  4953   002814  D7FE               	bra	u1437
  4954   002816  0000               	nop	
  4955                           
  4956                           ;I2C_LCD.c: 255:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0xC0);
  4957   002818  0EC0               	movlw	192
  4958   00281A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4959   00281C  0E27               	movlw	39
  4960   00281E  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4961                           
  4962                           ; BSR set to: 2
  4963                           ;I2C_LCD.c: 257:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4964   002822  0EC8               	movlw	200
  4965   002824                     u1447:
  4966   002824  2EE8               	decfsz	wreg,f,c
  4967   002826  D7FE               	bra	u1447
  4968                           
  4969                           ;I2C_LCD.c: 259:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4970   002828  0E00               	movlw	0
  4971   00282A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4972   00282C  0E27               	movlw	39
  4973   00282E  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4974                           
  4975                           ; BSR set to: 2
  4976                           ;I2C_LCD.c: 260:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4977   002832  0E35               	movlw	53
  4978   002834                     u1457:
  4979   002834  2EE8               	decfsz	wreg,f,c
  4980   002836  D7FE               	bra	u1457
  4981   002838  0000               	nop	
  4982                           
  4983                           ;I2C_LCD.c: 261:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  4984   00283A  0E04               	movlw	4
  4985   00283C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4986   00283E  0E27               	movlw	39
  4987   002840  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  4988                           
  4989                           ; BSR set to: 2
  4990                           ;I2C_LCD.c: 262:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4991   002844  0E35               	movlw	53
  4992   002846                     u1467:
  4993   002846  2EE8               	decfsz	wreg,f,c
  4994   002848  D7FE               	bra	u1467
  4995   00284A  0000               	nop	
  4996                           
  4997                           ;I2C_LCD.c: 263:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4998   00284C  0E00               	movlw	0
  4999   00284E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5000   002850  0E27               	movlw	39
  5001   002852  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5002                           
  5003                           ; BSR set to: 2
  5004                           ;I2C_LCD.c: 265:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  5005   002856  0EC8               	movlw	200
  5006   002858                     u1477:
  5007   002858  2EE8               	decfsz	wreg,f,c
  5008   00285A  D7FE               	bra	u1477
  5009                           
  5010                           ;I2C_LCD.c: 267:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x10);
  5011   00285C  0E10               	movlw	16
  5012   00285E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5013   002860  0E27               	movlw	39
  5014   002862  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5015                           
  5016                           ; BSR set to: 2
  5017                           ;I2C_LCD.c: 268:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5018   002866  0E35               	movlw	53
  5019   002868                     u1487:
  5020   002868  2EE8               	decfsz	wreg,f,c
  5021   00286A  D7FE               	bra	u1487
  5022   00286C  0000               	nop	
  5023                           
  5024                           ;I2C_LCD.c: 269:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x14);
  5025   00286E  0E14               	movlw	20
  5026   002870  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5027   002872  0E27               	movlw	39
  5028   002874  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5029                           
  5030                           ; BSR set to: 2
  5031                           ;I2C_LCD.c: 270:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5032   002878  0E35               	movlw	53
  5033   00287A                     u1497:
  5034   00287A  2EE8               	decfsz	wreg,f,c
  5035   00287C  D7FE               	bra	u1497
  5036   00287E  0000               	nop	
  5037                           
  5038                           ;I2C_LCD.c: 271:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x10);
  5039   002880  0E10               	movlw	16
  5040   002882  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5041   002884  0E27               	movlw	39
  5042   002886  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5043                           
  5044                           ; BSR set to: 2
  5045                           ;I2C_LCD.c: 273:      _delay((unsigned long)((2)*(32000000UL/4000.0)));
  5046   00288A  0E15               	movlw	21
  5047   00288C  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  5048   00288E  0EC6               	movlw	198
  5049   002890                     u1507:
  5050   002890  2EE8               	decfsz	wreg,f,c
  5051   002892  D7FE               	bra	u1507
  5052   002894  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  5053   002896  D7FC               	bra	u1507
  5054   002898  D000               	nop2	
  5055                           
  5056                           ;I2C_LCD.c: 275:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  5057   00289A  0E00               	movlw	0
  5058   00289C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5059   00289E  0E27               	movlw	39
  5060   0028A0  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5061                           
  5062                           ; BSR set to: 2
  5063                           ;I2C_LCD.c: 276:     _delay((unsigned long)((02)*(32000000UL/4000000.0)));
  5064   0028A4  0E05               	movlw	5
  5065   0028A6                     u1517:
  5066   0028A6  2EE8               	decfsz	wreg,f,c
  5067   0028A8  D7FE               	bra	u1517
  5068   0028AA  0000               	nop	
  5069                           
  5070                           ;I2C_LCD.c: 277:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  5071   0028AC  0E04               	movlw	4
  5072   0028AE  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5073   0028B0  0E27               	movlw	39
  5074   0028B2  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5075                           
  5076                           ; BSR set to: 2
  5077                           ;I2C_LCD.c: 278:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5078   0028B6  0E35               	movlw	53
  5079   0028B8                     u1527:
  5080   0028B8  2EE8               	decfsz	wreg,f,c
  5081   0028BA  D7FE               	bra	u1527
  5082   0028BC  0000               	nop	
  5083                           
  5084                           ;I2C_LCD.c: 279:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  5085   0028BE  0E00               	movlw	0
  5086   0028C0  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5087   0028C2  0E27               	movlw	39
  5088   0028C4  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5089                           
  5090                           ; BSR set to: 2
  5091                           ;I2C_LCD.c: 281:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  5092   0028C8  0EC8               	movlw	200
  5093   0028CA                     u1537:
  5094   0028CA  2EE8               	decfsz	wreg,f,c
  5095   0028CC  D7FE               	bra	u1537
  5096                           
  5097                           ;I2C_LCD.c: 283:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x60);
  5098   0028CE  0E60               	movlw	96
  5099   0028D0  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5100   0028D2  0E27               	movlw	39
  5101   0028D4  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5102                           
  5103                           ; BSR set to: 2
  5104                           ;I2C_LCD.c: 284:     _delay((unsigned long)((02)*(32000000UL/4000000.0)));
  5105   0028D8  0E05               	movlw	5
  5106   0028DA                     u1547:
  5107   0028DA  2EE8               	decfsz	wreg,f,c
  5108   0028DC  D7FE               	bra	u1547
  5109   0028DE  0000               	nop	
  5110                           
  5111                           ;I2C_LCD.c: 285:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x64);
  5112   0028E0  0E64               	movlw	100
  5113   0028E2  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5114   0028E4  0E27               	movlw	39
  5115   0028E6  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5116                           
  5117                           ; BSR set to: 2
  5118                           ;I2C_LCD.c: 286:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5119   0028EA  0E35               	movlw	53
  5120   0028EC                     u1557:
  5121   0028EC  2EE8               	decfsz	wreg,f,c
  5122   0028EE  D7FE               	bra	u1557
  5123   0028F0  0000               	nop	
  5124                           
  5125                           ;I2C_LCD.c: 287:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x60);
  5126   0028F2  0E60               	movlw	96
  5127   0028F4  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5128   0028F6  0E27               	movlw	39
  5129   0028F8  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5130                           
  5131                           ; BSR set to: 2
  5132                           ;I2C_LCD.c: 289:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  5133   0028FC  0EC8               	movlw	200
  5134   0028FE                     u1567:
  5135   0028FE  2EE8               	decfsz	wreg,f,c
  5136   002900  D7FE               	bra	u1567
  5137                           
  5138                           ;I2C_LCD.c: 291:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  5139   002902  0E00               	movlw	0
  5140   002904  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5141   002906  0E27               	movlw	39
  5142   002908  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5143                           
  5144                           ; BSR set to: 2
  5145                           ;I2C_LCD.c: 292:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5146   00290C  0E35               	movlw	53
  5147   00290E                     u1577:
  5148   00290E  2EE8               	decfsz	wreg,f,c
  5149   002910  D7FE               	bra	u1577
  5150   002912  0000               	nop	
  5151                           
  5152                           ;I2C_LCD.c: 293:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  5153   002914  0E04               	movlw	4
  5154   002916  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5155   002918  0E27               	movlw	39
  5156   00291A  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5157                           
  5158                           ; BSR set to: 2
  5159                           ;I2C_LCD.c: 294:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5160   00291E  0E35               	movlw	53
  5161   002920                     u1587:
  5162   002920  2EE8               	decfsz	wreg,f,c
  5163   002922  D7FE               	bra	u1587
  5164   002924  0000               	nop	
  5165                           
  5166                           ;I2C_LCD.c: 295:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  5167   002926  0E00               	movlw	0
  5168   002928  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5169   00292A  0E27               	movlw	39
  5170   00292C  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5171                           
  5172                           ; BSR set to: 2
  5173                           ;I2C_LCD.c: 297:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  5174   002930  0EC8               	movlw	200
  5175   002932                     u1597:
  5176   002932  2EE8               	decfsz	wreg,f,c
  5177   002934  D7FE               	bra	u1597
  5178                           
  5179                           ;I2C_LCD.c: 299:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  5180   002936  0E20               	movlw	32
  5181   002938  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5182   00293A  0E27               	movlw	39
  5183   00293C  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5184                           
  5185                           ; BSR set to: 2
  5186                           ;I2C_LCD.c: 300:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5187   002940  0E35               	movlw	53
  5188   002942                     u1607:
  5189   002942  2EE8               	decfsz	wreg,f,c
  5190   002944  D7FE               	bra	u1607
  5191   002946  0000               	nop	
  5192                           
  5193                           ;I2C_LCD.c: 301:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x24);
  5194   002948  0E24               	movlw	36
  5195   00294A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5196   00294C  0E27               	movlw	39
  5197   00294E  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5198                           
  5199                           ; BSR set to: 2
  5200                           ;I2C_LCD.c: 302:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5201   002952  0E35               	movlw	53
  5202   002954                     u1617:
  5203   002954  2EE8               	decfsz	wreg,f,c
  5204   002956  D7FE               	bra	u1617
  5205   002958  0000               	nop	
  5206                           
  5207                           ;I2C_LCD.c: 303:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  5208   00295A  0E20               	movlw	32
  5209   00295C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5210   00295E  0E27               	movlw	39
  5211   002960  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5212                           
  5213                           ; BSR set to: 2
  5214                           ;I2C_LCD.c: 305:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  5215   002964  0E9C               	movlw	156
  5216   002966  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  5217   002968  0ED7               	movlw	215
  5218   00296A                     u1627:
  5219   00296A  2EE8               	decfsz	wreg,f,c
  5220   00296C  D7FE               	bra	u1627
  5221   00296E  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  5222   002970  D7FC               	bra	u1627
  5223   002972  0000               	nop	
  5224                           
  5225                           ;I2C_LCD.c: 306:     I2C_BORRAR_LCD();
  5226   002974  EC03  F01A         	call	_I2C_BORRAR_LCD	;wreg free
  5227                           
  5228                           ;I2C_LCD.c: 307:     I2C_CURSOR_HOME();
  5229   002978  ECFF  F019         	call	_I2C_CURSOR_HOME	;wreg free
  5230                           
  5231                           ;I2C_LCD.c: 308:     I2C_CURSOR_ONOFF(1);
  5232   00297C  0E01               	movlw	1
  5233   00297E  ECF1  F019         	call	_I2C_CURSOR_ONOFF
  5234   002982  0012               	return		;funcret
  5235   002984                     __end_of_I2C_LCD_INIT:
  5236                           	callstack 0
  5237                           
  5238 ;; *************** function _I2C_CURSOR_ONOFF *****************
  5239 ;; Defined at:
  5240 ;;		line 116 in file "I2C_LCD.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;  estado          1    wreg     unsigned char 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  estado          1    6[COMRAM] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      void 
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/2
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5258 ;;Total ram usage:        1 bytes
  5259 ;; Hardware stack levels used: 1
  5260 ;; Hardware stack levels required when called: 2
  5261 ;; This function calls:
  5262 ;;		_I2C_ENVIA_LCD_CMD
  5263 ;; This function is called by:
  5264 ;;		_I2C_LCD_INIT
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	text6
  5269   0033E2                     __ptext6:
  5270                           	callstack 0
  5271   0033E2                     _I2C_CURSOR_ONOFF:
  5272                           	callstack 123
  5273                           
  5274                           ;incstack = 0
  5275                           ;I2C_CURSOR_ONOFF@estado stored from wreg
  5276   0033E2  6E07               	movwf	I2C_CURSOR_ONOFF@estado^(0+1280),c
  5277                           
  5278                           ;I2C_LCD.c: 117:  if(estado == 0) I2C_ENVIA_LCD_CMD(0x0E);
  5279   0033E4  5007               	movf	I2C_CURSOR_ONOFF@estado^(0+1280),w,c
  5280   0033E6  A4D8               	btfss	status,2,c
  5281   0033E8  D003               	goto	l1783
  5282   0033EA  0E0E               	movlw	14
  5283   0033EC  ECF7  F017         	call	_I2C_ENVIA_LCD_CMD
  5284   0033F0                     l1783:
  5285                           
  5286                           ;I2C_LCD.c: 118:  if(estado == 1) I2C_ENVIA_LCD_CMD(0x0C);
  5287   0033F0  0407               	decf	I2C_CURSOR_ONOFF@estado^(0+1280),w,c
  5288   0033F2  A4D8               	btfss	status,2,c
  5289   0033F4  0012               	return	
  5290   0033F6  0E0C               	movlw	12
  5291   0033F8  ECF7  F017         	call	_I2C_ENVIA_LCD_CMD
  5292   0033FC  0012               	return		;funcret
  5293   0033FE                     __end_of_I2C_CURSOR_ONOFF:
  5294                           	callstack 0
  5295                           
  5296 ;; *************** function _I2C_CURSOR_HOME *****************
  5297 ;; Defined at:
  5298 ;;		line 96 in file "I2C_LCD.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;		None
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;		None
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  1    wreg      void 
  5305 ;; Registers used:
  5306 ;;		wreg, status,2, status,0, cstack
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/2
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5316 ;;Total ram usage:        0 bytes
  5317 ;; Hardware stack levels used: 1
  5318 ;; Hardware stack levels required when called: 2
  5319 ;; This function calls:
  5320 ;;		_I2C_ENVIA_LCD_CMD
  5321 ;; This function is called by:
  5322 ;;		_I2C_LCD_INIT
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text7
  5327   0033FE                     __ptext7:
  5328                           	callstack 0
  5329   0033FE                     _I2C_CURSOR_HOME:
  5330                           	callstack 123
  5331                           
  5332                           ;I2C_LCD.c: 97:  I2C_ENVIA_LCD_CMD(0x02);
  5333                           
  5334                           ;incstack = 0
  5335   0033FE  0E02               	movlw	2
  5336   003400  ECF7  F017         	call	_I2C_ENVIA_LCD_CMD
  5337   003404  0012               	return		;funcret
  5338   003406                     __end_of_I2C_CURSOR_HOME:
  5339                           	callstack 0
  5340                           
  5341 ;; *************** function _I2C_BORRAR_LCD *****************
  5342 ;; Defined at:
  5343 ;;		line 155 in file "I2C_LCD.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;		None
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;		None
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  1    wreg      void 
  5350 ;; Registers used:
  5351 ;;		wreg, status,2, status,0, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5361 ;;Total ram usage:        0 bytes
  5362 ;; Hardware stack levels used: 1
  5363 ;; Hardware stack levels required when called: 2
  5364 ;; This function calls:
  5365 ;;		_I2C_ENVIA_LCD_CMD
  5366 ;; This function is called by:
  5367 ;;		_I2C_LCD_INIT
  5368 ;;		_main
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           	psect	text8
  5373   003406                     __ptext8:
  5374                           	callstack 0
  5375   003406                     _I2C_BORRAR_LCD:
  5376                           	callstack 123
  5377                           
  5378                           ;I2C_LCD.c: 156:  I2C_ENVIA_LCD_CMD(0x01);
  5379                           
  5380                           ;incstack = 0
  5381   003406  0E01               	movlw	1
  5382   003408  ECF7  F017         	call	_I2C_ENVIA_LCD_CMD
  5383   00340C  0012               	return		;funcret
  5384   00340E                     __end_of_I2C_BORRAR_LCD:
  5385                           	callstack 0
  5386                           
  5387 ;; *************** function _I2C_ENVIA_LCD_CMD *****************
  5388 ;; Defined at:
  5389 ;;		line 159 in file "I2C_LCD.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  command         1    wreg     unsigned char 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  command         1    3[COMRAM] unsigned char 
  5394 ;;  lownibble       1    5[COMRAM] unsigned char 
  5395 ;;  highnibble      1    4[COMRAM] unsigned char 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg, status,2, status,0, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5406 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5408 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5409 ;;Total ram usage:        4 bytes
  5410 ;; Hardware stack levels used: 1
  5411 ;; Hardware stack levels required when called: 1
  5412 ;; This function calls:
  5413 ;;		_I2C1_WRITESINGLEBYTE
  5414 ;; This function is called by:
  5415 ;;		_I2C_POS_CURSOR
  5416 ;;		_I2C_CURSOR_HOME
  5417 ;;		_I2C_CURSOR_ONOFF
  5418 ;;		_I2C_BORRAR_LCD
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	text9
  5423   002FEE                     __ptext9:
  5424                           	callstack 0
  5425   002FEE                     _I2C_ENVIA_LCD_CMD:
  5426                           	callstack 124
  5427                           
  5428                           ;incstack = 0
  5429                           ;I2C_ENVIA_LCD_CMD@command stored from wreg
  5430   002FEE  6E04               	movwf	I2C_ENVIA_LCD_CMD@command^(0+1280),c
  5431                           
  5432                           ;I2C_LCD.c: 160:     unsigned char highnibble;;I2C_LCD.c: 161:     unsigned char lownibb
      +                          le;;I2C_LCD.c: 163:     highnibble = (command & 0xF0) | 0x08;
  5433   002FF0  5004               	movf	I2C_ENVIA_LCD_CMD@command^(0+1280),w,c
  5434   002FF2  0BF0               	andlw	240
  5435   002FF4  0908               	iorlw	8
  5436   002FF6  6E05               	movwf	I2C_ENVIA_LCD_CMD@highnibble^(0+1280),c
  5437                           
  5438                           ;I2C_LCD.c: 164:     lownibble = (unsigned char)(((command & 0x0F)<<4)| 0x08);
  5439   002FF8  C504  F503         	movff	I2C_ENVIA_LCD_CMD@command,??_I2C_ENVIA_LCD_CMD
  5440   002FFC  0E0F               	movlw	15
  5441   002FFE  1603               	andwf	??_I2C_ENVIA_LCD_CMD^(0+1280),f,c
  5442   003000  3803               	swapf	??_I2C_ENVIA_LCD_CMD^(0+1280),w,c
  5443   003002  0BF0               	andlw	240
  5444   003004  0908               	iorlw	8
  5445   003006  6E06               	movwf	I2C_ENVIA_LCD_CMD@lownibble^(0+1280),c
  5446                           
  5447                           ;I2C_LCD.c: 166:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(highnibble | 0x04));
  5448   003008  5005               	movf	I2C_ENVIA_LCD_CMD@highnibble^(0+1280),w,c
  5449   00300A  0904               	iorlw	4
  5450   00300C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5451   00300E  0E27               	movlw	39
  5452   003010  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5453                           
  5454                           ; BSR set to: 2
  5455                           ;I2C_LCD.c: 167:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5456   003014  0E35               	movlw	53
  5457   003016                     u1637:
  5458   003016  2EE8               	decfsz	wreg,f,c
  5459   003018  D7FE               	bra	u1637
  5460   00301A  0000               	nop	
  5461                           
  5462                           ;I2C_LCD.c: 168:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,highnibble);
  5463   00301C  C505  F501         	movff	I2C_ENVIA_LCD_CMD@highnibble,I2C1_WRITESINGLEBYTE@dato
  5464   003020  0E27               	movlw	39
  5465   003022  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5466                           
  5467                           ; BSR set to: 2
  5468                           ;I2C_LCD.c: 169:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5469   003026  0E35               	movlw	53
  5470   003028                     u1647:
  5471   003028  2EE8               	decfsz	wreg,f,c
  5472   00302A  D7FE               	bra	u1647
  5473   00302C  0000               	nop	
  5474                           
  5475                           ;I2C_LCD.c: 171:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(lownibble | 0x04));
  5476   00302E  5006               	movf	I2C_ENVIA_LCD_CMD@lownibble^(0+1280),w,c
  5477   003030  0904               	iorlw	4
  5478   003032  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5479   003034  0E27               	movlw	39
  5480   003036  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5481                           
  5482                           ; BSR set to: 2
  5483                           ;I2C_LCD.c: 172:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5484   00303A  0E35               	movlw	53
  5485   00303C                     u1657:
  5486   00303C  2EE8               	decfsz	wreg,f,c
  5487   00303E  D7FE               	bra	u1657
  5488   003040  0000               	nop	
  5489                           
  5490                           ;I2C_LCD.c: 173:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,lownibble);
  5491   003042  C506  F501         	movff	I2C_ENVIA_LCD_CMD@lownibble,I2C1_WRITESINGLEBYTE@dato
  5492   003046  0E27               	movlw	39
  5493   003048  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  5494                           
  5495                           ; BSR set to: 2
  5496                           ;I2C_LCD.c: 174:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5497   00304C  0E35               	movlw	53
  5498   00304E                     u1667:
  5499   00304E  2EE8               	decfsz	wreg,f,c
  5500   003050  D7FE               	bra	u1667
  5501   003052  0000               	nop	
  5502   003054  0012               	return		;funcret
  5503   003056                     __end_of_I2C_ENVIA_LCD_CMD:
  5504                           	callstack 0
  5505                           
  5506 ;; *************** function _I2C1_INIT *****************
  5507 ;; Defined at:
  5508 ;;		line 34 in file "I2C_LCD.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg, status,2
  5517 ;; Tracked objects:
  5518 ;;		On entry : 3F/2
  5519 ;;		On exit  : 3F/2
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5526 ;;Total ram usage:        0 bytes
  5527 ;; Hardware stack levels used: 1
  5528 ;; This function calls:
  5529 ;;		Nothing
  5530 ;; This function is called by:
  5531 ;;		_I2C_LCD_INIT
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text10
  5536   003276                     __ptext10:
  5537                           	callstack 0
  5538   003276                     _I2C1_INIT:
  5539                           	callstack 125
  5540                           
  5541                           ; BSR set to: 2
  5542                           ;I2C_LCD.c: 36:     TRISCbits.TRISC3 = 0;
  5543                           
  5544                           ;incstack = 0
  5545   003276  96C8               	bcf	200,3,c	;volatile
  5546                           
  5547                           ;I2C_LCD.c: 37:     TRISCbits.TRISC4 = 0;
  5548   003278  98C8               	bcf	200,4,c	;volatile
  5549                           
  5550                           ;I2C_LCD.c: 38:     ANSELCbits.ANSELC3 = 0;
  5551   00327A  0104               	movlb	4	; () banked
  5552   00327C  9710               	bcf	16,3,b	;volatile
  5553                           
  5554                           ;I2C_LCD.c: 39:     ANSELCbits.ANSELC4 = 0;
  5555   00327E  9910               	bcf	16,4,b	;volatile
  5556                           
  5557                           ;I2C_LCD.c: 40:     ODCONCbits.ODCC3 = 1;
  5558   003280  8712               	bsf	18,3,b	;volatile
  5559                           
  5560                           ;I2C_LCD.c: 41:     ODCONCbits.ODCC4 = 1;
  5561   003282  8912               	bsf	18,4,b	;volatile
  5562                           
  5563                           ; BSR set to: 4
  5564                           ;I2C_LCD.c: 43:     RC3PPS = 0x37;
  5565   003284  0E37               	movlw	55
  5566   003286  0102               	movlb	2	; () banked
  5567   003288  6F14               	movwf	20,b	;volatile
  5568                           
  5569                           ;I2C_LCD.c: 44:     RC4PPS = 0x38;
  5570   00328A  0E38               	movlw	56
  5571   00328C  6F15               	movwf	21,b	;volatile
  5572                           
  5573                           ;I2C_LCD.c: 46:     RC3I2Cbits.PU = 2;
  5574   00328E  5187               	movf	135,w,b	;volatile
  5575   003290  0BCF               	andlw	-49
  5576   003292  0920               	iorlw	32
  5577   003294  6F87               	movwf	135,b	;volatile
  5578                           
  5579                           ;I2C_LCD.c: 47:     RC3I2Cbits.TH = 1;
  5580   003296  5187               	movf	135,w,b	;volatile
  5581   003298  0BFC               	andlw	-4
  5582   00329A  0901               	iorlw	1
  5583   00329C  6F87               	movwf	135,b	;volatile
  5584                           
  5585                           ;I2C_LCD.c: 48:     RC4I2Cbits.PU = 2;
  5586   00329E  5186               	movf	134,w,b	;volatile
  5587   0032A0  0BCF               	andlw	-49
  5588   0032A2  0920               	iorlw	32
  5589   0032A4  6F86               	movwf	134,b	;volatile
  5590                           
  5591                           ;I2C_LCD.c: 49:     RC4I2Cbits.TH = 1;
  5592   0032A6  5186               	movf	134,w,b	;volatile
  5593   0032A8  0BFC               	andlw	-4
  5594   0032AA  0901               	iorlw	1
  5595   0032AC  6F86               	movwf	134,b	;volatile
  5596                           
  5597                           ; BSR set to: 2
  5598                           ;I2C_LCD.c: 50:     I2C1CON0bits.EN = 1;
  5599   0032AE  8F94               	bsf	148,7,b	;volatile
  5600                           
  5601                           ;I2C_LCD.c: 51:     I2C1CLKbits.CLK = 3;
  5602   0032B0  0E03               	movlw	3
  5603   0032B2  6F9C               	movwf	156,b	;volatile
  5604                           
  5605                           ;I2C_LCD.c: 52:     I2C1CON0bits.MODE = 0x4;
  5606   0032B4  5194               	movf	148,w,b	;volatile
  5607   0032B6  0BF8               	andlw	-8
  5608   0032B8  0904               	iorlw	4
  5609   0032BA  6F94               	movwf	148,b	;volatile
  5610                           
  5611                           ; BSR set to: 2
  5612                           ;I2C_LCD.c: 53:     I2C1CON2bits.ABD = 0;
  5613   0032BC  9996               	bcf	150,4,b	;volatile
  5614                           
  5615                           ; BSR set to: 2
  5616   0032BE  0012               	return		;funcret
  5617   0032C0                     __end_of_I2C1_INIT:
  5618                           	callstack 0
  5619                           
  5620 ;; *************** function _I2C_LCD_ESCRIBE_VAR_INT *****************
  5621 ;; Defined at:
  5622 ;;		line 333 in file "I2C_LCD.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;  numero          2   12[COMRAM] unsigned int 
  5625 ;;  n_digitos       1   14[COMRAM] unsigned char 
  5626 ;;  punto           1   15[COMRAM] unsigned char 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  unidad          1   20[COMRAM] unsigned char 
  5629 ;;  decena          1   19[COMRAM] unsigned char 
  5630 ;;  centena         1   18[COMRAM] unsigned char 
  5631 ;;  millar          1   17[COMRAM] unsigned char 
  5632 ;;  d_millar        1   16[COMRAM] unsigned char 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  1    wreg      void 
  5635 ;; Registers used:
  5636 ;;		wreg, status,2, status,0, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5643 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5645 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5646 ;;Total ram usage:        9 bytes
  5647 ;; Hardware stack levels used: 1
  5648 ;; Hardware stack levels required when called: 2
  5649 ;; This function calls:
  5650 ;;		_I2C_ENVIA_LCD_DATA
  5651 ;;		___lwdiv
  5652 ;;		___lwmod
  5653 ;; This function is called by:
  5654 ;;		_main
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           	psect	text11
  5659   002984                     __ptext11:
  5660                           	callstack 0
  5661   002984                     _I2C_LCD_ESCRIBE_VAR_INT:
  5662                           	callstack 124
  5663                           
  5664                           ;I2C_LCD.c: 334:     unsigned char d_millar, millar, centena, decena, unidad;;I2C_LCD.c:
      +                           335:     d_millar = numero / 10000;
  5665                           
  5666                           ; BSR set to: 2
  5667                           ;incstack = 0
  5668   002984  C50D  F506         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  5669   002988  C50E  F507         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  5670   00298C  0E27               	movlw	39
  5671   00298E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5672   002990  0E10               	movlw	16
  5673   002992  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  5674   002994  EC12  F019         	call	___lwdiv	;wreg free
  5675   002998  5006               	movf	?___lwdiv^(0+1280),w,c
  5676   00299A  6E11               	movwf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  5677                           
  5678                           ;I2C_LCD.c: 336:     millar = (numero % 10000) / 1000;
  5679   00299C  0E27               	movlw	39
  5680   00299E  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5681   0029A0  0E10               	movlw	16
  5682   0029A2  6E03               	movwf	___lwmod@divisor^(0+1280),c
  5683   0029A4  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5684   0029A8  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5685   0029AC  EC60  F019         	call	___lwmod	;wreg free
  5686   0029B0  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  5687   0029B4  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  5688   0029B8  0E03               	movlw	3
  5689   0029BA  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5690   0029BC  0EE8               	movlw	232
  5691   0029BE  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  5692   0029C0  EC12  F019         	call	___lwdiv	;wreg free
  5693   0029C4  5006               	movf	?___lwdiv^(0+1280),w,c
  5694   0029C6  6E12               	movwf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),c
  5695                           
  5696                           ;I2C_LCD.c: 337:     centena = (numero % 1000) / 100;
  5697   0029C8  0E03               	movlw	3
  5698   0029CA  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5699   0029CC  0EE8               	movlw	232
  5700   0029CE  6E03               	movwf	___lwmod@divisor^(0+1280),c
  5701   0029D0  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5702   0029D4  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5703   0029D8  EC60  F019         	call	___lwmod	;wreg free
  5704   0029DC  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  5705   0029E0  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  5706   0029E4  0E00               	movlw	0
  5707   0029E6  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5708   0029E8  0E64               	movlw	100
  5709   0029EA  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  5710   0029EC  EC12  F019         	call	___lwdiv	;wreg free
  5711   0029F0  5006               	movf	?___lwdiv^(0+1280),w,c
  5712   0029F2  6E13               	movwf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),c
  5713                           
  5714                           ;I2C_LCD.c: 338:     decena = (numero % 100) / 10;
  5715   0029F4  0E00               	movlw	0
  5716   0029F6  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5717   0029F8  0E64               	movlw	100
  5718   0029FA  6E03               	movwf	___lwmod@divisor^(0+1280),c
  5719   0029FC  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5720   002A00  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5721   002A04  EC60  F019         	call	___lwmod	;wreg free
  5722   002A08  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  5723   002A0C  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  5724   002A10  0E00               	movlw	0
  5725   002A12  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5726   002A14  0E0A               	movlw	10
  5727   002A16  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  5728   002A18  EC12  F019         	call	___lwdiv	;wreg free
  5729   002A1C  5006               	movf	?___lwdiv^(0+1280),w,c
  5730   002A1E  6E14               	movwf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),c
  5731                           
  5732                           ;I2C_LCD.c: 339:     unidad = numero % 10;
  5733   002A20  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5734   002A24  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5735   002A28  0E00               	movlw	0
  5736   002A2A  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5737   002A2C  0E0A               	movlw	10
  5738   002A2E  6E03               	movwf	___lwmod@divisor^(0+1280),c
  5739   002A30  EC60  F019         	call	___lwmod	;wreg free
  5740   002A34  5001               	movf	?___lwmod^(0+1280),w,c
  5741   002A36  6E15               	movwf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),c
  5742                           
  5743                           ;I2C_LCD.c: 340:     switch(n_digitos){
  5744   002A38  D139               	goto	l2273
  5745   002A3A                     l2225:
  5746                           
  5747                           ;I2C_LCD.c: 342:             I2C_ENVIA_LCD_DATA(unidad+0x30);
  5748   002A3A  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5749   002A3C  0F30               	addlw	48
  5750   002A3E  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5751                           
  5752                           ;I2C_LCD.c: 343:             break;
  5753   002A42  0012               	return	
  5754   002A44                     l2227:
  5755                           
  5756                           ;I2C_LCD.c: 345:             if(punto == 0){
  5757   002A44  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5758   002A46  A4D8               	btfss	status,2,c
  5759   002A48  D009               	goto	l2231
  5760                           
  5761                           ;I2C_LCD.c: 346:                 I2C_ENVIA_LCD_DATA(decena+0x30);
  5762   002A4A  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5763   002A4C  0F30               	addlw	48
  5764   002A4E  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5765                           
  5766                           ;I2C_LCD.c: 347:                 I2C_ENVIA_LCD_DATA(unidad+0x30);
  5767   002A52  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5768   002A54  0F30               	addlw	48
  5769   002A56  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5770                           
  5771                           ;I2C_LCD.c: 348:             }
  5772   002A5A  0012               	return	
  5773   002A5C                     l2231:
  5774   002A5C  0410               	decf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5775   002A5E  A4D8               	btfss	status,2,c
  5776   002A60  0012               	return	
  5777                           
  5778                           ;I2C_LCD.c: 350:                 I2C_ENVIA_LCD_DATA(decena+0x30);
  5779   002A62  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5780   002A64  0F30               	addlw	48
  5781   002A66  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5782                           
  5783                           ;I2C_LCD.c: 351:                 I2C_ENVIA_LCD_DATA('.');
  5784   002A6A  0E2E               	movlw	46
  5785   002A6C  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5786                           
  5787                           ;I2C_LCD.c: 352:                 I2C_ENVIA_LCD_DATA(unidad+0x30);
  5788   002A70  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5789   002A72  0F30               	addlw	48
  5790   002A74  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5791   002A78  0012               	return	
  5792   002A7A                     l2235:
  5793                           
  5794                           ;I2C_LCD.c: 358:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5795   002A7A  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5796   002A7C  0F30               	addlw	48
  5797   002A7E  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5798                           
  5799                           ;I2C_LCD.c: 359:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5800   002A82  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5801   002A84  0F30               	addlw	48
  5802   002A86  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5803                           
  5804                           ;I2C_LCD.c: 360:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5805   002A8A  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5806   002A8C  0F30               	addlw	48
  5807   002A8E  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5808                           
  5809                           ;I2C_LCD.c: 361:                     break;
  5810   002A92  0012               	return	
  5811   002A94                     l2237:
  5812                           
  5813                           ;I2C_LCD.c: 363:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5814   002A94  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5815   002A96  0F30               	addlw	48
  5816   002A98  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5817                           
  5818                           ;I2C_LCD.c: 364:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5819   002A9C  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5820   002A9E  0F30               	addlw	48
  5821   002AA0  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5822                           
  5823                           ;I2C_LCD.c: 365:                     I2C_ENVIA_LCD_DATA('.');
  5824   002AA4  0E2E               	movlw	46
  5825   002AA6  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5826                           
  5827                           ;I2C_LCD.c: 366:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5828   002AAA  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5829   002AAC  0F30               	addlw	48
  5830   002AAE  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5831                           
  5832                           ;I2C_LCD.c: 367:                     break;
  5833   002AB2  0012               	return	
  5834   002AB4                     l2239:
  5835                           
  5836                           ;I2C_LCD.c: 369:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5837   002AB4  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5838   002AB6  0F30               	addlw	48
  5839   002AB8  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5840                           
  5841                           ;I2C_LCD.c: 370:                     I2C_ENVIA_LCD_DATA('.');
  5842   002ABC  0E2E               	movlw	46
  5843   002ABE  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5844                           
  5845                           ;I2C_LCD.c: 371:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5846   002AC2  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5847   002AC4  0F30               	addlw	48
  5848   002AC6  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5849                           
  5850                           ;I2C_LCD.c: 372:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5851   002ACA  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5852   002ACC  0F30               	addlw	48
  5853   002ACE  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5854                           
  5855                           ;I2C_LCD.c: 373:                     break;
  5856   002AD2  0012               	return	
  5857   002AD4                     l2243:
  5858   002AD4  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5859                           
  5860                           ; Switch size 1, requested type "simple"
  5861                           ; Number of cases is 3, Range of values is 0 to 2
  5862                           ; switch strategies available:
  5863                           ; Name         Instructions Cycles
  5864                           ; simple_byte           10     6 (average)
  5865                           ;	Chosen strategy is simple_byte
  5866   002AD6  0A00               	xorlw	0	; case 0
  5867   002AD8  B4D8               	btfsc	status,2,c
  5868   002ADA  D7CF               	goto	l2235
  5869   002ADC  0A01               	xorlw	1	; case 1
  5870   002ADE  B4D8               	btfsc	status,2,c
  5871   002AE0  D7D9               	goto	l2237
  5872   002AE2  0A03               	xorlw	3	; case 2
  5873   002AE4  A4D8               	btfss	status,2,c
  5874   002AE6  0012               	return	
  5875   002AE8  D7E5               	goto	l2239
  5876   002AEA                     l2245:
  5877                           
  5878                           ;I2C_LCD.c: 379:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5879   002AEA  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5880   002AEC  0F30               	addlw	48
  5881   002AEE  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5882                           
  5883                           ;I2C_LCD.c: 380:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5884   002AF2  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5885   002AF4  0F30               	addlw	48
  5886   002AF6  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5887                           
  5888                           ;I2C_LCD.c: 381:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5889   002AFA  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5890   002AFC  0F30               	addlw	48
  5891   002AFE  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5892                           
  5893                           ;I2C_LCD.c: 382:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5894   002B02  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5895   002B04  0F30               	addlw	48
  5896   002B06  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5897                           
  5898                           ;I2C_LCD.c: 383:                     break;
  5899   002B0A  0012               	return	
  5900   002B0C                     l2247:
  5901                           
  5902                           ;I2C_LCD.c: 385:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5903   002B0C  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5904   002B0E  0F30               	addlw	48
  5905   002B10  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5906                           
  5907                           ;I2C_LCD.c: 386:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5908   002B14  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5909   002B16  0F30               	addlw	48
  5910   002B18  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5911                           
  5912                           ;I2C_LCD.c: 387:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5913   002B1C  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5914   002B1E  0F30               	addlw	48
  5915   002B20  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5916                           
  5917                           ;I2C_LCD.c: 388:                     I2C_ENVIA_LCD_DATA('.');
  5918   002B24  0E2E               	movlw	46
  5919   002B26  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5920                           
  5921                           ;I2C_LCD.c: 389:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5922   002B2A  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5923   002B2C  0F30               	addlw	48
  5924   002B2E  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5925                           
  5926                           ;I2C_LCD.c: 390:                     break;
  5927   002B32  0012               	return	
  5928   002B34                     l2249:
  5929                           
  5930                           ;I2C_LCD.c: 392:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5931   002B34  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5932   002B36  0F30               	addlw	48
  5933   002B38  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5934                           
  5935                           ;I2C_LCD.c: 393:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5936   002B3C  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5937   002B3E  0F30               	addlw	48
  5938   002B40  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5939                           
  5940                           ;I2C_LCD.c: 394:                     I2C_ENVIA_LCD_DATA('.');
  5941   002B44  0E2E               	movlw	46
  5942   002B46  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5943                           
  5944                           ;I2C_LCD.c: 395:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5945   002B4A  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5946   002B4C  0F30               	addlw	48
  5947   002B4E  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5948                           
  5949                           ;I2C_LCD.c: 396:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5950   002B52  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5951   002B54  0F30               	addlw	48
  5952   002B56  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5953                           
  5954                           ;I2C_LCD.c: 397:                     break;
  5955   002B5A  0012               	return	
  5956   002B5C                     l2251:
  5957                           
  5958                           ;I2C_LCD.c: 399:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5959   002B5C  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5960   002B5E  0F30               	addlw	48
  5961   002B60  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5962                           
  5963                           ;I2C_LCD.c: 400:                     I2C_ENVIA_LCD_DATA('.');
  5964   002B64  0E2E               	movlw	46
  5965   002B66  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5966                           
  5967                           ;I2C_LCD.c: 401:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5968   002B6A  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5969   002B6C  0F30               	addlw	48
  5970   002B6E  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5971                           
  5972                           ;I2C_LCD.c: 402:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5973   002B72  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5974   002B74  0F30               	addlw	48
  5975   002B76  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5976                           
  5977                           ;I2C_LCD.c: 403:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5978   002B7A  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5979   002B7C  0F30               	addlw	48
  5980   002B7E  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  5981                           
  5982                           ;I2C_LCD.c: 404:                     break;
  5983   002B82  0012               	return	
  5984   002B84                     l2255:
  5985   002B84  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5986                           
  5987                           ; Switch size 1, requested type "simple"
  5988                           ; Number of cases is 4, Range of values is 0 to 3
  5989                           ; switch strategies available:
  5990                           ; Name         Instructions Cycles
  5991                           ; simple_byte           13     7 (average)
  5992                           ;	Chosen strategy is simple_byte
  5993   002B86  0A00               	xorlw	0	; case 0
  5994   002B88  B4D8               	btfsc	status,2,c
  5995   002B8A  D7AF               	goto	l2245
  5996   002B8C  0A01               	xorlw	1	; case 1
  5997   002B8E  B4D8               	btfsc	status,2,c
  5998   002B90  D7BD               	goto	l2247
  5999   002B92  0A03               	xorlw	3	; case 2
  6000   002B94  B4D8               	btfsc	status,2,c
  6001   002B96  D7CE               	goto	l2249
  6002   002B98  0A01               	xorlw	1	; case 3
  6003   002B9A  A4D8               	btfss	status,2,c
  6004   002B9C  0012               	return	
  6005   002B9E  D7DE               	goto	l2251
  6006   002BA0                     l2257:
  6007                           
  6008                           ;I2C_LCD.c: 410:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  6009   002BA0  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  6010   002BA2  0F30               	addlw	48
  6011   002BA4  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6012                           
  6013                           ;I2C_LCD.c: 411:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  6014   002BA8  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  6015   002BAA  0F30               	addlw	48
  6016   002BAC  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6017                           
  6018                           ;I2C_LCD.c: 412:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  6019   002BB0  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  6020   002BB2  0F30               	addlw	48
  6021   002BB4  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6022                           
  6023                           ;I2C_LCD.c: 413:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  6024   002BB8  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  6025   002BBA  0F30               	addlw	48
  6026   002BBC  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6027                           
  6028                           ;I2C_LCD.c: 414:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  6029   002BC0  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  6030   002BC2  0F30               	addlw	48
  6031   002BC4  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6032                           
  6033                           ;I2C_LCD.c: 415:                     break;
  6034   002BC8  0012               	return	
  6035   002BCA                     l2259:
  6036                           
  6037                           ;I2C_LCD.c: 417:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  6038   002BCA  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  6039   002BCC  0F30               	addlw	48
  6040   002BCE  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6041                           
  6042                           ;I2C_LCD.c: 418:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  6043   002BD2  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  6044   002BD4  0F30               	addlw	48
  6045   002BD6  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6046                           
  6047                           ;I2C_LCD.c: 419:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  6048   002BDA  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  6049   002BDC  0F30               	addlw	48
  6050   002BDE  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6051                           
  6052                           ;I2C_LCD.c: 420:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  6053   002BE2  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  6054   002BE4  0F30               	addlw	48
  6055   002BE6  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6056                           
  6057                           ;I2C_LCD.c: 421:                     I2C_ENVIA_LCD_DATA('.');
  6058   002BEA  0E2E               	movlw	46
  6059   002BEC  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6060                           
  6061                           ;I2C_LCD.c: 422:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  6062   002BF0  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  6063   002BF2  0F30               	addlw	48
  6064   002BF4  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6065                           
  6066                           ;I2C_LCD.c: 423:                     break;
  6067   002BF8  0012               	return	
  6068   002BFA                     l2261:
  6069                           
  6070                           ;I2C_LCD.c: 425:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  6071   002BFA  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  6072   002BFC  0F30               	addlw	48
  6073   002BFE  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6074                           
  6075                           ;I2C_LCD.c: 426:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  6076   002C02  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  6077   002C04  0F30               	addlw	48
  6078   002C06  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6079                           
  6080                           ;I2C_LCD.c: 427:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  6081   002C0A  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  6082   002C0C  0F30               	addlw	48
  6083   002C0E  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6084                           
  6085                           ;I2C_LCD.c: 428:                     I2C_ENVIA_LCD_DATA('.');
  6086   002C12  0E2E               	movlw	46
  6087   002C14  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6088                           
  6089                           ;I2C_LCD.c: 429:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  6090   002C18  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  6091   002C1A  0F30               	addlw	48
  6092   002C1C  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6093                           
  6094                           ;I2C_LCD.c: 430:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  6095   002C20  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  6096   002C22  0F30               	addlw	48
  6097   002C24  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6098                           
  6099                           ;I2C_LCD.c: 431:                     break;
  6100   002C28  0012               	return	
  6101   002C2A                     l2263:
  6102                           
  6103                           ;I2C_LCD.c: 433:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  6104   002C2A  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  6105   002C2C  0F30               	addlw	48
  6106   002C2E  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6107                           
  6108                           ;I2C_LCD.c: 434:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  6109   002C32  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  6110   002C34  0F30               	addlw	48
  6111   002C36  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6112                           
  6113                           ;I2C_LCD.c: 435:                     I2C_ENVIA_LCD_DATA('.');
  6114   002C3A  0E2E               	movlw	46
  6115   002C3C  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6116                           
  6117                           ;I2C_LCD.c: 436:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  6118   002C40  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  6119   002C42  0F30               	addlw	48
  6120   002C44  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6121                           
  6122                           ;I2C_LCD.c: 437:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  6123   002C48  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  6124   002C4A  0F30               	addlw	48
  6125   002C4C  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6126                           
  6127                           ;I2C_LCD.c: 438:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  6128   002C50  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  6129   002C52  0F30               	addlw	48
  6130   002C54  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6131                           
  6132                           ;I2C_LCD.c: 439:                     break;
  6133   002C58  0012               	return	
  6134   002C5A                     l2265:
  6135                           
  6136                           ;I2C_LCD.c: 441:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  6137   002C5A  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  6138   002C5C  0F30               	addlw	48
  6139   002C5E  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6140                           
  6141                           ;I2C_LCD.c: 442:                     I2C_ENVIA_LCD_DATA('.');
  6142   002C62  0E2E               	movlw	46
  6143   002C64  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6144                           
  6145                           ;I2C_LCD.c: 443:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  6146   002C68  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  6147   002C6A  0F30               	addlw	48
  6148   002C6C  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6149                           
  6150                           ;I2C_LCD.c: 444:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  6151   002C70  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  6152   002C72  0F30               	addlw	48
  6153   002C74  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6154                           
  6155                           ;I2C_LCD.c: 445:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  6156   002C78  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  6157   002C7A  0F30               	addlw	48
  6158   002C7C  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6159                           
  6160                           ;I2C_LCD.c: 446:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  6161   002C80  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  6162   002C82  0F30               	addlw	48
  6163   002C84  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6164                           
  6165                           ;I2C_LCD.c: 447:                     break;
  6166   002C88  0012               	return	
  6167   002C8A                     l2269:
  6168   002C8A  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  6169                           
  6170                           ; Switch size 1, requested type "simple"
  6171                           ; Number of cases is 5, Range of values is 0 to 4
  6172                           ; switch strategies available:
  6173                           ; Name         Instructions Cycles
  6174                           ; simple_byte           16     9 (average)
  6175                           ;	Chosen strategy is simple_byte
  6176   002C8C  0A00               	xorlw	0	; case 0
  6177   002C8E  B4D8               	btfsc	status,2,c
  6178   002C90  D787               	goto	l2257
  6179   002C92  0A01               	xorlw	1	; case 1
  6180   002C94  B4D8               	btfsc	status,2,c
  6181   002C96  D799               	goto	l2259
  6182   002C98  0A03               	xorlw	3	; case 2
  6183   002C9A  B4D8               	btfsc	status,2,c
  6184   002C9C  D7AE               	goto	l2261
  6185   002C9E  0A01               	xorlw	1	; case 3
  6186   002CA0  B4D8               	btfsc	status,2,c
  6187   002CA2  D7C3               	goto	l2263
  6188   002CA4  0A07               	xorlw	7	; case 4
  6189   002CA6  A4D8               	btfss	status,2,c
  6190   002CA8  0012               	return	
  6191   002CAA  D7D7               	goto	l2265
  6192   002CAC                     l2273:
  6193   002CAC  500F               	movf	I2C_LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  6194                           
  6195                           ; Switch size 1, requested type "simple"
  6196                           ; Number of cases is 5, Range of values is 1 to 5
  6197                           ; switch strategies available:
  6198                           ; Name         Instructions Cycles
  6199                           ; simple_byte           16     9 (average)
  6200                           ;	Chosen strategy is simple_byte
  6201   002CAE  0A01               	xorlw	1	; case 1
  6202   002CB0  B4D8               	btfsc	status,2,c
  6203   002CB2  D6C3               	goto	l2225
  6204   002CB4  0A03               	xorlw	3	; case 2
  6205   002CB6  B4D8               	btfsc	status,2,c
  6206   002CB8  D6C5               	goto	l2227
  6207   002CBA  0A01               	xorlw	1	; case 3
  6208   002CBC  B4D8               	btfsc	status,2,c
  6209   002CBE  D70A               	goto	l2243
  6210   002CC0  0A07               	xorlw	7	; case 4
  6211   002CC2  B4D8               	btfsc	status,2,c
  6212   002CC4  D75F               	goto	l2255
  6213   002CC6  0A01               	xorlw	1	; case 5
  6214   002CC8  A4D8               	btfss	status,2,c
  6215   002CCA  0012               	return	
  6216   002CCC  D7DE               	goto	l2269
  6217   002CCE                     __end_of_I2C_LCD_ESCRIBE_VAR_INT:
  6218                           	callstack 0
  6219                           
  6220 ;; *************** function ___lwmod *****************
  6221 ;; Defined at:
  6222 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  dividend        2    0[COMRAM] unsigned int 
  6225 ;;  divisor         2    2[COMRAM] unsigned int 
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;  counter         1    4[COMRAM] unsigned char 
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  2    0[COMRAM] unsigned int 
  6230 ;; Registers used:
  6231 ;;		wreg, status,2, status,0
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6240 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6241 ;;Total ram usage:        5 bytes
  6242 ;; Hardware stack levels used: 1
  6243 ;; This function calls:
  6244 ;;		Nothing
  6245 ;; This function is called by:
  6246 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text12
  6251   0032C0                     __ptext12:
  6252                           	callstack 0
  6253   0032C0                     ___lwmod:
  6254                           	callstack 125
  6255                           
  6256                           ;incstack = 0
  6257   0032C0  5003               	movf	___lwmod@divisor^(0+1280),w,c
  6258   0032C2  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  6259   0032C4  B4D8               	btfsc	status,2,c
  6260   0032C6  D018               	goto	l903
  6261   0032C8  0E01               	movlw	1
  6262   0032CA  6E05               	movwf	___lwmod@counter^(0+1280),c
  6263   0032CC  D004               	goto	l1999
  6264   0032CE                     l1997:
  6265   0032CE  90D8               	bcf	status,0,c
  6266   0032D0  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  6267   0032D2  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  6268   0032D4  2A05               	incf	___lwmod@counter^(0+1280),f,c
  6269   0032D6                     l1999:
  6270   0032D6  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  6271   0032D8  D7FA               	goto	l1997
  6272   0032DA                     u980:
  6273   0032DA  5003               	movf	___lwmod@divisor^(0+1280),w,c
  6274   0032DC  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  6275   0032DE  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  6276   0032E0  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  6277   0032E2  A0D8               	btfss	status,0,c
  6278   0032E4  D004               	goto	l2005
  6279   0032E6  5003               	movf	___lwmod@divisor^(0+1280),w,c
  6280   0032E8  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  6281   0032EA  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  6282   0032EC  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  6283   0032EE                     l2005:
  6284   0032EE  90D8               	bcf	status,0,c
  6285   0032F0  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  6286   0032F2  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  6287   0032F4  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  6288   0032F6  D7F1               	goto	u980
  6289   0032F8                     l903:
  6290   0032F8  C501  F501         	movff	___lwmod@dividend,?___lwmod
  6291   0032FC  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  6292   003300  0012               	return		;funcret
  6293   003302                     __end_of___lwmod:
  6294                           	callstack 0
  6295                           
  6296 ;; *************** function ___lwdiv *****************
  6297 ;; Defined at:
  6298 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  dividend        2    5[COMRAM] unsigned int 
  6301 ;;  divisor         2    7[COMRAM] unsigned int 
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;  quotient        2    9[COMRAM] unsigned int 
  6304 ;;  counter         1   11[COMRAM] unsigned char 
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  2    5[COMRAM] unsigned int 
  6307 ;; Registers used:
  6308 ;;		wreg, status,2, status,0
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6314 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6315 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6317 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6318 ;;Total ram usage:        7 bytes
  6319 ;; Hardware stack levels used: 1
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  6324 ;;		_main
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           	psect	text13
  6329   003224                     __ptext13:
  6330                           	callstack 0
  6331   003224                     ___lwdiv:
  6332                           	callstack 126
  6333                           
  6334                           ;incstack = 0
  6335   003224  0E00               	movlw	0
  6336   003226  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  6337   003228  0E00               	movlw	0
  6338   00322A  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  6339   00322C  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  6340   00322E  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  6341   003230  B4D8               	btfsc	status,2,c
  6342   003232  D01C               	goto	l893
  6343   003234  0E01               	movlw	1
  6344   003236  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  6345   003238  D004               	goto	l1979
  6346   00323A                     l1977:
  6347   00323A  90D8               	bcf	status,0,c
  6348   00323C  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  6349   00323E  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  6350   003240  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  6351   003242                     l1979:
  6352   003242  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  6353   003244  D7FA               	goto	l1977
  6354   003246                     u950:
  6355   003246  90D8               	bcf	status,0,c
  6356   003248  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  6357   00324A  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  6358   00324C  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  6359   00324E  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  6360   003250  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  6361   003252  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  6362   003254  A0D8               	btfss	status,0,c
  6363   003256  D005               	goto	l1989
  6364   003258  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  6365   00325A  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  6366   00325C  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  6367   00325E  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  6368   003260  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  6369   003262                     l1989:
  6370   003262  90D8               	bcf	status,0,c
  6371   003264  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  6372   003266  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  6373   003268  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  6374   00326A  D7ED               	goto	u950
  6375   00326C                     l893:
  6376   00326C  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  6377   003270  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6378   003274  0012               	return		;funcret
  6379   003276                     __end_of___lwdiv:
  6380                           	callstack 0
  6381                           
  6382 ;; *************** function _I2C_LCD_CHAR_GRADO *****************
  6383 ;; Defined at:
  6384 ;;		line 453 in file "I2C_LCD.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      void 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6402 ;;Total ram usage:        0 bytes
  6403 ;; Hardware stack levels used: 1
  6404 ;; Hardware stack levels required when called: 2
  6405 ;; This function calls:
  6406 ;;		_I2C_ENVIA_LCD_DATA
  6407 ;; This function is called by:
  6408 ;;		_main
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           	psect	text14
  6413   00340E                     __ptext14:
  6414                           	callstack 0
  6415   00340E                     _I2C_LCD_CHAR_GRADO:
  6416                           	callstack 124
  6417                           
  6418                           ;I2C_LCD.c: 454:     I2C_ENVIA_LCD_DATA(0xDF);
  6419                           
  6420                           ;incstack = 0
  6421   00340E  0EDF               	movlw	223
  6422   003410  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6423   003414  0012               	return		;funcret
  6424   003416                     __end_of_I2C_LCD_CHAR_GRADO:
  6425                           	callstack 0
  6426                           
  6427 ;; *************** function _I2C_ESCRIBE_MENSAJE2 *****************
  6428 ;; Defined at:
  6429 ;;		line 128 in file "I2C_LCD.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  cadena          1    6[COMRAM] PTR const unsigned char 
  6432 ;;		 -> STR_4(11), STR_3(10), STR_2(13), STR_1(12), 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  i               1    9[COMRAM] unsigned char 
  6435 ;;  tam             1    8[COMRAM] unsigned char 
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      void 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/2
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6445 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6448 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6449 ;;Total ram usage:        4 bytes
  6450 ;; Hardware stack levels used: 1
  6451 ;; Hardware stack levels required when called: 2
  6452 ;; This function calls:
  6453 ;;		_I2C_ENVIA_LCD_DATA
  6454 ;;		_strlen
  6455 ;; This function is called by:
  6456 ;;		_main
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text15
  6461   003302                     __ptext15:
  6462                           	callstack 0
  6463   003302                     _I2C_ESCRIBE_MENSAJE2:
  6464                           	callstack 124
  6465                           
  6466                           ;I2C_LCD.c: 129:     unsigned char tam;;I2C_LCD.c: 130:     tam = strlen(cadena);
  6467                           
  6468                           ;incstack = 0
  6469   003302  C507  F501         	movff	I2C_ESCRIBE_MENSAJE2@cadena,strlen@s
  6470   003306  EC9C  F019         	call	_strlen	;wreg free
  6471   00330A  5001               	movf	?_strlen^(0+1280),w,c
  6472   00330C  6E09               	movwf	I2C_ESCRIBE_MENSAJE2@tam^(0+1280),c
  6473                           
  6474                           ;I2C_LCD.c: 132:  for(i = 0; i<tam; i++) {
  6475   00330E  6A0A               	clrf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),c
  6476   003310  D00E               	goto	l2037
  6477   003312                     l2033:
  6478                           
  6479                           ;I2C_LCD.c: 133:   I2C_ENVIA_LCD_DATA(cadena[i]);
  6480   003312  5007               	movf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  6481   003314  240A               	addwf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),w,c
  6482   003316  6E08               	movwf	??_I2C_ESCRIBE_MENSAJE2^(0+1280),c
  6483   003318  C508  F4F6         	movff	??_I2C_ESCRIBE_MENSAJE2,tblptrl
  6484   00331C                     	if	1	;There is more than 1 active tblptr byte
  6485   00331C  0E26               	movlw	high __psmallconst
  6486   00331E  6EF7               	movwf	tblptrh,c
  6487   003320                     	endif
  6488   003320                     	if	0	;tblptru may be non-zero
  6489   003320                     	endif
  6490   003320                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6491   003320  0E00               	movlw	low (__psmallconst shr (0+16))
  6492   003322  6EF8               	movwf	tblptru,c
  6493   003324                     	endif
  6494   003324  0008               	tblrd		*
  6495   003326  50F5               	movf	tablat,w,c
  6496   003328  ECC1  F017         	call	_I2C_ENVIA_LCD_DATA
  6497                           
  6498                           ;I2C_LCD.c: 134:  }
  6499   00332C  2A0A               	incf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),f,c
  6500   00332E                     l2037:
  6501   00332E  5009               	movf	I2C_ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  6502   003330  5C0A               	subwf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),w,c
  6503   003332  B0D8               	btfsc	status,0,c
  6504   003334  0012               	return	
  6505   003336  D7ED               	goto	l2033
  6506   003338                     __end_of_I2C_ESCRIBE_MENSAJE2:
  6507                           	callstack 0
  6508                           
  6509 ;; *************** function _strlen *****************
  6510 ;; Defined at:
  6511 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  s               1    0[COMRAM] PTR const unsigned char 
  6514 ;;		 -> STR_4(11), STR_3(10), STR_2(13), STR_1(12), 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;  a               1    2[COMRAM] PTR const unsigned char 
  6517 ;;		 -> STR_4(11), STR_3(10), STR_2(13), STR_1(12), 
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  2    0[COMRAM] unsigned int 
  6520 ;; Registers used:
  6521 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/2
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6530 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6531 ;;Total ram usage:        3 bytes
  6532 ;; Hardware stack levels used: 1
  6533 ;; This function calls:
  6534 ;;		Nothing
  6535 ;; This function is called by:
  6536 ;;		_I2C_ESCRIBE_MENSAJE2
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           	psect	text16
  6541   003338                     __ptext16:
  6542                           	callstack 0
  6543   003338                     _strlen:
  6544                           	callstack 125
  6545                           
  6546                           ;incstack = 0
  6547   003338  C501  F503         	movff	strlen@s,strlen@a
  6548   00333C  D001               	goto	l1809
  6549   00333E                     l1807:
  6550   00333E  2A01               	incf	strlen@s^(0+1280),f,c
  6551   003340                     l1809:
  6552   003340  C501  F4F6         	movff	strlen@s,tblptrl
  6553   003344                     	if	1	;There is more than 1 active tblptr byte
  6554   003344  0E26               	movlw	high __psmallconst
  6555   003346  6EF7               	movwf	tblptrh,c
  6556   003348                     	endif
  6557   003348                     	if	0	;tblptru may be non-zero
  6558   003348                     	endif
  6559   003348                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6560   003348  0E00               	movlw	low (__psmallconst shr (0+16))
  6561   00334A  6EF8               	movwf	tblptru,c
  6562   00334C                     	endif
  6563   00334C  0008               	tblrd		*
  6564   00334E  50F5               	movf	tablat,w,c
  6565   003350  0900               	iorlw	0
  6566   003352  A4D8               	btfss	status,2,c
  6567   003354  D7F4               	goto	l1807
  6568   003356  5003               	movf	strlen@a^(0+1280),w,c
  6569   003358  5C01               	subwf	strlen@s^(0+1280),w,c
  6570   00335A  6E01               	movwf	?_strlen^(0+1280),c
  6571   00335C  6A02               	clrf	(?_strlen+1)^(0+1280),c
  6572   00335E  BE01               	btfsc	?_strlen^(0+1280),7,c
  6573   003360  0602               	decf	(?_strlen+1)^(0+1280),f,c
  6574   003362  0012               	return		;funcret
  6575   003364                     __end_of_strlen:
  6576                           	callstack 0
  6577                           
  6578 ;; *************** function _I2C_ENVIA_LCD_DATA *****************
  6579 ;; Defined at:
  6580 ;;		line 137 in file "I2C_LCD.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;  data            1    wreg     unsigned char 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;  data            1    3[COMRAM] unsigned char 
  6585 ;;  lownibble       1    5[COMRAM] unsigned char 
  6586 ;;  highnibble      1    4[COMRAM] unsigned char 
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  1    wreg      void 
  6589 ;; Registers used:
  6590 ;;		wreg, status,2, status,0, cstack
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6597 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6599 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6600 ;;Total ram usage:        4 bytes
  6601 ;; Hardware stack levels used: 1
  6602 ;; Hardware stack levels required when called: 1
  6603 ;; This function calls:
  6604 ;;		_I2C1_WRITESINGLEBYTE
  6605 ;; This function is called by:
  6606 ;;		_I2C_ESCRIBE_MENSAJE2
  6607 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  6608 ;;		_I2C_LCD_CHAR_GRADO
  6609 ;;		_main
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           	psect	text17
  6614   002F82                     __ptext17:
  6615                           	callstack 0
  6616   002F82                     _I2C_ENVIA_LCD_DATA:
  6617                           	callstack 124
  6618                           
  6619                           ;incstack = 0
  6620                           ;I2C_ENVIA_LCD_DATA@data stored from wreg
  6621   002F82  6E04               	movwf	I2C_ENVIA_LCD_DATA@data^(0+1280),c
  6622                           
  6623                           ;I2C_LCD.c: 138:     unsigned char highnibble;;I2C_LCD.c: 139:     unsigned char lownibb
      +                          le;;I2C_LCD.c: 141:     highnibble = (data & 0xF0) | 0x08;
  6624   002F84  5004               	movf	I2C_ENVIA_LCD_DATA@data^(0+1280),w,c
  6625   002F86  0BF0               	andlw	240
  6626   002F88  0908               	iorlw	8
  6627   002F8A  6E05               	movwf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),c
  6628                           
  6629                           ;I2C_LCD.c: 142:     lownibble = (unsigned char)(((data & 0x0F)<<4)| 0x08);
  6630   002F8C  C504  F503         	movff	I2C_ENVIA_LCD_DATA@data,??_I2C_ENVIA_LCD_DATA
  6631   002F90  0E0F               	movlw	15
  6632   002F92  1603               	andwf	??_I2C_ENVIA_LCD_DATA^(0+1280),f,c
  6633   002F94  3803               	swapf	??_I2C_ENVIA_LCD_DATA^(0+1280),w,c
  6634   002F96  0BF0               	andlw	240
  6635   002F98  0908               	iorlw	8
  6636   002F9A  6E06               	movwf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),c
  6637                           
  6638                           ;I2C_LCD.c: 144:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(highnibble | 0x04 | 0x01));
  6639   002F9C  5005               	movf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),w,c
  6640   002F9E  0905               	iorlw	5
  6641   002FA0  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6642   002FA2  0E27               	movlw	39
  6643   002FA4  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  6644                           
  6645                           ; BSR set to: 2
  6646                           ;I2C_LCD.c: 145:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6647   002FA8  0E35               	movlw	53
  6648   002FAA                     u1677:
  6649   002FAA  2EE8               	decfsz	wreg,f,c
  6650   002FAC  D7FE               	bra	u1677
  6651   002FAE  0000               	nop	
  6652                           
  6653                           ;I2C_LCD.c: 146:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(highnibble | 0x01));
  6654   002FB0  5005               	movf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),w,c
  6655   002FB2  0901               	iorlw	1
  6656   002FB4  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6657   002FB6  0E27               	movlw	39
  6658   002FB8  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  6659                           
  6660                           ; BSR set to: 2
  6661                           ;I2C_LCD.c: 147:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6662   002FBC  0E35               	movlw	53
  6663   002FBE                     u1687:
  6664   002FBE  2EE8               	decfsz	wreg,f,c
  6665   002FC0  D7FE               	bra	u1687
  6666   002FC2  0000               	nop	
  6667                           
  6668                           ;I2C_LCD.c: 149:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(lownibble | 0x04 | 0x01));
  6669   002FC4  5006               	movf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),w,c
  6670   002FC6  0905               	iorlw	5
  6671   002FC8  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6672   002FCA  0E27               	movlw	39
  6673   002FCC  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  6674                           
  6675                           ; BSR set to: 2
  6676                           ;I2C_LCD.c: 150:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6677   002FD0  0E35               	movlw	53
  6678   002FD2                     u1697:
  6679   002FD2  2EE8               	decfsz	wreg,f,c
  6680   002FD4  D7FE               	bra	u1697
  6681   002FD6  0000               	nop	
  6682                           
  6683                           ;I2C_LCD.c: 151:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(lownibble | 0x01));
  6684   002FD8  5006               	movf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),w,c
  6685   002FDA  0901               	iorlw	1
  6686   002FDC  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6687   002FDE  0E27               	movlw	39
  6688   002FE0  ECB2  F019         	call	_I2C1_WRITESINGLEBYTE
  6689                           
  6690                           ; BSR set to: 2
  6691                           ;I2C_LCD.c: 152:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6692   002FE4  0E35               	movlw	53
  6693   002FE6                     u1707:
  6694   002FE6  2EE8               	decfsz	wreg,f,c
  6695   002FE8  D7FE               	bra	u1707
  6696   002FEA  0000               	nop	
  6697   002FEC  0012               	return		;funcret
  6698   002FEE                     __end_of_I2C_ENVIA_LCD_DATA:
  6699                           	callstack 0
  6700                           
  6701 ;; *************** function _I2C1_WRITESINGLEBYTE *****************
  6702 ;; Defined at:
  6703 ;;		line 60 in file "I2C_LCD.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  direccion       1    wreg     unsigned char 
  6706 ;;  dato            1    0[COMRAM] unsigned char 
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;  direccion       1    1[COMRAM] unsigned char 
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  1    wreg      void 
  6711 ;; Registers used:
  6712 ;;		wreg, status,2, status,0
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/2
  6715 ;;		On exit  : 3F/2
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6718 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6722 ;;Total ram usage:        2 bytes
  6723 ;; Hardware stack levels used: 1
  6724 ;; This function calls:
  6725 ;;		Nothing
  6726 ;; This function is called by:
  6727 ;;		_I2C_ENVIA_LCD_DATA
  6728 ;;		_I2C_ENVIA_LCD_CMD
  6729 ;;		_I2C_LCD_INIT
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           	psect	text18
  6734   003364                     __ptext18:
  6735                           	callstack 0
  6736   003364                     _I2C1_WRITESINGLEBYTE:
  6737                           	callstack 124
  6738                           
  6739                           ;incstack = 0
  6740                           ;I2C1_WRITESINGLEBYTE@direccion stored from wreg
  6741   003364  6E02               	movwf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),c
  6742                           
  6743                           ;I2C_LCD.c: 61:     I2C1CNT = 1;
  6744   003366  0E01               	movlw	1
  6745   003368  0102               	movlb	2	; () banked
  6746   00336A  6F8D               	movwf	141,b	;volatile
  6747                           
  6748                           ; BSR set to: 2
  6749                           ;I2C_LCD.c: 62:     I2C1ADB1 = (direccion << 1) & 0xFE;
  6750   00336C  5002               	movf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),w,c
  6751   00336E  2402               	addwf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),w,c
  6752   003370  0BFE               	andlw	254
  6753   003372  6F8F               	movwf	143,b	;volatile
  6754                           
  6755                           ; BSR set to: 2
  6756                           ;I2C_LCD.c: 63:     I2C1TXB = dato;
  6757   003374  C501  F28C         	movff	I2C1_WRITESINGLEBYTE@dato,652	;volatile
  6758                           
  6759                           ; BSR set to: 2
  6760                           ;I2C_LCD.c: 64:     I2C1CON0bits.S = 1;
  6761   003378  8B94               	bsf	148,5,b	;volatile
  6762   00337A                     l51:
  6763                           
  6764                           ; BSR set to: 2
  6765   00337A  AB99               	btfss	153,5,b	;volatile
  6766   00337C  D7FE               	goto	l51
  6767   00337E                     u580:
  6768                           
  6769                           ; BSR set to: 2
  6770   00337E  BB95               	btfsc	149,5,b	;volatile
  6771   003380  D7FE               	goto	u580
  6772   003382                     u590:
  6773                           
  6774                           ; BSR set to: 2
  6775   003382  B59A               	btfsc	154,2,b	;volatile
  6776   003384  0012               	return	
  6777   003386  D7FD               	goto	u590
  6778   003388                     __end_of_I2C1_WRITESINGLEBYTE:
  6779                           	callstack 0
  6780                           
  6781 ;; *************** function _DHT_GetTemp *****************
  6782 ;; Defined at:
  6783 ;;		line 104 in file "LIB_DHT.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  modelo          1    wreg     unsigned char 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;  modelo          1   12[COMRAM] unsigned char 
  6788 ;;  valor_dht       2    9[COMRAM] unsigned int 
  6789 ;;  Temp_Ent        1   11[COMRAM] unsigned char 
  6790 ;;  Temp_Dec        1    8[COMRAM] unsigned char 
  6791 ;;  Chksum          1    0        unsigned char 
  6792 ;;  RH_Dec          1    0        unsigned char 
  6793 ;;  RH_Ent          1    0        unsigned char 
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  2    4[COMRAM] unsigned int 
  6796 ;; Registers used:
  6797 ;;		wreg, status,2, status,0, cstack
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6804 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6806 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6807 ;;Total ram usage:        9 bytes
  6808 ;; Hardware stack levels used: 1
  6809 ;; Hardware stack levels required when called: 1
  6810 ;; This function calls:
  6811 ;;		_DHT_Check
  6812 ;;		_DHT_Read
  6813 ;;		_DHT_Start
  6814 ;; This function is called by:
  6815 ;;		_main
  6816 ;; This function uses a non-reentrant model
  6817 ;;
  6818                           
  6819                           	psect	text19
  6820   003056                     __ptext19:
  6821                           	callstack 0
  6822   003056                     _DHT_GetTemp:
  6823                           	callstack 125
  6824                           
  6825                           ; BSR set to: 2
  6826                           ;incstack = 0
  6827                           ;DHT_GetTemp@modelo stored from wreg
  6828   003056  6E0D               	movwf	DHT_GetTemp@modelo^(0+1280),c
  6829                           
  6830                           ;LIB_DHT.c: 107:     DHT_Start(modelo);
  6831   003058  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6832   00305A  ECBB  F018         	call	_DHT_Start
  6833                           
  6834                           ;LIB_DHT.c: 108:     DHT_Check(modelo);
  6835   00305E  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6836   003060  EC78  F017         	call	_DHT_Check
  6837   003064  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6838   003066  EC2B  F017         	call	_DHT_Read
  6839   00306A  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6840   00306C  EC2B  F017         	call	_DHT_Read
  6841                           
  6842                           ;LIB_DHT.c: 111:     Temp_Ent = DHT_Read(modelo);
  6843   003070  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6844   003072  EC2B  F017         	call	_DHT_Read
  6845   003076  6E0C               	movwf	DHT_GetTemp@Temp_Ent^(0+1280),c
  6846                           
  6847                           ;LIB_DHT.c: 112:     Temp_Dec = DHT_Read(modelo);
  6848   003078  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6849   00307A  EC2B  F017         	call	_DHT_Read
  6850   00307E  6E09               	movwf	DHT_GetTemp@Temp_Dec^(0+1280),c
  6851   003080  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6852   003082  EC2B  F017         	call	_DHT_Read
  6853                           
  6854                           ;LIB_DHT.c: 114:     if(modelo == 0){
  6855   003086  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6856   003088  A4D8               	btfss	status,2,c
  6857   00308A  D004               	goto	l2301
  6858                           
  6859                           ;LIB_DHT.c: 115:         return(valor_dht + Temp_Ent);
  6860   00308C  C50C  F505         	movff	DHT_GetTemp@Temp_Ent,?_DHT_GetTemp
  6861   003090  6A06               	clrf	(?_DHT_GetTemp+1)^(0+1280),c
  6862   003092  0012               	return	
  6863   003094                     l2301:
  6864   003094  040D               	decf	DHT_GetTemp@modelo^(0+1280),w,c
  6865   003096  A4D8               	btfss	status,2,c
  6866   003098  0012               	return	
  6867                           
  6868                           ;LIB_DHT.c: 118:         valor_dht = (Temp_Ent << 8) | Temp_Dec;
  6869   00309A  5009               	movf	DHT_GetTemp@Temp_Dec^(0+1280),w,c
  6870   00309C  C50C  F507         	movff	DHT_GetTemp@Temp_Ent,??_DHT_GetTemp
  6871   0030A0  6A08               	clrf	(??_DHT_GetTemp+1)^(0+1280),c
  6872   0030A2  C507  F508         	movff	??_DHT_GetTemp,??_DHT_GetTemp+1
  6873   0030A6  6A07               	clrf	??_DHT_GetTemp^(0+1280),c
  6874   0030A8  1007               	iorwf	??_DHT_GetTemp^(0+1280),w,c
  6875   0030AA  6E0A               	movwf	DHT_GetTemp@valor_dht^(0+1280),c
  6876   0030AC  5008               	movf	(??_DHT_GetTemp+1)^(0+1280),w,c
  6877   0030AE  6E0B               	movwf	(DHT_GetTemp@valor_dht+1)^(0+1280),c
  6878                           
  6879                           ;LIB_DHT.c: 119:         return(valor_dht);
  6880   0030B0  C50A  F505         	movff	DHT_GetTemp@valor_dht,?_DHT_GetTemp
  6881   0030B4  C50B  F506         	movff	DHT_GetTemp@valor_dht+1,?_DHT_GetTemp+1
  6882   0030B8  0012               	return		;funcret
  6883   0030BA                     __end_of_DHT_GetTemp:
  6884                           	callstack 0
  6885                           
  6886 ;; *************** function _DHT_GetHumid *****************
  6887 ;; Defined at:
  6888 ;;		line 123 in file "LIB_DHT.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  modelo          1    wreg     unsigned char 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;  modelo          1   12[COMRAM] unsigned char 
  6893 ;;  valor_dht       2    9[COMRAM] unsigned int 
  6894 ;;  RH_Ent          1   11[COMRAM] unsigned char 
  6895 ;;  RH_Dec          1    8[COMRAM] unsigned char 
  6896 ;;  Chksum          1    0        unsigned char 
  6897 ;;  Temp_Dec        1    0        unsigned char 
  6898 ;;  Temp_Ent        1    0        unsigned char 
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  2    4[COMRAM] unsigned int 
  6901 ;; Registers used:
  6902 ;;		wreg, status,2, status,0, cstack
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6909 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6910 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6911 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6912 ;;Total ram usage:        9 bytes
  6913 ;; Hardware stack levels used: 1
  6914 ;; Hardware stack levels required when called: 1
  6915 ;; This function calls:
  6916 ;;		_DHT_Check
  6917 ;;		_DHT_Read
  6918 ;;		_DHT_Start
  6919 ;; This function is called by:
  6920 ;;		_main
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text20
  6925   0030BA                     __ptext20:
  6926                           	callstack 0
  6927   0030BA                     _DHT_GetHumid:
  6928                           	callstack 125
  6929                           
  6930                           ;incstack = 0
  6931                           ;DHT_GetHumid@modelo stored from wreg
  6932   0030BA  6E0D               	movwf	DHT_GetHumid@modelo^(0+1280),c
  6933                           
  6934                           ;LIB_DHT.c: 126:     DHT_Start(modelo);
  6935   0030BC  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6936   0030BE  ECBB  F018         	call	_DHT_Start
  6937                           
  6938                           ;LIB_DHT.c: 127:     DHT_Check(modelo);
  6939   0030C2  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6940   0030C4  EC78  F017         	call	_DHT_Check
  6941                           
  6942                           ;LIB_DHT.c: 128:     RH_Ent = DHT_Read(modelo);
  6943   0030C8  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6944   0030CA  EC2B  F017         	call	_DHT_Read
  6945   0030CE  6E0C               	movwf	DHT_GetHumid@RH_Ent^(0+1280),c
  6946                           
  6947                           ;LIB_DHT.c: 129:     RH_Dec = DHT_Read(modelo);
  6948   0030D0  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6949   0030D2  EC2B  F017         	call	_DHT_Read
  6950   0030D6  6E09               	movwf	DHT_GetHumid@RH_Dec^(0+1280),c
  6951   0030D8  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6952   0030DA  EC2B  F017         	call	_DHT_Read
  6953   0030DE  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6954   0030E0  EC2B  F017         	call	_DHT_Read
  6955   0030E4  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6956   0030E6  EC2B  F017         	call	_DHT_Read
  6957                           
  6958                           ;LIB_DHT.c: 133:     if(modelo == 0){
  6959   0030EA  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6960   0030EC  A4D8               	btfss	status,2,c
  6961   0030EE  D004               	goto	l2333
  6962                           
  6963                           ;LIB_DHT.c: 134:         return(valor_dht + RH_Ent);
  6964   0030F0  C50C  F505         	movff	DHT_GetHumid@RH_Ent,?_DHT_GetHumid
  6965   0030F4  6A06               	clrf	(?_DHT_GetHumid+1)^(0+1280),c
  6966   0030F6  0012               	return	
  6967   0030F8                     l2333:
  6968   0030F8  040D               	decf	DHT_GetHumid@modelo^(0+1280),w,c
  6969   0030FA  A4D8               	btfss	status,2,c
  6970   0030FC  0012               	return	
  6971                           
  6972                           ;LIB_DHT.c: 137:         valor_dht = (RH_Ent << 8) | RH_Dec;
  6973   0030FE  5009               	movf	DHT_GetHumid@RH_Dec^(0+1280),w,c
  6974   003100  C50C  F507         	movff	DHT_GetHumid@RH_Ent,??_DHT_GetHumid
  6975   003104  6A08               	clrf	(??_DHT_GetHumid+1)^(0+1280),c
  6976   003106  C507  F508         	movff	??_DHT_GetHumid,??_DHT_GetHumid+1
  6977   00310A  6A07               	clrf	??_DHT_GetHumid^(0+1280),c
  6978   00310C  1007               	iorwf	??_DHT_GetHumid^(0+1280),w,c
  6979   00310E  6E0A               	movwf	DHT_GetHumid@valor_dht^(0+1280),c
  6980   003110  5008               	movf	(??_DHT_GetHumid+1)^(0+1280),w,c
  6981   003112  6E0B               	movwf	(DHT_GetHumid@valor_dht+1)^(0+1280),c
  6982                           
  6983                           ;LIB_DHT.c: 138:         return(valor_dht);
  6984   003114  C50A  F505         	movff	DHT_GetHumid@valor_dht,?_DHT_GetHumid
  6985   003118  C50B  F506         	movff	DHT_GetHumid@valor_dht+1,?_DHT_GetHumid+1
  6986   00311C  0012               	return		;funcret
  6987   00311E                     __end_of_DHT_GetHumid:
  6988                           	callstack 0
  6989                           
  6990 ;; *************** function _DHT_Start *****************
  6991 ;; Defined at:
  6992 ;;		line 3 in file "LIB_DHT.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;  modelo          1    wreg     unsigned char 
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;  modelo          1    1[COMRAM] unsigned char 
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  1    wreg      void 
  6999 ;; Registers used:
  7000 ;;		wreg, status,2, status,0, cstack
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7009 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7010 ;;Total ram usage:        2 bytes
  7011 ;; Hardware stack levels used: 1
  7012 ;; This function calls:
  7013 ;;		Nothing
  7014 ;; This function is called by:
  7015 ;;		_DHT_GetTemp
  7016 ;;		_DHT_GetHumid
  7017 ;; This function uses a non-reentrant model
  7018 ;;
  7019                           
  7020                           	psect	text21
  7021   003176                     __ptext21:
  7022                           	callstack 0
  7023   003176                     _DHT_Start:
  7024                           	callstack 125
  7025                           
  7026                           ;incstack = 0
  7027                           ;DHT_Start@modelo stored from wreg
  7028   003176  6E02               	movwf	DHT_Start@modelo^(0+1280),c
  7029                           
  7030                           ;LIB_DHT.c: 4:     if(modelo == 0){
  7031   003178  5002               	movf	DHT_Start@modelo^(0+1280),w,c
  7032   00317A  A4D8               	btfss	status,2,c
  7033   00317C  D012               	goto	l1827
  7034                           
  7035                           ;LIB_DHT.c: 5:         TRISBbits.TRISB3 = 0;
  7036   00317E  96C7               	bcf	199,3,c	;volatile
  7037                           
  7038                           ;LIB_DHT.c: 6:         ANSELBbits.ANSELB3 = 0;
  7039   003180  0104               	movlb	4	; () banked
  7040   003182  9708               	bcf	8,3,b	;volatile
  7041                           
  7042                           ;LIB_DHT.c: 7:         LATBbits.LATB3 = 0;
  7043   003184  96BF               	bcf	191,3,c	;volatile
  7044                           
  7045                           ; BSR set to: 4
  7046                           ;LIB_DHT.c: 8:         _delay((unsigned long)((18)*(32000000UL/4000.0)));
  7047   003186  0EBC               	movlw	188
  7048   003188  6E01               	movwf	??_DHT_Start^(0+1280),c
  7049   00318A  0E02               	movlw	2
  7050   00318C                     u1717:
  7051   00318C  2EE8               	decfsz	wreg,f,c
  7052   00318E  D7FE               	bra	u1717
  7053   003190  2E01               	decfsz	??_DHT_Start^(0+1280),f,c
  7054   003192  D7FC               	bra	u1717
  7055                           
  7056                           ;LIB_DHT.c: 9:         LATBbits.LATB3 = 1;
  7057   003194  86BF               	bsf	191,3,c	;volatile
  7058                           
  7059                           ;LIB_DHT.c: 10:         _delay((unsigned long)((40)*(32000000UL/4000000.0)));
  7060   003196  0E6A               	movlw	106
  7061   003198                     u1727:
  7062   003198  2EE8               	decfsz	wreg,f,c
  7063   00319A  D7FE               	bra	u1727
  7064   00319C  D000               	nop2	
  7065                           
  7066                           ;LIB_DHT.c: 11:         TRISBbits.TRISB3 = 1;
  7067   00319E  86C7               	bsf	199,3,c	;volatile
  7068                           
  7069                           ;LIB_DHT.c: 12:     }
  7070   0031A0  0012               	return	
  7071   0031A2                     l1827:
  7072   0031A2  0402               	decf	DHT_Start@modelo^(0+1280),w,c
  7073   0031A4  A4D8               	btfss	status,2,c
  7074   0031A6  0012               	return	
  7075                           
  7076                           ;LIB_DHT.c: 14:         TRISBbits.TRISB3 = 0;
  7077   0031A8  96C7               	bcf	199,3,c	;volatile
  7078                           
  7079                           ;LIB_DHT.c: 15:         ANSELBbits.ANSELB3 = 0;
  7080   0031AA  0104               	movlb	4	; () banked
  7081   0031AC  9708               	bcf	8,3,b	;volatile
  7082                           
  7083                           ;LIB_DHT.c: 16:         LATBbits.LATB3 = 0;
  7084   0031AE  96BF               	bcf	191,3,c	;volatile
  7085                           
  7086                           ; BSR set to: 4
  7087                           ;LIB_DHT.c: 17:         _delay((unsigned long)((1)*(32000000UL/4000.0)));
  7088   0031B0  0E0B               	movlw	11
  7089   0031B2  6E01               	movwf	??_DHT_Start^(0+1280),c
  7090   0031B4  0E62               	movlw	98
  7091   0031B6                     u1737:
  7092   0031B6  2EE8               	decfsz	wreg,f,c
  7093   0031B8  D7FE               	bra	u1737
  7094   0031BA  2E01               	decfsz	??_DHT_Start^(0+1280),f,c
  7095   0031BC  D7FC               	bra	u1737
  7096   0031BE  D000               	nop2	
  7097                           
  7098                           ;LIB_DHT.c: 18:         LATBbits.LATB3 = 1;
  7099   0031C0  86BF               	bsf	191,3,c	;volatile
  7100                           
  7101                           ;LIB_DHT.c: 19:         _delay((unsigned long)((40)*(32000000UL/4000000.0)));
  7102   0031C2  0E6A               	movlw	106
  7103   0031C4                     u1747:
  7104   0031C4  2EE8               	decfsz	wreg,f,c
  7105   0031C6  D7FE               	bra	u1747
  7106   0031C8  D000               	nop2	
  7107                           
  7108                           ;LIB_DHT.c: 20:         TRISBbits.TRISB3 = 1;
  7109   0031CA  86C7               	bsf	199,3,c	;volatile
  7110   0031CC  0012               	return		;funcret
  7111   0031CE                     __end_of_DHT_Start:
  7112                           	callstack 0
  7113                           
  7114 ;; *************** function _DHT_Read *****************
  7115 ;; Defined at:
  7116 ;;		line 60 in file "LIB_DHT.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;  modelo          1    wreg     unsigned char 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  modelo          1    0[COMRAM] unsigned char 
  7121 ;;  data            1    3[COMRAM] unsigned char 
  7122 ;;  temp_x          1    2[COMRAM] unsigned char 
  7123 ;;  x               1    1[COMRAM] unsigned char 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      unsigned char 
  7126 ;; Registers used:
  7127 ;;		wreg, status,2, status,0
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7134 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7136 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7137 ;;Total ram usage:        4 bytes
  7138 ;; Hardware stack levels used: 1
  7139 ;; This function calls:
  7140 ;;		Nothing
  7141 ;; This function is called by:
  7142 ;;		_DHT_GetTemp
  7143 ;;		_DHT_GetHumid
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text22
  7148   002E56                     __ptext22:
  7149                           	callstack 0
  7150   002E56                     _DHT_Read:
  7151                           	callstack 125
  7152                           
  7153                           ;incstack = 0
  7154                           ;DHT_Read@modelo stored from wreg
  7155   002E56  6E01               	movwf	DHT_Read@modelo^(0+1280),c
  7156   002E58  6A04               	clrf	DHT_Read@data^(0+1280),c
  7157                           
  7158                           ;LIB_DHT.c: 62:     unsigned char temp_x;;LIB_DHT.c: 63:     if(modelo == 0){
  7159   002E5A  5001               	movf	DHT_Read@modelo^(0+1280),w,c
  7160   002E5C  A4D8               	btfss	status,2,c
  7161   002E5E  D022               	goto	l1933
  7162                           
  7163                           ;LIB_DHT.c: 64:         for(x=0;x<8;x++){
  7164   002E60  6A02               	clrf	DHT_Read@x^(0+1280),c
  7165   002E62                     l245:
  7166                           
  7167                           ;LIB_DHT.c: 65:             temp_x = 0;
  7168   002E62  6A03               	clrf	DHT_Read@temp_x^(0+1280),c
  7169                           
  7170                           ;LIB_DHT.c: 66:             while((PORTBbits.RB3 == 0) && temp_x < 100){
  7171   002E64  D001               	goto	l1909
  7172   002E66                     l1907:
  7173                           
  7174                           ;LIB_DHT.c: 67:                 temp_x++;
  7175   002E66  2A03               	incf	DHT_Read@temp_x^(0+1280),f,c
  7176   002E68                     l1909:
  7177                           
  7178                           ;LIB_DHT.c: 66:             while((PORTBbits.RB3 == 0) && temp_x < 100){
  7179   002E68  B6CF               	btfsc	207,3,c	;volatile
  7180   002E6A  D003               	goto	u820
  7181   002E6C  0E63               	movlw	99
  7182   002E6E  6403               	cpfsgt	DHT_Read@temp_x^(0+1280),c
  7183   002E70  D7FA               	goto	l1907
  7184   002E72                     u820:
  7185                           
  7186                           ;LIB_DHT.c: 69:             _delay((unsigned long)((35)*(32000000UL/4000000.0)));
  7187   002E72  0E5D               	movlw	93
  7188   002E74                     u1757:
  7189   002E74  2EE8               	decfsz	wreg,f,c
  7190   002E76  D7FE               	bra	u1757
  7191   002E78  0000               	nop	
  7192                           
  7193                           ;LIB_DHT.c: 70:             if(PORTBbits.RB3){
  7194   002E7A  A6CF               	btfss	207,3,c	;volatile
  7195   002E7C  D003               	goto	l1919
  7196                           
  7197                           ;LIB_DHT.c: 71:                 data = ((data<<1) | 1);
  7198   002E7E  80D8               	bsf	status,0,c
  7199   002E80  3604               	rlcf	DHT_Read@data^(0+1280),f,c
  7200                           
  7201                           ;LIB_DHT.c: 72:             }
  7202   002E82  D003               	goto	l1921
  7203   002E84                     l1919:
  7204                           
  7205                           ;LIB_DHT.c: 74:                 data = (data<<1);
  7206   002E84  5004               	movf	DHT_Read@data^(0+1280),w,c
  7207   002E86  2404               	addwf	DHT_Read@data^(0+1280),w,c
  7208   002E88  6E04               	movwf	DHT_Read@data^(0+1280),c
  7209   002E8A                     l1921:
  7210                           
  7211                           ;LIB_DHT.c: 76:             temp_x = 0;
  7212   002E8A  6A03               	clrf	DHT_Read@temp_x^(0+1280),c
  7213                           
  7214                           ;LIB_DHT.c: 77:             while((PORTBbits.RB3 == 1) && temp_x < 100){
  7215   002E8C  D001               	goto	l1925
  7216   002E8E                     l1923:
  7217                           
  7218                           ;LIB_DHT.c: 78:                 temp_x++;
  7219   002E8E  2A03               	incf	DHT_Read@temp_x^(0+1280),f,c
  7220   002E90                     l1925:
  7221                           
  7222                           ;LIB_DHT.c: 77:             while((PORTBbits.RB3 == 1) && temp_x < 100){
  7223   002E90  A6CF               	btfss	207,3,c	;volatile
  7224   002E92  D003               	goto	u850
  7225   002E94  0E63               	movlw	99
  7226   002E96  6403               	cpfsgt	DHT_Read@temp_x^(0+1280),c
  7227   002E98  D7FA               	goto	l1923
  7228   002E9A                     u850:
  7229                           
  7230                           ;LIB_DHT.c: 80:         }
  7231   002E9A  2A02               	incf	DHT_Read@x^(0+1280),f,c
  7232   002E9C  0E07               	movlw	7
  7233   002E9E  6402               	cpfsgt	DHT_Read@x^(0+1280),c
  7234   002EA0  D7E0               	goto	l245
  7235   002EA2  D024               	goto	u930
  7236   002EA4                     l1933:
  7237   002EA4  0401               	decf	DHT_Read@modelo^(0+1280),w,c
  7238   002EA6  A4D8               	btfss	status,2,c
  7239   002EA8  D021               	goto	u930
  7240                           
  7241                           ;LIB_DHT.c: 83:         for(x=0;x<8;x++){
  7242   002EAA  6A02               	clrf	DHT_Read@x^(0+1280),c
  7243   002EAC                     l261:
  7244                           
  7245                           ;LIB_DHT.c: 84:             temp_x = 0;
  7246   002EAC  6A03               	clrf	DHT_Read@temp_x^(0+1280),c
  7247                           
  7248                           ;LIB_DHT.c: 85:             while((PORTBbits.RB3 == 0) && temp_x < 100){
  7249   002EAE  D001               	goto	l1943
  7250   002EB0                     l1941:
  7251                           
  7252                           ;LIB_DHT.c: 86:                 temp_x++;
  7253   002EB0  2A03               	incf	DHT_Read@temp_x^(0+1280),f,c
  7254   002EB2                     l1943:
  7255                           
  7256                           ;LIB_DHT.c: 85:             while((PORTBbits.RB3 == 0) && temp_x < 100){
  7257   002EB2  B6CF               	btfsc	207,3,c	;volatile
  7258   002EB4  D003               	goto	u890
  7259   002EB6  0E63               	movlw	99
  7260   002EB8  6403               	cpfsgt	DHT_Read@temp_x^(0+1280),c
  7261   002EBA  D7FA               	goto	l1941
  7262   002EBC                     u890:
  7263                           
  7264                           ;LIB_DHT.c: 88:             _delay((unsigned long)((35)*(32000000UL/4000000.0)));
  7265   002EBC  0E5D               	movlw	93
  7266   002EBE                     u1767:
  7267   002EBE  2EE8               	decfsz	wreg,f,c
  7268   002EC0  D7FE               	bra	u1767
  7269   002EC2  0000               	nop	
  7270                           
  7271                           ;LIB_DHT.c: 89:             if(PORTBbits.RB3){
  7272   002EC4  A6CF               	btfss	207,3,c	;volatile
  7273   002EC6  D003               	goto	l1953
  7274                           
  7275                           ;LIB_DHT.c: 90:                 data = ((data<<1) | 1);
  7276   002EC8  80D8               	bsf	status,0,c
  7277   002ECA  3604               	rlcf	DHT_Read@data^(0+1280),f,c
  7278                           
  7279                           ;LIB_DHT.c: 91:             }
  7280   002ECC  D003               	goto	l1955
  7281   002ECE                     l1953:
  7282                           
  7283                           ;LIB_DHT.c: 93:                 data = (data<<1);
  7284   002ECE  5004               	movf	DHT_Read@data^(0+1280),w,c
  7285   002ED0  2404               	addwf	DHT_Read@data^(0+1280),w,c
  7286   002ED2  6E04               	movwf	DHT_Read@data^(0+1280),c
  7287   002ED4                     l1955:
  7288                           
  7289                           ;LIB_DHT.c: 95:             temp_x = 0;
  7290   002ED4  6A03               	clrf	DHT_Read@temp_x^(0+1280),c
  7291                           
  7292                           ;LIB_DHT.c: 96:             while((PORTBbits.RB3 == 1) && temp_x < 100){
  7293   002ED6  D001               	goto	l1959
  7294   002ED8                     l1957:
  7295                           
  7296                           ;LIB_DHT.c: 97:                 temp_x++;
  7297   002ED8  2A03               	incf	DHT_Read@temp_x^(0+1280),f,c
  7298   002EDA                     l1959:
  7299                           
  7300                           ;LIB_DHT.c: 96:             while((PORTBbits.RB3 == 1) && temp_x < 100){
  7301   002EDA  A6CF               	btfss	207,3,c	;volatile
  7302   002EDC  D003               	goto	u920
  7303   002EDE  0E63               	movlw	99
  7304   002EE0  6403               	cpfsgt	DHT_Read@temp_x^(0+1280),c
  7305   002EE2  D7FA               	goto	l1957
  7306   002EE4                     u920:
  7307                           
  7308                           ;LIB_DHT.c: 99:         }
  7309   002EE4  2A02               	incf	DHT_Read@x^(0+1280),f,c
  7310   002EE6  0E07               	movlw	7
  7311   002EE8  6402               	cpfsgt	DHT_Read@x^(0+1280),c
  7312   002EEA  D7E0               	goto	l261
  7313   002EEC                     u930:
  7314                           
  7315                           ;LIB_DHT.c: 101:     return data;
  7316   002EEC  5004               	movf	DHT_Read@data^(0+1280),w,c
  7317   002EEE  0012               	return		;funcret
  7318   002EF0                     __end_of_DHT_Read:
  7319                           	callstack 0
  7320                           
  7321 ;; *************** function _DHT_Check *****************
  7322 ;; Defined at:
  7323 ;;		line 24 in file "LIB_DHT.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  modelo          1    wreg     unsigned char 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  modelo          1    0[COMRAM] unsigned char 
  7328 ;;  temp_x          1    1[COMRAM] unsigned char 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1    wreg      void 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7342 ;;Total ram usage:        2 bytes
  7343 ;; Hardware stack levels used: 1
  7344 ;; This function calls:
  7345 ;;		Nothing
  7346 ;; This function is called by:
  7347 ;;		_DHT_GetTemp
  7348 ;;		_DHT_GetHumid
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           	psect	text23
  7353   002EF0                     __ptext23:
  7354                           	callstack 0
  7355   002EF0                     _DHT_Check:
  7356                           	callstack 125
  7357                           
  7358                           ;incstack = 0
  7359                           ;DHT_Check@modelo stored from wreg
  7360   002EF0  6E01               	movwf	DHT_Check@modelo^(0+1280),c
  7361                           
  7362                           ;LIB_DHT.c: 25:     unsigned char temp_x;;LIB_DHT.c: 26:     if(modelo == 0){
  7363   002EF2  5001               	movf	DHT_Check@modelo^(0+1280),w,c
  7364   002EF4  A4D8               	btfss	status,2,c
  7365   002EF6  D021               	goto	l1867
  7366                           
  7367                           ;LIB_DHT.c: 27:         temp_x = 0;
  7368   002EF8  6A02               	clrf	DHT_Check@temp_x^(0+1280),c
  7369                           
  7370                           ;LIB_DHT.c: 28:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7371   002EFA  D001               	goto	l1843
  7372   002EFC                     l1841:
  7373                           
  7374                           ;LIB_DHT.c: 29:             temp_x++;
  7375   002EFC  2A02               	incf	DHT_Check@temp_x^(0+1280),f,c
  7376   002EFE                     l1843:
  7377                           
  7378                           ;LIB_DHT.c: 28:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7379   002EFE  A6CF               	btfss	207,3,c	;volatile
  7380   002F00  D003               	goto	u680
  7381   002F02  0E63               	movlw	99
  7382   002F04  6402               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7383   002F06  D7FA               	goto	l1841
  7384   002F08                     u680:
  7385                           
  7386                           ;LIB_DHT.c: 31:         _delay((unsigned long)((80)*(32000000UL/4000000.0)));
  7387   002F08  0ED5               	movlw	213
  7388   002F0A                     u1777:
  7389   002F0A  2EE8               	decfsz	wreg,f,c
  7390   002F0C  D7FE               	bra	u1777
  7391   002F0E  0000               	nop	
  7392                           
  7393                           ;LIB_DHT.c: 32:         temp_x = 0;
  7394   002F10  6A02               	clrf	DHT_Check@temp_x^(0+1280),c
  7395                           
  7396                           ;LIB_DHT.c: 33:         while((PORTBbits.RB3 == 0) && temp_x < 100){
  7397   002F12  D001               	goto	l1853
  7398   002F14                     l1851:
  7399                           
  7400                           ;LIB_DHT.c: 34:             temp_x++;
  7401   002F14  2A02               	incf	DHT_Check@temp_x^(0+1280),f,c
  7402   002F16                     l1853:
  7403                           
  7404                           ;LIB_DHT.c: 33:         while((PORTBbits.RB3 == 0) && temp_x < 100){
  7405   002F16  B6CF               	btfsc	207,3,c	;volatile
  7406   002F18  D003               	goto	u700
  7407   002F1A  0E63               	movlw	99
  7408   002F1C  6402               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7409   002F1E  D7FA               	goto	l1851
  7410   002F20                     u700:
  7411                           
  7412                           ;LIB_DHT.c: 36:         _delay((unsigned long)((80)*(32000000UL/4000000.0)));
  7413   002F20  0ED5               	movlw	213
  7414   002F22                     u1787:
  7415   002F22  2EE8               	decfsz	wreg,f,c
  7416   002F24  D7FE               	bra	u1787
  7417   002F26  0000               	nop	
  7418                           
  7419                           ;LIB_DHT.c: 37:         temp_x = 0;
  7420   002F28  6A02               	clrf	DHT_Check@temp_x^(0+1280),c
  7421                           
  7422                           ;LIB_DHT.c: 38:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7423   002F2A  D001               	goto	l1863
  7424   002F2C                     l1861:
  7425                           
  7426                           ;LIB_DHT.c: 39:             temp_x++;
  7427   002F2C  2A02               	incf	DHT_Check@temp_x^(0+1280),f,c
  7428   002F2E                     l1863:
  7429                           
  7430                           ;LIB_DHT.c: 38:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7431   002F2E  A6CF               	btfss	207,3,c	;volatile
  7432   002F30  0012               	return	
  7433   002F32  0E63               	movlw	99
  7434   002F34  6402               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7435   002F36  D7FA               	goto	l1861
  7436   002F38  0012               	return	
  7437   002F3A                     l1867:
  7438   002F3A  0401               	decf	DHT_Check@modelo^(0+1280),w,c
  7439   002F3C  A4D8               	btfss	status,2,c
  7440   002F3E  0012               	return	
  7441                           
  7442                           ;LIB_DHT.c: 43:         temp_x = 0;
  7443   002F40  6A02               	clrf	DHT_Check@temp_x^(0+1280),c
  7444                           
  7445                           ;LIB_DHT.c: 44:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7446   002F42  D001               	goto	l1873
  7447   002F44                     l1871:
  7448                           
  7449                           ;LIB_DHT.c: 45:             temp_x++;
  7450   002F44  2A02               	incf	DHT_Check@temp_x^(0+1280),f,c
  7451   002F46                     l1873:
  7452                           
  7453                           ;LIB_DHT.c: 44:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7454   002F46  A6CF               	btfss	207,3,c	;volatile
  7455   002F48  D003               	goto	u750
  7456   002F4A  0E63               	movlw	99
  7457   002F4C  6402               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7458   002F4E  D7FA               	goto	l1871
  7459   002F50                     u750:
  7460                           
  7461                           ;LIB_DHT.c: 47:         _delay((unsigned long)((80)*(32000000UL/4000000.0)));
  7462   002F50  0ED5               	movlw	213
  7463   002F52                     u1797:
  7464   002F52  2EE8               	decfsz	wreg,f,c
  7465   002F54  D7FE               	bra	u1797
  7466   002F56  0000               	nop	
  7467                           
  7468                           ;LIB_DHT.c: 48:         temp_x = 0;
  7469   002F58  6A02               	clrf	DHT_Check@temp_x^(0+1280),c
  7470                           
  7471                           ;LIB_DHT.c: 49:         while((PORTBbits.RB3 == 0) && temp_x < 100){
  7472   002F5A  D001               	goto	l1883
  7473   002F5C                     l1881:
  7474                           
  7475                           ;LIB_DHT.c: 50:             temp_x++;
  7476   002F5C  2A02               	incf	DHT_Check@temp_x^(0+1280),f,c
  7477   002F5E                     l1883:
  7478                           
  7479                           ;LIB_DHT.c: 49:         while((PORTBbits.RB3 == 0) && temp_x < 100){
  7480   002F5E  B6CF               	btfsc	207,3,c	;volatile
  7481   002F60  D003               	goto	u770
  7482   002F62  0E63               	movlw	99
  7483   002F64  6402               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7484   002F66  D7FA               	goto	l1881
  7485   002F68                     u770:
  7486                           
  7487                           ;LIB_DHT.c: 52:         _delay((unsigned long)((80)*(32000000UL/4000000.0)));
  7488   002F68  0ED5               	movlw	213
  7489   002F6A                     u1807:
  7490   002F6A  2EE8               	decfsz	wreg,f,c
  7491   002F6C  D7FE               	bra	u1807
  7492   002F6E  0000               	nop	
  7493                           
  7494                           ;LIB_DHT.c: 53:         temp_x = 0;
  7495   002F70  6A02               	clrf	DHT_Check@temp_x^(0+1280),c
  7496                           
  7497                           ;LIB_DHT.c: 54:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7498   002F72  D001               	goto	l1893
  7499   002F74                     l1891:
  7500                           
  7501                           ;LIB_DHT.c: 55:             temp_x++;
  7502   002F74  2A02               	incf	DHT_Check@temp_x^(0+1280),f,c
  7503   002F76                     l1893:
  7504                           
  7505                           ;LIB_DHT.c: 54:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7506   002F76  A6CF               	btfss	207,3,c	;volatile
  7507   002F78  0012               	return	
  7508   002F7A  0E63               	movlw	99
  7509   002F7C  6402               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7510   002F7E  D7FA               	goto	l1891
  7511   002F80  0012               	return	
  7512   002F82                     __end_of_DHT_Check:
  7513                           	callstack 0
  7514                           
  7515                           	psect	rparam
  7516   000001                     ___rparam_used  equ	1
  7517   000000                     ___param_bank   equ	0
  7518   000000                     __Lparam        equ	__Lrparam
  7519   000000                     __Hparam        equ	__Hrparam
  7520                           
  7521                           	psect	config
  7522                           
  7523                           ;Config register CONFIG1 @ 0x300000
  7524                           ;	External Oscillator Selection
  7525                           ;	FEXTOSC = OFF, Oscillator not enabled
  7526                           ;	Reset Oscillator Selection
  7527                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  7528   300000                     	org	3145728
  7529   300000  FC                 	db	252
  7530                           
  7531                           ;Config register CONFIG2 @ 0x300001
  7532                           ;	Clock out Enable bit
  7533                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  7534                           ;	PRLOCKED One-Way Set Enable bit
  7535                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  7536                           ;	Clock Switch Enable bit
  7537                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7538                           ;	Fail-Safe Clock Monitor Enable bit
  7539                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7540   300001                     	org	3145729
  7541   300001  FF                 	db	255
  7542                           
  7543                           ;Config register CONFIG3 @ 0x300002
  7544                           ;	MCLR Enable bit
  7545                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  7546                           ;	Power-up timer selection bits
  7547                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  7548                           ;	Multi-vector enable bit
  7549                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  7550                           ;	IVTLOCK bit One-way set enable bit
  7551                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  7552                           ;	Low Power BOR Enable bit
  7553                           ;	LPBOREN = OFF, Low-Power BOR disabled
  7554                           ;	Brown-out Reset Enable bits
  7555                           ;	BOREN = OFF, Brown-out Reset disabled
  7556   300002                     	org	3145730
  7557   300002  3D                 	db	61
  7558                           
  7559                           ;Config register CONFIG4 @ 0x300003
  7560                           ;	Brown-out Reset Voltage Selection bits
  7561                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  7562                           ;	ZCD Disable bit
  7563                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  7564                           ;	PPSLOCK bit One-Way Set Enable bit
  7565                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  7566                           ;	Stack Full/Underflow Reset Enable bit
  7567                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7568                           ;	Low Voltage Programming Enable bit
  7569                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  7570                           ;	Extended Instruction Set Enable bit
  7571                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  7572   300003                     	org	3145731
  7573   300003  DF                 	db	223
  7574                           
  7575                           ;Config register CONFIG5 @ 0x300004
  7576                           ;	WDT Period selection bits
  7577                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7578                           ;	WDT operating mode
  7579                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  7580   300004                     	org	3145732
  7581   300004  9F                 	db	159
  7582                           
  7583                           ;Config register CONFIG6 @ 0x300005
  7584                           ;	WDT Window Select bits
  7585                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7586                           ;	WDT input clock selector
  7587                           ;	WDTCCS = SC, Software Control
  7588   300005                     	org	3145733
  7589   300005  FF                 	db	255
  7590                           
  7591                           ;Config register CONFIG7 @ 0x300006
  7592                           ;	Boot Block Size selection bits
  7593                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  7594                           ;	Boot Block enable bit
  7595                           ;	BBEN = OFF, Boot block disabled
  7596                           ;	Storage Area Flash enable bit
  7597                           ;	SAFEN = OFF, SAF disabled
  7598                           ;	Background Debugger
  7599                           ;	DEBUG = OFF, Background Debugger disabled
  7600   300006                     	org	3145734
  7601   300006  FF                 	db	255
  7602                           
  7603                           ;Config register CONFIG8 @ 0x300007
  7604                           ;	Boot Block Write Protection bit
  7605                           ;	WRTB = OFF, Boot Block not Write protected
  7606                           ;	Configuration Register Write Protection bit
  7607                           ;	WRTC = OFF, Configuration registers not Write protected
  7608                           ;	Data EEPROM Write Protection bit
  7609                           ;	WRTD = OFF, Data EEPROM not Write protected
  7610                           ;	SAF Write protection bit
  7611                           ;	WRTSAF = OFF, SAF not Write Protected
  7612                           ;	Application Block write protection bit
  7613                           ;	WRTAPP = OFF, Application Block not write protected
  7614   300007                     	org	3145735
  7615   300007  FF                 	db	255
  7616                           
  7617                           ;Config register CONFIG10 @ 0x300009
  7618                           ;	PFM and Data EEPROM Code Protection bit
  7619                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  7620   300009                     	org	3145737
  7621   300009  FF                 	db	255
  7622                           tosu	equ	0x4FF
  7623                           tosh	equ	0x4FE
  7624                           tosl	equ	0x4FD
  7625                           stkptr	equ	0x4FC
  7626                           pclatu	equ	0x4FB
  7627                           pclath	equ	0x4FA
  7628                           pcl	equ	0x4F9
  7629                           tblptru	equ	0x4F8
  7630                           tblptrh	equ	0x4F7
  7631                           tblptrl	equ	0x4F6
  7632                           tablat	equ	0x4F5
  7633                           prodh	equ	0x4F4
  7634                           prodl	equ	0x4F3
  7635                           indf0	equ	0x4EF
  7636                           postinc0	equ	0x4EE
  7637                           postdec0	equ	0x4ED
  7638                           preinc0	equ	0x4EC
  7639                           plusw0	equ	0x4EB
  7640                           fsr0h	equ	0x4EA
  7641                           fsr0l	equ	0x4E9
  7642                           wreg	equ	0x4E8
  7643                           indf1	equ	0x4E7
  7644                           postinc1	equ	0x4E6
  7645                           postdec1	equ	0x4E5
  7646                           preinc1	equ	0x4E4
  7647                           plusw1	equ	0x4E3
  7648                           fsr1h	equ	0x4E2
  7649                           fsr1l	equ	0x4E1
  7650                           bsr	equ	0x4E0
  7651                           indf2	equ	0x4DF
  7652                           postinc2	equ	0x4DE
  7653                           postdec2	equ	0x4DD
  7654                           preinc2	equ	0x4DC
  7655                           plusw2	equ	0x4DB
  7656                           fsr2h	equ	0x4DA
  7657                           fsr2l	equ	0x4D9
  7658                           status	equ	0x4D8

Data Sizes:
    Strings     46
    Constant    0
    Data        1
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      30
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    I2C_ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[12]), STR_2(CODE[13]), STR_3(CODE[10]), STR_4(CODE[11]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[12]), STR_2(CODE[13]), STR_3(CODE[10]), STR_4(CODE[11]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[12]), STR_2(CODE[13]), STR_3(CODE[10]), STR_4(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_I2C_LCD_ESCRIBE_VAR_INT
    _I2C_POS_CURSOR->_I2C_ENVIA_LCD_CMD
    _I2C_LCD_INIT->_I2C_CURSOR_ONOFF
    _I2C_CURSOR_ONOFF->_I2C_ENVIA_LCD_CMD
    _I2C_CURSOR_HOME->_I2C_ENVIA_LCD_CMD
    _I2C_BORRAR_LCD->_I2C_ENVIA_LCD_CMD
    _I2C_ENVIA_LCD_CMD->_I2C1_WRITESINGLEBYTE
    _I2C_LCD_ESCRIBE_VAR_INT->___lwdiv
    ___lwdiv->___lwmod
    _I2C_LCD_CHAR_GRADO->_I2C_ENVIA_LCD_DATA
    _I2C_ESCRIBE_MENSAJE2->_I2C_ENVIA_LCD_DATA
    _I2C_ENVIA_LCD_DATA->_I2C1_WRITESINGLEBYTE
    _DHT_GetTemp->_DHT_Read
    _DHT_GetHumid->_DHT_Read

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6946
                                             21 COMRAM     4     4      0
                       _DHT_GetHumid
                        _DHT_GetTemp
                     _I2C_BORRAR_LCD
                 _I2C_ENVIA_LCD_DATA
               _I2C_ESCRIBE_MENSAJE2
                 _I2C_LCD_CHAR_GRADO
            _I2C_LCD_ESCRIBE_VAR_INT
                       _I2C_LCD_INIT
                     _I2C_POS_CURSOR
                   _WS2812_DATA_SEND
                        _WS2812_INIT
                            ___lwdiv
                          _configuro
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WS2812_INIT                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WS2812_DATA_SEND                                     3     1      2      81
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _I2C_POS_CURSOR                                       3     2      1     459
                                              6 COMRAM     3     2      1
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_INIT                                         2     2      0     914
                                              7 COMRAM     2     2      0
                          _I2C1_INIT
               _I2C1_WRITESINGLEBYTE
                     _I2C_BORRAR_LCD
                    _I2C_CURSOR_HOME
                   _I2C_CURSOR_ONOFF
 ---------------------------------------------------------------------------------
 (2) _I2C_CURSOR_ONOFF                                     1     1      0     309
                                              6 COMRAM     1     1      0
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_CURSOR_HOME                                      0     0      0     251
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_BORRAR_LCD                                       0     0      0     251
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_ENVIA_LCD_CMD                                    4     4      0     251
                                              2 COMRAM     4     4      0
               _I2C1_WRITESINGLEBYTE
 ---------------------------------------------------------------------------------
 (2) _I2C1_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_ESCRIBE_VAR_INT                              9     5      4    2057
                                             12 COMRAM     9     5      4
                 _I2C_ENVIA_LCD_DATA
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     167
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     176
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_CHAR_GRADO                                   0     0      0     251
                 _I2C_ENVIA_LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _I2C_ESCRIBE_MENSAJE2                                 4     3      1     460
                                              6 COMRAM     4     3      1
                 _I2C_ENVIA_LCD_DATA
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _I2C_ENVIA_LCD_DATA                                   4     4      0     251
                                              2 COMRAM     4     4      0
               _I2C1_WRITESINGLEBYTE
 ---------------------------------------------------------------------------------
 (3) _I2C1_WRITESINGLEBYTE                                 2     1      1     103
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _DHT_GetTemp                                         12    10      2    1000
                                              4 COMRAM     9     7      2
                          _DHT_Check
                           _DHT_Read
                          _DHT_Start
 ---------------------------------------------------------------------------------
 (1) _DHT_GetHumid                                        12    10      2    1000
                                              4 COMRAM     9     7      2
                          _DHT_Check
                           _DHT_Read
                          _DHT_Start
 ---------------------------------------------------------------------------------
 (2) _DHT_Start                                            2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT_Read                                             4     4      0     362
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _DHT_Check                                            2     2      0     202
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT_GetHumid
     _DHT_Check
     _DHT_Read
     _DHT_Start
   _DHT_GetTemp
     _DHT_Check
     _DHT_Read
     _DHT_Start
   _I2C_BORRAR_LCD
     _I2C_ENVIA_LCD_CMD
       _I2C1_WRITESINGLEBYTE
   _I2C_ENVIA_LCD_DATA
     _I2C1_WRITESINGLEBYTE
   _I2C_ESCRIBE_MENSAJE2
     _I2C_ENVIA_LCD_DATA
     _strlen
   _I2C_LCD_CHAR_GRADO
     _I2C_ENVIA_LCD_DATA
   _I2C_LCD_ESCRIBE_VAR_INT
     _I2C_ENVIA_LCD_DATA
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _I2C_LCD_INIT
     _I2C1_INIT
     _I2C1_WRITESINGLEBYTE
     _I2C_BORRAR_LCD
     _I2C_CURSOR_HOME
       _I2C_ENVIA_LCD_CMD
     _I2C_CURSOR_ONOFF
       _I2C_ENVIA_LCD_CMD
   _I2C_POS_CURSOR
     _I2C_ENVIA_LCD_CMD
   _WS2812_DATA_SEND
   _WS2812_INIT
   ___lwdiv
   _configuro

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRh        1065      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITBIGSFRll        129      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     25      30     31.6%
BITBIGSFRlh         84      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      30      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jun 23 16:41:15 2025

                              l51 337A                                l66 3164              ??_I2C_LCD_CHAR_GRADO 0507  
                             l261 2EAC                               l245 2E62                               l390 33AE  
                             l393 33B8                               l396 33C0                               l903 32F8  
                             l893 326C                               u700 2F20                               u820 2E72  
                             u580 337E                               u750 2F50                               u590 3382  
                             u680 2F08                               u920 2EE4                               u770 2F68  
                             u930 2EEC                               u850 2E9A                               u950 3246  
                             u890 2EBC                               u980 32DA                      DHT_Read@data 0504  
                  ??_DHT_GetHumid 0507                               wreg 04E8                      _I2C_LCD_ADDR 051E  
                    _I2C_LCD_INIT 2630                 _I2C_ENVIA_LCD_CMD 2FEE                              l2005 32EE  
                            l2021 3154                              l2013 3130                              l2033 3312  
                            l2017 3142                              l2301 3094                              l2037 332E  
                            l2231 2A5C                              l2225 2A3A                              l2401 2E2E  
                            l2251 2B5C                              l2243 2AD4                              l2235 2A7A  
                            l2227 2A44                              l2403 2E3C                              l2333 30F8  
                            l2261 2BFA                              l2245 2AEA                              l2237 2A94  
                            l2263 2C2A                              l2255 2B84                              l2247 2B0C  
                            l2239 2AB4                              l2265 2C5A                              l2257 2BA0  
                            l2249 2B34                              l2273 2CAC                              l2259 2BCA  
                            l2269 2C8A                              l2373 2D36                              l1807 333E  
                            l1841 2EFC                              l1921 2E8A                              l1809 3340  
                            l1851 2F14                              l1843 2EFE                              l1923 2E8E  
                            l1907 2E66                              l1827 31A2                              l1861 2F2C  
                            l1853 2F16                              l1941 2EB0                              l1925 2E90  
                            l1909 2E68                              l1933 2EA4                              l1871 2F44  
                            l1863 2F2E                              l1943 2EB2                              l1919 2E84  
                            l1783 33F0                              l1881 2F5C                              l1873 2F46  
                            l1953 2ECE                              l1891 2F74                              l1883 2F5E  
                            l1867 2F3A                              l1955 2ED4                              l1893 2F76  
                            l1957 2ED8                              l1959 2EDA                              l1977 323A  
                            l1979 3242                              l1989 3262                              l1997 32CE  
                            l1999 32D6                              STR_1 260E                              STR_2 2601  
                            STR_3 2625                              STR_4 261A                              u1140 2E1E  
                            u1207 2658                              u1217 267C                              u1307 2730  
                            u1227 268E                              u1317 2742                              u1237 26A4  
                            u1157 2D16                              u1407 27DE                              u1327 2754  
                            u1247 26B8                              u1167 2D9A                              u1417 27F0  
                            u1337 2764                              u1257 26CA                              u1177 2E46  
                            u1507 2890                              u1427 2800                              u1347 2776  
                            u1267 26E0                              u1187 316A                              u1517 28A6  
                            u1437 2812                              u1357 2788                              u1277 26F4  
                            u1197 263A                              u1607 2942                              u1527 28B8  
                            u1447 2824                              u1367 2798                              u1287 2706  
                            u1617 2954                              u1537 28CA                              u1457 2834  
                            u1377 27AA                              u1297 271C                              _T2PR 0323  
                            u1707 2FE6                              u1627 296A                              u1547 28DA  
                            u1467 2846                              u1387 27BC                              u1717 318C  
                            u1637 3016                              u1557 28EC                              u1477 2858  
                            u1397 27CC                              u1807 2F6A                              u1727 3198  
                            u1647 3028                              u1567 28FE                              u1487 2868  
                            u1737 31B6                              u1657 303C                              u1577 290E  
                            u1497 287A                              u1747 31C4                              u1667 304E  
                            u1587 2920                              u1757 2E74                              u1677 2FAA  
                            u1597 2932                              u1767 2EBE                              u1687 2FBE  
                            u1777 2F0A                              u1697 2FD2                              u1787 2F22  
                            u1797 2F52                ?_I2C_ENVIA_LCD_CMD 0501          I2C_ENVIA_LCD_CMD@command 0504  
                            _main 2CCE                DHT_GetHumid@RH_Dec 0509                DHT_GetHumid@RH_Ent 050C  
               ??_I2C_CURSOR_HOME 0507                              start FFFC               ??_I2C_ENVIA_LCD_CMD 0503  
                  _SPI1STATUSbits 0087                      ___param_bank 0000                  __end_of_DHT_Read 2EF0  
              _I2C_ENVIA_LCD_DATA 2F82                 __end_of_I2C1_INIT 32C0                DHT_GetHumid@modelo 050D  
                           ?_main 0501                             _T2CON 0324                   __end_of___lwdiv 3276  
                 __end_of___lwmod 3302                             _OSCEN 00B3               ?_I2C_ENVIA_LCD_DATA 0501  
       __end_of_I2C_ENVIA_LCD_CMD 3056                 DHT_GetTemp@modelo 050D                    _I2C_BORRAR_LCD 3406  
                    ?_WS2812_INIT 0501                 ?_I2C_CURSOR_ONOFF 0501                             tablat 04F5  
                  DHT_Read@modelo 0501                             status 04D8                ??_I2C_CURSOR_ONOFF 0507  
                  DHT_Read@temp_x 0503            I2C_CURSOR_ONOFF@estado 0507              ??_I2C_ENVIA_LCD_DATA 0503  
                 __initialization 3388                      __end_of_main 2E56                 __end_of_DHT_Check 2F82  
         I2C_ESCRIBE_MENSAJE2@tam 0509                            ??_main 0516                 __end_of_DHT_Start 31CE  
                   __activetblptr 0003          ?_I2C_LCD_ESCRIBE_VAR_INT 050D               WS2812_DATA_SEND@red 0501  
          __end_of_I2C_BORRAR_LCD 340E                 _temperatura_dht11 051C                            _CCPR1H 0341  
                          _CCPR1L 0340                            _RC3PPS 0214                            _RC4PPS 0215  
                          _RF2PPS 022B                            _OSCFRQ 00B1              __end_of_DHT_GetHumid 311E  
   I2C1_WRITESINGLEBYTE@direccion 0502                         ??___lwdiv 050A                         ??___lwmod 0505  
                          isa$std 0001                            _strlen 3338                      __pdataCOMRAM 051E  
        __end_of_WS2812_DATA_SEND 33C6                      __mediumconst 2600                            tblptrh 04F7  
                          tblptrl 04F6                            tblptru 04F8                   ?_I2C_BORRAR_LCD 0501  
                  _I2C_POS_CURSOR 311E                         ?_DHT_Read 0501                        __accesstop 0560  
         __end_of__initialization 33A2                         DHT_Read@x 0502                     ___rparam_used 0001  
                  __pcstackCOMRAM 0501      I2C_LCD_ESCRIBE_VAR_INT@punto 0510   __end_of_I2C_LCD_ESCRIBE_VAR_INT 2CCE  
           I2C_ESCRIBE_MENSAJE2@i 050A                   _I2C_CURSOR_HOME 33FE            __end_of_I2C_POS_CURSOR 3176  
                      ??_DHT_Read 0501              WS2812_DATA_SEND@blue 0502                           _I2C1CNT 028D  
                         _I2C1TXB 028C                           _CCP1CON 0342       I2C_ENVIA_LCD_DATA@lownibble 0506  
                         ?_strlen 0501                           _CLCnCON 00D6                           _CLCnPOL 00D7  
                       _I2C1_INIT 3276                           _OSCCON1 00AD      __end_of_I2C_ESCRIBE_MENSAJE2 3338  
                         _SPI1CLK 008C                           _SPI1TXB 0081                   ?_I2C_POS_CURSOR 0507  
             DHT_GetTemp@Temp_Dec 0509               DHT_GetTemp@Temp_Ent 050C        I2C_ESCRIBE_MENSAJE2@cadena 0507  
                         __Hparam 0000                           __Lparam 0000                         _CLCSELECT 00D5  
                   _humedad_dht11 051A                 __end_of_configuro 33E2                           ___lwdiv 3224  
                         ___lwmod 32C0                      __psmallconst 2600                           __pcinit 3388  
                         __ramtop 2600                           __ptext0 2CCE                           __ptext1 33C6  
                         __ptext2 31CE                           __ptext3 33A8                           __ptext4 311E  
                         __ptext5 2630                           __ptext6 33E2                           __ptext7 33FE  
                         __ptext8 3406                           __ptext9 2FEE           __end_of_I2C_CURSOR_HOME 3406  
                     _I2C1CLKbits 029C                        ?_I2C1_INIT 0501        I2C_ENVIA_LCD_CMD@lownibble 0506  
                       _DHT_Check 2EF0                      _DHT_GetHumid 30BA                         _DHT_Start 3176  
                     _I2C1PIRbits 029A              end_of_initialization 33A2  I2C_LCD_ESCRIBE_VAR_INT@n_digitos 050F  
              I2C_POS_CURSOR@fila 0509                           strlen@a 0503                           strlen@s 0501  
                       _PORTBbits 04CF                  ??_I2C_BORRAR_LCD 0507                        ?_DHT_Check 0501  
               ?_WS2812_DATA_SEND 0501                         _TRISBbits 04C7                         _TRISCbits 04C8  
                       _TRISFbits 04CB                        ?_DHT_Start 0501                ??_WS2812_DATA_SEND 0503  
                   ??_DHT_GetTemp 0507              _I2C_ESCRIBE_MENSAJE2 3302     I2C_LCD_ESCRIBE_VAR_INT@decena 0514  
   I2C_LCD_ESCRIBE_VAR_INT@millar 0512                     __pidataCOMRAM 3416     I2C_LCD_ESCRIBE_VAR_INT@numero 050D  
   I2C_LCD_ESCRIBE_VAR_INT@unidad 0515                  ?_I2C_CURSOR_HOME 0501                       ??_I2C1_INIT 0501  
                  __end_of_strlen 3364               start_initialization 3388                     ?_I2C_LCD_INIT 0501  
    __end_of_I2C1_WRITESINGLEBYTE 3388               __end_of_DHT_GetTemp 30BA             ?_I2C_ESCRIBE_MENSAJE2 0507  
    I2C_ENVIA_LCD_DATA@highnibble 0505                  _I2C_CURSOR_ONOFF 33E2                          ??_strlen 0503  
                ??_I2C_POS_CURSOR 0508                    ??_I2C_LCD_INIT 0508                       ??_DHT_Check 0501  
                     __pbssCOMRAM 051A                       ??_DHT_Start 0501                     ??_WS2812_INIT 0501  
                 DHT_Start@modelo 0502           _I2C_LCD_ESCRIBE_VAR_INT 2984             WS2812_DATA_SEND@green 0503  
                       _main$1549 0518                  ___lwdiv@dividend 0506    I2C_LCD_ESCRIBE_VAR_INT@centena 0513  
      __end_of_I2C_LCD_CHAR_GRADO 3416                          _I2C1ADB1 028F                          ?___lwdiv 0506  
                        ?___lwmod 0501             DHT_GetHumid@valor_dht 050A                         _configuro 33C6  
                     __smallconst 2600                  ___lwdiv@quotient 050A                          _T2CLKCON 0326  
                        _CLCnGLS0 00DC                          _CLCnGLS1 00DD                          _CLCnGLS2 00DE  
                        _CLCnGLS3 00DF                          _CLCnSEL0 00D8                          _CLCnSEL1 00D9  
                        _CLCnSEL2 00DA                          _DHT_Read 2E56                       _DHT_GetTemp 3056  
                        _LATBbits 04BF               __end_of_WS2812_INIT 3224            ??_I2C_ESCRIBE_MENSAJE2 0508  
                   _I2C1STAT1bits 0299                          _SPI1CON0 0084                          _SPI1CON1 0085  
                        _SPI1CON2 0086              _I2C1_WRITESINGLEBYTE 3364            I2C_ENVIA_LCD_DATA@data 0504  
                      ?_configuro 0501       I2C_ENVIA_LCD_CMD@highnibble 0505         ??_I2C_LCD_ESCRIBE_VAR_INT 0511  
      __end_of_I2C_ENVIA_LCD_DATA 2FEE             I2C_POS_CURSOR@columna 0507                          __Hrparam 0000  
            __end_of_I2C_LCD_INIT 2984                          __Lrparam 0000             ?_I2C1_WRITESINGLEBYTE 0501  
                      _ANSELBbits 0408                        _ANSELCbits 0410                        _ANSELFbits 0428  
                    _I2C1CON0bits 0294                      _I2C1CON1bits 0295                      _I2C1CON2bits 0296  
                 ___lwdiv@divisor 0508          I2C1_WRITESINGLEBYTE@dato 0501                   ___lwdiv@counter 050C  
                        __ptext10 3276                          __ptext11 2984                          __ptext20 30BA  
                        __ptext12 32C0                          __ptext21 3176                          __ptext13 3224  
                        __ptext22 2E56                          __ptext14 340E                          __ptext23 2EF0  
                        __ptext15 3302                          __ptext16 3338                          __ptext17 2F82  
                        __ptext18 3364                          __ptext19 3056                        _RC3I2Cbits 0287  
        __end_of_I2C_CURSOR_ONOFF 33FE                        _RC4I2Cbits 0286                       _WS2812_INIT 31CE  
                 DHT_Check@modelo 0501                   DHT_Check@temp_x 0502                          isa$xinst 0000  
                      _ODCONCbits 0412                       ??_configuro 0501              DHT_GetTemp@valor_dht 050A  
                ___lwmod@dividend 0501   I2C_LCD_ESCRIBE_VAR_INT@d_millar 0511            ??_I2C1_WRITESINGLEBYTE 0502  
                 ___lwmod@divisor 0503                   ___lwmod@counter 0505                     ?_DHT_GetHumid 0505  
              _I2C_LCD_CHAR_GRADO 340E               ?_I2C_LCD_CHAR_GRADO 0501                      ?_DHT_GetTemp 0505  
                _WS2812_DATA_SEND 33A8  
