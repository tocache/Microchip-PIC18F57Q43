

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jun 23 16:00:29 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Generated 04/02/2025 GMT
    40                           ; 
    41                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F57Q43 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   0004E0                     bsr             equ	1248
    74   0004E9                     fsr0            equ	1257
    75   0004EA                     fsr0h           equ	1258
    76   0004E9                     fsr0l           equ	1257
    77   0004E1                     fsr1            equ	1249
    78   0004E2                     fsr1h           equ	1250
    79   0004E1                     fsr1l           equ	1249
    80   0004D9                     fsr2            equ	1241
    81   0004DA                     fsr2h           equ	1242
    82   0004D9                     fsr2l           equ	1241
    83   0004EF                     indf0           equ	1263
    84   0004E7                     indf1           equ	1255
    85   0004DF                     indf2           equ	1247
    86   0004D6                     intcon          equ	1238
    87   000041                     nvmcon          equ	65
    88   0004F9                     pcl             equ	1273
    89   0004FA                     pclath          equ	1274
    90   0004FB                     pclatu          equ	1275
    91   0004EB                     plusw0          equ	1259
    92   0004E3                     plusw1          equ	1251
    93   0004DB                     plusw2          equ	1243
    94   0004ED                     postdec0        equ	1261
    95   0004E5                     postdec1        equ	1253
    96   0004DD                     postdec2        equ	1245
    97   0004EE                     postinc0        equ	1262
    98   0004E6                     postinc1        equ	1254
    99   0004DE                     postinc2        equ	1246
   100   0004EC                     preinc0         equ	1260
   101   0004E4                     preinc1         equ	1252
   102   0004DC                     preinc2         equ	1244
   103   0004F3                     prod            equ	1267
   104   0004F4                     prodh           equ	1268
   105   0004F3                     prodl           equ	1267
   106   0004D8                     status          equ	1240
   107   0004F5                     tablat          equ	1269
   108   0004F6                     tblptr          equ	1270
   109   0004F7                     tblptrh         equ	1271
   110   0004F6                     tblptrl         equ	1270
   111   0004F8                     tblptru         equ	1272
   112   0004FD                     tosl            equ	1277
   113   0004E8                     wreg            equ	1256
   114   000039                     CLKRCON         equ	57	;# 
   115   00003A                     CLKRCLK         equ	58	;# 
   116   000040                     NVMCON0         equ	64	;# 
   117   000041                     NVMCON1         equ	65	;# 
   118   000042                     NVMLOCK         equ	66	;# 
   119   000043                     NVMADR          equ	67	;# 
   120   000043                     NVMADRL         equ	67	;# 
   121   000044                     NVMADRH         equ	68	;# 
   122   000045                     NVMADRU         equ	69	;# 
   123   000046                     NVMDAT          equ	70	;# 
   124   000046                     NVMDATL         equ	70	;# 
   125   000047                     NVMDATH         equ	71	;# 
   126   000048                     VREGCON         equ	72	;# 
   127   000049                     BORCON          equ	73	;# 
   128   00004A                     HLVDCON0        equ	74	;# 
   129   00004B                     HLVDCON1        equ	75	;# 
   130   00004C                     ZCDCON          equ	76	;# 
   131   000060                     PMD0            equ	96	;# 
   132   000061                     PMD1            equ	97	;# 
   133   000063                     PMD3            equ	99	;# 
   134   000064                     PMD4            equ	100	;# 
   135   000065                     PMD5            equ	101	;# 
   136   000066                     PMD6            equ	102	;# 
   137   000067                     PMD7            equ	103	;# 
   138   000068                     PMD8            equ	104	;# 
   139   00006A                     MD1CON0         equ	106	;# 
   140   00006B                     MD1CON1         equ	107	;# 
   141   00006C                     MD1SRC          equ	108	;# 
   142   00006D                     MD1CARL         equ	109	;# 
   143   00006E                     MD1CARH         equ	110	;# 
   144   00006F                     CMOUT           equ	111	;# 
   145   000070                     CM1CON0         equ	112	;# 
   146   000071                     CM1CON1         equ	113	;# 
   147   000072                     CM1NCH          equ	114	;# 
   148   000073                     CM1PCH          equ	115	;# 
   149   000074                     CM2CON0         equ	116	;# 
   150   000075                     CM2CON1         equ	117	;# 
   151   000076                     CM2NCH          equ	118	;# 
   152   000077                     CM2PCH          equ	119	;# 
   153   000078                     WDTCON0         equ	120	;# 
   154   000079                     WDTCON1         equ	121	;# 
   155   00007A                     WDTPS           equ	122	;# 
   156   00007A                     WDTPSL          equ	122	;# 
   157   00007B                     WDTPSH          equ	123	;# 
   158   00007C                     WDTTMR          equ	124	;# 
   159   00007D                     DAC1DAT         equ	125	;# 
   160   00007D                     DAC1DATL        equ	125	;# 
   161   00007F                     DAC1CON         equ	127	;# 
   162   000080                     SPI1RXB         equ	128	;# 
   163   000081                     SPI1TXB         equ	129	;# 
   164   000082                     SPI1TCNT        equ	130	;# 
   165   000082                     SPI1TCNTL       equ	130	;# 
   166   000083                     SPI1TCNTH       equ	131	;# 
   167   000084                     SPI1CON0        equ	132	;# 
   168   000085                     SPI1CON1        equ	133	;# 
   169   000086                     SPI1CON2        equ	134	;# 
   170   000087                     SPI1STATUS      equ	135	;# 
   171   000088                     SPI1TWIDTH      equ	136	;# 
   172   000089                     SPI1BAUD        equ	137	;# 
   173   00008A                     SPI1INTF        equ	138	;# 
   174   00008B                     SPI1INTE        equ	139	;# 
   175   00008C                     SPI1CLK         equ	140	;# 
   176   00008D                     SPI2RXB         equ	141	;# 
   177   00008E                     SPI2TXB         equ	142	;# 
   178   00008F                     SPI2TCNT        equ	143	;# 
   179   00008F                     SPI2TCNTL       equ	143	;# 
   180   000090                     SPI2TCNTH       equ	144	;# 
   181   000091                     SPI2CON0        equ	145	;# 
   182   000092                     SPI2CON1        equ	146	;# 
   183   000093                     SPI2CON2        equ	147	;# 
   184   000094                     SPI2STATUS      equ	148	;# 
   185   000095                     SPI2TWIDTH      equ	149	;# 
   186   000096                     SPI2BAUD        equ	150	;# 
   187   000097                     SPI2INTF        equ	151	;# 
   188   000098                     SPI2INTE        equ	152	;# 
   189   000099                     SPI2CLK         equ	153	;# 
   190   0000AC                     ACTCON          equ	172	;# 
   191   0000AD                     OSCCON1         equ	173	;# 
   192   0000AE                     OSCCON2         equ	174	;# 
   193   0000AF                     OSCCON3         equ	175	;# 
   194   0000B0                     OSCTUNE         equ	176	;# 
   195   0000B1                     OSCFRQ          equ	177	;# 
   196   0000B1                     OSCFREQ         equ	177	;# 
   197   0000B2                     OSCSTAT         equ	178	;# 
   198   0000B2                     OSCSTAT1        equ	178	;# 
   199   0000B3                     OSCEN           equ	179	;# 
   200   0000B4                     PRLOCK          equ	180	;# 
   201   0000B5                     SCANPR          equ	181	;# 
   202   0000B6                     DMA1PR          equ	182	;# 
   203   0000B7                     DMA2PR          equ	183	;# 
   204   0000B8                     DMA3PR          equ	184	;# 
   205   0000B9                     DMA4PR          equ	185	;# 
   206   0000BA                     DMA5PR          equ	186	;# 
   207   0000BB                     DMA6PR          equ	187	;# 
   208   0000BE                     MAINPR          equ	190	;# 
   209   0000BF                     ISRPR           equ	191	;# 
   210   0000D4                     CLCDATA         equ	212	;# 
   211   0000D5                     CLCSELECT       equ	213	;# 
   212   0000D6                     CLCnCON         equ	214	;# 
   213   0000D7                     CLCnPOL         equ	215	;# 
   214   0000D8                     CLCnSEL0        equ	216	;# 
   215   0000D9                     CLCnSEL1        equ	217	;# 
   216   0000DA                     CLCnSEL2        equ	218	;# 
   217   0000DB                     CLCnSEL3        equ	219	;# 
   218   0000DC                     CLCnGLS0        equ	220	;# 
   219   0000DD                     CLCnGLS1        equ	221	;# 
   220   0000DE                     CLCnGLS2        equ	222	;# 
   221   0000DF                     CLCnGLS3        equ	223	;# 
   222   0000E8                     DMASELECT       equ	232	;# 
   223   0000E9                     DMAnBUF         equ	233	;# 
   224   0000EA                     DMAnDCNT        equ	234	;# 
   225   0000EA                     DMAnDCNTL       equ	234	;# 
   226   0000EB                     DMAnDCNTH       equ	235	;# 
   227   0000EC                     DMAnDPTR        equ	236	;# 
   228   0000EC                     DMAnDPTRL       equ	236	;# 
   229   0000ED                     DMAnDPTRH       equ	237	;# 
   230   0000EE                     DMAnDSZ         equ	238	;# 
   231   0000EE                     DMAnDSZL        equ	238	;# 
   232   0000EF                     DMAnDSZH        equ	239	;# 
   233   0000F0                     DMAnDSA         equ	240	;# 
   234   0000F0                     DMAnDSAL        equ	240	;# 
   235   0000F1                     DMAnDSAH        equ	241	;# 
   236   0000F2                     DMAnSCNT        equ	242	;# 
   237   0000F2                     DMAnSCNTL       equ	242	;# 
   238   0000F3                     DMAnSCNTH       equ	243	;# 
   239   0000F4                     DMAnSPTR        equ	244	;# 
   240   0000F4                     DMAnSPTRL       equ	244	;# 
   241   0000F5                     DMAnSPTRH       equ	245	;# 
   242   0000F6                     DMAnSPTRU       equ	246	;# 
   243   0000F7                     DMAnSSZ         equ	247	;# 
   244   0000F7                     DMAnSSZL        equ	247	;# 
   245   0000F8                     DMAnSSZH        equ	248	;# 
   246   0000F9                     DMAnSSA         equ	249	;# 
   247   0000F9                     DMAnSSAL        equ	249	;# 
   248   0000FA                     DMAnSSAH        equ	250	;# 
   249   0000FB                     DMAnSSAU        equ	251	;# 
   250   0000FC                     DMAnCON0        equ	252	;# 
   251   0000FD                     DMAnCON1        equ	253	;# 
   252   0000FE                     DMAnAIRQ        equ	254	;# 
   253   0000FF                     DMAnSIRQ        equ	255	;# 
   254   000200                     PPSLOCK         equ	512	;# 
   255   000201                     RA0PPS          equ	513	;# 
   256   000202                     RA1PPS          equ	514	;# 
   257   000203                     RA2PPS          equ	515	;# 
   258   000204                     RA3PPS          equ	516	;# 
   259   000205                     RA4PPS          equ	517	;# 
   260   000206                     RA5PPS          equ	518	;# 
   261   000207                     RA6PPS          equ	519	;# 
   262   000208                     RA7PPS          equ	520	;# 
   263   000209                     RB0PPS          equ	521	;# 
   264   00020A                     RB1PPS          equ	522	;# 
   265   00020B                     RB2PPS          equ	523	;# 
   266   00020C                     RB3PPS          equ	524	;# 
   267   00020D                     RB4PPS          equ	525	;# 
   268   00020E                     RB5PPS          equ	526	;# 
   269   00020F                     RB6PPS          equ	527	;# 
   270   000210                     RB7PPS          equ	528	;# 
   271   000211                     RC0PPS          equ	529	;# 
   272   000212                     RC1PPS          equ	530	;# 
   273   000213                     RC2PPS          equ	531	;# 
   274   000214                     RC3PPS          equ	532	;# 
   275   000215                     RC4PPS          equ	533	;# 
   276   000216                     RC5PPS          equ	534	;# 
   277   000217                     RC6PPS          equ	535	;# 
   278   000218                     RC7PPS          equ	536	;# 
   279   000219                     RD0PPS          equ	537	;# 
   280   00021A                     RD1PPS          equ	538	;# 
   281   00021B                     RD2PPS          equ	539	;# 
   282   00021C                     RD3PPS          equ	540	;# 
   283   00021D                     RD4PPS          equ	541	;# 
   284   00021E                     RD5PPS          equ	542	;# 
   285   00021F                     RD6PPS          equ	543	;# 
   286   000220                     RD7PPS          equ	544	;# 
   287   000221                     RE0PPS          equ	545	;# 
   288   000222                     RE1PPS          equ	546	;# 
   289   000223                     RE2PPS          equ	547	;# 
   290   000229                     RF0PPS          equ	553	;# 
   291   00022A                     RF1PPS          equ	554	;# 
   292   00022B                     RF2PPS          equ	555	;# 
   293   00022C                     RF3PPS          equ	556	;# 
   294   00022D                     RF4PPS          equ	557	;# 
   295   00022E                     RF5PPS          equ	558	;# 
   296   00022F                     RF6PPS          equ	559	;# 
   297   000230                     RF7PPS          equ	560	;# 
   298   00023E                     INT0PPS         equ	574	;# 
   299   00023F                     INT1PPS         equ	575	;# 
   300   000240                     INT2PPS         equ	576	;# 
   301   000241                     T0CKIPPS        equ	577	;# 
   302   000242                     T1CKIPPS        equ	578	;# 
   303   000243                     T1GPPS          equ	579	;# 
   304   000244                     T3CKIPPS        equ	580	;# 
   305   000245                     T3GPPS          equ	581	;# 
   306   000246                     T5CKIPPS        equ	582	;# 
   307   000247                     T5GPPS          equ	583	;# 
   308   000248                     T2INPPS         equ	584	;# 
   309   000249                     T4INPPS         equ	585	;# 
   310   00024A                     T6INPPS         equ	586	;# 
   311   00024F                     CCP1PPS         equ	591	;# 
   312   000250                     CCP2PPS         equ	592	;# 
   313   000251                     CCP3PPS         equ	593	;# 
   314   000253                     PWM1ERSPPS      equ	595	;# 
   315   000254                     PWM2ERSPPS      equ	596	;# 
   316   000255                     PWM3ERSPPS      equ	597	;# 
   317   000257                     PWMIN0PPS       equ	599	;# 
   318   000258                     PWMIN1PPS       equ	600	;# 
   319   000259                     SMT1WINPPS      equ	601	;# 
   320   00025A                     SMT1SIGPPS      equ	602	;# 
   321   00025B                     CWG1PPS         equ	603	;# 
   322   00025B                     CWG1INPPS       equ	603	;# 
   323   00025C                     CWG2PPS         equ	604	;# 
   324   00025C                     CWG2INPPS       equ	604	;# 
   325   00025D                     CWG3PPS         equ	605	;# 
   326   00025D                     CWG3INPPS       equ	605	;# 
   327   00025E                     MD1CARLPPS      equ	606	;# 
   328   00025E                     MDCARLPPS       equ	606	;# 
   329   00025F                     MD1CARHPPS      equ	607	;# 
   330   00025F                     MDCARHPPS       equ	607	;# 
   331   000260                     MD1SRCPPS       equ	608	;# 
   332   000260                     MDSRCPPS        equ	608	;# 
   333   000261                     CLCIN0PPS       equ	609	;# 
   334   000262                     CLCIN1PPS       equ	610	;# 
   335   000263                     CLCIN2PPS       equ	611	;# 
   336   000264                     CLCIN3PPS       equ	612	;# 
   337   000265                     CLCIN4PPS       equ	613	;# 
   338   000266                     CLCIN5PPS       equ	614	;# 
   339   000267                     CLCIN6PPS       equ	615	;# 
   340   000268                     CLCIN7PPS       equ	616	;# 
   341   000269                     ADACTPPS        equ	617	;# 
   342   00026A                     SPI1SCKPPS      equ	618	;# 
   343   00026B                     SPI1SDIPPS      equ	619	;# 
   344   00026C                     SPI1SSPPS       equ	620	;# 
   345   00026D                     SPI2SCKPPS      equ	621	;# 
   346   00026E                     SPI2SDIPPS      equ	622	;# 
   347   00026F                     SPI2SSPPS       equ	623	;# 
   348   000270                     I2C1SDAPPS      equ	624	;# 
   349   000271                     I2C1SCLPPS      equ	625	;# 
   350   000272                     U1RXPPS         equ	626	;# 
   351   000273                     U1CTSPPS        equ	627	;# 
   352   000274                     U2RXPPS         equ	628	;# 
   353   000275                     U2CTSPPS        equ	629	;# 
   354   000276                     U3RXPPS         equ	630	;# 
   355   000277                     U3CTSPPS        equ	631	;# 
   356   000278                     U4RXPPS         equ	632	;# 
   357   000279                     U4CTSPPS        equ	633	;# 
   358   00027A                     U5RXPPS         equ	634	;# 
   359   00027B                     U5CTSPPS        equ	635	;# 
   360   000286                     RC4I2C          equ	646	;# 
   361   000287                     RC3I2C          equ	647	;# 
   362   000288                     RB2I2C          equ	648	;# 
   363   000289                     RB1I2C          equ	649	;# 
   364   00028B                     I2C1RXB         equ	651	;# 
   365   00028C                     I2C1TXB         equ	652	;# 
   366   00028D                     I2C1CNT         equ	653	;# 
   367   00028E                     I2C1ADB0        equ	654	;# 
   368   00028F                     I2C1ADB1        equ	655	;# 
   369   000290                     I2C1ADR0        equ	656	;# 
   370   000291                     I2C1ADR1        equ	657	;# 
   371   000292                     I2C1ADR2        equ	658	;# 
   372   000293                     I2C1ADR3        equ	659	;# 
   373   000294                     I2C1CON0        equ	660	;# 
   374   000295                     I2C1CON1        equ	661	;# 
   375   000296                     I2C1CON2        equ	662	;# 
   376   000297                     I2C1ERR         equ	663	;# 
   377   000298                     I2C1STAT0       equ	664	;# 
   378   000299                     I2C1STAT1       equ	665	;# 
   379   00029A                     I2C1PIR         equ	666	;# 
   380   00029B                     I2C1PIE         equ	667	;# 
   381   00029C                     I2C1CLK         equ	668	;# 
   382   00029D                     I2C1BTO         equ	669	;# 
   383   0002A1                     U1RXB           equ	673	;# 
   384   0002A1                     U1RXBL          equ	673	;# 
   385   0002A2                     U1RXCHK         equ	674	;# 
   386   0002A3                     U1TXB           equ	675	;# 
   387   0002A3                     U1TXBL          equ	675	;# 
   388   0002A4                     U1TXCHK         equ	676	;# 
   389   0002A5                     U1P1            equ	677	;# 
   390   0002A5                     U1P1L           equ	677	;# 
   391   0002A6                     U1P1H           equ	678	;# 
   392   0002A7                     U1P2            equ	679	;# 
   393   0002A7                     U1P2L           equ	679	;# 
   394   0002A8                     U1P2H           equ	680	;# 
   395   0002A9                     U1P3            equ	681	;# 
   396   0002A9                     U1P3L           equ	681	;# 
   397   0002AA                     U1P3H           equ	682	;# 
   398   0002AB                     U1CON0          equ	683	;# 
   399   0002AC                     U1CON1          equ	684	;# 
   400   0002AD                     U1CON2          equ	685	;# 
   401   0002AE                     U1BRG           equ	686	;# 
   402   0002AE                     U1BRGL          equ	686	;# 
   403   0002AF                     U1BRGH          equ	687	;# 
   404   0002B0                     U1FIFO          equ	688	;# 
   405   0002B1                     U1UIR           equ	689	;# 
   406   0002B2                     U1ERRIR         equ	690	;# 
   407   0002B3                     U1ERRIE         equ	691	;# 
   408   0002B4                     U2RXB           equ	692	;# 
   409   0002B4                     U2RXBL          equ	692	;# 
   410   0002B6                     U2TXB           equ	694	;# 
   411   0002B6                     U2TXBL          equ	694	;# 
   412   0002B8                     U2P1            equ	696	;# 
   413   0002B8                     U2P1L           equ	696	;# 
   414   0002BA                     U2P2            equ	698	;# 
   415   0002BA                     U2P2L           equ	698	;# 
   416   0002BC                     U2P3            equ	700	;# 
   417   0002BC                     U2P3L           equ	700	;# 
   418   0002BE                     U2CON0          equ	702	;# 
   419   0002BF                     U2CON1          equ	703	;# 
   420   0002C0                     U2CON2          equ	704	;# 
   421   0002C1                     U2BRG           equ	705	;# 
   422   0002C1                     U2BRGL          equ	705	;# 
   423   0002C2                     U2BRGH          equ	706	;# 
   424   0002C3                     U2FIFO          equ	707	;# 
   425   0002C4                     U2UIR           equ	708	;# 
   426   0002C5                     U2ERRIR         equ	709	;# 
   427   0002C6                     U2ERRIE         equ	710	;# 
   428   0002C7                     U3RXB           equ	711	;# 
   429   0002C7                     U3RXBL          equ	711	;# 
   430   0002C9                     U3TXB           equ	713	;# 
   431   0002C9                     U3TXBL          equ	713	;# 
   432   0002CB                     U3P1            equ	715	;# 
   433   0002CB                     U3P1L           equ	715	;# 
   434   0002CD                     U3P2            equ	717	;# 
   435   0002CD                     U3P2L           equ	717	;# 
   436   0002CF                     U3P3            equ	719	;# 
   437   0002CF                     U3P3L           equ	719	;# 
   438   0002D1                     U3CON0          equ	721	;# 
   439   0002D2                     U3CON1          equ	722	;# 
   440   0002D3                     U3CON2          equ	723	;# 
   441   0002D4                     U3BRG           equ	724	;# 
   442   0002D4                     U3BRGL          equ	724	;# 
   443   0002D5                     U3BRGH          equ	725	;# 
   444   0002D6                     U3FIFO          equ	726	;# 
   445   0002D7                     U3UIR           equ	727	;# 
   446   0002D8                     U3ERRIR         equ	728	;# 
   447   0002D9                     U3ERRIE         equ	729	;# 
   448   0002DA                     U4RXB           equ	730	;# 
   449   0002DA                     U4RXBL          equ	730	;# 
   450   0002DC                     U4TXB           equ	732	;# 
   451   0002DC                     U4TXBL          equ	732	;# 
   452   0002DE                     U4P1            equ	734	;# 
   453   0002DE                     U4P1L           equ	734	;# 
   454   0002E0                     U4P2            equ	736	;# 
   455   0002E0                     U4P2L           equ	736	;# 
   456   0002E2                     U4P3            equ	738	;# 
   457   0002E2                     U4P3L           equ	738	;# 
   458   0002E4                     U4CON0          equ	740	;# 
   459   0002E5                     U4CON1          equ	741	;# 
   460   0002E6                     U4CON2          equ	742	;# 
   461   0002E7                     U4BRG           equ	743	;# 
   462   0002E7                     U4BRGL          equ	743	;# 
   463   0002E8                     U4BRGH          equ	744	;# 
   464   0002E9                     U4FIFO          equ	745	;# 
   465   0002EA                     U4UIR           equ	746	;# 
   466   0002EB                     U4ERRIR         equ	747	;# 
   467   0002EC                     U4ERRIE         equ	748	;# 
   468   0002ED                     U5RXB           equ	749	;# 
   469   0002ED                     U5RXBL          equ	749	;# 
   470   0002EF                     U5TXB           equ	751	;# 
   471   0002EF                     U5TXBL          equ	751	;# 
   472   0002F1                     U5P1            equ	753	;# 
   473   0002F1                     U5P1L           equ	753	;# 
   474   0002F3                     U5P2            equ	755	;# 
   475   0002F3                     U5P2L           equ	755	;# 
   476   0002F5                     U5P3            equ	757	;# 
   477   0002F5                     U5P3L           equ	757	;# 
   478   0002F7                     U5CON0          equ	759	;# 
   479   0002F8                     U5CON1          equ	760	;# 
   480   0002F9                     U5CON2          equ	761	;# 
   481   0002FA                     U5BRG           equ	762	;# 
   482   0002FA                     U5BRGL          equ	762	;# 
   483   0002FB                     U5BRGH          equ	763	;# 
   484   0002FC                     U5FIFO          equ	764	;# 
   485   0002FD                     U5UIR           equ	765	;# 
   486   0002FE                     U5ERRIR         equ	766	;# 
   487   0002FF                     U5ERRIE         equ	767	;# 
   488   000300                     SMT1TMR         equ	768	;# 
   489   000300                     SMT1TMRL        equ	768	;# 
   490   000301                     SMT1TMRH        equ	769	;# 
   491   000302                     SMT1TMRU        equ	770	;# 
   492   000303                     SMT1CPR         equ	771	;# 
   493   000303                     SMT1CPRL        equ	771	;# 
   494   000304                     SMT1CPRH        equ	772	;# 
   495   000305                     SMT1CPRU        equ	773	;# 
   496   000306                     SMT1CPW         equ	774	;# 
   497   000306                     SMT1CPWL        equ	774	;# 
   498   000307                     SMT1CPWH        equ	775	;# 
   499   000308                     SMT1CPWU        equ	776	;# 
   500   000309                     SMT1PR          equ	777	;# 
   501   000309                     SMT1PRL         equ	777	;# 
   502   00030A                     SMT1PRH         equ	778	;# 
   503   00030B                     SMT1PRU         equ	779	;# 
   504   00030C                     SMT1CON0        equ	780	;# 
   505   00030D                     SMT1CON1        equ	781	;# 
   506   00030E                     SMT1STAT        equ	782	;# 
   507   00030F                     SMT1CLK         equ	783	;# 
   508   000310                     SMT1SIG         equ	784	;# 
   509   000311                     SMT1WIN         equ	785	;# 
   510   000318                     TMR0L           equ	792	;# 
   511   000318                     TMR0            equ	792	;# 
   512   000319                     TMR0H           equ	793	;# 
   513   000319                     PR0             equ	793	;# 
   514   00031A                     T0CON0          equ	794	;# 
   515   00031B                     T0CON1          equ	795	;# 
   516   00031C                     TMR1            equ	796	;# 
   517   00031C                     TMR1L           equ	796	;# 
   518   00031D                     TMR1H           equ	797	;# 
   519   00031E                     T1CON           equ	798	;# 
   520   00031E                     TMR1CON         equ	798	;# 
   521   00031F                     T1GCON          equ	799	;# 
   522   00031F                     TMR1GCON        equ	799	;# 
   523   000320                     T1GATE          equ	800	;# 
   524   000320                     TMR1GATE        equ	800	;# 
   525   000321                     T1CLK           equ	801	;# 
   526   000321                     TMR1CLK         equ	801	;# 
   527   000321                     PR1             equ	801	;# 
   528   000322                     T2TMR           equ	802	;# 
   529   000322                     TMR2            equ	802	;# 
   530   000323                     T2PR            equ	803	;# 
   531   000323                     PR2             equ	803	;# 
   532   000324                     T2CON           equ	804	;# 
   533   000325                     T2HLT           equ	805	;# 
   534   000326                     T2CLKCON        equ	806	;# 
   535   000326                     T2CLK           equ	806	;# 
   536   000327                     T2RST           equ	807	;# 
   537   000328                     TMR3            equ	808	;# 
   538   000328                     TMR3L           equ	808	;# 
   539   000329                     TMR3H           equ	809	;# 
   540   00032A                     T3CON           equ	810	;# 
   541   00032A                     TMR3CON         equ	810	;# 
   542   00032B                     T3GCON          equ	811	;# 
   543   00032B                     TMR3GCON        equ	811	;# 
   544   00032C                     T3GATE          equ	812	;# 
   545   00032C                     TMR3GATE        equ	812	;# 
   546   00032D                     T3CLK           equ	813	;# 
   547   00032D                     TMR3CLK         equ	813	;# 
   548   00032D                     PR3             equ	813	;# 
   549   00032E                     T4TMR           equ	814	;# 
   550   00032E                     TMR4            equ	814	;# 
   551   00032F                     T4PR            equ	815	;# 
   552   00032F                     PR4             equ	815	;# 
   553   000330                     T4CON           equ	816	;# 
   554   000331                     T4HLT           equ	817	;# 
   555   000332                     T4CLKCON        equ	818	;# 
   556   000332                     T4CLK           equ	818	;# 
   557   000333                     T4RST           equ	819	;# 
   558   000334                     TMR5            equ	820	;# 
   559   000334                     TMR5L           equ	820	;# 
   560   000335                     TMR5H           equ	821	;# 
   561   000336                     T5CON           equ	822	;# 
   562   000336                     TMR5CON         equ	822	;# 
   563   000337                     T5GCON          equ	823	;# 
   564   000337                     TMR5GCON        equ	823	;# 
   565   000338                     T5GATE          equ	824	;# 
   566   000338                     TMR5GATE        equ	824	;# 
   567   000339                     T5CLK           equ	825	;# 
   568   000339                     TMR5CLK         equ	825	;# 
   569   000339                     PR5             equ	825	;# 
   570   00033A                     T6TMR           equ	826	;# 
   571   00033A                     TMR6            equ	826	;# 
   572   00033B                     T6PR            equ	827	;# 
   573   00033B                     PR6             equ	827	;# 
   574   00033C                     T6CON           equ	828	;# 
   575   00033D                     T6HLT           equ	829	;# 
   576   00033E                     T6CLKCON        equ	830	;# 
   577   00033E                     T6CLK           equ	830	;# 
   578   00033F                     T6RST           equ	831	;# 
   579   000340                     CCPR1           equ	832	;# 
   580   000340                     CCPR1L          equ	832	;# 
   581   000341                     CCPR1H          equ	833	;# 
   582   000342                     CCP1CON         equ	834	;# 
   583   000343                     CCP1CAP         equ	835	;# 
   584   000344                     CCPR2           equ	836	;# 
   585   000344                     CCPR2L          equ	836	;# 
   586   000345                     CCPR2H          equ	837	;# 
   587   000346                     CCP2CON         equ	838	;# 
   588   000347                     CCP2CAP         equ	839	;# 
   589   000348                     CCPR3           equ	840	;# 
   590   000348                     CCPR3L          equ	840	;# 
   591   000349                     CCPR3H          equ	841	;# 
   592   00034A                     CCP3CON         equ	842	;# 
   593   00034B                     CCP3CAP         equ	843	;# 
   594   00034C                     CCPTMRS0        equ	844	;# 
   595   00034F                     CRCDATA         equ	847	;# 
   596   00034F                     CRCDATL         equ	847	;# 
   597   000350                     CRCDATH         equ	848	;# 
   598   000351                     CRCACC          equ	849	;# 
   599   000351                     CRCACCL         equ	849	;# 
   600   000352                     CRCACCH         equ	850	;# 
   601   000353                     CRCSHFT         equ	851	;# 
   602   000353                     CRCSHIFTL       equ	851	;# 
   603   000354                     CRCSHIFTH       equ	852	;# 
   604   000355                     CRCXOR          equ	853	;# 
   605   000355                     CRCXORL         equ	853	;# 
   606   000356                     CRCXORH         equ	854	;# 
   607   000357                     CRCCON0         equ	855	;# 
   608   000358                     CRCCON1         equ	856	;# 
   609   00035A                     SCANLADR        equ	858	;# 
   610   00035A                     SCANLADRL       equ	858	;# 
   611   00035B                     SCANLADRH       equ	859	;# 
   612   00035C                     SCANLADRU       equ	860	;# 
   613   00035D                     SCANHADR        equ	861	;# 
   614   00035D                     SCANHADRL       equ	861	;# 
   615   00035E                     SCANHADRH       equ	862	;# 
   616   00035F                     SCANHADRU       equ	863	;# 
   617   000360                     SCANCON0        equ	864	;# 
   618   000361                     SCANTRIG        equ	865	;# 
   619   000362                     IPR0            equ	866	;# 
   620   000363                     IPR1            equ	867	;# 
   621   000364                     IPR2            equ	868	;# 
   622   000365                     IPR3            equ	869	;# 
   623   000366                     IPR4            equ	870	;# 
   624   000367                     IPR5            equ	871	;# 
   625   000368                     IPR6            equ	872	;# 
   626   000369                     IPR7            equ	873	;# 
   627   00036A                     IPR8            equ	874	;# 
   628   00036B                     IPR9            equ	875	;# 
   629   00036C                     IPR10           equ	876	;# 
   630   00036D                     IPR11           equ	877	;# 
   631   00036E                     IPR12           equ	878	;# 
   632   00036F                     IPR13           equ	879	;# 
   633   000370                     IPR14           equ	880	;# 
   634   000371                     IPR15           equ	881	;# 
   635   000373                     STATUS_CSHAD    equ	883	;# 
   636   000374                     WREG_CSHAD      equ	884	;# 
   637   000375                     BSR_CSHAD       equ	885	;# 
   638   000376                     SHADCON         equ	886	;# 
   639   000377                     STATUS_SHAD     equ	887	;# 
   640   000378                     WREG_SHAD       equ	888	;# 
   641   000379                     BSR_SHAD        equ	889	;# 
   642   00037A                     PCLATH_SHAD     equ	890	;# 
   643   00037B                     PCLATU_SHAD     equ	891	;# 
   644   00037C                     FSR0SH          equ	892	;# 
   645   00037C                     FSR0L_SHAD      equ	892	;# 
   646   00037D                     FSR0H_SHAD      equ	893	;# 
   647   00037E                     FSR1SH          equ	894	;# 
   648   00037E                     FSR1L_SHAD      equ	894	;# 
   649   00037F                     FSR1H_SHAD      equ	895	;# 
   650   000380                     FSR2SH          equ	896	;# 
   651   000380                     FSR2L_SHAD      equ	896	;# 
   652   000381                     FSR2H_SHAD      equ	897	;# 
   653   000382                     PRODSH          equ	898	;# 
   654   000382                     PRODL_SHAD      equ	898	;# 
   655   000383                     PRODH_SHAD      equ	899	;# 
   656   0003BC                     CWG1CLK         equ	956	;# 
   657   0003BC                     CWG1CLKCON      equ	956	;# 
   658   0003BD                     CWG1ISM         equ	957	;# 
   659   0003BD                     CWG1DAT         equ	957	;# 
   660   0003BE                     CWG1DBR         equ	958	;# 
   661   0003BF                     CWG1DBF         equ	959	;# 
   662   0003C0                     CWG1CON0        equ	960	;# 
   663   0003C1                     CWG1CON1        equ	961	;# 
   664   0003C2                     CWG1AS0         equ	962	;# 
   665   0003C3                     CWG1AS1         equ	963	;# 
   666   0003C4                     CWG1STR         equ	964	;# 
   667   0003C5                     CWG2CLK         equ	965	;# 
   668   0003C5                     CWG2CLKCON      equ	965	;# 
   669   0003C6                     CWG2ISM         equ	966	;# 
   670   0003C6                     CWG2DAT         equ	966	;# 
   671   0003C7                     CWG2DBR         equ	967	;# 
   672   0003C8                     CWG2DBF         equ	968	;# 
   673   0003C9                     CWG2CON0        equ	969	;# 
   674   0003CA                     CWG2CON1        equ	970	;# 
   675   0003CB                     CWG2AS0         equ	971	;# 
   676   0003CC                     CWG2AS1         equ	972	;# 
   677   0003CD                     CWG2STR         equ	973	;# 
   678   0003CE                     CWG3CLK         equ	974	;# 
   679   0003CE                     CWG3CLKCON      equ	974	;# 
   680   0003CF                     CWG3ISM         equ	975	;# 
   681   0003CF                     CWG3DAT         equ	975	;# 
   682   0003D0                     CWG3DBR         equ	976	;# 
   683   0003D1                     CWG3DBF         equ	977	;# 
   684   0003D2                     CWG3CON0        equ	978	;# 
   685   0003D3                     CWG3CON1        equ	979	;# 
   686   0003D4                     CWG3AS0         equ	980	;# 
   687   0003D5                     CWG3AS1         equ	981	;# 
   688   0003D6                     CWG3STR         equ	982	;# 
   689   0003D7                     FVRCON          equ	983	;# 
   690   0003D8                     ADCPCON         equ	984	;# 
   691   0003D8                     ADCP            equ	984	;# 
   692   0003D9                     ADLTH           equ	985	;# 
   693   0003D9                     ADLTHL          equ	985	;# 
   694   0003DA                     ADLTHH          equ	986	;# 
   695   0003DB                     ADUTH           equ	987	;# 
   696   0003DB                     ADUTHL          equ	987	;# 
   697   0003DC                     ADUTHH          equ	988	;# 
   698   0003DD                     ADERR           equ	989	;# 
   699   0003DD                     ADERRL          equ	989	;# 
   700   0003DE                     ADERRH          equ	990	;# 
   701   0003DF                     ADSTPT          equ	991	;# 
   702   0003DF                     ADSTPTL         equ	991	;# 
   703   0003E0                     ADSTPTH         equ	992	;# 
   704   0003E1                     ADFLTR          equ	993	;# 
   705   0003E1                     ADFLTRL         equ	993	;# 
   706   0003E2                     ADFLTRH         equ	994	;# 
   707   0003E3                     ADACC           equ	995	;# 
   708   0003E3                     ADACCL          equ	995	;# 
   709   0003E4                     ADACCH          equ	996	;# 
   710   0003E5                     ADACCU          equ	997	;# 
   711   0003E6                     ADCNT           equ	998	;# 
   712   0003E7                     ADRPT           equ	999	;# 
   713   0003E8                     ADPREV          equ	1000	;# 
   714   0003E8                     ADPREVL         equ	1000	;# 
   715   0003E9                     ADPREVH         equ	1001	;# 
   716   0003EA                     ADRES           equ	1002	;# 
   717   0003EA                     ADRESL          equ	1002	;# 
   718   0003EB                     ADRESH          equ	1003	;# 
   719   0003EC                     ADPCH           equ	1004	;# 
   720   0003EE                     ADACQ           equ	1006	;# 
   721   0003EE                     ADACQL          equ	1006	;# 
   722   0003EF                     ADACQH          equ	1007	;# 
   723   0003F0                     ADCAP           equ	1008	;# 
   724   0003F1                     ADPRE           equ	1009	;# 
   725   0003F1                     ADPREL          equ	1009	;# 
   726   0003F2                     ADPREH          equ	1010	;# 
   727   0003F3                     ADCON0          equ	1011	;# 
   728   0003F4                     ADCON1          equ	1012	;# 
   729   0003F5                     ADCON2          equ	1013	;# 
   730   0003F6                     ADCON3          equ	1014	;# 
   731   0003F7                     ADSTAT          equ	1015	;# 
   732   0003F8                     ADREF           equ	1016	;# 
   733   0003F9                     ADACT           equ	1017	;# 
   734   0003FA                     ADCLK           equ	1018	;# 
   735   000400                     ANSELA          equ	1024	;# 
   736   000401                     WPUA            equ	1025	;# 
   737   000402                     ODCONA          equ	1026	;# 
   738   000403                     SLRCONA         equ	1027	;# 
   739   000404                     INLVLA          equ	1028	;# 
   740   000405                     IOCAP           equ	1029	;# 
   741   000406                     IOCAN           equ	1030	;# 
   742   000407                     IOCAF           equ	1031	;# 
   743   000408                     ANSELB          equ	1032	;# 
   744   000409                     WPUB            equ	1033	;# 
   745   00040A                     ODCONB          equ	1034	;# 
   746   00040B                     SLRCONB         equ	1035	;# 
   747   00040C                     INLVLB          equ	1036	;# 
   748   00040D                     IOCBP           equ	1037	;# 
   749   00040E                     IOCBN           equ	1038	;# 
   750   00040F                     IOCBF           equ	1039	;# 
   751   000410                     ANSELC          equ	1040	;# 
   752   000411                     WPUC            equ	1041	;# 
   753   000412                     ODCONC          equ	1042	;# 
   754   000413                     SLRCONC         equ	1043	;# 
   755   000414                     INLVLC          equ	1044	;# 
   756   000415                     IOCCP           equ	1045	;# 
   757   000416                     IOCCN           equ	1046	;# 
   758   000417                     IOCCF           equ	1047	;# 
   759   000418                     ANSELD          equ	1048	;# 
   760   000419                     WPUD            equ	1049	;# 
   761   00041A                     ODCOND          equ	1050	;# 
   762   00041B                     SLRCOND         equ	1051	;# 
   763   00041C                     INLVLD          equ	1052	;# 
   764   000420                     ANSELE          equ	1056	;# 
   765   000421                     WPUE            equ	1057	;# 
   766   000422                     ODCONE          equ	1058	;# 
   767   000423                     SLRCONE         equ	1059	;# 
   768   000424                     INLVLE          equ	1060	;# 
   769   000425                     IOCEP           equ	1061	;# 
   770   000426                     IOCEN           equ	1062	;# 
   771   000427                     IOCEF           equ	1063	;# 
   772   000428                     ANSELF          equ	1064	;# 
   773   000429                     WPUF            equ	1065	;# 
   774   00042A                     ODCONF          equ	1066	;# 
   775   00042B                     SLRCONF         equ	1067	;# 
   776   00042C                     INLVLF          equ	1068	;# 
   777   000440                     NCO1ACC         equ	1088	;# 
   778   000440                     NCO1ACCL        equ	1088	;# 
   779   000441                     NCO1ACCH        equ	1089	;# 
   780   000442                     NCO1ACCU        equ	1090	;# 
   781   000443                     NCO1INC         equ	1091	;# 
   782   000443                     NCO1INCL        equ	1091	;# 
   783   000444                     NCO1INCH        equ	1092	;# 
   784   000445                     NCO1INCU        equ	1093	;# 
   785   000446                     NCO1CON         equ	1094	;# 
   786   000447                     NCO1CLK         equ	1095	;# 
   787   000448                     NCO2ACC         equ	1096	;# 
   788   000448                     NCO2ACCL        equ	1096	;# 
   789   000449                     NCO2ACCH        equ	1097	;# 
   790   00044A                     NCO2ACCU        equ	1098	;# 
   791   00044B                     NCO2INC         equ	1099	;# 
   792   00044B                     NCO2INCL        equ	1099	;# 
   793   00044C                     NCO2INCH        equ	1100	;# 
   794   00044D                     NCO2INCU        equ	1101	;# 
   795   00044E                     NCO2CON         equ	1102	;# 
   796   00044F                     NCO2CLK         equ	1103	;# 
   797   000450                     NCO3ACC         equ	1104	;# 
   798   000450                     NCO3ACCL        equ	1104	;# 
   799   000451                     NCO3ACCH        equ	1105	;# 
   800   000452                     NCO3ACCU        equ	1106	;# 
   801   000453                     NCO3INC         equ	1107	;# 
   802   000453                     NCO3INCL        equ	1107	;# 
   803   000454                     NCO3INCH        equ	1108	;# 
   804   000455                     NCO3INCU        equ	1109	;# 
   805   000456                     NCO3CON         equ	1110	;# 
   806   000457                     NCO3CLK         equ	1111	;# 
   807   000459                     IVTLOCK         equ	1113	;# 
   808   00045A                     IVTAD           equ	1114	;# 
   809   00045A                     IVTADL          equ	1114	;# 
   810   00045B                     IVTADH          equ	1115	;# 
   811   00045C                     IVTADU          equ	1116	;# 
   812   00045D                     IVTBASE         equ	1117	;# 
   813   00045D                     IVTBASEL        equ	1117	;# 
   814   00045E                     IVTBASEH        equ	1118	;# 
   815   00045F                     IVTBASEU        equ	1119	;# 
   816   000460                     PWM1ERS         equ	1120	;# 
   817   000461                     PWM1CLK         equ	1121	;# 
   818   000462                     PWM1LDS         equ	1122	;# 
   819   000463                     PWM1PR          equ	1123	;# 
   820   000463                     PWM1PRL         equ	1123	;# 
   821   000464                     PWM1PRH         equ	1124	;# 
   822   000465                     PWM1CPRE        equ	1125	;# 
   823   000466                     PWM1PIPOS       equ	1126	;# 
   824   000467                     PWM1GIR         equ	1127	;# 
   825   000468                     PWM1GIE         equ	1128	;# 
   826   000469                     PWM1CON         equ	1129	;# 
   827   00046A                     PWM1S1CFG       equ	1130	;# 
   828   00046B                     PWM1S1P1        equ	1131	;# 
   829   00046B                     PWM1S1P1L       equ	1131	;# 
   830   00046C                     PWM1S1P1H       equ	1132	;# 
   831   00046D                     PWM1S1P2        equ	1133	;# 
   832   00046D                     PWM1S1P2L       equ	1133	;# 
   833   00046E                     PWM1S1P2H       equ	1134	;# 
   834   00046F                     PWM2ERS         equ	1135	;# 
   835   000470                     PWM2CLK         equ	1136	;# 
   836   000471                     PWM2LDS         equ	1137	;# 
   837   000472                     PWM2PR          equ	1138	;# 
   838   000472                     PWM2PRL         equ	1138	;# 
   839   000473                     PWM2PRH         equ	1139	;# 
   840   000474                     PWM2CPRE        equ	1140	;# 
   841   000475                     PWM2PIPOS       equ	1141	;# 
   842   000476                     PWM2GIR         equ	1142	;# 
   843   000477                     PWM2GIE         equ	1143	;# 
   844   000478                     PWM2CON         equ	1144	;# 
   845   000479                     PWM2S1CFG       equ	1145	;# 
   846   00047A                     PWM2S1P1        equ	1146	;# 
   847   00047A                     PWM2S1P1L       equ	1146	;# 
   848   00047B                     PWM2S1P1H       equ	1147	;# 
   849   00047C                     PWM2S1P2        equ	1148	;# 
   850   00047C                     PWM2S1P2L       equ	1148	;# 
   851   00047D                     PWM2S1P2H       equ	1149	;# 
   852   00047E                     PWM3ERS         equ	1150	;# 
   853   00047F                     PWM3CLK         equ	1151	;# 
   854   000480                     PWM3LDS         equ	1152	;# 
   855   000481                     PWM3PR          equ	1153	;# 
   856   000481                     PWM3PRL         equ	1153	;# 
   857   000482                     PWM3PRH         equ	1154	;# 
   858   000483                     PWM3CPRE        equ	1155	;# 
   859   000484                     PWM3PIPOS       equ	1156	;# 
   860   000485                     PWM3GIR         equ	1157	;# 
   861   000486                     PWM3GIE         equ	1158	;# 
   862   000487                     PWM3CON         equ	1159	;# 
   863   000488                     PWM3S1CFG       equ	1160	;# 
   864   000489                     PWM3S1P1        equ	1161	;# 
   865   000489                     PWM3S1P1L       equ	1161	;# 
   866   00048A                     PWM3S1P1H       equ	1162	;# 
   867   00048B                     PWM3S1P2        equ	1163	;# 
   868   00048B                     PWM3S1P2L       equ	1163	;# 
   869   00048C                     PWM3S1P2H       equ	1164	;# 
   870   00049C                     PWMLOAD         equ	1180	;# 
   871   00049D                     PWMEN           equ	1181	;# 
   872   00049E                     PIE0            equ	1182	;# 
   873   00049F                     PIE1            equ	1183	;# 
   874   0004A0                     PIE2            equ	1184	;# 
   875   0004A1                     PIE3            equ	1185	;# 
   876   0004A2                     PIE4            equ	1186	;# 
   877   0004A3                     PIE5            equ	1187	;# 
   878   0004A4                     PIE6            equ	1188	;# 
   879   0004A5                     PIE7            equ	1189	;# 
   880   0004A6                     PIE8            equ	1190	;# 
   881   0004A7                     PIE9            equ	1191	;# 
   882   0004A8                     PIE10           equ	1192	;# 
   883   0004A9                     PIE11           equ	1193	;# 
   884   0004AA                     PIE12           equ	1194	;# 
   885   0004AB                     PIE13           equ	1195	;# 
   886   0004AC                     PIE14           equ	1196	;# 
   887   0004AD                     PIE15           equ	1197	;# 
   888   0004AE                     PIR0            equ	1198	;# 
   889   0004AF                     PIR1            equ	1199	;# 
   890   0004B0                     PIR2            equ	1200	;# 
   891   0004B1                     PIR3            equ	1201	;# 
   892   0004B2                     PIR4            equ	1202	;# 
   893   0004B3                     PIR5            equ	1203	;# 
   894   0004B4                     PIR6            equ	1204	;# 
   895   0004B5                     PIR7            equ	1205	;# 
   896   0004B6                     PIR8            equ	1206	;# 
   897   0004B7                     PIR9            equ	1207	;# 
   898   0004B8                     PIR10           equ	1208	;# 
   899   0004B9                     PIR11           equ	1209	;# 
   900   0004BA                     PIR12           equ	1210	;# 
   901   0004BB                     PIR13           equ	1211	;# 
   902   0004BC                     PIR14           equ	1212	;# 
   903   0004BD                     PIR15           equ	1213	;# 
   904   0004BE                     LATA            equ	1214	;# 
   905   0004BF                     LATB            equ	1215	;# 
   906   0004C0                     LATC            equ	1216	;# 
   907   0004C1                     LATD            equ	1217	;# 
   908   0004C2                     LATE            equ	1218	;# 
   909   0004C3                     LATF            equ	1219	;# 
   910   0004C6                     TRISA           equ	1222	;# 
   911   0004C7                     TRISB           equ	1223	;# 
   912   0004C8                     TRISC           equ	1224	;# 
   913   0004C9                     TRISD           equ	1225	;# 
   914   0004CA                     TRISE           equ	1226	;# 
   915   0004CB                     TRISF           equ	1227	;# 
   916   0004CE                     PORTA           equ	1230	;# 
   917   0004CF                     PORTB           equ	1231	;# 
   918   0004D0                     PORTC           equ	1232	;# 
   919   0004D1                     PORTD           equ	1233	;# 
   920   0004D2                     PORTE           equ	1234	;# 
   921   0004D3                     PORTF           equ	1235	;# 
   922   0004D6                     INTCON0         equ	1238	;# 
   923   0004D7                     INTCON1         equ	1239	;# 
   924   0004D8                     STATUS          equ	1240	;# 
   925   0004D9                     FSR2            equ	1241	;# 
   926   0004D9                     FSR2L           equ	1241	;# 
   927   0004DA                     FSR2H           equ	1242	;# 
   928   0004DB                     PLUSW2          equ	1243	;# 
   929   0004DC                     PREINC2         equ	1244	;# 
   930   0004DD                     POSTDEC2        equ	1245	;# 
   931   0004DE                     POSTINC2        equ	1246	;# 
   932   0004DF                     INDF2           equ	1247	;# 
   933   0004E0                     BSR             equ	1248	;# 
   934   0004E1                     FSR1            equ	1249	;# 
   935   0004E1                     FSR1L           equ	1249	;# 
   936   0004E2                     FSR1H           equ	1250	;# 
   937   0004E3                     PLUSW1          equ	1251	;# 
   938   0004E4                     PREINC1         equ	1252	;# 
   939   0004E5                     POSTDEC1        equ	1253	;# 
   940   0004E6                     POSTINC1        equ	1254	;# 
   941   0004E7                     INDF1           equ	1255	;# 
   942   0004E8                     WREG            equ	1256	;# 
   943   0004E9                     FSR0            equ	1257	;# 
   944   0004E9                     FSR0L           equ	1257	;# 
   945   0004EA                     FSR0H           equ	1258	;# 
   946   0004EB                     PLUSW0          equ	1259	;# 
   947   0004EC                     PREINC0         equ	1260	;# 
   948   0004ED                     POSTDEC0        equ	1261	;# 
   949   0004EE                     POSTINC0        equ	1262	;# 
   950   0004EF                     INDF0           equ	1263	;# 
   951   0004F0                     PCON0           equ	1264	;# 
   952   0004F1                     PCON1           equ	1265	;# 
   953   0004F2                     CPUDOZE         equ	1266	;# 
   954   0004F3                     PROD            equ	1267	;# 
   955   0004F3                     PRODL           equ	1267	;# 
   956   0004F4                     PRODH           equ	1268	;# 
   957   0004F5                     TABLAT          equ	1269	;# 
   958   0004F6                     TBLPTR          equ	1270	;# 
   959   0004F6                     TBLPTRL         equ	1270	;# 
   960   0004F7                     TBLPTRH         equ	1271	;# 
   961   0004F8                     TBLPTRU         equ	1272	;# 
   962   0004F9                     PCLAT           equ	1273	;# 
   963   0004F9                     PCL             equ	1273	;# 
   964   0004FA                     PCLATH          equ	1274	;# 
   965   0004FB                     PCLATU          equ	1275	;# 
   966   0004FC                     STKPTR          equ	1276	;# 
   967   0004FD                     TOS             equ	1277	;# 
   968   0004FD                     TOSL            equ	1277	;# 
   969   0004FE                     TOSH            equ	1278	;# 
   970   0004FF                     TOSU            equ	1279	;# 
   971   000039                     CLKRCON         equ	57	;# 
   972   00003A                     CLKRCLK         equ	58	;# 
   973   000040                     NVMCON0         equ	64	;# 
   974   000041                     NVMCON1         equ	65	;# 
   975   000042                     NVMLOCK         equ	66	;# 
   976   000043                     NVMADR          equ	67	;# 
   977   000043                     NVMADRL         equ	67	;# 
   978   000044                     NVMADRH         equ	68	;# 
   979   000045                     NVMADRU         equ	69	;# 
   980   000046                     NVMDAT          equ	70	;# 
   981   000046                     NVMDATL         equ	70	;# 
   982   000047                     NVMDATH         equ	71	;# 
   983   000048                     VREGCON         equ	72	;# 
   984   000049                     BORCON          equ	73	;# 
   985   00004A                     HLVDCON0        equ	74	;# 
   986   00004B                     HLVDCON1        equ	75	;# 
   987   00004C                     ZCDCON          equ	76	;# 
   988   000060                     PMD0            equ	96	;# 
   989   000061                     PMD1            equ	97	;# 
   990   000063                     PMD3            equ	99	;# 
   991   000064                     PMD4            equ	100	;# 
   992   000065                     PMD5            equ	101	;# 
   993   000066                     PMD6            equ	102	;# 
   994   000067                     PMD7            equ	103	;# 
   995   000068                     PMD8            equ	104	;# 
   996   00006A                     MD1CON0         equ	106	;# 
   997   00006B                     MD1CON1         equ	107	;# 
   998   00006C                     MD1SRC          equ	108	;# 
   999   00006D                     MD1CARL         equ	109	;# 
  1000   00006E                     MD1CARH         equ	110	;# 
  1001   00006F                     CMOUT           equ	111	;# 
  1002   000070                     CM1CON0         equ	112	;# 
  1003   000071                     CM1CON1         equ	113	;# 
  1004   000072                     CM1NCH          equ	114	;# 
  1005   000073                     CM1PCH          equ	115	;# 
  1006   000074                     CM2CON0         equ	116	;# 
  1007   000075                     CM2CON1         equ	117	;# 
  1008   000076                     CM2NCH          equ	118	;# 
  1009   000077                     CM2PCH          equ	119	;# 
  1010   000078                     WDTCON0         equ	120	;# 
  1011   000079                     WDTCON1         equ	121	;# 
  1012   00007A                     WDTPS           equ	122	;# 
  1013   00007A                     WDTPSL          equ	122	;# 
  1014   00007B                     WDTPSH          equ	123	;# 
  1015   00007C                     WDTTMR          equ	124	;# 
  1016   00007D                     DAC1DAT         equ	125	;# 
  1017   00007D                     DAC1DATL        equ	125	;# 
  1018   00007F                     DAC1CON         equ	127	;# 
  1019   000080                     SPI1RXB         equ	128	;# 
  1020   000081                     SPI1TXB         equ	129	;# 
  1021   000082                     SPI1TCNT        equ	130	;# 
  1022   000082                     SPI1TCNTL       equ	130	;# 
  1023   000083                     SPI1TCNTH       equ	131	;# 
  1024   000084                     SPI1CON0        equ	132	;# 
  1025   000085                     SPI1CON1        equ	133	;# 
  1026   000086                     SPI1CON2        equ	134	;# 
  1027   000087                     SPI1STATUS      equ	135	;# 
  1028   000088                     SPI1TWIDTH      equ	136	;# 
  1029   000089                     SPI1BAUD        equ	137	;# 
  1030   00008A                     SPI1INTF        equ	138	;# 
  1031   00008B                     SPI1INTE        equ	139	;# 
  1032   00008C                     SPI1CLK         equ	140	;# 
  1033   00008D                     SPI2RXB         equ	141	;# 
  1034   00008E                     SPI2TXB         equ	142	;# 
  1035   00008F                     SPI2TCNT        equ	143	;# 
  1036   00008F                     SPI2TCNTL       equ	143	;# 
  1037   000090                     SPI2TCNTH       equ	144	;# 
  1038   000091                     SPI2CON0        equ	145	;# 
  1039   000092                     SPI2CON1        equ	146	;# 
  1040   000093                     SPI2CON2        equ	147	;# 
  1041   000094                     SPI2STATUS      equ	148	;# 
  1042   000095                     SPI2TWIDTH      equ	149	;# 
  1043   000096                     SPI2BAUD        equ	150	;# 
  1044   000097                     SPI2INTF        equ	151	;# 
  1045   000098                     SPI2INTE        equ	152	;# 
  1046   000099                     SPI2CLK         equ	153	;# 
  1047   0000AC                     ACTCON          equ	172	;# 
  1048   0000AD                     OSCCON1         equ	173	;# 
  1049   0000AE                     OSCCON2         equ	174	;# 
  1050   0000AF                     OSCCON3         equ	175	;# 
  1051   0000B0                     OSCTUNE         equ	176	;# 
  1052   0000B1                     OSCFRQ          equ	177	;# 
  1053   0000B1                     OSCFREQ         equ	177	;# 
  1054   0000B2                     OSCSTAT         equ	178	;# 
  1055   0000B2                     OSCSTAT1        equ	178	;# 
  1056   0000B3                     OSCEN           equ	179	;# 
  1057   0000B4                     PRLOCK          equ	180	;# 
  1058   0000B5                     SCANPR          equ	181	;# 
  1059   0000B6                     DMA1PR          equ	182	;# 
  1060   0000B7                     DMA2PR          equ	183	;# 
  1061   0000B8                     DMA3PR          equ	184	;# 
  1062   0000B9                     DMA4PR          equ	185	;# 
  1063   0000BA                     DMA5PR          equ	186	;# 
  1064   0000BB                     DMA6PR          equ	187	;# 
  1065   0000BE                     MAINPR          equ	190	;# 
  1066   0000BF                     ISRPR           equ	191	;# 
  1067   0000D4                     CLCDATA         equ	212	;# 
  1068   0000D5                     CLCSELECT       equ	213	;# 
  1069   0000D6                     CLCnCON         equ	214	;# 
  1070   0000D7                     CLCnPOL         equ	215	;# 
  1071   0000D8                     CLCnSEL0        equ	216	;# 
  1072   0000D9                     CLCnSEL1        equ	217	;# 
  1073   0000DA                     CLCnSEL2        equ	218	;# 
  1074   0000DB                     CLCnSEL3        equ	219	;# 
  1075   0000DC                     CLCnGLS0        equ	220	;# 
  1076   0000DD                     CLCnGLS1        equ	221	;# 
  1077   0000DE                     CLCnGLS2        equ	222	;# 
  1078   0000DF                     CLCnGLS3        equ	223	;# 
  1079   0000E8                     DMASELECT       equ	232	;# 
  1080   0000E9                     DMAnBUF         equ	233	;# 
  1081   0000EA                     DMAnDCNT        equ	234	;# 
  1082   0000EA                     DMAnDCNTL       equ	234	;# 
  1083   0000EB                     DMAnDCNTH       equ	235	;# 
  1084   0000EC                     DMAnDPTR        equ	236	;# 
  1085   0000EC                     DMAnDPTRL       equ	236	;# 
  1086   0000ED                     DMAnDPTRH       equ	237	;# 
  1087   0000EE                     DMAnDSZ         equ	238	;# 
  1088   0000EE                     DMAnDSZL        equ	238	;# 
  1089   0000EF                     DMAnDSZH        equ	239	;# 
  1090   0000F0                     DMAnDSA         equ	240	;# 
  1091   0000F0                     DMAnDSAL        equ	240	;# 
  1092   0000F1                     DMAnDSAH        equ	241	;# 
  1093   0000F2                     DMAnSCNT        equ	242	;# 
  1094   0000F2                     DMAnSCNTL       equ	242	;# 
  1095   0000F3                     DMAnSCNTH       equ	243	;# 
  1096   0000F4                     DMAnSPTR        equ	244	;# 
  1097   0000F4                     DMAnSPTRL       equ	244	;# 
  1098   0000F5                     DMAnSPTRH       equ	245	;# 
  1099   0000F6                     DMAnSPTRU       equ	246	;# 
  1100   0000F7                     DMAnSSZ         equ	247	;# 
  1101   0000F7                     DMAnSSZL        equ	247	;# 
  1102   0000F8                     DMAnSSZH        equ	248	;# 
  1103   0000F9                     DMAnSSA         equ	249	;# 
  1104   0000F9                     DMAnSSAL        equ	249	;# 
  1105   0000FA                     DMAnSSAH        equ	250	;# 
  1106   0000FB                     DMAnSSAU        equ	251	;# 
  1107   0000FC                     DMAnCON0        equ	252	;# 
  1108   0000FD                     DMAnCON1        equ	253	;# 
  1109   0000FE                     DMAnAIRQ        equ	254	;# 
  1110   0000FF                     DMAnSIRQ        equ	255	;# 
  1111   000200                     PPSLOCK         equ	512	;# 
  1112   000201                     RA0PPS          equ	513	;# 
  1113   000202                     RA1PPS          equ	514	;# 
  1114   000203                     RA2PPS          equ	515	;# 
  1115   000204                     RA3PPS          equ	516	;# 
  1116   000205                     RA4PPS          equ	517	;# 
  1117   000206                     RA5PPS          equ	518	;# 
  1118   000207                     RA6PPS          equ	519	;# 
  1119   000208                     RA7PPS          equ	520	;# 
  1120   000209                     RB0PPS          equ	521	;# 
  1121   00020A                     RB1PPS          equ	522	;# 
  1122   00020B                     RB2PPS          equ	523	;# 
  1123   00020C                     RB3PPS          equ	524	;# 
  1124   00020D                     RB4PPS          equ	525	;# 
  1125   00020E                     RB5PPS          equ	526	;# 
  1126   00020F                     RB6PPS          equ	527	;# 
  1127   000210                     RB7PPS          equ	528	;# 
  1128   000211                     RC0PPS          equ	529	;# 
  1129   000212                     RC1PPS          equ	530	;# 
  1130   000213                     RC2PPS          equ	531	;# 
  1131   000214                     RC3PPS          equ	532	;# 
  1132   000215                     RC4PPS          equ	533	;# 
  1133   000216                     RC5PPS          equ	534	;# 
  1134   000217                     RC6PPS          equ	535	;# 
  1135   000218                     RC7PPS          equ	536	;# 
  1136   000219                     RD0PPS          equ	537	;# 
  1137   00021A                     RD1PPS          equ	538	;# 
  1138   00021B                     RD2PPS          equ	539	;# 
  1139   00021C                     RD3PPS          equ	540	;# 
  1140   00021D                     RD4PPS          equ	541	;# 
  1141   00021E                     RD5PPS          equ	542	;# 
  1142   00021F                     RD6PPS          equ	543	;# 
  1143   000220                     RD7PPS          equ	544	;# 
  1144   000221                     RE0PPS          equ	545	;# 
  1145   000222                     RE1PPS          equ	546	;# 
  1146   000223                     RE2PPS          equ	547	;# 
  1147   000229                     RF0PPS          equ	553	;# 
  1148   00022A                     RF1PPS          equ	554	;# 
  1149   00022B                     RF2PPS          equ	555	;# 
  1150   00022C                     RF3PPS          equ	556	;# 
  1151   00022D                     RF4PPS          equ	557	;# 
  1152   00022E                     RF5PPS          equ	558	;# 
  1153   00022F                     RF6PPS          equ	559	;# 
  1154   000230                     RF7PPS          equ	560	;# 
  1155   00023E                     INT0PPS         equ	574	;# 
  1156   00023F                     INT1PPS         equ	575	;# 
  1157   000240                     INT2PPS         equ	576	;# 
  1158   000241                     T0CKIPPS        equ	577	;# 
  1159   000242                     T1CKIPPS        equ	578	;# 
  1160   000243                     T1GPPS          equ	579	;# 
  1161   000244                     T3CKIPPS        equ	580	;# 
  1162   000245                     T3GPPS          equ	581	;# 
  1163   000246                     T5CKIPPS        equ	582	;# 
  1164   000247                     T5GPPS          equ	583	;# 
  1165   000248                     T2INPPS         equ	584	;# 
  1166   000249                     T4INPPS         equ	585	;# 
  1167   00024A                     T6INPPS         equ	586	;# 
  1168   00024F                     CCP1PPS         equ	591	;# 
  1169   000250                     CCP2PPS         equ	592	;# 
  1170   000251                     CCP3PPS         equ	593	;# 
  1171   000253                     PWM1ERSPPS      equ	595	;# 
  1172   000254                     PWM2ERSPPS      equ	596	;# 
  1173   000255                     PWM3ERSPPS      equ	597	;# 
  1174   000257                     PWMIN0PPS       equ	599	;# 
  1175   000258                     PWMIN1PPS       equ	600	;# 
  1176   000259                     SMT1WINPPS      equ	601	;# 
  1177   00025A                     SMT1SIGPPS      equ	602	;# 
  1178   00025B                     CWG1PPS         equ	603	;# 
  1179   00025B                     CWG1INPPS       equ	603	;# 
  1180   00025C                     CWG2PPS         equ	604	;# 
  1181   00025C                     CWG2INPPS       equ	604	;# 
  1182   00025D                     CWG3PPS         equ	605	;# 
  1183   00025D                     CWG3INPPS       equ	605	;# 
  1184   00025E                     MD1CARLPPS      equ	606	;# 
  1185   00025E                     MDCARLPPS       equ	606	;# 
  1186   00025F                     MD1CARHPPS      equ	607	;# 
  1187   00025F                     MDCARHPPS       equ	607	;# 
  1188   000260                     MD1SRCPPS       equ	608	;# 
  1189   000260                     MDSRCPPS        equ	608	;# 
  1190   000261                     CLCIN0PPS       equ	609	;# 
  1191   000262                     CLCIN1PPS       equ	610	;# 
  1192   000263                     CLCIN2PPS       equ	611	;# 
  1193   000264                     CLCIN3PPS       equ	612	;# 
  1194   000265                     CLCIN4PPS       equ	613	;# 
  1195   000266                     CLCIN5PPS       equ	614	;# 
  1196   000267                     CLCIN6PPS       equ	615	;# 
  1197   000268                     CLCIN7PPS       equ	616	;# 
  1198   000269                     ADACTPPS        equ	617	;# 
  1199   00026A                     SPI1SCKPPS      equ	618	;# 
  1200   00026B                     SPI1SDIPPS      equ	619	;# 
  1201   00026C                     SPI1SSPPS       equ	620	;# 
  1202   00026D                     SPI2SCKPPS      equ	621	;# 
  1203   00026E                     SPI2SDIPPS      equ	622	;# 
  1204   00026F                     SPI2SSPPS       equ	623	;# 
  1205   000270                     I2C1SDAPPS      equ	624	;# 
  1206   000271                     I2C1SCLPPS      equ	625	;# 
  1207   000272                     U1RXPPS         equ	626	;# 
  1208   000273                     U1CTSPPS        equ	627	;# 
  1209   000274                     U2RXPPS         equ	628	;# 
  1210   000275                     U2CTSPPS        equ	629	;# 
  1211   000276                     U3RXPPS         equ	630	;# 
  1212   000277                     U3CTSPPS        equ	631	;# 
  1213   000278                     U4RXPPS         equ	632	;# 
  1214   000279                     U4CTSPPS        equ	633	;# 
  1215   00027A                     U5RXPPS         equ	634	;# 
  1216   00027B                     U5CTSPPS        equ	635	;# 
  1217   000286                     RC4I2C          equ	646	;# 
  1218   000287                     RC3I2C          equ	647	;# 
  1219   000288                     RB2I2C          equ	648	;# 
  1220   000289                     RB1I2C          equ	649	;# 
  1221   00028B                     I2C1RXB         equ	651	;# 
  1222   00028C                     I2C1TXB         equ	652	;# 
  1223   00028D                     I2C1CNT         equ	653	;# 
  1224   00028E                     I2C1ADB0        equ	654	;# 
  1225   00028F                     I2C1ADB1        equ	655	;# 
  1226   000290                     I2C1ADR0        equ	656	;# 
  1227   000291                     I2C1ADR1        equ	657	;# 
  1228   000292                     I2C1ADR2        equ	658	;# 
  1229   000293                     I2C1ADR3        equ	659	;# 
  1230   000294                     I2C1CON0        equ	660	;# 
  1231   000295                     I2C1CON1        equ	661	;# 
  1232   000296                     I2C1CON2        equ	662	;# 
  1233   000297                     I2C1ERR         equ	663	;# 
  1234   000298                     I2C1STAT0       equ	664	;# 
  1235   000299                     I2C1STAT1       equ	665	;# 
  1236   00029A                     I2C1PIR         equ	666	;# 
  1237   00029B                     I2C1PIE         equ	667	;# 
  1238   00029C                     I2C1CLK         equ	668	;# 
  1239   00029D                     I2C1BTO         equ	669	;# 
  1240   0002A1                     U1RXB           equ	673	;# 
  1241   0002A1                     U1RXBL          equ	673	;# 
  1242   0002A2                     U1RXCHK         equ	674	;# 
  1243   0002A3                     U1TXB           equ	675	;# 
  1244   0002A3                     U1TXBL          equ	675	;# 
  1245   0002A4                     U1TXCHK         equ	676	;# 
  1246   0002A5                     U1P1            equ	677	;# 
  1247   0002A5                     U1P1L           equ	677	;# 
  1248   0002A6                     U1P1H           equ	678	;# 
  1249   0002A7                     U1P2            equ	679	;# 
  1250   0002A7                     U1P2L           equ	679	;# 
  1251   0002A8                     U1P2H           equ	680	;# 
  1252   0002A9                     U1P3            equ	681	;# 
  1253   0002A9                     U1P3L           equ	681	;# 
  1254   0002AA                     U1P3H           equ	682	;# 
  1255   0002AB                     U1CON0          equ	683	;# 
  1256   0002AC                     U1CON1          equ	684	;# 
  1257   0002AD                     U1CON2          equ	685	;# 
  1258   0002AE                     U1BRG           equ	686	;# 
  1259   0002AE                     U1BRGL          equ	686	;# 
  1260   0002AF                     U1BRGH          equ	687	;# 
  1261   0002B0                     U1FIFO          equ	688	;# 
  1262   0002B1                     U1UIR           equ	689	;# 
  1263   0002B2                     U1ERRIR         equ	690	;# 
  1264   0002B3                     U1ERRIE         equ	691	;# 
  1265   0002B4                     U2RXB           equ	692	;# 
  1266   0002B4                     U2RXBL          equ	692	;# 
  1267   0002B6                     U2TXB           equ	694	;# 
  1268   0002B6                     U2TXBL          equ	694	;# 
  1269   0002B8                     U2P1            equ	696	;# 
  1270   0002B8                     U2P1L           equ	696	;# 
  1271   0002BA                     U2P2            equ	698	;# 
  1272   0002BA                     U2P2L           equ	698	;# 
  1273   0002BC                     U2P3            equ	700	;# 
  1274   0002BC                     U2P3L           equ	700	;# 
  1275   0002BE                     U2CON0          equ	702	;# 
  1276   0002BF                     U2CON1          equ	703	;# 
  1277   0002C0                     U2CON2          equ	704	;# 
  1278   0002C1                     U2BRG           equ	705	;# 
  1279   0002C1                     U2BRGL          equ	705	;# 
  1280   0002C2                     U2BRGH          equ	706	;# 
  1281   0002C3                     U2FIFO          equ	707	;# 
  1282   0002C4                     U2UIR           equ	708	;# 
  1283   0002C5                     U2ERRIR         equ	709	;# 
  1284   0002C6                     U2ERRIE         equ	710	;# 
  1285   0002C7                     U3RXB           equ	711	;# 
  1286   0002C7                     U3RXBL          equ	711	;# 
  1287   0002C9                     U3TXB           equ	713	;# 
  1288   0002C9                     U3TXBL          equ	713	;# 
  1289   0002CB                     U3P1            equ	715	;# 
  1290   0002CB                     U3P1L           equ	715	;# 
  1291   0002CD                     U3P2            equ	717	;# 
  1292   0002CD                     U3P2L           equ	717	;# 
  1293   0002CF                     U3P3            equ	719	;# 
  1294   0002CF                     U3P3L           equ	719	;# 
  1295   0002D1                     U3CON0          equ	721	;# 
  1296   0002D2                     U3CON1          equ	722	;# 
  1297   0002D3                     U3CON2          equ	723	;# 
  1298   0002D4                     U3BRG           equ	724	;# 
  1299   0002D4                     U3BRGL          equ	724	;# 
  1300   0002D5                     U3BRGH          equ	725	;# 
  1301   0002D6                     U3FIFO          equ	726	;# 
  1302   0002D7                     U3UIR           equ	727	;# 
  1303   0002D8                     U3ERRIR         equ	728	;# 
  1304   0002D9                     U3ERRIE         equ	729	;# 
  1305   0002DA                     U4RXB           equ	730	;# 
  1306   0002DA                     U4RXBL          equ	730	;# 
  1307   0002DC                     U4TXB           equ	732	;# 
  1308   0002DC                     U4TXBL          equ	732	;# 
  1309   0002DE                     U4P1            equ	734	;# 
  1310   0002DE                     U4P1L           equ	734	;# 
  1311   0002E0                     U4P2            equ	736	;# 
  1312   0002E0                     U4P2L           equ	736	;# 
  1313   0002E2                     U4P3            equ	738	;# 
  1314   0002E2                     U4P3L           equ	738	;# 
  1315   0002E4                     U4CON0          equ	740	;# 
  1316   0002E5                     U4CON1          equ	741	;# 
  1317   0002E6                     U4CON2          equ	742	;# 
  1318   0002E7                     U4BRG           equ	743	;# 
  1319   0002E7                     U4BRGL          equ	743	;# 
  1320   0002E8                     U4BRGH          equ	744	;# 
  1321   0002E9                     U4FIFO          equ	745	;# 
  1322   0002EA                     U4UIR           equ	746	;# 
  1323   0002EB                     U4ERRIR         equ	747	;# 
  1324   0002EC                     U4ERRIE         equ	748	;# 
  1325   0002ED                     U5RXB           equ	749	;# 
  1326   0002ED                     U5RXBL          equ	749	;# 
  1327   0002EF                     U5TXB           equ	751	;# 
  1328   0002EF                     U5TXBL          equ	751	;# 
  1329   0002F1                     U5P1            equ	753	;# 
  1330   0002F1                     U5P1L           equ	753	;# 
  1331   0002F3                     U5P2            equ	755	;# 
  1332   0002F3                     U5P2L           equ	755	;# 
  1333   0002F5                     U5P3            equ	757	;# 
  1334   0002F5                     U5P3L           equ	757	;# 
  1335   0002F7                     U5CON0          equ	759	;# 
  1336   0002F8                     U5CON1          equ	760	;# 
  1337   0002F9                     U5CON2          equ	761	;# 
  1338   0002FA                     U5BRG           equ	762	;# 
  1339   0002FA                     U5BRGL          equ	762	;# 
  1340   0002FB                     U5BRGH          equ	763	;# 
  1341   0002FC                     U5FIFO          equ	764	;# 
  1342   0002FD                     U5UIR           equ	765	;# 
  1343   0002FE                     U5ERRIR         equ	766	;# 
  1344   0002FF                     U5ERRIE         equ	767	;# 
  1345   000300                     SMT1TMR         equ	768	;# 
  1346   000300                     SMT1TMRL        equ	768	;# 
  1347   000301                     SMT1TMRH        equ	769	;# 
  1348   000302                     SMT1TMRU        equ	770	;# 
  1349   000303                     SMT1CPR         equ	771	;# 
  1350   000303                     SMT1CPRL        equ	771	;# 
  1351   000304                     SMT1CPRH        equ	772	;# 
  1352   000305                     SMT1CPRU        equ	773	;# 
  1353   000306                     SMT1CPW         equ	774	;# 
  1354   000306                     SMT1CPWL        equ	774	;# 
  1355   000307                     SMT1CPWH        equ	775	;# 
  1356   000308                     SMT1CPWU        equ	776	;# 
  1357   000309                     SMT1PR          equ	777	;# 
  1358   000309                     SMT1PRL         equ	777	;# 
  1359   00030A                     SMT1PRH         equ	778	;# 
  1360   00030B                     SMT1PRU         equ	779	;# 
  1361   00030C                     SMT1CON0        equ	780	;# 
  1362   00030D                     SMT1CON1        equ	781	;# 
  1363   00030E                     SMT1STAT        equ	782	;# 
  1364   00030F                     SMT1CLK         equ	783	;# 
  1365   000310                     SMT1SIG         equ	784	;# 
  1366   000311                     SMT1WIN         equ	785	;# 
  1367   000318                     TMR0L           equ	792	;# 
  1368   000318                     TMR0            equ	792	;# 
  1369   000319                     TMR0H           equ	793	;# 
  1370   000319                     PR0             equ	793	;# 
  1371   00031A                     T0CON0          equ	794	;# 
  1372   00031B                     T0CON1          equ	795	;# 
  1373   00031C                     TMR1            equ	796	;# 
  1374   00031C                     TMR1L           equ	796	;# 
  1375   00031D                     TMR1H           equ	797	;# 
  1376   00031E                     T1CON           equ	798	;# 
  1377   00031E                     TMR1CON         equ	798	;# 
  1378   00031F                     T1GCON          equ	799	;# 
  1379   00031F                     TMR1GCON        equ	799	;# 
  1380   000320                     T1GATE          equ	800	;# 
  1381   000320                     TMR1GATE        equ	800	;# 
  1382   000321                     T1CLK           equ	801	;# 
  1383   000321                     TMR1CLK         equ	801	;# 
  1384   000321                     PR1             equ	801	;# 
  1385   000322                     T2TMR           equ	802	;# 
  1386   000322                     TMR2            equ	802	;# 
  1387   000323                     T2PR            equ	803	;# 
  1388   000323                     PR2             equ	803	;# 
  1389   000324                     T2CON           equ	804	;# 
  1390   000325                     T2HLT           equ	805	;# 
  1391   000326                     T2CLKCON        equ	806	;# 
  1392   000326                     T2CLK           equ	806	;# 
  1393   000327                     T2RST           equ	807	;# 
  1394   000328                     TMR3            equ	808	;# 
  1395   000328                     TMR3L           equ	808	;# 
  1396   000329                     TMR3H           equ	809	;# 
  1397   00032A                     T3CON           equ	810	;# 
  1398   00032A                     TMR3CON         equ	810	;# 
  1399   00032B                     T3GCON          equ	811	;# 
  1400   00032B                     TMR3GCON        equ	811	;# 
  1401   00032C                     T3GATE          equ	812	;# 
  1402   00032C                     TMR3GATE        equ	812	;# 
  1403   00032D                     T3CLK           equ	813	;# 
  1404   00032D                     TMR3CLK         equ	813	;# 
  1405   00032D                     PR3             equ	813	;# 
  1406   00032E                     T4TMR           equ	814	;# 
  1407   00032E                     TMR4            equ	814	;# 
  1408   00032F                     T4PR            equ	815	;# 
  1409   00032F                     PR4             equ	815	;# 
  1410   000330                     T4CON           equ	816	;# 
  1411   000331                     T4HLT           equ	817	;# 
  1412   000332                     T4CLKCON        equ	818	;# 
  1413   000332                     T4CLK           equ	818	;# 
  1414   000333                     T4RST           equ	819	;# 
  1415   000334                     TMR5            equ	820	;# 
  1416   000334                     TMR5L           equ	820	;# 
  1417   000335                     TMR5H           equ	821	;# 
  1418   000336                     T5CON           equ	822	;# 
  1419   000336                     TMR5CON         equ	822	;# 
  1420   000337                     T5GCON          equ	823	;# 
  1421   000337                     TMR5GCON        equ	823	;# 
  1422   000338                     T5GATE          equ	824	;# 
  1423   000338                     TMR5GATE        equ	824	;# 
  1424   000339                     T5CLK           equ	825	;# 
  1425   000339                     TMR5CLK         equ	825	;# 
  1426   000339                     PR5             equ	825	;# 
  1427   00033A                     T6TMR           equ	826	;# 
  1428   00033A                     TMR6            equ	826	;# 
  1429   00033B                     T6PR            equ	827	;# 
  1430   00033B                     PR6             equ	827	;# 
  1431   00033C                     T6CON           equ	828	;# 
  1432   00033D                     T6HLT           equ	829	;# 
  1433   00033E                     T6CLKCON        equ	830	;# 
  1434   00033E                     T6CLK           equ	830	;# 
  1435   00033F                     T6RST           equ	831	;# 
  1436   000340                     CCPR1           equ	832	;# 
  1437   000340                     CCPR1L          equ	832	;# 
  1438   000341                     CCPR1H          equ	833	;# 
  1439   000342                     CCP1CON         equ	834	;# 
  1440   000343                     CCP1CAP         equ	835	;# 
  1441   000344                     CCPR2           equ	836	;# 
  1442   000344                     CCPR2L          equ	836	;# 
  1443   000345                     CCPR2H          equ	837	;# 
  1444   000346                     CCP2CON         equ	838	;# 
  1445   000347                     CCP2CAP         equ	839	;# 
  1446   000348                     CCPR3           equ	840	;# 
  1447   000348                     CCPR3L          equ	840	;# 
  1448   000349                     CCPR3H          equ	841	;# 
  1449   00034A                     CCP3CON         equ	842	;# 
  1450   00034B                     CCP3CAP         equ	843	;# 
  1451   00034C                     CCPTMRS0        equ	844	;# 
  1452   00034F                     CRCDATA         equ	847	;# 
  1453   00034F                     CRCDATL         equ	847	;# 
  1454   000350                     CRCDATH         equ	848	;# 
  1455   000351                     CRCACC          equ	849	;# 
  1456   000351                     CRCACCL         equ	849	;# 
  1457   000352                     CRCACCH         equ	850	;# 
  1458   000353                     CRCSHFT         equ	851	;# 
  1459   000353                     CRCSHIFTL       equ	851	;# 
  1460   000354                     CRCSHIFTH       equ	852	;# 
  1461   000355                     CRCXOR          equ	853	;# 
  1462   000355                     CRCXORL         equ	853	;# 
  1463   000356                     CRCXORH         equ	854	;# 
  1464   000357                     CRCCON0         equ	855	;# 
  1465   000358                     CRCCON1         equ	856	;# 
  1466   00035A                     SCANLADR        equ	858	;# 
  1467   00035A                     SCANLADRL       equ	858	;# 
  1468   00035B                     SCANLADRH       equ	859	;# 
  1469   00035C                     SCANLADRU       equ	860	;# 
  1470   00035D                     SCANHADR        equ	861	;# 
  1471   00035D                     SCANHADRL       equ	861	;# 
  1472   00035E                     SCANHADRH       equ	862	;# 
  1473   00035F                     SCANHADRU       equ	863	;# 
  1474   000360                     SCANCON0        equ	864	;# 
  1475   000361                     SCANTRIG        equ	865	;# 
  1476   000362                     IPR0            equ	866	;# 
  1477   000363                     IPR1            equ	867	;# 
  1478   000364                     IPR2            equ	868	;# 
  1479   000365                     IPR3            equ	869	;# 
  1480   000366                     IPR4            equ	870	;# 
  1481   000367                     IPR5            equ	871	;# 
  1482   000368                     IPR6            equ	872	;# 
  1483   000369                     IPR7            equ	873	;# 
  1484   00036A                     IPR8            equ	874	;# 
  1485   00036B                     IPR9            equ	875	;# 
  1486   00036C                     IPR10           equ	876	;# 
  1487   00036D                     IPR11           equ	877	;# 
  1488   00036E                     IPR12           equ	878	;# 
  1489   00036F                     IPR13           equ	879	;# 
  1490   000370                     IPR14           equ	880	;# 
  1491   000371                     IPR15           equ	881	;# 
  1492   000373                     STATUS_CSHAD    equ	883	;# 
  1493   000374                     WREG_CSHAD      equ	884	;# 
  1494   000375                     BSR_CSHAD       equ	885	;# 
  1495   000376                     SHADCON         equ	886	;# 
  1496   000377                     STATUS_SHAD     equ	887	;# 
  1497   000378                     WREG_SHAD       equ	888	;# 
  1498   000379                     BSR_SHAD        equ	889	;# 
  1499   00037A                     PCLATH_SHAD     equ	890	;# 
  1500   00037B                     PCLATU_SHAD     equ	891	;# 
  1501   00037C                     FSR0SH          equ	892	;# 
  1502   00037C                     FSR0L_SHAD      equ	892	;# 
  1503   00037D                     FSR0H_SHAD      equ	893	;# 
  1504   00037E                     FSR1SH          equ	894	;# 
  1505   00037E                     FSR1L_SHAD      equ	894	;# 
  1506   00037F                     FSR1H_SHAD      equ	895	;# 
  1507   000380                     FSR2SH          equ	896	;# 
  1508   000380                     FSR2L_SHAD      equ	896	;# 
  1509   000381                     FSR2H_SHAD      equ	897	;# 
  1510   000382                     PRODSH          equ	898	;# 
  1511   000382                     PRODL_SHAD      equ	898	;# 
  1512   000383                     PRODH_SHAD      equ	899	;# 
  1513   0003BC                     CWG1CLK         equ	956	;# 
  1514   0003BC                     CWG1CLKCON      equ	956	;# 
  1515   0003BD                     CWG1ISM         equ	957	;# 
  1516   0003BD                     CWG1DAT         equ	957	;# 
  1517   0003BE                     CWG1DBR         equ	958	;# 
  1518   0003BF                     CWG1DBF         equ	959	;# 
  1519   0003C0                     CWG1CON0        equ	960	;# 
  1520   0003C1                     CWG1CON1        equ	961	;# 
  1521   0003C2                     CWG1AS0         equ	962	;# 
  1522   0003C3                     CWG1AS1         equ	963	;# 
  1523   0003C4                     CWG1STR         equ	964	;# 
  1524   0003C5                     CWG2CLK         equ	965	;# 
  1525   0003C5                     CWG2CLKCON      equ	965	;# 
  1526   0003C6                     CWG2ISM         equ	966	;# 
  1527   0003C6                     CWG2DAT         equ	966	;# 
  1528   0003C7                     CWG2DBR         equ	967	;# 
  1529   0003C8                     CWG2DBF         equ	968	;# 
  1530   0003C9                     CWG2CON0        equ	969	;# 
  1531   0003CA                     CWG2CON1        equ	970	;# 
  1532   0003CB                     CWG2AS0         equ	971	;# 
  1533   0003CC                     CWG2AS1         equ	972	;# 
  1534   0003CD                     CWG2STR         equ	973	;# 
  1535   0003CE                     CWG3CLK         equ	974	;# 
  1536   0003CE                     CWG3CLKCON      equ	974	;# 
  1537   0003CF                     CWG3ISM         equ	975	;# 
  1538   0003CF                     CWG3DAT         equ	975	;# 
  1539   0003D0                     CWG3DBR         equ	976	;# 
  1540   0003D1                     CWG3DBF         equ	977	;# 
  1541   0003D2                     CWG3CON0        equ	978	;# 
  1542   0003D3                     CWG3CON1        equ	979	;# 
  1543   0003D4                     CWG3AS0         equ	980	;# 
  1544   0003D5                     CWG3AS1         equ	981	;# 
  1545   0003D6                     CWG3STR         equ	982	;# 
  1546   0003D7                     FVRCON          equ	983	;# 
  1547   0003D8                     ADCPCON         equ	984	;# 
  1548   0003D8                     ADCP            equ	984	;# 
  1549   0003D9                     ADLTH           equ	985	;# 
  1550   0003D9                     ADLTHL          equ	985	;# 
  1551   0003DA                     ADLTHH          equ	986	;# 
  1552   0003DB                     ADUTH           equ	987	;# 
  1553   0003DB                     ADUTHL          equ	987	;# 
  1554   0003DC                     ADUTHH          equ	988	;# 
  1555   0003DD                     ADERR           equ	989	;# 
  1556   0003DD                     ADERRL          equ	989	;# 
  1557   0003DE                     ADERRH          equ	990	;# 
  1558   0003DF                     ADSTPT          equ	991	;# 
  1559   0003DF                     ADSTPTL         equ	991	;# 
  1560   0003E0                     ADSTPTH         equ	992	;# 
  1561   0003E1                     ADFLTR          equ	993	;# 
  1562   0003E1                     ADFLTRL         equ	993	;# 
  1563   0003E2                     ADFLTRH         equ	994	;# 
  1564   0003E3                     ADACC           equ	995	;# 
  1565   0003E3                     ADACCL          equ	995	;# 
  1566   0003E4                     ADACCH          equ	996	;# 
  1567   0003E5                     ADACCU          equ	997	;# 
  1568   0003E6                     ADCNT           equ	998	;# 
  1569   0003E7                     ADRPT           equ	999	;# 
  1570   0003E8                     ADPREV          equ	1000	;# 
  1571   0003E8                     ADPREVL         equ	1000	;# 
  1572   0003E9                     ADPREVH         equ	1001	;# 
  1573   0003EA                     ADRES           equ	1002	;# 
  1574   0003EA                     ADRESL          equ	1002	;# 
  1575   0003EB                     ADRESH          equ	1003	;# 
  1576   0003EC                     ADPCH           equ	1004	;# 
  1577   0003EE                     ADACQ           equ	1006	;# 
  1578   0003EE                     ADACQL          equ	1006	;# 
  1579   0003EF                     ADACQH          equ	1007	;# 
  1580   0003F0                     ADCAP           equ	1008	;# 
  1581   0003F1                     ADPRE           equ	1009	;# 
  1582   0003F1                     ADPREL          equ	1009	;# 
  1583   0003F2                     ADPREH          equ	1010	;# 
  1584   0003F3                     ADCON0          equ	1011	;# 
  1585   0003F4                     ADCON1          equ	1012	;# 
  1586   0003F5                     ADCON2          equ	1013	;# 
  1587   0003F6                     ADCON3          equ	1014	;# 
  1588   0003F7                     ADSTAT          equ	1015	;# 
  1589   0003F8                     ADREF           equ	1016	;# 
  1590   0003F9                     ADACT           equ	1017	;# 
  1591   0003FA                     ADCLK           equ	1018	;# 
  1592   000400                     ANSELA          equ	1024	;# 
  1593   000401                     WPUA            equ	1025	;# 
  1594   000402                     ODCONA          equ	1026	;# 
  1595   000403                     SLRCONA         equ	1027	;# 
  1596   000404                     INLVLA          equ	1028	;# 
  1597   000405                     IOCAP           equ	1029	;# 
  1598   000406                     IOCAN           equ	1030	;# 
  1599   000407                     IOCAF           equ	1031	;# 
  1600   000408                     ANSELB          equ	1032	;# 
  1601   000409                     WPUB            equ	1033	;# 
  1602   00040A                     ODCONB          equ	1034	;# 
  1603   00040B                     SLRCONB         equ	1035	;# 
  1604   00040C                     INLVLB          equ	1036	;# 
  1605   00040D                     IOCBP           equ	1037	;# 
  1606   00040E                     IOCBN           equ	1038	;# 
  1607   00040F                     IOCBF           equ	1039	;# 
  1608   000410                     ANSELC          equ	1040	;# 
  1609   000411                     WPUC            equ	1041	;# 
  1610   000412                     ODCONC          equ	1042	;# 
  1611   000413                     SLRCONC         equ	1043	;# 
  1612   000414                     INLVLC          equ	1044	;# 
  1613   000415                     IOCCP           equ	1045	;# 
  1614   000416                     IOCCN           equ	1046	;# 
  1615   000417                     IOCCF           equ	1047	;# 
  1616   000418                     ANSELD          equ	1048	;# 
  1617   000419                     WPUD            equ	1049	;# 
  1618   00041A                     ODCOND          equ	1050	;# 
  1619   00041B                     SLRCOND         equ	1051	;# 
  1620   00041C                     INLVLD          equ	1052	;# 
  1621   000420                     ANSELE          equ	1056	;# 
  1622   000421                     WPUE            equ	1057	;# 
  1623   000422                     ODCONE          equ	1058	;# 
  1624   000423                     SLRCONE         equ	1059	;# 
  1625   000424                     INLVLE          equ	1060	;# 
  1626   000425                     IOCEP           equ	1061	;# 
  1627   000426                     IOCEN           equ	1062	;# 
  1628   000427                     IOCEF           equ	1063	;# 
  1629   000428                     ANSELF          equ	1064	;# 
  1630   000429                     WPUF            equ	1065	;# 
  1631   00042A                     ODCONF          equ	1066	;# 
  1632   00042B                     SLRCONF         equ	1067	;# 
  1633   00042C                     INLVLF          equ	1068	;# 
  1634   000440                     NCO1ACC         equ	1088	;# 
  1635   000440                     NCO1ACCL        equ	1088	;# 
  1636   000441                     NCO1ACCH        equ	1089	;# 
  1637   000442                     NCO1ACCU        equ	1090	;# 
  1638   000443                     NCO1INC         equ	1091	;# 
  1639   000443                     NCO1INCL        equ	1091	;# 
  1640   000444                     NCO1INCH        equ	1092	;# 
  1641   000445                     NCO1INCU        equ	1093	;# 
  1642   000446                     NCO1CON         equ	1094	;# 
  1643   000447                     NCO1CLK         equ	1095	;# 
  1644   000448                     NCO2ACC         equ	1096	;# 
  1645   000448                     NCO2ACCL        equ	1096	;# 
  1646   000449                     NCO2ACCH        equ	1097	;# 
  1647   00044A                     NCO2ACCU        equ	1098	;# 
  1648   00044B                     NCO2INC         equ	1099	;# 
  1649   00044B                     NCO2INCL        equ	1099	;# 
  1650   00044C                     NCO2INCH        equ	1100	;# 
  1651   00044D                     NCO2INCU        equ	1101	;# 
  1652   00044E                     NCO2CON         equ	1102	;# 
  1653   00044F                     NCO2CLK         equ	1103	;# 
  1654   000450                     NCO3ACC         equ	1104	;# 
  1655   000450                     NCO3ACCL        equ	1104	;# 
  1656   000451                     NCO3ACCH        equ	1105	;# 
  1657   000452                     NCO3ACCU        equ	1106	;# 
  1658   000453                     NCO3INC         equ	1107	;# 
  1659   000453                     NCO3INCL        equ	1107	;# 
  1660   000454                     NCO3INCH        equ	1108	;# 
  1661   000455                     NCO3INCU        equ	1109	;# 
  1662   000456                     NCO3CON         equ	1110	;# 
  1663   000457                     NCO3CLK         equ	1111	;# 
  1664   000459                     IVTLOCK         equ	1113	;# 
  1665   00045A                     IVTAD           equ	1114	;# 
  1666   00045A                     IVTADL          equ	1114	;# 
  1667   00045B                     IVTADH          equ	1115	;# 
  1668   00045C                     IVTADU          equ	1116	;# 
  1669   00045D                     IVTBASE         equ	1117	;# 
  1670   00045D                     IVTBASEL        equ	1117	;# 
  1671   00045E                     IVTBASEH        equ	1118	;# 
  1672   00045F                     IVTBASEU        equ	1119	;# 
  1673   000460                     PWM1ERS         equ	1120	;# 
  1674   000461                     PWM1CLK         equ	1121	;# 
  1675   000462                     PWM1LDS         equ	1122	;# 
  1676   000463                     PWM1PR          equ	1123	;# 
  1677   000463                     PWM1PRL         equ	1123	;# 
  1678   000464                     PWM1PRH         equ	1124	;# 
  1679   000465                     PWM1CPRE        equ	1125	;# 
  1680   000466                     PWM1PIPOS       equ	1126	;# 
  1681   000467                     PWM1GIR         equ	1127	;# 
  1682   000468                     PWM1GIE         equ	1128	;# 
  1683   000469                     PWM1CON         equ	1129	;# 
  1684   00046A                     PWM1S1CFG       equ	1130	;# 
  1685   00046B                     PWM1S1P1        equ	1131	;# 
  1686   00046B                     PWM1S1P1L       equ	1131	;# 
  1687   00046C                     PWM1S1P1H       equ	1132	;# 
  1688   00046D                     PWM1S1P2        equ	1133	;# 
  1689   00046D                     PWM1S1P2L       equ	1133	;# 
  1690   00046E                     PWM1S1P2H       equ	1134	;# 
  1691   00046F                     PWM2ERS         equ	1135	;# 
  1692   000470                     PWM2CLK         equ	1136	;# 
  1693   000471                     PWM2LDS         equ	1137	;# 
  1694   000472                     PWM2PR          equ	1138	;# 
  1695   000472                     PWM2PRL         equ	1138	;# 
  1696   000473                     PWM2PRH         equ	1139	;# 
  1697   000474                     PWM2CPRE        equ	1140	;# 
  1698   000475                     PWM2PIPOS       equ	1141	;# 
  1699   000476                     PWM2GIR         equ	1142	;# 
  1700   000477                     PWM2GIE         equ	1143	;# 
  1701   000478                     PWM2CON         equ	1144	;# 
  1702   000479                     PWM2S1CFG       equ	1145	;# 
  1703   00047A                     PWM2S1P1        equ	1146	;# 
  1704   00047A                     PWM2S1P1L       equ	1146	;# 
  1705   00047B                     PWM2S1P1H       equ	1147	;# 
  1706   00047C                     PWM2S1P2        equ	1148	;# 
  1707   00047C                     PWM2S1P2L       equ	1148	;# 
  1708   00047D                     PWM2S1P2H       equ	1149	;# 
  1709   00047E                     PWM3ERS         equ	1150	;# 
  1710   00047F                     PWM3CLK         equ	1151	;# 
  1711   000480                     PWM3LDS         equ	1152	;# 
  1712   000481                     PWM3PR          equ	1153	;# 
  1713   000481                     PWM3PRL         equ	1153	;# 
  1714   000482                     PWM3PRH         equ	1154	;# 
  1715   000483                     PWM3CPRE        equ	1155	;# 
  1716   000484                     PWM3PIPOS       equ	1156	;# 
  1717   000485                     PWM3GIR         equ	1157	;# 
  1718   000486                     PWM3GIE         equ	1158	;# 
  1719   000487                     PWM3CON         equ	1159	;# 
  1720   000488                     PWM3S1CFG       equ	1160	;# 
  1721   000489                     PWM3S1P1        equ	1161	;# 
  1722   000489                     PWM3S1P1L       equ	1161	;# 
  1723   00048A                     PWM3S1P1H       equ	1162	;# 
  1724   00048B                     PWM3S1P2        equ	1163	;# 
  1725   00048B                     PWM3S1P2L       equ	1163	;# 
  1726   00048C                     PWM3S1P2H       equ	1164	;# 
  1727   00049C                     PWMLOAD         equ	1180	;# 
  1728   00049D                     PWMEN           equ	1181	;# 
  1729   00049E                     PIE0            equ	1182	;# 
  1730   00049F                     PIE1            equ	1183	;# 
  1731   0004A0                     PIE2            equ	1184	;# 
  1732   0004A1                     PIE3            equ	1185	;# 
  1733   0004A2                     PIE4            equ	1186	;# 
  1734   0004A3                     PIE5            equ	1187	;# 
  1735   0004A4                     PIE6            equ	1188	;# 
  1736   0004A5                     PIE7            equ	1189	;# 
  1737   0004A6                     PIE8            equ	1190	;# 
  1738   0004A7                     PIE9            equ	1191	;# 
  1739   0004A8                     PIE10           equ	1192	;# 
  1740   0004A9                     PIE11           equ	1193	;# 
  1741   0004AA                     PIE12           equ	1194	;# 
  1742   0004AB                     PIE13           equ	1195	;# 
  1743   0004AC                     PIE14           equ	1196	;# 
  1744   0004AD                     PIE15           equ	1197	;# 
  1745   0004AE                     PIR0            equ	1198	;# 
  1746   0004AF                     PIR1            equ	1199	;# 
  1747   0004B0                     PIR2            equ	1200	;# 
  1748   0004B1                     PIR3            equ	1201	;# 
  1749   0004B2                     PIR4            equ	1202	;# 
  1750   0004B3                     PIR5            equ	1203	;# 
  1751   0004B4                     PIR6            equ	1204	;# 
  1752   0004B5                     PIR7            equ	1205	;# 
  1753   0004B6                     PIR8            equ	1206	;# 
  1754   0004B7                     PIR9            equ	1207	;# 
  1755   0004B8                     PIR10           equ	1208	;# 
  1756   0004B9                     PIR11           equ	1209	;# 
  1757   0004BA                     PIR12           equ	1210	;# 
  1758   0004BB                     PIR13           equ	1211	;# 
  1759   0004BC                     PIR14           equ	1212	;# 
  1760   0004BD                     PIR15           equ	1213	;# 
  1761   0004BE                     LATA            equ	1214	;# 
  1762   0004BF                     LATB            equ	1215	;# 
  1763   0004C0                     LATC            equ	1216	;# 
  1764   0004C1                     LATD            equ	1217	;# 
  1765   0004C2                     LATE            equ	1218	;# 
  1766   0004C3                     LATF            equ	1219	;# 
  1767   0004C6                     TRISA           equ	1222	;# 
  1768   0004C7                     TRISB           equ	1223	;# 
  1769   0004C8                     TRISC           equ	1224	;# 
  1770   0004C9                     TRISD           equ	1225	;# 
  1771   0004CA                     TRISE           equ	1226	;# 
  1772   0004CB                     TRISF           equ	1227	;# 
  1773   0004CE                     PORTA           equ	1230	;# 
  1774   0004CF                     PORTB           equ	1231	;# 
  1775   0004D0                     PORTC           equ	1232	;# 
  1776   0004D1                     PORTD           equ	1233	;# 
  1777   0004D2                     PORTE           equ	1234	;# 
  1778   0004D3                     PORTF           equ	1235	;# 
  1779   0004D6                     INTCON0         equ	1238	;# 
  1780   0004D7                     INTCON1         equ	1239	;# 
  1781   0004D8                     STATUS          equ	1240	;# 
  1782   0004D9                     FSR2            equ	1241	;# 
  1783   0004D9                     FSR2L           equ	1241	;# 
  1784   0004DA                     FSR2H           equ	1242	;# 
  1785   0004DB                     PLUSW2          equ	1243	;# 
  1786   0004DC                     PREINC2         equ	1244	;# 
  1787   0004DD                     POSTDEC2        equ	1245	;# 
  1788   0004DE                     POSTINC2        equ	1246	;# 
  1789   0004DF                     INDF2           equ	1247	;# 
  1790   0004E0                     BSR             equ	1248	;# 
  1791   0004E1                     FSR1            equ	1249	;# 
  1792   0004E1                     FSR1L           equ	1249	;# 
  1793   0004E2                     FSR1H           equ	1250	;# 
  1794   0004E3                     PLUSW1          equ	1251	;# 
  1795   0004E4                     PREINC1         equ	1252	;# 
  1796   0004E5                     POSTDEC1        equ	1253	;# 
  1797   0004E6                     POSTINC1        equ	1254	;# 
  1798   0004E7                     INDF1           equ	1255	;# 
  1799   0004E8                     WREG            equ	1256	;# 
  1800   0004E9                     FSR0            equ	1257	;# 
  1801   0004E9                     FSR0L           equ	1257	;# 
  1802   0004EA                     FSR0H           equ	1258	;# 
  1803   0004EB                     PLUSW0          equ	1259	;# 
  1804   0004EC                     PREINC0         equ	1260	;# 
  1805   0004ED                     POSTDEC0        equ	1261	;# 
  1806   0004EE                     POSTINC0        equ	1262	;# 
  1807   0004EF                     INDF0           equ	1263	;# 
  1808   0004F0                     PCON0           equ	1264	;# 
  1809   0004F1                     PCON1           equ	1265	;# 
  1810   0004F2                     CPUDOZE         equ	1266	;# 
  1811   0004F3                     PROD            equ	1267	;# 
  1812   0004F3                     PRODL           equ	1267	;# 
  1813   0004F4                     PRODH           equ	1268	;# 
  1814   0004F5                     TABLAT          equ	1269	;# 
  1815   0004F6                     TBLPTR          equ	1270	;# 
  1816   0004F6                     TBLPTRL         equ	1270	;# 
  1817   0004F7                     TBLPTRH         equ	1271	;# 
  1818   0004F8                     TBLPTRU         equ	1272	;# 
  1819   0004F9                     PCLAT           equ	1273	;# 
  1820   0004F9                     PCL             equ	1273	;# 
  1821   0004FA                     PCLATH          equ	1274	;# 
  1822   0004FB                     PCLATU          equ	1275	;# 
  1823   0004FC                     STKPTR          equ	1276	;# 
  1824   0004FD                     TOS             equ	1277	;# 
  1825   0004FD                     TOSL            equ	1277	;# 
  1826   0004FE                     TOSH            equ	1278	;# 
  1827   0004FF                     TOSU            equ	1279	;# 
  1828   000039                     CLKRCON         equ	57	;# 
  1829   00003A                     CLKRCLK         equ	58	;# 
  1830   000040                     NVMCON0         equ	64	;# 
  1831   000041                     NVMCON1         equ	65	;# 
  1832   000042                     NVMLOCK         equ	66	;# 
  1833   000043                     NVMADR          equ	67	;# 
  1834   000043                     NVMADRL         equ	67	;# 
  1835   000044                     NVMADRH         equ	68	;# 
  1836   000045                     NVMADRU         equ	69	;# 
  1837   000046                     NVMDAT          equ	70	;# 
  1838   000046                     NVMDATL         equ	70	;# 
  1839   000047                     NVMDATH         equ	71	;# 
  1840   000048                     VREGCON         equ	72	;# 
  1841   000049                     BORCON          equ	73	;# 
  1842   00004A                     HLVDCON0        equ	74	;# 
  1843   00004B                     HLVDCON1        equ	75	;# 
  1844   00004C                     ZCDCON          equ	76	;# 
  1845   000060                     PMD0            equ	96	;# 
  1846   000061                     PMD1            equ	97	;# 
  1847   000063                     PMD3            equ	99	;# 
  1848   000064                     PMD4            equ	100	;# 
  1849   000065                     PMD5            equ	101	;# 
  1850   000066                     PMD6            equ	102	;# 
  1851   000067                     PMD7            equ	103	;# 
  1852   000068                     PMD8            equ	104	;# 
  1853   00006A                     MD1CON0         equ	106	;# 
  1854   00006B                     MD1CON1         equ	107	;# 
  1855   00006C                     MD1SRC          equ	108	;# 
  1856   00006D                     MD1CARL         equ	109	;# 
  1857   00006E                     MD1CARH         equ	110	;# 
  1858   00006F                     CMOUT           equ	111	;# 
  1859   000070                     CM1CON0         equ	112	;# 
  1860   000071                     CM1CON1         equ	113	;# 
  1861   000072                     CM1NCH          equ	114	;# 
  1862   000073                     CM1PCH          equ	115	;# 
  1863   000074                     CM2CON0         equ	116	;# 
  1864   000075                     CM2CON1         equ	117	;# 
  1865   000076                     CM2NCH          equ	118	;# 
  1866   000077                     CM2PCH          equ	119	;# 
  1867   000078                     WDTCON0         equ	120	;# 
  1868   000079                     WDTCON1         equ	121	;# 
  1869   00007A                     WDTPS           equ	122	;# 
  1870   00007A                     WDTPSL          equ	122	;# 
  1871   00007B                     WDTPSH          equ	123	;# 
  1872   00007C                     WDTTMR          equ	124	;# 
  1873   00007D                     DAC1DAT         equ	125	;# 
  1874   00007D                     DAC1DATL        equ	125	;# 
  1875   00007F                     DAC1CON         equ	127	;# 
  1876   000080                     SPI1RXB         equ	128	;# 
  1877   000081                     SPI1TXB         equ	129	;# 
  1878   000082                     SPI1TCNT        equ	130	;# 
  1879   000082                     SPI1TCNTL       equ	130	;# 
  1880   000083                     SPI1TCNTH       equ	131	;# 
  1881   000084                     SPI1CON0        equ	132	;# 
  1882   000085                     SPI1CON1        equ	133	;# 
  1883   000086                     SPI1CON2        equ	134	;# 
  1884   000087                     SPI1STATUS      equ	135	;# 
  1885   000088                     SPI1TWIDTH      equ	136	;# 
  1886   000089                     SPI1BAUD        equ	137	;# 
  1887   00008A                     SPI1INTF        equ	138	;# 
  1888   00008B                     SPI1INTE        equ	139	;# 
  1889   00008C                     SPI1CLK         equ	140	;# 
  1890   00008D                     SPI2RXB         equ	141	;# 
  1891   00008E                     SPI2TXB         equ	142	;# 
  1892   00008F                     SPI2TCNT        equ	143	;# 
  1893   00008F                     SPI2TCNTL       equ	143	;# 
  1894   000090                     SPI2TCNTH       equ	144	;# 
  1895   000091                     SPI2CON0        equ	145	;# 
  1896   000092                     SPI2CON1        equ	146	;# 
  1897   000093                     SPI2CON2        equ	147	;# 
  1898   000094                     SPI2STATUS      equ	148	;# 
  1899   000095                     SPI2TWIDTH      equ	149	;# 
  1900   000096                     SPI2BAUD        equ	150	;# 
  1901   000097                     SPI2INTF        equ	151	;# 
  1902   000098                     SPI2INTE        equ	152	;# 
  1903   000099                     SPI2CLK         equ	153	;# 
  1904   0000AC                     ACTCON          equ	172	;# 
  1905   0000AD                     OSCCON1         equ	173	;# 
  1906   0000AE                     OSCCON2         equ	174	;# 
  1907   0000AF                     OSCCON3         equ	175	;# 
  1908   0000B0                     OSCTUNE         equ	176	;# 
  1909   0000B1                     OSCFRQ          equ	177	;# 
  1910   0000B1                     OSCFREQ         equ	177	;# 
  1911   0000B2                     OSCSTAT         equ	178	;# 
  1912   0000B2                     OSCSTAT1        equ	178	;# 
  1913   0000B3                     OSCEN           equ	179	;# 
  1914   0000B4                     PRLOCK          equ	180	;# 
  1915   0000B5                     SCANPR          equ	181	;# 
  1916   0000B6                     DMA1PR          equ	182	;# 
  1917   0000B7                     DMA2PR          equ	183	;# 
  1918   0000B8                     DMA3PR          equ	184	;# 
  1919   0000B9                     DMA4PR          equ	185	;# 
  1920   0000BA                     DMA5PR          equ	186	;# 
  1921   0000BB                     DMA6PR          equ	187	;# 
  1922   0000BE                     MAINPR          equ	190	;# 
  1923   0000BF                     ISRPR           equ	191	;# 
  1924   0000D4                     CLCDATA         equ	212	;# 
  1925   0000D5                     CLCSELECT       equ	213	;# 
  1926   0000D6                     CLCnCON         equ	214	;# 
  1927   0000D7                     CLCnPOL         equ	215	;# 
  1928   0000D8                     CLCnSEL0        equ	216	;# 
  1929   0000D9                     CLCnSEL1        equ	217	;# 
  1930   0000DA                     CLCnSEL2        equ	218	;# 
  1931   0000DB                     CLCnSEL3        equ	219	;# 
  1932   0000DC                     CLCnGLS0        equ	220	;# 
  1933   0000DD                     CLCnGLS1        equ	221	;# 
  1934   0000DE                     CLCnGLS2        equ	222	;# 
  1935   0000DF                     CLCnGLS3        equ	223	;# 
  1936   0000E8                     DMASELECT       equ	232	;# 
  1937   0000E9                     DMAnBUF         equ	233	;# 
  1938   0000EA                     DMAnDCNT        equ	234	;# 
  1939   0000EA                     DMAnDCNTL       equ	234	;# 
  1940   0000EB                     DMAnDCNTH       equ	235	;# 
  1941   0000EC                     DMAnDPTR        equ	236	;# 
  1942   0000EC                     DMAnDPTRL       equ	236	;# 
  1943   0000ED                     DMAnDPTRH       equ	237	;# 
  1944   0000EE                     DMAnDSZ         equ	238	;# 
  1945   0000EE                     DMAnDSZL        equ	238	;# 
  1946   0000EF                     DMAnDSZH        equ	239	;# 
  1947   0000F0                     DMAnDSA         equ	240	;# 
  1948   0000F0                     DMAnDSAL        equ	240	;# 
  1949   0000F1                     DMAnDSAH        equ	241	;# 
  1950   0000F2                     DMAnSCNT        equ	242	;# 
  1951   0000F2                     DMAnSCNTL       equ	242	;# 
  1952   0000F3                     DMAnSCNTH       equ	243	;# 
  1953   0000F4                     DMAnSPTR        equ	244	;# 
  1954   0000F4                     DMAnSPTRL       equ	244	;# 
  1955   0000F5                     DMAnSPTRH       equ	245	;# 
  1956   0000F6                     DMAnSPTRU       equ	246	;# 
  1957   0000F7                     DMAnSSZ         equ	247	;# 
  1958   0000F7                     DMAnSSZL        equ	247	;# 
  1959   0000F8                     DMAnSSZH        equ	248	;# 
  1960   0000F9                     DMAnSSA         equ	249	;# 
  1961   0000F9                     DMAnSSAL        equ	249	;# 
  1962   0000FA                     DMAnSSAH        equ	250	;# 
  1963   0000FB                     DMAnSSAU        equ	251	;# 
  1964   0000FC                     DMAnCON0        equ	252	;# 
  1965   0000FD                     DMAnCON1        equ	253	;# 
  1966   0000FE                     DMAnAIRQ        equ	254	;# 
  1967   0000FF                     DMAnSIRQ        equ	255	;# 
  1968   000200                     PPSLOCK         equ	512	;# 
  1969   000201                     RA0PPS          equ	513	;# 
  1970   000202                     RA1PPS          equ	514	;# 
  1971   000203                     RA2PPS          equ	515	;# 
  1972   000204                     RA3PPS          equ	516	;# 
  1973   000205                     RA4PPS          equ	517	;# 
  1974   000206                     RA5PPS          equ	518	;# 
  1975   000207                     RA6PPS          equ	519	;# 
  1976   000208                     RA7PPS          equ	520	;# 
  1977   000209                     RB0PPS          equ	521	;# 
  1978   00020A                     RB1PPS          equ	522	;# 
  1979   00020B                     RB2PPS          equ	523	;# 
  1980   00020C                     RB3PPS          equ	524	;# 
  1981   00020D                     RB4PPS          equ	525	;# 
  1982   00020E                     RB5PPS          equ	526	;# 
  1983   00020F                     RB6PPS          equ	527	;# 
  1984   000210                     RB7PPS          equ	528	;# 
  1985   000211                     RC0PPS          equ	529	;# 
  1986   000212                     RC1PPS          equ	530	;# 
  1987   000213                     RC2PPS          equ	531	;# 
  1988   000214                     RC3PPS          equ	532	;# 
  1989   000215                     RC4PPS          equ	533	;# 
  1990   000216                     RC5PPS          equ	534	;# 
  1991   000217                     RC6PPS          equ	535	;# 
  1992   000218                     RC7PPS          equ	536	;# 
  1993   000219                     RD0PPS          equ	537	;# 
  1994   00021A                     RD1PPS          equ	538	;# 
  1995   00021B                     RD2PPS          equ	539	;# 
  1996   00021C                     RD3PPS          equ	540	;# 
  1997   00021D                     RD4PPS          equ	541	;# 
  1998   00021E                     RD5PPS          equ	542	;# 
  1999   00021F                     RD6PPS          equ	543	;# 
  2000   000220                     RD7PPS          equ	544	;# 
  2001   000221                     RE0PPS          equ	545	;# 
  2002   000222                     RE1PPS          equ	546	;# 
  2003   000223                     RE2PPS          equ	547	;# 
  2004   000229                     RF0PPS          equ	553	;# 
  2005   00022A                     RF1PPS          equ	554	;# 
  2006   00022B                     RF2PPS          equ	555	;# 
  2007   00022C                     RF3PPS          equ	556	;# 
  2008   00022D                     RF4PPS          equ	557	;# 
  2009   00022E                     RF5PPS          equ	558	;# 
  2010   00022F                     RF6PPS          equ	559	;# 
  2011   000230                     RF7PPS          equ	560	;# 
  2012   00023E                     INT0PPS         equ	574	;# 
  2013   00023F                     INT1PPS         equ	575	;# 
  2014   000240                     INT2PPS         equ	576	;# 
  2015   000241                     T0CKIPPS        equ	577	;# 
  2016   000242                     T1CKIPPS        equ	578	;# 
  2017   000243                     T1GPPS          equ	579	;# 
  2018   000244                     T3CKIPPS        equ	580	;# 
  2019   000245                     T3GPPS          equ	581	;# 
  2020   000246                     T5CKIPPS        equ	582	;# 
  2021   000247                     T5GPPS          equ	583	;# 
  2022   000248                     T2INPPS         equ	584	;# 
  2023   000249                     T4INPPS         equ	585	;# 
  2024   00024A                     T6INPPS         equ	586	;# 
  2025   00024F                     CCP1PPS         equ	591	;# 
  2026   000250                     CCP2PPS         equ	592	;# 
  2027   000251                     CCP3PPS         equ	593	;# 
  2028   000253                     PWM1ERSPPS      equ	595	;# 
  2029   000254                     PWM2ERSPPS      equ	596	;# 
  2030   000255                     PWM3ERSPPS      equ	597	;# 
  2031   000257                     PWMIN0PPS       equ	599	;# 
  2032   000258                     PWMIN1PPS       equ	600	;# 
  2033   000259                     SMT1WINPPS      equ	601	;# 
  2034   00025A                     SMT1SIGPPS      equ	602	;# 
  2035   00025B                     CWG1PPS         equ	603	;# 
  2036   00025B                     CWG1INPPS       equ	603	;# 
  2037   00025C                     CWG2PPS         equ	604	;# 
  2038   00025C                     CWG2INPPS       equ	604	;# 
  2039   00025D                     CWG3PPS         equ	605	;# 
  2040   00025D                     CWG3INPPS       equ	605	;# 
  2041   00025E                     MD1CARLPPS      equ	606	;# 
  2042   00025E                     MDCARLPPS       equ	606	;# 
  2043   00025F                     MD1CARHPPS      equ	607	;# 
  2044   00025F                     MDCARHPPS       equ	607	;# 
  2045   000260                     MD1SRCPPS       equ	608	;# 
  2046   000260                     MDSRCPPS        equ	608	;# 
  2047   000261                     CLCIN0PPS       equ	609	;# 
  2048   000262                     CLCIN1PPS       equ	610	;# 
  2049   000263                     CLCIN2PPS       equ	611	;# 
  2050   000264                     CLCIN3PPS       equ	612	;# 
  2051   000265                     CLCIN4PPS       equ	613	;# 
  2052   000266                     CLCIN5PPS       equ	614	;# 
  2053   000267                     CLCIN6PPS       equ	615	;# 
  2054   000268                     CLCIN7PPS       equ	616	;# 
  2055   000269                     ADACTPPS        equ	617	;# 
  2056   00026A                     SPI1SCKPPS      equ	618	;# 
  2057   00026B                     SPI1SDIPPS      equ	619	;# 
  2058   00026C                     SPI1SSPPS       equ	620	;# 
  2059   00026D                     SPI2SCKPPS      equ	621	;# 
  2060   00026E                     SPI2SDIPPS      equ	622	;# 
  2061   00026F                     SPI2SSPPS       equ	623	;# 
  2062   000270                     I2C1SDAPPS      equ	624	;# 
  2063   000271                     I2C1SCLPPS      equ	625	;# 
  2064   000272                     U1RXPPS         equ	626	;# 
  2065   000273                     U1CTSPPS        equ	627	;# 
  2066   000274                     U2RXPPS         equ	628	;# 
  2067   000275                     U2CTSPPS        equ	629	;# 
  2068   000276                     U3RXPPS         equ	630	;# 
  2069   000277                     U3CTSPPS        equ	631	;# 
  2070   000278                     U4RXPPS         equ	632	;# 
  2071   000279                     U4CTSPPS        equ	633	;# 
  2072   00027A                     U5RXPPS         equ	634	;# 
  2073   00027B                     U5CTSPPS        equ	635	;# 
  2074   000286                     RC4I2C          equ	646	;# 
  2075   000287                     RC3I2C          equ	647	;# 
  2076   000288                     RB2I2C          equ	648	;# 
  2077   000289                     RB1I2C          equ	649	;# 
  2078   00028B                     I2C1RXB         equ	651	;# 
  2079   00028C                     I2C1TXB         equ	652	;# 
  2080   00028D                     I2C1CNT         equ	653	;# 
  2081   00028E                     I2C1ADB0        equ	654	;# 
  2082   00028F                     I2C1ADB1        equ	655	;# 
  2083   000290                     I2C1ADR0        equ	656	;# 
  2084   000291                     I2C1ADR1        equ	657	;# 
  2085   000292                     I2C1ADR2        equ	658	;# 
  2086   000293                     I2C1ADR3        equ	659	;# 
  2087   000294                     I2C1CON0        equ	660	;# 
  2088   000295                     I2C1CON1        equ	661	;# 
  2089   000296                     I2C1CON2        equ	662	;# 
  2090   000297                     I2C1ERR         equ	663	;# 
  2091   000298                     I2C1STAT0       equ	664	;# 
  2092   000299                     I2C1STAT1       equ	665	;# 
  2093   00029A                     I2C1PIR         equ	666	;# 
  2094   00029B                     I2C1PIE         equ	667	;# 
  2095   00029C                     I2C1CLK         equ	668	;# 
  2096   00029D                     I2C1BTO         equ	669	;# 
  2097   0002A1                     U1RXB           equ	673	;# 
  2098   0002A1                     U1RXBL          equ	673	;# 
  2099   0002A2                     U1RXCHK         equ	674	;# 
  2100   0002A3                     U1TXB           equ	675	;# 
  2101   0002A3                     U1TXBL          equ	675	;# 
  2102   0002A4                     U1TXCHK         equ	676	;# 
  2103   0002A5                     U1P1            equ	677	;# 
  2104   0002A5                     U1P1L           equ	677	;# 
  2105   0002A6                     U1P1H           equ	678	;# 
  2106   0002A7                     U1P2            equ	679	;# 
  2107   0002A7                     U1P2L           equ	679	;# 
  2108   0002A8                     U1P2H           equ	680	;# 
  2109   0002A9                     U1P3            equ	681	;# 
  2110   0002A9                     U1P3L           equ	681	;# 
  2111   0002AA                     U1P3H           equ	682	;# 
  2112   0002AB                     U1CON0          equ	683	;# 
  2113   0002AC                     U1CON1          equ	684	;# 
  2114   0002AD                     U1CON2          equ	685	;# 
  2115   0002AE                     U1BRG           equ	686	;# 
  2116   0002AE                     U1BRGL          equ	686	;# 
  2117   0002AF                     U1BRGH          equ	687	;# 
  2118   0002B0                     U1FIFO          equ	688	;# 
  2119   0002B1                     U1UIR           equ	689	;# 
  2120   0002B2                     U1ERRIR         equ	690	;# 
  2121   0002B3                     U1ERRIE         equ	691	;# 
  2122   0002B4                     U2RXB           equ	692	;# 
  2123   0002B4                     U2RXBL          equ	692	;# 
  2124   0002B6                     U2TXB           equ	694	;# 
  2125   0002B6                     U2TXBL          equ	694	;# 
  2126   0002B8                     U2P1            equ	696	;# 
  2127   0002B8                     U2P1L           equ	696	;# 
  2128   0002BA                     U2P2            equ	698	;# 
  2129   0002BA                     U2P2L           equ	698	;# 
  2130   0002BC                     U2P3            equ	700	;# 
  2131   0002BC                     U2P3L           equ	700	;# 
  2132   0002BE                     U2CON0          equ	702	;# 
  2133   0002BF                     U2CON1          equ	703	;# 
  2134   0002C0                     U2CON2          equ	704	;# 
  2135   0002C1                     U2BRG           equ	705	;# 
  2136   0002C1                     U2BRGL          equ	705	;# 
  2137   0002C2                     U2BRGH          equ	706	;# 
  2138   0002C3                     U2FIFO          equ	707	;# 
  2139   0002C4                     U2UIR           equ	708	;# 
  2140   0002C5                     U2ERRIR         equ	709	;# 
  2141   0002C6                     U2ERRIE         equ	710	;# 
  2142   0002C7                     U3RXB           equ	711	;# 
  2143   0002C7                     U3RXBL          equ	711	;# 
  2144   0002C9                     U3TXB           equ	713	;# 
  2145   0002C9                     U3TXBL          equ	713	;# 
  2146   0002CB                     U3P1            equ	715	;# 
  2147   0002CB                     U3P1L           equ	715	;# 
  2148   0002CD                     U3P2            equ	717	;# 
  2149   0002CD                     U3P2L           equ	717	;# 
  2150   0002CF                     U3P3            equ	719	;# 
  2151   0002CF                     U3P3L           equ	719	;# 
  2152   0002D1                     U3CON0          equ	721	;# 
  2153   0002D2                     U3CON1          equ	722	;# 
  2154   0002D3                     U3CON2          equ	723	;# 
  2155   0002D4                     U3BRG           equ	724	;# 
  2156   0002D4                     U3BRGL          equ	724	;# 
  2157   0002D5                     U3BRGH          equ	725	;# 
  2158   0002D6                     U3FIFO          equ	726	;# 
  2159   0002D7                     U3UIR           equ	727	;# 
  2160   0002D8                     U3ERRIR         equ	728	;# 
  2161   0002D9                     U3ERRIE         equ	729	;# 
  2162   0002DA                     U4RXB           equ	730	;# 
  2163   0002DA                     U4RXBL          equ	730	;# 
  2164   0002DC                     U4TXB           equ	732	;# 
  2165   0002DC                     U4TXBL          equ	732	;# 
  2166   0002DE                     U4P1            equ	734	;# 
  2167   0002DE                     U4P1L           equ	734	;# 
  2168   0002E0                     U4P2            equ	736	;# 
  2169   0002E0                     U4P2L           equ	736	;# 
  2170   0002E2                     U4P3            equ	738	;# 
  2171   0002E2                     U4P3L           equ	738	;# 
  2172   0002E4                     U4CON0          equ	740	;# 
  2173   0002E5                     U4CON1          equ	741	;# 
  2174   0002E6                     U4CON2          equ	742	;# 
  2175   0002E7                     U4BRG           equ	743	;# 
  2176   0002E7                     U4BRGL          equ	743	;# 
  2177   0002E8                     U4BRGH          equ	744	;# 
  2178   0002E9                     U4FIFO          equ	745	;# 
  2179   0002EA                     U4UIR           equ	746	;# 
  2180   0002EB                     U4ERRIR         equ	747	;# 
  2181   0002EC                     U4ERRIE         equ	748	;# 
  2182   0002ED                     U5RXB           equ	749	;# 
  2183   0002ED                     U5RXBL          equ	749	;# 
  2184   0002EF                     U5TXB           equ	751	;# 
  2185   0002EF                     U5TXBL          equ	751	;# 
  2186   0002F1                     U5P1            equ	753	;# 
  2187   0002F1                     U5P1L           equ	753	;# 
  2188   0002F3                     U5P2            equ	755	;# 
  2189   0002F3                     U5P2L           equ	755	;# 
  2190   0002F5                     U5P3            equ	757	;# 
  2191   0002F5                     U5P3L           equ	757	;# 
  2192   0002F7                     U5CON0          equ	759	;# 
  2193   0002F8                     U5CON1          equ	760	;# 
  2194   0002F9                     U5CON2          equ	761	;# 
  2195   0002FA                     U5BRG           equ	762	;# 
  2196   0002FA                     U5BRGL          equ	762	;# 
  2197   0002FB                     U5BRGH          equ	763	;# 
  2198   0002FC                     U5FIFO          equ	764	;# 
  2199   0002FD                     U5UIR           equ	765	;# 
  2200   0002FE                     U5ERRIR         equ	766	;# 
  2201   0002FF                     U5ERRIE         equ	767	;# 
  2202   000300                     SMT1TMR         equ	768	;# 
  2203   000300                     SMT1TMRL        equ	768	;# 
  2204   000301                     SMT1TMRH        equ	769	;# 
  2205   000302                     SMT1TMRU        equ	770	;# 
  2206   000303                     SMT1CPR         equ	771	;# 
  2207   000303                     SMT1CPRL        equ	771	;# 
  2208   000304                     SMT1CPRH        equ	772	;# 
  2209   000305                     SMT1CPRU        equ	773	;# 
  2210   000306                     SMT1CPW         equ	774	;# 
  2211   000306                     SMT1CPWL        equ	774	;# 
  2212   000307                     SMT1CPWH        equ	775	;# 
  2213   000308                     SMT1CPWU        equ	776	;# 
  2214   000309                     SMT1PR          equ	777	;# 
  2215   000309                     SMT1PRL         equ	777	;# 
  2216   00030A                     SMT1PRH         equ	778	;# 
  2217   00030B                     SMT1PRU         equ	779	;# 
  2218   00030C                     SMT1CON0        equ	780	;# 
  2219   00030D                     SMT1CON1        equ	781	;# 
  2220   00030E                     SMT1STAT        equ	782	;# 
  2221   00030F                     SMT1CLK         equ	783	;# 
  2222   000310                     SMT1SIG         equ	784	;# 
  2223   000311                     SMT1WIN         equ	785	;# 
  2224   000318                     TMR0L           equ	792	;# 
  2225   000318                     TMR0            equ	792	;# 
  2226   000319                     TMR0H           equ	793	;# 
  2227   000319                     PR0             equ	793	;# 
  2228   00031A                     T0CON0          equ	794	;# 
  2229   00031B                     T0CON1          equ	795	;# 
  2230   00031C                     TMR1            equ	796	;# 
  2231   00031C                     TMR1L           equ	796	;# 
  2232   00031D                     TMR1H           equ	797	;# 
  2233   00031E                     T1CON           equ	798	;# 
  2234   00031E                     TMR1CON         equ	798	;# 
  2235   00031F                     T1GCON          equ	799	;# 
  2236   00031F                     TMR1GCON        equ	799	;# 
  2237   000320                     T1GATE          equ	800	;# 
  2238   000320                     TMR1GATE        equ	800	;# 
  2239   000321                     T1CLK           equ	801	;# 
  2240   000321                     TMR1CLK         equ	801	;# 
  2241   000321                     PR1             equ	801	;# 
  2242   000322                     T2TMR           equ	802	;# 
  2243   000322                     TMR2            equ	802	;# 
  2244   000323                     T2PR            equ	803	;# 
  2245   000323                     PR2             equ	803	;# 
  2246   000324                     T2CON           equ	804	;# 
  2247   000325                     T2HLT           equ	805	;# 
  2248   000326                     T2CLKCON        equ	806	;# 
  2249   000326                     T2CLK           equ	806	;# 
  2250   000327                     T2RST           equ	807	;# 
  2251   000328                     TMR3            equ	808	;# 
  2252   000328                     TMR3L           equ	808	;# 
  2253   000329                     TMR3H           equ	809	;# 
  2254   00032A                     T3CON           equ	810	;# 
  2255   00032A                     TMR3CON         equ	810	;# 
  2256   00032B                     T3GCON          equ	811	;# 
  2257   00032B                     TMR3GCON        equ	811	;# 
  2258   00032C                     T3GATE          equ	812	;# 
  2259   00032C                     TMR3GATE        equ	812	;# 
  2260   00032D                     T3CLK           equ	813	;# 
  2261   00032D                     TMR3CLK         equ	813	;# 
  2262   00032D                     PR3             equ	813	;# 
  2263   00032E                     T4TMR           equ	814	;# 
  2264   00032E                     TMR4            equ	814	;# 
  2265   00032F                     T4PR            equ	815	;# 
  2266   00032F                     PR4             equ	815	;# 
  2267   000330                     T4CON           equ	816	;# 
  2268   000331                     T4HLT           equ	817	;# 
  2269   000332                     T4CLKCON        equ	818	;# 
  2270   000332                     T4CLK           equ	818	;# 
  2271   000333                     T4RST           equ	819	;# 
  2272   000334                     TMR5            equ	820	;# 
  2273   000334                     TMR5L           equ	820	;# 
  2274   000335                     TMR5H           equ	821	;# 
  2275   000336                     T5CON           equ	822	;# 
  2276   000336                     TMR5CON         equ	822	;# 
  2277   000337                     T5GCON          equ	823	;# 
  2278   000337                     TMR5GCON        equ	823	;# 
  2279   000338                     T5GATE          equ	824	;# 
  2280   000338                     TMR5GATE        equ	824	;# 
  2281   000339                     T5CLK           equ	825	;# 
  2282   000339                     TMR5CLK         equ	825	;# 
  2283   000339                     PR5             equ	825	;# 
  2284   00033A                     T6TMR           equ	826	;# 
  2285   00033A                     TMR6            equ	826	;# 
  2286   00033B                     T6PR            equ	827	;# 
  2287   00033B                     PR6             equ	827	;# 
  2288   00033C                     T6CON           equ	828	;# 
  2289   00033D                     T6HLT           equ	829	;# 
  2290   00033E                     T6CLKCON        equ	830	;# 
  2291   00033E                     T6CLK           equ	830	;# 
  2292   00033F                     T6RST           equ	831	;# 
  2293   000340                     CCPR1           equ	832	;# 
  2294   000340                     CCPR1L          equ	832	;# 
  2295   000341                     CCPR1H          equ	833	;# 
  2296   000342                     CCP1CON         equ	834	;# 
  2297   000343                     CCP1CAP         equ	835	;# 
  2298   000344                     CCPR2           equ	836	;# 
  2299   000344                     CCPR2L          equ	836	;# 
  2300   000345                     CCPR2H          equ	837	;# 
  2301   000346                     CCP2CON         equ	838	;# 
  2302   000347                     CCP2CAP         equ	839	;# 
  2303   000348                     CCPR3           equ	840	;# 
  2304   000348                     CCPR3L          equ	840	;# 
  2305   000349                     CCPR3H          equ	841	;# 
  2306   00034A                     CCP3CON         equ	842	;# 
  2307   00034B                     CCP3CAP         equ	843	;# 
  2308   00034C                     CCPTMRS0        equ	844	;# 
  2309   00034F                     CRCDATA         equ	847	;# 
  2310   00034F                     CRCDATL         equ	847	;# 
  2311   000350                     CRCDATH         equ	848	;# 
  2312   000351                     CRCACC          equ	849	;# 
  2313   000351                     CRCACCL         equ	849	;# 
  2314   000352                     CRCACCH         equ	850	;# 
  2315   000353                     CRCSHFT         equ	851	;# 
  2316   000353                     CRCSHIFTL       equ	851	;# 
  2317   000354                     CRCSHIFTH       equ	852	;# 
  2318   000355                     CRCXOR          equ	853	;# 
  2319   000355                     CRCXORL         equ	853	;# 
  2320   000356                     CRCXORH         equ	854	;# 
  2321   000357                     CRCCON0         equ	855	;# 
  2322   000358                     CRCCON1         equ	856	;# 
  2323   00035A                     SCANLADR        equ	858	;# 
  2324   00035A                     SCANLADRL       equ	858	;# 
  2325   00035B                     SCANLADRH       equ	859	;# 
  2326   00035C                     SCANLADRU       equ	860	;# 
  2327   00035D                     SCANHADR        equ	861	;# 
  2328   00035D                     SCANHADRL       equ	861	;# 
  2329   00035E                     SCANHADRH       equ	862	;# 
  2330   00035F                     SCANHADRU       equ	863	;# 
  2331   000360                     SCANCON0        equ	864	;# 
  2332   000361                     SCANTRIG        equ	865	;# 
  2333   000362                     IPR0            equ	866	;# 
  2334   000363                     IPR1            equ	867	;# 
  2335   000364                     IPR2            equ	868	;# 
  2336   000365                     IPR3            equ	869	;# 
  2337   000366                     IPR4            equ	870	;# 
  2338   000367                     IPR5            equ	871	;# 
  2339   000368                     IPR6            equ	872	;# 
  2340   000369                     IPR7            equ	873	;# 
  2341   00036A                     IPR8            equ	874	;# 
  2342   00036B                     IPR9            equ	875	;# 
  2343   00036C                     IPR10           equ	876	;# 
  2344   00036D                     IPR11           equ	877	;# 
  2345   00036E                     IPR12           equ	878	;# 
  2346   00036F                     IPR13           equ	879	;# 
  2347   000370                     IPR14           equ	880	;# 
  2348   000371                     IPR15           equ	881	;# 
  2349   000373                     STATUS_CSHAD    equ	883	;# 
  2350   000374                     WREG_CSHAD      equ	884	;# 
  2351   000375                     BSR_CSHAD       equ	885	;# 
  2352   000376                     SHADCON         equ	886	;# 
  2353   000377                     STATUS_SHAD     equ	887	;# 
  2354   000378                     WREG_SHAD       equ	888	;# 
  2355   000379                     BSR_SHAD        equ	889	;# 
  2356   00037A                     PCLATH_SHAD     equ	890	;# 
  2357   00037B                     PCLATU_SHAD     equ	891	;# 
  2358   00037C                     FSR0SH          equ	892	;# 
  2359   00037C                     FSR0L_SHAD      equ	892	;# 
  2360   00037D                     FSR0H_SHAD      equ	893	;# 
  2361   00037E                     FSR1SH          equ	894	;# 
  2362   00037E                     FSR1L_SHAD      equ	894	;# 
  2363   00037F                     FSR1H_SHAD      equ	895	;# 
  2364   000380                     FSR2SH          equ	896	;# 
  2365   000380                     FSR2L_SHAD      equ	896	;# 
  2366   000381                     FSR2H_SHAD      equ	897	;# 
  2367   000382                     PRODSH          equ	898	;# 
  2368   000382                     PRODL_SHAD      equ	898	;# 
  2369   000383                     PRODH_SHAD      equ	899	;# 
  2370   0003BC                     CWG1CLK         equ	956	;# 
  2371   0003BC                     CWG1CLKCON      equ	956	;# 
  2372   0003BD                     CWG1ISM         equ	957	;# 
  2373   0003BD                     CWG1DAT         equ	957	;# 
  2374   0003BE                     CWG1DBR         equ	958	;# 
  2375   0003BF                     CWG1DBF         equ	959	;# 
  2376   0003C0                     CWG1CON0        equ	960	;# 
  2377   0003C1                     CWG1CON1        equ	961	;# 
  2378   0003C2                     CWG1AS0         equ	962	;# 
  2379   0003C3                     CWG1AS1         equ	963	;# 
  2380   0003C4                     CWG1STR         equ	964	;# 
  2381   0003C5                     CWG2CLK         equ	965	;# 
  2382   0003C5                     CWG2CLKCON      equ	965	;# 
  2383   0003C6                     CWG2ISM         equ	966	;# 
  2384   0003C6                     CWG2DAT         equ	966	;# 
  2385   0003C7                     CWG2DBR         equ	967	;# 
  2386   0003C8                     CWG2DBF         equ	968	;# 
  2387   0003C9                     CWG2CON0        equ	969	;# 
  2388   0003CA                     CWG2CON1        equ	970	;# 
  2389   0003CB                     CWG2AS0         equ	971	;# 
  2390   0003CC                     CWG2AS1         equ	972	;# 
  2391   0003CD                     CWG2STR         equ	973	;# 
  2392   0003CE                     CWG3CLK         equ	974	;# 
  2393   0003CE                     CWG3CLKCON      equ	974	;# 
  2394   0003CF                     CWG3ISM         equ	975	;# 
  2395   0003CF                     CWG3DAT         equ	975	;# 
  2396   0003D0                     CWG3DBR         equ	976	;# 
  2397   0003D1                     CWG3DBF         equ	977	;# 
  2398   0003D2                     CWG3CON0        equ	978	;# 
  2399   0003D3                     CWG3CON1        equ	979	;# 
  2400   0003D4                     CWG3AS0         equ	980	;# 
  2401   0003D5                     CWG3AS1         equ	981	;# 
  2402   0003D6                     CWG3STR         equ	982	;# 
  2403   0003D7                     FVRCON          equ	983	;# 
  2404   0003D8                     ADCPCON         equ	984	;# 
  2405   0003D8                     ADCP            equ	984	;# 
  2406   0003D9                     ADLTH           equ	985	;# 
  2407   0003D9                     ADLTHL          equ	985	;# 
  2408   0003DA                     ADLTHH          equ	986	;# 
  2409   0003DB                     ADUTH           equ	987	;# 
  2410   0003DB                     ADUTHL          equ	987	;# 
  2411   0003DC                     ADUTHH          equ	988	;# 
  2412   0003DD                     ADERR           equ	989	;# 
  2413   0003DD                     ADERRL          equ	989	;# 
  2414   0003DE                     ADERRH          equ	990	;# 
  2415   0003DF                     ADSTPT          equ	991	;# 
  2416   0003DF                     ADSTPTL         equ	991	;# 
  2417   0003E0                     ADSTPTH         equ	992	;# 
  2418   0003E1                     ADFLTR          equ	993	;# 
  2419   0003E1                     ADFLTRL         equ	993	;# 
  2420   0003E2                     ADFLTRH         equ	994	;# 
  2421   0003E3                     ADACC           equ	995	;# 
  2422   0003E3                     ADACCL          equ	995	;# 
  2423   0003E4                     ADACCH          equ	996	;# 
  2424   0003E5                     ADACCU          equ	997	;# 
  2425   0003E6                     ADCNT           equ	998	;# 
  2426   0003E7                     ADRPT           equ	999	;# 
  2427   0003E8                     ADPREV          equ	1000	;# 
  2428   0003E8                     ADPREVL         equ	1000	;# 
  2429   0003E9                     ADPREVH         equ	1001	;# 
  2430   0003EA                     ADRES           equ	1002	;# 
  2431   0003EA                     ADRESL          equ	1002	;# 
  2432   0003EB                     ADRESH          equ	1003	;# 
  2433   0003EC                     ADPCH           equ	1004	;# 
  2434   0003EE                     ADACQ           equ	1006	;# 
  2435   0003EE                     ADACQL          equ	1006	;# 
  2436   0003EF                     ADACQH          equ	1007	;# 
  2437   0003F0                     ADCAP           equ	1008	;# 
  2438   0003F1                     ADPRE           equ	1009	;# 
  2439   0003F1                     ADPREL          equ	1009	;# 
  2440   0003F2                     ADPREH          equ	1010	;# 
  2441   0003F3                     ADCON0          equ	1011	;# 
  2442   0003F4                     ADCON1          equ	1012	;# 
  2443   0003F5                     ADCON2          equ	1013	;# 
  2444   0003F6                     ADCON3          equ	1014	;# 
  2445   0003F7                     ADSTAT          equ	1015	;# 
  2446   0003F8                     ADREF           equ	1016	;# 
  2447   0003F9                     ADACT           equ	1017	;# 
  2448   0003FA                     ADCLK           equ	1018	;# 
  2449   000400                     ANSELA          equ	1024	;# 
  2450   000401                     WPUA            equ	1025	;# 
  2451   000402                     ODCONA          equ	1026	;# 
  2452   000403                     SLRCONA         equ	1027	;# 
  2453   000404                     INLVLA          equ	1028	;# 
  2454   000405                     IOCAP           equ	1029	;# 
  2455   000406                     IOCAN           equ	1030	;# 
  2456   000407                     IOCAF           equ	1031	;# 
  2457   000408                     ANSELB          equ	1032	;# 
  2458   000409                     WPUB            equ	1033	;# 
  2459   00040A                     ODCONB          equ	1034	;# 
  2460   00040B                     SLRCONB         equ	1035	;# 
  2461   00040C                     INLVLB          equ	1036	;# 
  2462   00040D                     IOCBP           equ	1037	;# 
  2463   00040E                     IOCBN           equ	1038	;# 
  2464   00040F                     IOCBF           equ	1039	;# 
  2465   000410                     ANSELC          equ	1040	;# 
  2466   000411                     WPUC            equ	1041	;# 
  2467   000412                     ODCONC          equ	1042	;# 
  2468   000413                     SLRCONC         equ	1043	;# 
  2469   000414                     INLVLC          equ	1044	;# 
  2470   000415                     IOCCP           equ	1045	;# 
  2471   000416                     IOCCN           equ	1046	;# 
  2472   000417                     IOCCF           equ	1047	;# 
  2473   000418                     ANSELD          equ	1048	;# 
  2474   000419                     WPUD            equ	1049	;# 
  2475   00041A                     ODCOND          equ	1050	;# 
  2476   00041B                     SLRCOND         equ	1051	;# 
  2477   00041C                     INLVLD          equ	1052	;# 
  2478   000420                     ANSELE          equ	1056	;# 
  2479   000421                     WPUE            equ	1057	;# 
  2480   000422                     ODCONE          equ	1058	;# 
  2481   000423                     SLRCONE         equ	1059	;# 
  2482   000424                     INLVLE          equ	1060	;# 
  2483   000425                     IOCEP           equ	1061	;# 
  2484   000426                     IOCEN           equ	1062	;# 
  2485   000427                     IOCEF           equ	1063	;# 
  2486   000428                     ANSELF          equ	1064	;# 
  2487   000429                     WPUF            equ	1065	;# 
  2488   00042A                     ODCONF          equ	1066	;# 
  2489   00042B                     SLRCONF         equ	1067	;# 
  2490   00042C                     INLVLF          equ	1068	;# 
  2491   000440                     NCO1ACC         equ	1088	;# 
  2492   000440                     NCO1ACCL        equ	1088	;# 
  2493   000441                     NCO1ACCH        equ	1089	;# 
  2494   000442                     NCO1ACCU        equ	1090	;# 
  2495   000443                     NCO1INC         equ	1091	;# 
  2496   000443                     NCO1INCL        equ	1091	;# 
  2497   000444                     NCO1INCH        equ	1092	;# 
  2498   000445                     NCO1INCU        equ	1093	;# 
  2499   000446                     NCO1CON         equ	1094	;# 
  2500   000447                     NCO1CLK         equ	1095	;# 
  2501   000448                     NCO2ACC         equ	1096	;# 
  2502   000448                     NCO2ACCL        equ	1096	;# 
  2503   000449                     NCO2ACCH        equ	1097	;# 
  2504   00044A                     NCO2ACCU        equ	1098	;# 
  2505   00044B                     NCO2INC         equ	1099	;# 
  2506   00044B                     NCO2INCL        equ	1099	;# 
  2507   00044C                     NCO2INCH        equ	1100	;# 
  2508   00044D                     NCO2INCU        equ	1101	;# 
  2509   00044E                     NCO2CON         equ	1102	;# 
  2510   00044F                     NCO2CLK         equ	1103	;# 
  2511   000450                     NCO3ACC         equ	1104	;# 
  2512   000450                     NCO3ACCL        equ	1104	;# 
  2513   000451                     NCO3ACCH        equ	1105	;# 
  2514   000452                     NCO3ACCU        equ	1106	;# 
  2515   000453                     NCO3INC         equ	1107	;# 
  2516   000453                     NCO3INCL        equ	1107	;# 
  2517   000454                     NCO3INCH        equ	1108	;# 
  2518   000455                     NCO3INCU        equ	1109	;# 
  2519   000456                     NCO3CON         equ	1110	;# 
  2520   000457                     NCO3CLK         equ	1111	;# 
  2521   000459                     IVTLOCK         equ	1113	;# 
  2522   00045A                     IVTAD           equ	1114	;# 
  2523   00045A                     IVTADL          equ	1114	;# 
  2524   00045B                     IVTADH          equ	1115	;# 
  2525   00045C                     IVTADU          equ	1116	;# 
  2526   00045D                     IVTBASE         equ	1117	;# 
  2527   00045D                     IVTBASEL        equ	1117	;# 
  2528   00045E                     IVTBASEH        equ	1118	;# 
  2529   00045F                     IVTBASEU        equ	1119	;# 
  2530   000460                     PWM1ERS         equ	1120	;# 
  2531   000461                     PWM1CLK         equ	1121	;# 
  2532   000462                     PWM1LDS         equ	1122	;# 
  2533   000463                     PWM1PR          equ	1123	;# 
  2534   000463                     PWM1PRL         equ	1123	;# 
  2535   000464                     PWM1PRH         equ	1124	;# 
  2536   000465                     PWM1CPRE        equ	1125	;# 
  2537   000466                     PWM1PIPOS       equ	1126	;# 
  2538   000467                     PWM1GIR         equ	1127	;# 
  2539   000468                     PWM1GIE         equ	1128	;# 
  2540   000469                     PWM1CON         equ	1129	;# 
  2541   00046A                     PWM1S1CFG       equ	1130	;# 
  2542   00046B                     PWM1S1P1        equ	1131	;# 
  2543   00046B                     PWM1S1P1L       equ	1131	;# 
  2544   00046C                     PWM1S1P1H       equ	1132	;# 
  2545   00046D                     PWM1S1P2        equ	1133	;# 
  2546   00046D                     PWM1S1P2L       equ	1133	;# 
  2547   00046E                     PWM1S1P2H       equ	1134	;# 
  2548   00046F                     PWM2ERS         equ	1135	;# 
  2549   000470                     PWM2CLK         equ	1136	;# 
  2550   000471                     PWM2LDS         equ	1137	;# 
  2551   000472                     PWM2PR          equ	1138	;# 
  2552   000472                     PWM2PRL         equ	1138	;# 
  2553   000473                     PWM2PRH         equ	1139	;# 
  2554   000474                     PWM2CPRE        equ	1140	;# 
  2555   000475                     PWM2PIPOS       equ	1141	;# 
  2556   000476                     PWM2GIR         equ	1142	;# 
  2557   000477                     PWM2GIE         equ	1143	;# 
  2558   000478                     PWM2CON         equ	1144	;# 
  2559   000479                     PWM2S1CFG       equ	1145	;# 
  2560   00047A                     PWM2S1P1        equ	1146	;# 
  2561   00047A                     PWM2S1P1L       equ	1146	;# 
  2562   00047B                     PWM2S1P1H       equ	1147	;# 
  2563   00047C                     PWM2S1P2        equ	1148	;# 
  2564   00047C                     PWM2S1P2L       equ	1148	;# 
  2565   00047D                     PWM2S1P2H       equ	1149	;# 
  2566   00047E                     PWM3ERS         equ	1150	;# 
  2567   00047F                     PWM3CLK         equ	1151	;# 
  2568   000480                     PWM3LDS         equ	1152	;# 
  2569   000481                     PWM3PR          equ	1153	;# 
  2570   000481                     PWM3PRL         equ	1153	;# 
  2571   000482                     PWM3PRH         equ	1154	;# 
  2572   000483                     PWM3CPRE        equ	1155	;# 
  2573   000484                     PWM3PIPOS       equ	1156	;# 
  2574   000485                     PWM3GIR         equ	1157	;# 
  2575   000486                     PWM3GIE         equ	1158	;# 
  2576   000487                     PWM3CON         equ	1159	;# 
  2577   000488                     PWM3S1CFG       equ	1160	;# 
  2578   000489                     PWM3S1P1        equ	1161	;# 
  2579   000489                     PWM3S1P1L       equ	1161	;# 
  2580   00048A                     PWM3S1P1H       equ	1162	;# 
  2581   00048B                     PWM3S1P2        equ	1163	;# 
  2582   00048B                     PWM3S1P2L       equ	1163	;# 
  2583   00048C                     PWM3S1P2H       equ	1164	;# 
  2584   00049C                     PWMLOAD         equ	1180	;# 
  2585   00049D                     PWMEN           equ	1181	;# 
  2586   00049E                     PIE0            equ	1182	;# 
  2587   00049F                     PIE1            equ	1183	;# 
  2588   0004A0                     PIE2            equ	1184	;# 
  2589   0004A1                     PIE3            equ	1185	;# 
  2590   0004A2                     PIE4            equ	1186	;# 
  2591   0004A3                     PIE5            equ	1187	;# 
  2592   0004A4                     PIE6            equ	1188	;# 
  2593   0004A5                     PIE7            equ	1189	;# 
  2594   0004A6                     PIE8            equ	1190	;# 
  2595   0004A7                     PIE9            equ	1191	;# 
  2596   0004A8                     PIE10           equ	1192	;# 
  2597   0004A9                     PIE11           equ	1193	;# 
  2598   0004AA                     PIE12           equ	1194	;# 
  2599   0004AB                     PIE13           equ	1195	;# 
  2600   0004AC                     PIE14           equ	1196	;# 
  2601   0004AD                     PIE15           equ	1197	;# 
  2602   0004AE                     PIR0            equ	1198	;# 
  2603   0004AF                     PIR1            equ	1199	;# 
  2604   0004B0                     PIR2            equ	1200	;# 
  2605   0004B1                     PIR3            equ	1201	;# 
  2606   0004B2                     PIR4            equ	1202	;# 
  2607   0004B3                     PIR5            equ	1203	;# 
  2608   0004B4                     PIR6            equ	1204	;# 
  2609   0004B5                     PIR7            equ	1205	;# 
  2610   0004B6                     PIR8            equ	1206	;# 
  2611   0004B7                     PIR9            equ	1207	;# 
  2612   0004B8                     PIR10           equ	1208	;# 
  2613   0004B9                     PIR11           equ	1209	;# 
  2614   0004BA                     PIR12           equ	1210	;# 
  2615   0004BB                     PIR13           equ	1211	;# 
  2616   0004BC                     PIR14           equ	1212	;# 
  2617   0004BD                     PIR15           equ	1213	;# 
  2618   0004BE                     LATA            equ	1214	;# 
  2619   0004BF                     LATB            equ	1215	;# 
  2620   0004C0                     LATC            equ	1216	;# 
  2621   0004C1                     LATD            equ	1217	;# 
  2622   0004C2                     LATE            equ	1218	;# 
  2623   0004C3                     LATF            equ	1219	;# 
  2624   0004C6                     TRISA           equ	1222	;# 
  2625   0004C7                     TRISB           equ	1223	;# 
  2626   0004C8                     TRISC           equ	1224	;# 
  2627   0004C9                     TRISD           equ	1225	;# 
  2628   0004CA                     TRISE           equ	1226	;# 
  2629   0004CB                     TRISF           equ	1227	;# 
  2630   0004CE                     PORTA           equ	1230	;# 
  2631   0004CF                     PORTB           equ	1231	;# 
  2632   0004D0                     PORTC           equ	1232	;# 
  2633   0004D1                     PORTD           equ	1233	;# 
  2634   0004D2                     PORTE           equ	1234	;# 
  2635   0004D3                     PORTF           equ	1235	;# 
  2636   0004D6                     INTCON0         equ	1238	;# 
  2637   0004D7                     INTCON1         equ	1239	;# 
  2638   0004D8                     STATUS          equ	1240	;# 
  2639   0004D9                     FSR2            equ	1241	;# 
  2640   0004D9                     FSR2L           equ	1241	;# 
  2641   0004DA                     FSR2H           equ	1242	;# 
  2642   0004DB                     PLUSW2          equ	1243	;# 
  2643   0004DC                     PREINC2         equ	1244	;# 
  2644   0004DD                     POSTDEC2        equ	1245	;# 
  2645   0004DE                     POSTINC2        equ	1246	;# 
  2646   0004DF                     INDF2           equ	1247	;# 
  2647   0004E0                     BSR             equ	1248	;# 
  2648   0004E1                     FSR1            equ	1249	;# 
  2649   0004E1                     FSR1L           equ	1249	;# 
  2650   0004E2                     FSR1H           equ	1250	;# 
  2651   0004E3                     PLUSW1          equ	1251	;# 
  2652   0004E4                     PREINC1         equ	1252	;# 
  2653   0004E5                     POSTDEC1        equ	1253	;# 
  2654   0004E6                     POSTINC1        equ	1254	;# 
  2655   0004E7                     INDF1           equ	1255	;# 
  2656   0004E8                     WREG            equ	1256	;# 
  2657   0004E9                     FSR0            equ	1257	;# 
  2658   0004E9                     FSR0L           equ	1257	;# 
  2659   0004EA                     FSR0H           equ	1258	;# 
  2660   0004EB                     PLUSW0          equ	1259	;# 
  2661   0004EC                     PREINC0         equ	1260	;# 
  2662   0004ED                     POSTDEC0        equ	1261	;# 
  2663   0004EE                     POSTINC0        equ	1262	;# 
  2664   0004EF                     INDF0           equ	1263	;# 
  2665   0004F0                     PCON0           equ	1264	;# 
  2666   0004F1                     PCON1           equ	1265	;# 
  2667   0004F2                     CPUDOZE         equ	1266	;# 
  2668   0004F3                     PROD            equ	1267	;# 
  2669   0004F3                     PRODL           equ	1267	;# 
  2670   0004F4                     PRODH           equ	1268	;# 
  2671   0004F5                     TABLAT          equ	1269	;# 
  2672   0004F6                     TBLPTR          equ	1270	;# 
  2673   0004F6                     TBLPTRL         equ	1270	;# 
  2674   0004F7                     TBLPTRH         equ	1271	;# 
  2675   0004F8                     TBLPTRU         equ	1272	;# 
  2676   0004F9                     PCLAT           equ	1273	;# 
  2677   0004F9                     PCL             equ	1273	;# 
  2678   0004FA                     PCLATH          equ	1274	;# 
  2679   0004FB                     PCLATU          equ	1275	;# 
  2680   0004FC                     STKPTR          equ	1276	;# 
  2681   0004FD                     TOS             equ	1277	;# 
  2682   0004FD                     TOSL            equ	1277	;# 
  2683   0004FE                     TOSH            equ	1278	;# 
  2684   0004FF                     TOSU            equ	1279	;# 
  2685   000039                     CLKRCON         equ	57	;# 
  2686   00003A                     CLKRCLK         equ	58	;# 
  2687   000040                     NVMCON0         equ	64	;# 
  2688   000041                     NVMCON1         equ	65	;# 
  2689   000042                     NVMLOCK         equ	66	;# 
  2690   000043                     NVMADR          equ	67	;# 
  2691   000043                     NVMADRL         equ	67	;# 
  2692   000044                     NVMADRH         equ	68	;# 
  2693   000045                     NVMADRU         equ	69	;# 
  2694   000046                     NVMDAT          equ	70	;# 
  2695   000046                     NVMDATL         equ	70	;# 
  2696   000047                     NVMDATH         equ	71	;# 
  2697   000048                     VREGCON         equ	72	;# 
  2698   000049                     BORCON          equ	73	;# 
  2699   00004A                     HLVDCON0        equ	74	;# 
  2700   00004B                     HLVDCON1        equ	75	;# 
  2701   00004C                     ZCDCON          equ	76	;# 
  2702   000060                     PMD0            equ	96	;# 
  2703   000061                     PMD1            equ	97	;# 
  2704   000063                     PMD3            equ	99	;# 
  2705   000064                     PMD4            equ	100	;# 
  2706   000065                     PMD5            equ	101	;# 
  2707   000066                     PMD6            equ	102	;# 
  2708   000067                     PMD7            equ	103	;# 
  2709   000068                     PMD8            equ	104	;# 
  2710   00006A                     MD1CON0         equ	106	;# 
  2711   00006B                     MD1CON1         equ	107	;# 
  2712   00006C                     MD1SRC          equ	108	;# 
  2713   00006D                     MD1CARL         equ	109	;# 
  2714   00006E                     MD1CARH         equ	110	;# 
  2715   00006F                     CMOUT           equ	111	;# 
  2716   000070                     CM1CON0         equ	112	;# 
  2717   000071                     CM1CON1         equ	113	;# 
  2718   000072                     CM1NCH          equ	114	;# 
  2719   000073                     CM1PCH          equ	115	;# 
  2720   000074                     CM2CON0         equ	116	;# 
  2721   000075                     CM2CON1         equ	117	;# 
  2722   000076                     CM2NCH          equ	118	;# 
  2723   000077                     CM2PCH          equ	119	;# 
  2724   000078                     WDTCON0         equ	120	;# 
  2725   000079                     WDTCON1         equ	121	;# 
  2726   00007A                     WDTPS           equ	122	;# 
  2727   00007A                     WDTPSL          equ	122	;# 
  2728   00007B                     WDTPSH          equ	123	;# 
  2729   00007C                     WDTTMR          equ	124	;# 
  2730   00007D                     DAC1DAT         equ	125	;# 
  2731   00007D                     DAC1DATL        equ	125	;# 
  2732   00007F                     DAC1CON         equ	127	;# 
  2733   000080                     SPI1RXB         equ	128	;# 
  2734   000081                     SPI1TXB         equ	129	;# 
  2735   000082                     SPI1TCNT        equ	130	;# 
  2736   000082                     SPI1TCNTL       equ	130	;# 
  2737   000083                     SPI1TCNTH       equ	131	;# 
  2738   000084                     SPI1CON0        equ	132	;# 
  2739   000085                     SPI1CON1        equ	133	;# 
  2740   000086                     SPI1CON2        equ	134	;# 
  2741   000087                     SPI1STATUS      equ	135	;# 
  2742   000088                     SPI1TWIDTH      equ	136	;# 
  2743   000089                     SPI1BAUD        equ	137	;# 
  2744   00008A                     SPI1INTF        equ	138	;# 
  2745   00008B                     SPI1INTE        equ	139	;# 
  2746   00008C                     SPI1CLK         equ	140	;# 
  2747   00008D                     SPI2RXB         equ	141	;# 
  2748   00008E                     SPI2TXB         equ	142	;# 
  2749   00008F                     SPI2TCNT        equ	143	;# 
  2750   00008F                     SPI2TCNTL       equ	143	;# 
  2751   000090                     SPI2TCNTH       equ	144	;# 
  2752   000091                     SPI2CON0        equ	145	;# 
  2753   000092                     SPI2CON1        equ	146	;# 
  2754   000093                     SPI2CON2        equ	147	;# 
  2755   000094                     SPI2STATUS      equ	148	;# 
  2756   000095                     SPI2TWIDTH      equ	149	;# 
  2757   000096                     SPI2BAUD        equ	150	;# 
  2758   000097                     SPI2INTF        equ	151	;# 
  2759   000098                     SPI2INTE        equ	152	;# 
  2760   000099                     SPI2CLK         equ	153	;# 
  2761   0000AC                     ACTCON          equ	172	;# 
  2762   0000AD                     OSCCON1         equ	173	;# 
  2763   0000AE                     OSCCON2         equ	174	;# 
  2764   0000AF                     OSCCON3         equ	175	;# 
  2765   0000B0                     OSCTUNE         equ	176	;# 
  2766   0000B1                     OSCFRQ          equ	177	;# 
  2767   0000B1                     OSCFREQ         equ	177	;# 
  2768   0000B2                     OSCSTAT         equ	178	;# 
  2769   0000B2                     OSCSTAT1        equ	178	;# 
  2770   0000B3                     OSCEN           equ	179	;# 
  2771   0000B4                     PRLOCK          equ	180	;# 
  2772   0000B5                     SCANPR          equ	181	;# 
  2773   0000B6                     DMA1PR          equ	182	;# 
  2774   0000B7                     DMA2PR          equ	183	;# 
  2775   0000B8                     DMA3PR          equ	184	;# 
  2776   0000B9                     DMA4PR          equ	185	;# 
  2777   0000BA                     DMA5PR          equ	186	;# 
  2778   0000BB                     DMA6PR          equ	187	;# 
  2779   0000BE                     MAINPR          equ	190	;# 
  2780   0000BF                     ISRPR           equ	191	;# 
  2781   0000D4                     CLCDATA         equ	212	;# 
  2782   0000D5                     CLCSELECT       equ	213	;# 
  2783   0000D6                     CLCnCON         equ	214	;# 
  2784   0000D7                     CLCnPOL         equ	215	;# 
  2785   0000D8                     CLCnSEL0        equ	216	;# 
  2786   0000D9                     CLCnSEL1        equ	217	;# 
  2787   0000DA                     CLCnSEL2        equ	218	;# 
  2788   0000DB                     CLCnSEL3        equ	219	;# 
  2789   0000DC                     CLCnGLS0        equ	220	;# 
  2790   0000DD                     CLCnGLS1        equ	221	;# 
  2791   0000DE                     CLCnGLS2        equ	222	;# 
  2792   0000DF                     CLCnGLS3        equ	223	;# 
  2793   0000E8                     DMASELECT       equ	232	;# 
  2794   0000E9                     DMAnBUF         equ	233	;# 
  2795   0000EA                     DMAnDCNT        equ	234	;# 
  2796   0000EA                     DMAnDCNTL       equ	234	;# 
  2797   0000EB                     DMAnDCNTH       equ	235	;# 
  2798   0000EC                     DMAnDPTR        equ	236	;# 
  2799   0000EC                     DMAnDPTRL       equ	236	;# 
  2800   0000ED                     DMAnDPTRH       equ	237	;# 
  2801   0000EE                     DMAnDSZ         equ	238	;# 
  2802   0000EE                     DMAnDSZL        equ	238	;# 
  2803   0000EF                     DMAnDSZH        equ	239	;# 
  2804   0000F0                     DMAnDSA         equ	240	;# 
  2805   0000F0                     DMAnDSAL        equ	240	;# 
  2806   0000F1                     DMAnDSAH        equ	241	;# 
  2807   0000F2                     DMAnSCNT        equ	242	;# 
  2808   0000F2                     DMAnSCNTL       equ	242	;# 
  2809   0000F3                     DMAnSCNTH       equ	243	;# 
  2810   0000F4                     DMAnSPTR        equ	244	;# 
  2811   0000F4                     DMAnSPTRL       equ	244	;# 
  2812   0000F5                     DMAnSPTRH       equ	245	;# 
  2813   0000F6                     DMAnSPTRU       equ	246	;# 
  2814   0000F7                     DMAnSSZ         equ	247	;# 
  2815   0000F7                     DMAnSSZL        equ	247	;# 
  2816   0000F8                     DMAnSSZH        equ	248	;# 
  2817   0000F9                     DMAnSSA         equ	249	;# 
  2818   0000F9                     DMAnSSAL        equ	249	;# 
  2819   0000FA                     DMAnSSAH        equ	250	;# 
  2820   0000FB                     DMAnSSAU        equ	251	;# 
  2821   0000FC                     DMAnCON0        equ	252	;# 
  2822   0000FD                     DMAnCON1        equ	253	;# 
  2823   0000FE                     DMAnAIRQ        equ	254	;# 
  2824   0000FF                     DMAnSIRQ        equ	255	;# 
  2825   000200                     PPSLOCK         equ	512	;# 
  2826   000201                     RA0PPS          equ	513	;# 
  2827   000202                     RA1PPS          equ	514	;# 
  2828   000203                     RA2PPS          equ	515	;# 
  2829   000204                     RA3PPS          equ	516	;# 
  2830   000205                     RA4PPS          equ	517	;# 
  2831   000206                     RA5PPS          equ	518	;# 
  2832   000207                     RA6PPS          equ	519	;# 
  2833   000208                     RA7PPS          equ	520	;# 
  2834   000209                     RB0PPS          equ	521	;# 
  2835   00020A                     RB1PPS          equ	522	;# 
  2836   00020B                     RB2PPS          equ	523	;# 
  2837   00020C                     RB3PPS          equ	524	;# 
  2838   00020D                     RB4PPS          equ	525	;# 
  2839   00020E                     RB5PPS          equ	526	;# 
  2840   00020F                     RB6PPS          equ	527	;# 
  2841   000210                     RB7PPS          equ	528	;# 
  2842   000211                     RC0PPS          equ	529	;# 
  2843   000212                     RC1PPS          equ	530	;# 
  2844   000213                     RC2PPS          equ	531	;# 
  2845   000214                     RC3PPS          equ	532	;# 
  2846   000215                     RC4PPS          equ	533	;# 
  2847   000216                     RC5PPS          equ	534	;# 
  2848   000217                     RC6PPS          equ	535	;# 
  2849   000218                     RC7PPS          equ	536	;# 
  2850   000219                     RD0PPS          equ	537	;# 
  2851   00021A                     RD1PPS          equ	538	;# 
  2852   00021B                     RD2PPS          equ	539	;# 
  2853   00021C                     RD3PPS          equ	540	;# 
  2854   00021D                     RD4PPS          equ	541	;# 
  2855   00021E                     RD5PPS          equ	542	;# 
  2856   00021F                     RD6PPS          equ	543	;# 
  2857   000220                     RD7PPS          equ	544	;# 
  2858   000221                     RE0PPS          equ	545	;# 
  2859   000222                     RE1PPS          equ	546	;# 
  2860   000223                     RE2PPS          equ	547	;# 
  2861   000229                     RF0PPS          equ	553	;# 
  2862   00022A                     RF1PPS          equ	554	;# 
  2863   00022B                     RF2PPS          equ	555	;# 
  2864   00022C                     RF3PPS          equ	556	;# 
  2865   00022D                     RF4PPS          equ	557	;# 
  2866   00022E                     RF5PPS          equ	558	;# 
  2867   00022F                     RF6PPS          equ	559	;# 
  2868   000230                     RF7PPS          equ	560	;# 
  2869   00023E                     INT0PPS         equ	574	;# 
  2870   00023F                     INT1PPS         equ	575	;# 
  2871   000240                     INT2PPS         equ	576	;# 
  2872   000241                     T0CKIPPS        equ	577	;# 
  2873   000242                     T1CKIPPS        equ	578	;# 
  2874   000243                     T1GPPS          equ	579	;# 
  2875   000244                     T3CKIPPS        equ	580	;# 
  2876   000245                     T3GPPS          equ	581	;# 
  2877   000246                     T5CKIPPS        equ	582	;# 
  2878   000247                     T5GPPS          equ	583	;# 
  2879   000248                     T2INPPS         equ	584	;# 
  2880   000249                     T4INPPS         equ	585	;# 
  2881   00024A                     T6INPPS         equ	586	;# 
  2882   00024F                     CCP1PPS         equ	591	;# 
  2883   000250                     CCP2PPS         equ	592	;# 
  2884   000251                     CCP3PPS         equ	593	;# 
  2885   000253                     PWM1ERSPPS      equ	595	;# 
  2886   000254                     PWM2ERSPPS      equ	596	;# 
  2887   000255                     PWM3ERSPPS      equ	597	;# 
  2888   000257                     PWMIN0PPS       equ	599	;# 
  2889   000258                     PWMIN1PPS       equ	600	;# 
  2890   000259                     SMT1WINPPS      equ	601	;# 
  2891   00025A                     SMT1SIGPPS      equ	602	;# 
  2892   00025B                     CWG1PPS         equ	603	;# 
  2893   00025B                     CWG1INPPS       equ	603	;# 
  2894   00025C                     CWG2PPS         equ	604	;# 
  2895   00025C                     CWG2INPPS       equ	604	;# 
  2896   00025D                     CWG3PPS         equ	605	;# 
  2897   00025D                     CWG3INPPS       equ	605	;# 
  2898   00025E                     MD1CARLPPS      equ	606	;# 
  2899   00025E                     MDCARLPPS       equ	606	;# 
  2900   00025F                     MD1CARHPPS      equ	607	;# 
  2901   00025F                     MDCARHPPS       equ	607	;# 
  2902   000260                     MD1SRCPPS       equ	608	;# 
  2903   000260                     MDSRCPPS        equ	608	;# 
  2904   000261                     CLCIN0PPS       equ	609	;# 
  2905   000262                     CLCIN1PPS       equ	610	;# 
  2906   000263                     CLCIN2PPS       equ	611	;# 
  2907   000264                     CLCIN3PPS       equ	612	;# 
  2908   000265                     CLCIN4PPS       equ	613	;# 
  2909   000266                     CLCIN5PPS       equ	614	;# 
  2910   000267                     CLCIN6PPS       equ	615	;# 
  2911   000268                     CLCIN7PPS       equ	616	;# 
  2912   000269                     ADACTPPS        equ	617	;# 
  2913   00026A                     SPI1SCKPPS      equ	618	;# 
  2914   00026B                     SPI1SDIPPS      equ	619	;# 
  2915   00026C                     SPI1SSPPS       equ	620	;# 
  2916   00026D                     SPI2SCKPPS      equ	621	;# 
  2917   00026E                     SPI2SDIPPS      equ	622	;# 
  2918   00026F                     SPI2SSPPS       equ	623	;# 
  2919   000270                     I2C1SDAPPS      equ	624	;# 
  2920   000271                     I2C1SCLPPS      equ	625	;# 
  2921   000272                     U1RXPPS         equ	626	;# 
  2922   000273                     U1CTSPPS        equ	627	;# 
  2923   000274                     U2RXPPS         equ	628	;# 
  2924   000275                     U2CTSPPS        equ	629	;# 
  2925   000276                     U3RXPPS         equ	630	;# 
  2926   000277                     U3CTSPPS        equ	631	;# 
  2927   000278                     U4RXPPS         equ	632	;# 
  2928   000279                     U4CTSPPS        equ	633	;# 
  2929   00027A                     U5RXPPS         equ	634	;# 
  2930   00027B                     U5CTSPPS        equ	635	;# 
  2931   000286                     RC4I2C          equ	646	;# 
  2932   000287                     RC3I2C          equ	647	;# 
  2933   000288                     RB2I2C          equ	648	;# 
  2934   000289                     RB1I2C          equ	649	;# 
  2935   00028B                     I2C1RXB         equ	651	;# 
  2936   00028C                     I2C1TXB         equ	652	;# 
  2937   00028D                     I2C1CNT         equ	653	;# 
  2938   00028E                     I2C1ADB0        equ	654	;# 
  2939   00028F                     I2C1ADB1        equ	655	;# 
  2940   000290                     I2C1ADR0        equ	656	;# 
  2941   000291                     I2C1ADR1        equ	657	;# 
  2942   000292                     I2C1ADR2        equ	658	;# 
  2943   000293                     I2C1ADR3        equ	659	;# 
  2944   000294                     I2C1CON0        equ	660	;# 
  2945   000295                     I2C1CON1        equ	661	;# 
  2946   000296                     I2C1CON2        equ	662	;# 
  2947   000297                     I2C1ERR         equ	663	;# 
  2948   000298                     I2C1STAT0       equ	664	;# 
  2949   000299                     I2C1STAT1       equ	665	;# 
  2950   00029A                     I2C1PIR         equ	666	;# 
  2951   00029B                     I2C1PIE         equ	667	;# 
  2952   00029C                     I2C1CLK         equ	668	;# 
  2953   00029D                     I2C1BTO         equ	669	;# 
  2954   0002A1                     U1RXB           equ	673	;# 
  2955   0002A1                     U1RXBL          equ	673	;# 
  2956   0002A2                     U1RXCHK         equ	674	;# 
  2957   0002A3                     U1TXB           equ	675	;# 
  2958   0002A3                     U1TXBL          equ	675	;# 
  2959   0002A4                     U1TXCHK         equ	676	;# 
  2960   0002A5                     U1P1            equ	677	;# 
  2961   0002A5                     U1P1L           equ	677	;# 
  2962   0002A6                     U1P1H           equ	678	;# 
  2963   0002A7                     U1P2            equ	679	;# 
  2964   0002A7                     U1P2L           equ	679	;# 
  2965   0002A8                     U1P2H           equ	680	;# 
  2966   0002A9                     U1P3            equ	681	;# 
  2967   0002A9                     U1P3L           equ	681	;# 
  2968   0002AA                     U1P3H           equ	682	;# 
  2969   0002AB                     U1CON0          equ	683	;# 
  2970   0002AC                     U1CON1          equ	684	;# 
  2971   0002AD                     U1CON2          equ	685	;# 
  2972   0002AE                     U1BRG           equ	686	;# 
  2973   0002AE                     U1BRGL          equ	686	;# 
  2974   0002AF                     U1BRGH          equ	687	;# 
  2975   0002B0                     U1FIFO          equ	688	;# 
  2976   0002B1                     U1UIR           equ	689	;# 
  2977   0002B2                     U1ERRIR         equ	690	;# 
  2978   0002B3                     U1ERRIE         equ	691	;# 
  2979   0002B4                     U2RXB           equ	692	;# 
  2980   0002B4                     U2RXBL          equ	692	;# 
  2981   0002B6                     U2TXB           equ	694	;# 
  2982   0002B6                     U2TXBL          equ	694	;# 
  2983   0002B8                     U2P1            equ	696	;# 
  2984   0002B8                     U2P1L           equ	696	;# 
  2985   0002BA                     U2P2            equ	698	;# 
  2986   0002BA                     U2P2L           equ	698	;# 
  2987   0002BC                     U2P3            equ	700	;# 
  2988   0002BC                     U2P3L           equ	700	;# 
  2989   0002BE                     U2CON0          equ	702	;# 
  2990   0002BF                     U2CON1          equ	703	;# 
  2991   0002C0                     U2CON2          equ	704	;# 
  2992   0002C1                     U2BRG           equ	705	;# 
  2993   0002C1                     U2BRGL          equ	705	;# 
  2994   0002C2                     U2BRGH          equ	706	;# 
  2995   0002C3                     U2FIFO          equ	707	;# 
  2996   0002C4                     U2UIR           equ	708	;# 
  2997   0002C5                     U2ERRIR         equ	709	;# 
  2998   0002C6                     U2ERRIE         equ	710	;# 
  2999   0002C7                     U3RXB           equ	711	;# 
  3000   0002C7                     U3RXBL          equ	711	;# 
  3001   0002C9                     U3TXB           equ	713	;# 
  3002   0002C9                     U3TXBL          equ	713	;# 
  3003   0002CB                     U3P1            equ	715	;# 
  3004   0002CB                     U3P1L           equ	715	;# 
  3005   0002CD                     U3P2            equ	717	;# 
  3006   0002CD                     U3P2L           equ	717	;# 
  3007   0002CF                     U3P3            equ	719	;# 
  3008   0002CF                     U3P3L           equ	719	;# 
  3009   0002D1                     U3CON0          equ	721	;# 
  3010   0002D2                     U3CON1          equ	722	;# 
  3011   0002D3                     U3CON2          equ	723	;# 
  3012   0002D4                     U3BRG           equ	724	;# 
  3013   0002D4                     U3BRGL          equ	724	;# 
  3014   0002D5                     U3BRGH          equ	725	;# 
  3015   0002D6                     U3FIFO          equ	726	;# 
  3016   0002D7                     U3UIR           equ	727	;# 
  3017   0002D8                     U3ERRIR         equ	728	;# 
  3018   0002D9                     U3ERRIE         equ	729	;# 
  3019   0002DA                     U4RXB           equ	730	;# 
  3020   0002DA                     U4RXBL          equ	730	;# 
  3021   0002DC                     U4TXB           equ	732	;# 
  3022   0002DC                     U4TXBL          equ	732	;# 
  3023   0002DE                     U4P1            equ	734	;# 
  3024   0002DE                     U4P1L           equ	734	;# 
  3025   0002E0                     U4P2            equ	736	;# 
  3026   0002E0                     U4P2L           equ	736	;# 
  3027   0002E2                     U4P3            equ	738	;# 
  3028   0002E2                     U4P3L           equ	738	;# 
  3029   0002E4                     U4CON0          equ	740	;# 
  3030   0002E5                     U4CON1          equ	741	;# 
  3031   0002E6                     U4CON2          equ	742	;# 
  3032   0002E7                     U4BRG           equ	743	;# 
  3033   0002E7                     U4BRGL          equ	743	;# 
  3034   0002E8                     U4BRGH          equ	744	;# 
  3035   0002E9                     U4FIFO          equ	745	;# 
  3036   0002EA                     U4UIR           equ	746	;# 
  3037   0002EB                     U4ERRIR         equ	747	;# 
  3038   0002EC                     U4ERRIE         equ	748	;# 
  3039   0002ED                     U5RXB           equ	749	;# 
  3040   0002ED                     U5RXBL          equ	749	;# 
  3041   0002EF                     U5TXB           equ	751	;# 
  3042   0002EF                     U5TXBL          equ	751	;# 
  3043   0002F1                     U5P1            equ	753	;# 
  3044   0002F1                     U5P1L           equ	753	;# 
  3045   0002F3                     U5P2            equ	755	;# 
  3046   0002F3                     U5P2L           equ	755	;# 
  3047   0002F5                     U5P3            equ	757	;# 
  3048   0002F5                     U5P3L           equ	757	;# 
  3049   0002F7                     U5CON0          equ	759	;# 
  3050   0002F8                     U5CON1          equ	760	;# 
  3051   0002F9                     U5CON2          equ	761	;# 
  3052   0002FA                     U5BRG           equ	762	;# 
  3053   0002FA                     U5BRGL          equ	762	;# 
  3054   0002FB                     U5BRGH          equ	763	;# 
  3055   0002FC                     U5FIFO          equ	764	;# 
  3056   0002FD                     U5UIR           equ	765	;# 
  3057   0002FE                     U5ERRIR         equ	766	;# 
  3058   0002FF                     U5ERRIE         equ	767	;# 
  3059   000300                     SMT1TMR         equ	768	;# 
  3060   000300                     SMT1TMRL        equ	768	;# 
  3061   000301                     SMT1TMRH        equ	769	;# 
  3062   000302                     SMT1TMRU        equ	770	;# 
  3063   000303                     SMT1CPR         equ	771	;# 
  3064   000303                     SMT1CPRL        equ	771	;# 
  3065   000304                     SMT1CPRH        equ	772	;# 
  3066   000305                     SMT1CPRU        equ	773	;# 
  3067   000306                     SMT1CPW         equ	774	;# 
  3068   000306                     SMT1CPWL        equ	774	;# 
  3069   000307                     SMT1CPWH        equ	775	;# 
  3070   000308                     SMT1CPWU        equ	776	;# 
  3071   000309                     SMT1PR          equ	777	;# 
  3072   000309                     SMT1PRL         equ	777	;# 
  3073   00030A                     SMT1PRH         equ	778	;# 
  3074   00030B                     SMT1PRU         equ	779	;# 
  3075   00030C                     SMT1CON0        equ	780	;# 
  3076   00030D                     SMT1CON1        equ	781	;# 
  3077   00030E                     SMT1STAT        equ	782	;# 
  3078   00030F                     SMT1CLK         equ	783	;# 
  3079   000310                     SMT1SIG         equ	784	;# 
  3080   000311                     SMT1WIN         equ	785	;# 
  3081   000318                     TMR0L           equ	792	;# 
  3082   000318                     TMR0            equ	792	;# 
  3083   000319                     TMR0H           equ	793	;# 
  3084   000319                     PR0             equ	793	;# 
  3085   00031A                     T0CON0          equ	794	;# 
  3086   00031B                     T0CON1          equ	795	;# 
  3087   00031C                     TMR1            equ	796	;# 
  3088   00031C                     TMR1L           equ	796	;# 
  3089   00031D                     TMR1H           equ	797	;# 
  3090   00031E                     T1CON           equ	798	;# 
  3091   00031E                     TMR1CON         equ	798	;# 
  3092   00031F                     T1GCON          equ	799	;# 
  3093   00031F                     TMR1GCON        equ	799	;# 
  3094   000320                     T1GATE          equ	800	;# 
  3095   000320                     TMR1GATE        equ	800	;# 
  3096   000321                     T1CLK           equ	801	;# 
  3097   000321                     TMR1CLK         equ	801	;# 
  3098   000321                     PR1             equ	801	;# 
  3099   000322                     T2TMR           equ	802	;# 
  3100   000322                     TMR2            equ	802	;# 
  3101   000323                     T2PR            equ	803	;# 
  3102   000323                     PR2             equ	803	;# 
  3103   000324                     T2CON           equ	804	;# 
  3104   000325                     T2HLT           equ	805	;# 
  3105   000326                     T2CLKCON        equ	806	;# 
  3106   000326                     T2CLK           equ	806	;# 
  3107   000327                     T2RST           equ	807	;# 
  3108   000328                     TMR3            equ	808	;# 
  3109   000328                     TMR3L           equ	808	;# 
  3110   000329                     TMR3H           equ	809	;# 
  3111   00032A                     T3CON           equ	810	;# 
  3112   00032A                     TMR3CON         equ	810	;# 
  3113   00032B                     T3GCON          equ	811	;# 
  3114   00032B                     TMR3GCON        equ	811	;# 
  3115   00032C                     T3GATE          equ	812	;# 
  3116   00032C                     TMR3GATE        equ	812	;# 
  3117   00032D                     T3CLK           equ	813	;# 
  3118   00032D                     TMR3CLK         equ	813	;# 
  3119   00032D                     PR3             equ	813	;# 
  3120   00032E                     T4TMR           equ	814	;# 
  3121   00032E                     TMR4            equ	814	;# 
  3122   00032F                     T4PR            equ	815	;# 
  3123   00032F                     PR4             equ	815	;# 
  3124   000330                     T4CON           equ	816	;# 
  3125   000331                     T4HLT           equ	817	;# 
  3126   000332                     T4CLKCON        equ	818	;# 
  3127   000332                     T4CLK           equ	818	;# 
  3128   000333                     T4RST           equ	819	;# 
  3129   000334                     TMR5            equ	820	;# 
  3130   000334                     TMR5L           equ	820	;# 
  3131   000335                     TMR5H           equ	821	;# 
  3132   000336                     T5CON           equ	822	;# 
  3133   000336                     TMR5CON         equ	822	;# 
  3134   000337                     T5GCON          equ	823	;# 
  3135   000337                     TMR5GCON        equ	823	;# 
  3136   000338                     T5GATE          equ	824	;# 
  3137   000338                     TMR5GATE        equ	824	;# 
  3138   000339                     T5CLK           equ	825	;# 
  3139   000339                     TMR5CLK         equ	825	;# 
  3140   000339                     PR5             equ	825	;# 
  3141   00033A                     T6TMR           equ	826	;# 
  3142   00033A                     TMR6            equ	826	;# 
  3143   00033B                     T6PR            equ	827	;# 
  3144   00033B                     PR6             equ	827	;# 
  3145   00033C                     T6CON           equ	828	;# 
  3146   00033D                     T6HLT           equ	829	;# 
  3147   00033E                     T6CLKCON        equ	830	;# 
  3148   00033E                     T6CLK           equ	830	;# 
  3149   00033F                     T6RST           equ	831	;# 
  3150   000340                     CCPR1           equ	832	;# 
  3151   000340                     CCPR1L          equ	832	;# 
  3152   000341                     CCPR1H          equ	833	;# 
  3153   000342                     CCP1CON         equ	834	;# 
  3154   000343                     CCP1CAP         equ	835	;# 
  3155   000344                     CCPR2           equ	836	;# 
  3156   000344                     CCPR2L          equ	836	;# 
  3157   000345                     CCPR2H          equ	837	;# 
  3158   000346                     CCP2CON         equ	838	;# 
  3159   000347                     CCP2CAP         equ	839	;# 
  3160   000348                     CCPR3           equ	840	;# 
  3161   000348                     CCPR3L          equ	840	;# 
  3162   000349                     CCPR3H          equ	841	;# 
  3163   00034A                     CCP3CON         equ	842	;# 
  3164   00034B                     CCP3CAP         equ	843	;# 
  3165   00034C                     CCPTMRS0        equ	844	;# 
  3166   00034F                     CRCDATA         equ	847	;# 
  3167   00034F                     CRCDATL         equ	847	;# 
  3168   000350                     CRCDATH         equ	848	;# 
  3169   000351                     CRCACC          equ	849	;# 
  3170   000351                     CRCACCL         equ	849	;# 
  3171   000352                     CRCACCH         equ	850	;# 
  3172   000353                     CRCSHFT         equ	851	;# 
  3173   000353                     CRCSHIFTL       equ	851	;# 
  3174   000354                     CRCSHIFTH       equ	852	;# 
  3175   000355                     CRCXOR          equ	853	;# 
  3176   000355                     CRCXORL         equ	853	;# 
  3177   000356                     CRCXORH         equ	854	;# 
  3178   000357                     CRCCON0         equ	855	;# 
  3179   000358                     CRCCON1         equ	856	;# 
  3180   00035A                     SCANLADR        equ	858	;# 
  3181   00035A                     SCANLADRL       equ	858	;# 
  3182   00035B                     SCANLADRH       equ	859	;# 
  3183   00035C                     SCANLADRU       equ	860	;# 
  3184   00035D                     SCANHADR        equ	861	;# 
  3185   00035D                     SCANHADRL       equ	861	;# 
  3186   00035E                     SCANHADRH       equ	862	;# 
  3187   00035F                     SCANHADRU       equ	863	;# 
  3188   000360                     SCANCON0        equ	864	;# 
  3189   000361                     SCANTRIG        equ	865	;# 
  3190   000362                     IPR0            equ	866	;# 
  3191   000363                     IPR1            equ	867	;# 
  3192   000364                     IPR2            equ	868	;# 
  3193   000365                     IPR3            equ	869	;# 
  3194   000366                     IPR4            equ	870	;# 
  3195   000367                     IPR5            equ	871	;# 
  3196   000368                     IPR6            equ	872	;# 
  3197   000369                     IPR7            equ	873	;# 
  3198   00036A                     IPR8            equ	874	;# 
  3199   00036B                     IPR9            equ	875	;# 
  3200   00036C                     IPR10           equ	876	;# 
  3201   00036D                     IPR11           equ	877	;# 
  3202   00036E                     IPR12           equ	878	;# 
  3203   00036F                     IPR13           equ	879	;# 
  3204   000370                     IPR14           equ	880	;# 
  3205   000371                     IPR15           equ	881	;# 
  3206   000373                     STATUS_CSHAD    equ	883	;# 
  3207   000374                     WREG_CSHAD      equ	884	;# 
  3208   000375                     BSR_CSHAD       equ	885	;# 
  3209   000376                     SHADCON         equ	886	;# 
  3210   000377                     STATUS_SHAD     equ	887	;# 
  3211   000378                     WREG_SHAD       equ	888	;# 
  3212   000379                     BSR_SHAD        equ	889	;# 
  3213   00037A                     PCLATH_SHAD     equ	890	;# 
  3214   00037B                     PCLATU_SHAD     equ	891	;# 
  3215   00037C                     FSR0SH          equ	892	;# 
  3216   00037C                     FSR0L_SHAD      equ	892	;# 
  3217   00037D                     FSR0H_SHAD      equ	893	;# 
  3218   00037E                     FSR1SH          equ	894	;# 
  3219   00037E                     FSR1L_SHAD      equ	894	;# 
  3220   00037F                     FSR1H_SHAD      equ	895	;# 
  3221   000380                     FSR2SH          equ	896	;# 
  3222   000380                     FSR2L_SHAD      equ	896	;# 
  3223   000381                     FSR2H_SHAD      equ	897	;# 
  3224   000382                     PRODSH          equ	898	;# 
  3225   000382                     PRODL_SHAD      equ	898	;# 
  3226   000383                     PRODH_SHAD      equ	899	;# 
  3227   0003BC                     CWG1CLK         equ	956	;# 
  3228   0003BC                     CWG1CLKCON      equ	956	;# 
  3229   0003BD                     CWG1ISM         equ	957	;# 
  3230   0003BD                     CWG1DAT         equ	957	;# 
  3231   0003BE                     CWG1DBR         equ	958	;# 
  3232   0003BF                     CWG1DBF         equ	959	;# 
  3233   0003C0                     CWG1CON0        equ	960	;# 
  3234   0003C1                     CWG1CON1        equ	961	;# 
  3235   0003C2                     CWG1AS0         equ	962	;# 
  3236   0003C3                     CWG1AS1         equ	963	;# 
  3237   0003C4                     CWG1STR         equ	964	;# 
  3238   0003C5                     CWG2CLK         equ	965	;# 
  3239   0003C5                     CWG2CLKCON      equ	965	;# 
  3240   0003C6                     CWG2ISM         equ	966	;# 
  3241   0003C6                     CWG2DAT         equ	966	;# 
  3242   0003C7                     CWG2DBR         equ	967	;# 
  3243   0003C8                     CWG2DBF         equ	968	;# 
  3244   0003C9                     CWG2CON0        equ	969	;# 
  3245   0003CA                     CWG2CON1        equ	970	;# 
  3246   0003CB                     CWG2AS0         equ	971	;# 
  3247   0003CC                     CWG2AS1         equ	972	;# 
  3248   0003CD                     CWG2STR         equ	973	;# 
  3249   0003CE                     CWG3CLK         equ	974	;# 
  3250   0003CE                     CWG3CLKCON      equ	974	;# 
  3251   0003CF                     CWG3ISM         equ	975	;# 
  3252   0003CF                     CWG3DAT         equ	975	;# 
  3253   0003D0                     CWG3DBR         equ	976	;# 
  3254   0003D1                     CWG3DBF         equ	977	;# 
  3255   0003D2                     CWG3CON0        equ	978	;# 
  3256   0003D3                     CWG3CON1        equ	979	;# 
  3257   0003D4                     CWG3AS0         equ	980	;# 
  3258   0003D5                     CWG3AS1         equ	981	;# 
  3259   0003D6                     CWG3STR         equ	982	;# 
  3260   0003D7                     FVRCON          equ	983	;# 
  3261   0003D8                     ADCPCON         equ	984	;# 
  3262   0003D8                     ADCP            equ	984	;# 
  3263   0003D9                     ADLTH           equ	985	;# 
  3264   0003D9                     ADLTHL          equ	985	;# 
  3265   0003DA                     ADLTHH          equ	986	;# 
  3266   0003DB                     ADUTH           equ	987	;# 
  3267   0003DB                     ADUTHL          equ	987	;# 
  3268   0003DC                     ADUTHH          equ	988	;# 
  3269   0003DD                     ADERR           equ	989	;# 
  3270   0003DD                     ADERRL          equ	989	;# 
  3271   0003DE                     ADERRH          equ	990	;# 
  3272   0003DF                     ADSTPT          equ	991	;# 
  3273   0003DF                     ADSTPTL         equ	991	;# 
  3274   0003E0                     ADSTPTH         equ	992	;# 
  3275   0003E1                     ADFLTR          equ	993	;# 
  3276   0003E1                     ADFLTRL         equ	993	;# 
  3277   0003E2                     ADFLTRH         equ	994	;# 
  3278   0003E3                     ADACC           equ	995	;# 
  3279   0003E3                     ADACCL          equ	995	;# 
  3280   0003E4                     ADACCH          equ	996	;# 
  3281   0003E5                     ADACCU          equ	997	;# 
  3282   0003E6                     ADCNT           equ	998	;# 
  3283   0003E7                     ADRPT           equ	999	;# 
  3284   0003E8                     ADPREV          equ	1000	;# 
  3285   0003E8                     ADPREVL         equ	1000	;# 
  3286   0003E9                     ADPREVH         equ	1001	;# 
  3287   0003EA                     ADRES           equ	1002	;# 
  3288   0003EA                     ADRESL          equ	1002	;# 
  3289   0003EB                     ADRESH          equ	1003	;# 
  3290   0003EC                     ADPCH           equ	1004	;# 
  3291   0003EE                     ADACQ           equ	1006	;# 
  3292   0003EE                     ADACQL          equ	1006	;# 
  3293   0003EF                     ADACQH          equ	1007	;# 
  3294   0003F0                     ADCAP           equ	1008	;# 
  3295   0003F1                     ADPRE           equ	1009	;# 
  3296   0003F1                     ADPREL          equ	1009	;# 
  3297   0003F2                     ADPREH          equ	1010	;# 
  3298   0003F3                     ADCON0          equ	1011	;# 
  3299   0003F4                     ADCON1          equ	1012	;# 
  3300   0003F5                     ADCON2          equ	1013	;# 
  3301   0003F6                     ADCON3          equ	1014	;# 
  3302   0003F7                     ADSTAT          equ	1015	;# 
  3303   0003F8                     ADREF           equ	1016	;# 
  3304   0003F9                     ADACT           equ	1017	;# 
  3305   0003FA                     ADCLK           equ	1018	;# 
  3306   000400                     ANSELA          equ	1024	;# 
  3307   000401                     WPUA            equ	1025	;# 
  3308   000402                     ODCONA          equ	1026	;# 
  3309   000403                     SLRCONA         equ	1027	;# 
  3310   000404                     INLVLA          equ	1028	;# 
  3311   000405                     IOCAP           equ	1029	;# 
  3312   000406                     IOCAN           equ	1030	;# 
  3313   000407                     IOCAF           equ	1031	;# 
  3314   000408                     ANSELB          equ	1032	;# 
  3315   000409                     WPUB            equ	1033	;# 
  3316   00040A                     ODCONB          equ	1034	;# 
  3317   00040B                     SLRCONB         equ	1035	;# 
  3318   00040C                     INLVLB          equ	1036	;# 
  3319   00040D                     IOCBP           equ	1037	;# 
  3320   00040E                     IOCBN           equ	1038	;# 
  3321   00040F                     IOCBF           equ	1039	;# 
  3322   000410                     ANSELC          equ	1040	;# 
  3323   000411                     WPUC            equ	1041	;# 
  3324   000412                     ODCONC          equ	1042	;# 
  3325   000413                     SLRCONC         equ	1043	;# 
  3326   000414                     INLVLC          equ	1044	;# 
  3327   000415                     IOCCP           equ	1045	;# 
  3328   000416                     IOCCN           equ	1046	;# 
  3329   000417                     IOCCF           equ	1047	;# 
  3330   000418                     ANSELD          equ	1048	;# 
  3331   000419                     WPUD            equ	1049	;# 
  3332   00041A                     ODCOND          equ	1050	;# 
  3333   00041B                     SLRCOND         equ	1051	;# 
  3334   00041C                     INLVLD          equ	1052	;# 
  3335   000420                     ANSELE          equ	1056	;# 
  3336   000421                     WPUE            equ	1057	;# 
  3337   000422                     ODCONE          equ	1058	;# 
  3338   000423                     SLRCONE         equ	1059	;# 
  3339   000424                     INLVLE          equ	1060	;# 
  3340   000425                     IOCEP           equ	1061	;# 
  3341   000426                     IOCEN           equ	1062	;# 
  3342   000427                     IOCEF           equ	1063	;# 
  3343   000428                     ANSELF          equ	1064	;# 
  3344   000429                     WPUF            equ	1065	;# 
  3345   00042A                     ODCONF          equ	1066	;# 
  3346   00042B                     SLRCONF         equ	1067	;# 
  3347   00042C                     INLVLF          equ	1068	;# 
  3348   000440                     NCO1ACC         equ	1088	;# 
  3349   000440                     NCO1ACCL        equ	1088	;# 
  3350   000441                     NCO1ACCH        equ	1089	;# 
  3351   000442                     NCO1ACCU        equ	1090	;# 
  3352   000443                     NCO1INC         equ	1091	;# 
  3353   000443                     NCO1INCL        equ	1091	;# 
  3354   000444                     NCO1INCH        equ	1092	;# 
  3355   000445                     NCO1INCU        equ	1093	;# 
  3356   000446                     NCO1CON         equ	1094	;# 
  3357   000447                     NCO1CLK         equ	1095	;# 
  3358   000448                     NCO2ACC         equ	1096	;# 
  3359   000448                     NCO2ACCL        equ	1096	;# 
  3360   000449                     NCO2ACCH        equ	1097	;# 
  3361   00044A                     NCO2ACCU        equ	1098	;# 
  3362   00044B                     NCO2INC         equ	1099	;# 
  3363   00044B                     NCO2INCL        equ	1099	;# 
  3364   00044C                     NCO2INCH        equ	1100	;# 
  3365   00044D                     NCO2INCU        equ	1101	;# 
  3366   00044E                     NCO2CON         equ	1102	;# 
  3367   00044F                     NCO2CLK         equ	1103	;# 
  3368   000450                     NCO3ACC         equ	1104	;# 
  3369   000450                     NCO3ACCL        equ	1104	;# 
  3370   000451                     NCO3ACCH        equ	1105	;# 
  3371   000452                     NCO3ACCU        equ	1106	;# 
  3372   000453                     NCO3INC         equ	1107	;# 
  3373   000453                     NCO3INCL        equ	1107	;# 
  3374   000454                     NCO3INCH        equ	1108	;# 
  3375   000455                     NCO3INCU        equ	1109	;# 
  3376   000456                     NCO3CON         equ	1110	;# 
  3377   000457                     NCO3CLK         equ	1111	;# 
  3378   000459                     IVTLOCK         equ	1113	;# 
  3379   00045A                     IVTAD           equ	1114	;# 
  3380   00045A                     IVTADL          equ	1114	;# 
  3381   00045B                     IVTADH          equ	1115	;# 
  3382   00045C                     IVTADU          equ	1116	;# 
  3383   00045D                     IVTBASE         equ	1117	;# 
  3384   00045D                     IVTBASEL        equ	1117	;# 
  3385   00045E                     IVTBASEH        equ	1118	;# 
  3386   00045F                     IVTBASEU        equ	1119	;# 
  3387   000460                     PWM1ERS         equ	1120	;# 
  3388   000461                     PWM1CLK         equ	1121	;# 
  3389   000462                     PWM1LDS         equ	1122	;# 
  3390   000463                     PWM1PR          equ	1123	;# 
  3391   000463                     PWM1PRL         equ	1123	;# 
  3392   000464                     PWM1PRH         equ	1124	;# 
  3393   000465                     PWM1CPRE        equ	1125	;# 
  3394   000466                     PWM1PIPOS       equ	1126	;# 
  3395   000467                     PWM1GIR         equ	1127	;# 
  3396   000468                     PWM1GIE         equ	1128	;# 
  3397   000469                     PWM1CON         equ	1129	;# 
  3398   00046A                     PWM1S1CFG       equ	1130	;# 
  3399   00046B                     PWM1S1P1        equ	1131	;# 
  3400   00046B                     PWM1S1P1L       equ	1131	;# 
  3401   00046C                     PWM1S1P1H       equ	1132	;# 
  3402   00046D                     PWM1S1P2        equ	1133	;# 
  3403   00046D                     PWM1S1P2L       equ	1133	;# 
  3404   00046E                     PWM1S1P2H       equ	1134	;# 
  3405   00046F                     PWM2ERS         equ	1135	;# 
  3406   000470                     PWM2CLK         equ	1136	;# 
  3407   000471                     PWM2LDS         equ	1137	;# 
  3408   000472                     PWM2PR          equ	1138	;# 
  3409   000472                     PWM2PRL         equ	1138	;# 
  3410   000473                     PWM2PRH         equ	1139	;# 
  3411   000474                     PWM2CPRE        equ	1140	;# 
  3412   000475                     PWM2PIPOS       equ	1141	;# 
  3413   000476                     PWM2GIR         equ	1142	;# 
  3414   000477                     PWM2GIE         equ	1143	;# 
  3415   000478                     PWM2CON         equ	1144	;# 
  3416   000479                     PWM2S1CFG       equ	1145	;# 
  3417   00047A                     PWM2S1P1        equ	1146	;# 
  3418   00047A                     PWM2S1P1L       equ	1146	;# 
  3419   00047B                     PWM2S1P1H       equ	1147	;# 
  3420   00047C                     PWM2S1P2        equ	1148	;# 
  3421   00047C                     PWM2S1P2L       equ	1148	;# 
  3422   00047D                     PWM2S1P2H       equ	1149	;# 
  3423   00047E                     PWM3ERS         equ	1150	;# 
  3424   00047F                     PWM3CLK         equ	1151	;# 
  3425   000480                     PWM3LDS         equ	1152	;# 
  3426   000481                     PWM3PR          equ	1153	;# 
  3427   000481                     PWM3PRL         equ	1153	;# 
  3428   000482                     PWM3PRH         equ	1154	;# 
  3429   000483                     PWM3CPRE        equ	1155	;# 
  3430   000484                     PWM3PIPOS       equ	1156	;# 
  3431   000485                     PWM3GIR         equ	1157	;# 
  3432   000486                     PWM3GIE         equ	1158	;# 
  3433   000487                     PWM3CON         equ	1159	;# 
  3434   000488                     PWM3S1CFG       equ	1160	;# 
  3435   000489                     PWM3S1P1        equ	1161	;# 
  3436   000489                     PWM3S1P1L       equ	1161	;# 
  3437   00048A                     PWM3S1P1H       equ	1162	;# 
  3438   00048B                     PWM3S1P2        equ	1163	;# 
  3439   00048B                     PWM3S1P2L       equ	1163	;# 
  3440   00048C                     PWM3S1P2H       equ	1164	;# 
  3441   00049C                     PWMLOAD         equ	1180	;# 
  3442   00049D                     PWMEN           equ	1181	;# 
  3443   00049E                     PIE0            equ	1182	;# 
  3444   00049F                     PIE1            equ	1183	;# 
  3445   0004A0                     PIE2            equ	1184	;# 
  3446   0004A1                     PIE3            equ	1185	;# 
  3447   0004A2                     PIE4            equ	1186	;# 
  3448   0004A3                     PIE5            equ	1187	;# 
  3449   0004A4                     PIE6            equ	1188	;# 
  3450   0004A5                     PIE7            equ	1189	;# 
  3451   0004A6                     PIE8            equ	1190	;# 
  3452   0004A7                     PIE9            equ	1191	;# 
  3453   0004A8                     PIE10           equ	1192	;# 
  3454   0004A9                     PIE11           equ	1193	;# 
  3455   0004AA                     PIE12           equ	1194	;# 
  3456   0004AB                     PIE13           equ	1195	;# 
  3457   0004AC                     PIE14           equ	1196	;# 
  3458   0004AD                     PIE15           equ	1197	;# 
  3459   0004AE                     PIR0            equ	1198	;# 
  3460   0004AF                     PIR1            equ	1199	;# 
  3461   0004B0                     PIR2            equ	1200	;# 
  3462   0004B1                     PIR3            equ	1201	;# 
  3463   0004B2                     PIR4            equ	1202	;# 
  3464   0004B3                     PIR5            equ	1203	;# 
  3465   0004B4                     PIR6            equ	1204	;# 
  3466   0004B5                     PIR7            equ	1205	;# 
  3467   0004B6                     PIR8            equ	1206	;# 
  3468   0004B7                     PIR9            equ	1207	;# 
  3469   0004B8                     PIR10           equ	1208	;# 
  3470   0004B9                     PIR11           equ	1209	;# 
  3471   0004BA                     PIR12           equ	1210	;# 
  3472   0004BB                     PIR13           equ	1211	;# 
  3473   0004BC                     PIR14           equ	1212	;# 
  3474   0004BD                     PIR15           equ	1213	;# 
  3475   0004BE                     LATA            equ	1214	;# 
  3476   0004BF                     LATB            equ	1215	;# 
  3477   0004C0                     LATC            equ	1216	;# 
  3478   0004C1                     LATD            equ	1217	;# 
  3479   0004C2                     LATE            equ	1218	;# 
  3480   0004C3                     LATF            equ	1219	;# 
  3481   0004C6                     TRISA           equ	1222	;# 
  3482   0004C7                     TRISB           equ	1223	;# 
  3483   0004C8                     TRISC           equ	1224	;# 
  3484   0004C9                     TRISD           equ	1225	;# 
  3485   0004CA                     TRISE           equ	1226	;# 
  3486   0004CB                     TRISF           equ	1227	;# 
  3487   0004CE                     PORTA           equ	1230	;# 
  3488   0004CF                     PORTB           equ	1231	;# 
  3489   0004D0                     PORTC           equ	1232	;# 
  3490   0004D1                     PORTD           equ	1233	;# 
  3491   0004D2                     PORTE           equ	1234	;# 
  3492   0004D3                     PORTF           equ	1235	;# 
  3493   0004D6                     INTCON0         equ	1238	;# 
  3494   0004D7                     INTCON1         equ	1239	;# 
  3495   0004D8                     STATUS          equ	1240	;# 
  3496   0004D9                     FSR2            equ	1241	;# 
  3497   0004D9                     FSR2L           equ	1241	;# 
  3498   0004DA                     FSR2H           equ	1242	;# 
  3499   0004DB                     PLUSW2          equ	1243	;# 
  3500   0004DC                     PREINC2         equ	1244	;# 
  3501   0004DD                     POSTDEC2        equ	1245	;# 
  3502   0004DE                     POSTINC2        equ	1246	;# 
  3503   0004DF                     INDF2           equ	1247	;# 
  3504   0004E0                     BSR             equ	1248	;# 
  3505   0004E1                     FSR1            equ	1249	;# 
  3506   0004E1                     FSR1L           equ	1249	;# 
  3507   0004E2                     FSR1H           equ	1250	;# 
  3508   0004E3                     PLUSW1          equ	1251	;# 
  3509   0004E4                     PREINC1         equ	1252	;# 
  3510   0004E5                     POSTDEC1        equ	1253	;# 
  3511   0004E6                     POSTINC1        equ	1254	;# 
  3512   0004E7                     INDF1           equ	1255	;# 
  3513   0004E8                     WREG            equ	1256	;# 
  3514   0004E9                     FSR0            equ	1257	;# 
  3515   0004E9                     FSR0L           equ	1257	;# 
  3516   0004EA                     FSR0H           equ	1258	;# 
  3517   0004EB                     PLUSW0          equ	1259	;# 
  3518   0004EC                     PREINC0         equ	1260	;# 
  3519   0004ED                     POSTDEC0        equ	1261	;# 
  3520   0004EE                     POSTINC0        equ	1262	;# 
  3521   0004EF                     INDF0           equ	1263	;# 
  3522   0004F0                     PCON0           equ	1264	;# 
  3523   0004F1                     PCON1           equ	1265	;# 
  3524   0004F2                     CPUDOZE         equ	1266	;# 
  3525   0004F3                     PROD            equ	1267	;# 
  3526   0004F3                     PRODL           equ	1267	;# 
  3527   0004F4                     PRODH           equ	1268	;# 
  3528   0004F5                     TABLAT          equ	1269	;# 
  3529   0004F6                     TBLPTR          equ	1270	;# 
  3530   0004F6                     TBLPTRL         equ	1270	;# 
  3531   0004F7                     TBLPTRH         equ	1271	;# 
  3532   0004F8                     TBLPTRU         equ	1272	;# 
  3533   0004F9                     PCLAT           equ	1273	;# 
  3534   0004F9                     PCL             equ	1273	;# 
  3535   0004FA                     PCLATH          equ	1274	;# 
  3536   0004FB                     PCLATU          equ	1275	;# 
  3537   0004FC                     STKPTR          equ	1276	;# 
  3538   0004FD                     TOS             equ	1277	;# 
  3539   0004FD                     TOSL            equ	1277	;# 
  3540   0004FE                     TOSH            equ	1278	;# 
  3541   0004FF                     TOSU            equ	1279	;# 
  3542                           
  3543                           	psect	idataCOMRAM
  3544   0033D2                     __pidataCOMRAM:
  3545                           	callstack 0
  3546                           
  3547                           ;initializer for _I2C_LCD_ADDR
  3548   0033D2  27                 	db	39
  3549   000087                     _SPI1STATUSbits set	135
  3550   000081                     _SPI1TXB        set	129
  3551   0000D6                     _CLCnCON        set	214
  3552   0000D7                     _CLCnPOL        set	215
  3553   0000DF                     _CLCnGLS3       set	223
  3554   0000DE                     _CLCnGLS2       set	222
  3555   0000DD                     _CLCnGLS1       set	221
  3556   0000DC                     _CLCnGLS0       set	220
  3557   0000DA                     _CLCnSEL2       set	218
  3558   0000D9                     _CLCnSEL1       set	217
  3559   0000D8                     _CLCnSEL0       set	216
  3560   0000D5                     _CLCSELECT      set	213
  3561   00008C                     _SPI1CLK        set	140
  3562   000086                     _SPI1CON2       set	134
  3563   000085                     _SPI1CON1       set	133
  3564   000084                     _SPI1CON0       set	132
  3565   0000B3                     _OSCEN          set	179
  3566   0000B1                     _OSCFRQ         set	177
  3567   0000AD                     _OSCCON1        set	173
  3568   00022B                     _RF2PPS         set	555
  3569   00029A                     _I2C1PIRbits    set	666
  3570   000295                     _I2C1CON1bits   set	661
  3571   000299                     _I2C1STAT1bits  set	665
  3572   00028C                     _I2C1TXB        set	652
  3573   00028F                     _I2C1ADB1       set	655
  3574   00028D                     _I2C1CNT        set	653
  3575   000296                     _I2C1CON2bits   set	662
  3576   00029C                     _I2C1CLKbits    set	668
  3577   000294                     _I2C1CON0bits   set	660
  3578   000286                     _RC4I2Cbits     set	646
  3579   000287                     _RC3I2Cbits     set	647
  3580   000215                     _RC4PPS         set	533
  3581   000214                     _RC3PPS         set	532
  3582   000340                     _CCPR1L         set	832
  3583   000341                     _CCPR1H         set	833
  3584   000342                     _CCP1CON        set	834
  3585   000323                     _T2PR           set	803
  3586   000326                     _T2CLKCON       set	806
  3587   000324                     _T2CON          set	804
  3588   000408                     _ANSELBbits     set	1032
  3589   000412                     _ODCONCbits     set	1042
  3590   000410                     _ANSELCbits     set	1040
  3591   0004CF                     _PORTBbits      set	1231
  3592   0004BF                     _LATBbits       set	1215
  3593   0004C7                     _TRISBbits      set	1223
  3594   0004C8                     _TRISCbits      set	1224
  3595                           
  3596                           	psect	smallconst
  3597   002600                     __psmallconst:
  3598                           	callstack 0
  3599   002600  00                 	db	0
  3600   002601                     STR_2:
  3601   002601  4D                 	db	77	;'M'
  3602   002602  69                 	db	105	;'i'
  3603   002603  63                 	db	99	;'c'
  3604   002604  72                 	db	114	;'r'
  3605   002605  6F                 	db	111	;'o'
  3606   002606  20                 	db	32
  3607   002607  32                 	db	50	;'2'
  3608   002608  30                 	db	48	;'0'
  3609   002609  32                 	db	50	;'2'
  3610   00260A  35                 	db	53	;'5'
  3611   00260B  2D                 	db	45
  3612   00260C  31                 	db	49	;'1'
  3613   00260D  00                 	db	0
  3614   00260E                     STR_1:
  3615   00260E  48                 	db	72	;'H'
  3616   00260F  6F                 	db	111	;'o'
  3617   002610  6C                 	db	108	;'l'
  3618   002611  61                 	db	97	;'a'
  3619   002612  20                 	db	32
  3620   002613  55                 	db	85	;'U'
  3621   002614  50                 	db	80	;'P'
  3622   002615  43                 	db	67	;'C'
  3623   002616  69                 	db	105	;'i'
  3624   002617  6E                 	db	110	;'n'
  3625   002618  6F                 	db	111	;'o'
  3626   002619  00                 	db	0
  3627   00261A                     STR_4:
  3628   00261A  48                 	db	72	;'H'
  3629   00261B  75                 	db	117	;'u'
  3630   00261C  6D                 	db	109	;'m'
  3631   00261D  65                 	db	101	;'e'
  3632   00261E  64                 	db	100	;'d'
  3633   00261F  20                 	db	32
  3634   002620  44                 	db	68	;'D'
  3635   002621  48                 	db	72	;'H'
  3636   002622  54                 	db	84	;'T'
  3637   002623  3A                 	db	58	;':'
  3638   002624  00                 	db	0
  3639   002625                     STR_3:
  3640   002625  54                 	db	84	;'T'
  3641   002626  65                 	db	101	;'e'
  3642   002627  6D                 	db	109	;'m'
  3643   002628  70                 	db	112	;'p'
  3644   002629  20                 	db	32
  3645   00262A  44                 	db	68	;'D'
  3646   00262B  48                 	db	72	;'H'
  3647   00262C  54                 	db	84	;'T'
  3648   00262D  3A                 	db	58	;':'
  3649   00262E  00                 	db	0
  3650   00262F  00                 	db	0	; dummy byte at the end
  3651   002600                     __smallconst    set	__psmallconst
  3652   002600                     __mediumconst   set	__psmallconst
  3653   000003                     __activetblptr  equ	3
  3654                           
  3655                           ; #config settings
  3656                           
  3657                           	psect	cinit
  3658   00334A                     __pcinit:
  3659                           	callstack 0
  3660   00334A                     start_initialization:
  3661                           	callstack 0
  3662   00334A                     __initialization:
  3663                           	callstack 0
  3664                           
  3665                           ; Initialize objects allocated to COMRAM (1 bytes)
  3666                           ; load TBLPTR registers with __pidataCOMRAM
  3667   00334A  0ED2               	movlw	low __pidataCOMRAM
  3668   00334C  6EF6               	movwf	tblptrl,c
  3669   00334E  0E33               	movlw	high __pidataCOMRAM
  3670   003350  6EF7               	movwf	tblptrh,c
  3671   003352  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3672   003354  6EF8               	movwf	tblptru,c
  3673   003356  0009               	tblrd		*+	;fetch initializer
  3674   003358  C4F5 F51E          	movff	tablat,__pdataCOMRAM
  3675                           
  3676                           ; Clear objects allocated to COMRAM (4 bytes)
  3677   00335C  6A1D               	clrf	(__pbssCOMRAM+3)& (0+255),c
  3678   00335E  6A1C               	clrf	(__pbssCOMRAM+2)& (0+255),c
  3679   003360  6A1B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  3680   003362  6A1A               	clrf	__pbssCOMRAM& (0+255),c
  3681   003364                     end_of_initialization:
  3682                           	callstack 0
  3683   003364                     __end_of__initialization:
  3684                           	callstack 0
  3685   003364  0100               	movlb	0
  3686   003366  EF67  F016         	goto	_main	;jump to C main() function
  3687                           
  3688                           	psect	bssCOMRAM
  3689   00051A                     __pbssCOMRAM:
  3690                           	callstack 0
  3691   00051A                     _humedad_dht11:
  3692                           	callstack 0
  3693   00051A                     	ds	2
  3694   00051C                     _temperatura_dht11:
  3695                           	callstack 0
  3696   00051C                     	ds	2
  3697                           
  3698                           	psect	dataCOMRAM
  3699   00051E                     __pdataCOMRAM:
  3700                           	callstack 0
  3701   00051E                     _I2C_LCD_ADDR:
  3702                           	callstack 0
  3703   00051E                     	ds	1
  3704                           
  3705                           	psect	cstackCOMRAM
  3706   000501                     __pcstackCOMRAM:
  3707                           	callstack 0
  3708   000501                     ?_strlen:
  3709                           	callstack 0
  3710   000501                     ?___lwmod:
  3711                           	callstack 0
  3712   000501                     I2C1_WRITESINGLEBYTE@dato:
  3713                           	callstack 0
  3714   000501                     DHT_Check@modelo:
  3715                           	callstack 0
  3716   000501                     DHT_Read@modelo:
  3717                           	callstack 0
  3718   000501                     WS2812_DATA_SEND@red:
  3719                           	callstack 0
  3720   000501                     strlen@s:
  3721                           	callstack 0
  3722   000501                     ___lwmod@dividend:
  3723                           	callstack 0
  3724   000501                     ??_DHT_Start:
  3725   000501                     
  3726                           ; 1 bytes @ 0x0
  3727   000501                     	ds	1
  3728   000502                     I2C1_WRITESINGLEBYTE@direccion:
  3729                           	callstack 0
  3730   000502                     DHT_Start@modelo:
  3731                           	callstack 0
  3732   000502                     DHT_Check@temp_x:
  3733                           	callstack 0
  3734   000502                     DHT_Read@x:
  3735                           	callstack 0
  3736   000502                     WS2812_DATA_SEND@blue:
  3737                           	callstack 0
  3738   000502                     
  3739                           ; 1 bytes @ 0x1
  3740   000502                     	ds	1
  3741   000503                     DHT_Read@temp_x:
  3742                           	callstack 0
  3743   000503                     WS2812_DATA_SEND@green:
  3744                           	callstack 0
  3745   000503                     strlen@a:
  3746                           	callstack 0
  3747   000503                     ___lwmod@divisor:
  3748                           	callstack 0
  3749   000503                     ??_I2C_ENVIA_LCD_CMD:
  3750   000503                     ??_I2C_ENVIA_LCD_DATA:
  3751   000503                     
  3752                           ; 1 bytes @ 0x2
  3753   000503                     	ds	1
  3754   000504                     I2C_ENVIA_LCD_DATA@data:
  3755                           	callstack 0
  3756   000504                     I2C_ENVIA_LCD_CMD@command:
  3757                           	callstack 0
  3758   000504                     DHT_Read@data:
  3759                           	callstack 0
  3760                           
  3761                           ; 1 bytes @ 0x3
  3762   000504                     	ds	1
  3763   000505                     ?_DHT_GetTemp:
  3764                           	callstack 0
  3765   000505                     ?_DHT_GetHumid:
  3766                           	callstack 0
  3767   000505                     I2C_ENVIA_LCD_DATA@highnibble:
  3768                           	callstack 0
  3769   000505                     I2C_ENVIA_LCD_CMD@highnibble:
  3770                           	callstack 0
  3771   000505                     ___lwmod@counter:
  3772                           	callstack 0
  3773   000505                     
  3774                           ; 1 bytes @ 0x4
  3775   000505                     	ds	1
  3776   000506                     ?___lwdiv:
  3777                           	callstack 0
  3778   000506                     I2C_ENVIA_LCD_DATA@lownibble:
  3779                           	callstack 0
  3780   000506                     I2C_ENVIA_LCD_CMD@lownibble:
  3781                           	callstack 0
  3782   000506                     ___lwdiv@dividend:
  3783                           	callstack 0
  3784                           
  3785                           ; 2 bytes @ 0x5
  3786   000506                     	ds	1
  3787   000507                     I2C_POS_CURSOR@columna:
  3788                           	callstack 0
  3789   000507                     I2C_CURSOR_ONOFF@estado:
  3790                           	callstack 0
  3791   000507                     I2C_ESCRIBE_MENSAJE2@cadena:
  3792                           	callstack 0
  3793   000507                     ??_DHT_GetTemp:
  3794   000507                     ??_DHT_GetHumid:
  3795                           
  3796                           ; 1 bytes @ 0x6
  3797   000507                     	ds	1
  3798   000508                     ___lwdiv@divisor:
  3799                           	callstack 0
  3800   000508                     ??_I2C_POS_CURSOR:
  3801   000508                     ??_I2C_ESCRIBE_MENSAJE2:
  3802   000508                     ??_I2C_LCD_INIT:
  3803                           
  3804                           ; 1 bytes @ 0x7
  3805   000508                     	ds	1
  3806   000509                     I2C_POS_CURSOR@fila:
  3807                           	callstack 0
  3808   000509                     I2C_ESCRIBE_MENSAJE2@tam:
  3809                           	callstack 0
  3810   000509                     DHT_GetTemp@Temp_Dec:
  3811                           	callstack 0
  3812   000509                     DHT_GetHumid@RH_Dec:
  3813                           	callstack 0
  3814                           
  3815                           ; 1 bytes @ 0x8
  3816   000509                     	ds	1
  3817   00050A                     I2C_ESCRIBE_MENSAJE2@i:
  3818                           	callstack 0
  3819   00050A                     DHT_GetTemp@valor_dht:
  3820                           	callstack 0
  3821   00050A                     DHT_GetHumid@valor_dht:
  3822                           	callstack 0
  3823   00050A                     ___lwdiv@quotient:
  3824                           	callstack 0
  3825   00050A                     
  3826                           ; 1 bytes @ 0x9
  3827   00050A                     	ds	2
  3828   00050C                     DHT_GetTemp@Temp_Ent:
  3829                           	callstack 0
  3830   00050C                     DHT_GetHumid@RH_Ent:
  3831                           	callstack 0
  3832   00050C                     ___lwdiv@counter:
  3833                           	callstack 0
  3834                           
  3835                           ; 1 bytes @ 0xB
  3836   00050C                     	ds	1
  3837   00050D                     DHT_GetTemp@modelo:
  3838                           	callstack 0
  3839   00050D                     DHT_GetHumid@modelo:
  3840                           	callstack 0
  3841   00050D                     I2C_LCD_ESCRIBE_VAR_INT@numero:
  3842                           	callstack 0
  3843                           
  3844                           ; 2 bytes @ 0xC
  3845   00050D                     	ds	2
  3846   00050F                     I2C_LCD_ESCRIBE_VAR_INT@n_digitos:
  3847                           	callstack 0
  3848                           
  3849                           ; 1 bytes @ 0xE
  3850   00050F                     	ds	1
  3851   000510                     I2C_LCD_ESCRIBE_VAR_INT@punto:
  3852                           	callstack 0
  3853                           
  3854                           ; 1 bytes @ 0xF
  3855   000510                     	ds	1
  3856   000511                     I2C_LCD_ESCRIBE_VAR_INT@d_millar:
  3857                           	callstack 0
  3858   000511                     
  3859                           ; 1 bytes @ 0x10
  3860   000511                     	ds	1
  3861   000512                     I2C_LCD_ESCRIBE_VAR_INT@millar:
  3862                           	callstack 0
  3863                           
  3864                           ; 1 bytes @ 0x11
  3865   000512                     	ds	1
  3866   000513                     I2C_LCD_ESCRIBE_VAR_INT@centena:
  3867                           	callstack 0
  3868                           
  3869                           ; 1 bytes @ 0x12
  3870   000513                     	ds	1
  3871   000514                     I2C_LCD_ESCRIBE_VAR_INT@decena:
  3872                           	callstack 0
  3873                           
  3874                           ; 1 bytes @ 0x13
  3875   000514                     	ds	1
  3876   000515                     I2C_LCD_ESCRIBE_VAR_INT@unidad:
  3877                           	callstack 0
  3878                           
  3879                           ; 1 bytes @ 0x14
  3880   000515                     	ds	1
  3881   000516                     ??_main:
  3882                           
  3883                           ; 1 bytes @ 0x15
  3884   000516                     	ds	2
  3885   000518                     _main$1491:
  3886                           	callstack 0
  3887                           
  3888                           ; 2 bytes @ 0x17
  3889   000518                     	ds	2
  3890                           
  3891 ;;
  3892 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3893 ;;
  3894 ;; *************** function _main *****************
  3895 ;; Defined at:
  3896 ;;		line 17 in file "maincode03.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;		None
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      void 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3913 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3914 ;;Total ram usage:        4 bytes
  3915 ;; Hardware stack levels required when called: 4
  3916 ;; This function calls:
  3917 ;;		_DHT_GetHumid
  3918 ;;		_DHT_GetTemp
  3919 ;;		_I2C_BORRAR_LCD
  3920 ;;		_I2C_ENVIA_LCD_DATA
  3921 ;;		_I2C_ESCRIBE_MENSAJE2
  3922 ;;		_I2C_LCD_CHAR_GRADO
  3923 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  3924 ;;		_I2C_LCD_INIT
  3925 ;;		_I2C_POS_CURSOR
  3926 ;;		_WS2812_DATA_SEND
  3927 ;;		_WS2812_INIT
  3928 ;;		___lwdiv
  3929 ;;		_configuro
  3930 ;; This function is called by:
  3931 ;;		Startup code after reset
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text0
  3936   002CCE                     __ptext0:
  3937                           	callstack 0
  3938   002CCE                     _main:
  3939                           	callstack 123
  3940                           
  3941                           ;maincode03.c: 18:     configuro();
  3942                           
  3943                           ;incstack = 0
  3944   002CCE  ECD2  F019         	call	_configuro	;wreg free
  3945                           
  3946                           ; BSR set to: 2
  3947                           ;maincode03.c: 19:     I2C_LCD_INIT();
  3948   002CD2  EC18  F013         	call	_I2C_LCD_INIT	;wreg free
  3949                           
  3950                           ;maincode03.c: 20:     WS2812_INIT();
  3951   002CD6  ECC8  F018         	call	_WS2812_INIT	;wreg free
  3952                           
  3953                           ;maincode03.c: 21:     I2C_POS_CURSOR(1,0);
  3954   002CDA  0E00               	movlw	0
  3955   002CDC  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  3956   002CDE  0E01               	movlw	1
  3957   002CE0  EC70  F018         	call	_I2C_POS_CURSOR
  3958                           
  3959                           ;maincode03.c: 22:     I2C_ESCRIBE_MENSAJE2("Hola UPCino");
  3960   002CE4  0E0E               	movlw	low STR_1
  3961   002CE6  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  3962   002CE8  EC62  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  3963                           
  3964                           ;maincode03.c: 23:     I2C_POS_CURSOR(2,0);
  3965   002CEC  0E00               	movlw	0
  3966   002CEE  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  3967   002CF0  0E02               	movlw	2
  3968   002CF2  EC70  F018         	call	_I2C_POS_CURSOR
  3969                           
  3970                           ;maincode03.c: 24:     I2C_ESCRIBE_MENSAJE2("Micro 2025-1");
  3971   002CF6  0E01               	movlw	low STR_2
  3972   002CF8  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  3973   002CFA  EC62  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  3974                           
  3975                           ;maincode03.c: 25:     WS2812_DATA_SEND(0,255,0);
  3976   002CFE  0EFF               	movlw	255
  3977   002D00  6E01               	movwf	WS2812_DATA_SEND@red^(0+1280),c
  3978   002D02  0E00               	movlw	0
  3979   002D04  6E02               	movwf	WS2812_DATA_SEND@blue^(0+1280),c
  3980   002D06  0E00               	movlw	0
  3981   002D08  ECB5  F019         	call	_WS2812_DATA_SEND
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;maincode03.c: 26:     _delay((unsigned long)((2000)*(32000000UL/4000.0)));
  3985   002D0C  0E52               	movlw	82
  3986   002D0E  6E17               	movwf	(??_main+1)^(0+1280),c
  3987   002D10  0E2B               	movlw	43
  3988   002D12  6E16               	movwf	??_main^(0+1280),c
  3989   002D14  0E00               	movlw	0
  3990   002D16                     u1137:
  3991   002D16  2EE8               	decfsz	wreg,f,c
  3992   002D18  D7FE               	bra	u1137
  3993   002D1A  2E16               	decfsz	??_main^(0+1280),f,c
  3994   002D1C  D7FC               	bra	u1137
  3995   002D1E  2E17               	decfsz	(??_main+1)^(0+1280),f,c
  3996   002D20  D7FA               	bra	u1137
  3997   002D22  D000               	nop2	
  3998                           
  3999                           ;maincode03.c: 27:     WS2812_DATA_SEND(255,0,0);
  4000   002D24  0E00               	movlw	0
  4001   002D26  6E01               	movwf	WS2812_DATA_SEND@red^(0+1280),c
  4002   002D28  0E00               	movlw	0
  4003   002D2A  6E02               	movwf	WS2812_DATA_SEND@blue^(0+1280),c
  4004   002D2C  0EFF               	movlw	255
  4005   002D2E  ECB5  F019         	call	_WS2812_DATA_SEND
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;maincode03.c: 28:     I2C_BORRAR_LCD();
  4009   002D32  ECE1  F019         	call	_I2C_BORRAR_LCD	;wreg free
  4010   002D36                     l2353:
  4011                           
  4012                           ;maincode03.c: 30:         temperatura_dht11 = DHT_GetTemp(1);
  4013   002D36  0E01               	movlw	1
  4014   002D38  EC0C  F018         	call	_DHT_GetTemp
  4015   002D3C  C505  F51C         	movff	?_DHT_GetTemp,_temperatura_dht11
  4016   002D40  C506  F51D         	movff	?_DHT_GetTemp+1,_temperatura_dht11+1
  4017                           
  4018                           ;maincode03.c: 31:         I2C_POS_CURSOR(1,0);
  4019   002D44  0E00               	movlw	0
  4020   002D46  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  4021   002D48  0E01               	movlw	1
  4022   002D4A  EC70  F018         	call	_I2C_POS_CURSOR
  4023                           
  4024                           ;maincode03.c: 32:         I2C_ESCRIBE_MENSAJE2("Temp DHT:");
  4025   002D4E  0E25               	movlw	low STR_3
  4026   002D50  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  4027   002D52  EC62  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  4028                           
  4029                           ;maincode03.c: 33:         I2C_LCD_ESCRIBE_VAR_INT(temperatura_dht11/10, 2, 0);
  4030   002D56  C51C  F506         	movff	_temperatura_dht11,___lwdiv@dividend
  4031   002D5A  C51D  F507         	movff	_temperatura_dht11+1,___lwdiv@dividend+1
  4032   002D5E  0E00               	movlw	0
  4033   002D60  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4034   002D62  0E0A               	movlw	10
  4035   002D64  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4036   002D66  ECF3  F018         	call	___lwdiv	;wreg free
  4037   002D6A  C506  F518         	movff	?___lwdiv,_main$1491
  4038   002D6E  C507  F519         	movff	?___lwdiv+1,_main$1491+1
  4039                           
  4040                           ;maincode03.c: 33:         I2C_LCD_ESCRIBE_VAR_INT(temperatura_dht11/10, 2, 0);
  4041   002D72  C518  F50D         	movff	_main$1491,I2C_LCD_ESCRIBE_VAR_INT@numero
  4042   002D76  C519  F50E         	movff	_main$1491+1,I2C_LCD_ESCRIBE_VAR_INT@numero+1
  4043   002D7A  0E02               	movlw	2
  4044   002D7C  6E0F               	movwf	I2C_LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
  4045   002D7E  0E00               	movlw	0
  4046   002D80  6E10               	movwf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),c
  4047   002D82  ECC2  F014         	call	_I2C_LCD_ESCRIBE_VAR_INT	;wreg free
  4048                           
  4049                           ;maincode03.c: 34:         I2C_LCD_CHAR_GRADO();
  4050   002D86  ECE5  F019         	call	_I2C_LCD_CHAR_GRADO	;wreg free
  4051                           
  4052                           ;maincode03.c: 35:         I2C_ENVIA_LCD_DATA('C');
  4053   002D8A  0E43               	movlw	67
  4054   002D8C  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  4055                           
  4056                           ;maincode03.c: 36:         _delay((unsigned long)((1000)*(32000000UL/4000.0)));
  4057   002D90  0E29               	movlw	41
  4058   002D92  6E17               	movwf	(??_main+1)^(0+1280),c
  4059   002D94  0E96               	movlw	150
  4060   002D96  6E16               	movwf	??_main^(0+1280),c
  4061   002D98  0E7F               	movlw	127
  4062   002D9A                     u1147:
  4063   002D9A  2EE8               	decfsz	wreg,f,c
  4064   002D9C  D7FE               	bra	u1147
  4065   002D9E  2E16               	decfsz	??_main^(0+1280),f,c
  4066   002DA0  D7FC               	bra	u1147
  4067   002DA2  2E17               	decfsz	(??_main+1)^(0+1280),f,c
  4068   002DA4  D7FA               	bra	u1147
  4069   002DA6  0000               	nop	
  4070                           
  4071                           ;maincode03.c: 37:         humedad_dht11 = DHT_GetHumid(1);
  4072   002DA8  0E01               	movlw	1
  4073   002DAA  EC3E  F018         	call	_DHT_GetHumid
  4074   002DAE  C505  F51A         	movff	?_DHT_GetHumid,_humedad_dht11
  4075   002DB2  C506  F51B         	movff	?_DHT_GetHumid+1,_humedad_dht11+1
  4076                           
  4077                           ;maincode03.c: 38:         I2C_POS_CURSOR(2,0);
  4078   002DB6  0E00               	movlw	0
  4079   002DB8  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  4080   002DBA  0E02               	movlw	2
  4081   002DBC  EC70  F018         	call	_I2C_POS_CURSOR
  4082                           
  4083                           ;maincode03.c: 39:         I2C_ESCRIBE_MENSAJE2("Humed DHT:");
  4084   002DC0  0E1A               	movlw	low STR_4
  4085   002DC2  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  4086   002DC4  EC62  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  4087                           
  4088                           ;maincode03.c: 40:         I2C_LCD_ESCRIBE_VAR_INT(humedad_dht11/10, 2, 0);
  4089   002DC8  C51A  F506         	movff	_humedad_dht11,___lwdiv@dividend
  4090   002DCC  C51B  F507         	movff	_humedad_dht11+1,___lwdiv@dividend+1
  4091   002DD0  0E00               	movlw	0
  4092   002DD2  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4093   002DD4  0E0A               	movlw	10
  4094   002DD6  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4095   002DD8  ECF3  F018         	call	___lwdiv	;wreg free
  4096   002DDC  C506  F518         	movff	?___lwdiv,_main$1491
  4097   002DE0  C507  F519         	movff	?___lwdiv+1,_main$1491+1
  4098                           
  4099                           ;maincode03.c: 40:         I2C_LCD_ESCRIBE_VAR_INT(humedad_dht11/10, 2, 0);
  4100   002DE4  C518  F50D         	movff	_main$1491,I2C_LCD_ESCRIBE_VAR_INT@numero
  4101   002DE8  C519  F50E         	movff	_main$1491+1,I2C_LCD_ESCRIBE_VAR_INT@numero+1
  4102   002DEC  0E02               	movlw	2
  4103   002DEE  6E0F               	movwf	I2C_LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
  4104   002DF0  0E00               	movlw	0
  4105   002DF2  6E10               	movwf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),c
  4106   002DF4  ECC2  F014         	call	_I2C_LCD_ESCRIBE_VAR_INT	;wreg free
  4107                           
  4108                           ;maincode03.c: 41:         I2C_ENVIA_LCD_DATA('%');
  4109   002DF8  0E25               	movlw	37
  4110   002DFA  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  4111                           
  4112                           ;maincode03.c: 42:         _delay((unsigned long)((1000)*(32000000UL/4000.0)));
  4113   002DFE  0E29               	movlw	41
  4114   002E00  6E17               	movwf	(??_main+1)^(0+1280),c
  4115   002E02  0E96               	movlw	150
  4116   002E04  6E16               	movwf	??_main^(0+1280),c
  4117   002E06  0E7F               	movlw	127
  4118   002E08                     u1157:
  4119   002E08  2EE8               	decfsz	wreg,f,c
  4120   002E0A  D7FE               	bra	u1157
  4121   002E0C  2E16               	decfsz	??_main^(0+1280),f,c
  4122   002E0E  D7FC               	bra	u1157
  4123   002E10  2E17               	decfsz	(??_main+1)^(0+1280),f,c
  4124   002E12  D7FA               	bra	u1157
  4125   002E14  0000               	nop	
  4126   002E16  D78F               	goto	l2353
  4127   002E18                     __end_of_main:
  4128                           	callstack 0
  4129                           
  4130 ;; *************** function _configuro *****************
  4131 ;; Defined at:
  4132 ;;		line 10 in file "maincode03.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;		None
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;		None
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  1    wreg      void 
  4139 ;; Registers used:
  4140 ;;		wreg, status,2
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 3F/2
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4150 ;;Total ram usage:        0 bytes
  4151 ;; Hardware stack levels used: 1
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_main
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text1
  4160   0033A4                     __ptext1:
  4161                           	callstack 0
  4162   0033A4                     _configuro:
  4163                           	callstack 126
  4164                           
  4165                           ;maincode03.c: 11:     OSCCON1 = 0x60;
  4166                           
  4167                           ;incstack = 0
  4168   0033A4  0E60               	movlw	96
  4169   0033A6  0100               	movlb	0	; () banked
  4170   0033A8  6FAD               	movwf	173,b	;volatile
  4171                           
  4172                           ;maincode03.c: 12:     OSCFRQ = 0x06;
  4173   0033AA  0E06               	movlw	6
  4174   0033AC  6FB1               	movwf	177,b	;volatile
  4175                           
  4176                           ;maincode03.c: 13:     OSCEN = 0x40;
  4177   0033AE  0E40               	movlw	64
  4178   0033B0  6FB3               	movwf	179,b	;volatile
  4179                           
  4180                           ;maincode03.c: 14:     RF2PPS = 0x01;
  4181   0033B2  0E01               	movlw	1
  4182   0033B4  0102               	movlb	2	; () banked
  4183   0033B6  6F2B               	movwf	43,b	;volatile
  4184                           
  4185                           ; BSR set to: 2
  4186   0033B8  0012               	return		;funcret
  4187   0033BA                     __end_of_configuro:
  4188                           	callstack 0
  4189                           
  4190 ;; *************** function _WS2812_INIT *****************
  4191 ;; Defined at:
  4192 ;;		line 4 in file "LIB_WS2812.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;		None
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;		None
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  1    wreg      void 
  4199 ;; Registers used:
  4200 ;;		wreg, status,2
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/2
  4203 ;;		On exit  : 3F/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4210 ;;Total ram usage:        0 bytes
  4211 ;; Hardware stack levels used: 1
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_main
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text2
  4220   003190                     __ptext2:
  4221                           	callstack 0
  4222   003190                     _WS2812_INIT:
  4223                           	callstack 126
  4224                           
  4225                           ;LIB_WS2812.c: 6:     T2CON = 0x80;
  4226                           
  4227                           ; BSR set to: 2
  4228                           ;incstack = 0
  4229   003190  0E80               	movlw	128
  4230   003192  0103               	movlb	3	; () banked
  4231   003194  6F24               	movwf	36,b	;volatile
  4232                           
  4233                           ;LIB_WS2812.c: 7:     T2CLKCON = 0x01;
  4234   003196  0E01               	movlw	1
  4235   003198  6F26               	movwf	38,b	;volatile
  4236                           
  4237                           ;LIB_WS2812.c: 8:     T2PR = 5;
  4238   00319A  0E05               	movlw	5
  4239   00319C  6F23               	movwf	35,b	;volatile
  4240                           
  4241                           ;LIB_WS2812.c: 10:     SPI1CON0 = 0x83;
  4242   00319E  0E83               	movlw	131
  4243   0031A0  0100               	movlb	0	; () banked
  4244   0031A2  6F84               	movwf	132,b	;volatile
  4245                           
  4246                           ;LIB_WS2812.c: 11:     SPI1CON1 = 0x40;
  4247   0031A4  0E40               	movlw	64
  4248   0031A6  6F85               	movwf	133,b	;volatile
  4249                           
  4250                           ;LIB_WS2812.c: 12:     SPI1CON2 = 0x02;
  4251   0031A8  0E02               	movlw	2
  4252   0031AA  6F86               	movwf	134,b	;volatile
  4253                           
  4254                           ;LIB_WS2812.c: 13:     SPI1CLK = 0x06;
  4255   0031AC  0E06               	movlw	6
  4256   0031AE  6F8C               	movwf	140,b	;volatile
  4257                           
  4258                           ;LIB_WS2812.c: 15:     CCP1CON = 0x8C;
  4259   0031B0  0E8C               	movlw	140
  4260   0031B2  0103               	movlb	3	; () banked
  4261   0031B4  6F42               	movwf	66,b	;volatile
  4262                           
  4263                           ; BSR set to: 3
  4264                           ;LIB_WS2812.c: 16:     CCPR1H = 0x00;
  4265   0031B6  6B41               	clrf	65,b	;volatile
  4266                           
  4267                           ;LIB_WS2812.c: 17:     CCPR1L = 0x0A;
  4268   0031B8  0E0A               	movlw	10
  4269   0031BA  6F40               	movwf	64,b	;volatile
  4270                           
  4271                           ; BSR set to: 3
  4272                           ;LIB_WS2812.c: 19:     CLCSELECT = 0x00;
  4273   0031BC  0100               	movlb	0	; () banked
  4274   0031BE  6BD5               	clrf	213,b	;volatile
  4275                           
  4276                           ;LIB_WS2812.c: 20:     CLCnSEL0 = 0x1F;
  4277   0031C0  0E1F               	movlw	31
  4278   0031C2  6FD8               	movwf	216,b	;volatile
  4279                           
  4280                           ;LIB_WS2812.c: 21:     CLCnSEL1 = 0x41;
  4281   0031C4  0E41               	movlw	65
  4282   0031C6  6FD9               	movwf	217,b	;volatile
  4283                           
  4284                           ;LIB_WS2812.c: 22:     CLCnSEL2 = 0x40;
  4285   0031C8  0E40               	movlw	64
  4286   0031CA  6FDA               	movwf	218,b	;volatile
  4287                           
  4288                           ;LIB_WS2812.c: 23:     CLCnGLS0 = 0x05;
  4289   0031CC  0E05               	movlw	5
  4290   0031CE  6FDC               	movwf	220,b	;volatile
  4291                           
  4292                           ;LIB_WS2812.c: 24:     CLCnGLS1 = 0x10;
  4293   0031D0  0E10               	movlw	16
  4294   0031D2  6FDD               	movwf	221,b	;volatile
  4295                           
  4296                           ;LIB_WS2812.c: 25:     CLCnGLS2 = 0x08;
  4297   0031D4  0E08               	movlw	8
  4298   0031D6  6FDE               	movwf	222,b	;volatile
  4299                           
  4300                           ;LIB_WS2812.c: 26:     CLCnGLS3 = 0x20;
  4301   0031D8  0E20               	movlw	32
  4302   0031DA  6FDF               	movwf	223,b	;volatile
  4303                           
  4304                           ;LIB_WS2812.c: 27:     CLCnPOL = 0x01;
  4305   0031DC  0E01               	movlw	1
  4306   0031DE  6FD7               	movwf	215,b	;volatile
  4307                           
  4308                           ;LIB_WS2812.c: 28:     CLCnCON = 0x80;
  4309   0031E0  0E80               	movlw	128
  4310   0031E2  6FD6               	movwf	214,b	;volatile
  4311                           
  4312                           ; BSR set to: 0
  4313   0031E4  0012               	return		;funcret
  4314   0031E6                     __end_of_WS2812_INIT:
  4315                           	callstack 0
  4316                           
  4317 ;; *************** function _WS2812_DATA_SEND *****************
  4318 ;; Defined at:
  4319 ;;		line 31 in file "LIB_WS2812.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;  green           1    wreg     unsigned char 
  4322 ;;  red             1    0[COMRAM] unsigned char 
  4323 ;;  blue            1    1[COMRAM] unsigned char 
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;  green           1    2[COMRAM] unsigned char 
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  1    wreg      void 
  4328 ;; Registers used:
  4329 ;;		wreg
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/2
  4332 ;;		On exit  : 3F/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4336 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4338 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4339 ;;Total ram usage:        3 bytes
  4340 ;; Hardware stack levels used: 1
  4341 ;; This function calls:
  4342 ;;		Nothing
  4343 ;; This function is called by:
  4344 ;;		_main
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           	psect	text3
  4349   00336A                     __ptext3:
  4350                           	callstack 0
  4351   00336A                     _WS2812_DATA_SEND:
  4352                           	callstack 126
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;incstack = 0
  4356                           ;WS2812_DATA_SEND@green stored from wreg
  4357   00336A  6E03               	movwf	WS2812_DATA_SEND@green^(0+1280),c
  4358                           
  4359                           ;LIB_WS2812.c: 32:     SPI1TXB = green;
  4360   00336C  C503  F081         	movff	WS2812_DATA_SEND@green,129	;volatile
  4361   003370                     l384:
  4362   003370  0100               	movlb	0	; () banked
  4363   003372  AB87               	btfss	135,5,b	;volatile
  4364   003374  D7FD               	goto	l384
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;LIB_WS2812.c: 34:     SPI1TXB = red;
  4368   003376  C501  F081         	movff	WS2812_DATA_SEND@red,129	;volatile
  4369   00337A                     l387:
  4370                           
  4371                           ; BSR set to: 0
  4372   00337A  AB87               	btfss	135,5,b	;volatile
  4373   00337C  D7FE               	goto	l387
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;LIB_WS2812.c: 36:     SPI1TXB = blue;
  4377   00337E  C502  F081         	movff	WS2812_DATA_SEND@blue,129	;volatile
  4378   003382                     l390:
  4379                           
  4380                           ; BSR set to: 0
  4381   003382  BB87               	btfsc	135,5,b	;volatile
  4382   003384  0012               	return	
  4383   003386  D7FD               	goto	l390
  4384   003388                     __end_of_WS2812_DATA_SEND:
  4385                           	callstack 0
  4386                           
  4387 ;; *************** function _I2C_POS_CURSOR *****************
  4388 ;; Defined at:
  4389 ;;		line 70 in file "I2C_LCD.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  fila            1    wreg     unsigned char 
  4392 ;;  columna         1    6[COMRAM] unsigned char 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  fila            1    8[COMRAM] unsigned char 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  1    wreg      void 
  4397 ;; Registers used:
  4398 ;;		wreg, status,2, status,0, cstack
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4404 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4405 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4407 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4408 ;;Total ram usage:        3 bytes
  4409 ;; Hardware stack levels used: 1
  4410 ;; Hardware stack levels required when called: 2
  4411 ;; This function calls:
  4412 ;;		_I2C_ENVIA_LCD_CMD
  4413 ;; This function is called by:
  4414 ;;		_main
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text4
  4419   0030E0                     __ptext4:
  4420                           	callstack 0
  4421   0030E0                     _I2C_POS_CURSOR:
  4422                           	callstack 124
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;incstack = 0
  4426                           ;I2C_POS_CURSOR@fila stored from wreg
  4427   0030E0  6E09               	movwf	I2C_POS_CURSOR@fila^(0+1280),c
  4428                           
  4429                           ;I2C_LCD.c: 71:  if(fila == 1){
  4430   0030E2  0409               	decf	I2C_POS_CURSOR@fila^(0+1280),w,c
  4431   0030E4  A4D8               	btfss	status,2,c
  4432   0030E6  D005               	goto	l1997
  4433                           
  4434                           ;I2C_LCD.c: 72:   I2C_ENVIA_LCD_CMD(0x80+columna);
  4435   0030E8  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  4436   0030EA  0F80               	addlw	128
  4437   0030EC  ECD8  F017         	call	_I2C_ENVIA_LCD_CMD
  4438                           
  4439                           ;I2C_LCD.c: 73:  }
  4440   0030F0  D01A               	goto	l66
  4441   0030F2                     l1997:
  4442   0030F2  0E02               	movlw	2
  4443   0030F4  1809               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  4444   0030F6  A4D8               	btfss	status,2,c
  4445   0030F8  D005               	goto	l2001
  4446                           
  4447                           ;I2C_LCD.c: 75:   I2C_ENVIA_LCD_CMD(0xC0+columna);
  4448   0030FA  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  4449   0030FC  0FC0               	addlw	192
  4450   0030FE  ECD8  F017         	call	_I2C_ENVIA_LCD_CMD
  4451                           
  4452                           ;I2C_LCD.c: 76:  }
  4453   003102  D011               	goto	l66
  4454   003104                     l2001:
  4455   003104  0E03               	movlw	3
  4456   003106  1809               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  4457   003108  A4D8               	btfss	status,2,c
  4458   00310A  D005               	goto	l2005
  4459                           
  4460                           ;I2C_LCD.c: 78:   I2C_ENVIA_LCD_CMD(0x94+columna);
  4461   00310C  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  4462   00310E  0F94               	addlw	148
  4463   003110  ECD8  F017         	call	_I2C_ENVIA_LCD_CMD
  4464                           
  4465                           ;I2C_LCD.c: 79:  }
  4466   003114  D008               	goto	l66
  4467   003116                     l2005:
  4468   003116  0E04               	movlw	4
  4469   003118  1809               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  4470   00311A  A4D8               	btfss	status,2,c
  4471   00311C  D004               	goto	l66
  4472                           
  4473                           ;I2C_LCD.c: 81:   I2C_ENVIA_LCD_CMD(0xD4+columna);
  4474   00311E  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  4475   003120  0FD4               	addlw	212
  4476   003122  ECD8  F017         	call	_I2C_ENVIA_LCD_CMD
  4477   003126                     l66:
  4478                           
  4479                           ;I2C_LCD.c: 83:  _delay((unsigned long)((1)*(32000000UL/4000.0)));
  4480   003126  0E0B               	movlw	11
  4481   003128  6E08               	movwf	??_I2C_POS_CURSOR^(0+1280),c
  4482   00312A  0E62               	movlw	98
  4483   00312C                     u1167:
  4484   00312C  2EE8               	decfsz	wreg,f,c
  4485   00312E  D7FE               	bra	u1167
  4486   003130  2E08               	decfsz	??_I2C_POS_CURSOR^(0+1280),f,c
  4487   003132  D7FC               	bra	u1167
  4488   003134  D000               	nop2	
  4489   003136  0012               	return		;funcret
  4490   003138                     __end_of_I2C_POS_CURSOR:
  4491                           	callstack 0
  4492                           
  4493 ;; *************** function _I2C_LCD_INIT *****************
  4494 ;; Defined at:
  4495 ;;		line 187 in file "I2C_LCD.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 3F/2
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4511 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4513 ;;Total ram usage:        2 bytes
  4514 ;; Hardware stack levels used: 1
  4515 ;; Hardware stack levels required when called: 3
  4516 ;; This function calls:
  4517 ;;		_I2C1_INIT
  4518 ;;		_I2C1_WRITESINGLEBYTE
  4519 ;;		_I2C_BORRAR_LCD
  4520 ;;		_I2C_CURSOR_HOME
  4521 ;;		_I2C_CURSOR_ONOFF
  4522 ;; This function is called by:
  4523 ;;		_main
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	text5
  4528   002630                     __ptext5:
  4529                           	callstack 0
  4530   002630                     _I2C_LCD_INIT:
  4531                           	callstack 123
  4532                           
  4533                           ; BSR set to: 2
  4534                           ;I2C_LCD.c: 188:     I2C1_INIT();
  4535                           
  4536                           ;incstack = 0
  4537   002630  EC1C  F019         	call	_I2C1_INIT	;wreg free
  4538                           
  4539                           ; BSR set to: 2
  4540                           ;I2C_LCD.c: 189:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  4541   002634  0E9C               	movlw	156
  4542   002636  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4543   002638  0ED7               	movlw	215
  4544   00263A                     u1177:
  4545   00263A  2EE8               	decfsz	wreg,f,c
  4546   00263C  D7FE               	bra	u1177
  4547   00263E  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4548   002640  D7FC               	bra	u1177
  4549   002642  0000               	nop	
  4550                           
  4551                           ;I2C_LCD.c: 191:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4552   002644  0E00               	movlw	0
  4553   002646  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4554   002648  0E27               	movlw	39
  4555   00264A  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4556                           
  4557                           ; BSR set to: 2
  4558                           ;I2C_LCD.c: 192:     _delay((unsigned long)((1000)*(32000000UL/4000.0)));
  4559   00264E  0E29               	movlw	41
  4560   002650  6E09               	movwf	(??_I2C_LCD_INIT+1)^(0+1280),c
  4561   002652  0E96               	movlw	150
  4562   002654  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4563   002656  0E7F               	movlw	127
  4564   002658                     u1187:
  4565   002658  2EE8               	decfsz	wreg,f,c
  4566   00265A  D7FE               	bra	u1187
  4567   00265C  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4568   00265E  D7FC               	bra	u1187
  4569   002660  2E09               	decfsz	(??_I2C_LCD_INIT+1)^(0+1280),f,c
  4570   002662  D7FA               	bra	u1187
  4571   002664  0000               	nop	
  4572                           
  4573                           ;I2C_LCD.c: 195:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4574   002666  0E30               	movlw	48
  4575   002668  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4576   00266A  0E27               	movlw	39
  4577   00266C  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4578                           
  4579                           ; BSR set to: 2
  4580                           ;I2C_LCD.c: 196:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4581   002670  0E30               	movlw	48
  4582   002672  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4583   002674  0E27               	movlw	39
  4584   002676  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4585                           
  4586                           ; BSR set to: 2
  4587                           ;I2C_LCD.c: 197:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4588   00267A  0E35               	movlw	53
  4589   00267C                     u1197:
  4590   00267C  2EE8               	decfsz	wreg,f,c
  4591   00267E  D7FE               	bra	u1197
  4592   002680  0000               	nop	
  4593                           
  4594                           ;I2C_LCD.c: 198:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x34);
  4595   002682  0E34               	movlw	52
  4596   002684  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4597   002686  0E27               	movlw	39
  4598   002688  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4599                           
  4600                           ; BSR set to: 2
  4601                           ;I2C_LCD.c: 199:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4602   00268C  0E35               	movlw	53
  4603   00268E                     u1207:
  4604   00268E  2EE8               	decfsz	wreg,f,c
  4605   002690  D7FE               	bra	u1207
  4606   002692  0000               	nop	
  4607                           
  4608                           ;I2C_LCD.c: 200:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4609   002694  0E30               	movlw	48
  4610   002696  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4611   002698  0E27               	movlw	39
  4612   00269A  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4613                           
  4614                           ; BSR set to: 2
  4615                           ;I2C_LCD.c: 201:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
  4616   00269E  0E34               	movlw	52
  4617   0026A0  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4618   0026A2  0EF2               	movlw	242
  4619   0026A4                     u1217:
  4620   0026A4  2EE8               	decfsz	wreg,f,c
  4621   0026A6  D7FE               	bra	u1217
  4622   0026A8  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4623   0026AA  D7FC               	bra	u1217
  4624                           
  4625                           ;I2C_LCD.c: 203:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4626   0026AC  0E30               	movlw	48
  4627   0026AE  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4628   0026B0  0E27               	movlw	39
  4629   0026B2  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4630                           
  4631                           ; BSR set to: 2
  4632                           ;I2C_LCD.c: 204:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4633   0026B6  0E35               	movlw	53
  4634   0026B8                     u1227:
  4635   0026B8  2EE8               	decfsz	wreg,f,c
  4636   0026BA  D7FE               	bra	u1227
  4637   0026BC  0000               	nop	
  4638                           
  4639                           ;I2C_LCD.c: 205:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x34);
  4640   0026BE  0E34               	movlw	52
  4641   0026C0  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4642   0026C2  0E27               	movlw	39
  4643   0026C4  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4644                           
  4645                           ; BSR set to: 2
  4646                           ;I2C_LCD.c: 206:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4647   0026C8  0E35               	movlw	53
  4648   0026CA                     u1237:
  4649   0026CA  2EE8               	decfsz	wreg,f,c
  4650   0026CC  D7FE               	bra	u1237
  4651   0026CE  0000               	nop	
  4652                           
  4653                           ;I2C_LCD.c: 207:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4654   0026D0  0E30               	movlw	48
  4655   0026D2  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4656   0026D4  0E27               	movlw	39
  4657   0026D6  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4658                           
  4659                           ; BSR set to: 2
  4660                           ;I2C_LCD.c: 209:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
  4661   0026DA  0E34               	movlw	52
  4662   0026DC  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4663   0026DE  0EF2               	movlw	242
  4664   0026E0                     u1247:
  4665   0026E0  2EE8               	decfsz	wreg,f,c
  4666   0026E2  D7FE               	bra	u1247
  4667   0026E4  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4668   0026E6  D7FC               	bra	u1247
  4669                           
  4670                           ;I2C_LCD.c: 211:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4671   0026E8  0E30               	movlw	48
  4672   0026EA  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4673   0026EC  0E27               	movlw	39
  4674   0026EE  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4675                           
  4676                           ; BSR set to: 2
  4677                           ;I2C_LCD.c: 212:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4678   0026F2  0E35               	movlw	53
  4679   0026F4                     u1257:
  4680   0026F4  2EE8               	decfsz	wreg,f,c
  4681   0026F6  D7FE               	bra	u1257
  4682   0026F8  0000               	nop	
  4683                           
  4684                           ;I2C_LCD.c: 213:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x34);
  4685   0026FA  0E34               	movlw	52
  4686   0026FC  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4687   0026FE  0E27               	movlw	39
  4688   002700  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4689                           
  4690                           ; BSR set to: 2
  4691                           ;I2C_LCD.c: 214:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4692   002704  0E35               	movlw	53
  4693   002706                     u1267:
  4694   002706  2EE8               	decfsz	wreg,f,c
  4695   002708  D7FE               	bra	u1267
  4696   00270A  0000               	nop	
  4697                           
  4698                           ;I2C_LCD.c: 215:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4699   00270C  0E30               	movlw	48
  4700   00270E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4701   002710  0E27               	movlw	39
  4702   002712  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4703                           
  4704                           ; BSR set to: 2
  4705                           ;I2C_LCD.c: 217:     _delay((unsigned long)((250)*(32000000UL/4000000.0)));
  4706   002716  0E03               	movlw	3
  4707   002718  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4708   00271A  0E98               	movlw	152
  4709   00271C                     u1277:
  4710   00271C  2EE8               	decfsz	wreg,f,c
  4711   00271E  D7FE               	bra	u1277
  4712   002720  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4713   002722  D7FC               	bra	u1277
  4714                           
  4715                           ;I2C_LCD.c: 219:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4716   002724  0E20               	movlw	32
  4717   002726  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4718   002728  0E27               	movlw	39
  4719   00272A  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4720                           
  4721                           ; BSR set to: 2
  4722                           ;I2C_LCD.c: 220:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4723   00272E  0E35               	movlw	53
  4724   002730                     u1287:
  4725   002730  2EE8               	decfsz	wreg,f,c
  4726   002732  D7FE               	bra	u1287
  4727   002734  0000               	nop	
  4728                           
  4729                           ;I2C_LCD.c: 221:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x24);
  4730   002736  0E24               	movlw	36
  4731   002738  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4732   00273A  0E27               	movlw	39
  4733   00273C  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4734                           
  4735                           ; BSR set to: 2
  4736                           ;I2C_LCD.c: 222:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4737   002740  0E35               	movlw	53
  4738   002742                     u1297:
  4739   002742  2EE8               	decfsz	wreg,f,c
  4740   002744  D7FE               	bra	u1297
  4741   002746  0000               	nop	
  4742                           
  4743                           ;I2C_LCD.c: 223:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4744   002748  0E20               	movlw	32
  4745   00274A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4746   00274C  0E27               	movlw	39
  4747   00274E  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4748                           
  4749                           ; BSR set to: 2
  4750                           ;I2C_LCD.c: 225:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4751   002752  0EC8               	movlw	200
  4752   002754                     u1307:
  4753   002754  2EE8               	decfsz	wreg,f,c
  4754   002756  D7FE               	bra	u1307
  4755                           
  4756                           ;I2C_LCD.c: 227:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4757   002758  0E20               	movlw	32
  4758   00275A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4759   00275C  0E27               	movlw	39
  4760   00275E  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4761                           
  4762                           ; BSR set to: 2
  4763                           ;I2C_LCD.c: 228:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4764   002762  0E35               	movlw	53
  4765   002764                     u1317:
  4766   002764  2EE8               	decfsz	wreg,f,c
  4767   002766  D7FE               	bra	u1317
  4768   002768  0000               	nop	
  4769                           
  4770                           ;I2C_LCD.c: 229:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x24);
  4771   00276A  0E24               	movlw	36
  4772   00276C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4773   00276E  0E27               	movlw	39
  4774   002770  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4775                           
  4776                           ; BSR set to: 2
  4777                           ;I2C_LCD.c: 230:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4778   002774  0E35               	movlw	53
  4779   002776                     u1327:
  4780   002776  2EE8               	decfsz	wreg,f,c
  4781   002778  D7FE               	bra	u1327
  4782   00277A  0000               	nop	
  4783                           
  4784                           ;I2C_LCD.c: 231:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4785   00277C  0E20               	movlw	32
  4786   00277E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4787   002780  0E27               	movlw	39
  4788   002782  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4789                           
  4790                           ; BSR set to: 2
  4791                           ;I2C_LCD.c: 233:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4792   002786  0EC8               	movlw	200
  4793   002788                     u1337:
  4794   002788  2EE8               	decfsz	wreg,f,c
  4795   00278A  D7FE               	bra	u1337
  4796                           
  4797                           ;I2C_LCD.c: 235:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x80);
  4798   00278C  0E80               	movlw	128
  4799   00278E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4800   002790  0E27               	movlw	39
  4801   002792  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4802                           
  4803                           ; BSR set to: 2
  4804                           ;I2C_LCD.c: 236:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4805   002796  0E35               	movlw	53
  4806   002798                     u1347:
  4807   002798  2EE8               	decfsz	wreg,f,c
  4808   00279A  D7FE               	bra	u1347
  4809   00279C  0000               	nop	
  4810                           
  4811                           ;I2C_LCD.c: 237:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x84);
  4812   00279E  0E84               	movlw	132
  4813   0027A0  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4814   0027A2  0E27               	movlw	39
  4815   0027A4  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4816                           
  4817                           ; BSR set to: 2
  4818                           ;I2C_LCD.c: 238:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4819   0027A8  0E35               	movlw	53
  4820   0027AA                     u1357:
  4821   0027AA  2EE8               	decfsz	wreg,f,c
  4822   0027AC  D7FE               	bra	u1357
  4823   0027AE  0000               	nop	
  4824                           
  4825                           ;I2C_LCD.c: 239:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x80);
  4826   0027B0  0E80               	movlw	128
  4827   0027B2  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4828   0027B4  0E27               	movlw	39
  4829   0027B6  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4830                           
  4831                           ; BSR set to: 2
  4832                           ;I2C_LCD.c: 241:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4833   0027BA  0EC8               	movlw	200
  4834   0027BC                     u1367:
  4835   0027BC  2EE8               	decfsz	wreg,f,c
  4836   0027BE  D7FE               	bra	u1367
  4837                           
  4838                           ;I2C_LCD.c: 243:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4839   0027C0  0E00               	movlw	0
  4840   0027C2  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4841   0027C4  0E27               	movlw	39
  4842   0027C6  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4843                           
  4844                           ; BSR set to: 2
  4845                           ;I2C_LCD.c: 244:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4846   0027CA  0E35               	movlw	53
  4847   0027CC                     u1377:
  4848   0027CC  2EE8               	decfsz	wreg,f,c
  4849   0027CE  D7FE               	bra	u1377
  4850   0027D0  0000               	nop	
  4851                           
  4852                           ;I2C_LCD.c: 245:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  4853   0027D2  0E04               	movlw	4
  4854   0027D4  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4855   0027D6  0E27               	movlw	39
  4856   0027D8  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4857                           
  4858                           ; BSR set to: 2
  4859                           ;I2C_LCD.c: 246:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4860   0027DC  0E35               	movlw	53
  4861   0027DE                     u1387:
  4862   0027DE  2EE8               	decfsz	wreg,f,c
  4863   0027E0  D7FE               	bra	u1387
  4864   0027E2  0000               	nop	
  4865                           
  4866                           ;I2C_LCD.c: 247:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4867   0027E4  0E00               	movlw	0
  4868   0027E6  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4869   0027E8  0E27               	movlw	39
  4870   0027EA  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4871                           
  4872                           ; BSR set to: 2
  4873                           ;I2C_LCD.c: 249:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4874   0027EE  0EC8               	movlw	200
  4875   0027F0                     u1397:
  4876   0027F0  2EE8               	decfsz	wreg,f,c
  4877   0027F2  D7FE               	bra	u1397
  4878                           
  4879                           ;I2C_LCD.c: 251:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0xC0);
  4880   0027F4  0EC0               	movlw	192
  4881   0027F6  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4882   0027F8  0E27               	movlw	39
  4883   0027FA  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4884                           
  4885                           ; BSR set to: 2
  4886                           ;I2C_LCD.c: 252:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4887   0027FE  0E35               	movlw	53
  4888   002800                     u1407:
  4889   002800  2EE8               	decfsz	wreg,f,c
  4890   002802  D7FE               	bra	u1407
  4891   002804  0000               	nop	
  4892                           
  4893                           ;I2C_LCD.c: 253:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0xC4);
  4894   002806  0EC4               	movlw	196
  4895   002808  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4896   00280A  0E27               	movlw	39
  4897   00280C  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4898                           
  4899                           ; BSR set to: 2
  4900                           ;I2C_LCD.c: 254:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4901   002810  0E35               	movlw	53
  4902   002812                     u1417:
  4903   002812  2EE8               	decfsz	wreg,f,c
  4904   002814  D7FE               	bra	u1417
  4905   002816  0000               	nop	
  4906                           
  4907                           ;I2C_LCD.c: 255:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0xC0);
  4908   002818  0EC0               	movlw	192
  4909   00281A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4910   00281C  0E27               	movlw	39
  4911   00281E  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4912                           
  4913                           ; BSR set to: 2
  4914                           ;I2C_LCD.c: 257:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4915   002822  0EC8               	movlw	200
  4916   002824                     u1427:
  4917   002824  2EE8               	decfsz	wreg,f,c
  4918   002826  D7FE               	bra	u1427
  4919                           
  4920                           ;I2C_LCD.c: 259:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4921   002828  0E00               	movlw	0
  4922   00282A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4923   00282C  0E27               	movlw	39
  4924   00282E  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4925                           
  4926                           ; BSR set to: 2
  4927                           ;I2C_LCD.c: 260:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4928   002832  0E35               	movlw	53
  4929   002834                     u1437:
  4930   002834  2EE8               	decfsz	wreg,f,c
  4931   002836  D7FE               	bra	u1437
  4932   002838  0000               	nop	
  4933                           
  4934                           ;I2C_LCD.c: 261:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  4935   00283A  0E04               	movlw	4
  4936   00283C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4937   00283E  0E27               	movlw	39
  4938   002840  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4939                           
  4940                           ; BSR set to: 2
  4941                           ;I2C_LCD.c: 262:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4942   002844  0E35               	movlw	53
  4943   002846                     u1447:
  4944   002846  2EE8               	decfsz	wreg,f,c
  4945   002848  D7FE               	bra	u1447
  4946   00284A  0000               	nop	
  4947                           
  4948                           ;I2C_LCD.c: 263:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4949   00284C  0E00               	movlw	0
  4950   00284E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4951   002850  0E27               	movlw	39
  4952   002852  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4953                           
  4954                           ; BSR set to: 2
  4955                           ;I2C_LCD.c: 265:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4956   002856  0EC8               	movlw	200
  4957   002858                     u1457:
  4958   002858  2EE8               	decfsz	wreg,f,c
  4959   00285A  D7FE               	bra	u1457
  4960                           
  4961                           ;I2C_LCD.c: 267:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x10);
  4962   00285C  0E10               	movlw	16
  4963   00285E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4964   002860  0E27               	movlw	39
  4965   002862  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4966                           
  4967                           ; BSR set to: 2
  4968                           ;I2C_LCD.c: 268:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4969   002866  0E35               	movlw	53
  4970   002868                     u1467:
  4971   002868  2EE8               	decfsz	wreg,f,c
  4972   00286A  D7FE               	bra	u1467
  4973   00286C  0000               	nop	
  4974                           
  4975                           ;I2C_LCD.c: 269:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x14);
  4976   00286E  0E14               	movlw	20
  4977   002870  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4978   002872  0E27               	movlw	39
  4979   002874  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4980                           
  4981                           ; BSR set to: 2
  4982                           ;I2C_LCD.c: 270:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4983   002878  0E35               	movlw	53
  4984   00287A                     u1477:
  4985   00287A  2EE8               	decfsz	wreg,f,c
  4986   00287C  D7FE               	bra	u1477
  4987   00287E  0000               	nop	
  4988                           
  4989                           ;I2C_LCD.c: 271:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x10);
  4990   002880  0E10               	movlw	16
  4991   002882  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4992   002884  0E27               	movlw	39
  4993   002886  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  4994                           
  4995                           ; BSR set to: 2
  4996                           ;I2C_LCD.c: 273:      _delay((unsigned long)((2)*(32000000UL/4000.0)));
  4997   00288A  0E15               	movlw	21
  4998   00288C  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4999   00288E  0EC6               	movlw	198
  5000   002890                     u1487:
  5001   002890  2EE8               	decfsz	wreg,f,c
  5002   002892  D7FE               	bra	u1487
  5003   002894  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  5004   002896  D7FC               	bra	u1487
  5005   002898  D000               	nop2	
  5006                           
  5007                           ;I2C_LCD.c: 275:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  5008   00289A  0E00               	movlw	0
  5009   00289C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5010   00289E  0E27               	movlw	39
  5011   0028A0  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5012                           
  5013                           ; BSR set to: 2
  5014                           ;I2C_LCD.c: 276:     _delay((unsigned long)((02)*(32000000UL/4000000.0)));
  5015   0028A4  0E05               	movlw	5
  5016   0028A6                     u1497:
  5017   0028A6  2EE8               	decfsz	wreg,f,c
  5018   0028A8  D7FE               	bra	u1497
  5019   0028AA  0000               	nop	
  5020                           
  5021                           ;I2C_LCD.c: 277:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  5022   0028AC  0E04               	movlw	4
  5023   0028AE  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5024   0028B0  0E27               	movlw	39
  5025   0028B2  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5026                           
  5027                           ; BSR set to: 2
  5028                           ;I2C_LCD.c: 278:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5029   0028B6  0E35               	movlw	53
  5030   0028B8                     u1507:
  5031   0028B8  2EE8               	decfsz	wreg,f,c
  5032   0028BA  D7FE               	bra	u1507
  5033   0028BC  0000               	nop	
  5034                           
  5035                           ;I2C_LCD.c: 279:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  5036   0028BE  0E00               	movlw	0
  5037   0028C0  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5038   0028C2  0E27               	movlw	39
  5039   0028C4  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5040                           
  5041                           ; BSR set to: 2
  5042                           ;I2C_LCD.c: 281:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  5043   0028C8  0EC8               	movlw	200
  5044   0028CA                     u1517:
  5045   0028CA  2EE8               	decfsz	wreg,f,c
  5046   0028CC  D7FE               	bra	u1517
  5047                           
  5048                           ;I2C_LCD.c: 283:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x60);
  5049   0028CE  0E60               	movlw	96
  5050   0028D0  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5051   0028D2  0E27               	movlw	39
  5052   0028D4  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5053                           
  5054                           ; BSR set to: 2
  5055                           ;I2C_LCD.c: 284:     _delay((unsigned long)((02)*(32000000UL/4000000.0)));
  5056   0028D8  0E05               	movlw	5
  5057   0028DA                     u1527:
  5058   0028DA  2EE8               	decfsz	wreg,f,c
  5059   0028DC  D7FE               	bra	u1527
  5060   0028DE  0000               	nop	
  5061                           
  5062                           ;I2C_LCD.c: 285:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x64);
  5063   0028E0  0E64               	movlw	100
  5064   0028E2  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5065   0028E4  0E27               	movlw	39
  5066   0028E6  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5067                           
  5068                           ; BSR set to: 2
  5069                           ;I2C_LCD.c: 286:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5070   0028EA  0E35               	movlw	53
  5071   0028EC                     u1537:
  5072   0028EC  2EE8               	decfsz	wreg,f,c
  5073   0028EE  D7FE               	bra	u1537
  5074   0028F0  0000               	nop	
  5075                           
  5076                           ;I2C_LCD.c: 287:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x60);
  5077   0028F2  0E60               	movlw	96
  5078   0028F4  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5079   0028F6  0E27               	movlw	39
  5080   0028F8  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5081                           
  5082                           ; BSR set to: 2
  5083                           ;I2C_LCD.c: 289:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  5084   0028FC  0EC8               	movlw	200
  5085   0028FE                     u1547:
  5086   0028FE  2EE8               	decfsz	wreg,f,c
  5087   002900  D7FE               	bra	u1547
  5088                           
  5089                           ;I2C_LCD.c: 291:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  5090   002902  0E00               	movlw	0
  5091   002904  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5092   002906  0E27               	movlw	39
  5093   002908  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5094                           
  5095                           ; BSR set to: 2
  5096                           ;I2C_LCD.c: 292:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5097   00290C  0E35               	movlw	53
  5098   00290E                     u1557:
  5099   00290E  2EE8               	decfsz	wreg,f,c
  5100   002910  D7FE               	bra	u1557
  5101   002912  0000               	nop	
  5102                           
  5103                           ;I2C_LCD.c: 293:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  5104   002914  0E04               	movlw	4
  5105   002916  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5106   002918  0E27               	movlw	39
  5107   00291A  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5108                           
  5109                           ; BSR set to: 2
  5110                           ;I2C_LCD.c: 294:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5111   00291E  0E35               	movlw	53
  5112   002920                     u1567:
  5113   002920  2EE8               	decfsz	wreg,f,c
  5114   002922  D7FE               	bra	u1567
  5115   002924  0000               	nop	
  5116                           
  5117                           ;I2C_LCD.c: 295:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  5118   002926  0E00               	movlw	0
  5119   002928  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5120   00292A  0E27               	movlw	39
  5121   00292C  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5122                           
  5123                           ; BSR set to: 2
  5124                           ;I2C_LCD.c: 297:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  5125   002930  0EC8               	movlw	200
  5126   002932                     u1577:
  5127   002932  2EE8               	decfsz	wreg,f,c
  5128   002934  D7FE               	bra	u1577
  5129                           
  5130                           ;I2C_LCD.c: 299:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  5131   002936  0E20               	movlw	32
  5132   002938  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5133   00293A  0E27               	movlw	39
  5134   00293C  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5135                           
  5136                           ; BSR set to: 2
  5137                           ;I2C_LCD.c: 300:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5138   002940  0E35               	movlw	53
  5139   002942                     u1587:
  5140   002942  2EE8               	decfsz	wreg,f,c
  5141   002944  D7FE               	bra	u1587
  5142   002946  0000               	nop	
  5143                           
  5144                           ;I2C_LCD.c: 301:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x24);
  5145   002948  0E24               	movlw	36
  5146   00294A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5147   00294C  0E27               	movlw	39
  5148   00294E  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5149                           
  5150                           ; BSR set to: 2
  5151                           ;I2C_LCD.c: 302:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5152   002952  0E35               	movlw	53
  5153   002954                     u1597:
  5154   002954  2EE8               	decfsz	wreg,f,c
  5155   002956  D7FE               	bra	u1597
  5156   002958  0000               	nop	
  5157                           
  5158                           ;I2C_LCD.c: 303:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  5159   00295A  0E20               	movlw	32
  5160   00295C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5161   00295E  0E27               	movlw	39
  5162   002960  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5163                           
  5164                           ; BSR set to: 2
  5165                           ;I2C_LCD.c: 305:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  5166   002964  0E9C               	movlw	156
  5167   002966  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  5168   002968  0ED7               	movlw	215
  5169   00296A                     u1607:
  5170   00296A  2EE8               	decfsz	wreg,f,c
  5171   00296C  D7FE               	bra	u1607
  5172   00296E  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  5173   002970  D7FC               	bra	u1607
  5174   002972  0000               	nop	
  5175                           
  5176                           ;I2C_LCD.c: 306:     I2C_BORRAR_LCD();
  5177   002974  ECE1  F019         	call	_I2C_BORRAR_LCD	;wreg free
  5178                           
  5179                           ;I2C_LCD.c: 307:     I2C_CURSOR_HOME();
  5180   002978  ECDD  F019         	call	_I2C_CURSOR_HOME	;wreg free
  5181                           
  5182                           ;I2C_LCD.c: 308:     I2C_CURSOR_ONOFF(1);
  5183   00297C  0E01               	movlw	1
  5184   00297E  ECC4  F019         	call	_I2C_CURSOR_ONOFF
  5185   002982  0012               	return		;funcret
  5186   002984                     __end_of_I2C_LCD_INIT:
  5187                           	callstack 0
  5188                           
  5189 ;; *************** function _I2C_CURSOR_ONOFF *****************
  5190 ;; Defined at:
  5191 ;;		line 116 in file "I2C_LCD.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  estado          1    wreg     unsigned char 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  estado          1    6[COMRAM] unsigned char 
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  1    wreg      void 
  5198 ;; Registers used:
  5199 ;;		wreg, status,2, status,0, cstack
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/2
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5208 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5209 ;;Total ram usage:        1 bytes
  5210 ;; Hardware stack levels used: 1
  5211 ;; Hardware stack levels required when called: 2
  5212 ;; This function calls:
  5213 ;;		_I2C_ENVIA_LCD_CMD
  5214 ;; This function is called by:
  5215 ;;		_I2C_LCD_INIT
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           	psect	text6
  5220   003388                     __ptext6:
  5221                           	callstack 0
  5222   003388                     _I2C_CURSOR_ONOFF:
  5223                           	callstack 123
  5224                           
  5225                           ;incstack = 0
  5226                           ;I2C_CURSOR_ONOFF@estado stored from wreg
  5227   003388  6E07               	movwf	I2C_CURSOR_ONOFF@estado^(0+1280),c
  5228                           
  5229                           ;I2C_LCD.c: 117:  if(estado == 0) I2C_ENVIA_LCD_CMD(0x0E);
  5230   00338A  5007               	movf	I2C_CURSOR_ONOFF@estado^(0+1280),w,c
  5231   00338C  A4D8               	btfss	status,2,c
  5232   00338E  D003               	goto	l1767
  5233   003390  0E0E               	movlw	14
  5234   003392  ECD8  F017         	call	_I2C_ENVIA_LCD_CMD
  5235   003396                     l1767:
  5236                           
  5237                           ;I2C_LCD.c: 118:  if(estado == 1) I2C_ENVIA_LCD_CMD(0x0C);
  5238   003396  0407               	decf	I2C_CURSOR_ONOFF@estado^(0+1280),w,c
  5239   003398  A4D8               	btfss	status,2,c
  5240   00339A  0012               	return	
  5241   00339C  0E0C               	movlw	12
  5242   00339E  ECD8  F017         	call	_I2C_ENVIA_LCD_CMD
  5243   0033A2  0012               	return		;funcret
  5244   0033A4                     __end_of_I2C_CURSOR_ONOFF:
  5245                           	callstack 0
  5246                           
  5247 ;; *************** function _I2C_CURSOR_HOME *****************
  5248 ;; Defined at:
  5249 ;;		line 96 in file "I2C_LCD.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		wreg, status,2, status,0, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/2
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5267 ;;Total ram usage:        0 bytes
  5268 ;; Hardware stack levels used: 1
  5269 ;; Hardware stack levels required when called: 2
  5270 ;; This function calls:
  5271 ;;		_I2C_ENVIA_LCD_CMD
  5272 ;; This function is called by:
  5273 ;;		_I2C_LCD_INIT
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text7
  5278   0033BA                     __ptext7:
  5279                           	callstack 0
  5280   0033BA                     _I2C_CURSOR_HOME:
  5281                           	callstack 123
  5282                           
  5283                           ;I2C_LCD.c: 97:  I2C_ENVIA_LCD_CMD(0x02);
  5284                           
  5285                           ;incstack = 0
  5286   0033BA  0E02               	movlw	2
  5287   0033BC  ECD8  F017         	call	_I2C_ENVIA_LCD_CMD
  5288   0033C0  0012               	return		;funcret
  5289   0033C2                     __end_of_I2C_CURSOR_HOME:
  5290                           	callstack 0
  5291                           
  5292 ;; *************** function _I2C_BORRAR_LCD *****************
  5293 ;; Defined at:
  5294 ;;		line 155 in file "I2C_LCD.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;		None
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;		None
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      void 
  5301 ;; Registers used:
  5302 ;;		wreg, status,2, status,0, cstack
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5312 ;;Total ram usage:        0 bytes
  5313 ;; Hardware stack levels used: 1
  5314 ;; Hardware stack levels required when called: 2
  5315 ;; This function calls:
  5316 ;;		_I2C_ENVIA_LCD_CMD
  5317 ;; This function is called by:
  5318 ;;		_I2C_LCD_INIT
  5319 ;;		_main
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text8
  5324   0033C2                     __ptext8:
  5325                           	callstack 0
  5326   0033C2                     _I2C_BORRAR_LCD:
  5327                           	callstack 123
  5328                           
  5329                           ;I2C_LCD.c: 156:  I2C_ENVIA_LCD_CMD(0x01);
  5330                           
  5331                           ;incstack = 0
  5332   0033C2  0E01               	movlw	1
  5333   0033C4  ECD8  F017         	call	_I2C_ENVIA_LCD_CMD
  5334   0033C8  0012               	return		;funcret
  5335   0033CA                     __end_of_I2C_BORRAR_LCD:
  5336                           	callstack 0
  5337                           
  5338 ;; *************** function _I2C_ENVIA_LCD_CMD *****************
  5339 ;; Defined at:
  5340 ;;		line 159 in file "I2C_LCD.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  command         1    wreg     unsigned char 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;  command         1    3[COMRAM] unsigned char 
  5345 ;;  lownibble       1    5[COMRAM] unsigned char 
  5346 ;;  highnibble      1    4[COMRAM] unsigned char 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      void 
  5349 ;; Registers used:
  5350 ;;		wreg, status,2, status,0, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5357 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5358 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5359 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5360 ;;Total ram usage:        4 bytes
  5361 ;; Hardware stack levels used: 1
  5362 ;; Hardware stack levels required when called: 1
  5363 ;; This function calls:
  5364 ;;		_I2C1_WRITESINGLEBYTE
  5365 ;; This function is called by:
  5366 ;;		_I2C_POS_CURSOR
  5367 ;;		_I2C_CURSOR_HOME
  5368 ;;		_I2C_CURSOR_ONOFF
  5369 ;;		_I2C_BORRAR_LCD
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text9
  5374   002FB0                     __ptext9:
  5375                           	callstack 0
  5376   002FB0                     _I2C_ENVIA_LCD_CMD:
  5377                           	callstack 124
  5378                           
  5379                           ;incstack = 0
  5380                           ;I2C_ENVIA_LCD_CMD@command stored from wreg
  5381   002FB0  6E04               	movwf	I2C_ENVIA_LCD_CMD@command^(0+1280),c
  5382                           
  5383                           ;I2C_LCD.c: 160:     unsigned char highnibble;;I2C_LCD.c: 161:     unsigned char lownibb
      +                          le;;I2C_LCD.c: 163:     highnibble = (command & 0xF0) | 0x08;
  5384   002FB2  5004               	movf	I2C_ENVIA_LCD_CMD@command^(0+1280),w,c
  5385   002FB4  0BF0               	andlw	240
  5386   002FB6  0908               	iorlw	8
  5387   002FB8  6E05               	movwf	I2C_ENVIA_LCD_CMD@highnibble^(0+1280),c
  5388                           
  5389                           ;I2C_LCD.c: 164:     lownibble = (unsigned char)(((command & 0x0F)<<4)| 0x08);
  5390   002FBA  C504  F503         	movff	I2C_ENVIA_LCD_CMD@command,??_I2C_ENVIA_LCD_CMD
  5391   002FBE  0E0F               	movlw	15
  5392   002FC0  1603               	andwf	??_I2C_ENVIA_LCD_CMD^(0+1280),f,c
  5393   002FC2  3803               	swapf	??_I2C_ENVIA_LCD_CMD^(0+1280),w,c
  5394   002FC4  0BF0               	andlw	240
  5395   002FC6  0908               	iorlw	8
  5396   002FC8  6E06               	movwf	I2C_ENVIA_LCD_CMD@lownibble^(0+1280),c
  5397                           
  5398                           ;I2C_LCD.c: 166:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(highnibble | 0x04));
  5399   002FCA  5005               	movf	I2C_ENVIA_LCD_CMD@highnibble^(0+1280),w,c
  5400   002FCC  0904               	iorlw	4
  5401   002FCE  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5402   002FD0  0E27               	movlw	39
  5403   002FD2  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5404                           
  5405                           ; BSR set to: 2
  5406                           ;I2C_LCD.c: 167:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5407   002FD6  0E35               	movlw	53
  5408   002FD8                     u1617:
  5409   002FD8  2EE8               	decfsz	wreg,f,c
  5410   002FDA  D7FE               	bra	u1617
  5411   002FDC  0000               	nop	
  5412                           
  5413                           ;I2C_LCD.c: 168:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,highnibble);
  5414   002FDE  C505  F501         	movff	I2C_ENVIA_LCD_CMD@highnibble,I2C1_WRITESINGLEBYTE@dato
  5415   002FE2  0E27               	movlw	39
  5416   002FE4  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5417                           
  5418                           ; BSR set to: 2
  5419                           ;I2C_LCD.c: 169:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5420   002FE8  0E35               	movlw	53
  5421   002FEA                     u1627:
  5422   002FEA  2EE8               	decfsz	wreg,f,c
  5423   002FEC  D7FE               	bra	u1627
  5424   002FEE  0000               	nop	
  5425                           
  5426                           ;I2C_LCD.c: 171:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(lownibble | 0x04));
  5427   002FF0  5006               	movf	I2C_ENVIA_LCD_CMD@lownibble^(0+1280),w,c
  5428   002FF2  0904               	iorlw	4
  5429   002FF4  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5430   002FF6  0E27               	movlw	39
  5431   002FF8  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5432                           
  5433                           ; BSR set to: 2
  5434                           ;I2C_LCD.c: 172:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5435   002FFC  0E35               	movlw	53
  5436   002FFE                     u1637:
  5437   002FFE  2EE8               	decfsz	wreg,f,c
  5438   003000  D7FE               	bra	u1637
  5439   003002  0000               	nop	
  5440                           
  5441                           ;I2C_LCD.c: 173:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,lownibble);
  5442   003004  C506  F501         	movff	I2C_ENVIA_LCD_CMD@lownibble,I2C1_WRITESINGLEBYTE@dato
  5443   003008  0E27               	movlw	39
  5444   00300A  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  5445                           
  5446                           ; BSR set to: 2
  5447                           ;I2C_LCD.c: 174:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5448   00300E  0E35               	movlw	53
  5449   003010                     u1647:
  5450   003010  2EE8               	decfsz	wreg,f,c
  5451   003012  D7FE               	bra	u1647
  5452   003014  0000               	nop	
  5453   003016  0012               	return		;funcret
  5454   003018                     __end_of_I2C_ENVIA_LCD_CMD:
  5455                           	callstack 0
  5456                           
  5457 ;; *************** function _I2C1_INIT *****************
  5458 ;; Defined at:
  5459 ;;		line 34 in file "I2C_LCD.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;		None
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;		None
  5464 ;; Return value:  Size  Location     Type
  5465 ;;                  1    wreg      void 
  5466 ;; Registers used:
  5467 ;;		wreg, status,2
  5468 ;; Tracked objects:
  5469 ;;		On entry : 3F/2
  5470 ;;		On exit  : 3F/2
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5477 ;;Total ram usage:        0 bytes
  5478 ;; Hardware stack levels used: 1
  5479 ;; This function calls:
  5480 ;;		Nothing
  5481 ;; This function is called by:
  5482 ;;		_I2C_LCD_INIT
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           	psect	text10
  5487   003238                     __ptext10:
  5488                           	callstack 0
  5489   003238                     _I2C1_INIT:
  5490                           	callstack 125
  5491                           
  5492                           ; BSR set to: 2
  5493                           ;I2C_LCD.c: 36:     TRISCbits.TRISC3 = 0;
  5494                           
  5495                           ;incstack = 0
  5496   003238  96C8               	bcf	200,3,c	;volatile
  5497                           
  5498                           ;I2C_LCD.c: 37:     TRISCbits.TRISC4 = 0;
  5499   00323A  98C8               	bcf	200,4,c	;volatile
  5500                           
  5501                           ;I2C_LCD.c: 38:     ANSELCbits.ANSELC3 = 0;
  5502   00323C  0104               	movlb	4	; () banked
  5503   00323E  9710               	bcf	16,3,b	;volatile
  5504                           
  5505                           ;I2C_LCD.c: 39:     ANSELCbits.ANSELC4 = 0;
  5506   003240  9910               	bcf	16,4,b	;volatile
  5507                           
  5508                           ;I2C_LCD.c: 40:     ODCONCbits.ODCC3 = 1;
  5509   003242  8712               	bsf	18,3,b	;volatile
  5510                           
  5511                           ;I2C_LCD.c: 41:     ODCONCbits.ODCC4 = 1;
  5512   003244  8912               	bsf	18,4,b	;volatile
  5513                           
  5514                           ; BSR set to: 4
  5515                           ;I2C_LCD.c: 43:     RC3PPS = 0x37;
  5516   003246  0E37               	movlw	55
  5517   003248  0102               	movlb	2	; () banked
  5518   00324A  6F14               	movwf	20,b	;volatile
  5519                           
  5520                           ;I2C_LCD.c: 44:     RC4PPS = 0x38;
  5521   00324C  0E38               	movlw	56
  5522   00324E  6F15               	movwf	21,b	;volatile
  5523                           
  5524                           ;I2C_LCD.c: 46:     RC3I2Cbits.PU = 2;
  5525   003250  5187               	movf	135,w,b	;volatile
  5526   003252  0BCF               	andlw	-49
  5527   003254  0920               	iorlw	32
  5528   003256  6F87               	movwf	135,b	;volatile
  5529                           
  5530                           ;I2C_LCD.c: 47:     RC3I2Cbits.TH = 1;
  5531   003258  5187               	movf	135,w,b	;volatile
  5532   00325A  0BFC               	andlw	-4
  5533   00325C  0901               	iorlw	1
  5534   00325E  6F87               	movwf	135,b	;volatile
  5535                           
  5536                           ;I2C_LCD.c: 48:     RC4I2Cbits.PU = 2;
  5537   003260  5186               	movf	134,w,b	;volatile
  5538   003262  0BCF               	andlw	-49
  5539   003264  0920               	iorlw	32
  5540   003266  6F86               	movwf	134,b	;volatile
  5541                           
  5542                           ;I2C_LCD.c: 49:     RC4I2Cbits.TH = 1;
  5543   003268  5186               	movf	134,w,b	;volatile
  5544   00326A  0BFC               	andlw	-4
  5545   00326C  0901               	iorlw	1
  5546   00326E  6F86               	movwf	134,b	;volatile
  5547                           
  5548                           ; BSR set to: 2
  5549                           ;I2C_LCD.c: 50:     I2C1CON0bits.EN = 1;
  5550   003270  8F94               	bsf	148,7,b	;volatile
  5551                           
  5552                           ;I2C_LCD.c: 51:     I2C1CLKbits.CLK = 3;
  5553   003272  0E03               	movlw	3
  5554   003274  6F9C               	movwf	156,b	;volatile
  5555                           
  5556                           ;I2C_LCD.c: 52:     I2C1CON0bits.MODE = 0x4;
  5557   003276  5194               	movf	148,w,b	;volatile
  5558   003278  0BF8               	andlw	-8
  5559   00327A  0904               	iorlw	4
  5560   00327C  6F94               	movwf	148,b	;volatile
  5561                           
  5562                           ; BSR set to: 2
  5563                           ;I2C_LCD.c: 53:     I2C1CON2bits.ABD = 0;
  5564   00327E  9996               	bcf	150,4,b	;volatile
  5565                           
  5566                           ; BSR set to: 2
  5567   003280  0012               	return		;funcret
  5568   003282                     __end_of_I2C1_INIT:
  5569                           	callstack 0
  5570                           
  5571 ;; *************** function _I2C_LCD_ESCRIBE_VAR_INT *****************
  5572 ;; Defined at:
  5573 ;;		line 333 in file "I2C_LCD.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  numero          2   12[COMRAM] unsigned int 
  5576 ;;  n_digitos       1   14[COMRAM] unsigned char 
  5577 ;;  punto           1   15[COMRAM] unsigned char 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;  unidad          1   20[COMRAM] unsigned char 
  5580 ;;  decena          1   19[COMRAM] unsigned char 
  5581 ;;  centena         1   18[COMRAM] unsigned char 
  5582 ;;  millar          1   17[COMRAM] unsigned char 
  5583 ;;  d_millar        1   16[COMRAM] unsigned char 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      void 
  5586 ;; Registers used:
  5587 ;;		wreg, status,2, status,0, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5593 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5594 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5596 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5597 ;;Total ram usage:        9 bytes
  5598 ;; Hardware stack levels used: 1
  5599 ;; Hardware stack levels required when called: 2
  5600 ;; This function calls:
  5601 ;;		_I2C_ENVIA_LCD_DATA
  5602 ;;		___lwdiv
  5603 ;;		___lwmod
  5604 ;; This function is called by:
  5605 ;;		_main
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           	psect	text11
  5610   002984                     __ptext11:
  5611                           	callstack 0
  5612   002984                     _I2C_LCD_ESCRIBE_VAR_INT:
  5613                           	callstack 124
  5614                           
  5615                           ;I2C_LCD.c: 334:     unsigned char d_millar, millar, centena, decena, unidad;;I2C_LCD.c:
      +                           335:     d_millar = numero / 10000;
  5616                           
  5617                           ; BSR set to: 2
  5618                           ;incstack = 0
  5619   002984  C50D  F506         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  5620   002988  C50E  F507         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  5621   00298C  0E27               	movlw	39
  5622   00298E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5623   002990  0E10               	movlw	16
  5624   002992  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  5625   002994  ECF3  F018         	call	___lwdiv	;wreg free
  5626   002998  5006               	movf	?___lwdiv^(0+1280),w,c
  5627   00299A  6E11               	movwf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  5628                           
  5629                           ;I2C_LCD.c: 336:     millar = (numero % 10000) / 1000;
  5630   00299C  0E27               	movlw	39
  5631   00299E  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5632   0029A0  0E10               	movlw	16
  5633   0029A2  6E03               	movwf	___lwmod@divisor^(0+1280),c
  5634   0029A4  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5635   0029A8  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5636   0029AC  EC41  F019         	call	___lwmod	;wreg free
  5637   0029B0  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  5638   0029B4  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  5639   0029B8  0E03               	movlw	3
  5640   0029BA  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5641   0029BC  0EE8               	movlw	232
  5642   0029BE  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  5643   0029C0  ECF3  F018         	call	___lwdiv	;wreg free
  5644   0029C4  5006               	movf	?___lwdiv^(0+1280),w,c
  5645   0029C6  6E12               	movwf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),c
  5646                           
  5647                           ;I2C_LCD.c: 337:     centena = (numero % 1000) / 100;
  5648   0029C8  0E03               	movlw	3
  5649   0029CA  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5650   0029CC  0EE8               	movlw	232
  5651   0029CE  6E03               	movwf	___lwmod@divisor^(0+1280),c
  5652   0029D0  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5653   0029D4  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5654   0029D8  EC41  F019         	call	___lwmod	;wreg free
  5655   0029DC  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  5656   0029E0  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  5657   0029E4  0E00               	movlw	0
  5658   0029E6  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5659   0029E8  0E64               	movlw	100
  5660   0029EA  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  5661   0029EC  ECF3  F018         	call	___lwdiv	;wreg free
  5662   0029F0  5006               	movf	?___lwdiv^(0+1280),w,c
  5663   0029F2  6E13               	movwf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),c
  5664                           
  5665                           ;I2C_LCD.c: 338:     decena = (numero % 100) / 10;
  5666   0029F4  0E00               	movlw	0
  5667   0029F6  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5668   0029F8  0E64               	movlw	100
  5669   0029FA  6E03               	movwf	___lwmod@divisor^(0+1280),c
  5670   0029FC  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5671   002A00  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5672   002A04  EC41  F019         	call	___lwmod	;wreg free
  5673   002A08  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  5674   002A0C  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  5675   002A10  0E00               	movlw	0
  5676   002A12  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5677   002A14  0E0A               	movlw	10
  5678   002A16  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  5679   002A18  ECF3  F018         	call	___lwdiv	;wreg free
  5680   002A1C  5006               	movf	?___lwdiv^(0+1280),w,c
  5681   002A1E  6E14               	movwf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),c
  5682                           
  5683                           ;I2C_LCD.c: 339:     unidad = numero % 10;
  5684   002A20  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5685   002A24  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5686   002A28  0E00               	movlw	0
  5687   002A2A  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5688   002A2C  0E0A               	movlw	10
  5689   002A2E  6E03               	movwf	___lwmod@divisor^(0+1280),c
  5690   002A30  EC41  F019         	call	___lwmod	;wreg free
  5691   002A34  5001               	movf	?___lwmod^(0+1280),w,c
  5692   002A36  6E15               	movwf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),c
  5693                           
  5694                           ;I2C_LCD.c: 340:     switch(n_digitos){
  5695   002A38  D139               	goto	l2257
  5696   002A3A                     l2209:
  5697                           
  5698                           ;I2C_LCD.c: 342:             I2C_ENVIA_LCD_DATA(unidad+0x30);
  5699   002A3A  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5700   002A3C  0F30               	addlw	48
  5701   002A3E  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5702                           
  5703                           ;I2C_LCD.c: 343:             break;
  5704   002A42  0012               	return	
  5705   002A44                     l2211:
  5706                           
  5707                           ;I2C_LCD.c: 345:             if(punto == 0){
  5708   002A44  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5709   002A46  A4D8               	btfss	status,2,c
  5710   002A48  D009               	goto	l2215
  5711                           
  5712                           ;I2C_LCD.c: 346:                 I2C_ENVIA_LCD_DATA(decena+0x30);
  5713   002A4A  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5714   002A4C  0F30               	addlw	48
  5715   002A4E  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5716                           
  5717                           ;I2C_LCD.c: 347:                 I2C_ENVIA_LCD_DATA(unidad+0x30);
  5718   002A52  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5719   002A54  0F30               	addlw	48
  5720   002A56  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5721                           
  5722                           ;I2C_LCD.c: 348:             }
  5723   002A5A  0012               	return	
  5724   002A5C                     l2215:
  5725   002A5C  0410               	decf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5726   002A5E  A4D8               	btfss	status,2,c
  5727   002A60  0012               	return	
  5728                           
  5729                           ;I2C_LCD.c: 350:                 I2C_ENVIA_LCD_DATA(decena+0x30);
  5730   002A62  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5731   002A64  0F30               	addlw	48
  5732   002A66  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5733                           
  5734                           ;I2C_LCD.c: 351:                 I2C_ENVIA_LCD_DATA('.');
  5735   002A6A  0E2E               	movlw	46
  5736   002A6C  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5737                           
  5738                           ;I2C_LCD.c: 352:                 I2C_ENVIA_LCD_DATA(unidad+0x30);
  5739   002A70  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5740   002A72  0F30               	addlw	48
  5741   002A74  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5742   002A78  0012               	return	
  5743   002A7A                     l2219:
  5744                           
  5745                           ;I2C_LCD.c: 358:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5746   002A7A  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5747   002A7C  0F30               	addlw	48
  5748   002A7E  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5749                           
  5750                           ;I2C_LCD.c: 359:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5751   002A82  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5752   002A84  0F30               	addlw	48
  5753   002A86  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5754                           
  5755                           ;I2C_LCD.c: 360:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5756   002A8A  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5757   002A8C  0F30               	addlw	48
  5758   002A8E  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5759                           
  5760                           ;I2C_LCD.c: 361:                     break;
  5761   002A92  0012               	return	
  5762   002A94                     l2221:
  5763                           
  5764                           ;I2C_LCD.c: 363:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5765   002A94  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5766   002A96  0F30               	addlw	48
  5767   002A98  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5768                           
  5769                           ;I2C_LCD.c: 364:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5770   002A9C  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5771   002A9E  0F30               	addlw	48
  5772   002AA0  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5773                           
  5774                           ;I2C_LCD.c: 365:                     I2C_ENVIA_LCD_DATA('.');
  5775   002AA4  0E2E               	movlw	46
  5776   002AA6  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5777                           
  5778                           ;I2C_LCD.c: 366:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5779   002AAA  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5780   002AAC  0F30               	addlw	48
  5781   002AAE  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5782                           
  5783                           ;I2C_LCD.c: 367:                     break;
  5784   002AB2  0012               	return	
  5785   002AB4                     l2223:
  5786                           
  5787                           ;I2C_LCD.c: 369:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5788   002AB4  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5789   002AB6  0F30               	addlw	48
  5790   002AB8  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5791                           
  5792                           ;I2C_LCD.c: 370:                     I2C_ENVIA_LCD_DATA('.');
  5793   002ABC  0E2E               	movlw	46
  5794   002ABE  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5795                           
  5796                           ;I2C_LCD.c: 371:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5797   002AC2  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5798   002AC4  0F30               	addlw	48
  5799   002AC6  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5800                           
  5801                           ;I2C_LCD.c: 372:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5802   002ACA  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5803   002ACC  0F30               	addlw	48
  5804   002ACE  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5805                           
  5806                           ;I2C_LCD.c: 373:                     break;
  5807   002AD2  0012               	return	
  5808   002AD4                     l2227:
  5809   002AD4  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5810                           
  5811                           ; Switch size 1, requested type "simple"
  5812                           ; Number of cases is 3, Range of values is 0 to 2
  5813                           ; switch strategies available:
  5814                           ; Name         Instructions Cycles
  5815                           ; simple_byte           10     6 (average)
  5816                           ;	Chosen strategy is simple_byte
  5817   002AD6  0A00               	xorlw	0	; case 0
  5818   002AD8  B4D8               	btfsc	status,2,c
  5819   002ADA  D7CF               	goto	l2219
  5820   002ADC  0A01               	xorlw	1	; case 1
  5821   002ADE  B4D8               	btfsc	status,2,c
  5822   002AE0  D7D9               	goto	l2221
  5823   002AE2  0A03               	xorlw	3	; case 2
  5824   002AE4  A4D8               	btfss	status,2,c
  5825   002AE6  0012               	return	
  5826   002AE8  D7E5               	goto	l2223
  5827   002AEA                     l2229:
  5828                           
  5829                           ;I2C_LCD.c: 379:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5830   002AEA  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5831   002AEC  0F30               	addlw	48
  5832   002AEE  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5833                           
  5834                           ;I2C_LCD.c: 380:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5835   002AF2  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5836   002AF4  0F30               	addlw	48
  5837   002AF6  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5838                           
  5839                           ;I2C_LCD.c: 381:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5840   002AFA  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5841   002AFC  0F30               	addlw	48
  5842   002AFE  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5843                           
  5844                           ;I2C_LCD.c: 382:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5845   002B02  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5846   002B04  0F30               	addlw	48
  5847   002B06  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5848                           
  5849                           ;I2C_LCD.c: 383:                     break;
  5850   002B0A  0012               	return	
  5851   002B0C                     l2231:
  5852                           
  5853                           ;I2C_LCD.c: 385:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5854   002B0C  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5855   002B0E  0F30               	addlw	48
  5856   002B10  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5857                           
  5858                           ;I2C_LCD.c: 386:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5859   002B14  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5860   002B16  0F30               	addlw	48
  5861   002B18  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5862                           
  5863                           ;I2C_LCD.c: 387:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5864   002B1C  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5865   002B1E  0F30               	addlw	48
  5866   002B20  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5867                           
  5868                           ;I2C_LCD.c: 388:                     I2C_ENVIA_LCD_DATA('.');
  5869   002B24  0E2E               	movlw	46
  5870   002B26  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5871                           
  5872                           ;I2C_LCD.c: 389:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5873   002B2A  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5874   002B2C  0F30               	addlw	48
  5875   002B2E  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5876                           
  5877                           ;I2C_LCD.c: 390:                     break;
  5878   002B32  0012               	return	
  5879   002B34                     l2233:
  5880                           
  5881                           ;I2C_LCD.c: 392:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5882   002B34  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5883   002B36  0F30               	addlw	48
  5884   002B38  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5885                           
  5886                           ;I2C_LCD.c: 393:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5887   002B3C  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5888   002B3E  0F30               	addlw	48
  5889   002B40  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5890                           
  5891                           ;I2C_LCD.c: 394:                     I2C_ENVIA_LCD_DATA('.');
  5892   002B44  0E2E               	movlw	46
  5893   002B46  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5894                           
  5895                           ;I2C_LCD.c: 395:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5896   002B4A  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5897   002B4C  0F30               	addlw	48
  5898   002B4E  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5899                           
  5900                           ;I2C_LCD.c: 396:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5901   002B52  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5902   002B54  0F30               	addlw	48
  5903   002B56  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5904                           
  5905                           ;I2C_LCD.c: 397:                     break;
  5906   002B5A  0012               	return	
  5907   002B5C                     l2235:
  5908                           
  5909                           ;I2C_LCD.c: 399:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5910   002B5C  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5911   002B5E  0F30               	addlw	48
  5912   002B60  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5913                           
  5914                           ;I2C_LCD.c: 400:                     I2C_ENVIA_LCD_DATA('.');
  5915   002B64  0E2E               	movlw	46
  5916   002B66  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5917                           
  5918                           ;I2C_LCD.c: 401:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5919   002B6A  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5920   002B6C  0F30               	addlw	48
  5921   002B6E  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5922                           
  5923                           ;I2C_LCD.c: 402:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5924   002B72  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5925   002B74  0F30               	addlw	48
  5926   002B76  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5927                           
  5928                           ;I2C_LCD.c: 403:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5929   002B7A  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5930   002B7C  0F30               	addlw	48
  5931   002B7E  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5932                           
  5933                           ;I2C_LCD.c: 404:                     break;
  5934   002B82  0012               	return	
  5935   002B84                     l2239:
  5936   002B84  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5937                           
  5938                           ; Switch size 1, requested type "simple"
  5939                           ; Number of cases is 4, Range of values is 0 to 3
  5940                           ; switch strategies available:
  5941                           ; Name         Instructions Cycles
  5942                           ; simple_byte           13     7 (average)
  5943                           ;	Chosen strategy is simple_byte
  5944   002B86  0A00               	xorlw	0	; case 0
  5945   002B88  B4D8               	btfsc	status,2,c
  5946   002B8A  D7AF               	goto	l2229
  5947   002B8C  0A01               	xorlw	1	; case 1
  5948   002B8E  B4D8               	btfsc	status,2,c
  5949   002B90  D7BD               	goto	l2231
  5950   002B92  0A03               	xorlw	3	; case 2
  5951   002B94  B4D8               	btfsc	status,2,c
  5952   002B96  D7CE               	goto	l2233
  5953   002B98  0A01               	xorlw	1	; case 3
  5954   002B9A  A4D8               	btfss	status,2,c
  5955   002B9C  0012               	return	
  5956   002B9E  D7DE               	goto	l2235
  5957   002BA0                     l2241:
  5958                           
  5959                           ;I2C_LCD.c: 410:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  5960   002BA0  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  5961   002BA2  0F30               	addlw	48
  5962   002BA4  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5963                           
  5964                           ;I2C_LCD.c: 411:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5965   002BA8  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5966   002BAA  0F30               	addlw	48
  5967   002BAC  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5968                           
  5969                           ;I2C_LCD.c: 412:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5970   002BB0  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5971   002BB2  0F30               	addlw	48
  5972   002BB4  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5973                           
  5974                           ;I2C_LCD.c: 413:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5975   002BB8  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5976   002BBA  0F30               	addlw	48
  5977   002BBC  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5978                           
  5979                           ;I2C_LCD.c: 414:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5980   002BC0  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5981   002BC2  0F30               	addlw	48
  5982   002BC4  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5983                           
  5984                           ;I2C_LCD.c: 415:                     break;
  5985   002BC8  0012               	return	
  5986   002BCA                     l2243:
  5987                           
  5988                           ;I2C_LCD.c: 417:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  5989   002BCA  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  5990   002BCC  0F30               	addlw	48
  5991   002BCE  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5992                           
  5993                           ;I2C_LCD.c: 418:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5994   002BD2  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5995   002BD4  0F30               	addlw	48
  5996   002BD6  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  5997                           
  5998                           ;I2C_LCD.c: 419:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5999   002BDA  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  6000   002BDC  0F30               	addlw	48
  6001   002BDE  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6002                           
  6003                           ;I2C_LCD.c: 420:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  6004   002BE2  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  6005   002BE4  0F30               	addlw	48
  6006   002BE6  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6007                           
  6008                           ;I2C_LCD.c: 421:                     I2C_ENVIA_LCD_DATA('.');
  6009   002BEA  0E2E               	movlw	46
  6010   002BEC  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6011                           
  6012                           ;I2C_LCD.c: 422:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  6013   002BF0  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  6014   002BF2  0F30               	addlw	48
  6015   002BF4  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6016                           
  6017                           ;I2C_LCD.c: 423:                     break;
  6018   002BF8  0012               	return	
  6019   002BFA                     l2245:
  6020                           
  6021                           ;I2C_LCD.c: 425:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  6022   002BFA  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  6023   002BFC  0F30               	addlw	48
  6024   002BFE  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6025                           
  6026                           ;I2C_LCD.c: 426:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  6027   002C02  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  6028   002C04  0F30               	addlw	48
  6029   002C06  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6030                           
  6031                           ;I2C_LCD.c: 427:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  6032   002C0A  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  6033   002C0C  0F30               	addlw	48
  6034   002C0E  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6035                           
  6036                           ;I2C_LCD.c: 428:                     I2C_ENVIA_LCD_DATA('.');
  6037   002C12  0E2E               	movlw	46
  6038   002C14  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6039                           
  6040                           ;I2C_LCD.c: 429:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  6041   002C18  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  6042   002C1A  0F30               	addlw	48
  6043   002C1C  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6044                           
  6045                           ;I2C_LCD.c: 430:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  6046   002C20  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  6047   002C22  0F30               	addlw	48
  6048   002C24  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6049                           
  6050                           ;I2C_LCD.c: 431:                     break;
  6051   002C28  0012               	return	
  6052   002C2A                     l2247:
  6053                           
  6054                           ;I2C_LCD.c: 433:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  6055   002C2A  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  6056   002C2C  0F30               	addlw	48
  6057   002C2E  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6058                           
  6059                           ;I2C_LCD.c: 434:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  6060   002C32  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  6061   002C34  0F30               	addlw	48
  6062   002C36  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6063                           
  6064                           ;I2C_LCD.c: 435:                     I2C_ENVIA_LCD_DATA('.');
  6065   002C3A  0E2E               	movlw	46
  6066   002C3C  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6067                           
  6068                           ;I2C_LCD.c: 436:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  6069   002C40  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  6070   002C42  0F30               	addlw	48
  6071   002C44  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6072                           
  6073                           ;I2C_LCD.c: 437:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  6074   002C48  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  6075   002C4A  0F30               	addlw	48
  6076   002C4C  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6077                           
  6078                           ;I2C_LCD.c: 438:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  6079   002C50  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  6080   002C52  0F30               	addlw	48
  6081   002C54  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6082                           
  6083                           ;I2C_LCD.c: 439:                     break;
  6084   002C58  0012               	return	
  6085   002C5A                     l2249:
  6086                           
  6087                           ;I2C_LCD.c: 441:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  6088   002C5A  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  6089   002C5C  0F30               	addlw	48
  6090   002C5E  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6091                           
  6092                           ;I2C_LCD.c: 442:                     I2C_ENVIA_LCD_DATA('.');
  6093   002C62  0E2E               	movlw	46
  6094   002C64  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6095                           
  6096                           ;I2C_LCD.c: 443:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  6097   002C68  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  6098   002C6A  0F30               	addlw	48
  6099   002C6C  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6100                           
  6101                           ;I2C_LCD.c: 444:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  6102   002C70  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  6103   002C72  0F30               	addlw	48
  6104   002C74  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6105                           
  6106                           ;I2C_LCD.c: 445:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  6107   002C78  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  6108   002C7A  0F30               	addlw	48
  6109   002C7C  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6110                           
  6111                           ;I2C_LCD.c: 446:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  6112   002C80  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  6113   002C82  0F30               	addlw	48
  6114   002C84  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6115                           
  6116                           ;I2C_LCD.c: 447:                     break;
  6117   002C88  0012               	return	
  6118   002C8A                     l2253:
  6119   002C8A  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  6120                           
  6121                           ; Switch size 1, requested type "simple"
  6122                           ; Number of cases is 5, Range of values is 0 to 4
  6123                           ; switch strategies available:
  6124                           ; Name         Instructions Cycles
  6125                           ; simple_byte           16     9 (average)
  6126                           ;	Chosen strategy is simple_byte
  6127   002C8C  0A00               	xorlw	0	; case 0
  6128   002C8E  B4D8               	btfsc	status,2,c
  6129   002C90  D787               	goto	l2241
  6130   002C92  0A01               	xorlw	1	; case 1
  6131   002C94  B4D8               	btfsc	status,2,c
  6132   002C96  D799               	goto	l2243
  6133   002C98  0A03               	xorlw	3	; case 2
  6134   002C9A  B4D8               	btfsc	status,2,c
  6135   002C9C  D7AE               	goto	l2245
  6136   002C9E  0A01               	xorlw	1	; case 3
  6137   002CA0  B4D8               	btfsc	status,2,c
  6138   002CA2  D7C3               	goto	l2247
  6139   002CA4  0A07               	xorlw	7	; case 4
  6140   002CA6  A4D8               	btfss	status,2,c
  6141   002CA8  0012               	return	
  6142   002CAA  D7D7               	goto	l2249
  6143   002CAC                     l2257:
  6144   002CAC  500F               	movf	I2C_LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  6145                           
  6146                           ; Switch size 1, requested type "simple"
  6147                           ; Number of cases is 5, Range of values is 1 to 5
  6148                           ; switch strategies available:
  6149                           ; Name         Instructions Cycles
  6150                           ; simple_byte           16     9 (average)
  6151                           ;	Chosen strategy is simple_byte
  6152   002CAE  0A01               	xorlw	1	; case 1
  6153   002CB0  B4D8               	btfsc	status,2,c
  6154   002CB2  D6C3               	goto	l2209
  6155   002CB4  0A03               	xorlw	3	; case 2
  6156   002CB6  B4D8               	btfsc	status,2,c
  6157   002CB8  D6C5               	goto	l2211
  6158   002CBA  0A01               	xorlw	1	; case 3
  6159   002CBC  B4D8               	btfsc	status,2,c
  6160   002CBE  D70A               	goto	l2227
  6161   002CC0  0A07               	xorlw	7	; case 4
  6162   002CC2  B4D8               	btfsc	status,2,c
  6163   002CC4  D75F               	goto	l2239
  6164   002CC6  0A01               	xorlw	1	; case 5
  6165   002CC8  A4D8               	btfss	status,2,c
  6166   002CCA  0012               	return	
  6167   002CCC  D7DE               	goto	l2253
  6168   002CCE                     __end_of_I2C_LCD_ESCRIBE_VAR_INT:
  6169                           	callstack 0
  6170                           
  6171 ;; *************** function ___lwmod *****************
  6172 ;; Defined at:
  6173 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  dividend        2    0[COMRAM] unsigned int 
  6176 ;;  divisor         2    2[COMRAM] unsigned int 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  counter         1    4[COMRAM] unsigned char 
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  2    0[COMRAM] unsigned int 
  6181 ;; Registers used:
  6182 ;;		wreg, status,2, status,0
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6188 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6191 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6192 ;;Total ram usage:        5 bytes
  6193 ;; Hardware stack levels used: 1
  6194 ;; This function calls:
  6195 ;;		Nothing
  6196 ;; This function is called by:
  6197 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201                           	psect	text12
  6202   003282                     __ptext12:
  6203                           	callstack 0
  6204   003282                     ___lwmod:
  6205                           	callstack 125
  6206                           
  6207                           ;incstack = 0
  6208   003282  5003               	movf	___lwmod@divisor^(0+1280),w,c
  6209   003284  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  6210   003286  B4D8               	btfsc	status,2,c
  6211   003288  D018               	goto	l897
  6212   00328A  0E01               	movlw	1
  6213   00328C  6E05               	movwf	___lwmod@counter^(0+1280),c
  6214   00328E  D004               	goto	l1983
  6215   003290                     l1981:
  6216   003290  90D8               	bcf	status,0,c
  6217   003292  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  6218   003294  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  6219   003296  2A05               	incf	___lwmod@counter^(0+1280),f,c
  6220   003298                     l1983:
  6221   003298  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  6222   00329A  D7FA               	goto	l1981
  6223   00329C                     u970:
  6224   00329C  5003               	movf	___lwmod@divisor^(0+1280),w,c
  6225   00329E  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  6226   0032A0  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  6227   0032A2  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  6228   0032A4  A0D8               	btfss	status,0,c
  6229   0032A6  D004               	goto	l1989
  6230   0032A8  5003               	movf	___lwmod@divisor^(0+1280),w,c
  6231   0032AA  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  6232   0032AC  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  6233   0032AE  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  6234   0032B0                     l1989:
  6235   0032B0  90D8               	bcf	status,0,c
  6236   0032B2  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  6237   0032B4  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  6238   0032B6  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  6239   0032B8  D7F1               	goto	u970
  6240   0032BA                     l897:
  6241   0032BA  C501  F501         	movff	___lwmod@dividend,?___lwmod
  6242   0032BE  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  6243   0032C2  0012               	return		;funcret
  6244   0032C4                     __end_of___lwmod:
  6245                           	callstack 0
  6246                           
  6247 ;; *************** function ___lwdiv *****************
  6248 ;; Defined at:
  6249 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;  dividend        2    5[COMRAM] unsigned int 
  6252 ;;  divisor         2    7[COMRAM] unsigned int 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;  quotient        2    9[COMRAM] unsigned int 
  6255 ;;  counter         1   11[COMRAM] unsigned char 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  2    5[COMRAM] unsigned int 
  6258 ;; Registers used:
  6259 ;;		wreg, status,2, status,0
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6265 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6266 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6268 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6269 ;;Total ram usage:        7 bytes
  6270 ;; Hardware stack levels used: 1
  6271 ;; This function calls:
  6272 ;;		Nothing
  6273 ;; This function is called by:
  6274 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  6275 ;;		_main
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text13
  6280   0031E6                     __ptext13:
  6281                           	callstack 0
  6282   0031E6                     ___lwdiv:
  6283                           	callstack 126
  6284                           
  6285                           ;incstack = 0
  6286   0031E6  0E00               	movlw	0
  6287   0031E8  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  6288   0031EA  0E00               	movlw	0
  6289   0031EC  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  6290   0031EE  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  6291   0031F0  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  6292   0031F2  B4D8               	btfsc	status,2,c
  6293   0031F4  D01C               	goto	l887
  6294   0031F6  0E01               	movlw	1
  6295   0031F8  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  6296   0031FA  D004               	goto	l1963
  6297   0031FC                     l1961:
  6298   0031FC  90D8               	bcf	status,0,c
  6299   0031FE  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  6300   003200  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  6301   003202  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  6302   003204                     l1963:
  6303   003204  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  6304   003206  D7FA               	goto	l1961
  6305   003208                     u940:
  6306   003208  90D8               	bcf	status,0,c
  6307   00320A  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  6308   00320C  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  6309   00320E  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  6310   003210  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  6311   003212  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  6312   003214  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  6313   003216  A0D8               	btfss	status,0,c
  6314   003218  D005               	goto	l1973
  6315   00321A  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  6316   00321C  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  6317   00321E  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  6318   003220  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  6319   003222  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  6320   003224                     l1973:
  6321   003224  90D8               	bcf	status,0,c
  6322   003226  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  6323   003228  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  6324   00322A  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  6325   00322C  D7ED               	goto	u940
  6326   00322E                     l887:
  6327   00322E  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  6328   003232  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6329   003236  0012               	return		;funcret
  6330   003238                     __end_of___lwdiv:
  6331                           	callstack 0
  6332                           
  6333 ;; *************** function _I2C_LCD_CHAR_GRADO *****************
  6334 ;; Defined at:
  6335 ;;		line 453 in file "I2C_LCD.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;		None
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;		None
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  1    wreg      void 
  6342 ;; Registers used:
  6343 ;;		wreg, status,2, status,0, cstack
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6353 ;;Total ram usage:        0 bytes
  6354 ;; Hardware stack levels used: 1
  6355 ;; Hardware stack levels required when called: 2
  6356 ;; This function calls:
  6357 ;;		_I2C_ENVIA_LCD_DATA
  6358 ;; This function is called by:
  6359 ;;		_main
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text14
  6364   0033CA                     __ptext14:
  6365                           	callstack 0
  6366   0033CA                     _I2C_LCD_CHAR_GRADO:
  6367                           	callstack 124
  6368                           
  6369                           ;I2C_LCD.c: 454:     I2C_ENVIA_LCD_DATA(0xDF);
  6370                           
  6371                           ;incstack = 0
  6372   0033CA  0EDF               	movlw	223
  6373   0033CC  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6374   0033D0  0012               	return		;funcret
  6375   0033D2                     __end_of_I2C_LCD_CHAR_GRADO:
  6376                           	callstack 0
  6377                           
  6378 ;; *************** function _I2C_ESCRIBE_MENSAJE2 *****************
  6379 ;; Defined at:
  6380 ;;		line 128 in file "I2C_LCD.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;  cadena          1    6[COMRAM] PTR const unsigned char 
  6383 ;;		 -> STR_4(11), STR_3(10), STR_2(13), STR_1(12), 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;  i               1    9[COMRAM] unsigned char 
  6386 ;;  tam             1    8[COMRAM] unsigned char 
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  1    wreg      void 
  6389 ;; Registers used:
  6390 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/2
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6396 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6397 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6398 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6399 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6400 ;;Total ram usage:        4 bytes
  6401 ;; Hardware stack levels used: 1
  6402 ;; Hardware stack levels required when called: 2
  6403 ;; This function calls:
  6404 ;;		_I2C_ENVIA_LCD_DATA
  6405 ;;		_strlen
  6406 ;; This function is called by:
  6407 ;;		_main
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           	psect	text15
  6412   0032C4                     __ptext15:
  6413                           	callstack 0
  6414   0032C4                     _I2C_ESCRIBE_MENSAJE2:
  6415                           	callstack 124
  6416                           
  6417                           ;I2C_LCD.c: 129:     unsigned char tam;;I2C_LCD.c: 130:     tam = strlen(cadena);
  6418                           
  6419                           ;incstack = 0
  6420   0032C4  C507  F501         	movff	I2C_ESCRIBE_MENSAJE2@cadena,strlen@s
  6421   0032C8  EC7D  F019         	call	_strlen	;wreg free
  6422   0032CC  5001               	movf	?_strlen^(0+1280),w,c
  6423   0032CE  6E09               	movwf	I2C_ESCRIBE_MENSAJE2@tam^(0+1280),c
  6424                           
  6425                           ;I2C_LCD.c: 132:  for(i = 0; i<tam; i++) {
  6426   0032D0  6A0A               	clrf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),c
  6427   0032D2  D00E               	goto	l2021
  6428   0032D4                     l2017:
  6429                           
  6430                           ;I2C_LCD.c: 133:   I2C_ENVIA_LCD_DATA(cadena[i]);
  6431   0032D4  5007               	movf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  6432   0032D6  240A               	addwf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),w,c
  6433   0032D8  6E08               	movwf	??_I2C_ESCRIBE_MENSAJE2^(0+1280),c
  6434   0032DA  C508  F4F6         	movff	??_I2C_ESCRIBE_MENSAJE2,tblptrl
  6435   0032DE                     	if	1	;There is more than 1 active tblptr byte
  6436   0032DE  0E26               	movlw	high __psmallconst
  6437   0032E0  6EF7               	movwf	tblptrh,c
  6438   0032E2                     	endif
  6439   0032E2                     	if	0	;tblptru may be non-zero
  6440   0032E2                     	endif
  6441   0032E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6442   0032E2  0E00               	movlw	low (__psmallconst shr (0+16))
  6443   0032E4  6EF8               	movwf	tblptru,c
  6444   0032E6                     	endif
  6445   0032E6  0008               	tblrd		*
  6446   0032E8  50F5               	movf	tablat,w,c
  6447   0032EA  ECA2  F017         	call	_I2C_ENVIA_LCD_DATA
  6448                           
  6449                           ;I2C_LCD.c: 134:  }
  6450   0032EE  2A0A               	incf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),f,c
  6451   0032F0                     l2021:
  6452   0032F0  5009               	movf	I2C_ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  6453   0032F2  5C0A               	subwf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),w,c
  6454   0032F4  B0D8               	btfsc	status,0,c
  6455   0032F6  0012               	return	
  6456   0032F8  D7ED               	goto	l2017
  6457   0032FA                     __end_of_I2C_ESCRIBE_MENSAJE2:
  6458                           	callstack 0
  6459                           
  6460 ;; *************** function _strlen *****************
  6461 ;; Defined at:
  6462 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;  s               1    0[COMRAM] PTR const unsigned char 
  6465 ;;		 -> STR_4(11), STR_3(10), STR_2(13), STR_1(12), 
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  a               1    2[COMRAM] PTR const unsigned char 
  6468 ;;		 -> STR_4(11), STR_3(10), STR_2(13), STR_1(12), 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  2    0[COMRAM] unsigned int 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/2
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6481 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6482 ;;Total ram usage:        3 bytes
  6483 ;; Hardware stack levels used: 1
  6484 ;; This function calls:
  6485 ;;		Nothing
  6486 ;; This function is called by:
  6487 ;;		_I2C_ESCRIBE_MENSAJE2
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text16
  6492   0032FA                     __ptext16:
  6493                           	callstack 0
  6494   0032FA                     _strlen:
  6495                           	callstack 125
  6496                           
  6497                           ;incstack = 0
  6498   0032FA  C501  F503         	movff	strlen@s,strlen@a
  6499   0032FE  D001               	goto	l1793
  6500   003300                     l1791:
  6501   003300  2A01               	incf	strlen@s^(0+1280),f,c
  6502   003302                     l1793:
  6503   003302  C501  F4F6         	movff	strlen@s,tblptrl
  6504   003306                     	if	1	;There is more than 1 active tblptr byte
  6505   003306  0E26               	movlw	high __psmallconst
  6506   003308  6EF7               	movwf	tblptrh,c
  6507   00330A                     	endif
  6508   00330A                     	if	0	;tblptru may be non-zero
  6509   00330A                     	endif
  6510   00330A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6511   00330A  0E00               	movlw	low (__psmallconst shr (0+16))
  6512   00330C  6EF8               	movwf	tblptru,c
  6513   00330E                     	endif
  6514   00330E  0008               	tblrd		*
  6515   003310  50F5               	movf	tablat,w,c
  6516   003312  0900               	iorlw	0
  6517   003314  A4D8               	btfss	status,2,c
  6518   003316  D7F4               	goto	l1791
  6519   003318  5003               	movf	strlen@a^(0+1280),w,c
  6520   00331A  5C01               	subwf	strlen@s^(0+1280),w,c
  6521   00331C  6E01               	movwf	?_strlen^(0+1280),c
  6522   00331E  6A02               	clrf	(?_strlen+1)^(0+1280),c
  6523   003320  BE01               	btfsc	?_strlen^(0+1280),7,c
  6524   003322  0602               	decf	(?_strlen+1)^(0+1280),f,c
  6525   003324  0012               	return		;funcret
  6526   003326                     __end_of_strlen:
  6527                           	callstack 0
  6528                           
  6529 ;; *************** function _I2C_ENVIA_LCD_DATA *****************
  6530 ;; Defined at:
  6531 ;;		line 137 in file "I2C_LCD.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  data            1    wreg     unsigned char 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;  data            1    3[COMRAM] unsigned char 
  6536 ;;  lownibble       1    5[COMRAM] unsigned char 
  6537 ;;  highnibble      1    4[COMRAM] unsigned char 
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  1    wreg      void 
  6540 ;; Registers used:
  6541 ;;		wreg, status,2, status,0, cstack
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6548 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6549 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6550 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6551 ;;Total ram usage:        4 bytes
  6552 ;; Hardware stack levels used: 1
  6553 ;; Hardware stack levels required when called: 1
  6554 ;; This function calls:
  6555 ;;		_I2C1_WRITESINGLEBYTE
  6556 ;; This function is called by:
  6557 ;;		_I2C_ESCRIBE_MENSAJE2
  6558 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  6559 ;;		_I2C_LCD_CHAR_GRADO
  6560 ;;		_main
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564                           	psect	text17
  6565   002F44                     __ptext17:
  6566                           	callstack 0
  6567   002F44                     _I2C_ENVIA_LCD_DATA:
  6568                           	callstack 124
  6569                           
  6570                           ;incstack = 0
  6571                           ;I2C_ENVIA_LCD_DATA@data stored from wreg
  6572   002F44  6E04               	movwf	I2C_ENVIA_LCD_DATA@data^(0+1280),c
  6573                           
  6574                           ;I2C_LCD.c: 138:     unsigned char highnibble;;I2C_LCD.c: 139:     unsigned char lownibb
      +                          le;;I2C_LCD.c: 141:     highnibble = (data & 0xF0) | 0x08;
  6575   002F46  5004               	movf	I2C_ENVIA_LCD_DATA@data^(0+1280),w,c
  6576   002F48  0BF0               	andlw	240
  6577   002F4A  0908               	iorlw	8
  6578   002F4C  6E05               	movwf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),c
  6579                           
  6580                           ;I2C_LCD.c: 142:     lownibble = (unsigned char)(((data & 0x0F)<<4)| 0x08);
  6581   002F4E  C504  F503         	movff	I2C_ENVIA_LCD_DATA@data,??_I2C_ENVIA_LCD_DATA
  6582   002F52  0E0F               	movlw	15
  6583   002F54  1603               	andwf	??_I2C_ENVIA_LCD_DATA^(0+1280),f,c
  6584   002F56  3803               	swapf	??_I2C_ENVIA_LCD_DATA^(0+1280),w,c
  6585   002F58  0BF0               	andlw	240
  6586   002F5A  0908               	iorlw	8
  6587   002F5C  6E06               	movwf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),c
  6588                           
  6589                           ;I2C_LCD.c: 144:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(highnibble | 0x04 | 0x01));
  6590   002F5E  5005               	movf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),w,c
  6591   002F60  0905               	iorlw	5
  6592   002F62  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6593   002F64  0E27               	movlw	39
  6594   002F66  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  6595                           
  6596                           ; BSR set to: 2
  6597                           ;I2C_LCD.c: 145:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6598   002F6A  0E35               	movlw	53
  6599   002F6C                     u1657:
  6600   002F6C  2EE8               	decfsz	wreg,f,c
  6601   002F6E  D7FE               	bra	u1657
  6602   002F70  0000               	nop	
  6603                           
  6604                           ;I2C_LCD.c: 146:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(highnibble | 0x01));
  6605   002F72  5005               	movf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),w,c
  6606   002F74  0901               	iorlw	1
  6607   002F76  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6608   002F78  0E27               	movlw	39
  6609   002F7A  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  6610                           
  6611                           ; BSR set to: 2
  6612                           ;I2C_LCD.c: 147:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6613   002F7E  0E35               	movlw	53
  6614   002F80                     u1667:
  6615   002F80  2EE8               	decfsz	wreg,f,c
  6616   002F82  D7FE               	bra	u1667
  6617   002F84  0000               	nop	
  6618                           
  6619                           ;I2C_LCD.c: 149:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(lownibble | 0x04 | 0x01));
  6620   002F86  5006               	movf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),w,c
  6621   002F88  0905               	iorlw	5
  6622   002F8A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6623   002F8C  0E27               	movlw	39
  6624   002F8E  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  6625                           
  6626                           ; BSR set to: 2
  6627                           ;I2C_LCD.c: 150:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6628   002F92  0E35               	movlw	53
  6629   002F94                     u1677:
  6630   002F94  2EE8               	decfsz	wreg,f,c
  6631   002F96  D7FE               	bra	u1677
  6632   002F98  0000               	nop	
  6633                           
  6634                           ;I2C_LCD.c: 151:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(lownibble | 0x01));
  6635   002F9A  5006               	movf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),w,c
  6636   002F9C  0901               	iorlw	1
  6637   002F9E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6638   002FA0  0E27               	movlw	39
  6639   002FA2  EC93  F019         	call	_I2C1_WRITESINGLEBYTE
  6640                           
  6641                           ; BSR set to: 2
  6642                           ;I2C_LCD.c: 152:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6643   002FA6  0E35               	movlw	53
  6644   002FA8                     u1687:
  6645   002FA8  2EE8               	decfsz	wreg,f,c
  6646   002FAA  D7FE               	bra	u1687
  6647   002FAC  0000               	nop	
  6648   002FAE  0012               	return		;funcret
  6649   002FB0                     __end_of_I2C_ENVIA_LCD_DATA:
  6650                           	callstack 0
  6651                           
  6652 ;; *************** function _I2C1_WRITESINGLEBYTE *****************
  6653 ;; Defined at:
  6654 ;;		line 60 in file "I2C_LCD.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;  direccion       1    wreg     unsigned char 
  6657 ;;  dato            1    0[COMRAM] unsigned char 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;  direccion       1    1[COMRAM] unsigned char 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  1    wreg      void 
  6662 ;; Registers used:
  6663 ;;		wreg, status,2, status,0
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/2
  6666 ;;		On exit  : 3F/2
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6669 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6670 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6673 ;;Total ram usage:        2 bytes
  6674 ;; Hardware stack levels used: 1
  6675 ;; This function calls:
  6676 ;;		Nothing
  6677 ;; This function is called by:
  6678 ;;		_I2C_ENVIA_LCD_DATA
  6679 ;;		_I2C_ENVIA_LCD_CMD
  6680 ;;		_I2C_LCD_INIT
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684                           	psect	text18
  6685   003326                     __ptext18:
  6686                           	callstack 0
  6687   003326                     _I2C1_WRITESINGLEBYTE:
  6688                           	callstack 124
  6689                           
  6690                           ;incstack = 0
  6691                           ;I2C1_WRITESINGLEBYTE@direccion stored from wreg
  6692   003326  6E02               	movwf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),c
  6693                           
  6694                           ;I2C_LCD.c: 61:     I2C1CNT = 1;
  6695   003328  0E01               	movlw	1
  6696   00332A  0102               	movlb	2	; () banked
  6697   00332C  6F8D               	movwf	141,b	;volatile
  6698                           
  6699                           ; BSR set to: 2
  6700                           ;I2C_LCD.c: 62:     I2C1ADB1 = (direccion << 1) & 0xFE;
  6701   00332E  5002               	movf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),w,c
  6702   003330  2402               	addwf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),w,c
  6703   003332  0BFE               	andlw	254
  6704   003334  6F8F               	movwf	143,b	;volatile
  6705                           
  6706                           ; BSR set to: 2
  6707                           ;I2C_LCD.c: 63:     I2C1TXB = dato;
  6708   003336  C501  F28C         	movff	I2C1_WRITESINGLEBYTE@dato,652	;volatile
  6709                           
  6710                           ; BSR set to: 2
  6711                           ;I2C_LCD.c: 64:     I2C1CON0bits.S = 1;
  6712   00333A  8B94               	bsf	148,5,b	;volatile
  6713   00333C                     l51:
  6714                           
  6715                           ; BSR set to: 2
  6716   00333C  AB99               	btfss	153,5,b	;volatile
  6717   00333E  D7FE               	goto	l51
  6718   003340                     u570:
  6719                           
  6720                           ; BSR set to: 2
  6721   003340  BB95               	btfsc	149,5,b	;volatile
  6722   003342  D7FE               	goto	u570
  6723   003344                     u580:
  6724                           
  6725                           ; BSR set to: 2
  6726   003344  B59A               	btfsc	154,2,b	;volatile
  6727   003346  0012               	return	
  6728   003348  D7FD               	goto	u580
  6729   00334A                     __end_of_I2C1_WRITESINGLEBYTE:
  6730                           	callstack 0
  6731                           
  6732 ;; *************** function _DHT_GetTemp *****************
  6733 ;; Defined at:
  6734 ;;		line 104 in file "LIB_DHT.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  modelo          1    wreg     unsigned char 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;  modelo          1   12[COMRAM] unsigned char 
  6739 ;;  valor_dht       2    9[COMRAM] unsigned int 
  6740 ;;  Temp_Ent        1   11[COMRAM] unsigned char 
  6741 ;;  Temp_Dec        1    8[COMRAM] unsigned char 
  6742 ;;  Chksum          1    0        unsigned char 
  6743 ;;  RH_Dec          1    0        unsigned char 
  6744 ;;  RH_Ent          1    0        unsigned char 
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  2    4[COMRAM] unsigned int 
  6747 ;; Registers used:
  6748 ;;		wreg, status,2, status,0, cstack
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6755 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6756 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6757 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6758 ;;Total ram usage:        9 bytes
  6759 ;; Hardware stack levels used: 1
  6760 ;; Hardware stack levels required when called: 1
  6761 ;; This function calls:
  6762 ;;		_DHT_Check
  6763 ;;		_DHT_Read
  6764 ;;		_DHT_Start
  6765 ;; This function is called by:
  6766 ;;		_main
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           	psect	text19
  6771   003018                     __ptext19:
  6772                           	callstack 0
  6773   003018                     _DHT_GetTemp:
  6774                           	callstack 125
  6775                           
  6776                           ; BSR set to: 2
  6777                           ;incstack = 0
  6778                           ;DHT_GetTemp@modelo stored from wreg
  6779   003018  6E0D               	movwf	DHT_GetTemp@modelo^(0+1280),c
  6780                           
  6781                           ;LIB_DHT.c: 107:     DHT_Start(modelo);
  6782   00301A  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6783   00301C  EC9C  F018         	call	_DHT_Start
  6784                           
  6785                           ;LIB_DHT.c: 108:     DHT_Check(modelo);
  6786   003020  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6787   003022  EC59  F017         	call	_DHT_Check
  6788   003026  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6789   003028  EC0C  F017         	call	_DHT_Read
  6790   00302C  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6791   00302E  EC0C  F017         	call	_DHT_Read
  6792                           
  6793                           ;LIB_DHT.c: 111:     Temp_Ent = DHT_Read(modelo);
  6794   003032  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6795   003034  EC0C  F017         	call	_DHT_Read
  6796   003038  6E0C               	movwf	DHT_GetTemp@Temp_Ent^(0+1280),c
  6797                           
  6798                           ;LIB_DHT.c: 112:     Temp_Dec = DHT_Read(modelo);
  6799   00303A  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6800   00303C  EC0C  F017         	call	_DHT_Read
  6801   003040  6E09               	movwf	DHT_GetTemp@Temp_Dec^(0+1280),c
  6802   003042  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6803   003044  EC0C  F017         	call	_DHT_Read
  6804                           
  6805                           ;LIB_DHT.c: 114:     if(modelo == 0){
  6806   003048  500D               	movf	DHT_GetTemp@modelo^(0+1280),w,c
  6807   00304A  A4D8               	btfss	status,2,c
  6808   00304C  D004               	goto	l2285
  6809                           
  6810                           ;LIB_DHT.c: 115:         return(valor_dht + Temp_Ent);
  6811   00304E  C50C  F505         	movff	DHT_GetTemp@Temp_Ent,?_DHT_GetTemp
  6812   003052  6A06               	clrf	(?_DHT_GetTemp+1)^(0+1280),c
  6813   003054  0012               	return	
  6814   003056                     l2285:
  6815   003056  040D               	decf	DHT_GetTemp@modelo^(0+1280),w,c
  6816   003058  A4D8               	btfss	status,2,c
  6817   00305A  0012               	return	
  6818                           
  6819                           ;LIB_DHT.c: 118:         valor_dht = (Temp_Ent << 8) | Temp_Dec;
  6820   00305C  5009               	movf	DHT_GetTemp@Temp_Dec^(0+1280),w,c
  6821   00305E  C50C  F507         	movff	DHT_GetTemp@Temp_Ent,??_DHT_GetTemp
  6822   003062  6A08               	clrf	(??_DHT_GetTemp+1)^(0+1280),c
  6823   003064  C507  F508         	movff	??_DHT_GetTemp,??_DHT_GetTemp+1
  6824   003068  6A07               	clrf	??_DHT_GetTemp^(0+1280),c
  6825   00306A  1007               	iorwf	??_DHT_GetTemp^(0+1280),w,c
  6826   00306C  6E0A               	movwf	DHT_GetTemp@valor_dht^(0+1280),c
  6827   00306E  5008               	movf	(??_DHT_GetTemp+1)^(0+1280),w,c
  6828   003070  6E0B               	movwf	(DHT_GetTemp@valor_dht+1)^(0+1280),c
  6829                           
  6830                           ;LIB_DHT.c: 119:         return(valor_dht);
  6831   003072  C50A  F505         	movff	DHT_GetTemp@valor_dht,?_DHT_GetTemp
  6832   003076  C50B  F506         	movff	DHT_GetTemp@valor_dht+1,?_DHT_GetTemp+1
  6833   00307A  0012               	return		;funcret
  6834   00307C                     __end_of_DHT_GetTemp:
  6835                           	callstack 0
  6836                           
  6837 ;; *************** function _DHT_GetHumid *****************
  6838 ;; Defined at:
  6839 ;;		line 123 in file "LIB_DHT.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;  modelo          1    wreg     unsigned char 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;  modelo          1   12[COMRAM] unsigned char 
  6844 ;;  valor_dht       2    9[COMRAM] unsigned int 
  6845 ;;  RH_Ent          1   11[COMRAM] unsigned char 
  6846 ;;  RH_Dec          1    8[COMRAM] unsigned char 
  6847 ;;  Chksum          1    0        unsigned char 
  6848 ;;  Temp_Dec        1    0        unsigned char 
  6849 ;;  Temp_Ent        1    0        unsigned char 
  6850 ;; Return value:  Size  Location     Type
  6851 ;;                  2    4[COMRAM] unsigned int 
  6852 ;; Registers used:
  6853 ;;		wreg, status,2, status,0, cstack
  6854 ;; Tracked objects:
  6855 ;;		On entry : 0/0
  6856 ;;		On exit  : 0/0
  6857 ;;		Unchanged: 0/0
  6858 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6860 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6861 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6862 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6863 ;;Total ram usage:        9 bytes
  6864 ;; Hardware stack levels used: 1
  6865 ;; Hardware stack levels required when called: 1
  6866 ;; This function calls:
  6867 ;;		_DHT_Check
  6868 ;;		_DHT_Read
  6869 ;;		_DHT_Start
  6870 ;; This function is called by:
  6871 ;;		_main
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text20
  6876   00307C                     __ptext20:
  6877                           	callstack 0
  6878   00307C                     _DHT_GetHumid:
  6879                           	callstack 125
  6880                           
  6881                           ;incstack = 0
  6882                           ;DHT_GetHumid@modelo stored from wreg
  6883   00307C  6E0D               	movwf	DHT_GetHumid@modelo^(0+1280),c
  6884                           
  6885                           ;LIB_DHT.c: 126:     DHT_Start(modelo);
  6886   00307E  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6887   003080  EC9C  F018         	call	_DHT_Start
  6888                           
  6889                           ;LIB_DHT.c: 127:     DHT_Check(modelo);
  6890   003084  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6891   003086  EC59  F017         	call	_DHT_Check
  6892                           
  6893                           ;LIB_DHT.c: 128:     RH_Ent = DHT_Read(modelo);
  6894   00308A  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6895   00308C  EC0C  F017         	call	_DHT_Read
  6896   003090  6E0C               	movwf	DHT_GetHumid@RH_Ent^(0+1280),c
  6897                           
  6898                           ;LIB_DHT.c: 129:     RH_Dec = DHT_Read(modelo);
  6899   003092  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6900   003094  EC0C  F017         	call	_DHT_Read
  6901   003098  6E09               	movwf	DHT_GetHumid@RH_Dec^(0+1280),c
  6902   00309A  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6903   00309C  EC0C  F017         	call	_DHT_Read
  6904   0030A0  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6905   0030A2  EC0C  F017         	call	_DHT_Read
  6906   0030A6  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6907   0030A8  EC0C  F017         	call	_DHT_Read
  6908                           
  6909                           ;LIB_DHT.c: 133:     if(modelo == 0){
  6910   0030AC  500D               	movf	DHT_GetHumid@modelo^(0+1280),w,c
  6911   0030AE  A4D8               	btfss	status,2,c
  6912   0030B0  D004               	goto	l2317
  6913                           
  6914                           ;LIB_DHT.c: 134:         return(valor_dht + RH_Ent);
  6915   0030B2  C50C  F505         	movff	DHT_GetHumid@RH_Ent,?_DHT_GetHumid
  6916   0030B6  6A06               	clrf	(?_DHT_GetHumid+1)^(0+1280),c
  6917   0030B8  0012               	return	
  6918   0030BA                     l2317:
  6919   0030BA  040D               	decf	DHT_GetHumid@modelo^(0+1280),w,c
  6920   0030BC  A4D8               	btfss	status,2,c
  6921   0030BE  0012               	return	
  6922                           
  6923                           ;LIB_DHT.c: 137:         valor_dht = (RH_Ent << 8) | RH_Dec;
  6924   0030C0  5009               	movf	DHT_GetHumid@RH_Dec^(0+1280),w,c
  6925   0030C2  C50C  F507         	movff	DHT_GetHumid@RH_Ent,??_DHT_GetHumid
  6926   0030C6  6A08               	clrf	(??_DHT_GetHumid+1)^(0+1280),c
  6927   0030C8  C507  F508         	movff	??_DHT_GetHumid,??_DHT_GetHumid+1
  6928   0030CC  6A07               	clrf	??_DHT_GetHumid^(0+1280),c
  6929   0030CE  1007               	iorwf	??_DHT_GetHumid^(0+1280),w,c
  6930   0030D0  6E0A               	movwf	DHT_GetHumid@valor_dht^(0+1280),c
  6931   0030D2  5008               	movf	(??_DHT_GetHumid+1)^(0+1280),w,c
  6932   0030D4  6E0B               	movwf	(DHT_GetHumid@valor_dht+1)^(0+1280),c
  6933                           
  6934                           ;LIB_DHT.c: 138:         return(valor_dht);
  6935   0030D6  C50A  F505         	movff	DHT_GetHumid@valor_dht,?_DHT_GetHumid
  6936   0030DA  C50B  F506         	movff	DHT_GetHumid@valor_dht+1,?_DHT_GetHumid+1
  6937   0030DE  0012               	return		;funcret
  6938   0030E0                     __end_of_DHT_GetHumid:
  6939                           	callstack 0
  6940                           
  6941 ;; *************** function _DHT_Start *****************
  6942 ;; Defined at:
  6943 ;;		line 3 in file "LIB_DHT.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;  modelo          1    wreg     unsigned char 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;  modelo          1    1[COMRAM] unsigned char 
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1    wreg      void 
  6950 ;; Registers used:
  6951 ;;		wreg, status,2, status,0, cstack
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6961 ;;Total ram usage:        2 bytes
  6962 ;; Hardware stack levels used: 1
  6963 ;; This function calls:
  6964 ;;		Nothing
  6965 ;; This function is called by:
  6966 ;;		_DHT_GetTemp
  6967 ;;		_DHT_GetHumid
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text21
  6972   003138                     __ptext21:
  6973                           	callstack 0
  6974   003138                     _DHT_Start:
  6975                           	callstack 125
  6976                           
  6977                           ;incstack = 0
  6978                           ;DHT_Start@modelo stored from wreg
  6979   003138  6E02               	movwf	DHT_Start@modelo^(0+1280),c
  6980                           
  6981                           ;LIB_DHT.c: 4:     if(modelo == 0){
  6982   00313A  5002               	movf	DHT_Start@modelo^(0+1280),w,c
  6983   00313C  A4D8               	btfss	status,2,c
  6984   00313E  D012               	goto	l1811
  6985                           
  6986                           ;LIB_DHT.c: 5:         TRISBbits.TRISB3 = 0;
  6987   003140  96C7               	bcf	199,3,c	;volatile
  6988                           
  6989                           ;LIB_DHT.c: 6:         ANSELBbits.ANSELB3 = 0;
  6990   003142  0104               	movlb	4	; () banked
  6991   003144  9708               	bcf	8,3,b	;volatile
  6992                           
  6993                           ;LIB_DHT.c: 7:         LATBbits.LATB3 = 0;
  6994   003146  96BF               	bcf	191,3,c	;volatile
  6995                           
  6996                           ; BSR set to: 4
  6997                           ;LIB_DHT.c: 8:         _delay((unsigned long)((18)*(32000000UL/4000.0)));
  6998   003148  0EBC               	movlw	188
  6999   00314A  6E01               	movwf	??_DHT_Start^(0+1280),c
  7000   00314C  0E02               	movlw	2
  7001   00314E                     u1697:
  7002   00314E  2EE8               	decfsz	wreg,f,c
  7003   003150  D7FE               	bra	u1697
  7004   003152  2E01               	decfsz	??_DHT_Start^(0+1280),f,c
  7005   003154  D7FC               	bra	u1697
  7006                           
  7007                           ;LIB_DHT.c: 9:         LATBbits.LATB3 = 1;
  7008   003156  86BF               	bsf	191,3,c	;volatile
  7009                           
  7010                           ;LIB_DHT.c: 10:         _delay((unsigned long)((40)*(32000000UL/4000000.0)));
  7011   003158  0E6A               	movlw	106
  7012   00315A                     u1707:
  7013   00315A  2EE8               	decfsz	wreg,f,c
  7014   00315C  D7FE               	bra	u1707
  7015   00315E  D000               	nop2	
  7016                           
  7017                           ;LIB_DHT.c: 11:         TRISBbits.TRISB3 = 1;
  7018   003160  86C7               	bsf	199,3,c	;volatile
  7019                           
  7020                           ;LIB_DHT.c: 12:     }
  7021   003162  0012               	return	
  7022   003164                     l1811:
  7023   003164  0402               	decf	DHT_Start@modelo^(0+1280),w,c
  7024   003166  A4D8               	btfss	status,2,c
  7025   003168  0012               	return	
  7026                           
  7027                           ;LIB_DHT.c: 14:         TRISBbits.TRISB3 = 0;
  7028   00316A  96C7               	bcf	199,3,c	;volatile
  7029                           
  7030                           ;LIB_DHT.c: 15:         ANSELBbits.ANSELB3 = 0;
  7031   00316C  0104               	movlb	4	; () banked
  7032   00316E  9708               	bcf	8,3,b	;volatile
  7033                           
  7034                           ;LIB_DHT.c: 16:         LATBbits.LATB3 = 0;
  7035   003170  96BF               	bcf	191,3,c	;volatile
  7036                           
  7037                           ; BSR set to: 4
  7038                           ;LIB_DHT.c: 17:         _delay((unsigned long)((1)*(32000000UL/4000.0)));
  7039   003172  0E0B               	movlw	11
  7040   003174  6E01               	movwf	??_DHT_Start^(0+1280),c
  7041   003176  0E62               	movlw	98
  7042   003178                     u1717:
  7043   003178  2EE8               	decfsz	wreg,f,c
  7044   00317A  D7FE               	bra	u1717
  7045   00317C  2E01               	decfsz	??_DHT_Start^(0+1280),f,c
  7046   00317E  D7FC               	bra	u1717
  7047   003180  D000               	nop2	
  7048                           
  7049                           ;LIB_DHT.c: 18:         LATBbits.LATB3 = 1;
  7050   003182  86BF               	bsf	191,3,c	;volatile
  7051                           
  7052                           ;LIB_DHT.c: 19:         _delay((unsigned long)((40)*(32000000UL/4000000.0)));
  7053   003184  0E6A               	movlw	106
  7054   003186                     u1727:
  7055   003186  2EE8               	decfsz	wreg,f,c
  7056   003188  D7FE               	bra	u1727
  7057   00318A  D000               	nop2	
  7058                           
  7059                           ;LIB_DHT.c: 20:         TRISBbits.TRISB3 = 1;
  7060   00318C  86C7               	bsf	199,3,c	;volatile
  7061   00318E  0012               	return		;funcret
  7062   003190                     __end_of_DHT_Start:
  7063                           	callstack 0
  7064                           
  7065 ;; *************** function _DHT_Read *****************
  7066 ;; Defined at:
  7067 ;;		line 60 in file "LIB_DHT.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  modelo          1    wreg     unsigned char 
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  modelo          1    0[COMRAM] unsigned char 
  7072 ;;  data            1    3[COMRAM] unsigned char 
  7073 ;;  temp_x          1    2[COMRAM] unsigned char 
  7074 ;;  x               1    1[COMRAM] unsigned char 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  1    wreg      unsigned char 
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7085 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7087 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7088 ;;Total ram usage:        4 bytes
  7089 ;; Hardware stack levels used: 1
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_DHT_GetTemp
  7094 ;;		_DHT_GetHumid
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           	psect	text22
  7099   002E18                     __ptext22:
  7100                           	callstack 0
  7101   002E18                     _DHT_Read:
  7102                           	callstack 125
  7103                           
  7104                           ;incstack = 0
  7105                           ;DHT_Read@modelo stored from wreg
  7106   002E18  6E01               	movwf	DHT_Read@modelo^(0+1280),c
  7107   002E1A  6A04               	clrf	DHT_Read@data^(0+1280),c
  7108                           
  7109                           ;LIB_DHT.c: 62:     unsigned char temp_x;;LIB_DHT.c: 63:     if(modelo == 0){
  7110   002E1C  5001               	movf	DHT_Read@modelo^(0+1280),w,c
  7111   002E1E  A4D8               	btfss	status,2,c
  7112   002E20  D022               	goto	l1917
  7113                           
  7114                           ;LIB_DHT.c: 64:         for(x=0;x<8;x++){
  7115   002E22  6A02               	clrf	DHT_Read@x^(0+1280),c
  7116   002E24                     l245:
  7117                           
  7118                           ;LIB_DHT.c: 65:             temp_x = 0;
  7119   002E24  6A03               	clrf	DHT_Read@temp_x^(0+1280),c
  7120                           
  7121                           ;LIB_DHT.c: 66:             while((PORTBbits.RB3 == 0) && temp_x < 100){
  7122   002E26  D001               	goto	l1893
  7123   002E28                     l1891:
  7124                           
  7125                           ;LIB_DHT.c: 67:                 temp_x++;
  7126   002E28  2A03               	incf	DHT_Read@temp_x^(0+1280),f,c
  7127   002E2A                     l1893:
  7128                           
  7129                           ;LIB_DHT.c: 66:             while((PORTBbits.RB3 == 0) && temp_x < 100){
  7130   002E2A  B6CF               	btfsc	207,3,c	;volatile
  7131   002E2C  D003               	goto	u810
  7132   002E2E  0E63               	movlw	99
  7133   002E30  6403               	cpfsgt	DHT_Read@temp_x^(0+1280),c
  7134   002E32  D7FA               	goto	l1891
  7135   002E34                     u810:
  7136                           
  7137                           ;LIB_DHT.c: 69:             _delay((unsigned long)((35)*(32000000UL/4000000.0)));
  7138   002E34  0E5D               	movlw	93
  7139   002E36                     u1737:
  7140   002E36  2EE8               	decfsz	wreg,f,c
  7141   002E38  D7FE               	bra	u1737
  7142   002E3A  0000               	nop	
  7143                           
  7144                           ;LIB_DHT.c: 70:             if(PORTBbits.RB3){
  7145   002E3C  A6CF               	btfss	207,3,c	;volatile
  7146   002E3E  D003               	goto	l1903
  7147                           
  7148                           ;LIB_DHT.c: 71:                 data = ((data<<1) | 1);
  7149   002E40  80D8               	bsf	status,0,c
  7150   002E42  3604               	rlcf	DHT_Read@data^(0+1280),f,c
  7151                           
  7152                           ;LIB_DHT.c: 72:             }
  7153   002E44  D003               	goto	l1905
  7154   002E46                     l1903:
  7155                           
  7156                           ;LIB_DHT.c: 74:                 data = (data<<1);
  7157   002E46  5004               	movf	DHT_Read@data^(0+1280),w,c
  7158   002E48  2404               	addwf	DHT_Read@data^(0+1280),w,c
  7159   002E4A  6E04               	movwf	DHT_Read@data^(0+1280),c
  7160   002E4C                     l1905:
  7161                           
  7162                           ;LIB_DHT.c: 76:             temp_x = 0;
  7163   002E4C  6A03               	clrf	DHT_Read@temp_x^(0+1280),c
  7164                           
  7165                           ;LIB_DHT.c: 77:             while((PORTBbits.RB3 == 1) && temp_x < 100){
  7166   002E4E  D001               	goto	l1909
  7167   002E50                     l1907:
  7168                           
  7169                           ;LIB_DHT.c: 78:                 temp_x++;
  7170   002E50  2A03               	incf	DHT_Read@temp_x^(0+1280),f,c
  7171   002E52                     l1909:
  7172                           
  7173                           ;LIB_DHT.c: 77:             while((PORTBbits.RB3 == 1) && temp_x < 100){
  7174   002E52  A6CF               	btfss	207,3,c	;volatile
  7175   002E54  D003               	goto	u840
  7176   002E56  0E63               	movlw	99
  7177   002E58  6403               	cpfsgt	DHT_Read@temp_x^(0+1280),c
  7178   002E5A  D7FA               	goto	l1907
  7179   002E5C                     u840:
  7180                           
  7181                           ;LIB_DHT.c: 80:         }
  7182   002E5C  2A02               	incf	DHT_Read@x^(0+1280),f,c
  7183   002E5E  0E07               	movlw	7
  7184   002E60  6402               	cpfsgt	DHT_Read@x^(0+1280),c
  7185   002E62  D7E0               	goto	l245
  7186   002E64  D024               	goto	u920
  7187   002E66                     l1917:
  7188   002E66  0401               	decf	DHT_Read@modelo^(0+1280),w,c
  7189   002E68  A4D8               	btfss	status,2,c
  7190   002E6A  D021               	goto	u920
  7191                           
  7192                           ;LIB_DHT.c: 83:         for(x=0;x<8;x++){
  7193   002E6C  6A02               	clrf	DHT_Read@x^(0+1280),c
  7194   002E6E                     l261:
  7195                           
  7196                           ;LIB_DHT.c: 84:             temp_x = 0;
  7197   002E6E  6A03               	clrf	DHT_Read@temp_x^(0+1280),c
  7198                           
  7199                           ;LIB_DHT.c: 85:             while((PORTBbits.RB3 == 0) && temp_x < 100){
  7200   002E70  D001               	goto	l1927
  7201   002E72                     l1925:
  7202                           
  7203                           ;LIB_DHT.c: 86:                 temp_x++;
  7204   002E72  2A03               	incf	DHT_Read@temp_x^(0+1280),f,c
  7205   002E74                     l1927:
  7206                           
  7207                           ;LIB_DHT.c: 85:             while((PORTBbits.RB3 == 0) && temp_x < 100){
  7208   002E74  B6CF               	btfsc	207,3,c	;volatile
  7209   002E76  D003               	goto	u880
  7210   002E78  0E63               	movlw	99
  7211   002E7A  6403               	cpfsgt	DHT_Read@temp_x^(0+1280),c
  7212   002E7C  D7FA               	goto	l1925
  7213   002E7E                     u880:
  7214                           
  7215                           ;LIB_DHT.c: 88:             _delay((unsigned long)((35)*(32000000UL/4000000.0)));
  7216   002E7E  0E5D               	movlw	93
  7217   002E80                     u1747:
  7218   002E80  2EE8               	decfsz	wreg,f,c
  7219   002E82  D7FE               	bra	u1747
  7220   002E84  0000               	nop	
  7221                           
  7222                           ;LIB_DHT.c: 89:             if(PORTBbits.RB3){
  7223   002E86  A6CF               	btfss	207,3,c	;volatile
  7224   002E88  D003               	goto	l1937
  7225                           
  7226                           ;LIB_DHT.c: 90:                 data = ((data<<1) | 1);
  7227   002E8A  80D8               	bsf	status,0,c
  7228   002E8C  3604               	rlcf	DHT_Read@data^(0+1280),f,c
  7229                           
  7230                           ;LIB_DHT.c: 91:             }
  7231   002E8E  D003               	goto	l1939
  7232   002E90                     l1937:
  7233                           
  7234                           ;LIB_DHT.c: 93:                 data = (data<<1);
  7235   002E90  5004               	movf	DHT_Read@data^(0+1280),w,c
  7236   002E92  2404               	addwf	DHT_Read@data^(0+1280),w,c
  7237   002E94  6E04               	movwf	DHT_Read@data^(0+1280),c
  7238   002E96                     l1939:
  7239                           
  7240                           ;LIB_DHT.c: 95:             temp_x = 0;
  7241   002E96  6A03               	clrf	DHT_Read@temp_x^(0+1280),c
  7242                           
  7243                           ;LIB_DHT.c: 96:             while((PORTBbits.RB3 == 1) && temp_x < 100){
  7244   002E98  D001               	goto	l1943
  7245   002E9A                     l1941:
  7246                           
  7247                           ;LIB_DHT.c: 97:                 temp_x++;
  7248   002E9A  2A03               	incf	DHT_Read@temp_x^(0+1280),f,c
  7249   002E9C                     l1943:
  7250                           
  7251                           ;LIB_DHT.c: 96:             while((PORTBbits.RB3 == 1) && temp_x < 100){
  7252   002E9C  A6CF               	btfss	207,3,c	;volatile
  7253   002E9E  D003               	goto	u910
  7254   002EA0  0E63               	movlw	99
  7255   002EA2  6403               	cpfsgt	DHT_Read@temp_x^(0+1280),c
  7256   002EA4  D7FA               	goto	l1941
  7257   002EA6                     u910:
  7258                           
  7259                           ;LIB_DHT.c: 99:         }
  7260   002EA6  2A02               	incf	DHT_Read@x^(0+1280),f,c
  7261   002EA8  0E07               	movlw	7
  7262   002EAA  6402               	cpfsgt	DHT_Read@x^(0+1280),c
  7263   002EAC  D7E0               	goto	l261
  7264   002EAE                     u920:
  7265                           
  7266                           ;LIB_DHT.c: 101:     return data;
  7267   002EAE  5004               	movf	DHT_Read@data^(0+1280),w,c
  7268   002EB0  0012               	return		;funcret
  7269   002EB2                     __end_of_DHT_Read:
  7270                           	callstack 0
  7271                           
  7272 ;; *************** function _DHT_Check *****************
  7273 ;; Defined at:
  7274 ;;		line 24 in file "LIB_DHT.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;  modelo          1    wreg     unsigned char 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  modelo          1    0[COMRAM] unsigned char 
  7279 ;;  temp_x          1    1[COMRAM] unsigned char 
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  1    wreg      void 
  7282 ;; Registers used:
  7283 ;;		wreg, status,2, status,0
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7292 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7293 ;;Total ram usage:        2 bytes
  7294 ;; Hardware stack levels used: 1
  7295 ;; This function calls:
  7296 ;;		Nothing
  7297 ;; This function is called by:
  7298 ;;		_DHT_GetTemp
  7299 ;;		_DHT_GetHumid
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           	psect	text23
  7304   002EB2                     __ptext23:
  7305                           	callstack 0
  7306   002EB2                     _DHT_Check:
  7307                           	callstack 125
  7308                           
  7309                           ;incstack = 0
  7310                           ;DHT_Check@modelo stored from wreg
  7311   002EB2  6E01               	movwf	DHT_Check@modelo^(0+1280),c
  7312                           
  7313                           ;LIB_DHT.c: 25:     unsigned char temp_x;;LIB_DHT.c: 26:     if(modelo == 0){
  7314   002EB4  5001               	movf	DHT_Check@modelo^(0+1280),w,c
  7315   002EB6  A4D8               	btfss	status,2,c
  7316   002EB8  D021               	goto	l1851
  7317                           
  7318                           ;LIB_DHT.c: 27:         temp_x = 0;
  7319   002EBA  6A02               	clrf	DHT_Check@temp_x^(0+1280),c
  7320                           
  7321                           ;LIB_DHT.c: 28:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7322   002EBC  D001               	goto	l1827
  7323   002EBE                     l1825:
  7324                           
  7325                           ;LIB_DHT.c: 29:             temp_x++;
  7326   002EBE  2A02               	incf	DHT_Check@temp_x^(0+1280),f,c
  7327   002EC0                     l1827:
  7328                           
  7329                           ;LIB_DHT.c: 28:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7330   002EC0  A6CF               	btfss	207,3,c	;volatile
  7331   002EC2  D003               	goto	u670
  7332   002EC4  0E63               	movlw	99
  7333   002EC6  6402               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7334   002EC8  D7FA               	goto	l1825
  7335   002ECA                     u670:
  7336                           
  7337                           ;LIB_DHT.c: 31:         _delay((unsigned long)((80)*(32000000UL/4000000.0)));
  7338   002ECA  0ED5               	movlw	213
  7339   002ECC                     u1757:
  7340   002ECC  2EE8               	decfsz	wreg,f,c
  7341   002ECE  D7FE               	bra	u1757
  7342   002ED0  0000               	nop	
  7343                           
  7344                           ;LIB_DHT.c: 32:         temp_x = 0;
  7345   002ED2  6A02               	clrf	DHT_Check@temp_x^(0+1280),c
  7346                           
  7347                           ;LIB_DHT.c: 33:         while((PORTBbits.RB3 == 0) && temp_x < 100){
  7348   002ED4  D001               	goto	l1837
  7349   002ED6                     l1835:
  7350                           
  7351                           ;LIB_DHT.c: 34:             temp_x++;
  7352   002ED6  2A02               	incf	DHT_Check@temp_x^(0+1280),f,c
  7353   002ED8                     l1837:
  7354                           
  7355                           ;LIB_DHT.c: 33:         while((PORTBbits.RB3 == 0) && temp_x < 100){
  7356   002ED8  B6CF               	btfsc	207,3,c	;volatile
  7357   002EDA  D003               	goto	u690
  7358   002EDC  0E63               	movlw	99
  7359   002EDE  6402               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7360   002EE0  D7FA               	goto	l1835
  7361   002EE2                     u690:
  7362                           
  7363                           ;LIB_DHT.c: 36:         _delay((unsigned long)((80)*(32000000UL/4000000.0)));
  7364   002EE2  0ED5               	movlw	213
  7365   002EE4                     u1767:
  7366   002EE4  2EE8               	decfsz	wreg,f,c
  7367   002EE6  D7FE               	bra	u1767
  7368   002EE8  0000               	nop	
  7369                           
  7370                           ;LIB_DHT.c: 37:         temp_x = 0;
  7371   002EEA  6A02               	clrf	DHT_Check@temp_x^(0+1280),c
  7372                           
  7373                           ;LIB_DHT.c: 38:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7374   002EEC  D001               	goto	l1847
  7375   002EEE                     l1845:
  7376                           
  7377                           ;LIB_DHT.c: 39:             temp_x++;
  7378   002EEE  2A02               	incf	DHT_Check@temp_x^(0+1280),f,c
  7379   002EF0                     l1847:
  7380                           
  7381                           ;LIB_DHT.c: 38:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7382   002EF0  A6CF               	btfss	207,3,c	;volatile
  7383   002EF2  0012               	return	
  7384   002EF4  0E63               	movlw	99
  7385   002EF6  6402               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7386   002EF8  D7FA               	goto	l1845
  7387   002EFA  0012               	return	
  7388   002EFC                     l1851:
  7389   002EFC  0401               	decf	DHT_Check@modelo^(0+1280),w,c
  7390   002EFE  A4D8               	btfss	status,2,c
  7391   002F00  0012               	return	
  7392                           
  7393                           ;LIB_DHT.c: 43:         temp_x = 0;
  7394   002F02  6A02               	clrf	DHT_Check@temp_x^(0+1280),c
  7395                           
  7396                           ;LIB_DHT.c: 44:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7397   002F04  D001               	goto	l1857
  7398   002F06                     l1855:
  7399                           
  7400                           ;LIB_DHT.c: 45:             temp_x++;
  7401   002F06  2A02               	incf	DHT_Check@temp_x^(0+1280),f,c
  7402   002F08                     l1857:
  7403                           
  7404                           ;LIB_DHT.c: 44:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7405   002F08  A6CF               	btfss	207,3,c	;volatile
  7406   002F0A  D003               	goto	u740
  7407   002F0C  0E63               	movlw	99
  7408   002F0E  6402               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7409   002F10  D7FA               	goto	l1855
  7410   002F12                     u740:
  7411                           
  7412                           ;LIB_DHT.c: 47:         _delay((unsigned long)((80)*(32000000UL/4000000.0)));
  7413   002F12  0ED5               	movlw	213
  7414   002F14                     u1777:
  7415   002F14  2EE8               	decfsz	wreg,f,c
  7416   002F16  D7FE               	bra	u1777
  7417   002F18  0000               	nop	
  7418                           
  7419                           ;LIB_DHT.c: 48:         temp_x = 0;
  7420   002F1A  6A02               	clrf	DHT_Check@temp_x^(0+1280),c
  7421                           
  7422                           ;LIB_DHT.c: 49:         while((PORTBbits.RB3 == 0) && temp_x < 100){
  7423   002F1C  D001               	goto	l1867
  7424   002F1E                     l1865:
  7425                           
  7426                           ;LIB_DHT.c: 50:             temp_x++;
  7427   002F1E  2A02               	incf	DHT_Check@temp_x^(0+1280),f,c
  7428   002F20                     l1867:
  7429                           
  7430                           ;LIB_DHT.c: 49:         while((PORTBbits.RB3 == 0) && temp_x < 100){
  7431   002F20  B6CF               	btfsc	207,3,c	;volatile
  7432   002F22  D003               	goto	u760
  7433   002F24  0E63               	movlw	99
  7434   002F26  6402               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7435   002F28  D7FA               	goto	l1865
  7436   002F2A                     u760:
  7437                           
  7438                           ;LIB_DHT.c: 52:         _delay((unsigned long)((80)*(32000000UL/4000000.0)));
  7439   002F2A  0ED5               	movlw	213
  7440   002F2C                     u1787:
  7441   002F2C  2EE8               	decfsz	wreg,f,c
  7442   002F2E  D7FE               	bra	u1787
  7443   002F30  0000               	nop	
  7444                           
  7445                           ;LIB_DHT.c: 53:         temp_x = 0;
  7446   002F32  6A02               	clrf	DHT_Check@temp_x^(0+1280),c
  7447                           
  7448                           ;LIB_DHT.c: 54:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7449   002F34  D001               	goto	l1877
  7450   002F36                     l1875:
  7451                           
  7452                           ;LIB_DHT.c: 55:             temp_x++;
  7453   002F36  2A02               	incf	DHT_Check@temp_x^(0+1280),f,c
  7454   002F38                     l1877:
  7455                           
  7456                           ;LIB_DHT.c: 54:         while((PORTBbits.RB3 == 1) && temp_x < 100){
  7457   002F38  A6CF               	btfss	207,3,c	;volatile
  7458   002F3A  0012               	return	
  7459   002F3C  0E63               	movlw	99
  7460   002F3E  6402               	cpfsgt	DHT_Check@temp_x^(0+1280),c
  7461   002F40  D7FA               	goto	l1875
  7462   002F42  0012               	return	
  7463   002F44                     __end_of_DHT_Check:
  7464                           	callstack 0
  7465                           
  7466                           	psect	rparam
  7467   000001                     ___rparam_used  equ	1
  7468   000000                     ___param_bank   equ	0
  7469   000000                     __Lparam        equ	__Lrparam
  7470   000000                     __Hparam        equ	__Hrparam
  7471                           
  7472                           	psect	config
  7473                           
  7474                           ;Config register CONFIG1 @ 0x300000
  7475                           ;	External Oscillator Selection
  7476                           ;	FEXTOSC = OFF, Oscillator not enabled
  7477                           ;	Reset Oscillator Selection
  7478                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  7479   300000                     	org	3145728
  7480   300000  FC                 	db	252
  7481                           
  7482                           ;Config register CONFIG2 @ 0x300001
  7483                           ;	Clock out Enable bit
  7484                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  7485                           ;	PRLOCKED One-Way Set Enable bit
  7486                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  7487                           ;	Clock Switch Enable bit
  7488                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7489                           ;	Fail-Safe Clock Monitor Enable bit
  7490                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7491   300001                     	org	3145729
  7492   300001  FF                 	db	255
  7493                           
  7494                           ;Config register CONFIG3 @ 0x300002
  7495                           ;	MCLR Enable bit
  7496                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  7497                           ;	Power-up timer selection bits
  7498                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  7499                           ;	Multi-vector enable bit
  7500                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  7501                           ;	IVTLOCK bit One-way set enable bit
  7502                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  7503                           ;	Low Power BOR Enable bit
  7504                           ;	LPBOREN = OFF, Low-Power BOR disabled
  7505                           ;	Brown-out Reset Enable bits
  7506                           ;	BOREN = OFF, Brown-out Reset disabled
  7507   300002                     	org	3145730
  7508   300002  3D                 	db	61
  7509                           
  7510                           ;Config register CONFIG4 @ 0x300003
  7511                           ;	Brown-out Reset Voltage Selection bits
  7512                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  7513                           ;	ZCD Disable bit
  7514                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  7515                           ;	PPSLOCK bit One-Way Set Enable bit
  7516                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  7517                           ;	Stack Full/Underflow Reset Enable bit
  7518                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7519                           ;	Low Voltage Programming Enable bit
  7520                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  7521                           ;	Extended Instruction Set Enable bit
  7522                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  7523   300003                     	org	3145731
  7524   300003  DF                 	db	223
  7525                           
  7526                           ;Config register CONFIG5 @ 0x300004
  7527                           ;	WDT Period selection bits
  7528                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7529                           ;	WDT operating mode
  7530                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  7531   300004                     	org	3145732
  7532   300004  9F                 	db	159
  7533                           
  7534                           ;Config register CONFIG6 @ 0x300005
  7535                           ;	WDT Window Select bits
  7536                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7537                           ;	WDT input clock selector
  7538                           ;	WDTCCS = SC, Software Control
  7539   300005                     	org	3145733
  7540   300005  FF                 	db	255
  7541                           
  7542                           ;Config register CONFIG7 @ 0x300006
  7543                           ;	Boot Block Size selection bits
  7544                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  7545                           ;	Boot Block enable bit
  7546                           ;	BBEN = OFF, Boot block disabled
  7547                           ;	Storage Area Flash enable bit
  7548                           ;	SAFEN = OFF, SAF disabled
  7549                           ;	Background Debugger
  7550                           ;	DEBUG = OFF, Background Debugger disabled
  7551   300006                     	org	3145734
  7552   300006  FF                 	db	255
  7553                           
  7554                           ;Config register CONFIG8 @ 0x300007
  7555                           ;	Boot Block Write Protection bit
  7556                           ;	WRTB = OFF, Boot Block not Write protected
  7557                           ;	Configuration Register Write Protection bit
  7558                           ;	WRTC = OFF, Configuration registers not Write protected
  7559                           ;	Data EEPROM Write Protection bit
  7560                           ;	WRTD = OFF, Data EEPROM not Write protected
  7561                           ;	SAF Write protection bit
  7562                           ;	WRTSAF = OFF, SAF not Write Protected
  7563                           ;	Application Block write protection bit
  7564                           ;	WRTAPP = OFF, Application Block not write protected
  7565   300007                     	org	3145735
  7566   300007  FF                 	db	255
  7567                           
  7568                           ;Config register CONFIG10 @ 0x300009
  7569                           ;	PFM and Data EEPROM Code Protection bit
  7570                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  7571   300009                     	org	3145737
  7572   300009  FF                 	db	255
  7573                           tosu	equ	0x4FF
  7574                           tosh	equ	0x4FE
  7575                           tosl	equ	0x4FD
  7576                           stkptr	equ	0x4FC
  7577                           pclatu	equ	0x4FB
  7578                           pclath	equ	0x4FA
  7579                           pcl	equ	0x4F9
  7580                           tblptru	equ	0x4F8
  7581                           tblptrh	equ	0x4F7
  7582                           tblptrl	equ	0x4F6
  7583                           tablat	equ	0x4F5
  7584                           prodh	equ	0x4F4
  7585                           prodl	equ	0x4F3
  7586                           indf0	equ	0x4EF
  7587                           postinc0	equ	0x4EE
  7588                           postdec0	equ	0x4ED
  7589                           preinc0	equ	0x4EC
  7590                           plusw0	equ	0x4EB
  7591                           fsr0h	equ	0x4EA
  7592                           fsr0l	equ	0x4E9
  7593                           wreg	equ	0x4E8
  7594                           indf1	equ	0x4E7
  7595                           postinc1	equ	0x4E6
  7596                           postdec1	equ	0x4E5
  7597                           preinc1	equ	0x4E4
  7598                           plusw1	equ	0x4E3
  7599                           fsr1h	equ	0x4E2
  7600                           fsr1l	equ	0x4E1
  7601                           bsr	equ	0x4E0
  7602                           indf2	equ	0x4DF
  7603                           postinc2	equ	0x4DE
  7604                           postdec2	equ	0x4DD
  7605                           preinc2	equ	0x4DC
  7606                           plusw2	equ	0x4DB
  7607                           fsr2h	equ	0x4DA
  7608                           fsr2l	equ	0x4D9
  7609                           status	equ	0x4D8

Data Sizes:
    Strings     46
    Constant    0
    Data        1
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      30
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    I2C_ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[12]), STR_2(CODE[13]), STR_3(CODE[10]), STR_4(CODE[11]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[12]), STR_2(CODE[13]), STR_3(CODE[10]), STR_4(CODE[11]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[12]), STR_2(CODE[13]), STR_3(CODE[10]), STR_4(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_I2C_LCD_ESCRIBE_VAR_INT
    _I2C_POS_CURSOR->_I2C_ENVIA_LCD_CMD
    _I2C_LCD_INIT->_I2C_CURSOR_ONOFF
    _I2C_CURSOR_ONOFF->_I2C_ENVIA_LCD_CMD
    _I2C_CURSOR_HOME->_I2C_ENVIA_LCD_CMD
    _I2C_BORRAR_LCD->_I2C_ENVIA_LCD_CMD
    _I2C_ENVIA_LCD_CMD->_I2C1_WRITESINGLEBYTE
    _I2C_LCD_ESCRIBE_VAR_INT->___lwdiv
    ___lwdiv->___lwmod
    _I2C_LCD_CHAR_GRADO->_I2C_ENVIA_LCD_DATA
    _I2C_ESCRIBE_MENSAJE2->_I2C_ENVIA_LCD_DATA
    _I2C_ENVIA_LCD_DATA->_I2C1_WRITESINGLEBYTE
    _DHT_GetTemp->_DHT_Read
    _DHT_GetHumid->_DHT_Read

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6938
                                             21 COMRAM     4     4      0
                       _DHT_GetHumid
                        _DHT_GetTemp
                     _I2C_BORRAR_LCD
                 _I2C_ENVIA_LCD_DATA
               _I2C_ESCRIBE_MENSAJE2
                 _I2C_LCD_CHAR_GRADO
            _I2C_LCD_ESCRIBE_VAR_INT
                       _I2C_LCD_INIT
                     _I2C_POS_CURSOR
                   _WS2812_DATA_SEND
                        _WS2812_INIT
                            ___lwdiv
                          _configuro
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WS2812_INIT                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WS2812_DATA_SEND                                     3     1      2      77
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _I2C_POS_CURSOR                                       3     2      1     459
                                              6 COMRAM     3     2      1
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_INIT                                         2     2      0     914
                                              7 COMRAM     2     2      0
                          _I2C1_INIT
               _I2C1_WRITESINGLEBYTE
                     _I2C_BORRAR_LCD
                    _I2C_CURSOR_HOME
                   _I2C_CURSOR_ONOFF
 ---------------------------------------------------------------------------------
 (2) _I2C_CURSOR_ONOFF                                     1     1      0     309
                                              6 COMRAM     1     1      0
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_CURSOR_HOME                                      0     0      0     251
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_BORRAR_LCD                                       0     0      0     251
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_ENVIA_LCD_CMD                                    4     4      0     251
                                              2 COMRAM     4     4      0
               _I2C1_WRITESINGLEBYTE
 ---------------------------------------------------------------------------------
 (2) _I2C1_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_ESCRIBE_VAR_INT                              9     5      4    2055
                                             12 COMRAM     9     5      4
                 _I2C_ENVIA_LCD_DATA
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     167
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     174
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_CHAR_GRADO                                   0     0      0     251
                 _I2C_ENVIA_LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _I2C_ESCRIBE_MENSAJE2                                 4     3      1     460
                                              6 COMRAM     4     3      1
                 _I2C_ENVIA_LCD_DATA
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _I2C_ENVIA_LCD_DATA                                   4     4      0     251
                                              2 COMRAM     4     4      0
               _I2C1_WRITESINGLEBYTE
 ---------------------------------------------------------------------------------
 (3) _I2C1_WRITESINGLEBYTE                                 2     1      1     103
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _DHT_GetTemp                                         12    10      2    1000
                                              4 COMRAM     9     7      2
                          _DHT_Check
                           _DHT_Read
                          _DHT_Start
 ---------------------------------------------------------------------------------
 (1) _DHT_GetHumid                                        12    10      2    1000
                                              4 COMRAM     9     7      2
                          _DHT_Check
                           _DHT_Read
                          _DHT_Start
 ---------------------------------------------------------------------------------
 (2) _DHT_Start                                            2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT_Read                                             4     4      0     362
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _DHT_Check                                            2     2      0     202
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT_GetHumid
     _DHT_Check
     _DHT_Read
     _DHT_Start
   _DHT_GetTemp
     _DHT_Check
     _DHT_Read
     _DHT_Start
   _I2C_BORRAR_LCD
     _I2C_ENVIA_LCD_CMD
       _I2C1_WRITESINGLEBYTE
   _I2C_ENVIA_LCD_DATA
     _I2C1_WRITESINGLEBYTE
   _I2C_ESCRIBE_MENSAJE2
     _I2C_ENVIA_LCD_DATA
     _strlen
   _I2C_LCD_CHAR_GRADO
     _I2C_ENVIA_LCD_DATA
   _I2C_LCD_ESCRIBE_VAR_INT
     _I2C_ENVIA_LCD_DATA
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _I2C_LCD_INIT
     _I2C1_INIT
     _I2C1_WRITESINGLEBYTE
     _I2C_BORRAR_LCD
     _I2C_CURSOR_HOME
       _I2C_ENVIA_LCD_CMD
     _I2C_CURSOR_ONOFF
       _I2C_ENVIA_LCD_CMD
   _I2C_POS_CURSOR
     _I2C_ENVIA_LCD_CMD
   _WS2812_DATA_SEND
   _WS2812_INIT
   ___lwdiv
   _configuro

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRh        1065      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITBIGSFRll        129      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     25      30     31.6%
BITBIGSFRlh         84      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      30      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jun 23 16:00:29 2025

                              l51 333C                                l66 3126              ??_I2C_LCD_CHAR_GRADO 0507  
                             l261 2E6E                               l245 2E24                               l390 3382  
                             l384 3370                               l387 337A                               l887 322E  
                             l897 32BA                               u810 2E34                               u570 3340  
                             u740 2F12                               u580 3344                               u670 2ECA  
                             u910 2EA6                               u760 2F2A                               u920 2EAE  
                             u840 2E5C                               u690 2EE2                               u940 3208  
                             u880 2E7E                               u970 329C                      DHT_Read@data 0504  
                  ??_DHT_GetHumid 0507                               wreg 04E8                      _I2C_LCD_ADDR 051E  
                    _I2C_LCD_INIT 2630                 _I2C_ENVIA_LCD_CMD 2FB0                              l2001 3104  
                            l2021 32F0                              l2005 3116                              l2017 32D4  
                            l2211 2A44                              l2221 2A94                              l2231 2B0C  
                            l2223 2AB4                              l2215 2A5C                              l2241 2BA0  
                            l2233 2B34                              l2209 2A3A                              l2243 2BCA  
                            l2235 2B5C                              l2227 2AD4                              l2219 2A7A  
                            l2317 30BA                              l2253 2C8A                              l2245 2BFA  
                            l2229 2AEA                              l2247 2C2A                              l2239 2B84  
                            l2249 2C5A                              l2257 2CAC                              l2353 2D36  
                            l1811 3164                              l2285 3056                              l1903 2E46  
                            l1825 2EBE                              l1905 2E4C                              l1835 2ED6  
                            l1827 2EC0                              l1851 2EFC                              l1907 2E50  
                            l1845 2EEE                              l1837 2ED8                              l1941 2E9A  
                            l1925 2E72                              l1909 2E52                              l1917 2E66  
                            l1855 2F06                              l1847 2EF0                              l1943 2E9C  
                            l1927 2E74                              l1791 3300                              l1767 3396  
                            l1865 2F1E                              l1857 2F08                              l1937 2E90  
                            l1793 3302                              l1961 31FC                              l1875 2F36  
                            l1867 2F20                              l1939 2E96                              l1891 2E28  
                            l1963 3204                              l1877 2F38                              l1893 2E2A  
                            l1973 3224                              l1981 3290                              l1983 3298  
                            l1989 32B0                              l1997 30F2                              STR_1 260E  
                            STR_2 2601                              STR_3 2625                              STR_4 261A  
                            u1207 268E                              u1217 26A4                              u1137 2D16  
                            u1307 2754                              u1227 26B8                              u1147 2D9A  
                            u1317 2764                              u1237 26CA                              u1157 2E08  
                            u1407 2800                              u1327 2776                              u1247 26E0  
                            u1167 312C                              u1417 2812                              u1337 2788  
                            u1257 26F4                              u1177 263A                              u1507 28B8  
                            u1427 2824                              u1347 2798                              u1267 2706  
                            u1187 2658                              u1517 28CA                              u1437 2834  
                            u1357 27AA                              u1277 271C                              u1197 267C  
                            u1607 296A                              u1527 28DA                              u1447 2846  
                            u1367 27BC                              u1287 2730                              u1617 2FD8  
                            u1537 28EC                              u1457 2858                              u1377 27CC  
                            u1297 2742                              _T2PR 0323                              u1707 315A  
                            u1627 2FEA                              u1547 28FE                              u1467 2868  
                            u1387 27DE                              u1717 3178                              u1637 2FFE  
                            u1557 290E                              u1477 287A                              u1397 27F0  
                            u1727 3186                              u1647 3010                              u1567 2920  
                            u1487 2890                              u1737 2E36                              u1657 2F6C  
                            u1577 2932                              u1497 28A6                              u1747 2E80  
                            u1667 2F80                              u1587 2942                              u1757 2ECC  
                            u1677 2F94                              u1597 2954                              u1767 2EE4  
                            u1687 2FA8                              u1777 2F14                              u1697 314E  
                            u1787 2F2C                ?_I2C_ENVIA_LCD_CMD 0501          I2C_ENVIA_LCD_CMD@command 0504  
                            _main 2CCE                DHT_GetHumid@RH_Dec 0509                DHT_GetHumid@RH_Ent 050C  
               ??_I2C_CURSOR_HOME 0507                              start FFFC               ??_I2C_ENVIA_LCD_CMD 0503  
                  _SPI1STATUSbits 0087                      ___param_bank 0000                  __end_of_DHT_Read 2EB2  
              _I2C_ENVIA_LCD_DATA 2F44                 __end_of_I2C1_INIT 3282                DHT_GetHumid@modelo 050D  
                           ?_main 0501                             _T2CON 0324                   __end_of___lwdiv 3238  
                 __end_of___lwmod 32C4                             _OSCEN 00B3               ?_I2C_ENVIA_LCD_DATA 0501  
       __end_of_I2C_ENVIA_LCD_CMD 3018                 DHT_GetTemp@modelo 050D                    _I2C_BORRAR_LCD 33C2  
                    ?_WS2812_INIT 0501                 ?_I2C_CURSOR_ONOFF 0501                             tablat 04F5  
                  DHT_Read@modelo 0501                             status 04D8                ??_I2C_CURSOR_ONOFF 0507  
                  DHT_Read@temp_x 0503            I2C_CURSOR_ONOFF@estado 0507              ??_I2C_ENVIA_LCD_DATA 0503  
                 __initialization 334A                      __end_of_main 2E18                 __end_of_DHT_Check 2F44  
         I2C_ESCRIBE_MENSAJE2@tam 0509                            ??_main 0516                 __end_of_DHT_Start 3190  
                   __activetblptr 0003          ?_I2C_LCD_ESCRIBE_VAR_INT 050D               WS2812_DATA_SEND@red 0501  
          __end_of_I2C_BORRAR_LCD 33CA                 _temperatura_dht11 051C                            _CCPR1H 0341  
                          _CCPR1L 0340                            _RC3PPS 0214                            _RC4PPS 0215  
                          _RF2PPS 022B                            _OSCFRQ 00B1              __end_of_DHT_GetHumid 30E0  
   I2C1_WRITESINGLEBYTE@direccion 0502                         ??___lwdiv 050A                         ??___lwmod 0505  
                          isa$std 0001                            _strlen 32FA                      __pdataCOMRAM 051E  
        __end_of_WS2812_DATA_SEND 3388                      __mediumconst 2600                            tblptrh 04F7  
                          tblptrl 04F6                            tblptru 04F8                   ?_I2C_BORRAR_LCD 0501  
                  _I2C_POS_CURSOR 30E0                         ?_DHT_Read 0501                        __accesstop 0560  
         __end_of__initialization 3364                         DHT_Read@x 0502                     ___rparam_used 0001  
                  __pcstackCOMRAM 0501      I2C_LCD_ESCRIBE_VAR_INT@punto 0510   __end_of_I2C_LCD_ESCRIBE_VAR_INT 2CCE  
           I2C_ESCRIBE_MENSAJE2@i 050A                   _I2C_CURSOR_HOME 33BA            __end_of_I2C_POS_CURSOR 3138  
                      ??_DHT_Read 0501              WS2812_DATA_SEND@blue 0502                           _I2C1CNT 028D  
                         _I2C1TXB 028C                           _CCP1CON 0342       I2C_ENVIA_LCD_DATA@lownibble 0506  
                         ?_strlen 0501                           _CLCnCON 00D6                           _CLCnPOL 00D7  
                       _I2C1_INIT 3238                           _OSCCON1 00AD      __end_of_I2C_ESCRIBE_MENSAJE2 32FA  
                         _SPI1CLK 008C                           _SPI1TXB 0081                   ?_I2C_POS_CURSOR 0507  
             DHT_GetTemp@Temp_Dec 0509               DHT_GetTemp@Temp_Ent 050C        I2C_ESCRIBE_MENSAJE2@cadena 0507  
                         __Hparam 0000                           __Lparam 0000                         _CLCSELECT 00D5  
                   _humedad_dht11 051A                 __end_of_configuro 33BA                           ___lwdiv 31E6  
                         ___lwmod 3282                      __psmallconst 2600                           __pcinit 334A  
                         __ramtop 2600                           __ptext0 2CCE                           __ptext1 33A4  
                         __ptext2 3190                           __ptext3 336A                           __ptext4 30E0  
                         __ptext5 2630                           __ptext6 3388                           __ptext7 33BA  
                         __ptext8 33C2                           __ptext9 2FB0           __end_of_I2C_CURSOR_HOME 33C2  
                     _I2C1CLKbits 029C                        ?_I2C1_INIT 0501        I2C_ENVIA_LCD_CMD@lownibble 0506  
                       _DHT_Check 2EB2                      _DHT_GetHumid 307C                         _DHT_Start 3138  
                     _I2C1PIRbits 029A              end_of_initialization 3364  I2C_LCD_ESCRIBE_VAR_INT@n_digitos 050F  
              I2C_POS_CURSOR@fila 0509                           strlen@a 0503                           strlen@s 0501  
                       _PORTBbits 04CF                  ??_I2C_BORRAR_LCD 0507                        ?_DHT_Check 0501  
               ?_WS2812_DATA_SEND 0501                         _TRISBbits 04C7                         _TRISCbits 04C8  
                      ?_DHT_Start 0501                ??_WS2812_DATA_SEND 0503                     ??_DHT_GetTemp 0507  
            _I2C_ESCRIBE_MENSAJE2 32C4     I2C_LCD_ESCRIBE_VAR_INT@decena 0514     I2C_LCD_ESCRIBE_VAR_INT@millar 0512  
                   __pidataCOMRAM 33D2     I2C_LCD_ESCRIBE_VAR_INT@numero 050D     I2C_LCD_ESCRIBE_VAR_INT@unidad 0515  
                ?_I2C_CURSOR_HOME 0501                       ??_I2C1_INIT 0501                    __end_of_strlen 3326  
             start_initialization 334A                     ?_I2C_LCD_INIT 0501      __end_of_I2C1_WRITESINGLEBYTE 334A  
             __end_of_DHT_GetTemp 307C             ?_I2C_ESCRIBE_MENSAJE2 0507      I2C_ENVIA_LCD_DATA@highnibble 0505  
                _I2C_CURSOR_ONOFF 3388                          ??_strlen 0503                  ??_I2C_POS_CURSOR 0508  
                  ??_I2C_LCD_INIT 0508                       ??_DHT_Check 0501                       __pbssCOMRAM 051A  
                     ??_DHT_Start 0501                     ??_WS2812_INIT 0501                   DHT_Start@modelo 0502  
         _I2C_LCD_ESCRIBE_VAR_INT 2984             WS2812_DATA_SEND@green 0503                         _main$1491 0518  
                ___lwdiv@dividend 0506    I2C_LCD_ESCRIBE_VAR_INT@centena 0513        __end_of_I2C_LCD_CHAR_GRADO 33D2  
                        _I2C1ADB1 028F                          ?___lwdiv 0506                          ?___lwmod 0501  
           DHT_GetHumid@valor_dht 050A                         _configuro 33A4                       __smallconst 2600  
                ___lwdiv@quotient 050A                          _T2CLKCON 0326                          _CLCnGLS0 00DC  
                        _CLCnGLS1 00DD                          _CLCnGLS2 00DE                          _CLCnGLS3 00DF  
                        _CLCnSEL0 00D8                          _CLCnSEL1 00D9                          _CLCnSEL2 00DA  
                        _DHT_Read 2E18                       _DHT_GetTemp 3018                          _LATBbits 04BF  
             __end_of_WS2812_INIT 31E6            ??_I2C_ESCRIBE_MENSAJE2 0508                     _I2C1STAT1bits 0299  
                        _SPI1CON0 0084                          _SPI1CON1 0085                          _SPI1CON2 0086  
            _I2C1_WRITESINGLEBYTE 3326            I2C_ENVIA_LCD_DATA@data 0504                        ?_configuro 0501  
     I2C_ENVIA_LCD_CMD@highnibble 0505         ??_I2C_LCD_ESCRIBE_VAR_INT 0511        __end_of_I2C_ENVIA_LCD_DATA 2FB0  
           I2C_POS_CURSOR@columna 0507                          __Hrparam 0000              __end_of_I2C_LCD_INIT 2984  
                        __Lrparam 0000             ?_I2C1_WRITESINGLEBYTE 0501                        _ANSELBbits 0408  
                      _ANSELCbits 0410                      _I2C1CON0bits 0294                      _I2C1CON1bits 0295  
                    _I2C1CON2bits 0296                   ___lwdiv@divisor 0508          I2C1_WRITESINGLEBYTE@dato 0501  
                 ___lwdiv@counter 050C                          __ptext10 3238                          __ptext11 2984  
                        __ptext20 307C                          __ptext12 3282                          __ptext21 3138  
                        __ptext13 31E6                          __ptext22 2E18                          __ptext14 33CA  
                        __ptext23 2EB2                          __ptext15 32C4                          __ptext16 32FA  
                        __ptext17 2F44                          __ptext18 3326                          __ptext19 3018  
                      _RC3I2Cbits 0287          __end_of_I2C_CURSOR_ONOFF 33A4                        _RC4I2Cbits 0286  
                     _WS2812_INIT 3190                   DHT_Check@modelo 0501                   DHT_Check@temp_x 0502  
                        isa$xinst 0000                        _ODCONCbits 0412                       ??_configuro 0501  
            DHT_GetTemp@valor_dht 050A                  ___lwmod@dividend 0501   I2C_LCD_ESCRIBE_VAR_INT@d_millar 0511  
          ??_I2C1_WRITESINGLEBYTE 0502                   ___lwmod@divisor 0503                   ___lwmod@counter 0505  
                   ?_DHT_GetHumid 0505                _I2C_LCD_CHAR_GRADO 33CA               ?_I2C_LCD_CHAR_GRADO 0501  
                    ?_DHT_GetTemp 0505                  _WS2812_DATA_SEND 336A  
