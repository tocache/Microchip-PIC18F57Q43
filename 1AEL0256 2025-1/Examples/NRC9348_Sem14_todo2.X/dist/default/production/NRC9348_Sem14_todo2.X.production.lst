

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jun 30 16:52:55 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42   000000                     
    43                           ; Generated 04/02/2025 GMT
    44                           ; 
    45                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F57Q43 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77   0004E0                     bsr             equ	1248
    78   0004E9                     fsr0            equ	1257
    79   0004EA                     fsr0h           equ	1258
    80   0004E9                     fsr0l           equ	1257
    81   0004E1                     fsr1            equ	1249
    82   0004E2                     fsr1h           equ	1250
    83   0004E1                     fsr1l           equ	1249
    84   0004D9                     fsr2            equ	1241
    85   0004DA                     fsr2h           equ	1242
    86   0004D9                     fsr2l           equ	1241
    87   0004EF                     indf0           equ	1263
    88   0004E7                     indf1           equ	1255
    89   0004DF                     indf2           equ	1247
    90   0004D6                     intcon          equ	1238
    91   000041                     nvmcon          equ	65
    92   0004F9                     pcl             equ	1273
    93   0004FA                     pclath          equ	1274
    94   0004FB                     pclatu          equ	1275
    95   0004EB                     plusw0          equ	1259
    96   0004E3                     plusw1          equ	1251
    97   0004DB                     plusw2          equ	1243
    98   0004ED                     postdec0        equ	1261
    99   0004E5                     postdec1        equ	1253
   100   0004DD                     postdec2        equ	1245
   101   0004EE                     postinc0        equ	1262
   102   0004E6                     postinc1        equ	1254
   103   0004DE                     postinc2        equ	1246
   104   0004EC                     preinc0         equ	1260
   105   0004E4                     preinc1         equ	1252
   106   0004DC                     preinc2         equ	1244
   107   0004F3                     prod            equ	1267
   108   0004F4                     prodh           equ	1268
   109   0004F3                     prodl           equ	1267
   110   0004D8                     status          equ	1240
   111   0004F5                     tablat          equ	1269
   112   0004F6                     tblptr          equ	1270
   113   0004F7                     tblptrh         equ	1271
   114   0004F6                     tblptrl         equ	1270
   115   0004F8                     tblptru         equ	1272
   116   0004FD                     tosl            equ	1277
   117   0004E8                     wreg            equ	1256
   118   000039                     CLKRCON         equ	57	;# 
   119   00003A                     CLKRCLK         equ	58	;# 
   120   000040                     NVMCON0         equ	64	;# 
   121   000041                     NVMCON1         equ	65	;# 
   122   000042                     NVMLOCK         equ	66	;# 
   123   000043                     NVMADR          equ	67	;# 
   124   000043                     NVMADRL         equ	67	;# 
   125   000044                     NVMADRH         equ	68	;# 
   126   000045                     NVMADRU         equ	69	;# 
   127   000046                     NVMDAT          equ	70	;# 
   128   000046                     NVMDATL         equ	70	;# 
   129   000047                     NVMDATH         equ	71	;# 
   130   000048                     VREGCON         equ	72	;# 
   131   000049                     BORCON          equ	73	;# 
   132   00004A                     HLVDCON0        equ	74	;# 
   133   00004B                     HLVDCON1        equ	75	;# 
   134   00004C                     ZCDCON          equ	76	;# 
   135   000060                     PMD0            equ	96	;# 
   136   000061                     PMD1            equ	97	;# 
   137   000063                     PMD3            equ	99	;# 
   138   000064                     PMD4            equ	100	;# 
   139   000065                     PMD5            equ	101	;# 
   140   000066                     PMD6            equ	102	;# 
   141   000067                     PMD7            equ	103	;# 
   142   000068                     PMD8            equ	104	;# 
   143   00006A                     MD1CON0         equ	106	;# 
   144   00006B                     MD1CON1         equ	107	;# 
   145   00006C                     MD1SRC          equ	108	;# 
   146   00006D                     MD1CARL         equ	109	;# 
   147   00006E                     MD1CARH         equ	110	;# 
   148   00006F                     CMOUT           equ	111	;# 
   149   000070                     CM1CON0         equ	112	;# 
   150   000071                     CM1CON1         equ	113	;# 
   151   000072                     CM1NCH          equ	114	;# 
   152   000073                     CM1PCH          equ	115	;# 
   153   000074                     CM2CON0         equ	116	;# 
   154   000075                     CM2CON1         equ	117	;# 
   155   000076                     CM2NCH          equ	118	;# 
   156   000077                     CM2PCH          equ	119	;# 
   157   000078                     WDTCON0         equ	120	;# 
   158   000079                     WDTCON1         equ	121	;# 
   159   00007A                     WDTPS           equ	122	;# 
   160   00007A                     WDTPSL          equ	122	;# 
   161   00007B                     WDTPSH          equ	123	;# 
   162   00007C                     WDTTMR          equ	124	;# 
   163   00007D                     DAC1DAT         equ	125	;# 
   164   00007D                     DAC1DATL        equ	125	;# 
   165   00007F                     DAC1CON         equ	127	;# 
   166   000080                     SPI1RXB         equ	128	;# 
   167   000081                     SPI1TXB         equ	129	;# 
   168   000082                     SPI1TCNT        equ	130	;# 
   169   000082                     SPI1TCNTL       equ	130	;# 
   170   000083                     SPI1TCNTH       equ	131	;# 
   171   000084                     SPI1CON0        equ	132	;# 
   172   000085                     SPI1CON1        equ	133	;# 
   173   000086                     SPI1CON2        equ	134	;# 
   174   000087                     SPI1STATUS      equ	135	;# 
   175   000088                     SPI1TWIDTH      equ	136	;# 
   176   000089                     SPI1BAUD        equ	137	;# 
   177   00008A                     SPI1INTF        equ	138	;# 
   178   00008B                     SPI1INTE        equ	139	;# 
   179   00008C                     SPI1CLK         equ	140	;# 
   180   00008D                     SPI2RXB         equ	141	;# 
   181   00008E                     SPI2TXB         equ	142	;# 
   182   00008F                     SPI2TCNT        equ	143	;# 
   183   00008F                     SPI2TCNTL       equ	143	;# 
   184   000090                     SPI2TCNTH       equ	144	;# 
   185   000091                     SPI2CON0        equ	145	;# 
   186   000092                     SPI2CON1        equ	146	;# 
   187   000093                     SPI2CON2        equ	147	;# 
   188   000094                     SPI2STATUS      equ	148	;# 
   189   000095                     SPI2TWIDTH      equ	149	;# 
   190   000096                     SPI2BAUD        equ	150	;# 
   191   000097                     SPI2INTF        equ	151	;# 
   192   000098                     SPI2INTE        equ	152	;# 
   193   000099                     SPI2CLK         equ	153	;# 
   194   0000AC                     ACTCON          equ	172	;# 
   195   0000AD                     OSCCON1         equ	173	;# 
   196   0000AE                     OSCCON2         equ	174	;# 
   197   0000AF                     OSCCON3         equ	175	;# 
   198   0000B0                     OSCTUNE         equ	176	;# 
   199   0000B1                     OSCFRQ          equ	177	;# 
   200   0000B1                     OSCFREQ         equ	177	;# 
   201   0000B2                     OSCSTAT         equ	178	;# 
   202   0000B2                     OSCSTAT1        equ	178	;# 
   203   0000B3                     OSCEN           equ	179	;# 
   204   0000B4                     PRLOCK          equ	180	;# 
   205   0000B5                     SCANPR          equ	181	;# 
   206   0000B6                     DMA1PR          equ	182	;# 
   207   0000B7                     DMA2PR          equ	183	;# 
   208   0000B8                     DMA3PR          equ	184	;# 
   209   0000B9                     DMA4PR          equ	185	;# 
   210   0000BA                     DMA5PR          equ	186	;# 
   211   0000BB                     DMA6PR          equ	187	;# 
   212   0000BE                     MAINPR          equ	190	;# 
   213   0000BF                     ISRPR           equ	191	;# 
   214   0000D4                     CLCDATA         equ	212	;# 
   215   0000D5                     CLCSELECT       equ	213	;# 
   216   0000D6                     CLCnCON         equ	214	;# 
   217   0000D7                     CLCnPOL         equ	215	;# 
   218   0000D8                     CLCnSEL0        equ	216	;# 
   219   0000D9                     CLCnSEL1        equ	217	;# 
   220   0000DA                     CLCnSEL2        equ	218	;# 
   221   0000DB                     CLCnSEL3        equ	219	;# 
   222   0000DC                     CLCnGLS0        equ	220	;# 
   223   0000DD                     CLCnGLS1        equ	221	;# 
   224   0000DE                     CLCnGLS2        equ	222	;# 
   225   0000DF                     CLCnGLS3        equ	223	;# 
   226   0000E8                     DMASELECT       equ	232	;# 
   227   0000E9                     DMAnBUF         equ	233	;# 
   228   0000EA                     DMAnDCNT        equ	234	;# 
   229   0000EA                     DMAnDCNTL       equ	234	;# 
   230   0000EB                     DMAnDCNTH       equ	235	;# 
   231   0000EC                     DMAnDPTR        equ	236	;# 
   232   0000EC                     DMAnDPTRL       equ	236	;# 
   233   0000ED                     DMAnDPTRH       equ	237	;# 
   234   0000EE                     DMAnDSZ         equ	238	;# 
   235   0000EE                     DMAnDSZL        equ	238	;# 
   236   0000EF                     DMAnDSZH        equ	239	;# 
   237   0000F0                     DMAnDSA         equ	240	;# 
   238   0000F0                     DMAnDSAL        equ	240	;# 
   239   0000F1                     DMAnDSAH        equ	241	;# 
   240   0000F2                     DMAnSCNT        equ	242	;# 
   241   0000F2                     DMAnSCNTL       equ	242	;# 
   242   0000F3                     DMAnSCNTH       equ	243	;# 
   243   0000F4                     DMAnSPTR        equ	244	;# 
   244   0000F4                     DMAnSPTRL       equ	244	;# 
   245   0000F5                     DMAnSPTRH       equ	245	;# 
   246   0000F6                     DMAnSPTRU       equ	246	;# 
   247   0000F7                     DMAnSSZ         equ	247	;# 
   248   0000F7                     DMAnSSZL        equ	247	;# 
   249   0000F8                     DMAnSSZH        equ	248	;# 
   250   0000F9                     DMAnSSA         equ	249	;# 
   251   0000F9                     DMAnSSAL        equ	249	;# 
   252   0000FA                     DMAnSSAH        equ	250	;# 
   253   0000FB                     DMAnSSAU        equ	251	;# 
   254   0000FC                     DMAnCON0        equ	252	;# 
   255   0000FD                     DMAnCON1        equ	253	;# 
   256   0000FE                     DMAnAIRQ        equ	254	;# 
   257   0000FF                     DMAnSIRQ        equ	255	;# 
   258   000200                     PPSLOCK         equ	512	;# 
   259   000201                     RA0PPS          equ	513	;# 
   260   000202                     RA1PPS          equ	514	;# 
   261   000203                     RA2PPS          equ	515	;# 
   262   000204                     RA3PPS          equ	516	;# 
   263   000205                     RA4PPS          equ	517	;# 
   264   000206                     RA5PPS          equ	518	;# 
   265   000207                     RA6PPS          equ	519	;# 
   266   000208                     RA7PPS          equ	520	;# 
   267   000209                     RB0PPS          equ	521	;# 
   268   00020A                     RB1PPS          equ	522	;# 
   269   00020B                     RB2PPS          equ	523	;# 
   270   00020C                     RB3PPS          equ	524	;# 
   271   00020D                     RB4PPS          equ	525	;# 
   272   00020E                     RB5PPS          equ	526	;# 
   273   00020F                     RB6PPS          equ	527	;# 
   274   000210                     RB7PPS          equ	528	;# 
   275   000211                     RC0PPS          equ	529	;# 
   276   000212                     RC1PPS          equ	530	;# 
   277   000213                     RC2PPS          equ	531	;# 
   278   000214                     RC3PPS          equ	532	;# 
   279   000215                     RC4PPS          equ	533	;# 
   280   000216                     RC5PPS          equ	534	;# 
   281   000217                     RC6PPS          equ	535	;# 
   282   000218                     RC7PPS          equ	536	;# 
   283   000219                     RD0PPS          equ	537	;# 
   284   00021A                     RD1PPS          equ	538	;# 
   285   00021B                     RD2PPS          equ	539	;# 
   286   00021C                     RD3PPS          equ	540	;# 
   287   00021D                     RD4PPS          equ	541	;# 
   288   00021E                     RD5PPS          equ	542	;# 
   289   00021F                     RD6PPS          equ	543	;# 
   290   000220                     RD7PPS          equ	544	;# 
   291   000221                     RE0PPS          equ	545	;# 
   292   000222                     RE1PPS          equ	546	;# 
   293   000223                     RE2PPS          equ	547	;# 
   294   000229                     RF0PPS          equ	553	;# 
   295   00022A                     RF1PPS          equ	554	;# 
   296   00022B                     RF2PPS          equ	555	;# 
   297   00022C                     RF3PPS          equ	556	;# 
   298   00022D                     RF4PPS          equ	557	;# 
   299   00022E                     RF5PPS          equ	558	;# 
   300   00022F                     RF6PPS          equ	559	;# 
   301   000230                     RF7PPS          equ	560	;# 
   302   00023E                     INT0PPS         equ	574	;# 
   303   00023F                     INT1PPS         equ	575	;# 
   304   000240                     INT2PPS         equ	576	;# 
   305   000241                     T0CKIPPS        equ	577	;# 
   306   000242                     T1CKIPPS        equ	578	;# 
   307   000243                     T1GPPS          equ	579	;# 
   308   000244                     T3CKIPPS        equ	580	;# 
   309   000245                     T3GPPS          equ	581	;# 
   310   000246                     T5CKIPPS        equ	582	;# 
   311   000247                     T5GPPS          equ	583	;# 
   312   000248                     T2INPPS         equ	584	;# 
   313   000249                     T4INPPS         equ	585	;# 
   314   00024A                     T6INPPS         equ	586	;# 
   315   00024F                     CCP1PPS         equ	591	;# 
   316   000250                     CCP2PPS         equ	592	;# 
   317   000251                     CCP3PPS         equ	593	;# 
   318   000253                     PWM1ERSPPS      equ	595	;# 
   319   000254                     PWM2ERSPPS      equ	596	;# 
   320   000255                     PWM3ERSPPS      equ	597	;# 
   321   000257                     PWMIN0PPS       equ	599	;# 
   322   000258                     PWMIN1PPS       equ	600	;# 
   323   000259                     SMT1WINPPS      equ	601	;# 
   324   00025A                     SMT1SIGPPS      equ	602	;# 
   325   00025B                     CWG1PPS         equ	603	;# 
   326   00025B                     CWG1INPPS       equ	603	;# 
   327   00025C                     CWG2PPS         equ	604	;# 
   328   00025C                     CWG2INPPS       equ	604	;# 
   329   00025D                     CWG3PPS         equ	605	;# 
   330   00025D                     CWG3INPPS       equ	605	;# 
   331   00025E                     MD1CARLPPS      equ	606	;# 
   332   00025E                     MDCARLPPS       equ	606	;# 
   333   00025F                     MD1CARHPPS      equ	607	;# 
   334   00025F                     MDCARHPPS       equ	607	;# 
   335   000260                     MD1SRCPPS       equ	608	;# 
   336   000260                     MDSRCPPS        equ	608	;# 
   337   000261                     CLCIN0PPS       equ	609	;# 
   338   000262                     CLCIN1PPS       equ	610	;# 
   339   000263                     CLCIN2PPS       equ	611	;# 
   340   000264                     CLCIN3PPS       equ	612	;# 
   341   000265                     CLCIN4PPS       equ	613	;# 
   342   000266                     CLCIN5PPS       equ	614	;# 
   343   000267                     CLCIN6PPS       equ	615	;# 
   344   000268                     CLCIN7PPS       equ	616	;# 
   345   000269                     ADACTPPS        equ	617	;# 
   346   00026A                     SPI1SCKPPS      equ	618	;# 
   347   00026B                     SPI1SDIPPS      equ	619	;# 
   348   00026C                     SPI1SSPPS       equ	620	;# 
   349   00026D                     SPI2SCKPPS      equ	621	;# 
   350   00026E                     SPI2SDIPPS      equ	622	;# 
   351   00026F                     SPI2SSPPS       equ	623	;# 
   352   000270                     I2C1SDAPPS      equ	624	;# 
   353   000271                     I2C1SCLPPS      equ	625	;# 
   354   000272                     U1RXPPS         equ	626	;# 
   355   000273                     U1CTSPPS        equ	627	;# 
   356   000274                     U2RXPPS         equ	628	;# 
   357   000275                     U2CTSPPS        equ	629	;# 
   358   000276                     U3RXPPS         equ	630	;# 
   359   000277                     U3CTSPPS        equ	631	;# 
   360   000278                     U4RXPPS         equ	632	;# 
   361   000279                     U4CTSPPS        equ	633	;# 
   362   00027A                     U5RXPPS         equ	634	;# 
   363   00027B                     U5CTSPPS        equ	635	;# 
   364   000286                     RC4I2C          equ	646	;# 
   365   000287                     RC3I2C          equ	647	;# 
   366   000288                     RB2I2C          equ	648	;# 
   367   000289                     RB1I2C          equ	649	;# 
   368   00028B                     I2C1RXB         equ	651	;# 
   369   00028C                     I2C1TXB         equ	652	;# 
   370   00028D                     I2C1CNT         equ	653	;# 
   371   00028E                     I2C1ADB0        equ	654	;# 
   372   00028F                     I2C1ADB1        equ	655	;# 
   373   000290                     I2C1ADR0        equ	656	;# 
   374   000291                     I2C1ADR1        equ	657	;# 
   375   000292                     I2C1ADR2        equ	658	;# 
   376   000293                     I2C1ADR3        equ	659	;# 
   377   000294                     I2C1CON0        equ	660	;# 
   378   000295                     I2C1CON1        equ	661	;# 
   379   000296                     I2C1CON2        equ	662	;# 
   380   000297                     I2C1ERR         equ	663	;# 
   381   000298                     I2C1STAT0       equ	664	;# 
   382   000299                     I2C1STAT1       equ	665	;# 
   383   00029A                     I2C1PIR         equ	666	;# 
   384   00029B                     I2C1PIE         equ	667	;# 
   385   00029C                     I2C1CLK         equ	668	;# 
   386   00029D                     I2C1BTO         equ	669	;# 
   387   0002A1                     U1RXB           equ	673	;# 
   388   0002A1                     U1RXBL          equ	673	;# 
   389   0002A2                     U1RXCHK         equ	674	;# 
   390   0002A3                     U1TXB           equ	675	;# 
   391   0002A3                     U1TXBL          equ	675	;# 
   392   0002A4                     U1TXCHK         equ	676	;# 
   393   0002A5                     U1P1            equ	677	;# 
   394   0002A5                     U1P1L           equ	677	;# 
   395   0002A6                     U1P1H           equ	678	;# 
   396   0002A7                     U1P2            equ	679	;# 
   397   0002A7                     U1P2L           equ	679	;# 
   398   0002A8                     U1P2H           equ	680	;# 
   399   0002A9                     U1P3            equ	681	;# 
   400   0002A9                     U1P3L           equ	681	;# 
   401   0002AA                     U1P3H           equ	682	;# 
   402   0002AB                     U1CON0          equ	683	;# 
   403   0002AC                     U1CON1          equ	684	;# 
   404   0002AD                     U1CON2          equ	685	;# 
   405   0002AE                     U1BRG           equ	686	;# 
   406   0002AE                     U1BRGL          equ	686	;# 
   407   0002AF                     U1BRGH          equ	687	;# 
   408   0002B0                     U1FIFO          equ	688	;# 
   409   0002B1                     U1UIR           equ	689	;# 
   410   0002B2                     U1ERRIR         equ	690	;# 
   411   0002B3                     U1ERRIE         equ	691	;# 
   412   0002B4                     U2RXB           equ	692	;# 
   413   0002B4                     U2RXBL          equ	692	;# 
   414   0002B6                     U2TXB           equ	694	;# 
   415   0002B6                     U2TXBL          equ	694	;# 
   416   0002B8                     U2P1            equ	696	;# 
   417   0002B8                     U2P1L           equ	696	;# 
   418   0002BA                     U2P2            equ	698	;# 
   419   0002BA                     U2P2L           equ	698	;# 
   420   0002BC                     U2P3            equ	700	;# 
   421   0002BC                     U2P3L           equ	700	;# 
   422   0002BE                     U2CON0          equ	702	;# 
   423   0002BF                     U2CON1          equ	703	;# 
   424   0002C0                     U2CON2          equ	704	;# 
   425   0002C1                     U2BRG           equ	705	;# 
   426   0002C1                     U2BRGL          equ	705	;# 
   427   0002C2                     U2BRGH          equ	706	;# 
   428   0002C3                     U2FIFO          equ	707	;# 
   429   0002C4                     U2UIR           equ	708	;# 
   430   0002C5                     U2ERRIR         equ	709	;# 
   431   0002C6                     U2ERRIE         equ	710	;# 
   432   0002C7                     U3RXB           equ	711	;# 
   433   0002C7                     U3RXBL          equ	711	;# 
   434   0002C9                     U3TXB           equ	713	;# 
   435   0002C9                     U3TXBL          equ	713	;# 
   436   0002CB                     U3P1            equ	715	;# 
   437   0002CB                     U3P1L           equ	715	;# 
   438   0002CD                     U3P2            equ	717	;# 
   439   0002CD                     U3P2L           equ	717	;# 
   440   0002CF                     U3P3            equ	719	;# 
   441   0002CF                     U3P3L           equ	719	;# 
   442   0002D1                     U3CON0          equ	721	;# 
   443   0002D2                     U3CON1          equ	722	;# 
   444   0002D3                     U3CON2          equ	723	;# 
   445   0002D4                     U3BRG           equ	724	;# 
   446   0002D4                     U3BRGL          equ	724	;# 
   447   0002D5                     U3BRGH          equ	725	;# 
   448   0002D6                     U3FIFO          equ	726	;# 
   449   0002D7                     U3UIR           equ	727	;# 
   450   0002D8                     U3ERRIR         equ	728	;# 
   451   0002D9                     U3ERRIE         equ	729	;# 
   452   0002DA                     U4RXB           equ	730	;# 
   453   0002DA                     U4RXBL          equ	730	;# 
   454   0002DC                     U4TXB           equ	732	;# 
   455   0002DC                     U4TXBL          equ	732	;# 
   456   0002DE                     U4P1            equ	734	;# 
   457   0002DE                     U4P1L           equ	734	;# 
   458   0002E0                     U4P2            equ	736	;# 
   459   0002E0                     U4P2L           equ	736	;# 
   460   0002E2                     U4P3            equ	738	;# 
   461   0002E2                     U4P3L           equ	738	;# 
   462   0002E4                     U4CON0          equ	740	;# 
   463   0002E5                     U4CON1          equ	741	;# 
   464   0002E6                     U4CON2          equ	742	;# 
   465   0002E7                     U4BRG           equ	743	;# 
   466   0002E7                     U4BRGL          equ	743	;# 
   467   0002E8                     U4BRGH          equ	744	;# 
   468   0002E9                     U4FIFO          equ	745	;# 
   469   0002EA                     U4UIR           equ	746	;# 
   470   0002EB                     U4ERRIR         equ	747	;# 
   471   0002EC                     U4ERRIE         equ	748	;# 
   472   0002ED                     U5RXB           equ	749	;# 
   473   0002ED                     U5RXBL          equ	749	;# 
   474   0002EF                     U5TXB           equ	751	;# 
   475   0002EF                     U5TXBL          equ	751	;# 
   476   0002F1                     U5P1            equ	753	;# 
   477   0002F1                     U5P1L           equ	753	;# 
   478   0002F3                     U5P2            equ	755	;# 
   479   0002F3                     U5P2L           equ	755	;# 
   480   0002F5                     U5P3            equ	757	;# 
   481   0002F5                     U5P3L           equ	757	;# 
   482   0002F7                     U5CON0          equ	759	;# 
   483   0002F8                     U5CON1          equ	760	;# 
   484   0002F9                     U5CON2          equ	761	;# 
   485   0002FA                     U5BRG           equ	762	;# 
   486   0002FA                     U5BRGL          equ	762	;# 
   487   0002FB                     U5BRGH          equ	763	;# 
   488   0002FC                     U5FIFO          equ	764	;# 
   489   0002FD                     U5UIR           equ	765	;# 
   490   0002FE                     U5ERRIR         equ	766	;# 
   491   0002FF                     U5ERRIE         equ	767	;# 
   492   000300                     SMT1TMR         equ	768	;# 
   493   000300                     SMT1TMRL        equ	768	;# 
   494   000301                     SMT1TMRH        equ	769	;# 
   495   000302                     SMT1TMRU        equ	770	;# 
   496   000303                     SMT1CPR         equ	771	;# 
   497   000303                     SMT1CPRL        equ	771	;# 
   498   000304                     SMT1CPRH        equ	772	;# 
   499   000305                     SMT1CPRU        equ	773	;# 
   500   000306                     SMT1CPW         equ	774	;# 
   501   000306                     SMT1CPWL        equ	774	;# 
   502   000307                     SMT1CPWH        equ	775	;# 
   503   000308                     SMT1CPWU        equ	776	;# 
   504   000309                     SMT1PR          equ	777	;# 
   505   000309                     SMT1PRL         equ	777	;# 
   506   00030A                     SMT1PRH         equ	778	;# 
   507   00030B                     SMT1PRU         equ	779	;# 
   508   00030C                     SMT1CON0        equ	780	;# 
   509   00030D                     SMT1CON1        equ	781	;# 
   510   00030E                     SMT1STAT        equ	782	;# 
   511   00030F                     SMT1CLK         equ	783	;# 
   512   000310                     SMT1SIG         equ	784	;# 
   513   000311                     SMT1WIN         equ	785	;# 
   514   000318                     TMR0L           equ	792	;# 
   515   000318                     TMR0            equ	792	;# 
   516   000319                     TMR0H           equ	793	;# 
   517   000319                     PR0             equ	793	;# 
   518   00031A                     T0CON0          equ	794	;# 
   519   00031B                     T0CON1          equ	795	;# 
   520   00031C                     TMR1            equ	796	;# 
   521   00031C                     TMR1L           equ	796	;# 
   522   00031D                     TMR1H           equ	797	;# 
   523   00031E                     T1CON           equ	798	;# 
   524   00031E                     TMR1CON         equ	798	;# 
   525   00031F                     T1GCON          equ	799	;# 
   526   00031F                     TMR1GCON        equ	799	;# 
   527   000320                     T1GATE          equ	800	;# 
   528   000320                     TMR1GATE        equ	800	;# 
   529   000321                     T1CLK           equ	801	;# 
   530   000321                     TMR1CLK         equ	801	;# 
   531   000321                     PR1             equ	801	;# 
   532   000322                     T2TMR           equ	802	;# 
   533   000322                     TMR2            equ	802	;# 
   534   000323                     T2PR            equ	803	;# 
   535   000323                     PR2             equ	803	;# 
   536   000324                     T2CON           equ	804	;# 
   537   000325                     T2HLT           equ	805	;# 
   538   000326                     T2CLKCON        equ	806	;# 
   539   000326                     T2CLK           equ	806	;# 
   540   000327                     T2RST           equ	807	;# 
   541   000328                     TMR3            equ	808	;# 
   542   000328                     TMR3L           equ	808	;# 
   543   000329                     TMR3H           equ	809	;# 
   544   00032A                     T3CON           equ	810	;# 
   545   00032A                     TMR3CON         equ	810	;# 
   546   00032B                     T3GCON          equ	811	;# 
   547   00032B                     TMR3GCON        equ	811	;# 
   548   00032C                     T3GATE          equ	812	;# 
   549   00032C                     TMR3GATE        equ	812	;# 
   550   00032D                     T3CLK           equ	813	;# 
   551   00032D                     TMR3CLK         equ	813	;# 
   552   00032D                     PR3             equ	813	;# 
   553   00032E                     T4TMR           equ	814	;# 
   554   00032E                     TMR4            equ	814	;# 
   555   00032F                     T4PR            equ	815	;# 
   556   00032F                     PR4             equ	815	;# 
   557   000330                     T4CON           equ	816	;# 
   558   000331                     T4HLT           equ	817	;# 
   559   000332                     T4CLKCON        equ	818	;# 
   560   000332                     T4CLK           equ	818	;# 
   561   000333                     T4RST           equ	819	;# 
   562   000334                     TMR5            equ	820	;# 
   563   000334                     TMR5L           equ	820	;# 
   564   000335                     TMR5H           equ	821	;# 
   565   000336                     T5CON           equ	822	;# 
   566   000336                     TMR5CON         equ	822	;# 
   567   000337                     T5GCON          equ	823	;# 
   568   000337                     TMR5GCON        equ	823	;# 
   569   000338                     T5GATE          equ	824	;# 
   570   000338                     TMR5GATE        equ	824	;# 
   571   000339                     T5CLK           equ	825	;# 
   572   000339                     TMR5CLK         equ	825	;# 
   573   000339                     PR5             equ	825	;# 
   574   00033A                     T6TMR           equ	826	;# 
   575   00033A                     TMR6            equ	826	;# 
   576   00033B                     T6PR            equ	827	;# 
   577   00033B                     PR6             equ	827	;# 
   578   00033C                     T6CON           equ	828	;# 
   579   00033D                     T6HLT           equ	829	;# 
   580   00033E                     T6CLKCON        equ	830	;# 
   581   00033E                     T6CLK           equ	830	;# 
   582   00033F                     T6RST           equ	831	;# 
   583   000340                     CCPR1           equ	832	;# 
   584   000340                     CCPR1L          equ	832	;# 
   585   000341                     CCPR1H          equ	833	;# 
   586   000342                     CCP1CON         equ	834	;# 
   587   000343                     CCP1CAP         equ	835	;# 
   588   000344                     CCPR2           equ	836	;# 
   589   000344                     CCPR2L          equ	836	;# 
   590   000345                     CCPR2H          equ	837	;# 
   591   000346                     CCP2CON         equ	838	;# 
   592   000347                     CCP2CAP         equ	839	;# 
   593   000348                     CCPR3           equ	840	;# 
   594   000348                     CCPR3L          equ	840	;# 
   595   000349                     CCPR3H          equ	841	;# 
   596   00034A                     CCP3CON         equ	842	;# 
   597   00034B                     CCP3CAP         equ	843	;# 
   598   00034C                     CCPTMRS0        equ	844	;# 
   599   00034F                     CRCDATA         equ	847	;# 
   600   00034F                     CRCDATL         equ	847	;# 
   601   000350                     CRCDATH         equ	848	;# 
   602   000351                     CRCACC          equ	849	;# 
   603   000351                     CRCACCL         equ	849	;# 
   604   000352                     CRCACCH         equ	850	;# 
   605   000353                     CRCSHFT         equ	851	;# 
   606   000353                     CRCSHIFTL       equ	851	;# 
   607   000354                     CRCSHIFTH       equ	852	;# 
   608   000355                     CRCXOR          equ	853	;# 
   609   000355                     CRCXORL         equ	853	;# 
   610   000356                     CRCXORH         equ	854	;# 
   611   000357                     CRCCON0         equ	855	;# 
   612   000358                     CRCCON1         equ	856	;# 
   613   00035A                     SCANLADR        equ	858	;# 
   614   00035A                     SCANLADRL       equ	858	;# 
   615   00035B                     SCANLADRH       equ	859	;# 
   616   00035C                     SCANLADRU       equ	860	;# 
   617   00035D                     SCANHADR        equ	861	;# 
   618   00035D                     SCANHADRL       equ	861	;# 
   619   00035E                     SCANHADRH       equ	862	;# 
   620   00035F                     SCANHADRU       equ	863	;# 
   621   000360                     SCANCON0        equ	864	;# 
   622   000361                     SCANTRIG        equ	865	;# 
   623   000362                     IPR0            equ	866	;# 
   624   000363                     IPR1            equ	867	;# 
   625   000364                     IPR2            equ	868	;# 
   626   000365                     IPR3            equ	869	;# 
   627   000366                     IPR4            equ	870	;# 
   628   000367                     IPR5            equ	871	;# 
   629   000368                     IPR6            equ	872	;# 
   630   000369                     IPR7            equ	873	;# 
   631   00036A                     IPR8            equ	874	;# 
   632   00036B                     IPR9            equ	875	;# 
   633   00036C                     IPR10           equ	876	;# 
   634   00036D                     IPR11           equ	877	;# 
   635   00036E                     IPR12           equ	878	;# 
   636   00036F                     IPR13           equ	879	;# 
   637   000370                     IPR14           equ	880	;# 
   638   000371                     IPR15           equ	881	;# 
   639   000373                     STATUS_CSHAD    equ	883	;# 
   640   000374                     WREG_CSHAD      equ	884	;# 
   641   000375                     BSR_CSHAD       equ	885	;# 
   642   000376                     SHADCON         equ	886	;# 
   643   000377                     STATUS_SHAD     equ	887	;# 
   644   000378                     WREG_SHAD       equ	888	;# 
   645   000379                     BSR_SHAD        equ	889	;# 
   646   00037A                     PCLATH_SHAD     equ	890	;# 
   647   00037B                     PCLATU_SHAD     equ	891	;# 
   648   00037C                     FSR0SH          equ	892	;# 
   649   00037C                     FSR0L_SHAD      equ	892	;# 
   650   00037D                     FSR0H_SHAD      equ	893	;# 
   651   00037E                     FSR1SH          equ	894	;# 
   652   00037E                     FSR1L_SHAD      equ	894	;# 
   653   00037F                     FSR1H_SHAD      equ	895	;# 
   654   000380                     FSR2SH          equ	896	;# 
   655   000380                     FSR2L_SHAD      equ	896	;# 
   656   000381                     FSR2H_SHAD      equ	897	;# 
   657   000382                     PRODSH          equ	898	;# 
   658   000382                     PRODL_SHAD      equ	898	;# 
   659   000383                     PRODH_SHAD      equ	899	;# 
   660   0003BC                     CWG1CLK         equ	956	;# 
   661   0003BC                     CWG1CLKCON      equ	956	;# 
   662   0003BD                     CWG1ISM         equ	957	;# 
   663   0003BD                     CWG1DAT         equ	957	;# 
   664   0003BE                     CWG1DBR         equ	958	;# 
   665   0003BF                     CWG1DBF         equ	959	;# 
   666   0003C0                     CWG1CON0        equ	960	;# 
   667   0003C1                     CWG1CON1        equ	961	;# 
   668   0003C2                     CWG1AS0         equ	962	;# 
   669   0003C3                     CWG1AS1         equ	963	;# 
   670   0003C4                     CWG1STR         equ	964	;# 
   671   0003C5                     CWG2CLK         equ	965	;# 
   672   0003C5                     CWG2CLKCON      equ	965	;# 
   673   0003C6                     CWG2ISM         equ	966	;# 
   674   0003C6                     CWG2DAT         equ	966	;# 
   675   0003C7                     CWG2DBR         equ	967	;# 
   676   0003C8                     CWG2DBF         equ	968	;# 
   677   0003C9                     CWG2CON0        equ	969	;# 
   678   0003CA                     CWG2CON1        equ	970	;# 
   679   0003CB                     CWG2AS0         equ	971	;# 
   680   0003CC                     CWG2AS1         equ	972	;# 
   681   0003CD                     CWG2STR         equ	973	;# 
   682   0003CE                     CWG3CLK         equ	974	;# 
   683   0003CE                     CWG3CLKCON      equ	974	;# 
   684   0003CF                     CWG3ISM         equ	975	;# 
   685   0003CF                     CWG3DAT         equ	975	;# 
   686   0003D0                     CWG3DBR         equ	976	;# 
   687   0003D1                     CWG3DBF         equ	977	;# 
   688   0003D2                     CWG3CON0        equ	978	;# 
   689   0003D3                     CWG3CON1        equ	979	;# 
   690   0003D4                     CWG3AS0         equ	980	;# 
   691   0003D5                     CWG3AS1         equ	981	;# 
   692   0003D6                     CWG3STR         equ	982	;# 
   693   0003D7                     FVRCON          equ	983	;# 
   694   0003D8                     ADCPCON         equ	984	;# 
   695   0003D8                     ADCP            equ	984	;# 
   696   0003D9                     ADLTH           equ	985	;# 
   697   0003D9                     ADLTHL          equ	985	;# 
   698   0003DA                     ADLTHH          equ	986	;# 
   699   0003DB                     ADUTH           equ	987	;# 
   700   0003DB                     ADUTHL          equ	987	;# 
   701   0003DC                     ADUTHH          equ	988	;# 
   702   0003DD                     ADERR           equ	989	;# 
   703   0003DD                     ADERRL          equ	989	;# 
   704   0003DE                     ADERRH          equ	990	;# 
   705   0003DF                     ADSTPT          equ	991	;# 
   706   0003DF                     ADSTPTL         equ	991	;# 
   707   0003E0                     ADSTPTH         equ	992	;# 
   708   0003E1                     ADFLTR          equ	993	;# 
   709   0003E1                     ADFLTRL         equ	993	;# 
   710   0003E2                     ADFLTRH         equ	994	;# 
   711   0003E3                     ADACC           equ	995	;# 
   712   0003E3                     ADACCL          equ	995	;# 
   713   0003E4                     ADACCH          equ	996	;# 
   714   0003E5                     ADACCU          equ	997	;# 
   715   0003E6                     ADCNT           equ	998	;# 
   716   0003E7                     ADRPT           equ	999	;# 
   717   0003E8                     ADPREV          equ	1000	;# 
   718   0003E8                     ADPREVL         equ	1000	;# 
   719   0003E9                     ADPREVH         equ	1001	;# 
   720   0003EA                     ADRES           equ	1002	;# 
   721   0003EA                     ADRESL          equ	1002	;# 
   722   0003EB                     ADRESH          equ	1003	;# 
   723   0003EC                     ADPCH           equ	1004	;# 
   724   0003EE                     ADACQ           equ	1006	;# 
   725   0003EE                     ADACQL          equ	1006	;# 
   726   0003EF                     ADACQH          equ	1007	;# 
   727   0003F0                     ADCAP           equ	1008	;# 
   728   0003F1                     ADPRE           equ	1009	;# 
   729   0003F1                     ADPREL          equ	1009	;# 
   730   0003F2                     ADPREH          equ	1010	;# 
   731   0003F3                     ADCON0          equ	1011	;# 
   732   0003F4                     ADCON1          equ	1012	;# 
   733   0003F5                     ADCON2          equ	1013	;# 
   734   0003F6                     ADCON3          equ	1014	;# 
   735   0003F7                     ADSTAT          equ	1015	;# 
   736   0003F8                     ADREF           equ	1016	;# 
   737   0003F9                     ADACT           equ	1017	;# 
   738   0003FA                     ADCLK           equ	1018	;# 
   739   000400                     ANSELA          equ	1024	;# 
   740   000401                     WPUA            equ	1025	;# 
   741   000402                     ODCONA          equ	1026	;# 
   742   000403                     SLRCONA         equ	1027	;# 
   743   000404                     INLVLA          equ	1028	;# 
   744   000405                     IOCAP           equ	1029	;# 
   745   000406                     IOCAN           equ	1030	;# 
   746   000407                     IOCAF           equ	1031	;# 
   747   000408                     ANSELB          equ	1032	;# 
   748   000409                     WPUB            equ	1033	;# 
   749   00040A                     ODCONB          equ	1034	;# 
   750   00040B                     SLRCONB         equ	1035	;# 
   751   00040C                     INLVLB          equ	1036	;# 
   752   00040D                     IOCBP           equ	1037	;# 
   753   00040E                     IOCBN           equ	1038	;# 
   754   00040F                     IOCBF           equ	1039	;# 
   755   000410                     ANSELC          equ	1040	;# 
   756   000411                     WPUC            equ	1041	;# 
   757   000412                     ODCONC          equ	1042	;# 
   758   000413                     SLRCONC         equ	1043	;# 
   759   000414                     INLVLC          equ	1044	;# 
   760   000415                     IOCCP           equ	1045	;# 
   761   000416                     IOCCN           equ	1046	;# 
   762   000417                     IOCCF           equ	1047	;# 
   763   000418                     ANSELD          equ	1048	;# 
   764   000419                     WPUD            equ	1049	;# 
   765   00041A                     ODCOND          equ	1050	;# 
   766   00041B                     SLRCOND         equ	1051	;# 
   767   00041C                     INLVLD          equ	1052	;# 
   768   000420                     ANSELE          equ	1056	;# 
   769   000421                     WPUE            equ	1057	;# 
   770   000422                     ODCONE          equ	1058	;# 
   771   000423                     SLRCONE         equ	1059	;# 
   772   000424                     INLVLE          equ	1060	;# 
   773   000425                     IOCEP           equ	1061	;# 
   774   000426                     IOCEN           equ	1062	;# 
   775   000427                     IOCEF           equ	1063	;# 
   776   000428                     ANSELF          equ	1064	;# 
   777   000429                     WPUF            equ	1065	;# 
   778   00042A                     ODCONF          equ	1066	;# 
   779   00042B                     SLRCONF         equ	1067	;# 
   780   00042C                     INLVLF          equ	1068	;# 
   781   000440                     NCO1ACC         equ	1088	;# 
   782   000440                     NCO1ACCL        equ	1088	;# 
   783   000441                     NCO1ACCH        equ	1089	;# 
   784   000442                     NCO1ACCU        equ	1090	;# 
   785   000443                     NCO1INC         equ	1091	;# 
   786   000443                     NCO1INCL        equ	1091	;# 
   787   000444                     NCO1INCH        equ	1092	;# 
   788   000445                     NCO1INCU        equ	1093	;# 
   789   000446                     NCO1CON         equ	1094	;# 
   790   000447                     NCO1CLK         equ	1095	;# 
   791   000448                     NCO2ACC         equ	1096	;# 
   792   000448                     NCO2ACCL        equ	1096	;# 
   793   000449                     NCO2ACCH        equ	1097	;# 
   794   00044A                     NCO2ACCU        equ	1098	;# 
   795   00044B                     NCO2INC         equ	1099	;# 
   796   00044B                     NCO2INCL        equ	1099	;# 
   797   00044C                     NCO2INCH        equ	1100	;# 
   798   00044D                     NCO2INCU        equ	1101	;# 
   799   00044E                     NCO2CON         equ	1102	;# 
   800   00044F                     NCO2CLK         equ	1103	;# 
   801   000450                     NCO3ACC         equ	1104	;# 
   802   000450                     NCO3ACCL        equ	1104	;# 
   803   000451                     NCO3ACCH        equ	1105	;# 
   804   000452                     NCO3ACCU        equ	1106	;# 
   805   000453                     NCO3INC         equ	1107	;# 
   806   000453                     NCO3INCL        equ	1107	;# 
   807   000454                     NCO3INCH        equ	1108	;# 
   808   000455                     NCO3INCU        equ	1109	;# 
   809   000456                     NCO3CON         equ	1110	;# 
   810   000457                     NCO3CLK         equ	1111	;# 
   811   000459                     IVTLOCK         equ	1113	;# 
   812   00045A                     IVTAD           equ	1114	;# 
   813   00045A                     IVTADL          equ	1114	;# 
   814   00045B                     IVTADH          equ	1115	;# 
   815   00045C                     IVTADU          equ	1116	;# 
   816   00045D                     IVTBASE         equ	1117	;# 
   817   00045D                     IVTBASEL        equ	1117	;# 
   818   00045E                     IVTBASEH        equ	1118	;# 
   819   00045F                     IVTBASEU        equ	1119	;# 
   820   000460                     PWM1ERS         equ	1120	;# 
   821   000461                     PWM1CLK         equ	1121	;# 
   822   000462                     PWM1LDS         equ	1122	;# 
   823   000463                     PWM1PR          equ	1123	;# 
   824   000463                     PWM1PRL         equ	1123	;# 
   825   000464                     PWM1PRH         equ	1124	;# 
   826   000465                     PWM1CPRE        equ	1125	;# 
   827   000466                     PWM1PIPOS       equ	1126	;# 
   828   000467                     PWM1GIR         equ	1127	;# 
   829   000468                     PWM1GIE         equ	1128	;# 
   830   000469                     PWM1CON         equ	1129	;# 
   831   00046A                     PWM1S1CFG       equ	1130	;# 
   832   00046B                     PWM1S1P1        equ	1131	;# 
   833   00046B                     PWM1S1P1L       equ	1131	;# 
   834   00046C                     PWM1S1P1H       equ	1132	;# 
   835   00046D                     PWM1S1P2        equ	1133	;# 
   836   00046D                     PWM1S1P2L       equ	1133	;# 
   837   00046E                     PWM1S1P2H       equ	1134	;# 
   838   00046F                     PWM2ERS         equ	1135	;# 
   839   000470                     PWM2CLK         equ	1136	;# 
   840   000471                     PWM2LDS         equ	1137	;# 
   841   000472                     PWM2PR          equ	1138	;# 
   842   000472                     PWM2PRL         equ	1138	;# 
   843   000473                     PWM2PRH         equ	1139	;# 
   844   000474                     PWM2CPRE        equ	1140	;# 
   845   000475                     PWM2PIPOS       equ	1141	;# 
   846   000476                     PWM2GIR         equ	1142	;# 
   847   000477                     PWM2GIE         equ	1143	;# 
   848   000478                     PWM2CON         equ	1144	;# 
   849   000479                     PWM2S1CFG       equ	1145	;# 
   850   00047A                     PWM2S1P1        equ	1146	;# 
   851   00047A                     PWM2S1P1L       equ	1146	;# 
   852   00047B                     PWM2S1P1H       equ	1147	;# 
   853   00047C                     PWM2S1P2        equ	1148	;# 
   854   00047C                     PWM2S1P2L       equ	1148	;# 
   855   00047D                     PWM2S1P2H       equ	1149	;# 
   856   00047E                     PWM3ERS         equ	1150	;# 
   857   00047F                     PWM3CLK         equ	1151	;# 
   858   000480                     PWM3LDS         equ	1152	;# 
   859   000481                     PWM3PR          equ	1153	;# 
   860   000481                     PWM3PRL         equ	1153	;# 
   861   000482                     PWM3PRH         equ	1154	;# 
   862   000483                     PWM3CPRE        equ	1155	;# 
   863   000484                     PWM3PIPOS       equ	1156	;# 
   864   000485                     PWM3GIR         equ	1157	;# 
   865   000486                     PWM3GIE         equ	1158	;# 
   866   000487                     PWM3CON         equ	1159	;# 
   867   000488                     PWM3S1CFG       equ	1160	;# 
   868   000489                     PWM3S1P1        equ	1161	;# 
   869   000489                     PWM3S1P1L       equ	1161	;# 
   870   00048A                     PWM3S1P1H       equ	1162	;# 
   871   00048B                     PWM3S1P2        equ	1163	;# 
   872   00048B                     PWM3S1P2L       equ	1163	;# 
   873   00048C                     PWM3S1P2H       equ	1164	;# 
   874   00049C                     PWMLOAD         equ	1180	;# 
   875   00049D                     PWMEN           equ	1181	;# 
   876   00049E                     PIE0            equ	1182	;# 
   877   00049F                     PIE1            equ	1183	;# 
   878   0004A0                     PIE2            equ	1184	;# 
   879   0004A1                     PIE3            equ	1185	;# 
   880   0004A2                     PIE4            equ	1186	;# 
   881   0004A3                     PIE5            equ	1187	;# 
   882   0004A4                     PIE6            equ	1188	;# 
   883   0004A5                     PIE7            equ	1189	;# 
   884   0004A6                     PIE8            equ	1190	;# 
   885   0004A7                     PIE9            equ	1191	;# 
   886   0004A8                     PIE10           equ	1192	;# 
   887   0004A9                     PIE11           equ	1193	;# 
   888   0004AA                     PIE12           equ	1194	;# 
   889   0004AB                     PIE13           equ	1195	;# 
   890   0004AC                     PIE14           equ	1196	;# 
   891   0004AD                     PIE15           equ	1197	;# 
   892   0004AE                     PIR0            equ	1198	;# 
   893   0004AF                     PIR1            equ	1199	;# 
   894   0004B0                     PIR2            equ	1200	;# 
   895   0004B1                     PIR3            equ	1201	;# 
   896   0004B2                     PIR4            equ	1202	;# 
   897   0004B3                     PIR5            equ	1203	;# 
   898   0004B4                     PIR6            equ	1204	;# 
   899   0004B5                     PIR7            equ	1205	;# 
   900   0004B6                     PIR8            equ	1206	;# 
   901   0004B7                     PIR9            equ	1207	;# 
   902   0004B8                     PIR10           equ	1208	;# 
   903   0004B9                     PIR11           equ	1209	;# 
   904   0004BA                     PIR12           equ	1210	;# 
   905   0004BB                     PIR13           equ	1211	;# 
   906   0004BC                     PIR14           equ	1212	;# 
   907   0004BD                     PIR15           equ	1213	;# 
   908   0004BE                     LATA            equ	1214	;# 
   909   0004BF                     LATB            equ	1215	;# 
   910   0004C0                     LATC            equ	1216	;# 
   911   0004C1                     LATD            equ	1217	;# 
   912   0004C2                     LATE            equ	1218	;# 
   913   0004C3                     LATF            equ	1219	;# 
   914   0004C6                     TRISA           equ	1222	;# 
   915   0004C7                     TRISB           equ	1223	;# 
   916   0004C8                     TRISC           equ	1224	;# 
   917   0004C9                     TRISD           equ	1225	;# 
   918   0004CA                     TRISE           equ	1226	;# 
   919   0004CB                     TRISF           equ	1227	;# 
   920   0004CE                     PORTA           equ	1230	;# 
   921   0004CF                     PORTB           equ	1231	;# 
   922   0004D0                     PORTC           equ	1232	;# 
   923   0004D1                     PORTD           equ	1233	;# 
   924   0004D2                     PORTE           equ	1234	;# 
   925   0004D3                     PORTF           equ	1235	;# 
   926   0004D6                     INTCON0         equ	1238	;# 
   927   0004D7                     INTCON1         equ	1239	;# 
   928   0004D8                     STATUS          equ	1240	;# 
   929   0004D9                     FSR2            equ	1241	;# 
   930   0004D9                     FSR2L           equ	1241	;# 
   931   0004DA                     FSR2H           equ	1242	;# 
   932   0004DB                     PLUSW2          equ	1243	;# 
   933   0004DC                     PREINC2         equ	1244	;# 
   934   0004DD                     POSTDEC2        equ	1245	;# 
   935   0004DE                     POSTINC2        equ	1246	;# 
   936   0004DF                     INDF2           equ	1247	;# 
   937   0004E0                     BSR             equ	1248	;# 
   938   0004E1                     FSR1            equ	1249	;# 
   939   0004E1                     FSR1L           equ	1249	;# 
   940   0004E2                     FSR1H           equ	1250	;# 
   941   0004E3                     PLUSW1          equ	1251	;# 
   942   0004E4                     PREINC1         equ	1252	;# 
   943   0004E5                     POSTDEC1        equ	1253	;# 
   944   0004E6                     POSTINC1        equ	1254	;# 
   945   0004E7                     INDF1           equ	1255	;# 
   946   0004E8                     WREG            equ	1256	;# 
   947   0004E9                     FSR0            equ	1257	;# 
   948   0004E9                     FSR0L           equ	1257	;# 
   949   0004EA                     FSR0H           equ	1258	;# 
   950   0004EB                     PLUSW0          equ	1259	;# 
   951   0004EC                     PREINC0         equ	1260	;# 
   952   0004ED                     POSTDEC0        equ	1261	;# 
   953   0004EE                     POSTINC0        equ	1262	;# 
   954   0004EF                     INDF0           equ	1263	;# 
   955   0004F0                     PCON0           equ	1264	;# 
   956   0004F1                     PCON1           equ	1265	;# 
   957   0004F2                     CPUDOZE         equ	1266	;# 
   958   0004F3                     PROD            equ	1267	;# 
   959   0004F3                     PRODL           equ	1267	;# 
   960   0004F4                     PRODH           equ	1268	;# 
   961   0004F5                     TABLAT          equ	1269	;# 
   962   0004F6                     TBLPTR          equ	1270	;# 
   963   0004F6                     TBLPTRL         equ	1270	;# 
   964   0004F7                     TBLPTRH         equ	1271	;# 
   965   0004F8                     TBLPTRU         equ	1272	;# 
   966   0004F9                     PCLAT           equ	1273	;# 
   967   0004F9                     PCL             equ	1273	;# 
   968   0004FA                     PCLATH          equ	1274	;# 
   969   0004FB                     PCLATU          equ	1275	;# 
   970   0004FC                     STKPTR          equ	1276	;# 
   971   0004FD                     TOS             equ	1277	;# 
   972   0004FD                     TOSL            equ	1277	;# 
   973   0004FE                     TOSH            equ	1278	;# 
   974   0004FF                     TOSU            equ	1279	;# 
   975   000039                     CLKRCON         equ	57	;# 
   976   00003A                     CLKRCLK         equ	58	;# 
   977   000040                     NVMCON0         equ	64	;# 
   978   000041                     NVMCON1         equ	65	;# 
   979   000042                     NVMLOCK         equ	66	;# 
   980   000043                     NVMADR          equ	67	;# 
   981   000043                     NVMADRL         equ	67	;# 
   982   000044                     NVMADRH         equ	68	;# 
   983   000045                     NVMADRU         equ	69	;# 
   984   000046                     NVMDAT          equ	70	;# 
   985   000046                     NVMDATL         equ	70	;# 
   986   000047                     NVMDATH         equ	71	;# 
   987   000048                     VREGCON         equ	72	;# 
   988   000049                     BORCON          equ	73	;# 
   989   00004A                     HLVDCON0        equ	74	;# 
   990   00004B                     HLVDCON1        equ	75	;# 
   991   00004C                     ZCDCON          equ	76	;# 
   992   000060                     PMD0            equ	96	;# 
   993   000061                     PMD1            equ	97	;# 
   994   000063                     PMD3            equ	99	;# 
   995   000064                     PMD4            equ	100	;# 
   996   000065                     PMD5            equ	101	;# 
   997   000066                     PMD6            equ	102	;# 
   998   000067                     PMD7            equ	103	;# 
   999   000068                     PMD8            equ	104	;# 
  1000   00006A                     MD1CON0         equ	106	;# 
  1001   00006B                     MD1CON1         equ	107	;# 
  1002   00006C                     MD1SRC          equ	108	;# 
  1003   00006D                     MD1CARL         equ	109	;# 
  1004   00006E                     MD1CARH         equ	110	;# 
  1005   00006F                     CMOUT           equ	111	;# 
  1006   000070                     CM1CON0         equ	112	;# 
  1007   000071                     CM1CON1         equ	113	;# 
  1008   000072                     CM1NCH          equ	114	;# 
  1009   000073                     CM1PCH          equ	115	;# 
  1010   000074                     CM2CON0         equ	116	;# 
  1011   000075                     CM2CON1         equ	117	;# 
  1012   000076                     CM2NCH          equ	118	;# 
  1013   000077                     CM2PCH          equ	119	;# 
  1014   000078                     WDTCON0         equ	120	;# 
  1015   000079                     WDTCON1         equ	121	;# 
  1016   00007A                     WDTPS           equ	122	;# 
  1017   00007A                     WDTPSL          equ	122	;# 
  1018   00007B                     WDTPSH          equ	123	;# 
  1019   00007C                     WDTTMR          equ	124	;# 
  1020   00007D                     DAC1DAT         equ	125	;# 
  1021   00007D                     DAC1DATL        equ	125	;# 
  1022   00007F                     DAC1CON         equ	127	;# 
  1023   000080                     SPI1RXB         equ	128	;# 
  1024   000081                     SPI1TXB         equ	129	;# 
  1025   000082                     SPI1TCNT        equ	130	;# 
  1026   000082                     SPI1TCNTL       equ	130	;# 
  1027   000083                     SPI1TCNTH       equ	131	;# 
  1028   000084                     SPI1CON0        equ	132	;# 
  1029   000085                     SPI1CON1        equ	133	;# 
  1030   000086                     SPI1CON2        equ	134	;# 
  1031   000087                     SPI1STATUS      equ	135	;# 
  1032   000088                     SPI1TWIDTH      equ	136	;# 
  1033   000089                     SPI1BAUD        equ	137	;# 
  1034   00008A                     SPI1INTF        equ	138	;# 
  1035   00008B                     SPI1INTE        equ	139	;# 
  1036   00008C                     SPI1CLK         equ	140	;# 
  1037   00008D                     SPI2RXB         equ	141	;# 
  1038   00008E                     SPI2TXB         equ	142	;# 
  1039   00008F                     SPI2TCNT        equ	143	;# 
  1040   00008F                     SPI2TCNTL       equ	143	;# 
  1041   000090                     SPI2TCNTH       equ	144	;# 
  1042   000091                     SPI2CON0        equ	145	;# 
  1043   000092                     SPI2CON1        equ	146	;# 
  1044   000093                     SPI2CON2        equ	147	;# 
  1045   000094                     SPI2STATUS      equ	148	;# 
  1046   000095                     SPI2TWIDTH      equ	149	;# 
  1047   000096                     SPI2BAUD        equ	150	;# 
  1048   000097                     SPI2INTF        equ	151	;# 
  1049   000098                     SPI2INTE        equ	152	;# 
  1050   000099                     SPI2CLK         equ	153	;# 
  1051   0000AC                     ACTCON          equ	172	;# 
  1052   0000AD                     OSCCON1         equ	173	;# 
  1053   0000AE                     OSCCON2         equ	174	;# 
  1054   0000AF                     OSCCON3         equ	175	;# 
  1055   0000B0                     OSCTUNE         equ	176	;# 
  1056   0000B1                     OSCFRQ          equ	177	;# 
  1057   0000B1                     OSCFREQ         equ	177	;# 
  1058   0000B2                     OSCSTAT         equ	178	;# 
  1059   0000B2                     OSCSTAT1        equ	178	;# 
  1060   0000B3                     OSCEN           equ	179	;# 
  1061   0000B4                     PRLOCK          equ	180	;# 
  1062   0000B5                     SCANPR          equ	181	;# 
  1063   0000B6                     DMA1PR          equ	182	;# 
  1064   0000B7                     DMA2PR          equ	183	;# 
  1065   0000B8                     DMA3PR          equ	184	;# 
  1066   0000B9                     DMA4PR          equ	185	;# 
  1067   0000BA                     DMA5PR          equ	186	;# 
  1068   0000BB                     DMA6PR          equ	187	;# 
  1069   0000BE                     MAINPR          equ	190	;# 
  1070   0000BF                     ISRPR           equ	191	;# 
  1071   0000D4                     CLCDATA         equ	212	;# 
  1072   0000D5                     CLCSELECT       equ	213	;# 
  1073   0000D6                     CLCnCON         equ	214	;# 
  1074   0000D7                     CLCnPOL         equ	215	;# 
  1075   0000D8                     CLCnSEL0        equ	216	;# 
  1076   0000D9                     CLCnSEL1        equ	217	;# 
  1077   0000DA                     CLCnSEL2        equ	218	;# 
  1078   0000DB                     CLCnSEL3        equ	219	;# 
  1079   0000DC                     CLCnGLS0        equ	220	;# 
  1080   0000DD                     CLCnGLS1        equ	221	;# 
  1081   0000DE                     CLCnGLS2        equ	222	;# 
  1082   0000DF                     CLCnGLS3        equ	223	;# 
  1083   0000E8                     DMASELECT       equ	232	;# 
  1084   0000E9                     DMAnBUF         equ	233	;# 
  1085   0000EA                     DMAnDCNT        equ	234	;# 
  1086   0000EA                     DMAnDCNTL       equ	234	;# 
  1087   0000EB                     DMAnDCNTH       equ	235	;# 
  1088   0000EC                     DMAnDPTR        equ	236	;# 
  1089   0000EC                     DMAnDPTRL       equ	236	;# 
  1090   0000ED                     DMAnDPTRH       equ	237	;# 
  1091   0000EE                     DMAnDSZ         equ	238	;# 
  1092   0000EE                     DMAnDSZL        equ	238	;# 
  1093   0000EF                     DMAnDSZH        equ	239	;# 
  1094   0000F0                     DMAnDSA         equ	240	;# 
  1095   0000F0                     DMAnDSAL        equ	240	;# 
  1096   0000F1                     DMAnDSAH        equ	241	;# 
  1097   0000F2                     DMAnSCNT        equ	242	;# 
  1098   0000F2                     DMAnSCNTL       equ	242	;# 
  1099   0000F3                     DMAnSCNTH       equ	243	;# 
  1100   0000F4                     DMAnSPTR        equ	244	;# 
  1101   0000F4                     DMAnSPTRL       equ	244	;# 
  1102   0000F5                     DMAnSPTRH       equ	245	;# 
  1103   0000F6                     DMAnSPTRU       equ	246	;# 
  1104   0000F7                     DMAnSSZ         equ	247	;# 
  1105   0000F7                     DMAnSSZL        equ	247	;# 
  1106   0000F8                     DMAnSSZH        equ	248	;# 
  1107   0000F9                     DMAnSSA         equ	249	;# 
  1108   0000F9                     DMAnSSAL        equ	249	;# 
  1109   0000FA                     DMAnSSAH        equ	250	;# 
  1110   0000FB                     DMAnSSAU        equ	251	;# 
  1111   0000FC                     DMAnCON0        equ	252	;# 
  1112   0000FD                     DMAnCON1        equ	253	;# 
  1113   0000FE                     DMAnAIRQ        equ	254	;# 
  1114   0000FF                     DMAnSIRQ        equ	255	;# 
  1115   000200                     PPSLOCK         equ	512	;# 
  1116   000201                     RA0PPS          equ	513	;# 
  1117   000202                     RA1PPS          equ	514	;# 
  1118   000203                     RA2PPS          equ	515	;# 
  1119   000204                     RA3PPS          equ	516	;# 
  1120   000205                     RA4PPS          equ	517	;# 
  1121   000206                     RA5PPS          equ	518	;# 
  1122   000207                     RA6PPS          equ	519	;# 
  1123   000208                     RA7PPS          equ	520	;# 
  1124   000209                     RB0PPS          equ	521	;# 
  1125   00020A                     RB1PPS          equ	522	;# 
  1126   00020B                     RB2PPS          equ	523	;# 
  1127   00020C                     RB3PPS          equ	524	;# 
  1128   00020D                     RB4PPS          equ	525	;# 
  1129   00020E                     RB5PPS          equ	526	;# 
  1130   00020F                     RB6PPS          equ	527	;# 
  1131   000210                     RB7PPS          equ	528	;# 
  1132   000211                     RC0PPS          equ	529	;# 
  1133   000212                     RC1PPS          equ	530	;# 
  1134   000213                     RC2PPS          equ	531	;# 
  1135   000214                     RC3PPS          equ	532	;# 
  1136   000215                     RC4PPS          equ	533	;# 
  1137   000216                     RC5PPS          equ	534	;# 
  1138   000217                     RC6PPS          equ	535	;# 
  1139   000218                     RC7PPS          equ	536	;# 
  1140   000219                     RD0PPS          equ	537	;# 
  1141   00021A                     RD1PPS          equ	538	;# 
  1142   00021B                     RD2PPS          equ	539	;# 
  1143   00021C                     RD3PPS          equ	540	;# 
  1144   00021D                     RD4PPS          equ	541	;# 
  1145   00021E                     RD5PPS          equ	542	;# 
  1146   00021F                     RD6PPS          equ	543	;# 
  1147   000220                     RD7PPS          equ	544	;# 
  1148   000221                     RE0PPS          equ	545	;# 
  1149   000222                     RE1PPS          equ	546	;# 
  1150   000223                     RE2PPS          equ	547	;# 
  1151   000229                     RF0PPS          equ	553	;# 
  1152   00022A                     RF1PPS          equ	554	;# 
  1153   00022B                     RF2PPS          equ	555	;# 
  1154   00022C                     RF3PPS          equ	556	;# 
  1155   00022D                     RF4PPS          equ	557	;# 
  1156   00022E                     RF5PPS          equ	558	;# 
  1157   00022F                     RF6PPS          equ	559	;# 
  1158   000230                     RF7PPS          equ	560	;# 
  1159   00023E                     INT0PPS         equ	574	;# 
  1160   00023F                     INT1PPS         equ	575	;# 
  1161   000240                     INT2PPS         equ	576	;# 
  1162   000241                     T0CKIPPS        equ	577	;# 
  1163   000242                     T1CKIPPS        equ	578	;# 
  1164   000243                     T1GPPS          equ	579	;# 
  1165   000244                     T3CKIPPS        equ	580	;# 
  1166   000245                     T3GPPS          equ	581	;# 
  1167   000246                     T5CKIPPS        equ	582	;# 
  1168   000247                     T5GPPS          equ	583	;# 
  1169   000248                     T2INPPS         equ	584	;# 
  1170   000249                     T4INPPS         equ	585	;# 
  1171   00024A                     T6INPPS         equ	586	;# 
  1172   00024F                     CCP1PPS         equ	591	;# 
  1173   000250                     CCP2PPS         equ	592	;# 
  1174   000251                     CCP3PPS         equ	593	;# 
  1175   000253                     PWM1ERSPPS      equ	595	;# 
  1176   000254                     PWM2ERSPPS      equ	596	;# 
  1177   000255                     PWM3ERSPPS      equ	597	;# 
  1178   000257                     PWMIN0PPS       equ	599	;# 
  1179   000258                     PWMIN1PPS       equ	600	;# 
  1180   000259                     SMT1WINPPS      equ	601	;# 
  1181   00025A                     SMT1SIGPPS      equ	602	;# 
  1182   00025B                     CWG1PPS         equ	603	;# 
  1183   00025B                     CWG1INPPS       equ	603	;# 
  1184   00025C                     CWG2PPS         equ	604	;# 
  1185   00025C                     CWG2INPPS       equ	604	;# 
  1186   00025D                     CWG3PPS         equ	605	;# 
  1187   00025D                     CWG3INPPS       equ	605	;# 
  1188   00025E                     MD1CARLPPS      equ	606	;# 
  1189   00025E                     MDCARLPPS       equ	606	;# 
  1190   00025F                     MD1CARHPPS      equ	607	;# 
  1191   00025F                     MDCARHPPS       equ	607	;# 
  1192   000260                     MD1SRCPPS       equ	608	;# 
  1193   000260                     MDSRCPPS        equ	608	;# 
  1194   000261                     CLCIN0PPS       equ	609	;# 
  1195   000262                     CLCIN1PPS       equ	610	;# 
  1196   000263                     CLCIN2PPS       equ	611	;# 
  1197   000264                     CLCIN3PPS       equ	612	;# 
  1198   000265                     CLCIN4PPS       equ	613	;# 
  1199   000266                     CLCIN5PPS       equ	614	;# 
  1200   000267                     CLCIN6PPS       equ	615	;# 
  1201   000268                     CLCIN7PPS       equ	616	;# 
  1202   000269                     ADACTPPS        equ	617	;# 
  1203   00026A                     SPI1SCKPPS      equ	618	;# 
  1204   00026B                     SPI1SDIPPS      equ	619	;# 
  1205   00026C                     SPI1SSPPS       equ	620	;# 
  1206   00026D                     SPI2SCKPPS      equ	621	;# 
  1207   00026E                     SPI2SDIPPS      equ	622	;# 
  1208   00026F                     SPI2SSPPS       equ	623	;# 
  1209   000270                     I2C1SDAPPS      equ	624	;# 
  1210   000271                     I2C1SCLPPS      equ	625	;# 
  1211   000272                     U1RXPPS         equ	626	;# 
  1212   000273                     U1CTSPPS        equ	627	;# 
  1213   000274                     U2RXPPS         equ	628	;# 
  1214   000275                     U2CTSPPS        equ	629	;# 
  1215   000276                     U3RXPPS         equ	630	;# 
  1216   000277                     U3CTSPPS        equ	631	;# 
  1217   000278                     U4RXPPS         equ	632	;# 
  1218   000279                     U4CTSPPS        equ	633	;# 
  1219   00027A                     U5RXPPS         equ	634	;# 
  1220   00027B                     U5CTSPPS        equ	635	;# 
  1221   000286                     RC4I2C          equ	646	;# 
  1222   000287                     RC3I2C          equ	647	;# 
  1223   000288                     RB2I2C          equ	648	;# 
  1224   000289                     RB1I2C          equ	649	;# 
  1225   00028B                     I2C1RXB         equ	651	;# 
  1226   00028C                     I2C1TXB         equ	652	;# 
  1227   00028D                     I2C1CNT         equ	653	;# 
  1228   00028E                     I2C1ADB0        equ	654	;# 
  1229   00028F                     I2C1ADB1        equ	655	;# 
  1230   000290                     I2C1ADR0        equ	656	;# 
  1231   000291                     I2C1ADR1        equ	657	;# 
  1232   000292                     I2C1ADR2        equ	658	;# 
  1233   000293                     I2C1ADR3        equ	659	;# 
  1234   000294                     I2C1CON0        equ	660	;# 
  1235   000295                     I2C1CON1        equ	661	;# 
  1236   000296                     I2C1CON2        equ	662	;# 
  1237   000297                     I2C1ERR         equ	663	;# 
  1238   000298                     I2C1STAT0       equ	664	;# 
  1239   000299                     I2C1STAT1       equ	665	;# 
  1240   00029A                     I2C1PIR         equ	666	;# 
  1241   00029B                     I2C1PIE         equ	667	;# 
  1242   00029C                     I2C1CLK         equ	668	;# 
  1243   00029D                     I2C1BTO         equ	669	;# 
  1244   0002A1                     U1RXB           equ	673	;# 
  1245   0002A1                     U1RXBL          equ	673	;# 
  1246   0002A2                     U1RXCHK         equ	674	;# 
  1247   0002A3                     U1TXB           equ	675	;# 
  1248   0002A3                     U1TXBL          equ	675	;# 
  1249   0002A4                     U1TXCHK         equ	676	;# 
  1250   0002A5                     U1P1            equ	677	;# 
  1251   0002A5                     U1P1L           equ	677	;# 
  1252   0002A6                     U1P1H           equ	678	;# 
  1253   0002A7                     U1P2            equ	679	;# 
  1254   0002A7                     U1P2L           equ	679	;# 
  1255   0002A8                     U1P2H           equ	680	;# 
  1256   0002A9                     U1P3            equ	681	;# 
  1257   0002A9                     U1P3L           equ	681	;# 
  1258   0002AA                     U1P3H           equ	682	;# 
  1259   0002AB                     U1CON0          equ	683	;# 
  1260   0002AC                     U1CON1          equ	684	;# 
  1261   0002AD                     U1CON2          equ	685	;# 
  1262   0002AE                     U1BRG           equ	686	;# 
  1263   0002AE                     U1BRGL          equ	686	;# 
  1264   0002AF                     U1BRGH          equ	687	;# 
  1265   0002B0                     U1FIFO          equ	688	;# 
  1266   0002B1                     U1UIR           equ	689	;# 
  1267   0002B2                     U1ERRIR         equ	690	;# 
  1268   0002B3                     U1ERRIE         equ	691	;# 
  1269   0002B4                     U2RXB           equ	692	;# 
  1270   0002B4                     U2RXBL          equ	692	;# 
  1271   0002B6                     U2TXB           equ	694	;# 
  1272   0002B6                     U2TXBL          equ	694	;# 
  1273   0002B8                     U2P1            equ	696	;# 
  1274   0002B8                     U2P1L           equ	696	;# 
  1275   0002BA                     U2P2            equ	698	;# 
  1276   0002BA                     U2P2L           equ	698	;# 
  1277   0002BC                     U2P3            equ	700	;# 
  1278   0002BC                     U2P3L           equ	700	;# 
  1279   0002BE                     U2CON0          equ	702	;# 
  1280   0002BF                     U2CON1          equ	703	;# 
  1281   0002C0                     U2CON2          equ	704	;# 
  1282   0002C1                     U2BRG           equ	705	;# 
  1283   0002C1                     U2BRGL          equ	705	;# 
  1284   0002C2                     U2BRGH          equ	706	;# 
  1285   0002C3                     U2FIFO          equ	707	;# 
  1286   0002C4                     U2UIR           equ	708	;# 
  1287   0002C5                     U2ERRIR         equ	709	;# 
  1288   0002C6                     U2ERRIE         equ	710	;# 
  1289   0002C7                     U3RXB           equ	711	;# 
  1290   0002C7                     U3RXBL          equ	711	;# 
  1291   0002C9                     U3TXB           equ	713	;# 
  1292   0002C9                     U3TXBL          equ	713	;# 
  1293   0002CB                     U3P1            equ	715	;# 
  1294   0002CB                     U3P1L           equ	715	;# 
  1295   0002CD                     U3P2            equ	717	;# 
  1296   0002CD                     U3P2L           equ	717	;# 
  1297   0002CF                     U3P3            equ	719	;# 
  1298   0002CF                     U3P3L           equ	719	;# 
  1299   0002D1                     U3CON0          equ	721	;# 
  1300   0002D2                     U3CON1          equ	722	;# 
  1301   0002D3                     U3CON2          equ	723	;# 
  1302   0002D4                     U3BRG           equ	724	;# 
  1303   0002D4                     U3BRGL          equ	724	;# 
  1304   0002D5                     U3BRGH          equ	725	;# 
  1305   0002D6                     U3FIFO          equ	726	;# 
  1306   0002D7                     U3UIR           equ	727	;# 
  1307   0002D8                     U3ERRIR         equ	728	;# 
  1308   0002D9                     U3ERRIE         equ	729	;# 
  1309   0002DA                     U4RXB           equ	730	;# 
  1310   0002DA                     U4RXBL          equ	730	;# 
  1311   0002DC                     U4TXB           equ	732	;# 
  1312   0002DC                     U4TXBL          equ	732	;# 
  1313   0002DE                     U4P1            equ	734	;# 
  1314   0002DE                     U4P1L           equ	734	;# 
  1315   0002E0                     U4P2            equ	736	;# 
  1316   0002E0                     U4P2L           equ	736	;# 
  1317   0002E2                     U4P3            equ	738	;# 
  1318   0002E2                     U4P3L           equ	738	;# 
  1319   0002E4                     U4CON0          equ	740	;# 
  1320   0002E5                     U4CON1          equ	741	;# 
  1321   0002E6                     U4CON2          equ	742	;# 
  1322   0002E7                     U4BRG           equ	743	;# 
  1323   0002E7                     U4BRGL          equ	743	;# 
  1324   0002E8                     U4BRGH          equ	744	;# 
  1325   0002E9                     U4FIFO          equ	745	;# 
  1326   0002EA                     U4UIR           equ	746	;# 
  1327   0002EB                     U4ERRIR         equ	747	;# 
  1328   0002EC                     U4ERRIE         equ	748	;# 
  1329   0002ED                     U5RXB           equ	749	;# 
  1330   0002ED                     U5RXBL          equ	749	;# 
  1331   0002EF                     U5TXB           equ	751	;# 
  1332   0002EF                     U5TXBL          equ	751	;# 
  1333   0002F1                     U5P1            equ	753	;# 
  1334   0002F1                     U5P1L           equ	753	;# 
  1335   0002F3                     U5P2            equ	755	;# 
  1336   0002F3                     U5P2L           equ	755	;# 
  1337   0002F5                     U5P3            equ	757	;# 
  1338   0002F5                     U5P3L           equ	757	;# 
  1339   0002F7                     U5CON0          equ	759	;# 
  1340   0002F8                     U5CON1          equ	760	;# 
  1341   0002F9                     U5CON2          equ	761	;# 
  1342   0002FA                     U5BRG           equ	762	;# 
  1343   0002FA                     U5BRGL          equ	762	;# 
  1344   0002FB                     U5BRGH          equ	763	;# 
  1345   0002FC                     U5FIFO          equ	764	;# 
  1346   0002FD                     U5UIR           equ	765	;# 
  1347   0002FE                     U5ERRIR         equ	766	;# 
  1348   0002FF                     U5ERRIE         equ	767	;# 
  1349   000300                     SMT1TMR         equ	768	;# 
  1350   000300                     SMT1TMRL        equ	768	;# 
  1351   000301                     SMT1TMRH        equ	769	;# 
  1352   000302                     SMT1TMRU        equ	770	;# 
  1353   000303                     SMT1CPR         equ	771	;# 
  1354   000303                     SMT1CPRL        equ	771	;# 
  1355   000304                     SMT1CPRH        equ	772	;# 
  1356   000305                     SMT1CPRU        equ	773	;# 
  1357   000306                     SMT1CPW         equ	774	;# 
  1358   000306                     SMT1CPWL        equ	774	;# 
  1359   000307                     SMT1CPWH        equ	775	;# 
  1360   000308                     SMT1CPWU        equ	776	;# 
  1361   000309                     SMT1PR          equ	777	;# 
  1362   000309                     SMT1PRL         equ	777	;# 
  1363   00030A                     SMT1PRH         equ	778	;# 
  1364   00030B                     SMT1PRU         equ	779	;# 
  1365   00030C                     SMT1CON0        equ	780	;# 
  1366   00030D                     SMT1CON1        equ	781	;# 
  1367   00030E                     SMT1STAT        equ	782	;# 
  1368   00030F                     SMT1CLK         equ	783	;# 
  1369   000310                     SMT1SIG         equ	784	;# 
  1370   000311                     SMT1WIN         equ	785	;# 
  1371   000318                     TMR0L           equ	792	;# 
  1372   000318                     TMR0            equ	792	;# 
  1373   000319                     TMR0H           equ	793	;# 
  1374   000319                     PR0             equ	793	;# 
  1375   00031A                     T0CON0          equ	794	;# 
  1376   00031B                     T0CON1          equ	795	;# 
  1377   00031C                     TMR1            equ	796	;# 
  1378   00031C                     TMR1L           equ	796	;# 
  1379   00031D                     TMR1H           equ	797	;# 
  1380   00031E                     T1CON           equ	798	;# 
  1381   00031E                     TMR1CON         equ	798	;# 
  1382   00031F                     T1GCON          equ	799	;# 
  1383   00031F                     TMR1GCON        equ	799	;# 
  1384   000320                     T1GATE          equ	800	;# 
  1385   000320                     TMR1GATE        equ	800	;# 
  1386   000321                     T1CLK           equ	801	;# 
  1387   000321                     TMR1CLK         equ	801	;# 
  1388   000321                     PR1             equ	801	;# 
  1389   000322                     T2TMR           equ	802	;# 
  1390   000322                     TMR2            equ	802	;# 
  1391   000323                     T2PR            equ	803	;# 
  1392   000323                     PR2             equ	803	;# 
  1393   000324                     T2CON           equ	804	;# 
  1394   000325                     T2HLT           equ	805	;# 
  1395   000326                     T2CLKCON        equ	806	;# 
  1396   000326                     T2CLK           equ	806	;# 
  1397   000327                     T2RST           equ	807	;# 
  1398   000328                     TMR3            equ	808	;# 
  1399   000328                     TMR3L           equ	808	;# 
  1400   000329                     TMR3H           equ	809	;# 
  1401   00032A                     T3CON           equ	810	;# 
  1402   00032A                     TMR3CON         equ	810	;# 
  1403   00032B                     T3GCON          equ	811	;# 
  1404   00032B                     TMR3GCON        equ	811	;# 
  1405   00032C                     T3GATE          equ	812	;# 
  1406   00032C                     TMR3GATE        equ	812	;# 
  1407   00032D                     T3CLK           equ	813	;# 
  1408   00032D                     TMR3CLK         equ	813	;# 
  1409   00032D                     PR3             equ	813	;# 
  1410   00032E                     T4TMR           equ	814	;# 
  1411   00032E                     TMR4            equ	814	;# 
  1412   00032F                     T4PR            equ	815	;# 
  1413   00032F                     PR4             equ	815	;# 
  1414   000330                     T4CON           equ	816	;# 
  1415   000331                     T4HLT           equ	817	;# 
  1416   000332                     T4CLKCON        equ	818	;# 
  1417   000332                     T4CLK           equ	818	;# 
  1418   000333                     T4RST           equ	819	;# 
  1419   000334                     TMR5            equ	820	;# 
  1420   000334                     TMR5L           equ	820	;# 
  1421   000335                     TMR5H           equ	821	;# 
  1422   000336                     T5CON           equ	822	;# 
  1423   000336                     TMR5CON         equ	822	;# 
  1424   000337                     T5GCON          equ	823	;# 
  1425   000337                     TMR5GCON        equ	823	;# 
  1426   000338                     T5GATE          equ	824	;# 
  1427   000338                     TMR5GATE        equ	824	;# 
  1428   000339                     T5CLK           equ	825	;# 
  1429   000339                     TMR5CLK         equ	825	;# 
  1430   000339                     PR5             equ	825	;# 
  1431   00033A                     T6TMR           equ	826	;# 
  1432   00033A                     TMR6            equ	826	;# 
  1433   00033B                     T6PR            equ	827	;# 
  1434   00033B                     PR6             equ	827	;# 
  1435   00033C                     T6CON           equ	828	;# 
  1436   00033D                     T6HLT           equ	829	;# 
  1437   00033E                     T6CLKCON        equ	830	;# 
  1438   00033E                     T6CLK           equ	830	;# 
  1439   00033F                     T6RST           equ	831	;# 
  1440   000340                     CCPR1           equ	832	;# 
  1441   000340                     CCPR1L          equ	832	;# 
  1442   000341                     CCPR1H          equ	833	;# 
  1443   000342                     CCP1CON         equ	834	;# 
  1444   000343                     CCP1CAP         equ	835	;# 
  1445   000344                     CCPR2           equ	836	;# 
  1446   000344                     CCPR2L          equ	836	;# 
  1447   000345                     CCPR2H          equ	837	;# 
  1448   000346                     CCP2CON         equ	838	;# 
  1449   000347                     CCP2CAP         equ	839	;# 
  1450   000348                     CCPR3           equ	840	;# 
  1451   000348                     CCPR3L          equ	840	;# 
  1452   000349                     CCPR3H          equ	841	;# 
  1453   00034A                     CCP3CON         equ	842	;# 
  1454   00034B                     CCP3CAP         equ	843	;# 
  1455   00034C                     CCPTMRS0        equ	844	;# 
  1456   00034F                     CRCDATA         equ	847	;# 
  1457   00034F                     CRCDATL         equ	847	;# 
  1458   000350                     CRCDATH         equ	848	;# 
  1459   000351                     CRCACC          equ	849	;# 
  1460   000351                     CRCACCL         equ	849	;# 
  1461   000352                     CRCACCH         equ	850	;# 
  1462   000353                     CRCSHFT         equ	851	;# 
  1463   000353                     CRCSHIFTL       equ	851	;# 
  1464   000354                     CRCSHIFTH       equ	852	;# 
  1465   000355                     CRCXOR          equ	853	;# 
  1466   000355                     CRCXORL         equ	853	;# 
  1467   000356                     CRCXORH         equ	854	;# 
  1468   000357                     CRCCON0         equ	855	;# 
  1469   000358                     CRCCON1         equ	856	;# 
  1470   00035A                     SCANLADR        equ	858	;# 
  1471   00035A                     SCANLADRL       equ	858	;# 
  1472   00035B                     SCANLADRH       equ	859	;# 
  1473   00035C                     SCANLADRU       equ	860	;# 
  1474   00035D                     SCANHADR        equ	861	;# 
  1475   00035D                     SCANHADRL       equ	861	;# 
  1476   00035E                     SCANHADRH       equ	862	;# 
  1477   00035F                     SCANHADRU       equ	863	;# 
  1478   000360                     SCANCON0        equ	864	;# 
  1479   000361                     SCANTRIG        equ	865	;# 
  1480   000362                     IPR0            equ	866	;# 
  1481   000363                     IPR1            equ	867	;# 
  1482   000364                     IPR2            equ	868	;# 
  1483   000365                     IPR3            equ	869	;# 
  1484   000366                     IPR4            equ	870	;# 
  1485   000367                     IPR5            equ	871	;# 
  1486   000368                     IPR6            equ	872	;# 
  1487   000369                     IPR7            equ	873	;# 
  1488   00036A                     IPR8            equ	874	;# 
  1489   00036B                     IPR9            equ	875	;# 
  1490   00036C                     IPR10           equ	876	;# 
  1491   00036D                     IPR11           equ	877	;# 
  1492   00036E                     IPR12           equ	878	;# 
  1493   00036F                     IPR13           equ	879	;# 
  1494   000370                     IPR14           equ	880	;# 
  1495   000371                     IPR15           equ	881	;# 
  1496   000373                     STATUS_CSHAD    equ	883	;# 
  1497   000374                     WREG_CSHAD      equ	884	;# 
  1498   000375                     BSR_CSHAD       equ	885	;# 
  1499   000376                     SHADCON         equ	886	;# 
  1500   000377                     STATUS_SHAD     equ	887	;# 
  1501   000378                     WREG_SHAD       equ	888	;# 
  1502   000379                     BSR_SHAD        equ	889	;# 
  1503   00037A                     PCLATH_SHAD     equ	890	;# 
  1504   00037B                     PCLATU_SHAD     equ	891	;# 
  1505   00037C                     FSR0SH          equ	892	;# 
  1506   00037C                     FSR0L_SHAD      equ	892	;# 
  1507   00037D                     FSR0H_SHAD      equ	893	;# 
  1508   00037E                     FSR1SH          equ	894	;# 
  1509   00037E                     FSR1L_SHAD      equ	894	;# 
  1510   00037F                     FSR1H_SHAD      equ	895	;# 
  1511   000380                     FSR2SH          equ	896	;# 
  1512   000380                     FSR2L_SHAD      equ	896	;# 
  1513   000381                     FSR2H_SHAD      equ	897	;# 
  1514   000382                     PRODSH          equ	898	;# 
  1515   000382                     PRODL_SHAD      equ	898	;# 
  1516   000383                     PRODH_SHAD      equ	899	;# 
  1517   0003BC                     CWG1CLK         equ	956	;# 
  1518   0003BC                     CWG1CLKCON      equ	956	;# 
  1519   0003BD                     CWG1ISM         equ	957	;# 
  1520   0003BD                     CWG1DAT         equ	957	;# 
  1521   0003BE                     CWG1DBR         equ	958	;# 
  1522   0003BF                     CWG1DBF         equ	959	;# 
  1523   0003C0                     CWG1CON0        equ	960	;# 
  1524   0003C1                     CWG1CON1        equ	961	;# 
  1525   0003C2                     CWG1AS0         equ	962	;# 
  1526   0003C3                     CWG1AS1         equ	963	;# 
  1527   0003C4                     CWG1STR         equ	964	;# 
  1528   0003C5                     CWG2CLK         equ	965	;# 
  1529   0003C5                     CWG2CLKCON      equ	965	;# 
  1530   0003C6                     CWG2ISM         equ	966	;# 
  1531   0003C6                     CWG2DAT         equ	966	;# 
  1532   0003C7                     CWG2DBR         equ	967	;# 
  1533   0003C8                     CWG2DBF         equ	968	;# 
  1534   0003C9                     CWG2CON0        equ	969	;# 
  1535   0003CA                     CWG2CON1        equ	970	;# 
  1536   0003CB                     CWG2AS0         equ	971	;# 
  1537   0003CC                     CWG2AS1         equ	972	;# 
  1538   0003CD                     CWG2STR         equ	973	;# 
  1539   0003CE                     CWG3CLK         equ	974	;# 
  1540   0003CE                     CWG3CLKCON      equ	974	;# 
  1541   0003CF                     CWG3ISM         equ	975	;# 
  1542   0003CF                     CWG3DAT         equ	975	;# 
  1543   0003D0                     CWG3DBR         equ	976	;# 
  1544   0003D1                     CWG3DBF         equ	977	;# 
  1545   0003D2                     CWG3CON0        equ	978	;# 
  1546   0003D3                     CWG3CON1        equ	979	;# 
  1547   0003D4                     CWG3AS0         equ	980	;# 
  1548   0003D5                     CWG3AS1         equ	981	;# 
  1549   0003D6                     CWG3STR         equ	982	;# 
  1550   0003D7                     FVRCON          equ	983	;# 
  1551   0003D8                     ADCPCON         equ	984	;# 
  1552   0003D8                     ADCP            equ	984	;# 
  1553   0003D9                     ADLTH           equ	985	;# 
  1554   0003D9                     ADLTHL          equ	985	;# 
  1555   0003DA                     ADLTHH          equ	986	;# 
  1556   0003DB                     ADUTH           equ	987	;# 
  1557   0003DB                     ADUTHL          equ	987	;# 
  1558   0003DC                     ADUTHH          equ	988	;# 
  1559   0003DD                     ADERR           equ	989	;# 
  1560   0003DD                     ADERRL          equ	989	;# 
  1561   0003DE                     ADERRH          equ	990	;# 
  1562   0003DF                     ADSTPT          equ	991	;# 
  1563   0003DF                     ADSTPTL         equ	991	;# 
  1564   0003E0                     ADSTPTH         equ	992	;# 
  1565   0003E1                     ADFLTR          equ	993	;# 
  1566   0003E1                     ADFLTRL         equ	993	;# 
  1567   0003E2                     ADFLTRH         equ	994	;# 
  1568   0003E3                     ADACC           equ	995	;# 
  1569   0003E3                     ADACCL          equ	995	;# 
  1570   0003E4                     ADACCH          equ	996	;# 
  1571   0003E5                     ADACCU          equ	997	;# 
  1572   0003E6                     ADCNT           equ	998	;# 
  1573   0003E7                     ADRPT           equ	999	;# 
  1574   0003E8                     ADPREV          equ	1000	;# 
  1575   0003E8                     ADPREVL         equ	1000	;# 
  1576   0003E9                     ADPREVH         equ	1001	;# 
  1577   0003EA                     ADRES           equ	1002	;# 
  1578   0003EA                     ADRESL          equ	1002	;# 
  1579   0003EB                     ADRESH          equ	1003	;# 
  1580   0003EC                     ADPCH           equ	1004	;# 
  1581   0003EE                     ADACQ           equ	1006	;# 
  1582   0003EE                     ADACQL          equ	1006	;# 
  1583   0003EF                     ADACQH          equ	1007	;# 
  1584   0003F0                     ADCAP           equ	1008	;# 
  1585   0003F1                     ADPRE           equ	1009	;# 
  1586   0003F1                     ADPREL          equ	1009	;# 
  1587   0003F2                     ADPREH          equ	1010	;# 
  1588   0003F3                     ADCON0          equ	1011	;# 
  1589   0003F4                     ADCON1          equ	1012	;# 
  1590   0003F5                     ADCON2          equ	1013	;# 
  1591   0003F6                     ADCON3          equ	1014	;# 
  1592   0003F7                     ADSTAT          equ	1015	;# 
  1593   0003F8                     ADREF           equ	1016	;# 
  1594   0003F9                     ADACT           equ	1017	;# 
  1595   0003FA                     ADCLK           equ	1018	;# 
  1596   000400                     ANSELA          equ	1024	;# 
  1597   000401                     WPUA            equ	1025	;# 
  1598   000402                     ODCONA          equ	1026	;# 
  1599   000403                     SLRCONA         equ	1027	;# 
  1600   000404                     INLVLA          equ	1028	;# 
  1601   000405                     IOCAP           equ	1029	;# 
  1602   000406                     IOCAN           equ	1030	;# 
  1603   000407                     IOCAF           equ	1031	;# 
  1604   000408                     ANSELB          equ	1032	;# 
  1605   000409                     WPUB            equ	1033	;# 
  1606   00040A                     ODCONB          equ	1034	;# 
  1607   00040B                     SLRCONB         equ	1035	;# 
  1608   00040C                     INLVLB          equ	1036	;# 
  1609   00040D                     IOCBP           equ	1037	;# 
  1610   00040E                     IOCBN           equ	1038	;# 
  1611   00040F                     IOCBF           equ	1039	;# 
  1612   000410                     ANSELC          equ	1040	;# 
  1613   000411                     WPUC            equ	1041	;# 
  1614   000412                     ODCONC          equ	1042	;# 
  1615   000413                     SLRCONC         equ	1043	;# 
  1616   000414                     INLVLC          equ	1044	;# 
  1617   000415                     IOCCP           equ	1045	;# 
  1618   000416                     IOCCN           equ	1046	;# 
  1619   000417                     IOCCF           equ	1047	;# 
  1620   000418                     ANSELD          equ	1048	;# 
  1621   000419                     WPUD            equ	1049	;# 
  1622   00041A                     ODCOND          equ	1050	;# 
  1623   00041B                     SLRCOND         equ	1051	;# 
  1624   00041C                     INLVLD          equ	1052	;# 
  1625   000420                     ANSELE          equ	1056	;# 
  1626   000421                     WPUE            equ	1057	;# 
  1627   000422                     ODCONE          equ	1058	;# 
  1628   000423                     SLRCONE         equ	1059	;# 
  1629   000424                     INLVLE          equ	1060	;# 
  1630   000425                     IOCEP           equ	1061	;# 
  1631   000426                     IOCEN           equ	1062	;# 
  1632   000427                     IOCEF           equ	1063	;# 
  1633   000428                     ANSELF          equ	1064	;# 
  1634   000429                     WPUF            equ	1065	;# 
  1635   00042A                     ODCONF          equ	1066	;# 
  1636   00042B                     SLRCONF         equ	1067	;# 
  1637   00042C                     INLVLF          equ	1068	;# 
  1638   000440                     NCO1ACC         equ	1088	;# 
  1639   000440                     NCO1ACCL        equ	1088	;# 
  1640   000441                     NCO1ACCH        equ	1089	;# 
  1641   000442                     NCO1ACCU        equ	1090	;# 
  1642   000443                     NCO1INC         equ	1091	;# 
  1643   000443                     NCO1INCL        equ	1091	;# 
  1644   000444                     NCO1INCH        equ	1092	;# 
  1645   000445                     NCO1INCU        equ	1093	;# 
  1646   000446                     NCO1CON         equ	1094	;# 
  1647   000447                     NCO1CLK         equ	1095	;# 
  1648   000448                     NCO2ACC         equ	1096	;# 
  1649   000448                     NCO2ACCL        equ	1096	;# 
  1650   000449                     NCO2ACCH        equ	1097	;# 
  1651   00044A                     NCO2ACCU        equ	1098	;# 
  1652   00044B                     NCO2INC         equ	1099	;# 
  1653   00044B                     NCO2INCL        equ	1099	;# 
  1654   00044C                     NCO2INCH        equ	1100	;# 
  1655   00044D                     NCO2INCU        equ	1101	;# 
  1656   00044E                     NCO2CON         equ	1102	;# 
  1657   00044F                     NCO2CLK         equ	1103	;# 
  1658   000450                     NCO3ACC         equ	1104	;# 
  1659   000450                     NCO3ACCL        equ	1104	;# 
  1660   000451                     NCO3ACCH        equ	1105	;# 
  1661   000452                     NCO3ACCU        equ	1106	;# 
  1662   000453                     NCO3INC         equ	1107	;# 
  1663   000453                     NCO3INCL        equ	1107	;# 
  1664   000454                     NCO3INCH        equ	1108	;# 
  1665   000455                     NCO3INCU        equ	1109	;# 
  1666   000456                     NCO3CON         equ	1110	;# 
  1667   000457                     NCO3CLK         equ	1111	;# 
  1668   000459                     IVTLOCK         equ	1113	;# 
  1669   00045A                     IVTAD           equ	1114	;# 
  1670   00045A                     IVTADL          equ	1114	;# 
  1671   00045B                     IVTADH          equ	1115	;# 
  1672   00045C                     IVTADU          equ	1116	;# 
  1673   00045D                     IVTBASE         equ	1117	;# 
  1674   00045D                     IVTBASEL        equ	1117	;# 
  1675   00045E                     IVTBASEH        equ	1118	;# 
  1676   00045F                     IVTBASEU        equ	1119	;# 
  1677   000460                     PWM1ERS         equ	1120	;# 
  1678   000461                     PWM1CLK         equ	1121	;# 
  1679   000462                     PWM1LDS         equ	1122	;# 
  1680   000463                     PWM1PR          equ	1123	;# 
  1681   000463                     PWM1PRL         equ	1123	;# 
  1682   000464                     PWM1PRH         equ	1124	;# 
  1683   000465                     PWM1CPRE        equ	1125	;# 
  1684   000466                     PWM1PIPOS       equ	1126	;# 
  1685   000467                     PWM1GIR         equ	1127	;# 
  1686   000468                     PWM1GIE         equ	1128	;# 
  1687   000469                     PWM1CON         equ	1129	;# 
  1688   00046A                     PWM1S1CFG       equ	1130	;# 
  1689   00046B                     PWM1S1P1        equ	1131	;# 
  1690   00046B                     PWM1S1P1L       equ	1131	;# 
  1691   00046C                     PWM1S1P1H       equ	1132	;# 
  1692   00046D                     PWM1S1P2        equ	1133	;# 
  1693   00046D                     PWM1S1P2L       equ	1133	;# 
  1694   00046E                     PWM1S1P2H       equ	1134	;# 
  1695   00046F                     PWM2ERS         equ	1135	;# 
  1696   000470                     PWM2CLK         equ	1136	;# 
  1697   000471                     PWM2LDS         equ	1137	;# 
  1698   000472                     PWM2PR          equ	1138	;# 
  1699   000472                     PWM2PRL         equ	1138	;# 
  1700   000473                     PWM2PRH         equ	1139	;# 
  1701   000474                     PWM2CPRE        equ	1140	;# 
  1702   000475                     PWM2PIPOS       equ	1141	;# 
  1703   000476                     PWM2GIR         equ	1142	;# 
  1704   000477                     PWM2GIE         equ	1143	;# 
  1705   000478                     PWM2CON         equ	1144	;# 
  1706   000479                     PWM2S1CFG       equ	1145	;# 
  1707   00047A                     PWM2S1P1        equ	1146	;# 
  1708   00047A                     PWM2S1P1L       equ	1146	;# 
  1709   00047B                     PWM2S1P1H       equ	1147	;# 
  1710   00047C                     PWM2S1P2        equ	1148	;# 
  1711   00047C                     PWM2S1P2L       equ	1148	;# 
  1712   00047D                     PWM2S1P2H       equ	1149	;# 
  1713   00047E                     PWM3ERS         equ	1150	;# 
  1714   00047F                     PWM3CLK         equ	1151	;# 
  1715   000480                     PWM3LDS         equ	1152	;# 
  1716   000481                     PWM3PR          equ	1153	;# 
  1717   000481                     PWM3PRL         equ	1153	;# 
  1718   000482                     PWM3PRH         equ	1154	;# 
  1719   000483                     PWM3CPRE        equ	1155	;# 
  1720   000484                     PWM3PIPOS       equ	1156	;# 
  1721   000485                     PWM3GIR         equ	1157	;# 
  1722   000486                     PWM3GIE         equ	1158	;# 
  1723   000487                     PWM3CON         equ	1159	;# 
  1724   000488                     PWM3S1CFG       equ	1160	;# 
  1725   000489                     PWM3S1P1        equ	1161	;# 
  1726   000489                     PWM3S1P1L       equ	1161	;# 
  1727   00048A                     PWM3S1P1H       equ	1162	;# 
  1728   00048B                     PWM3S1P2        equ	1163	;# 
  1729   00048B                     PWM3S1P2L       equ	1163	;# 
  1730   00048C                     PWM3S1P2H       equ	1164	;# 
  1731   00049C                     PWMLOAD         equ	1180	;# 
  1732   00049D                     PWMEN           equ	1181	;# 
  1733   00049E                     PIE0            equ	1182	;# 
  1734   00049F                     PIE1            equ	1183	;# 
  1735   0004A0                     PIE2            equ	1184	;# 
  1736   0004A1                     PIE3            equ	1185	;# 
  1737   0004A2                     PIE4            equ	1186	;# 
  1738   0004A3                     PIE5            equ	1187	;# 
  1739   0004A4                     PIE6            equ	1188	;# 
  1740   0004A5                     PIE7            equ	1189	;# 
  1741   0004A6                     PIE8            equ	1190	;# 
  1742   0004A7                     PIE9            equ	1191	;# 
  1743   0004A8                     PIE10           equ	1192	;# 
  1744   0004A9                     PIE11           equ	1193	;# 
  1745   0004AA                     PIE12           equ	1194	;# 
  1746   0004AB                     PIE13           equ	1195	;# 
  1747   0004AC                     PIE14           equ	1196	;# 
  1748   0004AD                     PIE15           equ	1197	;# 
  1749   0004AE                     PIR0            equ	1198	;# 
  1750   0004AF                     PIR1            equ	1199	;# 
  1751   0004B0                     PIR2            equ	1200	;# 
  1752   0004B1                     PIR3            equ	1201	;# 
  1753   0004B2                     PIR4            equ	1202	;# 
  1754   0004B3                     PIR5            equ	1203	;# 
  1755   0004B4                     PIR6            equ	1204	;# 
  1756   0004B5                     PIR7            equ	1205	;# 
  1757   0004B6                     PIR8            equ	1206	;# 
  1758   0004B7                     PIR9            equ	1207	;# 
  1759   0004B8                     PIR10           equ	1208	;# 
  1760   0004B9                     PIR11           equ	1209	;# 
  1761   0004BA                     PIR12           equ	1210	;# 
  1762   0004BB                     PIR13           equ	1211	;# 
  1763   0004BC                     PIR14           equ	1212	;# 
  1764   0004BD                     PIR15           equ	1213	;# 
  1765   0004BE                     LATA            equ	1214	;# 
  1766   0004BF                     LATB            equ	1215	;# 
  1767   0004C0                     LATC            equ	1216	;# 
  1768   0004C1                     LATD            equ	1217	;# 
  1769   0004C2                     LATE            equ	1218	;# 
  1770   0004C3                     LATF            equ	1219	;# 
  1771   0004C6                     TRISA           equ	1222	;# 
  1772   0004C7                     TRISB           equ	1223	;# 
  1773   0004C8                     TRISC           equ	1224	;# 
  1774   0004C9                     TRISD           equ	1225	;# 
  1775   0004CA                     TRISE           equ	1226	;# 
  1776   0004CB                     TRISF           equ	1227	;# 
  1777   0004CE                     PORTA           equ	1230	;# 
  1778   0004CF                     PORTB           equ	1231	;# 
  1779   0004D0                     PORTC           equ	1232	;# 
  1780   0004D1                     PORTD           equ	1233	;# 
  1781   0004D2                     PORTE           equ	1234	;# 
  1782   0004D3                     PORTF           equ	1235	;# 
  1783   0004D6                     INTCON0         equ	1238	;# 
  1784   0004D7                     INTCON1         equ	1239	;# 
  1785   0004D8                     STATUS          equ	1240	;# 
  1786   0004D9                     FSR2            equ	1241	;# 
  1787   0004D9                     FSR2L           equ	1241	;# 
  1788   0004DA                     FSR2H           equ	1242	;# 
  1789   0004DB                     PLUSW2          equ	1243	;# 
  1790   0004DC                     PREINC2         equ	1244	;# 
  1791   0004DD                     POSTDEC2        equ	1245	;# 
  1792   0004DE                     POSTINC2        equ	1246	;# 
  1793   0004DF                     INDF2           equ	1247	;# 
  1794   0004E0                     BSR             equ	1248	;# 
  1795   0004E1                     FSR1            equ	1249	;# 
  1796   0004E1                     FSR1L           equ	1249	;# 
  1797   0004E2                     FSR1H           equ	1250	;# 
  1798   0004E3                     PLUSW1          equ	1251	;# 
  1799   0004E4                     PREINC1         equ	1252	;# 
  1800   0004E5                     POSTDEC1        equ	1253	;# 
  1801   0004E6                     POSTINC1        equ	1254	;# 
  1802   0004E7                     INDF1           equ	1255	;# 
  1803   0004E8                     WREG            equ	1256	;# 
  1804   0004E9                     FSR0            equ	1257	;# 
  1805   0004E9                     FSR0L           equ	1257	;# 
  1806   0004EA                     FSR0H           equ	1258	;# 
  1807   0004EB                     PLUSW0          equ	1259	;# 
  1808   0004EC                     PREINC0         equ	1260	;# 
  1809   0004ED                     POSTDEC0        equ	1261	;# 
  1810   0004EE                     POSTINC0        equ	1262	;# 
  1811   0004EF                     INDF0           equ	1263	;# 
  1812   0004F0                     PCON0           equ	1264	;# 
  1813   0004F1                     PCON1           equ	1265	;# 
  1814   0004F2                     CPUDOZE         equ	1266	;# 
  1815   0004F3                     PROD            equ	1267	;# 
  1816   0004F3                     PRODL           equ	1267	;# 
  1817   0004F4                     PRODH           equ	1268	;# 
  1818   0004F5                     TABLAT          equ	1269	;# 
  1819   0004F6                     TBLPTR          equ	1270	;# 
  1820   0004F6                     TBLPTRL         equ	1270	;# 
  1821   0004F7                     TBLPTRH         equ	1271	;# 
  1822   0004F8                     TBLPTRU         equ	1272	;# 
  1823   0004F9                     PCLAT           equ	1273	;# 
  1824   0004F9                     PCL             equ	1273	;# 
  1825   0004FA                     PCLATH          equ	1274	;# 
  1826   0004FB                     PCLATU          equ	1275	;# 
  1827   0004FC                     STKPTR          equ	1276	;# 
  1828   0004FD                     TOS             equ	1277	;# 
  1829   0004FD                     TOSL            equ	1277	;# 
  1830   0004FE                     TOSH            equ	1278	;# 
  1831   0004FF                     TOSU            equ	1279	;# 
  1832   000039                     CLKRCON         equ	57	;# 
  1833   00003A                     CLKRCLK         equ	58	;# 
  1834   000040                     NVMCON0         equ	64	;# 
  1835   000041                     NVMCON1         equ	65	;# 
  1836   000042                     NVMLOCK         equ	66	;# 
  1837   000043                     NVMADR          equ	67	;# 
  1838   000043                     NVMADRL         equ	67	;# 
  1839   000044                     NVMADRH         equ	68	;# 
  1840   000045                     NVMADRU         equ	69	;# 
  1841   000046                     NVMDAT          equ	70	;# 
  1842   000046                     NVMDATL         equ	70	;# 
  1843   000047                     NVMDATH         equ	71	;# 
  1844   000048                     VREGCON         equ	72	;# 
  1845   000049                     BORCON          equ	73	;# 
  1846   00004A                     HLVDCON0        equ	74	;# 
  1847   00004B                     HLVDCON1        equ	75	;# 
  1848   00004C                     ZCDCON          equ	76	;# 
  1849   000060                     PMD0            equ	96	;# 
  1850   000061                     PMD1            equ	97	;# 
  1851   000063                     PMD3            equ	99	;# 
  1852   000064                     PMD4            equ	100	;# 
  1853   000065                     PMD5            equ	101	;# 
  1854   000066                     PMD6            equ	102	;# 
  1855   000067                     PMD7            equ	103	;# 
  1856   000068                     PMD8            equ	104	;# 
  1857   00006A                     MD1CON0         equ	106	;# 
  1858   00006B                     MD1CON1         equ	107	;# 
  1859   00006C                     MD1SRC          equ	108	;# 
  1860   00006D                     MD1CARL         equ	109	;# 
  1861   00006E                     MD1CARH         equ	110	;# 
  1862   00006F                     CMOUT           equ	111	;# 
  1863   000070                     CM1CON0         equ	112	;# 
  1864   000071                     CM1CON1         equ	113	;# 
  1865   000072                     CM1NCH          equ	114	;# 
  1866   000073                     CM1PCH          equ	115	;# 
  1867   000074                     CM2CON0         equ	116	;# 
  1868   000075                     CM2CON1         equ	117	;# 
  1869   000076                     CM2NCH          equ	118	;# 
  1870   000077                     CM2PCH          equ	119	;# 
  1871   000078                     WDTCON0         equ	120	;# 
  1872   000079                     WDTCON1         equ	121	;# 
  1873   00007A                     WDTPS           equ	122	;# 
  1874   00007A                     WDTPSL          equ	122	;# 
  1875   00007B                     WDTPSH          equ	123	;# 
  1876   00007C                     WDTTMR          equ	124	;# 
  1877   00007D                     DAC1DAT         equ	125	;# 
  1878   00007D                     DAC1DATL        equ	125	;# 
  1879   00007F                     DAC1CON         equ	127	;# 
  1880   000080                     SPI1RXB         equ	128	;# 
  1881   000081                     SPI1TXB         equ	129	;# 
  1882   000082                     SPI1TCNT        equ	130	;# 
  1883   000082                     SPI1TCNTL       equ	130	;# 
  1884   000083                     SPI1TCNTH       equ	131	;# 
  1885   000084                     SPI1CON0        equ	132	;# 
  1886   000085                     SPI1CON1        equ	133	;# 
  1887   000086                     SPI1CON2        equ	134	;# 
  1888   000087                     SPI1STATUS      equ	135	;# 
  1889   000088                     SPI1TWIDTH      equ	136	;# 
  1890   000089                     SPI1BAUD        equ	137	;# 
  1891   00008A                     SPI1INTF        equ	138	;# 
  1892   00008B                     SPI1INTE        equ	139	;# 
  1893   00008C                     SPI1CLK         equ	140	;# 
  1894   00008D                     SPI2RXB         equ	141	;# 
  1895   00008E                     SPI2TXB         equ	142	;# 
  1896   00008F                     SPI2TCNT        equ	143	;# 
  1897   00008F                     SPI2TCNTL       equ	143	;# 
  1898   000090                     SPI2TCNTH       equ	144	;# 
  1899   000091                     SPI2CON0        equ	145	;# 
  1900   000092                     SPI2CON1        equ	146	;# 
  1901   000093                     SPI2CON2        equ	147	;# 
  1902   000094                     SPI2STATUS      equ	148	;# 
  1903   000095                     SPI2TWIDTH      equ	149	;# 
  1904   000096                     SPI2BAUD        equ	150	;# 
  1905   000097                     SPI2INTF        equ	151	;# 
  1906   000098                     SPI2INTE        equ	152	;# 
  1907   000099                     SPI2CLK         equ	153	;# 
  1908   0000AC                     ACTCON          equ	172	;# 
  1909   0000AD                     OSCCON1         equ	173	;# 
  1910   0000AE                     OSCCON2         equ	174	;# 
  1911   0000AF                     OSCCON3         equ	175	;# 
  1912   0000B0                     OSCTUNE         equ	176	;# 
  1913   0000B1                     OSCFRQ          equ	177	;# 
  1914   0000B1                     OSCFREQ         equ	177	;# 
  1915   0000B2                     OSCSTAT         equ	178	;# 
  1916   0000B2                     OSCSTAT1        equ	178	;# 
  1917   0000B3                     OSCEN           equ	179	;# 
  1918   0000B4                     PRLOCK          equ	180	;# 
  1919   0000B5                     SCANPR          equ	181	;# 
  1920   0000B6                     DMA1PR          equ	182	;# 
  1921   0000B7                     DMA2PR          equ	183	;# 
  1922   0000B8                     DMA3PR          equ	184	;# 
  1923   0000B9                     DMA4PR          equ	185	;# 
  1924   0000BA                     DMA5PR          equ	186	;# 
  1925   0000BB                     DMA6PR          equ	187	;# 
  1926   0000BE                     MAINPR          equ	190	;# 
  1927   0000BF                     ISRPR           equ	191	;# 
  1928   0000D4                     CLCDATA         equ	212	;# 
  1929   0000D5                     CLCSELECT       equ	213	;# 
  1930   0000D6                     CLCnCON         equ	214	;# 
  1931   0000D7                     CLCnPOL         equ	215	;# 
  1932   0000D8                     CLCnSEL0        equ	216	;# 
  1933   0000D9                     CLCnSEL1        equ	217	;# 
  1934   0000DA                     CLCnSEL2        equ	218	;# 
  1935   0000DB                     CLCnSEL3        equ	219	;# 
  1936   0000DC                     CLCnGLS0        equ	220	;# 
  1937   0000DD                     CLCnGLS1        equ	221	;# 
  1938   0000DE                     CLCnGLS2        equ	222	;# 
  1939   0000DF                     CLCnGLS3        equ	223	;# 
  1940   0000E8                     DMASELECT       equ	232	;# 
  1941   0000E9                     DMAnBUF         equ	233	;# 
  1942   0000EA                     DMAnDCNT        equ	234	;# 
  1943   0000EA                     DMAnDCNTL       equ	234	;# 
  1944   0000EB                     DMAnDCNTH       equ	235	;# 
  1945   0000EC                     DMAnDPTR        equ	236	;# 
  1946   0000EC                     DMAnDPTRL       equ	236	;# 
  1947   0000ED                     DMAnDPTRH       equ	237	;# 
  1948   0000EE                     DMAnDSZ         equ	238	;# 
  1949   0000EE                     DMAnDSZL        equ	238	;# 
  1950   0000EF                     DMAnDSZH        equ	239	;# 
  1951   0000F0                     DMAnDSA         equ	240	;# 
  1952   0000F0                     DMAnDSAL        equ	240	;# 
  1953   0000F1                     DMAnDSAH        equ	241	;# 
  1954   0000F2                     DMAnSCNT        equ	242	;# 
  1955   0000F2                     DMAnSCNTL       equ	242	;# 
  1956   0000F3                     DMAnSCNTH       equ	243	;# 
  1957   0000F4                     DMAnSPTR        equ	244	;# 
  1958   0000F4                     DMAnSPTRL       equ	244	;# 
  1959   0000F5                     DMAnSPTRH       equ	245	;# 
  1960   0000F6                     DMAnSPTRU       equ	246	;# 
  1961   0000F7                     DMAnSSZ         equ	247	;# 
  1962   0000F7                     DMAnSSZL        equ	247	;# 
  1963   0000F8                     DMAnSSZH        equ	248	;# 
  1964   0000F9                     DMAnSSA         equ	249	;# 
  1965   0000F9                     DMAnSSAL        equ	249	;# 
  1966   0000FA                     DMAnSSAH        equ	250	;# 
  1967   0000FB                     DMAnSSAU        equ	251	;# 
  1968   0000FC                     DMAnCON0        equ	252	;# 
  1969   0000FD                     DMAnCON1        equ	253	;# 
  1970   0000FE                     DMAnAIRQ        equ	254	;# 
  1971   0000FF                     DMAnSIRQ        equ	255	;# 
  1972   000200                     PPSLOCK         equ	512	;# 
  1973   000201                     RA0PPS          equ	513	;# 
  1974   000202                     RA1PPS          equ	514	;# 
  1975   000203                     RA2PPS          equ	515	;# 
  1976   000204                     RA3PPS          equ	516	;# 
  1977   000205                     RA4PPS          equ	517	;# 
  1978   000206                     RA5PPS          equ	518	;# 
  1979   000207                     RA6PPS          equ	519	;# 
  1980   000208                     RA7PPS          equ	520	;# 
  1981   000209                     RB0PPS          equ	521	;# 
  1982   00020A                     RB1PPS          equ	522	;# 
  1983   00020B                     RB2PPS          equ	523	;# 
  1984   00020C                     RB3PPS          equ	524	;# 
  1985   00020D                     RB4PPS          equ	525	;# 
  1986   00020E                     RB5PPS          equ	526	;# 
  1987   00020F                     RB6PPS          equ	527	;# 
  1988   000210                     RB7PPS          equ	528	;# 
  1989   000211                     RC0PPS          equ	529	;# 
  1990   000212                     RC1PPS          equ	530	;# 
  1991   000213                     RC2PPS          equ	531	;# 
  1992   000214                     RC3PPS          equ	532	;# 
  1993   000215                     RC4PPS          equ	533	;# 
  1994   000216                     RC5PPS          equ	534	;# 
  1995   000217                     RC6PPS          equ	535	;# 
  1996   000218                     RC7PPS          equ	536	;# 
  1997   000219                     RD0PPS          equ	537	;# 
  1998   00021A                     RD1PPS          equ	538	;# 
  1999   00021B                     RD2PPS          equ	539	;# 
  2000   00021C                     RD3PPS          equ	540	;# 
  2001   00021D                     RD4PPS          equ	541	;# 
  2002   00021E                     RD5PPS          equ	542	;# 
  2003   00021F                     RD6PPS          equ	543	;# 
  2004   000220                     RD7PPS          equ	544	;# 
  2005   000221                     RE0PPS          equ	545	;# 
  2006   000222                     RE1PPS          equ	546	;# 
  2007   000223                     RE2PPS          equ	547	;# 
  2008   000229                     RF0PPS          equ	553	;# 
  2009   00022A                     RF1PPS          equ	554	;# 
  2010   00022B                     RF2PPS          equ	555	;# 
  2011   00022C                     RF3PPS          equ	556	;# 
  2012   00022D                     RF4PPS          equ	557	;# 
  2013   00022E                     RF5PPS          equ	558	;# 
  2014   00022F                     RF6PPS          equ	559	;# 
  2015   000230                     RF7PPS          equ	560	;# 
  2016   00023E                     INT0PPS         equ	574	;# 
  2017   00023F                     INT1PPS         equ	575	;# 
  2018   000240                     INT2PPS         equ	576	;# 
  2019   000241                     T0CKIPPS        equ	577	;# 
  2020   000242                     T1CKIPPS        equ	578	;# 
  2021   000243                     T1GPPS          equ	579	;# 
  2022   000244                     T3CKIPPS        equ	580	;# 
  2023   000245                     T3GPPS          equ	581	;# 
  2024   000246                     T5CKIPPS        equ	582	;# 
  2025   000247                     T5GPPS          equ	583	;# 
  2026   000248                     T2INPPS         equ	584	;# 
  2027   000249                     T4INPPS         equ	585	;# 
  2028   00024A                     T6INPPS         equ	586	;# 
  2029   00024F                     CCP1PPS         equ	591	;# 
  2030   000250                     CCP2PPS         equ	592	;# 
  2031   000251                     CCP3PPS         equ	593	;# 
  2032   000253                     PWM1ERSPPS      equ	595	;# 
  2033   000254                     PWM2ERSPPS      equ	596	;# 
  2034   000255                     PWM3ERSPPS      equ	597	;# 
  2035   000257                     PWMIN0PPS       equ	599	;# 
  2036   000258                     PWMIN1PPS       equ	600	;# 
  2037   000259                     SMT1WINPPS      equ	601	;# 
  2038   00025A                     SMT1SIGPPS      equ	602	;# 
  2039   00025B                     CWG1PPS         equ	603	;# 
  2040   00025B                     CWG1INPPS       equ	603	;# 
  2041   00025C                     CWG2PPS         equ	604	;# 
  2042   00025C                     CWG2INPPS       equ	604	;# 
  2043   00025D                     CWG3PPS         equ	605	;# 
  2044   00025D                     CWG3INPPS       equ	605	;# 
  2045   00025E                     MD1CARLPPS      equ	606	;# 
  2046   00025E                     MDCARLPPS       equ	606	;# 
  2047   00025F                     MD1CARHPPS      equ	607	;# 
  2048   00025F                     MDCARHPPS       equ	607	;# 
  2049   000260                     MD1SRCPPS       equ	608	;# 
  2050   000260                     MDSRCPPS        equ	608	;# 
  2051   000261                     CLCIN0PPS       equ	609	;# 
  2052   000262                     CLCIN1PPS       equ	610	;# 
  2053   000263                     CLCIN2PPS       equ	611	;# 
  2054   000264                     CLCIN3PPS       equ	612	;# 
  2055   000265                     CLCIN4PPS       equ	613	;# 
  2056   000266                     CLCIN5PPS       equ	614	;# 
  2057   000267                     CLCIN6PPS       equ	615	;# 
  2058   000268                     CLCIN7PPS       equ	616	;# 
  2059   000269                     ADACTPPS        equ	617	;# 
  2060   00026A                     SPI1SCKPPS      equ	618	;# 
  2061   00026B                     SPI1SDIPPS      equ	619	;# 
  2062   00026C                     SPI1SSPPS       equ	620	;# 
  2063   00026D                     SPI2SCKPPS      equ	621	;# 
  2064   00026E                     SPI2SDIPPS      equ	622	;# 
  2065   00026F                     SPI2SSPPS       equ	623	;# 
  2066   000270                     I2C1SDAPPS      equ	624	;# 
  2067   000271                     I2C1SCLPPS      equ	625	;# 
  2068   000272                     U1RXPPS         equ	626	;# 
  2069   000273                     U1CTSPPS        equ	627	;# 
  2070   000274                     U2RXPPS         equ	628	;# 
  2071   000275                     U2CTSPPS        equ	629	;# 
  2072   000276                     U3RXPPS         equ	630	;# 
  2073   000277                     U3CTSPPS        equ	631	;# 
  2074   000278                     U4RXPPS         equ	632	;# 
  2075   000279                     U4CTSPPS        equ	633	;# 
  2076   00027A                     U5RXPPS         equ	634	;# 
  2077   00027B                     U5CTSPPS        equ	635	;# 
  2078   000286                     RC4I2C          equ	646	;# 
  2079   000287                     RC3I2C          equ	647	;# 
  2080   000288                     RB2I2C          equ	648	;# 
  2081   000289                     RB1I2C          equ	649	;# 
  2082   00028B                     I2C1RXB         equ	651	;# 
  2083   00028C                     I2C1TXB         equ	652	;# 
  2084   00028D                     I2C1CNT         equ	653	;# 
  2085   00028E                     I2C1ADB0        equ	654	;# 
  2086   00028F                     I2C1ADB1        equ	655	;# 
  2087   000290                     I2C1ADR0        equ	656	;# 
  2088   000291                     I2C1ADR1        equ	657	;# 
  2089   000292                     I2C1ADR2        equ	658	;# 
  2090   000293                     I2C1ADR3        equ	659	;# 
  2091   000294                     I2C1CON0        equ	660	;# 
  2092   000295                     I2C1CON1        equ	661	;# 
  2093   000296                     I2C1CON2        equ	662	;# 
  2094   000297                     I2C1ERR         equ	663	;# 
  2095   000298                     I2C1STAT0       equ	664	;# 
  2096   000299                     I2C1STAT1       equ	665	;# 
  2097   00029A                     I2C1PIR         equ	666	;# 
  2098   00029B                     I2C1PIE         equ	667	;# 
  2099   00029C                     I2C1CLK         equ	668	;# 
  2100   00029D                     I2C1BTO         equ	669	;# 
  2101   0002A1                     U1RXB           equ	673	;# 
  2102   0002A1                     U1RXBL          equ	673	;# 
  2103   0002A2                     U1RXCHK         equ	674	;# 
  2104   0002A3                     U1TXB           equ	675	;# 
  2105   0002A3                     U1TXBL          equ	675	;# 
  2106   0002A4                     U1TXCHK         equ	676	;# 
  2107   0002A5                     U1P1            equ	677	;# 
  2108   0002A5                     U1P1L           equ	677	;# 
  2109   0002A6                     U1P1H           equ	678	;# 
  2110   0002A7                     U1P2            equ	679	;# 
  2111   0002A7                     U1P2L           equ	679	;# 
  2112   0002A8                     U1P2H           equ	680	;# 
  2113   0002A9                     U1P3            equ	681	;# 
  2114   0002A9                     U1P3L           equ	681	;# 
  2115   0002AA                     U1P3H           equ	682	;# 
  2116   0002AB                     U1CON0          equ	683	;# 
  2117   0002AC                     U1CON1          equ	684	;# 
  2118   0002AD                     U1CON2          equ	685	;# 
  2119   0002AE                     U1BRG           equ	686	;# 
  2120   0002AE                     U1BRGL          equ	686	;# 
  2121   0002AF                     U1BRGH          equ	687	;# 
  2122   0002B0                     U1FIFO          equ	688	;# 
  2123   0002B1                     U1UIR           equ	689	;# 
  2124   0002B2                     U1ERRIR         equ	690	;# 
  2125   0002B3                     U1ERRIE         equ	691	;# 
  2126   0002B4                     U2RXB           equ	692	;# 
  2127   0002B4                     U2RXBL          equ	692	;# 
  2128   0002B6                     U2TXB           equ	694	;# 
  2129   0002B6                     U2TXBL          equ	694	;# 
  2130   0002B8                     U2P1            equ	696	;# 
  2131   0002B8                     U2P1L           equ	696	;# 
  2132   0002BA                     U2P2            equ	698	;# 
  2133   0002BA                     U2P2L           equ	698	;# 
  2134   0002BC                     U2P3            equ	700	;# 
  2135   0002BC                     U2P3L           equ	700	;# 
  2136   0002BE                     U2CON0          equ	702	;# 
  2137   0002BF                     U2CON1          equ	703	;# 
  2138   0002C0                     U2CON2          equ	704	;# 
  2139   0002C1                     U2BRG           equ	705	;# 
  2140   0002C1                     U2BRGL          equ	705	;# 
  2141   0002C2                     U2BRGH          equ	706	;# 
  2142   0002C3                     U2FIFO          equ	707	;# 
  2143   0002C4                     U2UIR           equ	708	;# 
  2144   0002C5                     U2ERRIR         equ	709	;# 
  2145   0002C6                     U2ERRIE         equ	710	;# 
  2146   0002C7                     U3RXB           equ	711	;# 
  2147   0002C7                     U3RXBL          equ	711	;# 
  2148   0002C9                     U3TXB           equ	713	;# 
  2149   0002C9                     U3TXBL          equ	713	;# 
  2150   0002CB                     U3P1            equ	715	;# 
  2151   0002CB                     U3P1L           equ	715	;# 
  2152   0002CD                     U3P2            equ	717	;# 
  2153   0002CD                     U3P2L           equ	717	;# 
  2154   0002CF                     U3P3            equ	719	;# 
  2155   0002CF                     U3P3L           equ	719	;# 
  2156   0002D1                     U3CON0          equ	721	;# 
  2157   0002D2                     U3CON1          equ	722	;# 
  2158   0002D3                     U3CON2          equ	723	;# 
  2159   0002D4                     U3BRG           equ	724	;# 
  2160   0002D4                     U3BRGL          equ	724	;# 
  2161   0002D5                     U3BRGH          equ	725	;# 
  2162   0002D6                     U3FIFO          equ	726	;# 
  2163   0002D7                     U3UIR           equ	727	;# 
  2164   0002D8                     U3ERRIR         equ	728	;# 
  2165   0002D9                     U3ERRIE         equ	729	;# 
  2166   0002DA                     U4RXB           equ	730	;# 
  2167   0002DA                     U4RXBL          equ	730	;# 
  2168   0002DC                     U4TXB           equ	732	;# 
  2169   0002DC                     U4TXBL          equ	732	;# 
  2170   0002DE                     U4P1            equ	734	;# 
  2171   0002DE                     U4P1L           equ	734	;# 
  2172   0002E0                     U4P2            equ	736	;# 
  2173   0002E0                     U4P2L           equ	736	;# 
  2174   0002E2                     U4P3            equ	738	;# 
  2175   0002E2                     U4P3L           equ	738	;# 
  2176   0002E4                     U4CON0          equ	740	;# 
  2177   0002E5                     U4CON1          equ	741	;# 
  2178   0002E6                     U4CON2          equ	742	;# 
  2179   0002E7                     U4BRG           equ	743	;# 
  2180   0002E7                     U4BRGL          equ	743	;# 
  2181   0002E8                     U4BRGH          equ	744	;# 
  2182   0002E9                     U4FIFO          equ	745	;# 
  2183   0002EA                     U4UIR           equ	746	;# 
  2184   0002EB                     U4ERRIR         equ	747	;# 
  2185   0002EC                     U4ERRIE         equ	748	;# 
  2186   0002ED                     U5RXB           equ	749	;# 
  2187   0002ED                     U5RXBL          equ	749	;# 
  2188   0002EF                     U5TXB           equ	751	;# 
  2189   0002EF                     U5TXBL          equ	751	;# 
  2190   0002F1                     U5P1            equ	753	;# 
  2191   0002F1                     U5P1L           equ	753	;# 
  2192   0002F3                     U5P2            equ	755	;# 
  2193   0002F3                     U5P2L           equ	755	;# 
  2194   0002F5                     U5P3            equ	757	;# 
  2195   0002F5                     U5P3L           equ	757	;# 
  2196   0002F7                     U5CON0          equ	759	;# 
  2197   0002F8                     U5CON1          equ	760	;# 
  2198   0002F9                     U5CON2          equ	761	;# 
  2199   0002FA                     U5BRG           equ	762	;# 
  2200   0002FA                     U5BRGL          equ	762	;# 
  2201   0002FB                     U5BRGH          equ	763	;# 
  2202   0002FC                     U5FIFO          equ	764	;# 
  2203   0002FD                     U5UIR           equ	765	;# 
  2204   0002FE                     U5ERRIR         equ	766	;# 
  2205   0002FF                     U5ERRIE         equ	767	;# 
  2206   000300                     SMT1TMR         equ	768	;# 
  2207   000300                     SMT1TMRL        equ	768	;# 
  2208   000301                     SMT1TMRH        equ	769	;# 
  2209   000302                     SMT1TMRU        equ	770	;# 
  2210   000303                     SMT1CPR         equ	771	;# 
  2211   000303                     SMT1CPRL        equ	771	;# 
  2212   000304                     SMT1CPRH        equ	772	;# 
  2213   000305                     SMT1CPRU        equ	773	;# 
  2214   000306                     SMT1CPW         equ	774	;# 
  2215   000306                     SMT1CPWL        equ	774	;# 
  2216   000307                     SMT1CPWH        equ	775	;# 
  2217   000308                     SMT1CPWU        equ	776	;# 
  2218   000309                     SMT1PR          equ	777	;# 
  2219   000309                     SMT1PRL         equ	777	;# 
  2220   00030A                     SMT1PRH         equ	778	;# 
  2221   00030B                     SMT1PRU         equ	779	;# 
  2222   00030C                     SMT1CON0        equ	780	;# 
  2223   00030D                     SMT1CON1        equ	781	;# 
  2224   00030E                     SMT1STAT        equ	782	;# 
  2225   00030F                     SMT1CLK         equ	783	;# 
  2226   000310                     SMT1SIG         equ	784	;# 
  2227   000311                     SMT1WIN         equ	785	;# 
  2228   000318                     TMR0L           equ	792	;# 
  2229   000318                     TMR0            equ	792	;# 
  2230   000319                     TMR0H           equ	793	;# 
  2231   000319                     PR0             equ	793	;# 
  2232   00031A                     T0CON0          equ	794	;# 
  2233   00031B                     T0CON1          equ	795	;# 
  2234   00031C                     TMR1            equ	796	;# 
  2235   00031C                     TMR1L           equ	796	;# 
  2236   00031D                     TMR1H           equ	797	;# 
  2237   00031E                     T1CON           equ	798	;# 
  2238   00031E                     TMR1CON         equ	798	;# 
  2239   00031F                     T1GCON          equ	799	;# 
  2240   00031F                     TMR1GCON        equ	799	;# 
  2241   000320                     T1GATE          equ	800	;# 
  2242   000320                     TMR1GATE        equ	800	;# 
  2243   000321                     T1CLK           equ	801	;# 
  2244   000321                     TMR1CLK         equ	801	;# 
  2245   000321                     PR1             equ	801	;# 
  2246   000322                     T2TMR           equ	802	;# 
  2247   000322                     TMR2            equ	802	;# 
  2248   000323                     T2PR            equ	803	;# 
  2249   000323                     PR2             equ	803	;# 
  2250   000324                     T2CON           equ	804	;# 
  2251   000325                     T2HLT           equ	805	;# 
  2252   000326                     T2CLKCON        equ	806	;# 
  2253   000326                     T2CLK           equ	806	;# 
  2254   000327                     T2RST           equ	807	;# 
  2255   000328                     TMR3            equ	808	;# 
  2256   000328                     TMR3L           equ	808	;# 
  2257   000329                     TMR3H           equ	809	;# 
  2258   00032A                     T3CON           equ	810	;# 
  2259   00032A                     TMR3CON         equ	810	;# 
  2260   00032B                     T3GCON          equ	811	;# 
  2261   00032B                     TMR3GCON        equ	811	;# 
  2262   00032C                     T3GATE          equ	812	;# 
  2263   00032C                     TMR3GATE        equ	812	;# 
  2264   00032D                     T3CLK           equ	813	;# 
  2265   00032D                     TMR3CLK         equ	813	;# 
  2266   00032D                     PR3             equ	813	;# 
  2267   00032E                     T4TMR           equ	814	;# 
  2268   00032E                     TMR4            equ	814	;# 
  2269   00032F                     T4PR            equ	815	;# 
  2270   00032F                     PR4             equ	815	;# 
  2271   000330                     T4CON           equ	816	;# 
  2272   000331                     T4HLT           equ	817	;# 
  2273   000332                     T4CLKCON        equ	818	;# 
  2274   000332                     T4CLK           equ	818	;# 
  2275   000333                     T4RST           equ	819	;# 
  2276   000334                     TMR5            equ	820	;# 
  2277   000334                     TMR5L           equ	820	;# 
  2278   000335                     TMR5H           equ	821	;# 
  2279   000336                     T5CON           equ	822	;# 
  2280   000336                     TMR5CON         equ	822	;# 
  2281   000337                     T5GCON          equ	823	;# 
  2282   000337                     TMR5GCON        equ	823	;# 
  2283   000338                     T5GATE          equ	824	;# 
  2284   000338                     TMR5GATE        equ	824	;# 
  2285   000339                     T5CLK           equ	825	;# 
  2286   000339                     TMR5CLK         equ	825	;# 
  2287   000339                     PR5             equ	825	;# 
  2288   00033A                     T6TMR           equ	826	;# 
  2289   00033A                     TMR6            equ	826	;# 
  2290   00033B                     T6PR            equ	827	;# 
  2291   00033B                     PR6             equ	827	;# 
  2292   00033C                     T6CON           equ	828	;# 
  2293   00033D                     T6HLT           equ	829	;# 
  2294   00033E                     T6CLKCON        equ	830	;# 
  2295   00033E                     T6CLK           equ	830	;# 
  2296   00033F                     T6RST           equ	831	;# 
  2297   000340                     CCPR1           equ	832	;# 
  2298   000340                     CCPR1L          equ	832	;# 
  2299   000341                     CCPR1H          equ	833	;# 
  2300   000342                     CCP1CON         equ	834	;# 
  2301   000343                     CCP1CAP         equ	835	;# 
  2302   000344                     CCPR2           equ	836	;# 
  2303   000344                     CCPR2L          equ	836	;# 
  2304   000345                     CCPR2H          equ	837	;# 
  2305   000346                     CCP2CON         equ	838	;# 
  2306   000347                     CCP2CAP         equ	839	;# 
  2307   000348                     CCPR3           equ	840	;# 
  2308   000348                     CCPR3L          equ	840	;# 
  2309   000349                     CCPR3H          equ	841	;# 
  2310   00034A                     CCP3CON         equ	842	;# 
  2311   00034B                     CCP3CAP         equ	843	;# 
  2312   00034C                     CCPTMRS0        equ	844	;# 
  2313   00034F                     CRCDATA         equ	847	;# 
  2314   00034F                     CRCDATL         equ	847	;# 
  2315   000350                     CRCDATH         equ	848	;# 
  2316   000351                     CRCACC          equ	849	;# 
  2317   000351                     CRCACCL         equ	849	;# 
  2318   000352                     CRCACCH         equ	850	;# 
  2319   000353                     CRCSHFT         equ	851	;# 
  2320   000353                     CRCSHIFTL       equ	851	;# 
  2321   000354                     CRCSHIFTH       equ	852	;# 
  2322   000355                     CRCXOR          equ	853	;# 
  2323   000355                     CRCXORL         equ	853	;# 
  2324   000356                     CRCXORH         equ	854	;# 
  2325   000357                     CRCCON0         equ	855	;# 
  2326   000358                     CRCCON1         equ	856	;# 
  2327   00035A                     SCANLADR        equ	858	;# 
  2328   00035A                     SCANLADRL       equ	858	;# 
  2329   00035B                     SCANLADRH       equ	859	;# 
  2330   00035C                     SCANLADRU       equ	860	;# 
  2331   00035D                     SCANHADR        equ	861	;# 
  2332   00035D                     SCANHADRL       equ	861	;# 
  2333   00035E                     SCANHADRH       equ	862	;# 
  2334   00035F                     SCANHADRU       equ	863	;# 
  2335   000360                     SCANCON0        equ	864	;# 
  2336   000361                     SCANTRIG        equ	865	;# 
  2337   000362                     IPR0            equ	866	;# 
  2338   000363                     IPR1            equ	867	;# 
  2339   000364                     IPR2            equ	868	;# 
  2340   000365                     IPR3            equ	869	;# 
  2341   000366                     IPR4            equ	870	;# 
  2342   000367                     IPR5            equ	871	;# 
  2343   000368                     IPR6            equ	872	;# 
  2344   000369                     IPR7            equ	873	;# 
  2345   00036A                     IPR8            equ	874	;# 
  2346   00036B                     IPR9            equ	875	;# 
  2347   00036C                     IPR10           equ	876	;# 
  2348   00036D                     IPR11           equ	877	;# 
  2349   00036E                     IPR12           equ	878	;# 
  2350   00036F                     IPR13           equ	879	;# 
  2351   000370                     IPR14           equ	880	;# 
  2352   000371                     IPR15           equ	881	;# 
  2353   000373                     STATUS_CSHAD    equ	883	;# 
  2354   000374                     WREG_CSHAD      equ	884	;# 
  2355   000375                     BSR_CSHAD       equ	885	;# 
  2356   000376                     SHADCON         equ	886	;# 
  2357   000377                     STATUS_SHAD     equ	887	;# 
  2358   000378                     WREG_SHAD       equ	888	;# 
  2359   000379                     BSR_SHAD        equ	889	;# 
  2360   00037A                     PCLATH_SHAD     equ	890	;# 
  2361   00037B                     PCLATU_SHAD     equ	891	;# 
  2362   00037C                     FSR0SH          equ	892	;# 
  2363   00037C                     FSR0L_SHAD      equ	892	;# 
  2364   00037D                     FSR0H_SHAD      equ	893	;# 
  2365   00037E                     FSR1SH          equ	894	;# 
  2366   00037E                     FSR1L_SHAD      equ	894	;# 
  2367   00037F                     FSR1H_SHAD      equ	895	;# 
  2368   000380                     FSR2SH          equ	896	;# 
  2369   000380                     FSR2L_SHAD      equ	896	;# 
  2370   000381                     FSR2H_SHAD      equ	897	;# 
  2371   000382                     PRODSH          equ	898	;# 
  2372   000382                     PRODL_SHAD      equ	898	;# 
  2373   000383                     PRODH_SHAD      equ	899	;# 
  2374   0003BC                     CWG1CLK         equ	956	;# 
  2375   0003BC                     CWG1CLKCON      equ	956	;# 
  2376   0003BD                     CWG1ISM         equ	957	;# 
  2377   0003BD                     CWG1DAT         equ	957	;# 
  2378   0003BE                     CWG1DBR         equ	958	;# 
  2379   0003BF                     CWG1DBF         equ	959	;# 
  2380   0003C0                     CWG1CON0        equ	960	;# 
  2381   0003C1                     CWG1CON1        equ	961	;# 
  2382   0003C2                     CWG1AS0         equ	962	;# 
  2383   0003C3                     CWG1AS1         equ	963	;# 
  2384   0003C4                     CWG1STR         equ	964	;# 
  2385   0003C5                     CWG2CLK         equ	965	;# 
  2386   0003C5                     CWG2CLKCON      equ	965	;# 
  2387   0003C6                     CWG2ISM         equ	966	;# 
  2388   0003C6                     CWG2DAT         equ	966	;# 
  2389   0003C7                     CWG2DBR         equ	967	;# 
  2390   0003C8                     CWG2DBF         equ	968	;# 
  2391   0003C9                     CWG2CON0        equ	969	;# 
  2392   0003CA                     CWG2CON1        equ	970	;# 
  2393   0003CB                     CWG2AS0         equ	971	;# 
  2394   0003CC                     CWG2AS1         equ	972	;# 
  2395   0003CD                     CWG2STR         equ	973	;# 
  2396   0003CE                     CWG3CLK         equ	974	;# 
  2397   0003CE                     CWG3CLKCON      equ	974	;# 
  2398   0003CF                     CWG3ISM         equ	975	;# 
  2399   0003CF                     CWG3DAT         equ	975	;# 
  2400   0003D0                     CWG3DBR         equ	976	;# 
  2401   0003D1                     CWG3DBF         equ	977	;# 
  2402   0003D2                     CWG3CON0        equ	978	;# 
  2403   0003D3                     CWG3CON1        equ	979	;# 
  2404   0003D4                     CWG3AS0         equ	980	;# 
  2405   0003D5                     CWG3AS1         equ	981	;# 
  2406   0003D6                     CWG3STR         equ	982	;# 
  2407   0003D7                     FVRCON          equ	983	;# 
  2408   0003D8                     ADCPCON         equ	984	;# 
  2409   0003D8                     ADCP            equ	984	;# 
  2410   0003D9                     ADLTH           equ	985	;# 
  2411   0003D9                     ADLTHL          equ	985	;# 
  2412   0003DA                     ADLTHH          equ	986	;# 
  2413   0003DB                     ADUTH           equ	987	;# 
  2414   0003DB                     ADUTHL          equ	987	;# 
  2415   0003DC                     ADUTHH          equ	988	;# 
  2416   0003DD                     ADERR           equ	989	;# 
  2417   0003DD                     ADERRL          equ	989	;# 
  2418   0003DE                     ADERRH          equ	990	;# 
  2419   0003DF                     ADSTPT          equ	991	;# 
  2420   0003DF                     ADSTPTL         equ	991	;# 
  2421   0003E0                     ADSTPTH         equ	992	;# 
  2422   0003E1                     ADFLTR          equ	993	;# 
  2423   0003E1                     ADFLTRL         equ	993	;# 
  2424   0003E2                     ADFLTRH         equ	994	;# 
  2425   0003E3                     ADACC           equ	995	;# 
  2426   0003E3                     ADACCL          equ	995	;# 
  2427   0003E4                     ADACCH          equ	996	;# 
  2428   0003E5                     ADACCU          equ	997	;# 
  2429   0003E6                     ADCNT           equ	998	;# 
  2430   0003E7                     ADRPT           equ	999	;# 
  2431   0003E8                     ADPREV          equ	1000	;# 
  2432   0003E8                     ADPREVL         equ	1000	;# 
  2433   0003E9                     ADPREVH         equ	1001	;# 
  2434   0003EA                     ADRES           equ	1002	;# 
  2435   0003EA                     ADRESL          equ	1002	;# 
  2436   0003EB                     ADRESH          equ	1003	;# 
  2437   0003EC                     ADPCH           equ	1004	;# 
  2438   0003EE                     ADACQ           equ	1006	;# 
  2439   0003EE                     ADACQL          equ	1006	;# 
  2440   0003EF                     ADACQH          equ	1007	;# 
  2441   0003F0                     ADCAP           equ	1008	;# 
  2442   0003F1                     ADPRE           equ	1009	;# 
  2443   0003F1                     ADPREL          equ	1009	;# 
  2444   0003F2                     ADPREH          equ	1010	;# 
  2445   0003F3                     ADCON0          equ	1011	;# 
  2446   0003F4                     ADCON1          equ	1012	;# 
  2447   0003F5                     ADCON2          equ	1013	;# 
  2448   0003F6                     ADCON3          equ	1014	;# 
  2449   0003F7                     ADSTAT          equ	1015	;# 
  2450   0003F8                     ADREF           equ	1016	;# 
  2451   0003F9                     ADACT           equ	1017	;# 
  2452   0003FA                     ADCLK           equ	1018	;# 
  2453   000400                     ANSELA          equ	1024	;# 
  2454   000401                     WPUA            equ	1025	;# 
  2455   000402                     ODCONA          equ	1026	;# 
  2456   000403                     SLRCONA         equ	1027	;# 
  2457   000404                     INLVLA          equ	1028	;# 
  2458   000405                     IOCAP           equ	1029	;# 
  2459   000406                     IOCAN           equ	1030	;# 
  2460   000407                     IOCAF           equ	1031	;# 
  2461   000408                     ANSELB          equ	1032	;# 
  2462   000409                     WPUB            equ	1033	;# 
  2463   00040A                     ODCONB          equ	1034	;# 
  2464   00040B                     SLRCONB         equ	1035	;# 
  2465   00040C                     INLVLB          equ	1036	;# 
  2466   00040D                     IOCBP           equ	1037	;# 
  2467   00040E                     IOCBN           equ	1038	;# 
  2468   00040F                     IOCBF           equ	1039	;# 
  2469   000410                     ANSELC          equ	1040	;# 
  2470   000411                     WPUC            equ	1041	;# 
  2471   000412                     ODCONC          equ	1042	;# 
  2472   000413                     SLRCONC         equ	1043	;# 
  2473   000414                     INLVLC          equ	1044	;# 
  2474   000415                     IOCCP           equ	1045	;# 
  2475   000416                     IOCCN           equ	1046	;# 
  2476   000417                     IOCCF           equ	1047	;# 
  2477   000418                     ANSELD          equ	1048	;# 
  2478   000419                     WPUD            equ	1049	;# 
  2479   00041A                     ODCOND          equ	1050	;# 
  2480   00041B                     SLRCOND         equ	1051	;# 
  2481   00041C                     INLVLD          equ	1052	;# 
  2482   000420                     ANSELE          equ	1056	;# 
  2483   000421                     WPUE            equ	1057	;# 
  2484   000422                     ODCONE          equ	1058	;# 
  2485   000423                     SLRCONE         equ	1059	;# 
  2486   000424                     INLVLE          equ	1060	;# 
  2487   000425                     IOCEP           equ	1061	;# 
  2488   000426                     IOCEN           equ	1062	;# 
  2489   000427                     IOCEF           equ	1063	;# 
  2490   000428                     ANSELF          equ	1064	;# 
  2491   000429                     WPUF            equ	1065	;# 
  2492   00042A                     ODCONF          equ	1066	;# 
  2493   00042B                     SLRCONF         equ	1067	;# 
  2494   00042C                     INLVLF          equ	1068	;# 
  2495   000440                     NCO1ACC         equ	1088	;# 
  2496   000440                     NCO1ACCL        equ	1088	;# 
  2497   000441                     NCO1ACCH        equ	1089	;# 
  2498   000442                     NCO1ACCU        equ	1090	;# 
  2499   000443                     NCO1INC         equ	1091	;# 
  2500   000443                     NCO1INCL        equ	1091	;# 
  2501   000444                     NCO1INCH        equ	1092	;# 
  2502   000445                     NCO1INCU        equ	1093	;# 
  2503   000446                     NCO1CON         equ	1094	;# 
  2504   000447                     NCO1CLK         equ	1095	;# 
  2505   000448                     NCO2ACC         equ	1096	;# 
  2506   000448                     NCO2ACCL        equ	1096	;# 
  2507   000449                     NCO2ACCH        equ	1097	;# 
  2508   00044A                     NCO2ACCU        equ	1098	;# 
  2509   00044B                     NCO2INC         equ	1099	;# 
  2510   00044B                     NCO2INCL        equ	1099	;# 
  2511   00044C                     NCO2INCH        equ	1100	;# 
  2512   00044D                     NCO2INCU        equ	1101	;# 
  2513   00044E                     NCO2CON         equ	1102	;# 
  2514   00044F                     NCO2CLK         equ	1103	;# 
  2515   000450                     NCO3ACC         equ	1104	;# 
  2516   000450                     NCO3ACCL        equ	1104	;# 
  2517   000451                     NCO3ACCH        equ	1105	;# 
  2518   000452                     NCO3ACCU        equ	1106	;# 
  2519   000453                     NCO3INC         equ	1107	;# 
  2520   000453                     NCO3INCL        equ	1107	;# 
  2521   000454                     NCO3INCH        equ	1108	;# 
  2522   000455                     NCO3INCU        equ	1109	;# 
  2523   000456                     NCO3CON         equ	1110	;# 
  2524   000457                     NCO3CLK         equ	1111	;# 
  2525   000459                     IVTLOCK         equ	1113	;# 
  2526   00045A                     IVTAD           equ	1114	;# 
  2527   00045A                     IVTADL          equ	1114	;# 
  2528   00045B                     IVTADH          equ	1115	;# 
  2529   00045C                     IVTADU          equ	1116	;# 
  2530   00045D                     IVTBASE         equ	1117	;# 
  2531   00045D                     IVTBASEL        equ	1117	;# 
  2532   00045E                     IVTBASEH        equ	1118	;# 
  2533   00045F                     IVTBASEU        equ	1119	;# 
  2534   000460                     PWM1ERS         equ	1120	;# 
  2535   000461                     PWM1CLK         equ	1121	;# 
  2536   000462                     PWM1LDS         equ	1122	;# 
  2537   000463                     PWM1PR          equ	1123	;# 
  2538   000463                     PWM1PRL         equ	1123	;# 
  2539   000464                     PWM1PRH         equ	1124	;# 
  2540   000465                     PWM1CPRE        equ	1125	;# 
  2541   000466                     PWM1PIPOS       equ	1126	;# 
  2542   000467                     PWM1GIR         equ	1127	;# 
  2543   000468                     PWM1GIE         equ	1128	;# 
  2544   000469                     PWM1CON         equ	1129	;# 
  2545   00046A                     PWM1S1CFG       equ	1130	;# 
  2546   00046B                     PWM1S1P1        equ	1131	;# 
  2547   00046B                     PWM1S1P1L       equ	1131	;# 
  2548   00046C                     PWM1S1P1H       equ	1132	;# 
  2549   00046D                     PWM1S1P2        equ	1133	;# 
  2550   00046D                     PWM1S1P2L       equ	1133	;# 
  2551   00046E                     PWM1S1P2H       equ	1134	;# 
  2552   00046F                     PWM2ERS         equ	1135	;# 
  2553   000470                     PWM2CLK         equ	1136	;# 
  2554   000471                     PWM2LDS         equ	1137	;# 
  2555   000472                     PWM2PR          equ	1138	;# 
  2556   000472                     PWM2PRL         equ	1138	;# 
  2557   000473                     PWM2PRH         equ	1139	;# 
  2558   000474                     PWM2CPRE        equ	1140	;# 
  2559   000475                     PWM2PIPOS       equ	1141	;# 
  2560   000476                     PWM2GIR         equ	1142	;# 
  2561   000477                     PWM2GIE         equ	1143	;# 
  2562   000478                     PWM2CON         equ	1144	;# 
  2563   000479                     PWM2S1CFG       equ	1145	;# 
  2564   00047A                     PWM2S1P1        equ	1146	;# 
  2565   00047A                     PWM2S1P1L       equ	1146	;# 
  2566   00047B                     PWM2S1P1H       equ	1147	;# 
  2567   00047C                     PWM2S1P2        equ	1148	;# 
  2568   00047C                     PWM2S1P2L       equ	1148	;# 
  2569   00047D                     PWM2S1P2H       equ	1149	;# 
  2570   00047E                     PWM3ERS         equ	1150	;# 
  2571   00047F                     PWM3CLK         equ	1151	;# 
  2572   000480                     PWM3LDS         equ	1152	;# 
  2573   000481                     PWM3PR          equ	1153	;# 
  2574   000481                     PWM3PRL         equ	1153	;# 
  2575   000482                     PWM3PRH         equ	1154	;# 
  2576   000483                     PWM3CPRE        equ	1155	;# 
  2577   000484                     PWM3PIPOS       equ	1156	;# 
  2578   000485                     PWM3GIR         equ	1157	;# 
  2579   000486                     PWM3GIE         equ	1158	;# 
  2580   000487                     PWM3CON         equ	1159	;# 
  2581   000488                     PWM3S1CFG       equ	1160	;# 
  2582   000489                     PWM3S1P1        equ	1161	;# 
  2583   000489                     PWM3S1P1L       equ	1161	;# 
  2584   00048A                     PWM3S1P1H       equ	1162	;# 
  2585   00048B                     PWM3S1P2        equ	1163	;# 
  2586   00048B                     PWM3S1P2L       equ	1163	;# 
  2587   00048C                     PWM3S1P2H       equ	1164	;# 
  2588   00049C                     PWMLOAD         equ	1180	;# 
  2589   00049D                     PWMEN           equ	1181	;# 
  2590   00049E                     PIE0            equ	1182	;# 
  2591   00049F                     PIE1            equ	1183	;# 
  2592   0004A0                     PIE2            equ	1184	;# 
  2593   0004A1                     PIE3            equ	1185	;# 
  2594   0004A2                     PIE4            equ	1186	;# 
  2595   0004A3                     PIE5            equ	1187	;# 
  2596   0004A4                     PIE6            equ	1188	;# 
  2597   0004A5                     PIE7            equ	1189	;# 
  2598   0004A6                     PIE8            equ	1190	;# 
  2599   0004A7                     PIE9            equ	1191	;# 
  2600   0004A8                     PIE10           equ	1192	;# 
  2601   0004A9                     PIE11           equ	1193	;# 
  2602   0004AA                     PIE12           equ	1194	;# 
  2603   0004AB                     PIE13           equ	1195	;# 
  2604   0004AC                     PIE14           equ	1196	;# 
  2605   0004AD                     PIE15           equ	1197	;# 
  2606   0004AE                     PIR0            equ	1198	;# 
  2607   0004AF                     PIR1            equ	1199	;# 
  2608   0004B0                     PIR2            equ	1200	;# 
  2609   0004B1                     PIR3            equ	1201	;# 
  2610   0004B2                     PIR4            equ	1202	;# 
  2611   0004B3                     PIR5            equ	1203	;# 
  2612   0004B4                     PIR6            equ	1204	;# 
  2613   0004B5                     PIR7            equ	1205	;# 
  2614   0004B6                     PIR8            equ	1206	;# 
  2615   0004B7                     PIR9            equ	1207	;# 
  2616   0004B8                     PIR10           equ	1208	;# 
  2617   0004B9                     PIR11           equ	1209	;# 
  2618   0004BA                     PIR12           equ	1210	;# 
  2619   0004BB                     PIR13           equ	1211	;# 
  2620   0004BC                     PIR14           equ	1212	;# 
  2621   0004BD                     PIR15           equ	1213	;# 
  2622   0004BE                     LATA            equ	1214	;# 
  2623   0004BF                     LATB            equ	1215	;# 
  2624   0004C0                     LATC            equ	1216	;# 
  2625   0004C1                     LATD            equ	1217	;# 
  2626   0004C2                     LATE            equ	1218	;# 
  2627   0004C3                     LATF            equ	1219	;# 
  2628   0004C6                     TRISA           equ	1222	;# 
  2629   0004C7                     TRISB           equ	1223	;# 
  2630   0004C8                     TRISC           equ	1224	;# 
  2631   0004C9                     TRISD           equ	1225	;# 
  2632   0004CA                     TRISE           equ	1226	;# 
  2633   0004CB                     TRISF           equ	1227	;# 
  2634   0004CE                     PORTA           equ	1230	;# 
  2635   0004CF                     PORTB           equ	1231	;# 
  2636   0004D0                     PORTC           equ	1232	;# 
  2637   0004D1                     PORTD           equ	1233	;# 
  2638   0004D2                     PORTE           equ	1234	;# 
  2639   0004D3                     PORTF           equ	1235	;# 
  2640   0004D6                     INTCON0         equ	1238	;# 
  2641   0004D7                     INTCON1         equ	1239	;# 
  2642   0004D8                     STATUS          equ	1240	;# 
  2643   0004D9                     FSR2            equ	1241	;# 
  2644   0004D9                     FSR2L           equ	1241	;# 
  2645   0004DA                     FSR2H           equ	1242	;# 
  2646   0004DB                     PLUSW2          equ	1243	;# 
  2647   0004DC                     PREINC2         equ	1244	;# 
  2648   0004DD                     POSTDEC2        equ	1245	;# 
  2649   0004DE                     POSTINC2        equ	1246	;# 
  2650   0004DF                     INDF2           equ	1247	;# 
  2651   0004E0                     BSR             equ	1248	;# 
  2652   0004E1                     FSR1            equ	1249	;# 
  2653   0004E1                     FSR1L           equ	1249	;# 
  2654   0004E2                     FSR1H           equ	1250	;# 
  2655   0004E3                     PLUSW1          equ	1251	;# 
  2656   0004E4                     PREINC1         equ	1252	;# 
  2657   0004E5                     POSTDEC1        equ	1253	;# 
  2658   0004E6                     POSTINC1        equ	1254	;# 
  2659   0004E7                     INDF1           equ	1255	;# 
  2660   0004E8                     WREG            equ	1256	;# 
  2661   0004E9                     FSR0            equ	1257	;# 
  2662   0004E9                     FSR0L           equ	1257	;# 
  2663   0004EA                     FSR0H           equ	1258	;# 
  2664   0004EB                     PLUSW0          equ	1259	;# 
  2665   0004EC                     PREINC0         equ	1260	;# 
  2666   0004ED                     POSTDEC0        equ	1261	;# 
  2667   0004EE                     POSTINC0        equ	1262	;# 
  2668   0004EF                     INDF0           equ	1263	;# 
  2669   0004F0                     PCON0           equ	1264	;# 
  2670   0004F1                     PCON1           equ	1265	;# 
  2671   0004F2                     CPUDOZE         equ	1266	;# 
  2672   0004F3                     PROD            equ	1267	;# 
  2673   0004F3                     PRODL           equ	1267	;# 
  2674   0004F4                     PRODH           equ	1268	;# 
  2675   0004F5                     TABLAT          equ	1269	;# 
  2676   0004F6                     TBLPTR          equ	1270	;# 
  2677   0004F6                     TBLPTRL         equ	1270	;# 
  2678   0004F7                     TBLPTRH         equ	1271	;# 
  2679   0004F8                     TBLPTRU         equ	1272	;# 
  2680   0004F9                     PCLAT           equ	1273	;# 
  2681   0004F9                     PCL             equ	1273	;# 
  2682   0004FA                     PCLATH          equ	1274	;# 
  2683   0004FB                     PCLATU          equ	1275	;# 
  2684   0004FC                     STKPTR          equ	1276	;# 
  2685   0004FD                     TOS             equ	1277	;# 
  2686   0004FD                     TOSL            equ	1277	;# 
  2687   0004FE                     TOSH            equ	1278	;# 
  2688   0004FF                     TOSU            equ	1279	;# 
  2689                           
  2690                           	psect	idataCOMRAM
  2691   00381A                     __pidataCOMRAM:
  2692                           	callstack 0
  2693                           
  2694                           ;initializer for _I2C_LCD_ADDR
  2695   00381A  27                 	db	39
  2696   0000B3                     _OSCEN          set	179
  2697   0000B1                     _OSCFRQ         set	177
  2698   0000AD                     _OSCCON1        set	173
  2699   0002B2                     _U1ERRIRbits    set	690
  2700   0002A3                     _U1TXB          set	675
  2701   000272                     _U1RXPPS        set	626
  2702   000229                     _RF0PPS         set	553
  2703   0002AD                     _U1CON2         set	685
  2704   0002AC                     _U1CON1         set	684
  2705   0002AB                     _U1CON0         set	683
  2706   0002AE                     _U1BRGL         set	686
  2707   0002AF                     _U1BRGH         set	687
  2708   00029A                     _I2C1PIRbits    set	666
  2709   000295                     _I2C1CON1bits   set	661
  2710   000299                     _I2C1STAT1bits  set	665
  2711   00028C                     _I2C1TXB        set	652
  2712   00028F                     _I2C1ADB1       set	655
  2713   00028D                     _I2C1CNT        set	653
  2714   000296                     _I2C1CON2bits   set	662
  2715   00029C                     _I2C1CLKbits    set	668
  2716   000294                     _I2C1CON0bits   set	660
  2717   000286                     _RC4I2Cbits     set	646
  2718   000287                     _RC3I2Cbits     set	647
  2719   000215                     _RC4PPS         set	533
  2720   000214                     _RC3PPS         set	532
  2721   00031C                     _TMR1           set	796
  2722   0003EB                     _ADRESH         set	1003
  2723   00031E                     _T1CONbits      set	798
  2724   00031C                     _TMR1L          set	796
  2725   00031D                     _TMR1H          set	797
  2726   00031E                     _T1CON          set	798
  2727   000321                     _T1CLK          set	801
  2728   0003F8                     _ADREF          set	1016
  2729   0003EC                     _ADPCH          set	1004
  2730   0003F3                     _ADCON0bits     set	1011
  2731   000428                     _ANSELFbits     set	1064
  2732   000420                     _ANSELEbits     set	1056
  2733   000400                     _ANSELAbits     set	1024
  2734   000412                     _ODCONCbits     set	1042
  2735   000410                     _ANSELCbits     set	1040
  2736   0004C3                     _LATFbits       set	1219
  2737   0004D0                     _PORTCbits      set	1232
  2738   0004C2                     _LATEbits       set	1218
  2739   0004CB                     _TRISFbits      set	1227
  2740   0004CA                     _TRISEbits      set	1226
  2741   0004C6                     _TRISAbits      set	1222
  2742   0004C8                     _TRISCbits      set	1224
  2743                           
  2744                           	psect	smallconst
  2745   002600                     __psmallconst:
  2746                           	callstack 0
  2747   002600  00                 	db	0
  2748   002601                     STR_3:
  2749   002601  48                 	db	72	;'H'
  2750   002602  6F                 	db	111	;'o'
  2751   002603  6C                 	db	108	;'l'
  2752   002604  61                 	db	97	;'a'
  2753   002605  20                 	db	32
  2754   002606  55                 	db	85	;'U'
  2755   002607  50                 	db	80	;'P'
  2756   002608  43                 	db	67	;'C'
  2757   002609  69                 	db	105	;'i'
  2758   00260A  6E                 	db	110	;'n'
  2759   00260B  6F                 	db	111	;'o'
  2760   00260C  20                 	db	32
  2761   00260D  65                 	db	101	;'e'
  2762   00260E  73                 	db	115	;'s'
  2763   00260F  74                 	db	116	;'t'
  2764   002610  6F                 	db	111	;'o'
  2765   002611  79                 	db	121	;'y'
  2766   002612  20                 	db	32
  2767   002613  6D                 	db	109	;'m'
  2768   002614  61                 	db	97	;'a'
  2769   002615  6E                 	db	110	;'n'
  2770   002616  64                 	db	100	;'d'
  2771   002617  61                 	db	97	;'a'
  2772   002618  6E                 	db	110	;'n'
  2773   002619  64                 	db	100	;'d'
  2774   00261A  6F                 	db	111	;'o'
  2775   00261B  20                 	db	32
  2776   00261C  64                 	db	100	;'d'
  2777   00261D  61                 	db	97	;'a'
  2778   00261E  74                 	db	116	;'t'
  2779   00261F  6F                 	db	111	;'o'
  2780   002620  73                 	db	115	;'s'
  2781   002621  20                 	db	32
  2782   002622  73                 	db	115	;'s'
  2783   002623  65                 	db	101	;'e'
  2784   002624  72                 	db	114	;'r'
  2785   002625  69                 	db	105	;'i'
  2786   002626  61                 	db	97	;'a'
  2787   002627  6C                 	db	108	;'l'
  2788   002628  65                 	db	101	;'e'
  2789   002629  73                 	db	115	;'s'
  2790   00262A  20                 	db	32
  2791   00262B  61                 	db	97	;'a'
  2792   00262C  20                 	db	32
  2793   00262D  6C                 	db	108	;'l'
  2794   00262E  61                 	db	97	;'a'
  2795   00262F  20                 	db	32
  2796   002630  50                 	db	80	;'P'
  2797   002631  43                 	db	67	;'C'
  2798   002632  21                 	db	33
  2799   002633  00                 	db	0
  2800   002634                     STR_2:
  2801   002634  49                 	db	73	;'I'
  2802   002635  6E                 	db	110	;'n'
  2803   002636  67                 	db	103	;'g'
  2804   002637  2E                 	db	46
  2805   002638  20                 	db	32
  2806   002639  42                 	db	66	;'B'
  2807   00263A  69                 	db	105	;'i'
  2808   00263B  6F                 	db	111	;'o'
  2809   00263C  4D                 	db	77	;'M'
  2810   00263D  65                 	db	101	;'e'
  2811   00263E  63                 	db	99	;'c'
  2812   00263F  61                 	db	97	;'a'
  2813   002640  45                 	db	69	;'E'
  2814   002641  6C                 	db	108	;'l'
  2815   002642  65                 	db	101	;'e'
  2816   002643  00                 	db	0
  2817   002644                     STR_1:
  2818   002644  53                 	db	83	;'S'
  2819   002645  65                 	db	101	;'e'
  2820   002646  6D                 	db	109	;'m'
  2821   002647  31                 	db	49	;'1'
  2822   002648  34                 	db	52	;'4'
  2823   002649  20                 	db	32
  2824   00264A  55                 	db	85	;'U'
  2825   00264B  50                 	db	80	;'P'
  2826   00264C  43                 	db	67	;'C'
  2827   00264D  20                 	db	32
  2828   00264E  4D                 	db	77	;'M'
  2829   00264F  69                 	db	105	;'i'
  2830   002650  63                 	db	99	;'c'
  2831   002651  72                 	db	114	;'r'
  2832   002652  6F                 	db	111	;'o'
  2833   002653  00                 	db	0
  2834   002654                     STR_4:
  2835   002654  41                 	db	65	;'A'
  2836   002655  44                 	db	68	;'D'
  2837   002656  43                 	db	67	;'C'
  2838   002657  5F                 	db	95	;'_'
  2839   002658  43                 	db	67	;'C'
  2840   002659  48                 	db	72	;'H'
  2841   00265A  30                 	db	48	;'0'
  2842   00265B  3A                 	db	58	;':'
  2843   00265C  00                 	db	0
  2844   00265D                     STR_5:
  2845   00265D  44                 	db	68	;'D'
  2846   00265E  69                 	db	105	;'i'
  2847   00265F  73                 	db	115	;'s'
  2848   002660  74                 	db	116	;'t'
  2849   002661  3A                 	db	58	;':'
  2850   002662  00                 	db	0
  2851   002663                     STR_6:
  2852   002663  63                 	db	99	;'c'
  2853   002664  6D                 	db	109	;'m'
  2854   002665  00                 	db	0
  2855   002666  00                 	db	0	; dummy byte at the end
  2856   002600                     __smallconst    set	__psmallconst
  2857   002600                     __mediumconst   set	__psmallconst
  2858   000003                     __activetblptr  equ	3
  2859                           
  2860                           ; #config settings
  2861                           
  2862                           	psect	cinit
  2863   0037A0                     __pcinit:
  2864                           	callstack 0
  2865   0037A0                     start_initialization:
  2866                           	callstack 0
  2867   0037A0                     __initialization:
  2868                           	callstack 0
  2869                           
  2870                           ; Initialize objects allocated to COMRAM (1 bytes)
  2871                           ; load TBLPTR registers with __pidataCOMRAM
  2872   0037A0  0E1A               	movlw	low __pidataCOMRAM
  2873   0037A2  6EF6               	movwf	tblptrl,c
  2874   0037A4  0E38               	movlw	high __pidataCOMRAM
  2875   0037A6  6EF7               	movwf	tblptrh,c
  2876   0037A8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2877   0037AA  6EF8               	movwf	tblptru,c
  2878   0037AC  0009               	tblrd		*+	;fetch initializer
  2879   0037AE  C4F5 F536          	movff	tablat,__pdataCOMRAM
  2880                           
  2881                           ; Clear objects allocated to COMRAM (5 bytes)
  2882   0037B2  6A35               	clrf	(__pbssCOMRAM+4)& (0+255),c
  2883   0037B4  6A34               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2884   0037B6  6A33               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2885   0037B8  6A32               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2886   0037BA  6A31               	clrf	__pbssCOMRAM& (0+255),c
  2887   0037BC                     end_of_initialization:
  2888                           	callstack 0
  2889   0037BC                     __end_of__initialization:
  2890                           	callstack 0
  2891   0037BC  0100               	movlb	0
  2892   0037BE  EF66  F018         	goto	_main	;jump to C main() function
  2893                           
  2894                           	psect	bssCOMRAM
  2895   000531                     __pbssCOMRAM:
  2896                           	callstack 0
  2897   000531                     _distancia_hcsr04:
  2898                           	callstack 0
  2899   000531                     	ds	2
  2900   000533                     _tmr1_count:
  2901                           	callstack 0
  2902   000533                     	ds	2
  2903   000535                     _lectura_ch0:
  2904                           	callstack 0
  2905   000535                     	ds	1
  2906                           
  2907                           	psect	dataCOMRAM
  2908   000536                     __pdataCOMRAM:
  2909                           	callstack 0
  2910   000536                     _I2C_LCD_ADDR:
  2911                           	callstack 0
  2912   000536                     	ds	1
  2913                           
  2914                           	psect	cstackCOMRAM
  2915   000501                     __pcstackCOMRAM:
  2916                           	callstack 0
  2917   000501                     ?_strlen:
  2918                           	callstack 0
  2919   000501                     ?___awmod:
  2920                           	callstack 0
  2921   000501                     ?___lwmod:
  2922                           	callstack 0
  2923   000501                     ?___fltol:
  2924                           	callstack 0
  2925   000501                     ?___xxtofl:
  2926                           	callstack 0
  2927   000501                     I2C1_WRITESINGLEBYTE@dato:
  2928                           	callstack 0
  2929   000501                     U1_BYTE_SEND@dato:
  2930                           	callstack 0
  2931   000501                     ___lbmod@divisor:
  2932                           	callstack 0
  2933   000501                     strlen@s:
  2934                           	callstack 0
  2935   000501                     U1_INIT@velocidad:
  2936                           	callstack 0
  2937   000501                     ___awmod@dividend:
  2938                           	callstack 0
  2939   000501                     ___lwmod@dividend:
  2940                           	callstack 0
  2941   000501                     ___fltol@f1:
  2942                           	callstack 0
  2943   000501                     ___xxtofl@val:
  2944                           	callstack 0
  2945   000501                     
  2946                           ; 1 bytes @ 0x0
  2947   000501                     	ds	1
  2948   000502                     I2C1_WRITESINGLEBYTE@direccion:
  2949                           	callstack 0
  2950   000502                     ___lbmod@dividend:
  2951                           	callstack 0
  2952   000502                     
  2953                           ; 1 bytes @ 0x1
  2954   000502                     	ds	1
  2955   000503                     ___lbmod@counter:
  2956                           	callstack 0
  2957   000503                     strlen@a:
  2958                           	callstack 0
  2959   000503                     ___awmod@divisor:
  2960                           	callstack 0
  2961   000503                     ___lwmod@divisor:
  2962                           	callstack 0
  2963   000503                     ??_I2C_ENVIA_LCD_CMD:
  2964   000503                     ??_I2C_ENVIA_LCD_DATA:
  2965   000503                     
  2966                           ; 1 bytes @ 0x2
  2967   000503                     	ds	1
  2968   000504                     I2C_ENVIA_LCD_DATA@data:
  2969                           	callstack 0
  2970   000504                     I2C_ENVIA_LCD_CMD@command:
  2971                           	callstack 0
  2972   000504                     U1_STRING_SEND@cadena:
  2973                           	callstack 0
  2974   000504                     ___lbmod@rem:
  2975                           	callstack 0
  2976                           
  2977                           ; 1 bytes @ 0x3
  2978   000504                     	ds	1
  2979   000505                     I2C_ENVIA_LCD_DATA@highnibble:
  2980                           	callstack 0
  2981   000505                     I2C_ENVIA_LCD_CMD@highnibble:
  2982                           	callstack 0
  2983   000505                     ___awmod@counter:
  2984                           	callstack 0
  2985   000505                     ___lwmod@counter:
  2986                           	callstack 0
  2987   000505                     ??_U1_STRING_SEND:
  2988   000505                     ??___fltol:
  2989   000505                     ??___xxtofl:
  2990                           
  2991                           ; 1 bytes @ 0x4
  2992   000505                     	ds	1
  2993   000506                     ?___lwdiv:
  2994                           	callstack 0
  2995   000506                     I2C_ENVIA_LCD_DATA@lownibble:
  2996                           	callstack 0
  2997   000506                     I2C_ENVIA_LCD_CMD@lownibble:
  2998                           	callstack 0
  2999   000506                     U1_STRING_SEND@tam:
  3000                           	callstack 0
  3001   000506                     ___awmod@sign:
  3002                           	callstack 0
  3003   000506                     ___lwdiv@dividend:
  3004                           	callstack 0
  3005                           
  3006                           ; 2 bytes @ 0x5
  3007   000506                     	ds	1
  3008   000507                     I2C_POS_CURSOR@columna:
  3009                           	callstack 0
  3010   000507                     I2C_CURSOR_ONOFF@estado:
  3011                           	callstack 0
  3012   000507                     I2C_ESCRIBE_MENSAJE2@cadena:
  3013                           	callstack 0
  3014   000507                     U1_STRING_SEND@i:
  3015                           	callstack 0
  3016   000507                     ___lbdiv@divisor:
  3017                           	callstack 0
  3018   000507                     
  3019                           ; 1 bytes @ 0x6
  3020   000507                     	ds	1
  3021   000508                     ___lbdiv@dividend:
  3022                           	callstack 0
  3023   000508                     ___lwdiv@divisor:
  3024                           	callstack 0
  3025   000508                     ??_I2C_POS_CURSOR:
  3026   000508                     ??_I2C_ESCRIBE_MENSAJE2:
  3027   000508                     ??_I2C_LCD_INIT:
  3028   000508                     
  3029                           ; 1 bytes @ 0x7
  3030   000508                     	ds	1
  3031   000509                     I2C_POS_CURSOR@fila:
  3032                           	callstack 0
  3033   000509                     I2C_ESCRIBE_MENSAJE2@tam:
  3034                           	callstack 0
  3035   000509                     ___fltol@sign1:
  3036                           	callstack 0
  3037   000509                     ___lbdiv@counter:
  3038                           	callstack 0
  3039   000509                     ___xxtofl@sign:
  3040                           	callstack 0
  3041                           
  3042                           ; 1 bytes @ 0x8
  3043   000509                     	ds	1
  3044   00050A                     I2C_ESCRIBE_MENSAJE2@i:
  3045                           	callstack 0
  3046   00050A                     ___fltol@exp1:
  3047                           	callstack 0
  3048   00050A                     ___lbdiv@quotient:
  3049                           	callstack 0
  3050   00050A                     ___xxtofl@exp:
  3051                           	callstack 0
  3052   00050A                     ___lwdiv@quotient:
  3053                           	callstack 0
  3054   00050A                     
  3055                           ; 1 bytes @ 0x9
  3056   00050A                     	ds	1
  3057   00050B                     I2C_LCD_ESCRIBE_VAR_CHAR@n_digitos:
  3058                           	callstack 0
  3059   00050B                     ___xxtofl@arg:
  3060                           	callstack 0
  3061   00050B                     ??_pantallazo:
  3062                           
  3063                           ; 1 bytes @ 0xA
  3064   00050B                     	ds	1
  3065   00050C                     I2C_LCD_ESCRIBE_VAR_CHAR@centena:
  3066                           	callstack 0
  3067   00050C                     ___lwdiv@counter:
  3068                           	callstack 0
  3069   00050C                     
  3070                           ; 1 bytes @ 0xB
  3071   00050C                     	ds	1
  3072   00050D                     I2C_LCD_ESCRIBE_VAR_CHAR@decena:
  3073                           	callstack 0
  3074   00050D                     I2C_LCD_ESCRIBE_VAR_INT@numero:
  3075                           	callstack 0
  3076                           
  3077                           ; 2 bytes @ 0xC
  3078   00050D                     	ds	1
  3079   00050E                     I2C_LCD_ESCRIBE_VAR_CHAR@numero:
  3080                           	callstack 0
  3081                           
  3082                           ; 1 bytes @ 0xD
  3083   00050E                     	ds	1
  3084   00050F                     ?___fldiv:
  3085                           	callstack 0
  3086   00050F                     I2C_LCD_ESCRIBE_VAR_CHAR@unidad:
  3087                           	callstack 0
  3088   00050F                     I2C_LCD_ESCRIBE_VAR_INT@n_digitos:
  3089                           	callstack 0
  3090   00050F                     ___fldiv@b:
  3091                           	callstack 0
  3092                           
  3093                           ; 4 bytes @ 0xE
  3094   00050F                     	ds	1
  3095   000510                     I2C_LCD_ESCRIBE_VAR_INT@punto:
  3096                           	callstack 0
  3097                           
  3098                           ; 1 bytes @ 0xF
  3099   000510                     	ds	1
  3100   000511                     I2C_LCD_ESCRIBE_VAR_INT@d_millar:
  3101                           	callstack 0
  3102   000511                     
  3103                           ; 1 bytes @ 0x10
  3104   000511                     	ds	1
  3105   000512                     I2C_LCD_ESCRIBE_VAR_INT@millar:
  3106                           	callstack 0
  3107                           
  3108                           ; 1 bytes @ 0x11
  3109   000512                     	ds	1
  3110   000513                     I2C_LCD_ESCRIBE_VAR_INT@centena:
  3111                           	callstack 0
  3112   000513                     ___fldiv@a:
  3113                           	callstack 0
  3114                           
  3115                           ; 4 bytes @ 0x12
  3116   000513                     	ds	1
  3117   000514                     I2C_LCD_ESCRIBE_VAR_INT@decena:
  3118                           	callstack 0
  3119                           
  3120                           ; 1 bytes @ 0x13
  3121   000514                     	ds	1
  3122   000515                     I2C_LCD_ESCRIBE_VAR_INT@unidad:
  3123                           	callstack 0
  3124                           
  3125                           ; 1 bytes @ 0x14
  3126   000515                     	ds	2
  3127   000517                     ??___fldiv:
  3128                           
  3129                           ; 1 bytes @ 0x16
  3130   000517                     	ds	4
  3131   00051B                     ___fldiv@rem:
  3132                           	callstack 0
  3133                           
  3134                           ; 4 bytes @ 0x1A
  3135   00051B                     	ds	4
  3136   00051F                     ___fldiv@sign:
  3137                           	callstack 0
  3138                           
  3139                           ; 1 bytes @ 0x1E
  3140   00051F                     	ds	1
  3141   000520                     ___fldiv@new_exp:
  3142                           	callstack 0
  3143                           
  3144                           ; 2 bytes @ 0x1F
  3145   000520                     	ds	2
  3146   000522                     ___fldiv@grs:
  3147                           	callstack 0
  3148                           
  3149                           ; 4 bytes @ 0x21
  3150   000522                     	ds	4
  3151   000526                     ___fldiv@bexp:
  3152                           	callstack 0
  3153                           
  3154                           ; 1 bytes @ 0x25
  3155   000526                     	ds	1
  3156   000527                     ___fldiv@aexp:
  3157                           	callstack 0
  3158                           
  3159                           ; 1 bytes @ 0x26
  3160   000527                     	ds	1
  3161   000528                     ?_HCSR04_Distance:
  3162                           	callstack 0
  3163                           
  3164                           ; 2 bytes @ 0x27
  3165   000528                     	ds	2
  3166   00052A                     HCSR04_Distance@temporal:
  3167                           	callstack 0
  3168   00052A                     
  3169                           ; 1 bytes @ 0x29
  3170   00052A                     	ds	4
  3171   00052E                     HCSR04_Distance@distancia:
  3172                           	callstack 0
  3173                           
  3174                           ; 2 bytes @ 0x2D
  3175   00052E                     	ds	2
  3176   000530                     ??_main:
  3177                           
  3178                           ; 1 bytes @ 0x2F
  3179   000530                     	ds	1
  3180                           
  3181 ;;
  3182 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3183 ;;
  3184 ;; *************** function _main *****************
  3185 ;; Defined at:
  3186 ;;		line 67 in file "maincode04.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;		None
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;		None
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  1    wreg      void 
  3193 ;; Registers used:
  3194 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3203 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3204 ;;Total ram usage:        1 bytes
  3205 ;; Hardware stack levels required when called: 5
  3206 ;; This function calls:
  3207 ;;		_HCSR04_Distance
  3208 ;;		_I2C_ESCRIBE_MENSAJE2
  3209 ;;		_I2C_LCD_ESCRIBE_VAR_CHAR
  3210 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  3211 ;;		_I2C_POS_CURSOR
  3212 ;;		_configuro
  3213 ;;		_pantallazo
  3214 ;; This function is called by:
  3215 ;;		Startup code after reset
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text0
  3220   0030CC                     __ptext0:
  3221                           	callstack 0
  3222   0030CC                     _main:
  3223                           	callstack 122
  3224                           
  3225                           ;maincode04.c: 68:     configuro();
  3226                           
  3227                           ;incstack = 0
  3228   0030CC  ECB1  F01A         	call	_configuro	;wreg free
  3229                           
  3230                           ; BSR set to: 4
  3231                           ;maincode04.c: 69:     pantallazo();
  3232   0030D0  ECFD  F01A         	call	_pantallazo	;wreg free
  3233   0030D4                     l2625:
  3234                           
  3235                           ;maincode04.c: 71:         ADCON0bits.GO_nDONE = 1;
  3236   0030D4  0103               	movlb	3	; () banked
  3237   0030D6  81F3               	bsf	243,0,b	;volatile
  3238   0030D8                     l282:
  3239                           
  3240                           ; BSR set to: 3
  3241   0030D8  B1F3               	btfsc	243,0,b	;volatile
  3242   0030DA  D7FE               	goto	l282
  3243                           
  3244                           ; BSR set to: 3
  3245                           ;maincode04.c: 73:         lectura_ch0 = ADRESH;
  3246   0030DC  C3EB F535          	movff	1003,_lectura_ch0	;volatile
  3247                           
  3248                           ; BSR set to: 3
  3249                           ;maincode04.c: 74:         I2C_POS_CURSOR(1,0);
  3250   0030E0  0E00               	movlw	0
  3251   0030E2  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  3252   0030E4  0E01               	movlw	1
  3253   0030E6  EC5C  F01A         	call	_I2C_POS_CURSOR
  3254                           
  3255                           ;maincode04.c: 75:         I2C_ESCRIBE_MENSAJE2("ADC_CH0:");
  3256   0030EA  0E54               	movlw	low STR_4
  3257   0030EC  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  3258   0030EE  EC79  F01B         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  3259                           
  3260                           ;maincode04.c: 76:         I2C_LCD_ESCRIBE_VAR_CHAR(lectura_ch0,3);
  3261   0030F2  0E03               	movlw	3
  3262   0030F4  6E0B               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@n_digitos^(0+1280),c
  3263   0030F6  5035               	movf	_lectura_ch0^(0+1280),w,c
  3264   0030F8  EC74  F019         	call	_I2C_LCD_ESCRIBE_VAR_CHAR
  3265                           
  3266                           ;maincode04.c: 77:         I2C_POS_CURSOR(2,0);
  3267   0030FC  0E00               	movlw	0
  3268   0030FE  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  3269   003100  0E02               	movlw	2
  3270   003102  EC5C  F01A         	call	_I2C_POS_CURSOR
  3271                           
  3272                           ;maincode04.c: 78:         I2C_ESCRIBE_MENSAJE2("Dist:");
  3273   003106  0E5D               	movlw	low STR_5
  3274   003108  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  3275   00310A  EC79  F01B         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  3276                           
  3277                           ;maincode04.c: 79:         distancia_hcsr04 = HCSR04_Distance();
  3278   00310E  EC29  F019         	call	_HCSR04_Distance	;wreg free
  3279   003112  C528  F531         	movff	?_HCSR04_Distance,_distancia_hcsr04
  3280   003116  C529  F532         	movff	?_HCSR04_Distance+1,_distancia_hcsr04+1
  3281                           
  3282                           ;maincode04.c: 80:         I2C_LCD_ESCRIBE_VAR_INT(distancia_hcsr04, 3, 0);
  3283   00311A  C531  F50D         	movff	_distancia_hcsr04,I2C_LCD_ESCRIBE_VAR_INT@numero
  3284   00311E  C532  F50E         	movff	_distancia_hcsr04+1,I2C_LCD_ESCRIBE_VAR_INT@numero+1
  3285   003122  0E03               	movlw	3
  3286   003124  6E0F               	movwf	I2C_LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
  3287   003126  0E00               	movlw	0
  3288   003128  6E10               	movwf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),c
  3289   00312A  ECDE  F014         	call	_I2C_LCD_ESCRIBE_VAR_INT	;wreg free
  3290                           
  3291                           ;maincode04.c: 81:         I2C_ESCRIBE_MENSAJE2("cm");
  3292   00312E  0E63               	movlw	low STR_6
  3293   003130  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  3294   003132  EC79  F01B         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  3295                           
  3296                           ;maincode04.c: 82:         if(distancia_hcsr04 <= 6){
  3297   003136  5032               	movf	(_distancia_hcsr04+1)^(0+1280),w,c
  3298   003138  E116               	bnz	l2647
  3299   00313A  0E07               	movlw	7
  3300   00313C  5C31               	subwf	_distancia_hcsr04^(0+1280),w,c
  3301   00313E  B0D8               	btfsc	status,0,c
  3302   003140  D012               	goto	l2647
  3303                           
  3304                           ;maincode04.c: 83:             LATFbits.LATF5 = 1;
  3305   003142  8AC3               	bsf	195,5,c	;volatile
  3306                           
  3307                           ;maincode04.c: 84:             _delay((unsigned long)((700)*(32000000UL/4000000.0)));
  3308   003144  0E08               	movlw	8
  3309   003146  6E30               	movwf	??_main^(0+1280),c
  3310   003148  0E44               	movlw	68
  3311   00314A                     u1527:
  3312   00314A  2EE8               	decfsz	wreg,f,c
  3313   00314C  D7FE               	bra	u1527
  3314   00314E  2E30               	decfsz	??_main^(0+1280),f,c
  3315   003150  D7FC               	bra	u1527
  3316   003152  D000               	nop2	
  3317                           
  3318                           ;maincode04.c: 85:             LATFbits.LATF5 = 0;
  3319   003154  9AC3               	bcf	195,5,c	;volatile
  3320                           
  3321                           ;maincode04.c: 86:             _delay((unsigned long)((19300)*(32000000UL/4000000.0)));
  3322   003156  0EC9               	movlw	201
  3323   003158  6E30               	movwf	??_main^(0+1280),c
  3324   00315A  0E84               	movlw	132
  3325   00315C                     u1537:
  3326   00315C  2EE8               	decfsz	wreg,f,c
  3327   00315E  D7FE               	bra	u1537
  3328   003160  2E30               	decfsz	??_main^(0+1280),f,c
  3329   003162  D7FC               	bra	u1537
  3330                           
  3331                           ;maincode04.c: 87:         }
  3332   003164  D7B7               	goto	l2625
  3333   003166                     l2647:
  3334   003166  5032               	movf	(_distancia_hcsr04+1)^(0+1280),w,c
  3335   003168  E104               	bnz	u1510
  3336   00316A  0E0C               	movlw	12
  3337   00316C  5C31               	subwf	_distancia_hcsr04^(0+1280),w,c
  3338   00316E  A0D8               	btfss	status,0,c
  3339   003170  D7B1               	goto	l2625
  3340   003172                     u1510:
  3341                           
  3342                           ;maincode04.c: 89:             LATFbits.LATF5 = 1;
  3343   003172  8AC3               	bsf	195,5,c	;volatile
  3344                           
  3345                           ;maincode04.c: 90:             _delay((unsigned long)((2300)*(32000000UL/4000000.0)));
  3346   003174  0E18               	movlw	24
  3347   003176  6E30               	movwf	??_main^(0+1280),c
  3348   003178  0EE4               	movlw	228
  3349   00317A                     u1547:
  3350   00317A  2EE8               	decfsz	wreg,f,c
  3351   00317C  D7FE               	bra	u1547
  3352   00317E  2E30               	decfsz	??_main^(0+1280),f,c
  3353   003180  D7FC               	bra	u1547
  3354   003182  D000               	nop2	
  3355                           
  3356                           ;maincode04.c: 91:             LATFbits.LATF5 = 0;
  3357   003184  9AC3               	bcf	195,5,c	;volatile
  3358                           
  3359                           ;maincode04.c: 92:             _delay((unsigned long)((17700)*(32000000UL/4000000.0)));
  3360   003186  0EB8               	movlw	184
  3361   003188  6E30               	movwf	??_main^(0+1280),c
  3362   00318A  0EE4               	movlw	228
  3363   00318C                     u1557:
  3364   00318C  2EE8               	decfsz	wreg,f,c
  3365   00318E  D7FE               	bra	u1557
  3366   003190  2E30               	decfsz	??_main^(0+1280),f,c
  3367   003192  D7FC               	bra	u1557
  3368   003194  D000               	nop2	
  3369   003196  D79E               	goto	l2625
  3370   003198                     __end_of_main:
  3371                           	callstack 0
  3372                           
  3373 ;; *************** function _pantallazo *****************
  3374 ;; Defined at:
  3375 ;;		line 38 in file "maincode04.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;		None
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;		None
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 3F/4
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3391 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3393 ;;Total ram usage:        2 bytes
  3394 ;; Hardware stack levels used: 1
  3395 ;; Hardware stack levels required when called: 3
  3396 ;; This function calls:
  3397 ;;		_I2C_BORRAR_LCD
  3398 ;;		_I2C_ESCRIBE_MENSAJE2
  3399 ;;		_I2C_POS_CURSOR
  3400 ;;		_U1_STRING_SEND
  3401 ;; This function is called by:
  3402 ;;		_main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text1
  3407   0035FA                     __ptext1:
  3408                           	callstack 0
  3409   0035FA                     _pantallazo:
  3410                           	callstack 123
  3411                           
  3412                           ; BSR set to: 4
  3413                           ;maincode04.c: 39:     I2C_POS_CURSOR(1,0);
  3414                           
  3415                           ;incstack = 0
  3416   0035FA  0E00               	movlw	0
  3417   0035FC  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  3418   0035FE  0E01               	movlw	1
  3419   003600  EC5C  F01A         	call	_I2C_POS_CURSOR
  3420                           
  3421                           ;maincode04.c: 40:     I2C_ESCRIBE_MENSAJE2("Sem14 UPC Micro");
  3422   003604  0E44               	movlw	low STR_1
  3423   003606  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  3424   003608  EC79  F01B         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  3425                           
  3426                           ;maincode04.c: 41:     I2C_POS_CURSOR(2,0);
  3427   00360C  0E00               	movlw	0
  3428   00360E  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  3429   003610  0E02               	movlw	2
  3430   003612  EC5C  F01A         	call	_I2C_POS_CURSOR
  3431                           
  3432                           ;maincode04.c: 42:     I2C_ESCRIBE_MENSAJE2("Ing. BioMecaEle");
  3433   003616  0E34               	movlw	low STR_2
  3434   003618  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  3435   00361A  EC79  F01B         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  3436                           
  3437                           ;maincode04.c: 43:     U1_STRING_SEND("Hola UPCino estoy mandando datos seriales a la PC
      +                          !");
  3438   00361E  0E01               	movlw	low STR_3
  3439   003620  6E04               	movwf	U1_STRING_SEND@cadena^(0+1280),c
  3440   003622  EC5E  F01B         	call	_U1_STRING_SEND	;wreg free
  3441                           
  3442                           ;maincode04.c: 44:     _delay((unsigned long)((3000)*(32000000UL/4000.0)));
  3443   003626  0E7A               	movlw	122
  3444   003628  6E0C               	movwf	(??_pantallazo+1)^(0+1280),c
  3445   00362A  0EC1               	movlw	193
  3446   00362C  6E0B               	movwf	??_pantallazo^(0+1280),c
  3447   00362E  0E82               	movlw	130
  3448   003630                     u1567:
  3449   003630  2EE8               	decfsz	wreg,f,c
  3450   003632  D7FE               	bra	u1567
  3451   003634  2E0B               	decfsz	??_pantallazo^(0+1280),f,c
  3452   003636  D7FC               	bra	u1567
  3453   003638  2E0C               	decfsz	(??_pantallazo+1)^(0+1280),f,c
  3454   00363A  D7FA               	bra	u1567
  3455                           
  3456                           ;maincode04.c: 45:     I2C_BORRAR_LCD();
  3457   00363C  EC09  F01C         	call	_I2C_BORRAR_LCD	;wreg free
  3458   003640  0012               	return		;funcret
  3459   003642                     __end_of_pantallazo:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _U1_STRING_SEND *****************
  3463 ;; Defined at:
  3464 ;;		line 45 in file "LIB_UART.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  3467 ;;		 -> STR_3(51), 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  i               1    6[COMRAM] unsigned char 
  3470 ;;  tam             1    5[COMRAM] unsigned char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      void 
  3473 ;; Registers used:
  3474 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/4
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3480 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3483 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3484 ;;Total ram usage:        4 bytes
  3485 ;; Hardware stack levels used: 1
  3486 ;; Hardware stack levels required when called: 1
  3487 ;; This function calls:
  3488 ;;		_U1_BYTE_SEND
  3489 ;;		_strlen
  3490 ;; This function is called by:
  3491 ;;		_pantallazo
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text2
  3496   0036BC                     __ptext2:
  3497                           	callstack 0
  3498   0036BC                     _U1_STRING_SEND:
  3499                           	callstack 124
  3500                           
  3501                           ;LIB_UART.c: 45: void U1_STRING_SEND(const char *cadena);LIB_UART.c: 46: {;LIB_UART.c: 4
      +                          7:     unsigned char tam;;LIB_UART.c: 48:     tam = strlen(cadena);
  3502                           
  3503                           ;incstack = 0
  3504   0036BC  C504  F501         	movff	U1_STRING_SEND@cadena,strlen@s
  3505   0036C0  EC94  F01B         	call	_strlen	;wreg free
  3506   0036C4  5001               	movf	?_strlen^(0+1280),w,c
  3507   0036C6  6E06               	movwf	U1_STRING_SEND@tam^(0+1280),c
  3508                           
  3509                           ;LIB_UART.c: 50:  for(i = 0; i<tam; i++)
  3510   0036C8  6A07               	clrf	U1_STRING_SEND@i^(0+1280),c
  3511   0036CA  D00E               	goto	l2153
  3512   0036CC                     l2149:
  3513                           
  3514                           ;LIB_UART.c: 51:  {;LIB_UART.c: 52:   U1_BYTE_SEND(cadena[i]);
  3515   0036CC  5004               	movf	U1_STRING_SEND@cadena^(0+1280),w,c
  3516   0036CE  2407               	addwf	U1_STRING_SEND@i^(0+1280),w,c
  3517   0036D0  6E05               	movwf	??_U1_STRING_SEND^(0+1280),c
  3518   0036D2  C505  F4F6         	movff	??_U1_STRING_SEND,tblptrl
  3519   0036D6                     	if	1	;There is more than 1 active tblptr byte
  3520   0036D6  0E26               	movlw	high __psmallconst
  3521   0036D8  6EF7               	movwf	tblptrh,c
  3522   0036DA                     	endif
  3523   0036DA                     	if	0	;tblptru may be non-zero
  3524   0036DA                     	endif
  3525   0036DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3526   0036DA  0E00               	movlw	low (__psmallconst shr (0+16))
  3527   0036DC  6EF8               	movwf	tblptru,c
  3528   0036DE                     	endif
  3529   0036DE  0008               	tblrd		*
  3530   0036E0  50F5               	movf	tablat,w,c
  3531   0036E2  ECFE  F01B         	call	_U1_BYTE_SEND
  3532                           
  3533                           ; BSR set to: 2
  3534                           ;LIB_UART.c: 53:  }
  3535   0036E6  2A07               	incf	U1_STRING_SEND@i^(0+1280),f,c
  3536   0036E8                     l2153:
  3537   0036E8  5006               	movf	U1_STRING_SEND@tam^(0+1280),w,c
  3538   0036EA  5C07               	subwf	U1_STRING_SEND@i^(0+1280),w,c
  3539   0036EC  B0D8               	btfsc	status,0,c
  3540   0036EE  0012               	return	
  3541   0036F0  D7ED               	goto	l2149
  3542   0036F2                     __end_of_U1_STRING_SEND:
  3543                           	callstack 0
  3544                           
  3545 ;; *************** function _U1_BYTE_SEND *****************
  3546 ;; Defined at:
  3547 ;;		line 39 in file "LIB_UART.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;  dato            1    wreg     unsigned char 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  dato            1    0[COMRAM] unsigned char 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/4
  3558 ;;		On exit  : 3F/2
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3565 ;;Total ram usage:        1 bytes
  3566 ;; Hardware stack levels used: 1
  3567 ;; This function calls:
  3568 ;;		Nothing
  3569 ;; This function is called by:
  3570 ;;		_U1_STRING_SEND
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           	psect	text3
  3575   0037FC                     __ptext3:
  3576                           	callstack 0
  3577   0037FC                     _U1_BYTE_SEND:
  3578                           	callstack 124
  3579                           
  3580                           ;incstack = 0
  3581                           ;U1_BYTE_SEND@dato stored from wreg
  3582   0037FC  6E01               	movwf	U1_BYTE_SEND@dato^(0+1280),c
  3583                           
  3584                           ;LIB_UART.c: 40:     U1TXB = dato;
  3585   0037FE  C501  F2A3         	movff	U1_BYTE_SEND@dato,675	;volatile
  3586   003802                     l316:
  3587   003802  0102               	movlb	2	; () banked
  3588   003804  BFB2               	btfsc	178,7,b	;volatile
  3589   003806  0012               	return	
  3590   003808  D7FC               	goto	l316
  3591   00380A                     __end_of_U1_BYTE_SEND:
  3592                           	callstack 0
  3593                           
  3594 ;; *************** function _I2C_POS_CURSOR *****************
  3595 ;; Defined at:
  3596 ;;		line 70 in file "I2C_LCD.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  fila            1    wreg     unsigned char 
  3599 ;;  columna         1    6[COMRAM] unsigned char 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  fila            1    8[COMRAM] unsigned char 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/3
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3611 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3613 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3614 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3615 ;;Total ram usage:        3 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 2
  3618 ;; This function calls:
  3619 ;;		_I2C_ENVIA_LCD_CMD
  3620 ;; This function is called by:
  3621 ;;		_pantallazo
  3622 ;;		_main
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text4
  3627   0034B8                     __ptext4:
  3628                           	callstack 0
  3629   0034B8                     _I2C_POS_CURSOR:
  3630                           	callstack 123
  3631                           
  3632                           ; BSR set to: 2
  3633                           ;incstack = 0
  3634                           ;I2C_POS_CURSOR@fila stored from wreg
  3635   0034B8  6E09               	movwf	I2C_POS_CURSOR@fila^(0+1280),c
  3636                           
  3637                           ;I2C_LCD.c: 71:  if(fila == 1){
  3638   0034BA  0409               	decf	I2C_POS_CURSOR@fila^(0+1280),w,c
  3639   0034BC  A4D8               	btfss	status,2,c
  3640   0034BE  D005               	goto	l1927
  3641                           
  3642                           ;I2C_LCD.c: 72:   I2C_ENVIA_LCD_CMD(0x80+columna);
  3643   0034C0  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  3644   0034C2  0F80               	addlw	128
  3645   0034C4  EC28  F01A         	call	_I2C_ENVIA_LCD_CMD
  3646                           
  3647                           ;I2C_LCD.c: 73:  }
  3648   0034C8  D01A               	goto	l66
  3649   0034CA                     l1927:
  3650   0034CA  0E02               	movlw	2
  3651   0034CC  1809               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  3652   0034CE  A4D8               	btfss	status,2,c
  3653   0034D0  D005               	goto	l1931
  3654                           
  3655                           ;I2C_LCD.c: 75:   I2C_ENVIA_LCD_CMD(0xC0+columna);
  3656   0034D2  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  3657   0034D4  0FC0               	addlw	192
  3658   0034D6  EC28  F01A         	call	_I2C_ENVIA_LCD_CMD
  3659                           
  3660                           ;I2C_LCD.c: 76:  }
  3661   0034DA  D011               	goto	l66
  3662   0034DC                     l1931:
  3663   0034DC  0E03               	movlw	3
  3664   0034DE  1809               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  3665   0034E0  A4D8               	btfss	status,2,c
  3666   0034E2  D005               	goto	l1935
  3667                           
  3668                           ;I2C_LCD.c: 78:   I2C_ENVIA_LCD_CMD(0x94+columna);
  3669   0034E4  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  3670   0034E6  0F94               	addlw	148
  3671   0034E8  EC28  F01A         	call	_I2C_ENVIA_LCD_CMD
  3672                           
  3673                           ;I2C_LCD.c: 79:  }
  3674   0034EC  D008               	goto	l66
  3675   0034EE                     l1935:
  3676   0034EE  0E04               	movlw	4
  3677   0034F0  1809               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  3678   0034F2  A4D8               	btfss	status,2,c
  3679   0034F4  D004               	goto	l66
  3680                           
  3681                           ;I2C_LCD.c: 81:   I2C_ENVIA_LCD_CMD(0xD4+columna);
  3682   0034F6  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  3683   0034F8  0FD4               	addlw	212
  3684   0034FA  EC28  F01A         	call	_I2C_ENVIA_LCD_CMD
  3685   0034FE                     l66:
  3686                           
  3687                           ;I2C_LCD.c: 83:  _delay((unsigned long)((1)*(32000000UL/4000.0)));
  3688   0034FE  0E0B               	movlw	11
  3689   003500  6E08               	movwf	??_I2C_POS_CURSOR^(0+1280),c
  3690   003502  0E62               	movlw	98
  3691   003504                     u1577:
  3692   003504  2EE8               	decfsz	wreg,f,c
  3693   003506  D7FE               	bra	u1577
  3694   003508  2E08               	decfsz	??_I2C_POS_CURSOR^(0+1280),f,c
  3695   00350A  D7FC               	bra	u1577
  3696   00350C  D000               	nop2	
  3697   00350E  0012               	return		;funcret
  3698   003510                     __end_of_I2C_POS_CURSOR:
  3699                           	callstack 0
  3700                           
  3701 ;; *************** function _I2C_ESCRIBE_MENSAJE2 *****************
  3702 ;; Defined at:
  3703 ;;		line 128 in file "I2C_LCD.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  cadena          1    6[COMRAM] PTR const unsigned char 
  3706 ;;		 -> STR_6(3), STR_5(6), STR_4(9), STR_2(16), 
  3707 ;;		 -> STR_1(16), 
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;  i               1    9[COMRAM] unsigned char 
  3710 ;;  tam             1    8[COMRAM] unsigned char 
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      void 
  3713 ;; Registers used:
  3714 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/3
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3720 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3723 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3724 ;;Total ram usage:        4 bytes
  3725 ;; Hardware stack levels used: 1
  3726 ;; Hardware stack levels required when called: 2
  3727 ;; This function calls:
  3728 ;;		_I2C_ENVIA_LCD_DATA
  3729 ;;		_strlen
  3730 ;; This function is called by:
  3731 ;;		_pantallazo
  3732 ;;		_main
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text5
  3737   0036F2                     __ptext5:
  3738                           	callstack 0
  3739   0036F2                     _I2C_ESCRIBE_MENSAJE2:
  3740                           	callstack 123
  3741                           
  3742                           ;I2C_LCD.c: 129:     unsigned char tam;;I2C_LCD.c: 130:     tam = strlen(cadena);
  3743                           
  3744                           ;incstack = 0
  3745   0036F2  C507  F501         	movff	I2C_ESCRIBE_MENSAJE2@cadena,strlen@s
  3746   0036F6  EC94  F01B         	call	_strlen	;wreg free
  3747   0036FA  5001               	movf	?_strlen^(0+1280),w,c
  3748   0036FC  6E09               	movwf	I2C_ESCRIBE_MENSAJE2@tam^(0+1280),c
  3749                           
  3750                           ;I2C_LCD.c: 132:  for(i = 0; i<tam; i++) {
  3751   0036FE  6A0A               	clrf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),c
  3752   003700  D00E               	goto	l1951
  3753   003702                     l1947:
  3754                           
  3755                           ;I2C_LCD.c: 133:   I2C_ENVIA_LCD_DATA(cadena[i]);
  3756   003702  5007               	movf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  3757   003704  240A               	addwf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),w,c
  3758   003706  6E08               	movwf	??_I2C_ESCRIBE_MENSAJE2^(0+1280),c
  3759   003708  C508  F4F6         	movff	??_I2C_ESCRIBE_MENSAJE2,tblptrl
  3760   00370C                     	if	1	;There is more than 1 active tblptr byte
  3761   00370C  0E26               	movlw	high __psmallconst
  3762   00370E  6EF7               	movwf	tblptrh,c
  3763   003710                     	endif
  3764   003710                     	if	0	;tblptru may be non-zero
  3765   003710                     	endif
  3766   003710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3767   003710  0E00               	movlw	low (__psmallconst shr (0+16))
  3768   003712  6EF8               	movwf	tblptru,c
  3769   003714                     	endif
  3770   003714  0008               	tblrd		*
  3771   003716  50F5               	movf	tablat,w,c
  3772   003718  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  3773                           
  3774                           ;I2C_LCD.c: 134:  }
  3775   00371C  2A0A               	incf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),f,c
  3776   00371E                     l1951:
  3777   00371E  5009               	movf	I2C_ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  3778   003720  5C0A               	subwf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),w,c
  3779   003722  B0D8               	btfsc	status,0,c
  3780   003724  0012               	return	
  3781   003726  D7ED               	goto	l1947
  3782   003728                     __end_of_I2C_ESCRIBE_MENSAJE2:
  3783                           	callstack 0
  3784                           
  3785 ;; *************** function _strlen *****************
  3786 ;; Defined at:
  3787 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  s               1    0[COMRAM] PTR const unsigned char 
  3790 ;;		 -> STR_6(3), STR_5(6), STR_4(9), STR_3(51), 
  3791 ;;		 -> STR_2(16), STR_1(16), 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  a               1    2[COMRAM] PTR const unsigned char 
  3794 ;;		 -> STR_6(3), STR_5(6), STR_4(9), STR_3(51), 
  3795 ;;		 -> STR_2(16), STR_1(16), 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  2    0[COMRAM] unsigned int 
  3798 ;; Registers used:
  3799 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/4
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3808 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3809 ;;Total ram usage:        3 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; This function calls:
  3812 ;;		Nothing
  3813 ;; This function is called by:
  3814 ;;		_I2C_ESCRIBE_MENSAJE2
  3815 ;;		_U1_STRING_SEND
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text6
  3820   003728                     __ptext6:
  3821                           	callstack 0
  3822   003728                     _strlen:
  3823                           	callstack 124
  3824                           
  3825                           ;incstack = 0
  3826   003728  C501  F503         	movff	strlen@s,strlen@a
  3827   00372C  D001               	goto	l1915
  3828   00372E                     l1913:
  3829   00372E  2A01               	incf	strlen@s^(0+1280),f,c
  3830   003730                     l1915:
  3831   003730  C501  F4F6         	movff	strlen@s,tblptrl
  3832   003734                     	if	1	;There is more than 1 active tblptr byte
  3833   003734  0E26               	movlw	high __psmallconst
  3834   003736  6EF7               	movwf	tblptrh,c
  3835   003738                     	endif
  3836   003738                     	if	0	;tblptru may be non-zero
  3837   003738                     	endif
  3838   003738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3839   003738  0E00               	movlw	low (__psmallconst shr (0+16))
  3840   00373A  6EF8               	movwf	tblptru,c
  3841   00373C                     	endif
  3842   00373C  0008               	tblrd		*
  3843   00373E  50F5               	movf	tablat,w,c
  3844   003740  0900               	iorlw	0
  3845   003742  A4D8               	btfss	status,2,c
  3846   003744  D7F4               	goto	l1913
  3847   003746  5003               	movf	strlen@a^(0+1280),w,c
  3848   003748  5C01               	subwf	strlen@s^(0+1280),w,c
  3849   00374A  6E01               	movwf	?_strlen^(0+1280),c
  3850   00374C  6A02               	clrf	(?_strlen+1)^(0+1280),c
  3851   00374E  BE01               	btfsc	?_strlen^(0+1280),7,c
  3852   003750  0602               	decf	(?_strlen+1)^(0+1280),f,c
  3853   003752  0012               	return		;funcret
  3854   003754                     __end_of_strlen:
  3855                           	callstack 0
  3856                           
  3857 ;; *************** function _configuro *****************
  3858 ;; Defined at:
  3859 ;;		line 12 in file "maincode04.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 3F/4
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3877 ;;Total ram usage:        0 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; Hardware stack levels required when called: 4
  3880 ;; This function calls:
  3881 ;;		_I2C_LCD_INIT
  3882 ;;		_U1_INIT
  3883 ;; This function is called by:
  3884 ;;		_main
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text7
  3889   003562                     __ptext7:
  3890                           	callstack 0
  3891   003562                     _configuro:
  3892                           	callstack 122
  3893                           
  3894                           ;maincode04.c: 13:     OSCCON1 = 0x60;
  3895                           
  3896                           ;incstack = 0
  3897   003562  0E60               	movlw	96
  3898   003564  0100               	movlb	0	; () banked
  3899   003566  6FAD               	movwf	173,b	;volatile
  3900                           
  3901                           ;maincode04.c: 14:     OSCFRQ = 0x06;
  3902   003568  0E06               	movlw	6
  3903   00356A  6FB1               	movwf	177,b	;volatile
  3904                           
  3905                           ;maincode04.c: 15:     OSCEN = 0x40;
  3906   00356C  0E40               	movlw	64
  3907   00356E  6FB3               	movwf	179,b	;volatile
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;maincode04.c: 16:     I2C_LCD_INIT();
  3911   003570  EC34  F013         	call	_I2C_LCD_INIT	;wreg free
  3912                           
  3913                           ;maincode04.c: 17:     U1_INIT(207);
  3914   003574  0E00               	movlw	0
  3915   003576  6E02               	movwf	(U1_INIT@velocidad+1)^(0+1280),c
  3916   003578  0ECF               	movlw	207
  3917   00357A  6E01               	movwf	U1_INIT@velocidad^(0+1280),c
  3918   00357C  ECE1  F01B         	call	_U1_INIT	;wreg free
  3919                           
  3920                           ; BSR set to: 2
  3921                           ;maincode04.c: 19:     TRISAbits.TRISA0 = 1;
  3922   003580  80C6               	bsf	198,0,c	;volatile
  3923                           
  3924                           ; BSR set to: 2
  3925                           ;maincode04.c: 20:     ANSELAbits.ANSELA0 = 1;
  3926   003582  0104               	movlb	4	; () banked
  3927   003584  8100               	bsf	0,0,b	;volatile
  3928                           
  3929                           ; BSR set to: 4
  3930                           ;maincode04.c: 21:     ADCON0bits.CS = 1;
  3931   003586  0103               	movlb	3	; () banked
  3932   003588  89F3               	bsf	243,4,b	;volatile
  3933                           
  3934                           ; BSR set to: 3
  3935                           ;maincode04.c: 22:     ADCON0bits.ADFM = 0;
  3936   00358A  0EF3               	movlw	-13
  3937   00358C  17F3               	andwf	243,f,b	;volatile
  3938                           
  3939                           ; BSR set to: 3
  3940                           ;maincode04.c: 23:     ADPCH = 0x00;
  3941   00358E  6BEC               	clrf	236,b	;volatile
  3942                           
  3943                           ; BSR set to: 3
  3944                           ;maincode04.c: 24:     ADREF = 0x00;
  3945   003590  6BF8               	clrf	248,b	;volatile
  3946                           
  3947                           ; BSR set to: 3
  3948                           ;maincode04.c: 25:     ADCON0bits.ADON = 1;
  3949   003592  8FF3               	bsf	243,7,b	;volatile
  3950                           
  3951                           ; BSR set to: 3
  3952                           ;maincode04.c: 27:     TRISEbits.TRISE0 = 0;
  3953   003594  90CA               	bcf	202,0,c	;volatile
  3954                           
  3955                           ; BSR set to: 3
  3956                           ;maincode04.c: 28:     ANSELEbits.ANSELE0 = 0;
  3957   003596  0104               	movlb	4	; () banked
  3958   003598  9120               	bcf	32,0,b	;volatile
  3959                           
  3960                           ; BSR set to: 4
  3961                           ;maincode04.c: 29:     TRISCbits.TRISC1 = 1;
  3962   00359A  82C8               	bsf	200,1,c	;volatile
  3963                           
  3964                           ; BSR set to: 4
  3965                           ;maincode04.c: 30:     ANSELCbits.ANSELC1 = 0;
  3966   00359C  9310               	bcf	16,1,b	;volatile
  3967                           
  3968                           ; BSR set to: 4
  3969                           ;maincode04.c: 31:     T1CLK = 0x01;
  3970   00359E  0E01               	movlw	1
  3971   0035A0  0103               	movlb	3	; () banked
  3972   0035A2  6F21               	movwf	33,b	;volatile
  3973                           
  3974                           ; BSR set to: 3
  3975                           ;maincode04.c: 32:     T1CON = 0x32;
  3976   0035A4  0E32               	movlw	50
  3977   0035A6  6F1E               	movwf	30,b	;volatile
  3978                           
  3979                           ; BSR set to: 3
  3980                           ;maincode04.c: 34:     TRISFbits.TRISF5 = 0;
  3981   0035A8  9ACB               	bcf	203,5,c	;volatile
  3982                           
  3983                           ; BSR set to: 3
  3984                           ;maincode04.c: 35:     ANSELFbits.ANSELF5 = 0;
  3985   0035AA  0104               	movlb	4	; () banked
  3986   0035AC  9B28               	bcf	40,5,b	;volatile
  3987                           
  3988                           ; BSR set to: 4
  3989   0035AE  0012               	return		;funcret
  3990   0035B0                     __end_of_configuro:
  3991                           	callstack 0
  3992                           
  3993 ;; *************** function _U1_INIT *****************
  3994 ;; Defined at:
  3995 ;;		line 23 in file "LIB_UART.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  velocidad       2    0[COMRAM] unsigned int 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;		None
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg, status,2
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 3F/2
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4013 ;;Total ram usage:        2 bytes
  4014 ;; Hardware stack levels used: 1
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_configuro
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text8
  4023   0037C2                     __ptext8:
  4024                           	callstack 0
  4025   0037C2                     _U1_INIT:
  4026                           	callstack 125
  4027                           
  4028                           ;LIB_UART.c: 25:     U1BRGH = (velocidad >>8) & 0x00FF;
  4029                           
  4030                           ; BSR set to: 4
  4031                           ;incstack = 0
  4032   0037C2  C502  F2AF         	movff	U1_INIT@velocidad+1,687	;volatile
  4033                           
  4034                           ;LIB_UART.c: 26:     U1BRGL = velocidad & 0x00FF;
  4035   0037C6  C501  F2AE         	movff	U1_INIT@velocidad,686	;volatile
  4036                           
  4037                           ;LIB_UART.c: 27:     U1CON0 = 0x30;
  4038   0037CA  0E30               	movlw	48
  4039   0037CC  0102               	movlb	2	; () banked
  4040   0037CE  6FAB               	movwf	171,b	;volatile
  4041                           
  4042                           ;LIB_UART.c: 28:     U1CON1 = 0x80;
  4043   0037D0  0E80               	movlw	128
  4044   0037D2  6FAC               	movwf	172,b	;volatile
  4045                           
  4046                           ; BSR set to: 2
  4047                           ;LIB_UART.c: 29:     U1CON2 = 0x00;
  4048   0037D4  6BAD               	clrf	173,b	;volatile
  4049                           
  4050                           ;LIB_UART.c: 30:     RF0PPS = 0x20;
  4051   0037D6  0E20               	movlw	32
  4052   0037D8  6F29               	movwf	41,b	;volatile
  4053                           
  4054                           ;LIB_UART.c: 31:     U1RXPPS = 0x29;
  4055   0037DA  0E29               	movlw	41
  4056   0037DC  6F72               	movwf	114,b	;volatile
  4057                           
  4058                           ; BSR set to: 2
  4059   0037DE  0012               	return		;funcret
  4060   0037E0                     __end_of_U1_INIT:
  4061                           	callstack 0
  4062                           
  4063 ;; *************** function _I2C_LCD_INIT *****************
  4064 ;; Defined at:
  4065 ;;		line 187 in file "I2C_LCD.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;		None
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      void 
  4072 ;; Registers used:
  4073 ;;		wreg, status,2, status,0, cstack
  4074 ;; Tracked objects:
  4075 ;;		On entry : 3F/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4081 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4083 ;;Total ram usage:        2 bytes
  4084 ;; Hardware stack levels used: 1
  4085 ;; Hardware stack levels required when called: 3
  4086 ;; This function calls:
  4087 ;;		_I2C1_INIT
  4088 ;;		_I2C1_WRITESINGLEBYTE
  4089 ;;		_I2C_BORRAR_LCD
  4090 ;;		_I2C_CURSOR_HOME
  4091 ;;		_I2C_CURSOR_ONOFF
  4092 ;; This function is called by:
  4093 ;;		_configuro
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text9
  4098   002668                     __ptext9:
  4099                           	callstack 0
  4100   002668                     _I2C_LCD_INIT:
  4101                           	callstack 122
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;I2C_LCD.c: 188:     I2C1_INIT();
  4105                           
  4106                           ; BSR set to: 2
  4107                           ;incstack = 0
  4108   002668  ECD8  F01A         	call	_I2C1_INIT	;wreg free
  4109                           
  4110                           ; BSR set to: 2
  4111                           ;I2C_LCD.c: 189:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  4112   00266C  0E9C               	movlw	156
  4113   00266E  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4114   002670  0ED7               	movlw	215
  4115   002672                     u1587:
  4116   002672  2EE8               	decfsz	wreg,f,c
  4117   002674  D7FE               	bra	u1587
  4118   002676  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4119   002678  D7FC               	bra	u1587
  4120   00267A  0000               	nop	
  4121                           
  4122                           ;I2C_LCD.c: 191:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4123   00267C  0E00               	movlw	0
  4124   00267E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4125   002680  0E27               	movlw	39
  4126   002682  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4127                           
  4128                           ; BSR set to: 2
  4129                           ;I2C_LCD.c: 192:     _delay((unsigned long)((1000)*(32000000UL/4000.0)));
  4130   002686  0E29               	movlw	41
  4131   002688  6E09               	movwf	(??_I2C_LCD_INIT+1)^(0+1280),c
  4132   00268A  0E96               	movlw	150
  4133   00268C  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4134   00268E  0E7F               	movlw	127
  4135   002690                     u1597:
  4136   002690  2EE8               	decfsz	wreg,f,c
  4137   002692  D7FE               	bra	u1597
  4138   002694  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4139   002696  D7FC               	bra	u1597
  4140   002698  2E09               	decfsz	(??_I2C_LCD_INIT+1)^(0+1280),f,c
  4141   00269A  D7FA               	bra	u1597
  4142   00269C  0000               	nop	
  4143                           
  4144                           ;I2C_LCD.c: 195:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4145   00269E  0E30               	movlw	48
  4146   0026A0  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4147   0026A2  0E27               	movlw	39
  4148   0026A4  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4149                           
  4150                           ; BSR set to: 2
  4151                           ;I2C_LCD.c: 196:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4152   0026A8  0E30               	movlw	48
  4153   0026AA  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4154   0026AC  0E27               	movlw	39
  4155   0026AE  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4156                           
  4157                           ; BSR set to: 2
  4158                           ;I2C_LCD.c: 197:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4159   0026B2  0E35               	movlw	53
  4160   0026B4                     u1607:
  4161   0026B4  2EE8               	decfsz	wreg,f,c
  4162   0026B6  D7FE               	bra	u1607
  4163   0026B8  0000               	nop	
  4164                           
  4165                           ;I2C_LCD.c: 198:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x34);
  4166   0026BA  0E34               	movlw	52
  4167   0026BC  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4168   0026BE  0E27               	movlw	39
  4169   0026C0  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4170                           
  4171                           ; BSR set to: 2
  4172                           ;I2C_LCD.c: 199:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4173   0026C4  0E35               	movlw	53
  4174   0026C6                     u1617:
  4175   0026C6  2EE8               	decfsz	wreg,f,c
  4176   0026C8  D7FE               	bra	u1617
  4177   0026CA  0000               	nop	
  4178                           
  4179                           ;I2C_LCD.c: 200:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4180   0026CC  0E30               	movlw	48
  4181   0026CE  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4182   0026D0  0E27               	movlw	39
  4183   0026D2  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4184                           
  4185                           ; BSR set to: 2
  4186                           ;I2C_LCD.c: 201:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
  4187   0026D6  0E34               	movlw	52
  4188   0026D8  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4189   0026DA  0EF2               	movlw	242
  4190   0026DC                     u1627:
  4191   0026DC  2EE8               	decfsz	wreg,f,c
  4192   0026DE  D7FE               	bra	u1627
  4193   0026E0  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4194   0026E2  D7FC               	bra	u1627
  4195                           
  4196                           ;I2C_LCD.c: 203:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4197   0026E4  0E30               	movlw	48
  4198   0026E6  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4199   0026E8  0E27               	movlw	39
  4200   0026EA  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4201                           
  4202                           ; BSR set to: 2
  4203                           ;I2C_LCD.c: 204:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4204   0026EE  0E35               	movlw	53
  4205   0026F0                     u1637:
  4206   0026F0  2EE8               	decfsz	wreg,f,c
  4207   0026F2  D7FE               	bra	u1637
  4208   0026F4  0000               	nop	
  4209                           
  4210                           ;I2C_LCD.c: 205:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x34);
  4211   0026F6  0E34               	movlw	52
  4212   0026F8  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4213   0026FA  0E27               	movlw	39
  4214   0026FC  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4215                           
  4216                           ; BSR set to: 2
  4217                           ;I2C_LCD.c: 206:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4218   002700  0E35               	movlw	53
  4219   002702                     u1647:
  4220   002702  2EE8               	decfsz	wreg,f,c
  4221   002704  D7FE               	bra	u1647
  4222   002706  0000               	nop	
  4223                           
  4224                           ;I2C_LCD.c: 207:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4225   002708  0E30               	movlw	48
  4226   00270A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4227   00270C  0E27               	movlw	39
  4228   00270E  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4229                           
  4230                           ; BSR set to: 2
  4231                           ;I2C_LCD.c: 209:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
  4232   002712  0E34               	movlw	52
  4233   002714  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4234   002716  0EF2               	movlw	242
  4235   002718                     u1657:
  4236   002718  2EE8               	decfsz	wreg,f,c
  4237   00271A  D7FE               	bra	u1657
  4238   00271C  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4239   00271E  D7FC               	bra	u1657
  4240                           
  4241                           ;I2C_LCD.c: 211:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4242   002720  0E30               	movlw	48
  4243   002722  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4244   002724  0E27               	movlw	39
  4245   002726  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4246                           
  4247                           ; BSR set to: 2
  4248                           ;I2C_LCD.c: 212:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4249   00272A  0E35               	movlw	53
  4250   00272C                     u1667:
  4251   00272C  2EE8               	decfsz	wreg,f,c
  4252   00272E  D7FE               	bra	u1667
  4253   002730  0000               	nop	
  4254                           
  4255                           ;I2C_LCD.c: 213:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x34);
  4256   002732  0E34               	movlw	52
  4257   002734  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4258   002736  0E27               	movlw	39
  4259   002738  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4260                           
  4261                           ; BSR set to: 2
  4262                           ;I2C_LCD.c: 214:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4263   00273C  0E35               	movlw	53
  4264   00273E                     u1677:
  4265   00273E  2EE8               	decfsz	wreg,f,c
  4266   002740  D7FE               	bra	u1677
  4267   002742  0000               	nop	
  4268                           
  4269                           ;I2C_LCD.c: 215:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  4270   002744  0E30               	movlw	48
  4271   002746  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4272   002748  0E27               	movlw	39
  4273   00274A  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4274                           
  4275                           ; BSR set to: 2
  4276                           ;I2C_LCD.c: 217:     _delay((unsigned long)((250)*(32000000UL/4000000.0)));
  4277   00274E  0E03               	movlw	3
  4278   002750  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4279   002752  0E98               	movlw	152
  4280   002754                     u1687:
  4281   002754  2EE8               	decfsz	wreg,f,c
  4282   002756  D7FE               	bra	u1687
  4283   002758  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4284   00275A  D7FC               	bra	u1687
  4285                           
  4286                           ;I2C_LCD.c: 219:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4287   00275C  0E20               	movlw	32
  4288   00275E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4289   002760  0E27               	movlw	39
  4290   002762  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4291                           
  4292                           ; BSR set to: 2
  4293                           ;I2C_LCD.c: 220:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4294   002766  0E35               	movlw	53
  4295   002768                     u1697:
  4296   002768  2EE8               	decfsz	wreg,f,c
  4297   00276A  D7FE               	bra	u1697
  4298   00276C  0000               	nop	
  4299                           
  4300                           ;I2C_LCD.c: 221:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x24);
  4301   00276E  0E24               	movlw	36
  4302   002770  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4303   002772  0E27               	movlw	39
  4304   002774  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4305                           
  4306                           ; BSR set to: 2
  4307                           ;I2C_LCD.c: 222:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4308   002778  0E35               	movlw	53
  4309   00277A                     u1707:
  4310   00277A  2EE8               	decfsz	wreg,f,c
  4311   00277C  D7FE               	bra	u1707
  4312   00277E  0000               	nop	
  4313                           
  4314                           ;I2C_LCD.c: 223:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4315   002780  0E20               	movlw	32
  4316   002782  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4317   002784  0E27               	movlw	39
  4318   002786  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4319                           
  4320                           ; BSR set to: 2
  4321                           ;I2C_LCD.c: 225:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4322   00278A  0EC8               	movlw	200
  4323   00278C                     u1717:
  4324   00278C  2EE8               	decfsz	wreg,f,c
  4325   00278E  D7FE               	bra	u1717
  4326                           
  4327                           ;I2C_LCD.c: 227:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4328   002790  0E20               	movlw	32
  4329   002792  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4330   002794  0E27               	movlw	39
  4331   002796  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4332                           
  4333                           ; BSR set to: 2
  4334                           ;I2C_LCD.c: 228:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4335   00279A  0E35               	movlw	53
  4336   00279C                     u1727:
  4337   00279C  2EE8               	decfsz	wreg,f,c
  4338   00279E  D7FE               	bra	u1727
  4339   0027A0  0000               	nop	
  4340                           
  4341                           ;I2C_LCD.c: 229:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x24);
  4342   0027A2  0E24               	movlw	36
  4343   0027A4  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4344   0027A6  0E27               	movlw	39
  4345   0027A8  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4346                           
  4347                           ; BSR set to: 2
  4348                           ;I2C_LCD.c: 230:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4349   0027AC  0E35               	movlw	53
  4350   0027AE                     u1737:
  4351   0027AE  2EE8               	decfsz	wreg,f,c
  4352   0027B0  D7FE               	bra	u1737
  4353   0027B2  0000               	nop	
  4354                           
  4355                           ;I2C_LCD.c: 231:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4356   0027B4  0E20               	movlw	32
  4357   0027B6  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4358   0027B8  0E27               	movlw	39
  4359   0027BA  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4360                           
  4361                           ; BSR set to: 2
  4362                           ;I2C_LCD.c: 233:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4363   0027BE  0EC8               	movlw	200
  4364   0027C0                     u1747:
  4365   0027C0  2EE8               	decfsz	wreg,f,c
  4366   0027C2  D7FE               	bra	u1747
  4367                           
  4368                           ;I2C_LCD.c: 235:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x80);
  4369   0027C4  0E80               	movlw	128
  4370   0027C6  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4371   0027C8  0E27               	movlw	39
  4372   0027CA  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4373                           
  4374                           ; BSR set to: 2
  4375                           ;I2C_LCD.c: 236:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4376   0027CE  0E35               	movlw	53
  4377   0027D0                     u1757:
  4378   0027D0  2EE8               	decfsz	wreg,f,c
  4379   0027D2  D7FE               	bra	u1757
  4380   0027D4  0000               	nop	
  4381                           
  4382                           ;I2C_LCD.c: 237:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x84);
  4383   0027D6  0E84               	movlw	132
  4384   0027D8  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4385   0027DA  0E27               	movlw	39
  4386   0027DC  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4387                           
  4388                           ; BSR set to: 2
  4389                           ;I2C_LCD.c: 238:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4390   0027E0  0E35               	movlw	53
  4391   0027E2                     u1767:
  4392   0027E2  2EE8               	decfsz	wreg,f,c
  4393   0027E4  D7FE               	bra	u1767
  4394   0027E6  0000               	nop	
  4395                           
  4396                           ;I2C_LCD.c: 239:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x80);
  4397   0027E8  0E80               	movlw	128
  4398   0027EA  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4399   0027EC  0E27               	movlw	39
  4400   0027EE  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4401                           
  4402                           ; BSR set to: 2
  4403                           ;I2C_LCD.c: 241:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4404   0027F2  0EC8               	movlw	200
  4405   0027F4                     u1777:
  4406   0027F4  2EE8               	decfsz	wreg,f,c
  4407   0027F6  D7FE               	bra	u1777
  4408                           
  4409                           ;I2C_LCD.c: 243:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4410   0027F8  0E00               	movlw	0
  4411   0027FA  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4412   0027FC  0E27               	movlw	39
  4413   0027FE  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4414                           
  4415                           ; BSR set to: 2
  4416                           ;I2C_LCD.c: 244:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4417   002802  0E35               	movlw	53
  4418   002804                     u1787:
  4419   002804  2EE8               	decfsz	wreg,f,c
  4420   002806  D7FE               	bra	u1787
  4421   002808  0000               	nop	
  4422                           
  4423                           ;I2C_LCD.c: 245:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  4424   00280A  0E04               	movlw	4
  4425   00280C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4426   00280E  0E27               	movlw	39
  4427   002810  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4428                           
  4429                           ; BSR set to: 2
  4430                           ;I2C_LCD.c: 246:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4431   002814  0E35               	movlw	53
  4432   002816                     u1797:
  4433   002816  2EE8               	decfsz	wreg,f,c
  4434   002818  D7FE               	bra	u1797
  4435   00281A  0000               	nop	
  4436                           
  4437                           ;I2C_LCD.c: 247:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4438   00281C  0E00               	movlw	0
  4439   00281E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4440   002820  0E27               	movlw	39
  4441   002822  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4442                           
  4443                           ; BSR set to: 2
  4444                           ;I2C_LCD.c: 249:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4445   002826  0EC8               	movlw	200
  4446   002828                     u1807:
  4447   002828  2EE8               	decfsz	wreg,f,c
  4448   00282A  D7FE               	bra	u1807
  4449                           
  4450                           ;I2C_LCD.c: 251:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0xC0);
  4451   00282C  0EC0               	movlw	192
  4452   00282E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4453   002830  0E27               	movlw	39
  4454   002832  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4455                           
  4456                           ; BSR set to: 2
  4457                           ;I2C_LCD.c: 252:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4458   002836  0E35               	movlw	53
  4459   002838                     u1817:
  4460   002838  2EE8               	decfsz	wreg,f,c
  4461   00283A  D7FE               	bra	u1817
  4462   00283C  0000               	nop	
  4463                           
  4464                           ;I2C_LCD.c: 253:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0xC4);
  4465   00283E  0EC4               	movlw	196
  4466   002840  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4467   002842  0E27               	movlw	39
  4468   002844  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4469                           
  4470                           ; BSR set to: 2
  4471                           ;I2C_LCD.c: 254:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4472   002848  0E35               	movlw	53
  4473   00284A                     u1827:
  4474   00284A  2EE8               	decfsz	wreg,f,c
  4475   00284C  D7FE               	bra	u1827
  4476   00284E  0000               	nop	
  4477                           
  4478                           ;I2C_LCD.c: 255:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0xC0);
  4479   002850  0EC0               	movlw	192
  4480   002852  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4481   002854  0E27               	movlw	39
  4482   002856  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4483                           
  4484                           ; BSR set to: 2
  4485                           ;I2C_LCD.c: 257:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4486   00285A  0EC8               	movlw	200
  4487   00285C                     u1837:
  4488   00285C  2EE8               	decfsz	wreg,f,c
  4489   00285E  D7FE               	bra	u1837
  4490                           
  4491                           ;I2C_LCD.c: 259:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4492   002860  0E00               	movlw	0
  4493   002862  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4494   002864  0E27               	movlw	39
  4495   002866  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4496                           
  4497                           ; BSR set to: 2
  4498                           ;I2C_LCD.c: 260:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4499   00286A  0E35               	movlw	53
  4500   00286C                     u1847:
  4501   00286C  2EE8               	decfsz	wreg,f,c
  4502   00286E  D7FE               	bra	u1847
  4503   002870  0000               	nop	
  4504                           
  4505                           ;I2C_LCD.c: 261:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  4506   002872  0E04               	movlw	4
  4507   002874  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4508   002876  0E27               	movlw	39
  4509   002878  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4510                           
  4511                           ; BSR set to: 2
  4512                           ;I2C_LCD.c: 262:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4513   00287C  0E35               	movlw	53
  4514   00287E                     u1857:
  4515   00287E  2EE8               	decfsz	wreg,f,c
  4516   002880  D7FE               	bra	u1857
  4517   002882  0000               	nop	
  4518                           
  4519                           ;I2C_LCD.c: 263:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4520   002884  0E00               	movlw	0
  4521   002886  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4522   002888  0E27               	movlw	39
  4523   00288A  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4524                           
  4525                           ; BSR set to: 2
  4526                           ;I2C_LCD.c: 265:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4527   00288E  0EC8               	movlw	200
  4528   002890                     u1867:
  4529   002890  2EE8               	decfsz	wreg,f,c
  4530   002892  D7FE               	bra	u1867
  4531                           
  4532                           ;I2C_LCD.c: 267:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x10);
  4533   002894  0E10               	movlw	16
  4534   002896  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4535   002898  0E27               	movlw	39
  4536   00289A  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4537                           
  4538                           ; BSR set to: 2
  4539                           ;I2C_LCD.c: 268:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4540   00289E  0E35               	movlw	53
  4541   0028A0                     u1877:
  4542   0028A0  2EE8               	decfsz	wreg,f,c
  4543   0028A2  D7FE               	bra	u1877
  4544   0028A4  0000               	nop	
  4545                           
  4546                           ;I2C_LCD.c: 269:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x14);
  4547   0028A6  0E14               	movlw	20
  4548   0028A8  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4549   0028AA  0E27               	movlw	39
  4550   0028AC  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4551                           
  4552                           ; BSR set to: 2
  4553                           ;I2C_LCD.c: 270:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4554   0028B0  0E35               	movlw	53
  4555   0028B2                     u1887:
  4556   0028B2  2EE8               	decfsz	wreg,f,c
  4557   0028B4  D7FE               	bra	u1887
  4558   0028B6  0000               	nop	
  4559                           
  4560                           ;I2C_LCD.c: 271:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x10);
  4561   0028B8  0E10               	movlw	16
  4562   0028BA  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4563   0028BC  0E27               	movlw	39
  4564   0028BE  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4565                           
  4566                           ; BSR set to: 2
  4567                           ;I2C_LCD.c: 273:      _delay((unsigned long)((2)*(32000000UL/4000.0)));
  4568   0028C2  0E15               	movlw	21
  4569   0028C4  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4570   0028C6  0EC6               	movlw	198
  4571   0028C8                     u1897:
  4572   0028C8  2EE8               	decfsz	wreg,f,c
  4573   0028CA  D7FE               	bra	u1897
  4574   0028CC  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4575   0028CE  D7FC               	bra	u1897
  4576   0028D0  D000               	nop2	
  4577                           
  4578                           ;I2C_LCD.c: 275:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4579   0028D2  0E00               	movlw	0
  4580   0028D4  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4581   0028D6  0E27               	movlw	39
  4582   0028D8  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4583                           
  4584                           ; BSR set to: 2
  4585                           ;I2C_LCD.c: 276:     _delay((unsigned long)((02)*(32000000UL/4000000.0)));
  4586   0028DC  0E05               	movlw	5
  4587   0028DE                     u1907:
  4588   0028DE  2EE8               	decfsz	wreg,f,c
  4589   0028E0  D7FE               	bra	u1907
  4590   0028E2  0000               	nop	
  4591                           
  4592                           ;I2C_LCD.c: 277:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  4593   0028E4  0E04               	movlw	4
  4594   0028E6  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4595   0028E8  0E27               	movlw	39
  4596   0028EA  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4597                           
  4598                           ; BSR set to: 2
  4599                           ;I2C_LCD.c: 278:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4600   0028EE  0E35               	movlw	53
  4601   0028F0                     u1917:
  4602   0028F0  2EE8               	decfsz	wreg,f,c
  4603   0028F2  D7FE               	bra	u1917
  4604   0028F4  0000               	nop	
  4605                           
  4606                           ;I2C_LCD.c: 279:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4607   0028F6  0E00               	movlw	0
  4608   0028F8  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4609   0028FA  0E27               	movlw	39
  4610   0028FC  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4611                           
  4612                           ; BSR set to: 2
  4613                           ;I2C_LCD.c: 281:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4614   002900  0EC8               	movlw	200
  4615   002902                     u1927:
  4616   002902  2EE8               	decfsz	wreg,f,c
  4617   002904  D7FE               	bra	u1927
  4618                           
  4619                           ;I2C_LCD.c: 283:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x60);
  4620   002906  0E60               	movlw	96
  4621   002908  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4622   00290A  0E27               	movlw	39
  4623   00290C  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4624                           
  4625                           ; BSR set to: 2
  4626                           ;I2C_LCD.c: 284:     _delay((unsigned long)((02)*(32000000UL/4000000.0)));
  4627   002910  0E05               	movlw	5
  4628   002912                     u1937:
  4629   002912  2EE8               	decfsz	wreg,f,c
  4630   002914  D7FE               	bra	u1937
  4631   002916  0000               	nop	
  4632                           
  4633                           ;I2C_LCD.c: 285:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x64);
  4634   002918  0E64               	movlw	100
  4635   00291A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4636   00291C  0E27               	movlw	39
  4637   00291E  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4638                           
  4639                           ; BSR set to: 2
  4640                           ;I2C_LCD.c: 286:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4641   002922  0E35               	movlw	53
  4642   002924                     u1947:
  4643   002924  2EE8               	decfsz	wreg,f,c
  4644   002926  D7FE               	bra	u1947
  4645   002928  0000               	nop	
  4646                           
  4647                           ;I2C_LCD.c: 287:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x60);
  4648   00292A  0E60               	movlw	96
  4649   00292C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4650   00292E  0E27               	movlw	39
  4651   002930  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4652                           
  4653                           ; BSR set to: 2
  4654                           ;I2C_LCD.c: 289:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4655   002934  0EC8               	movlw	200
  4656   002936                     u1957:
  4657   002936  2EE8               	decfsz	wreg,f,c
  4658   002938  D7FE               	bra	u1957
  4659                           
  4660                           ;I2C_LCD.c: 291:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4661   00293A  0E00               	movlw	0
  4662   00293C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4663   00293E  0E27               	movlw	39
  4664   002940  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4665                           
  4666                           ; BSR set to: 2
  4667                           ;I2C_LCD.c: 292:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4668   002944  0E35               	movlw	53
  4669   002946                     u1967:
  4670   002946  2EE8               	decfsz	wreg,f,c
  4671   002948  D7FE               	bra	u1967
  4672   00294A  0000               	nop	
  4673                           
  4674                           ;I2C_LCD.c: 293:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  4675   00294C  0E04               	movlw	4
  4676   00294E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4677   002950  0E27               	movlw	39
  4678   002952  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4679                           
  4680                           ; BSR set to: 2
  4681                           ;I2C_LCD.c: 294:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4682   002956  0E35               	movlw	53
  4683   002958                     u1977:
  4684   002958  2EE8               	decfsz	wreg,f,c
  4685   00295A  D7FE               	bra	u1977
  4686   00295C  0000               	nop	
  4687                           
  4688                           ;I2C_LCD.c: 295:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  4689   00295E  0E00               	movlw	0
  4690   002960  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4691   002962  0E27               	movlw	39
  4692   002964  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4693                           
  4694                           ; BSR set to: 2
  4695                           ;I2C_LCD.c: 297:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  4696   002968  0EC8               	movlw	200
  4697   00296A                     u1987:
  4698   00296A  2EE8               	decfsz	wreg,f,c
  4699   00296C  D7FE               	bra	u1987
  4700                           
  4701                           ;I2C_LCD.c: 299:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4702   00296E  0E20               	movlw	32
  4703   002970  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4704   002972  0E27               	movlw	39
  4705   002974  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4706                           
  4707                           ; BSR set to: 2
  4708                           ;I2C_LCD.c: 300:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4709   002978  0E35               	movlw	53
  4710   00297A                     u1997:
  4711   00297A  2EE8               	decfsz	wreg,f,c
  4712   00297C  D7FE               	bra	u1997
  4713   00297E  0000               	nop	
  4714                           
  4715                           ;I2C_LCD.c: 301:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x24);
  4716   002980  0E24               	movlw	36
  4717   002982  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4718   002984  0E27               	movlw	39
  4719   002986  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4720                           
  4721                           ; BSR set to: 2
  4722                           ;I2C_LCD.c: 302:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4723   00298A  0E35               	movlw	53
  4724   00298C                     u2007:
  4725   00298C  2EE8               	decfsz	wreg,f,c
  4726   00298E  D7FE               	bra	u2007
  4727   002990  0000               	nop	
  4728                           
  4729                           ;I2C_LCD.c: 303:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  4730   002992  0E20               	movlw	32
  4731   002994  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4732   002996  0E27               	movlw	39
  4733   002998  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4734                           
  4735                           ; BSR set to: 2
  4736                           ;I2C_LCD.c: 305:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  4737   00299C  0E9C               	movlw	156
  4738   00299E  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  4739   0029A0  0ED7               	movlw	215
  4740   0029A2                     u2017:
  4741   0029A2  2EE8               	decfsz	wreg,f,c
  4742   0029A4  D7FE               	bra	u2017
  4743   0029A6  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  4744   0029A8  D7FC               	bra	u2017
  4745   0029AA  0000               	nop	
  4746                           
  4747                           ;I2C_LCD.c: 306:     I2C_BORRAR_LCD();
  4748   0029AC  EC09  F01C         	call	_I2C_BORRAR_LCD	;wreg free
  4749                           
  4750                           ;I2C_LCD.c: 307:     I2C_CURSOR_HOME();
  4751   0029B0  EC05  F01C         	call	_I2C_CURSOR_HOME	;wreg free
  4752                           
  4753                           ;I2C_LCD.c: 308:     I2C_CURSOR_ONOFF(1);
  4754   0029B4  0E01               	movlw	1
  4755   0029B6  ECF0  F01B         	call	_I2C_CURSOR_ONOFF
  4756   0029BA  0012               	return		;funcret
  4757   0029BC                     __end_of_I2C_LCD_INIT:
  4758                           	callstack 0
  4759                           
  4760 ;; *************** function _I2C_CURSOR_ONOFF *****************
  4761 ;; Defined at:
  4762 ;;		line 116 in file "I2C_LCD.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;  estado          1    wreg     unsigned char 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  estado          1    6[COMRAM] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      void 
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, status,0, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/2
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4780 ;;Total ram usage:        1 bytes
  4781 ;; Hardware stack levels used: 1
  4782 ;; Hardware stack levels required when called: 2
  4783 ;; This function calls:
  4784 ;;		_I2C_ENVIA_LCD_CMD
  4785 ;; This function is called by:
  4786 ;;		_I2C_LCD_INIT
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text10
  4791   0037E0                     __ptext10:
  4792                           	callstack 0
  4793   0037E0                     _I2C_CURSOR_ONOFF:
  4794                           	callstack 122
  4795                           
  4796                           ;incstack = 0
  4797                           ;I2C_CURSOR_ONOFF@estado stored from wreg
  4798   0037E0  6E07               	movwf	I2C_CURSOR_ONOFF@estado^(0+1280),c
  4799                           
  4800                           ;I2C_LCD.c: 117:  if(estado == 0) I2C_ENVIA_LCD_CMD(0x0E);
  4801   0037E2  5007               	movf	I2C_CURSOR_ONOFF@estado^(0+1280),w,c
  4802   0037E4  A4D8               	btfss	status,2,c
  4803   0037E6  D003               	goto	l1889
  4804   0037E8  0E0E               	movlw	14
  4805   0037EA  EC28  F01A         	call	_I2C_ENVIA_LCD_CMD
  4806   0037EE                     l1889:
  4807                           
  4808                           ;I2C_LCD.c: 118:  if(estado == 1) I2C_ENVIA_LCD_CMD(0x0C);
  4809   0037EE  0407               	decf	I2C_CURSOR_ONOFF@estado^(0+1280),w,c
  4810   0037F0  A4D8               	btfss	status,2,c
  4811   0037F2  0012               	return	
  4812   0037F4  0E0C               	movlw	12
  4813   0037F6  EC28  F01A         	call	_I2C_ENVIA_LCD_CMD
  4814   0037FA  0012               	return		;funcret
  4815   0037FC                     __end_of_I2C_CURSOR_ONOFF:
  4816                           	callstack 0
  4817                           
  4818 ;; *************** function _I2C_CURSOR_HOME *****************
  4819 ;; Defined at:
  4820 ;;		line 96 in file "I2C_LCD.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;		None
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;		None
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      void 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/2
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4838 ;;Total ram usage:        0 bytes
  4839 ;; Hardware stack levels used: 1
  4840 ;; Hardware stack levels required when called: 2
  4841 ;; This function calls:
  4842 ;;		_I2C_ENVIA_LCD_CMD
  4843 ;; This function is called by:
  4844 ;;		_I2C_LCD_INIT
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text11
  4849   00380A                     __ptext11:
  4850                           	callstack 0
  4851   00380A                     _I2C_CURSOR_HOME:
  4852                           	callstack 122
  4853                           
  4854                           ;I2C_LCD.c: 97:  I2C_ENVIA_LCD_CMD(0x02);
  4855                           
  4856                           ;incstack = 0
  4857   00380A  0E02               	movlw	2
  4858   00380C  EC28  F01A         	call	_I2C_ENVIA_LCD_CMD
  4859   003810  0012               	return		;funcret
  4860   003812                     __end_of_I2C_CURSOR_HOME:
  4861                           	callstack 0
  4862                           
  4863 ;; *************** function _I2C_BORRAR_LCD *****************
  4864 ;; Defined at:
  4865 ;;		line 155 in file "I2C_LCD.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0, cstack
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/4
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4883 ;;Total ram usage:        0 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; Hardware stack levels required when called: 2
  4886 ;; This function calls:
  4887 ;;		_I2C_ENVIA_LCD_CMD
  4888 ;; This function is called by:
  4889 ;;		_I2C_LCD_INIT
  4890 ;;		_pantallazo
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text12
  4895   003812                     __ptext12:
  4896                           	callstack 0
  4897   003812                     _I2C_BORRAR_LCD:
  4898                           	callstack 123
  4899                           
  4900                           ;I2C_LCD.c: 156:  I2C_ENVIA_LCD_CMD(0x01);
  4901                           
  4902                           ;incstack = 0
  4903   003812  0E01               	movlw	1
  4904   003814  EC28  F01A         	call	_I2C_ENVIA_LCD_CMD
  4905   003818  0012               	return		;funcret
  4906   00381A                     __end_of_I2C_BORRAR_LCD:
  4907                           	callstack 0
  4908                           
  4909 ;; *************** function _I2C_ENVIA_LCD_CMD *****************
  4910 ;; Defined at:
  4911 ;;		line 159 in file "I2C_LCD.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  command         1    wreg     unsigned char 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  command         1    3[COMRAM] unsigned char 
  4916 ;;  lownibble       1    5[COMRAM] unsigned char 
  4917 ;;  highnibble      1    4[COMRAM] unsigned char 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      void 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/3
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4928 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4929 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4930 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4931 ;;Total ram usage:        4 bytes
  4932 ;; Hardware stack levels used: 1
  4933 ;; Hardware stack levels required when called: 1
  4934 ;; This function calls:
  4935 ;;		_I2C1_WRITESINGLEBYTE
  4936 ;; This function is called by:
  4937 ;;		_I2C_POS_CURSOR
  4938 ;;		_I2C_CURSOR_HOME
  4939 ;;		_I2C_CURSOR_ONOFF
  4940 ;;		_I2C_BORRAR_LCD
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text13
  4945   003450                     __ptext13:
  4946                           	callstack 0
  4947   003450                     _I2C_ENVIA_LCD_CMD:
  4948                           	callstack 123
  4949                           
  4950                           ;incstack = 0
  4951                           ;I2C_ENVIA_LCD_CMD@command stored from wreg
  4952   003450  6E04               	movwf	I2C_ENVIA_LCD_CMD@command^(0+1280),c
  4953                           
  4954                           ;I2C_LCD.c: 160:     unsigned char highnibble;;I2C_LCD.c: 161:     unsigned char lownibb
      +                          le;;I2C_LCD.c: 163:     highnibble = (command & 0xF0) | 0x08;
  4955   003452  5004               	movf	I2C_ENVIA_LCD_CMD@command^(0+1280),w,c
  4956   003454  0BF0               	andlw	240
  4957   003456  0908               	iorlw	8
  4958   003458  6E05               	movwf	I2C_ENVIA_LCD_CMD@highnibble^(0+1280),c
  4959                           
  4960                           ;I2C_LCD.c: 164:     lownibble = (unsigned char)(((command & 0x0F)<<4)| 0x08);
  4961   00345A  C504  F503         	movff	I2C_ENVIA_LCD_CMD@command,??_I2C_ENVIA_LCD_CMD
  4962   00345E  0E0F               	movlw	15
  4963   003460  1603               	andwf	??_I2C_ENVIA_LCD_CMD^(0+1280),f,c
  4964   003462  3803               	swapf	??_I2C_ENVIA_LCD_CMD^(0+1280),w,c
  4965   003464  0BF0               	andlw	240
  4966   003466  0908               	iorlw	8
  4967   003468  6E06               	movwf	I2C_ENVIA_LCD_CMD@lownibble^(0+1280),c
  4968                           
  4969                           ;I2C_LCD.c: 166:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(highnibble | 0x04));
  4970   00346A  5005               	movf	I2C_ENVIA_LCD_CMD@highnibble^(0+1280),w,c
  4971   00346C  0904               	iorlw	4
  4972   00346E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4973   003470  0E27               	movlw	39
  4974   003472  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4975                           
  4976                           ; BSR set to: 2
  4977                           ;I2C_LCD.c: 167:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4978   003476  0E35               	movlw	53
  4979   003478                     u2027:
  4980   003478  2EE8               	decfsz	wreg,f,c
  4981   00347A  D7FE               	bra	u2027
  4982   00347C  0000               	nop	
  4983                           
  4984                           ;I2C_LCD.c: 168:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,highnibble);
  4985   00347E  C505  F501         	movff	I2C_ENVIA_LCD_CMD@highnibble,I2C1_WRITESINGLEBYTE@dato
  4986   003482  0E27               	movlw	39
  4987   003484  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  4988                           
  4989                           ; BSR set to: 2
  4990                           ;I2C_LCD.c: 169:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4991   003488  0E35               	movlw	53
  4992   00348A                     u2037:
  4993   00348A  2EE8               	decfsz	wreg,f,c
  4994   00348C  D7FE               	bra	u2037
  4995   00348E  0000               	nop	
  4996                           
  4997                           ;I2C_LCD.c: 171:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(lownibble | 0x04));
  4998   003490  5006               	movf	I2C_ENVIA_LCD_CMD@lownibble^(0+1280),w,c
  4999   003492  0904               	iorlw	4
  5000   003494  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5001   003496  0E27               	movlw	39
  5002   003498  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  5003                           
  5004                           ; BSR set to: 2
  5005                           ;I2C_LCD.c: 172:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5006   00349C  0E35               	movlw	53
  5007   00349E                     u2047:
  5008   00349E  2EE8               	decfsz	wreg,f,c
  5009   0034A0  D7FE               	bra	u2047
  5010   0034A2  0000               	nop	
  5011                           
  5012                           ;I2C_LCD.c: 173:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,lownibble);
  5013   0034A4  C506  F501         	movff	I2C_ENVIA_LCD_CMD@lownibble,I2C1_WRITESINGLEBYTE@dato
  5014   0034A8  0E27               	movlw	39
  5015   0034AA  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  5016                           
  5017                           ; BSR set to: 2
  5018                           ;I2C_LCD.c: 174:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5019   0034AE  0E35               	movlw	53
  5020   0034B0                     u2057:
  5021   0034B0  2EE8               	decfsz	wreg,f,c
  5022   0034B2  D7FE               	bra	u2057
  5023   0034B4  0000               	nop	
  5024   0034B6  0012               	return		;funcret
  5025   0034B8                     __end_of_I2C_ENVIA_LCD_CMD:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function _I2C1_INIT *****************
  5029 ;; Defined at:
  5030 ;;		line 34 in file "I2C_LCD.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;		None
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;		None
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2
  5039 ;; Tracked objects:
  5040 ;;		On entry : 3F/0
  5041 ;;		On exit  : 3F/2
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5048 ;;Total ram usage:        0 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_I2C_LCD_INIT
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text14
  5058   0035B0                     __ptext14:
  5059                           	callstack 0
  5060   0035B0                     _I2C1_INIT:
  5061                           	callstack 124
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;I2C_LCD.c: 36:     TRISCbits.TRISC3 = 0;
  5065                           
  5066                           ;incstack = 0
  5067   0035B0  96C8               	bcf	200,3,c	;volatile
  5068                           
  5069                           ;I2C_LCD.c: 37:     TRISCbits.TRISC4 = 0;
  5070   0035B2  98C8               	bcf	200,4,c	;volatile
  5071                           
  5072                           ;I2C_LCD.c: 38:     ANSELCbits.ANSELC3 = 0;
  5073   0035B4  0104               	movlb	4	; () banked
  5074   0035B6  9710               	bcf	16,3,b	;volatile
  5075                           
  5076                           ;I2C_LCD.c: 39:     ANSELCbits.ANSELC4 = 0;
  5077   0035B8  9910               	bcf	16,4,b	;volatile
  5078                           
  5079                           ;I2C_LCD.c: 40:     ODCONCbits.ODCC3 = 1;
  5080   0035BA  8712               	bsf	18,3,b	;volatile
  5081                           
  5082                           ;I2C_LCD.c: 41:     ODCONCbits.ODCC4 = 1;
  5083   0035BC  8912               	bsf	18,4,b	;volatile
  5084                           
  5085                           ; BSR set to: 4
  5086                           ;I2C_LCD.c: 43:     RC3PPS = 0x37;
  5087   0035BE  0E37               	movlw	55
  5088   0035C0  0102               	movlb	2	; () banked
  5089   0035C2  6F14               	movwf	20,b	;volatile
  5090                           
  5091                           ;I2C_LCD.c: 44:     RC4PPS = 0x38;
  5092   0035C4  0E38               	movlw	56
  5093   0035C6  6F15               	movwf	21,b	;volatile
  5094                           
  5095                           ;I2C_LCD.c: 46:     RC3I2Cbits.PU = 2;
  5096   0035C8  5187               	movf	135,w,b	;volatile
  5097   0035CA  0BCF               	andlw	-49
  5098   0035CC  0920               	iorlw	32
  5099   0035CE  6F87               	movwf	135,b	;volatile
  5100                           
  5101                           ;I2C_LCD.c: 47:     RC3I2Cbits.TH = 1;
  5102   0035D0  5187               	movf	135,w,b	;volatile
  5103   0035D2  0BFC               	andlw	-4
  5104   0035D4  0901               	iorlw	1
  5105   0035D6  6F87               	movwf	135,b	;volatile
  5106                           
  5107                           ;I2C_LCD.c: 48:     RC4I2Cbits.PU = 2;
  5108   0035D8  5186               	movf	134,w,b	;volatile
  5109   0035DA  0BCF               	andlw	-49
  5110   0035DC  0920               	iorlw	32
  5111   0035DE  6F86               	movwf	134,b	;volatile
  5112                           
  5113                           ;I2C_LCD.c: 49:     RC4I2Cbits.TH = 1;
  5114   0035E0  5186               	movf	134,w,b	;volatile
  5115   0035E2  0BFC               	andlw	-4
  5116   0035E4  0901               	iorlw	1
  5117   0035E6  6F86               	movwf	134,b	;volatile
  5118                           
  5119                           ; BSR set to: 2
  5120                           ;I2C_LCD.c: 50:     I2C1CON0bits.EN = 1;
  5121   0035E8  8F94               	bsf	148,7,b	;volatile
  5122                           
  5123                           ;I2C_LCD.c: 51:     I2C1CLKbits.CLK = 3;
  5124   0035EA  0E03               	movlw	3
  5125   0035EC  6F9C               	movwf	156,b	;volatile
  5126                           
  5127                           ;I2C_LCD.c: 52:     I2C1CON0bits.MODE = 0x4;
  5128   0035EE  5194               	movf	148,w,b	;volatile
  5129   0035F0  0BF8               	andlw	-8
  5130   0035F2  0904               	iorlw	4
  5131   0035F4  6F94               	movwf	148,b	;volatile
  5132                           
  5133                           ; BSR set to: 2
  5134                           ;I2C_LCD.c: 53:     I2C1CON2bits.ABD = 0;
  5135   0035F6  9996               	bcf	150,4,b	;volatile
  5136                           
  5137                           ; BSR set to: 2
  5138   0035F8  0012               	return		;funcret
  5139   0035FA                     __end_of_I2C1_INIT:
  5140                           	callstack 0
  5141                           
  5142 ;; *************** function _I2C_LCD_ESCRIBE_VAR_INT *****************
  5143 ;; Defined at:
  5144 ;;		line 333 in file "I2C_LCD.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  numero          2   12[COMRAM] unsigned int 
  5147 ;;  n_digitos       1   14[COMRAM] unsigned char 
  5148 ;;  punto           1   15[COMRAM] unsigned char 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  unidad          1   20[COMRAM] unsigned char 
  5151 ;;  decena          1   19[COMRAM] unsigned char 
  5152 ;;  centena         1   18[COMRAM] unsigned char 
  5153 ;;  millar          1   17[COMRAM] unsigned char 
  5154 ;;  d_millar        1   16[COMRAM] unsigned char 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  1    wreg      void 
  5157 ;; Registers used:
  5158 ;;		wreg, status,2, status,0, cstack
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/3
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5164 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5165 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5167 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5168 ;;Total ram usage:        9 bytes
  5169 ;; Hardware stack levels used: 1
  5170 ;; Hardware stack levels required when called: 2
  5171 ;; This function calls:
  5172 ;;		_I2C_ENVIA_LCD_DATA
  5173 ;;		___lwdiv
  5174 ;;		___lwmod
  5175 ;; This function is called by:
  5176 ;;		_main
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text15
  5181   0029BC                     __ptext15:
  5182                           	callstack 0
  5183   0029BC                     _I2C_LCD_ESCRIBE_VAR_INT:
  5184                           	callstack 124
  5185                           
  5186                           ;I2C_LCD.c: 334:     unsigned char d_millar, millar, centena, decena, unidad;;I2C_LCD.c:
      +                           335:     d_millar = numero / 10000;
  5187                           
  5188                           ; BSR set to: 2
  5189                           ;incstack = 0
  5190   0029BC  C50D  F506         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  5191   0029C0  C50E  F507         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  5192   0029C4  0E27               	movlw	39
  5193   0029C6  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5194   0029C8  0E10               	movlw	16
  5195   0029CA  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  5196   0029CC  EC88  F01A         	call	___lwdiv	;wreg free
  5197   0029D0  5006               	movf	?___lwdiv^(0+1280),w,c
  5198   0029D2  6E11               	movwf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  5199                           
  5200                           ;I2C_LCD.c: 336:     millar = (numero % 10000) / 1000;
  5201   0029D4  0E27               	movlw	39
  5202   0029D6  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5203   0029D8  0E10               	movlw	16
  5204   0029DA  6E03               	movwf	___lwmod@divisor^(0+1280),c
  5205   0029DC  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5206   0029E0  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5207   0029E4  EC21  F01B         	call	___lwmod	;wreg free
  5208   0029E8  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  5209   0029EC  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  5210   0029F0  0E03               	movlw	3
  5211   0029F2  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5212   0029F4  0EE8               	movlw	232
  5213   0029F6  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  5214   0029F8  EC88  F01A         	call	___lwdiv	;wreg free
  5215   0029FC  5006               	movf	?___lwdiv^(0+1280),w,c
  5216   0029FE  6E12               	movwf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),c
  5217                           
  5218                           ;I2C_LCD.c: 337:     centena = (numero % 1000) / 100;
  5219   002A00  0E03               	movlw	3
  5220   002A02  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5221   002A04  0EE8               	movlw	232
  5222   002A06  6E03               	movwf	___lwmod@divisor^(0+1280),c
  5223   002A08  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5224   002A0C  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5225   002A10  EC21  F01B         	call	___lwmod	;wreg free
  5226   002A14  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  5227   002A18  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  5228   002A1C  0E00               	movlw	0
  5229   002A1E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5230   002A20  0E64               	movlw	100
  5231   002A22  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  5232   002A24  EC88  F01A         	call	___lwdiv	;wreg free
  5233   002A28  5006               	movf	?___lwdiv^(0+1280),w,c
  5234   002A2A  6E13               	movwf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),c
  5235                           
  5236                           ;I2C_LCD.c: 338:     decena = (numero % 100) / 10;
  5237   002A2C  0E00               	movlw	0
  5238   002A2E  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5239   002A30  0E64               	movlw	100
  5240   002A32  6E03               	movwf	___lwmod@divisor^(0+1280),c
  5241   002A34  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5242   002A38  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5243   002A3C  EC21  F01B         	call	___lwmod	;wreg free
  5244   002A40  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  5245   002A44  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  5246   002A48  0E00               	movlw	0
  5247   002A4A  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  5248   002A4C  0E0A               	movlw	10
  5249   002A4E  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  5250   002A50  EC88  F01A         	call	___lwdiv	;wreg free
  5251   002A54  5006               	movf	?___lwdiv^(0+1280),w,c
  5252   002A56  6E14               	movwf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),c
  5253                           
  5254                           ;I2C_LCD.c: 339:     unidad = numero % 10;
  5255   002A58  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  5256   002A5C  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  5257   002A60  0E00               	movlw	0
  5258   002A62  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  5259   002A64  0E0A               	movlw	10
  5260   002A66  6E03               	movwf	___lwmod@divisor^(0+1280),c
  5261   002A68  EC21  F01B         	call	___lwmod	;wreg free
  5262   002A6C  5001               	movf	?___lwmod^(0+1280),w,c
  5263   002A6E  6E15               	movwf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),c
  5264                           
  5265                           ;I2C_LCD.c: 340:     switch(n_digitos){
  5266   002A70  D139               	goto	l2561
  5267   002A72                     l2513:
  5268                           
  5269                           ;I2C_LCD.c: 342:             I2C_ENVIA_LCD_DATA(unidad+0x30);
  5270   002A72  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5271   002A74  0F30               	addlw	48
  5272   002A76  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5273                           
  5274                           ;I2C_LCD.c: 343:             break;
  5275   002A7A  0012               	return	
  5276   002A7C                     l2515:
  5277                           
  5278                           ;I2C_LCD.c: 345:             if(punto == 0){
  5279   002A7C  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5280   002A7E  A4D8               	btfss	status,2,c
  5281   002A80  D009               	goto	l2519
  5282                           
  5283                           ;I2C_LCD.c: 346:                 I2C_ENVIA_LCD_DATA(decena+0x30);
  5284   002A82  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5285   002A84  0F30               	addlw	48
  5286   002A86  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5287                           
  5288                           ;I2C_LCD.c: 347:                 I2C_ENVIA_LCD_DATA(unidad+0x30);
  5289   002A8A  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5290   002A8C  0F30               	addlw	48
  5291   002A8E  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5292                           
  5293                           ;I2C_LCD.c: 348:             }
  5294   002A92  0012               	return	
  5295   002A94                     l2519:
  5296   002A94  0410               	decf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5297   002A96  A4D8               	btfss	status,2,c
  5298   002A98  0012               	return	
  5299                           
  5300                           ;I2C_LCD.c: 350:                 I2C_ENVIA_LCD_DATA(decena+0x30);
  5301   002A9A  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5302   002A9C  0F30               	addlw	48
  5303   002A9E  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5304                           
  5305                           ;I2C_LCD.c: 351:                 I2C_ENVIA_LCD_DATA('.');
  5306   002AA2  0E2E               	movlw	46
  5307   002AA4  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5308                           
  5309                           ;I2C_LCD.c: 352:                 I2C_ENVIA_LCD_DATA(unidad+0x30);
  5310   002AA8  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5311   002AAA  0F30               	addlw	48
  5312   002AAC  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5313   002AB0  0012               	return	
  5314   002AB2                     l2523:
  5315                           
  5316                           ;I2C_LCD.c: 358:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5317   002AB2  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5318   002AB4  0F30               	addlw	48
  5319   002AB6  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5320                           
  5321                           ;I2C_LCD.c: 359:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5322   002ABA  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5323   002ABC  0F30               	addlw	48
  5324   002ABE  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5325                           
  5326                           ;I2C_LCD.c: 360:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5327   002AC2  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5328   002AC4  0F30               	addlw	48
  5329   002AC6  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5330                           
  5331                           ;I2C_LCD.c: 361:                     break;
  5332   002ACA  0012               	return	
  5333   002ACC                     l2525:
  5334                           
  5335                           ;I2C_LCD.c: 363:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5336   002ACC  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5337   002ACE  0F30               	addlw	48
  5338   002AD0  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5339                           
  5340                           ;I2C_LCD.c: 364:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5341   002AD4  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5342   002AD6  0F30               	addlw	48
  5343   002AD8  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5344                           
  5345                           ;I2C_LCD.c: 365:                     I2C_ENVIA_LCD_DATA('.');
  5346   002ADC  0E2E               	movlw	46
  5347   002ADE  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5348                           
  5349                           ;I2C_LCD.c: 366:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5350   002AE2  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5351   002AE4  0F30               	addlw	48
  5352   002AE6  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5353                           
  5354                           ;I2C_LCD.c: 367:                     break;
  5355   002AEA  0012               	return	
  5356   002AEC                     l2527:
  5357                           
  5358                           ;I2C_LCD.c: 369:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5359   002AEC  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5360   002AEE  0F30               	addlw	48
  5361   002AF0  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5362                           
  5363                           ;I2C_LCD.c: 370:                     I2C_ENVIA_LCD_DATA('.');
  5364   002AF4  0E2E               	movlw	46
  5365   002AF6  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5366                           
  5367                           ;I2C_LCD.c: 371:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5368   002AFA  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5369   002AFC  0F30               	addlw	48
  5370   002AFE  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5371                           
  5372                           ;I2C_LCD.c: 372:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5373   002B02  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5374   002B04  0F30               	addlw	48
  5375   002B06  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5376                           
  5377                           ;I2C_LCD.c: 373:                     break;
  5378   002B0A  0012               	return	
  5379   002B0C                     l2531:
  5380   002B0C  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5381                           
  5382                           ; Switch size 1, requested type "simple"
  5383                           ; Number of cases is 3, Range of values is 0 to 2
  5384                           ; switch strategies available:
  5385                           ; Name         Instructions Cycles
  5386                           ; simple_byte           10     6 (average)
  5387                           ;	Chosen strategy is simple_byte
  5388   002B0E  0A00               	xorlw	0	; case 0
  5389   002B10  B4D8               	btfsc	status,2,c
  5390   002B12  D7CF               	goto	l2523
  5391   002B14  0A01               	xorlw	1	; case 1
  5392   002B16  B4D8               	btfsc	status,2,c
  5393   002B18  D7D9               	goto	l2525
  5394   002B1A  0A03               	xorlw	3	; case 2
  5395   002B1C  A4D8               	btfss	status,2,c
  5396   002B1E  0012               	return	
  5397   002B20  D7E5               	goto	l2527
  5398   002B22                     l2533:
  5399                           
  5400                           ;I2C_LCD.c: 379:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5401   002B22  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5402   002B24  0F30               	addlw	48
  5403   002B26  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5404                           
  5405                           ;I2C_LCD.c: 380:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5406   002B2A  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5407   002B2C  0F30               	addlw	48
  5408   002B2E  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5409                           
  5410                           ;I2C_LCD.c: 381:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5411   002B32  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5412   002B34  0F30               	addlw	48
  5413   002B36  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5414                           
  5415                           ;I2C_LCD.c: 382:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5416   002B3A  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5417   002B3C  0F30               	addlw	48
  5418   002B3E  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5419                           
  5420                           ;I2C_LCD.c: 383:                     break;
  5421   002B42  0012               	return	
  5422   002B44                     l2535:
  5423                           
  5424                           ;I2C_LCD.c: 385:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5425   002B44  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5426   002B46  0F30               	addlw	48
  5427   002B48  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5428                           
  5429                           ;I2C_LCD.c: 386:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5430   002B4C  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5431   002B4E  0F30               	addlw	48
  5432   002B50  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5433                           
  5434                           ;I2C_LCD.c: 387:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5435   002B54  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5436   002B56  0F30               	addlw	48
  5437   002B58  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5438                           
  5439                           ;I2C_LCD.c: 388:                     I2C_ENVIA_LCD_DATA('.');
  5440   002B5C  0E2E               	movlw	46
  5441   002B5E  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5442                           
  5443                           ;I2C_LCD.c: 389:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5444   002B62  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5445   002B64  0F30               	addlw	48
  5446   002B66  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5447                           
  5448                           ;I2C_LCD.c: 390:                     break;
  5449   002B6A  0012               	return	
  5450   002B6C                     l2537:
  5451                           
  5452                           ;I2C_LCD.c: 392:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5453   002B6C  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5454   002B6E  0F30               	addlw	48
  5455   002B70  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5456                           
  5457                           ;I2C_LCD.c: 393:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5458   002B74  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5459   002B76  0F30               	addlw	48
  5460   002B78  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5461                           
  5462                           ;I2C_LCD.c: 394:                     I2C_ENVIA_LCD_DATA('.');
  5463   002B7C  0E2E               	movlw	46
  5464   002B7E  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5465                           
  5466                           ;I2C_LCD.c: 395:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5467   002B82  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5468   002B84  0F30               	addlw	48
  5469   002B86  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5470                           
  5471                           ;I2C_LCD.c: 396:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5472   002B8A  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5473   002B8C  0F30               	addlw	48
  5474   002B8E  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5475                           
  5476                           ;I2C_LCD.c: 397:                     break;
  5477   002B92  0012               	return	
  5478   002B94                     l2539:
  5479                           
  5480                           ;I2C_LCD.c: 399:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5481   002B94  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5482   002B96  0F30               	addlw	48
  5483   002B98  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5484                           
  5485                           ;I2C_LCD.c: 400:                     I2C_ENVIA_LCD_DATA('.');
  5486   002B9C  0E2E               	movlw	46
  5487   002B9E  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5488                           
  5489                           ;I2C_LCD.c: 401:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5490   002BA2  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5491   002BA4  0F30               	addlw	48
  5492   002BA6  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5493                           
  5494                           ;I2C_LCD.c: 402:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5495   002BAA  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5496   002BAC  0F30               	addlw	48
  5497   002BAE  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5498                           
  5499                           ;I2C_LCD.c: 403:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5500   002BB2  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5501   002BB4  0F30               	addlw	48
  5502   002BB6  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5503                           
  5504                           ;I2C_LCD.c: 404:                     break;
  5505   002BBA  0012               	return	
  5506   002BBC                     l2543:
  5507   002BBC  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5508                           
  5509                           ; Switch size 1, requested type "simple"
  5510                           ; Number of cases is 4, Range of values is 0 to 3
  5511                           ; switch strategies available:
  5512                           ; Name         Instructions Cycles
  5513                           ; simple_byte           13     7 (average)
  5514                           ;	Chosen strategy is simple_byte
  5515   002BBE  0A00               	xorlw	0	; case 0
  5516   002BC0  B4D8               	btfsc	status,2,c
  5517   002BC2  D7AF               	goto	l2533
  5518   002BC4  0A01               	xorlw	1	; case 1
  5519   002BC6  B4D8               	btfsc	status,2,c
  5520   002BC8  D7BD               	goto	l2535
  5521   002BCA  0A03               	xorlw	3	; case 2
  5522   002BCC  B4D8               	btfsc	status,2,c
  5523   002BCE  D7CE               	goto	l2537
  5524   002BD0  0A01               	xorlw	1	; case 3
  5525   002BD2  A4D8               	btfss	status,2,c
  5526   002BD4  0012               	return	
  5527   002BD6  D7DE               	goto	l2539
  5528   002BD8                     l2545:
  5529                           
  5530                           ;I2C_LCD.c: 410:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  5531   002BD8  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  5532   002BDA  0F30               	addlw	48
  5533   002BDC  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5534                           
  5535                           ;I2C_LCD.c: 411:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5536   002BE0  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5537   002BE2  0F30               	addlw	48
  5538   002BE4  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5539                           
  5540                           ;I2C_LCD.c: 412:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5541   002BE8  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5542   002BEA  0F30               	addlw	48
  5543   002BEC  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5544                           
  5545                           ;I2C_LCD.c: 413:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5546   002BF0  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5547   002BF2  0F30               	addlw	48
  5548   002BF4  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5549                           
  5550                           ;I2C_LCD.c: 414:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5551   002BF8  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5552   002BFA  0F30               	addlw	48
  5553   002BFC  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5554                           
  5555                           ;I2C_LCD.c: 415:                     break;
  5556   002C00  0012               	return	
  5557   002C02                     l2547:
  5558                           
  5559                           ;I2C_LCD.c: 417:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  5560   002C02  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  5561   002C04  0F30               	addlw	48
  5562   002C06  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5563                           
  5564                           ;I2C_LCD.c: 418:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5565   002C0A  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5566   002C0C  0F30               	addlw	48
  5567   002C0E  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5568                           
  5569                           ;I2C_LCD.c: 419:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5570   002C12  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5571   002C14  0F30               	addlw	48
  5572   002C16  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5573                           
  5574                           ;I2C_LCD.c: 420:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5575   002C1A  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5576   002C1C  0F30               	addlw	48
  5577   002C1E  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5578                           
  5579                           ;I2C_LCD.c: 421:                     I2C_ENVIA_LCD_DATA('.');
  5580   002C22  0E2E               	movlw	46
  5581   002C24  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5582                           
  5583                           ;I2C_LCD.c: 422:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5584   002C28  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5585   002C2A  0F30               	addlw	48
  5586   002C2C  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5587                           
  5588                           ;I2C_LCD.c: 423:                     break;
  5589   002C30  0012               	return	
  5590   002C32                     l2549:
  5591                           
  5592                           ;I2C_LCD.c: 425:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  5593   002C32  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  5594   002C34  0F30               	addlw	48
  5595   002C36  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5596                           
  5597                           ;I2C_LCD.c: 426:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5598   002C3A  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5599   002C3C  0F30               	addlw	48
  5600   002C3E  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5601                           
  5602                           ;I2C_LCD.c: 427:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5603   002C42  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5604   002C44  0F30               	addlw	48
  5605   002C46  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5606                           
  5607                           ;I2C_LCD.c: 428:                     I2C_ENVIA_LCD_DATA('.');
  5608   002C4A  0E2E               	movlw	46
  5609   002C4C  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5610                           
  5611                           ;I2C_LCD.c: 429:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5612   002C50  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5613   002C52  0F30               	addlw	48
  5614   002C54  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5615                           
  5616                           ;I2C_LCD.c: 430:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5617   002C58  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5618   002C5A  0F30               	addlw	48
  5619   002C5C  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5620                           
  5621                           ;I2C_LCD.c: 431:                     break;
  5622   002C60  0012               	return	
  5623   002C62                     l2551:
  5624                           
  5625                           ;I2C_LCD.c: 433:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  5626   002C62  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  5627   002C64  0F30               	addlw	48
  5628   002C66  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5629                           
  5630                           ;I2C_LCD.c: 434:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5631   002C6A  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5632   002C6C  0F30               	addlw	48
  5633   002C6E  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5634                           
  5635                           ;I2C_LCD.c: 435:                     I2C_ENVIA_LCD_DATA('.');
  5636   002C72  0E2E               	movlw	46
  5637   002C74  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5638                           
  5639                           ;I2C_LCD.c: 436:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5640   002C78  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5641   002C7A  0F30               	addlw	48
  5642   002C7C  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5643                           
  5644                           ;I2C_LCD.c: 437:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5645   002C80  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5646   002C82  0F30               	addlw	48
  5647   002C84  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5648                           
  5649                           ;I2C_LCD.c: 438:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5650   002C88  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5651   002C8A  0F30               	addlw	48
  5652   002C8C  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5653                           
  5654                           ;I2C_LCD.c: 439:                     break;
  5655   002C90  0012               	return	
  5656   002C92                     l2553:
  5657                           
  5658                           ;I2C_LCD.c: 441:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  5659   002C92  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  5660   002C94  0F30               	addlw	48
  5661   002C96  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5662                           
  5663                           ;I2C_LCD.c: 442:                     I2C_ENVIA_LCD_DATA('.');
  5664   002C9A  0E2E               	movlw	46
  5665   002C9C  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5666                           
  5667                           ;I2C_LCD.c: 443:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  5668   002CA0  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  5669   002CA2  0F30               	addlw	48
  5670   002CA4  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5671                           
  5672                           ;I2C_LCD.c: 444:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  5673   002CA8  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  5674   002CAA  0F30               	addlw	48
  5675   002CAC  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5676                           
  5677                           ;I2C_LCD.c: 445:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  5678   002CB0  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  5679   002CB2  0F30               	addlw	48
  5680   002CB4  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5681                           
  5682                           ;I2C_LCD.c: 446:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  5683   002CB8  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  5684   002CBA  0F30               	addlw	48
  5685   002CBC  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5686                           
  5687                           ;I2C_LCD.c: 447:                     break;
  5688   002CC0  0012               	return	
  5689   002CC2                     l2557:
  5690   002CC2  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  5691                           
  5692                           ; Switch size 1, requested type "simple"
  5693                           ; Number of cases is 5, Range of values is 0 to 4
  5694                           ; switch strategies available:
  5695                           ; Name         Instructions Cycles
  5696                           ; simple_byte           16     9 (average)
  5697                           ;	Chosen strategy is simple_byte
  5698   002CC4  0A00               	xorlw	0	; case 0
  5699   002CC6  B4D8               	btfsc	status,2,c
  5700   002CC8  D787               	goto	l2545
  5701   002CCA  0A01               	xorlw	1	; case 1
  5702   002CCC  B4D8               	btfsc	status,2,c
  5703   002CCE  D799               	goto	l2547
  5704   002CD0  0A03               	xorlw	3	; case 2
  5705   002CD2  B4D8               	btfsc	status,2,c
  5706   002CD4  D7AE               	goto	l2549
  5707   002CD6  0A01               	xorlw	1	; case 3
  5708   002CD8  B4D8               	btfsc	status,2,c
  5709   002CDA  D7C3               	goto	l2551
  5710   002CDC  0A07               	xorlw	7	; case 4
  5711   002CDE  A4D8               	btfss	status,2,c
  5712   002CE0  0012               	return	
  5713   002CE2  D7D7               	goto	l2553
  5714   002CE4                     l2561:
  5715   002CE4  500F               	movf	I2C_LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  5716                           
  5717                           ; Switch size 1, requested type "simple"
  5718                           ; Number of cases is 5, Range of values is 1 to 5
  5719                           ; switch strategies available:
  5720                           ; Name         Instructions Cycles
  5721                           ; simple_byte           16     9 (average)
  5722                           ;	Chosen strategy is simple_byte
  5723   002CE6  0A01               	xorlw	1	; case 1
  5724   002CE8  B4D8               	btfsc	status,2,c
  5725   002CEA  D6C3               	goto	l2513
  5726   002CEC  0A03               	xorlw	3	; case 2
  5727   002CEE  B4D8               	btfsc	status,2,c
  5728   002CF0  D6C5               	goto	l2515
  5729   002CF2  0A01               	xorlw	1	; case 3
  5730   002CF4  B4D8               	btfsc	status,2,c
  5731   002CF6  D70A               	goto	l2531
  5732   002CF8  0A07               	xorlw	7	; case 4
  5733   002CFA  B4D8               	btfsc	status,2,c
  5734   002CFC  D75F               	goto	l2543
  5735   002CFE  0A01               	xorlw	1	; case 5
  5736   002D00  A4D8               	btfss	status,2,c
  5737   002D02  0012               	return	
  5738   002D04  D7DE               	goto	l2557
  5739   002D06                     __end_of_I2C_LCD_ESCRIBE_VAR_INT:
  5740                           	callstack 0
  5741                           
  5742 ;; *************** function ___lwmod *****************
  5743 ;; Defined at:
  5744 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;  dividend        2    0[COMRAM] unsigned int 
  5747 ;;  divisor         2    2[COMRAM] unsigned int 
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;  counter         1    4[COMRAM] unsigned char 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  2    0[COMRAM] unsigned int 
  5752 ;; Registers used:
  5753 ;;		wreg, status,2, status,0
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/3
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5759 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5762 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5763 ;;Total ram usage:        5 bytes
  5764 ;; Hardware stack levels used: 1
  5765 ;; This function calls:
  5766 ;;		Nothing
  5767 ;; This function is called by:
  5768 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           	psect	text16
  5773   003642                     __ptext16:
  5774                           	callstack 0
  5775   003642                     ___lwmod:
  5776                           	callstack 125
  5777                           
  5778                           ;incstack = 0
  5779   003642  5003               	movf	___lwmod@divisor^(0+1280),w,c
  5780   003644  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  5781   003646  B4D8               	btfsc	status,2,c
  5782   003648  D018               	goto	l871
  5783   00364A  0E01               	movlw	1
  5784   00364C  6E05               	movwf	___lwmod@counter^(0+1280),c
  5785   00364E  D004               	goto	l2443
  5786   003650                     l2441:
  5787   003650  90D8               	bcf	status,0,c
  5788   003652  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  5789   003654  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  5790   003656  2A05               	incf	___lwmod@counter^(0+1280),f,c
  5791   003658                     l2443:
  5792   003658  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  5793   00365A  D7FA               	goto	l2441
  5794   00365C                     u1330:
  5795   00365C  5003               	movf	___lwmod@divisor^(0+1280),w,c
  5796   00365E  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  5797   003660  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  5798   003662  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  5799   003664  A0D8               	btfss	status,0,c
  5800   003666  D004               	goto	l2449
  5801   003668  5003               	movf	___lwmod@divisor^(0+1280),w,c
  5802   00366A  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  5803   00366C  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  5804   00366E  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  5805   003670                     l2449:
  5806   003670  90D8               	bcf	status,0,c
  5807   003672  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  5808   003674  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  5809   003676  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  5810   003678  D7F1               	goto	u1330
  5811   00367A                     l871:
  5812   00367A  C501  F501         	movff	___lwmod@dividend,?___lwmod
  5813   00367E  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  5814   003682  0012               	return		;funcret
  5815   003684                     __end_of___lwmod:
  5816                           	callstack 0
  5817                           
  5818 ;; *************** function ___lwdiv *****************
  5819 ;; Defined at:
  5820 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;  dividend        2    5[COMRAM] unsigned int 
  5823 ;;  divisor         2    7[COMRAM] unsigned int 
  5824 ;; Auto vars:     Size  Location     Type
  5825 ;;  quotient        2    9[COMRAM] unsigned int 
  5826 ;;  counter         1   11[COMRAM] unsigned char 
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  2    5[COMRAM] unsigned int 
  5829 ;; Registers used:
  5830 ;;		wreg, status,2, status,0
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/3
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5836 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5837 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5839 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5840 ;;Total ram usage:        7 bytes
  5841 ;; Hardware stack levels used: 1
  5842 ;; This function calls:
  5843 ;;		Nothing
  5844 ;; This function is called by:
  5845 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           	psect	text17
  5850   003510                     __ptext17:
  5851                           	callstack 0
  5852   003510                     ___lwdiv:
  5853                           	callstack 125
  5854                           
  5855                           ;incstack = 0
  5856   003510  0E00               	movlw	0
  5857   003512  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  5858   003514  0E00               	movlw	0
  5859   003516  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  5860   003518  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  5861   00351A  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  5862   00351C  B4D8               	btfsc	status,2,c
  5863   00351E  D01C               	goto	l861
  5864   003520  0E01               	movlw	1
  5865   003522  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  5866   003524  D004               	goto	l2423
  5867   003526                     l2421:
  5868   003526  90D8               	bcf	status,0,c
  5869   003528  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  5870   00352A  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  5871   00352C  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  5872   00352E                     l2423:
  5873   00352E  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  5874   003530  D7FA               	goto	l2421
  5875   003532                     u1300:
  5876   003532  90D8               	bcf	status,0,c
  5877   003534  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  5878   003536  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  5879   003538  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  5880   00353A  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  5881   00353C  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  5882   00353E  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  5883   003540  A0D8               	btfss	status,0,c
  5884   003542  D005               	goto	l2433
  5885   003544  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  5886   003546  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  5887   003548  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  5888   00354A  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  5889   00354C  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  5890   00354E                     l2433:
  5891   00354E  90D8               	bcf	status,0,c
  5892   003550  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  5893   003552  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  5894   003554  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  5895   003556  D7ED               	goto	u1300
  5896   003558                     l861:
  5897   003558  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  5898   00355C  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5899   003560  0012               	return		;funcret
  5900   003562                     __end_of___lwdiv:
  5901                           	callstack 0
  5902                           
  5903 ;; *************** function _I2C_LCD_ESCRIBE_VAR_CHAR *****************
  5904 ;; Defined at:
  5905 ;;		line 312 in file "I2C_LCD.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;  numero          1    wreg     unsigned char 
  5908 ;;  n_digitos       1   10[COMRAM] unsigned char 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  numero          1   13[COMRAM] unsigned char 
  5911 ;;  unidad          1   14[COMRAM] unsigned char 
  5912 ;;  decena          1   12[COMRAM] unsigned char 
  5913 ;;  centena         1   11[COMRAM] unsigned char 
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  1    wreg      void 
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0, cstack
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/3
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5923 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5924 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5926 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5927 ;;Total ram usage:        5 bytes
  5928 ;; Hardware stack levels used: 1
  5929 ;; Hardware stack levels required when called: 2
  5930 ;; This function calls:
  5931 ;;		_I2C_ENVIA_LCD_DATA
  5932 ;;		___awmod
  5933 ;;		___lbdiv
  5934 ;;		___lbmod
  5935 ;; This function is called by:
  5936 ;;		_main
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           	psect	text18
  5941   0032E8                     __ptext18:
  5942                           	callstack 0
  5943   0032E8                     _I2C_LCD_ESCRIBE_VAR_CHAR:
  5944                           	callstack 124
  5945                           
  5946                           ;incstack = 0
  5947                           ;I2C_LCD_ESCRIBE_VAR_CHAR@numero stored from wreg
  5948   0032E8  6E0E               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@numero^(0+1280),c
  5949                           
  5950                           ;I2C_LCD.c: 313:     unsigned char centena, decena, unidad;;I2C_LCD.c: 314:     centena 
      +                          = (numero % 1000) / 100;
  5951   0032EA  0E64               	movlw	100
  5952   0032EC  6E07               	movwf	___lbdiv@divisor^(0+1280),c
  5953   0032EE  0E03               	movlw	3
  5954   0032F0  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
  5955   0032F2  0EE8               	movlw	232
  5956   0032F4  6E03               	movwf	___awmod@divisor^(0+1280),c
  5957   0032F6  C50E  F501         	movff	I2C_LCD_ESCRIBE_VAR_CHAR@numero,___awmod@dividend
  5958   0032FA  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
  5959   0032FC  ECBB  F019         	call	___awmod	;wreg free
  5960   003300  5001               	movf	?___awmod^(0+1280),w,c
  5961   003302  EC42  F01B         	call	___lbdiv
  5962   003306  6E0C               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@centena^(0+1280),c
  5963                           
  5964                           ;I2C_LCD.c: 315:     decena = (numero % 100) / 10;
  5965   003308  0E0A               	movlw	10
  5966   00330A  6E07               	movwf	___lbdiv@divisor^(0+1280),c
  5967   00330C  0E64               	movlw	100
  5968   00330E  6E01               	movwf	___lbmod@divisor^(0+1280),c
  5969   003310  500E               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@numero^(0+1280),w,c
  5970   003312  ECAA  F01B         	call	___lbmod
  5971   003316  EC42  F01B         	call	___lbdiv
  5972   00331A  6E0D               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@decena^(0+1280),c
  5973                           
  5974                           ;I2C_LCD.c: 316:     unidad = numero % 10;
  5975   00331C  0E0A               	movlw	10
  5976   00331E  6E01               	movwf	___lbmod@divisor^(0+1280),c
  5977   003320  500E               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@numero^(0+1280),w,c
  5978   003322  ECAA  F01B         	call	___lbmod
  5979   003326  6E0F               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),c
  5980                           
  5981                           ;I2C_LCD.c: 317:     switch(n_digitos){
  5982   003328  D01B               	goto	l2509
  5983   00332A                     l2501:
  5984                           
  5985                           ;I2C_LCD.c: 319:             I2C_ENVIA_LCD_DATA(unidad+0x30);
  5986   00332A  500F               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  5987   00332C  0F30               	addlw	48
  5988   00332E  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5989                           
  5990                           ;I2C_LCD.c: 320:             break;
  5991   003332  0012               	return	
  5992   003334                     l2503:
  5993                           
  5994                           ;I2C_LCD.c: 322:             I2C_ENVIA_LCD_DATA(decena+0x30);
  5995   003334  500D               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@decena^(0+1280),w,c
  5996   003336  0F30               	addlw	48
  5997   003338  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  5998                           
  5999                           ;I2C_LCD.c: 323:             I2C_ENVIA_LCD_DATA(unidad+0x30);
  6000   00333C  500F               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  6001   00333E  0F30               	addlw	48
  6002   003340  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  6003                           
  6004                           ;I2C_LCD.c: 324:             break;
  6005   003344  0012               	return	
  6006   003346                     l2505:
  6007                           
  6008                           ;I2C_LCD.c: 326:             I2C_ENVIA_LCD_DATA(centena+0x30);
  6009   003346  500C               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@centena^(0+1280),w,c
  6010   003348  0F30               	addlw	48
  6011   00334A  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  6012                           
  6013                           ;I2C_LCD.c: 327:             I2C_ENVIA_LCD_DATA(decena+0x30);
  6014   00334E  500D               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@decena^(0+1280),w,c
  6015   003350  0F30               	addlw	48
  6016   003352  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  6017                           
  6018                           ;I2C_LCD.c: 328:             I2C_ENVIA_LCD_DATA(unidad+0x30);
  6019   003356  500F               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  6020   003358  0F30               	addlw	48
  6021   00335A  ECF2  F019         	call	_I2C_ENVIA_LCD_DATA
  6022                           
  6023                           ;I2C_LCD.c: 329:             break;
  6024   00335E  0012               	return	
  6025   003360                     l2509:
  6026   003360  500B               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@n_digitos^(0+1280),w,c
  6027                           
  6028                           ; Switch size 1, requested type "simple"
  6029                           ; Number of cases is 3, Range of values is 1 to 3
  6030                           ; switch strategies available:
  6031                           ; Name         Instructions Cycles
  6032                           ; simple_byte           10     6 (average)
  6033                           ;	Chosen strategy is simple_byte
  6034   003362  0A01               	xorlw	1	; case 1
  6035   003364  B4D8               	btfsc	status,2,c
  6036   003366  D7E1               	goto	l2501
  6037   003368  0A03               	xorlw	3	; case 2
  6038   00336A  B4D8               	btfsc	status,2,c
  6039   00336C  D7E3               	goto	l2503
  6040   00336E  0A01               	xorlw	1	; case 3
  6041   003370  A4D8               	btfss	status,2,c
  6042   003372  0012               	return	
  6043   003374  D7E8               	goto	l2505
  6044   003376                     __end_of_I2C_LCD_ESCRIBE_VAR_CHAR:
  6045                           	callstack 0
  6046                           
  6047 ;; *************** function ___lbmod *****************
  6048 ;; Defined at:
  6049 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lbmod.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;  dividend        1    wreg     unsigned char 
  6052 ;;  divisor         1    0[COMRAM] unsigned char 
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  dividend        1    1[COMRAM] unsigned char 
  6055 ;;  rem             1    3[COMRAM] unsigned char 
  6056 ;;  counter         1    2[COMRAM] unsigned char 
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      unsigned char 
  6059 ;; Registers used:
  6060 ;;		wreg, status,2, status,0
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/3
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6066 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6067 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6069 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6070 ;;Total ram usage:        4 bytes
  6071 ;; Hardware stack levels used: 1
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_I2C_LCD_ESCRIBE_VAR_CHAR
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text19
  6080   003754                     __ptext19:
  6081                           	callstack 0
  6082   003754                     ___lbmod:
  6083                           	callstack 125
  6084                           
  6085                           ;incstack = 0
  6086                           ;___lbmod@dividend stored from wreg
  6087   003754  6E02               	movwf	___lbmod@dividend^(0+1280),c
  6088   003756  0E08               	movlw	8
  6089   003758  6E03               	movwf	___lbmod@counter^(0+1280),c
  6090   00375A  6A04               	clrf	___lbmod@rem^(0+1280),c
  6091   00375C                     l2401:
  6092   00375C  90D8               	bcf	status,0,c
  6093   00375E  3402               	rlcf	___lbmod@dividend^(0+1280),w,c
  6094   003760  3404               	rlcf	___lbmod@rem^(0+1280),w,c
  6095   003762  6E04               	movwf	___lbmod@rem^(0+1280),c
  6096   003764  90D8               	bcf	status,0,c
  6097   003766  3602               	rlcf	___lbmod@dividend^(0+1280),f,c
  6098   003768  5001               	movf	___lbmod@divisor^(0+1280),w,c
  6099   00376A  5C04               	subwf	___lbmod@rem^(0+1280),w,c
  6100   00376C  A0D8               	btfss	status,0,c
  6101   00376E  D002               	goto	l2409
  6102   003770  5001               	movf	___lbmod@divisor^(0+1280),w,c
  6103   003772  5E04               	subwf	___lbmod@rem^(0+1280),f,c
  6104   003774                     l2409:
  6105   003774  2E03               	decfsz	___lbmod@counter^(0+1280),f,c
  6106   003776  D7F2               	goto	l2401
  6107   003778  5004               	movf	___lbmod@rem^(0+1280),w,c
  6108   00377A  0012               	return		;funcret
  6109   00377C                     __end_of___lbmod:
  6110                           	callstack 0
  6111                           
  6112 ;; *************** function ___lbdiv *****************
  6113 ;; Defined at:
  6114 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lbdiv.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  dividend        1    wreg     unsigned char 
  6117 ;;  divisor         1    6[COMRAM] unsigned char 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;  dividend        1    7[COMRAM] unsigned char 
  6120 ;;  quotient        1    9[COMRAM] unsigned char 
  6121 ;;  counter         1    8[COMRAM] unsigned char 
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  1    wreg      unsigned char 
  6124 ;; Registers used:
  6125 ;;		wreg, status,2, status,0
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/3
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6131 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6132 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6134 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6135 ;;Total ram usage:        4 bytes
  6136 ;; Hardware stack levels used: 1
  6137 ;; This function calls:
  6138 ;;		Nothing
  6139 ;; This function is called by:
  6140 ;;		_I2C_LCD_ESCRIBE_VAR_CHAR
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text20
  6145   003684                     __ptext20:
  6146                           	callstack 0
  6147   003684                     ___lbdiv:
  6148                           	callstack 125
  6149                           
  6150                           ;incstack = 0
  6151                           ;___lbdiv@dividend stored from wreg
  6152   003684  6E08               	movwf	___lbdiv@dividend^(0+1280),c
  6153   003686  6A0A               	clrf	___lbdiv@quotient^(0+1280),c
  6154   003688  5007               	movf	___lbdiv@divisor^(0+1280),w,c
  6155   00368A  B4D8               	btfsc	status,2,c
  6156   00368C  D015               	goto	l2393
  6157   00368E  0E01               	movlw	1
  6158   003690  6E09               	movwf	___lbdiv@counter^(0+1280),c
  6159   003692  D003               	goto	l2381
  6160   003694                     l2377:
  6161   003694  90D8               	bcf	status,0,c
  6162   003696  3607               	rlcf	___lbdiv@divisor^(0+1280),f,c
  6163   003698  2A09               	incf	___lbdiv@counter^(0+1280),f,c
  6164   00369A                     l2381:
  6165   00369A  AE07               	btfss	___lbdiv@divisor^(0+1280),7,c
  6166   00369C  D7FB               	goto	l2377
  6167   00369E                     u1260:
  6168   00369E  90D8               	bcf	status,0,c
  6169   0036A0  360A               	rlcf	___lbdiv@quotient^(0+1280),f,c
  6170   0036A2  5007               	movf	___lbdiv@divisor^(0+1280),w,c
  6171   0036A4  5C08               	subwf	___lbdiv@dividend^(0+1280),w,c
  6172   0036A6  A0D8               	btfss	status,0,c
  6173   0036A8  D003               	goto	l2389
  6174   0036AA  5007               	movf	___lbdiv@divisor^(0+1280),w,c
  6175   0036AC  5E08               	subwf	___lbdiv@dividend^(0+1280),f,c
  6176   0036AE  800A               	bsf	___lbdiv@quotient^(0+1280),0,c
  6177   0036B0                     l2389:
  6178   0036B0  90D8               	bcf	status,0,c
  6179   0036B2  3207               	rrcf	___lbdiv@divisor^(0+1280),f,c
  6180   0036B4  2E09               	decfsz	___lbdiv@counter^(0+1280),f,c
  6181   0036B6  D7F3               	goto	u1260
  6182   0036B8                     l2393:
  6183   0036B8  500A               	movf	___lbdiv@quotient^(0+1280),w,c
  6184   0036BA  0012               	return		;funcret
  6185   0036BC                     __end_of___lbdiv:
  6186                           	callstack 0
  6187                           
  6188 ;; *************** function ___awmod *****************
  6189 ;; Defined at:
  6190 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  dividend        2    0[COMRAM] int 
  6193 ;;  divisor         2    2[COMRAM] int 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  sign            1    5[COMRAM] unsigned char 
  6196 ;;  counter         1    4[COMRAM] unsigned char 
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  2    0[COMRAM] int 
  6199 ;; Registers used:
  6200 ;;		wreg, status,2, status,0
  6201 ;; Tracked objects:
  6202 ;;		On entry : 0/3
  6203 ;;		On exit  : 0/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6209 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6210 ;;Total ram usage:        6 bytes
  6211 ;; Hardware stack levels used: 1
  6212 ;; This function calls:
  6213 ;;		Nothing
  6214 ;; This function is called by:
  6215 ;;		_I2C_LCD_ESCRIBE_VAR_CHAR
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text21
  6220   003376                     __ptext21:
  6221                           	callstack 0
  6222   003376                     ___awmod:
  6223                           	callstack 125
  6224                           
  6225                           ;incstack = 0
  6226   003376  6A06               	clrf	___awmod@sign^(0+1280),c
  6227   003378  AE02               	btfss	(___awmod@dividend+1)^(0+1280),7,c
  6228   00337A  D006               	goto	l2299
  6229   00337C  6C01               	negf	___awmod@dividend^(0+1280),c
  6230   00337E  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
  6231   003380  B0D8               	btfsc	status,0,c
  6232   003382  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
  6233   003384  0E01               	movlw	1
  6234   003386  6E06               	movwf	___awmod@sign^(0+1280),c
  6235   003388                     l2299:
  6236   003388  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  6237   00338A  D004               	goto	l2303
  6238   00338C  6C03               	negf	___awmod@divisor^(0+1280),c
  6239   00338E  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
  6240   003390  B0D8               	btfsc	status,0,c
  6241   003392  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
  6242   003394                     l2303:
  6243   003394  5003               	movf	___awmod@divisor^(0+1280),w,c
  6244   003396  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
  6245   003398  B4D8               	btfsc	status,2,c
  6246   00339A  D018               	goto	l2319
  6247   00339C  0E01               	movlw	1
  6248   00339E  6E05               	movwf	___awmod@counter^(0+1280),c
  6249   0033A0  D004               	goto	l2309
  6250   0033A2                     l2307:
  6251   0033A2  90D8               	bcf	status,0,c
  6252   0033A4  3603               	rlcf	___awmod@divisor^(0+1280),f,c
  6253   0033A6  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
  6254   0033A8  2A05               	incf	___awmod@counter^(0+1280),f,c
  6255   0033AA                     l2309:
  6256   0033AA  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  6257   0033AC  D7FA               	goto	l2307
  6258   0033AE                     u1150:
  6259   0033AE  5003               	movf	___awmod@divisor^(0+1280),w,c
  6260   0033B0  5C01               	subwf	___awmod@dividend^(0+1280),w,c
  6261   0033B2  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
  6262   0033B4  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
  6263   0033B6  A0D8               	btfss	status,0,c
  6264   0033B8  D004               	goto	l2315
  6265   0033BA  5003               	movf	___awmod@divisor^(0+1280),w,c
  6266   0033BC  5E01               	subwf	___awmod@dividend^(0+1280),f,c
  6267   0033BE  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
  6268   0033C0  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
  6269   0033C2                     l2315:
  6270   0033C2  90D8               	bcf	status,0,c
  6271   0033C4  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
  6272   0033C6  3203               	rrcf	___awmod@divisor^(0+1280),f,c
  6273   0033C8  2E05               	decfsz	___awmod@counter^(0+1280),f,c
  6274   0033CA  D7F1               	goto	u1150
  6275   0033CC                     l2319:
  6276   0033CC  5006               	movf	___awmod@sign^(0+1280),w,c
  6277   0033CE  B4D8               	btfsc	status,2,c
  6278   0033D0  D004               	goto	l2323
  6279   0033D2  6C01               	negf	___awmod@dividend^(0+1280),c
  6280   0033D4  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
  6281   0033D6  B0D8               	btfsc	status,0,c
  6282   0033D8  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
  6283   0033DA                     l2323:
  6284   0033DA  C501  F501         	movff	___awmod@dividend,?___awmod
  6285   0033DE  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
  6286   0033E2  0012               	return		;funcret
  6287   0033E4                     __end_of___awmod:
  6288                           	callstack 0
  6289                           
  6290 ;; *************** function _I2C_ENVIA_LCD_DATA *****************
  6291 ;; Defined at:
  6292 ;;		line 137 in file "I2C_LCD.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;  data            1    wreg     unsigned char 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;  data            1    3[COMRAM] unsigned char 
  6297 ;;  lownibble       1    5[COMRAM] unsigned char 
  6298 ;;  highnibble      1    4[COMRAM] unsigned char 
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  1    wreg      void 
  6301 ;; Registers used:
  6302 ;;		wreg, status,2, status,0, cstack
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/3
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6309 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6311 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6312 ;;Total ram usage:        4 bytes
  6313 ;; Hardware stack levels used: 1
  6314 ;; Hardware stack levels required when called: 1
  6315 ;; This function calls:
  6316 ;;		_I2C1_WRITESINGLEBYTE
  6317 ;; This function is called by:
  6318 ;;		_I2C_ESCRIBE_MENSAJE2
  6319 ;;		_I2C_LCD_ESCRIBE_VAR_CHAR
  6320 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324                           	psect	text22
  6325   0033E4                     __ptext22:
  6326                           	callstack 0
  6327   0033E4                     _I2C_ENVIA_LCD_DATA:
  6328                           	callstack 123
  6329                           
  6330                           ;incstack = 0
  6331                           ;I2C_ENVIA_LCD_DATA@data stored from wreg
  6332   0033E4  6E04               	movwf	I2C_ENVIA_LCD_DATA@data^(0+1280),c
  6333                           
  6334                           ;I2C_LCD.c: 138:     unsigned char highnibble;;I2C_LCD.c: 139:     unsigned char lownibb
      +                          le;;I2C_LCD.c: 141:     highnibble = (data & 0xF0) | 0x08;
  6335   0033E6  5004               	movf	I2C_ENVIA_LCD_DATA@data^(0+1280),w,c
  6336   0033E8  0BF0               	andlw	240
  6337   0033EA  0908               	iorlw	8
  6338   0033EC  6E05               	movwf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),c
  6339                           
  6340                           ;I2C_LCD.c: 142:     lownibble = (unsigned char)(((data & 0x0F)<<4)| 0x08);
  6341   0033EE  C504  F503         	movff	I2C_ENVIA_LCD_DATA@data,??_I2C_ENVIA_LCD_DATA
  6342   0033F2  0E0F               	movlw	15
  6343   0033F4  1603               	andwf	??_I2C_ENVIA_LCD_DATA^(0+1280),f,c
  6344   0033F6  3803               	swapf	??_I2C_ENVIA_LCD_DATA^(0+1280),w,c
  6345   0033F8  0BF0               	andlw	240
  6346   0033FA  0908               	iorlw	8
  6347   0033FC  6E06               	movwf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),c
  6348                           
  6349                           ;I2C_LCD.c: 144:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(highnibble | 0x04 | 0x01));
  6350   0033FE  5005               	movf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),w,c
  6351   003400  0905               	iorlw	5
  6352   003402  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6353   003404  0E27               	movlw	39
  6354   003406  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  6355                           
  6356                           ; BSR set to: 2
  6357                           ;I2C_LCD.c: 145:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6358   00340A  0E35               	movlw	53
  6359   00340C                     u2067:
  6360   00340C  2EE8               	decfsz	wreg,f,c
  6361   00340E  D7FE               	bra	u2067
  6362   003410  0000               	nop	
  6363                           
  6364                           ;I2C_LCD.c: 146:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(highnibble | 0x01));
  6365   003412  5005               	movf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),w,c
  6366   003414  0901               	iorlw	1
  6367   003416  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6368   003418  0E27               	movlw	39
  6369   00341A  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  6370                           
  6371                           ; BSR set to: 2
  6372                           ;I2C_LCD.c: 147:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6373   00341E  0E35               	movlw	53
  6374   003420                     u2077:
  6375   003420  2EE8               	decfsz	wreg,f,c
  6376   003422  D7FE               	bra	u2077
  6377   003424  0000               	nop	
  6378                           
  6379                           ;I2C_LCD.c: 149:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(lownibble | 0x04 | 0x01));
  6380   003426  5006               	movf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),w,c
  6381   003428  0905               	iorlw	5
  6382   00342A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6383   00342C  0E27               	movlw	39
  6384   00342E  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  6385                           
  6386                           ; BSR set to: 2
  6387                           ;I2C_LCD.c: 150:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6388   003432  0E35               	movlw	53
  6389   003434                     u2087:
  6390   003434  2EE8               	decfsz	wreg,f,c
  6391   003436  D7FE               	bra	u2087
  6392   003438  0000               	nop	
  6393                           
  6394                           ;I2C_LCD.c: 151:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(lownibble | 0x01));
  6395   00343A  5006               	movf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),w,c
  6396   00343C  0901               	iorlw	1
  6397   00343E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  6398   003440  0E27               	movlw	39
  6399   003442  ECBE  F01B         	call	_I2C1_WRITESINGLEBYTE
  6400                           
  6401                           ; BSR set to: 2
  6402                           ;I2C_LCD.c: 152:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  6403   003446  0E35               	movlw	53
  6404   003448                     u2097:
  6405   003448  2EE8               	decfsz	wreg,f,c
  6406   00344A  D7FE               	bra	u2097
  6407   00344C  0000               	nop	
  6408   00344E  0012               	return		;funcret
  6409   003450                     __end_of_I2C_ENVIA_LCD_DATA:
  6410                           	callstack 0
  6411                           
  6412 ;; *************** function _I2C1_WRITESINGLEBYTE *****************
  6413 ;; Defined at:
  6414 ;;		line 60 in file "I2C_LCD.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  direccion       1    wreg     unsigned char 
  6417 ;;  dato            1    0[COMRAM] unsigned char 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;  direccion       1    1[COMRAM] unsigned char 
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  1    wreg      void 
  6422 ;; Registers used:
  6423 ;;		wreg, status,2, status,0
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/2
  6426 ;;		On exit  : 3F/2
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6429 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6433 ;;Total ram usage:        2 bytes
  6434 ;; Hardware stack levels used: 1
  6435 ;; This function calls:
  6436 ;;		Nothing
  6437 ;; This function is called by:
  6438 ;;		_I2C_ENVIA_LCD_DATA
  6439 ;;		_I2C_ENVIA_LCD_CMD
  6440 ;;		_I2C_LCD_INIT
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           	psect	text23
  6445   00377C                     __ptext23:
  6446                           	callstack 0
  6447   00377C                     _I2C1_WRITESINGLEBYTE:
  6448                           	callstack 123
  6449                           
  6450                           ;incstack = 0
  6451                           ;I2C1_WRITESINGLEBYTE@direccion stored from wreg
  6452   00377C  6E02               	movwf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),c
  6453                           
  6454                           ;I2C_LCD.c: 61:     I2C1CNT = 1;
  6455   00377E  0E01               	movlw	1
  6456   003780  0102               	movlb	2	; () banked
  6457   003782  6F8D               	movwf	141,b	;volatile
  6458                           
  6459                           ; BSR set to: 2
  6460                           ;I2C_LCD.c: 62:     I2C1ADB1 = (direccion << 1) & 0xFE;
  6461   003784  5002               	movf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),w,c
  6462   003786  2402               	addwf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),w,c
  6463   003788  0BFE               	andlw	254
  6464   00378A  6F8F               	movwf	143,b	;volatile
  6465                           
  6466                           ; BSR set to: 2
  6467                           ;I2C_LCD.c: 63:     I2C1TXB = dato;
  6468   00378C  C501  F28C         	movff	I2C1_WRITESINGLEBYTE@dato,652	;volatile
  6469                           
  6470                           ; BSR set to: 2
  6471                           ;I2C_LCD.c: 64:     I2C1CON0bits.S = 1;
  6472   003790  8B94               	bsf	148,5,b	;volatile
  6473   003792                     l51:
  6474                           
  6475                           ; BSR set to: 2
  6476   003792  AB99               	btfss	153,5,b	;volatile
  6477   003794  D7FE               	goto	l51
  6478   003796                     u770:
  6479                           
  6480                           ; BSR set to: 2
  6481   003796  BB95               	btfsc	149,5,b	;volatile
  6482   003798  D7FE               	goto	u770
  6483   00379A                     u780:
  6484                           
  6485                           ; BSR set to: 2
  6486   00379A  B59A               	btfsc	154,2,b	;volatile
  6487   00379C  0012               	return	
  6488   00379E  D7FD               	goto	u780
  6489   0037A0                     __end_of_I2C1_WRITESINGLEBYTE:
  6490                           	callstack 0
  6491                           
  6492 ;; *************** function _HCSR04_Distance *****************
  6493 ;; Defined at:
  6494 ;;		line 48 in file "maincode04.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;		None
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;  temporal        4   41[COMRAM] float 
  6499 ;;  distancia       2   45[COMRAM] unsigned int 
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  2   39[COMRAM] unsigned int 
  6502 ;; Registers used:
  6503 ;;		wreg, status,2, status,0, cstack
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/3
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6510 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6512 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6513 ;;Total ram usage:        8 bytes
  6514 ;; Hardware stack levels used: 1
  6515 ;; Hardware stack levels required when called: 1
  6516 ;; This function calls:
  6517 ;;		___fldiv
  6518 ;;		___fltol
  6519 ;;		___xxtofl
  6520 ;; This function is called by:
  6521 ;;		_main
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text24
  6526   003252                     __ptext24:
  6527                           	callstack 0
  6528   003252                     _HCSR04_Distance:
  6529                           	callstack 125
  6530                           
  6531                           ;maincode04.c: 49:     float temporal;;maincode04.c: 50:     unsigned int distancia;;mai
      +                          ncode04.c: 51:     TMR1H = 0;
  6532                           
  6533                           ; BSR set to: 2
  6534                           ;incstack = 0
  6535   003252  0103               	movlb	3	; () banked
  6536   003254  6B1D               	clrf	29,b	;volatile
  6537                           
  6538                           ;maincode04.c: 52:     TMR1L = 0;
  6539   003256  6B1C               	clrf	28,b	;volatile
  6540                           
  6541                           ;maincode04.c: 53:     LATEbits.LATE0 = 1;
  6542   003258  80C2               	bsf	194,0,c	;volatile
  6543                           
  6544                           ; BSR set to: 3
  6545                           ;maincode04.c: 54:     _delay((unsigned long)((10)*(32000000UL/4000000.0)));
  6546   00325A  0E1A               	movlw	26
  6547   00325C                     u2107:
  6548   00325C  2EE8               	decfsz	wreg,f,c
  6549   00325E  D7FE               	bra	u2107
  6550   003260  D000               	nop2	
  6551                           
  6552                           ;maincode04.c: 55:     LATEbits.LATE0 = 0;
  6553   003262  90C2               	bcf	194,0,c	;volatile
  6554   003264                     l270:
  6555   003264  A2D0               	btfss	208,1,c	;volatile
  6556   003266  D7FE               	goto	l270
  6557                           
  6558                           ;maincode04.c: 57:     T1CONbits.TMR1ON = 1;
  6559   003268  0103               	movlb	3	; () banked
  6560   00326A  811E               	bsf	30,0,b	;volatile
  6561   00326C                     l273:
  6562   00326C  B2D0               	btfsc	208,1,c	;volatile
  6563   00326E  D7FE               	goto	l273
  6564                           
  6565                           ;maincode04.c: 59:     T1CONbits.TMR1ON = 0;
  6566   003270  0103               	movlb	3	; () banked
  6567   003272  911E               	bcf	30,0,b	;volatile
  6568                           
  6569                           ;maincode04.c: 61:     tmr1_count = TMR1;
  6570   003274  C31C F533          	movff	796,_tmr1_count	;volatile
  6571   003278  C31D F534          	movff	797,_tmr1_count+1	;volatile
  6572                           
  6573                           ; BSR set to: 3
  6574                           ;maincode04.c: 62:     temporal = tmr1_count/58.31;
  6575   00327C  C533  F501         	movff	_tmr1_count,___xxtofl@val
  6576   003280  C534  F502         	movff	_tmr1_count+1,___xxtofl@val+1
  6577   003284  6A03               	clrf	(___xxtofl@val+2)^(0+1280),c
  6578   003286  6A04               	clrf	(___xxtofl@val+3)^(0+1280),c
  6579   003288  0E00               	movlw	0
  6580   00328A  ECC6  F017         	call	___xxtofl
  6581   00328E  C501  F50F         	movff	?___xxtofl,___fldiv@b
  6582   003292  C502  F510         	movff	?___xxtofl+1,___fldiv@b+1
  6583   003296  C503  F511         	movff	?___xxtofl+2,___fldiv@b+2
  6584   00329A  C504  F512         	movff	?___xxtofl+3,___fldiv@b+3
  6585   00329E  0E71               	movlw	113
  6586   0032A0  6E13               	movwf	___fldiv@a^(0+1280),c
  6587   0032A2  0E3D               	movlw	61
  6588   0032A4  6E14               	movwf	(___fldiv@a+1)^(0+1280),c
  6589   0032A6  0E69               	movlw	105
  6590   0032A8  6E15               	movwf	(___fldiv@a+2)^(0+1280),c
  6591   0032AA  0E42               	movlw	66
  6592   0032AC  6E16               	movwf	(___fldiv@a+3)^(0+1280),c
  6593   0032AE  EC83  F016         	call	___fldiv	;wreg free
  6594   0032B2  C50F  F52A         	movff	?___fldiv,HCSR04_Distance@temporal
  6595   0032B6  C510  F52B         	movff	?___fldiv+1,HCSR04_Distance@temporal+1
  6596   0032BA  C511  F52C         	movff	?___fldiv+2,HCSR04_Distance@temporal+2
  6597   0032BE  C512  F52D         	movff	?___fldiv+3,HCSR04_Distance@temporal+3
  6598                           
  6599                           ;maincode04.c: 63:     distancia = temporal;
  6600   0032C2  C52A  F501         	movff	HCSR04_Distance@temporal,___fltol@f1
  6601   0032C6  C52B  F502         	movff	HCSR04_Distance@temporal+1,___fltol@f1+1
  6602   0032CA  C52C  F503         	movff	HCSR04_Distance@temporal+2,___fltol@f1+2
  6603   0032CE  C52D  F504         	movff	HCSR04_Distance@temporal+3,___fltol@f1+3
  6604   0032D2  ECCC  F018         	call	___fltol	;wreg free
  6605   0032D6  C501  F52E         	movff	?___fltol,HCSR04_Distance@distancia
  6606   0032DA  C502  F52F         	movff	?___fltol+1,HCSR04_Distance@distancia+1
  6607                           
  6608                           ;maincode04.c: 64:     return distancia;
  6609   0032DE  C52E  F528         	movff	HCSR04_Distance@distancia,?_HCSR04_Distance
  6610   0032E2  C52F  F529         	movff	HCSR04_Distance@distancia+1,?_HCSR04_Distance+1
  6611   0032E6  0012               	return		;funcret
  6612   0032E8                     __end_of_HCSR04_Distance:
  6613                           	callstack 0
  6614                           
  6615 ;; *************** function ___xxtofl *****************
  6616 ;; Defined at:
  6617 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  sign            1    wreg     unsigned char 
  6620 ;;  val             4    0[COMRAM] long 
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;  sign            1    8[COMRAM] unsigned char 
  6623 ;;  arg             4   10[COMRAM] unsigned long 
  6624 ;;  exp             1    9[COMRAM] unsigned char 
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  4    0[COMRAM] unsigned char 
  6627 ;; Registers used:
  6628 ;;		wreg, status,2, status,0
  6629 ;; Tracked objects:
  6630 ;;		On entry : 3F/3
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6635 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6636 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6637 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6638 ;;Total ram usage:       14 bytes
  6639 ;; Hardware stack levels used: 1
  6640 ;; This function calls:
  6641 ;;		Nothing
  6642 ;; This function is called by:
  6643 ;;		_HCSR04_Distance
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           	psect	text25
  6648   002F8C                     __ptext25:
  6649                           	callstack 0
  6650   002F8C                     ___xxtofl:
  6651                           	callstack 125
  6652                           
  6653                           ;incstack = 0
  6654                           ;___xxtofl@sign stored from wreg
  6655   002F8C  6E09               	movwf	___xxtofl@sign^(0+1280),c
  6656   002F8E  5009               	movf	___xxtofl@sign^(0+1280),w,c
  6657   002F90  A4D8               	btfss	status,2,c
  6658   002F92  AE04               	btfss	(___xxtofl@val+3)^(0+1280),7,c
  6659   002F94  D01A               	goto	l1025
  6660   002F96  C501  F505         	movff	___xxtofl@val,??___xxtofl
  6661   002F9A  C502  F506         	movff	___xxtofl@val+1,??___xxtofl+1
  6662   002F9E  C503  F507         	movff	___xxtofl@val+2,??___xxtofl+2
  6663   002FA2  C504  F508         	movff	___xxtofl@val+3,??___xxtofl+3
  6664   002FA6  1E05               	comf	??___xxtofl^(0+1280),f,c
  6665   002FA8  1E06               	comf	(??___xxtofl+1)^(0+1280),f,c
  6666   002FAA  1E07               	comf	(??___xxtofl+2)^(0+1280),f,c
  6667   002FAC  1E08               	comf	(??___xxtofl+3)^(0+1280),f,c
  6668   002FAE  2A05               	incf	??___xxtofl^(0+1280),f,c
  6669   002FB0  0E00               	movlw	0
  6670   002FB2  2206               	addwfc	(??___xxtofl+1)^(0+1280),f,c
  6671   002FB4  2207               	addwfc	(??___xxtofl+2)^(0+1280),f,c
  6672   002FB6  2208               	addwfc	(??___xxtofl+3)^(0+1280),f,c
  6673   002FB8  C505  F50B         	movff	??___xxtofl,___xxtofl@arg
  6674   002FBC  C506  F50C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6675   002FC0  C507  F50D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6676   002FC4  C508  F50E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6677   002FC8  D008               	goto	l2459
  6678   002FCA                     l1025:
  6679   002FCA  C501  F50B         	movff	___xxtofl@val,___xxtofl@arg
  6680   002FCE  C502  F50C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6681   002FD2  C503  F50D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6682   002FD6  C504  F50E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6683   002FDA                     l2459:
  6684   002FDA  5001               	movf	___xxtofl@val^(0+1280),w,c
  6685   002FDC  1002               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
  6686   002FDE  1003               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
  6687   002FE0  1004               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
  6688   002FE2  A4D8               	btfss	status,2,c
  6689   002FE4  D009               	goto	l2465
  6690   002FE6  0E00               	movlw	0
  6691   002FE8  6E01               	movwf	?___xxtofl^(0+1280),c
  6692   002FEA  0E00               	movlw	0
  6693   002FEC  6E02               	movwf	(?___xxtofl+1)^(0+1280),c
  6694   002FEE  0E00               	movlw	0
  6695   002FF0  6E03               	movwf	(?___xxtofl+2)^(0+1280),c
  6696   002FF2  0E00               	movlw	0
  6697   002FF4  6E04               	movwf	(?___xxtofl+3)^(0+1280),c
  6698   002FF6  0012               	return	
  6699   002FF8                     l2465:
  6700   002FF8  0E96               	movlw	150
  6701   002FFA  6E0A               	movwf	___xxtofl@exp^(0+1280),c
  6702   002FFC  D006               	goto	l2469
  6703   002FFE                     l2467:
  6704   002FFE  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
  6705   003000  90D8               	bcf	status,0,c
  6706   003002  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  6707   003004  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  6708   003006  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  6709   003008  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
  6710   00300A                     l2469:
  6711   00300A  0E00               	movlw	0
  6712   00300C  140B               	andwf	___xxtofl@arg^(0+1280),w,c
  6713   00300E  6E05               	movwf	??___xxtofl^(0+1280),c
  6714   003010  0E00               	movlw	0
  6715   003012  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  6716   003014  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
  6717   003016  0E00               	movlw	0
  6718   003018  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  6719   00301A  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
  6720   00301C  0EFE               	movlw	254
  6721   00301E  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  6722   003020  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
  6723   003022  5005               	movf	??___xxtofl^(0+1280),w,c
  6724   003024  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  6725   003026  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  6726   003028  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  6727   00302A  B4D8               	btfsc	status,2,c
  6728   00302C  D00D               	goto	l1032
  6729   00302E  D7E7               	goto	l2467
  6730   003030                     l2471:
  6731   003030  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
  6732   003032  0E01               	movlw	1
  6733   003034  260B               	addwf	___xxtofl@arg^(0+1280),f,c
  6734   003036  0E00               	movlw	0
  6735   003038  220C               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
  6736   00303A  220D               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
  6737   00303C  220E               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
  6738   00303E  90D8               	bcf	status,0,c
  6739   003040  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  6740   003042  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  6741   003044  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  6742   003046  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
  6743   003048                     l1032:
  6744   003048  0E00               	movlw	0
  6745   00304A  140B               	andwf	___xxtofl@arg^(0+1280),w,c
  6746   00304C  6E05               	movwf	??___xxtofl^(0+1280),c
  6747   00304E  0E00               	movlw	0
  6748   003050  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  6749   003052  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
  6750   003054  0E00               	movlw	0
  6751   003056  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  6752   003058  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
  6753   00305A  0EFF               	movlw	255
  6754   00305C  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  6755   00305E  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
  6756   003060  5005               	movf	??___xxtofl^(0+1280),w,c
  6757   003062  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  6758   003064  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  6759   003066  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  6760   003068  B4D8               	btfsc	status,2,c
  6761   00306A  D007               	goto	l2479
  6762   00306C  D7E1               	goto	l2471
  6763   00306E                     l2477:
  6764   00306E  060A               	decf	___xxtofl@exp^(0+1280),f,c
  6765   003070  90D8               	bcf	status,0,c
  6766   003072  360B               	rlcf	___xxtofl@arg^(0+1280),f,c
  6767   003074  360C               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
  6768   003076  360D               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
  6769   003078  360E               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
  6770   00307A                     l2479:
  6771   00307A  BE0D               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
  6772   00307C  D003               	goto	u1410
  6773   00307E  0E02               	movlw	2
  6774   003080  600A               	cpfslt	___xxtofl@exp^(0+1280),c
  6775   003082  D7F5               	goto	l2477
  6776   003084                     u1410:
  6777   003084  A00A               	btfss	___xxtofl@exp^(0+1280),0,c
  6778   003086  9E0D               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
  6779   003088  90D8               	bcf	status,0,c
  6780   00308A  320A               	rrcf	___xxtofl@exp^(0+1280),f,c
  6781   00308C  C50A  F505         	movff	___xxtofl@exp,??___xxtofl
  6782   003090  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
  6783   003092  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
  6784   003094  6A08               	clrf	(??___xxtofl+3)^(0+1280),c
  6785   003096  C505  F508         	movff	??___xxtofl,??___xxtofl+3
  6786   00309A  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
  6787   00309C  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
  6788   00309E  6A05               	clrf	??___xxtofl^(0+1280),c
  6789   0030A0  5005               	movf	??___xxtofl^(0+1280),w,c
  6790   0030A2  120B               	iorwf	___xxtofl@arg^(0+1280),f,c
  6791   0030A4  5006               	movf	(??___xxtofl+1)^(0+1280),w,c
  6792   0030A6  120C               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
  6793   0030A8  5007               	movf	(??___xxtofl+2)^(0+1280),w,c
  6794   0030AA  120D               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
  6795   0030AC  5008               	movf	(??___xxtofl+3)^(0+1280),w,c
  6796   0030AE  120E               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
  6797   0030B0  5009               	movf	___xxtofl@sign^(0+1280),w,c
  6798   0030B2  A4D8               	btfss	status,2,c
  6799   0030B4  AE04               	btfss	(___xxtofl@val+3)^(0+1280),7,c
  6800   0030B6  D001               	goto	l2495
  6801   0030B8  8E0E               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
  6802   0030BA                     l2495:
  6803   0030BA  C50B  F501         	movff	___xxtofl@arg,?___xxtofl
  6804   0030BE  C50C  F502         	movff	___xxtofl@arg+1,?___xxtofl+1
  6805   0030C2  C50D  F503         	movff	___xxtofl@arg+2,?___xxtofl+2
  6806   0030C6  C50E  F504         	movff	___xxtofl@arg+3,?___xxtofl+3
  6807   0030CA  0012               	return		;funcret
  6808   0030CC                     __end_of___xxtofl:
  6809                           	callstack 0
  6810                           
  6811 ;; *************** function ___fltol *****************
  6812 ;; Defined at:
  6813 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;  f1              4    0[COMRAM] unsigned char 
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  exp1            1    9[COMRAM] unsigned char 
  6818 ;;  sign1           1    8[COMRAM] unsigned char 
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  4    0[COMRAM] long 
  6821 ;; Registers used:
  6822 ;;		wreg, status,2, status,0
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/3
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6828 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6830 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6831 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6832 ;;Total ram usage:       10 bytes
  6833 ;; Hardware stack levels used: 1
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_HCSR04_Distance
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text26
  6842   003198                     __ptext26:
  6843                           	callstack 0
  6844   003198                     ___fltol:
  6845                           	callstack 125
  6846                           
  6847                           ;incstack = 0
  6848   003198  3403               	rlcf	(___fltol@f1+2)^(0+1280),w,c
  6849   00319A  3404               	rlcf	(___fltol@f1+3)^(0+1280),w,c
  6850   00319C  6E0A               	movwf	___fltol@exp1^(0+1280),c
  6851   00319E  500A               	movf	___fltol@exp1^(0+1280),w,c
  6852   0031A0  A4D8               	btfss	status,2,c
  6853   0031A2  D009               	goto	l2333
  6854   0031A4                     u1180:
  6855   0031A4  0E00               	movlw	0
  6856   0031A6  6E01               	movwf	?___fltol^(0+1280),c
  6857   0031A8  0E00               	movlw	0
  6858   0031AA  6E02               	movwf	(?___fltol+1)^(0+1280),c
  6859   0031AC  0E00               	movlw	0
  6860   0031AE  6E03               	movwf	(?___fltol+2)^(0+1280),c
  6861   0031B0  0E00               	movlw	0
  6862   0031B2  6E04               	movwf	(?___fltol+3)^(0+1280),c
  6863   0031B4  0012               	return	
  6864   0031B6                     l2333:
  6865   0031B6  C501  F505         	movff	___fltol@f1,??___fltol
  6866   0031BA  C502  F506         	movff	___fltol@f1+1,??___fltol+1
  6867   0031BE  C503  F507         	movff	___fltol@f1+2,??___fltol+2
  6868   0031C2  C504  F508         	movff	___fltol@f1+3,??___fltol+3
  6869   0031C6  0E20               	movlw	32
  6870   0031C8  D005               	goto	u1190
  6871   0031CA                     u1195:
  6872   0031CA  90D8               	bcf	status,0,c
  6873   0031CC  3208               	rrcf	(??___fltol+3)^(0+1280),f,c
  6874   0031CE  3207               	rrcf	(??___fltol+2)^(0+1280),f,c
  6875   0031D0  3206               	rrcf	(??___fltol+1)^(0+1280),f,c
  6876   0031D2  3205               	rrcf	??___fltol^(0+1280),f,c
  6877   0031D4                     u1190:
  6878   0031D4  2EE8               	decfsz	wreg,f,c
  6879   0031D6  D7F9               	goto	u1195
  6880   0031D8  5005               	movf	??___fltol^(0+1280),w,c
  6881   0031DA  6E09               	movwf	___fltol@sign1^(0+1280),c
  6882   0031DC  8E03               	bsf	(___fltol@f1+2)^(0+1280),7,c
  6883   0031DE  0EFF               	movlw	255
  6884   0031E0  1601               	andwf	___fltol@f1^(0+1280),f,c
  6885   0031E2  0EFF               	movlw	255
  6886   0031E4  1602               	andwf	(___fltol@f1+1)^(0+1280),f,c
  6887   0031E6  0EFF               	movlw	255
  6888   0031E8  1603               	andwf	(___fltol@f1+2)^(0+1280),f,c
  6889   0031EA  0E00               	movlw	0
  6890   0031EC  1604               	andwf	(___fltol@f1+3)^(0+1280),f,c
  6891   0031EE  0E96               	movlw	150
  6892   0031F0  5E0A               	subwf	___fltol@exp1^(0+1280),f,c
  6893   0031F2  AE0A               	btfss	___fltol@exp1^(0+1280),7,c
  6894   0031F4  D00D               	goto	l2353
  6895   0031F6  500A               	movf	___fltol@exp1^(0+1280),w,c
  6896   0031F8  0A80               	xorlw	128
  6897   0031FA  0F97               	addlw	151
  6898   0031FC  A0D8               	btfss	status,0,c
  6899   0031FE  D7D2               	goto	u1180
  6900   003200                     l2349:
  6901   003200  90D8               	bcf	status,0,c
  6902   003202  3204               	rrcf	(___fltol@f1+3)^(0+1280),f,c
  6903   003204  3203               	rrcf	(___fltol@f1+2)^(0+1280),f,c
  6904   003206  3202               	rrcf	(___fltol@f1+1)^(0+1280),f,c
  6905   003208  3201               	rrcf	___fltol@f1^(0+1280),f,c
  6906   00320A  3E0A               	incfsz	___fltol@exp1^(0+1280),f,c
  6907   00320C  D7F9               	goto	l2349
  6908   00320E  D00D               	goto	u1230
  6909   003210                     l2353:
  6910   003210  0E1F               	movlw	31
  6911   003212  640A               	cpfsgt	___fltol@exp1^(0+1280),c
  6912   003214  D007               	goto	l2361
  6913   003216  D7C6               	goto	u1180
  6914   003218                     l2359:
  6915   003218  90D8               	bcf	status,0,c
  6916   00321A  3601               	rlcf	___fltol@f1^(0+1280),f,c
  6917   00321C  3602               	rlcf	(___fltol@f1+1)^(0+1280),f,c
  6918   00321E  3603               	rlcf	(___fltol@f1+2)^(0+1280),f,c
  6919   003220  3604               	rlcf	(___fltol@f1+3)^(0+1280),f,c
  6920   003222  060A               	decf	___fltol@exp1^(0+1280),f,c
  6921   003224                     l2361:
  6922   003224  500A               	movf	___fltol@exp1^(0+1280),w,c
  6923   003226  A4D8               	btfss	status,2,c
  6924   003228  D7F7               	goto	l2359
  6925   00322A                     u1230:
  6926   00322A  5009               	movf	___fltol@sign1^(0+1280),w,c
  6927   00322C  B4D8               	btfsc	status,2,c
  6928   00322E  D008               	goto	l2367
  6929   003230  1E04               	comf	(___fltol@f1+3)^(0+1280),f,c
  6930   003232  1E03               	comf	(___fltol@f1+2)^(0+1280),f,c
  6931   003234  1E02               	comf	(___fltol@f1+1)^(0+1280),f,c
  6932   003236  6C01               	negf	___fltol@f1^(0+1280),c
  6933   003238  0E00               	movlw	0
  6934   00323A  2202               	addwfc	(___fltol@f1+1)^(0+1280),f,c
  6935   00323C  2203               	addwfc	(___fltol@f1+2)^(0+1280),f,c
  6936   00323E  2204               	addwfc	(___fltol@f1+3)^(0+1280),f,c
  6937   003240                     l2367:
  6938   003240  C501  F501         	movff	___fltol@f1,?___fltol
  6939   003244  C502  F502         	movff	___fltol@f1+1,?___fltol+1
  6940   003248  C503  F503         	movff	___fltol@f1+2,?___fltol+2
  6941   00324C  C504  F504         	movff	___fltol@f1+3,?___fltol+3
  6942   003250  0012               	return		;funcret
  6943   003252                     __end_of___fltol:
  6944                           	callstack 0
  6945                           
  6946 ;; *************** function ___fldiv *****************
  6947 ;; Defined at:
  6948 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  b               4   14[COMRAM] long 
  6951 ;;  a               4   18[COMRAM] long 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  grs             4   33[COMRAM] unsigned long 
  6954 ;;  rem             4   26[COMRAM] unsigned long 
  6955 ;;  new_exp         2   31[COMRAM] short 
  6956 ;;  aexp            1   38[COMRAM] unsigned char 
  6957 ;;  bexp            1   37[COMRAM] unsigned char 
  6958 ;;  sign            1   30[COMRAM] unsigned char 
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  4   14[COMRAM] unsigned char 
  6961 ;; Registers used:
  6962 ;;		wreg, status,2, status,0
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/3
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6968 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6969 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6970 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6971 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6972 ;;Total ram usage:       25 bytes
  6973 ;; Hardware stack levels used: 1
  6974 ;; This function calls:
  6975 ;;		Nothing
  6976 ;; This function is called by:
  6977 ;;		_HCSR04_Distance
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           	psect	text27
  6982   002D06                     __ptext27:
  6983                           	callstack 0
  6984   002D06                     ___fldiv:
  6985                           	callstack 125
  6986                           
  6987                           ;incstack = 0
  6988   002D06  5012               	movf	(___fldiv@b+3)^(0+1280),w,c
  6989   002D08  0B80               	andlw	128
  6990   002D0A  6E1F               	movwf	___fldiv@sign^(0+1280),c
  6991   002D0C  5012               	movf	(___fldiv@b+3)^(0+1280),w,c
  6992   002D0E  2412               	addwf	(___fldiv@b+3)^(0+1280),w,c
  6993   002D10  6E26               	movwf	___fldiv@bexp^(0+1280),c
  6994   002D12  BE11               	btfsc	(___fldiv@b+2)^(0+1280),7,c
  6995   002D14  8026               	bsf	___fldiv@bexp^(0+1280),0,c
  6996   002D16  5026               	movf	___fldiv@bexp^(0+1280),w,c
  6997   002D18  B4D8               	btfsc	status,2,c
  6998   002D1A  D00E               	goto	l2171
  6999   002D1C  2826               	incf	___fldiv@bexp^(0+1280),w,c
  7000   002D1E  A4D8               	btfss	status,2,c
  7001   002D20  D008               	goto	l2167
  7002   002D22  0E00               	movlw	0
  7003   002D24  6E0F               	movwf	___fldiv@b^(0+1280),c
  7004   002D26  0E00               	movlw	0
  7005   002D28  6E10               	movwf	(___fldiv@b+1)^(0+1280),c
  7006   002D2A  0E00               	movlw	0
  7007   002D2C  6E11               	movwf	(___fldiv@b+2)^(0+1280),c
  7008   002D2E  0E00               	movlw	0
  7009   002D30  6E12               	movwf	(___fldiv@b+3)^(0+1280),c
  7010   002D32                     l2167:
  7011   002D32  8E11               	bsf	(___fldiv@b+2)^(0+1280),7,c
  7012   002D34  6A12               	clrf	(___fldiv@b+3)^(0+1280),c
  7013   002D36  D008               	goto	l2173
  7014   002D38                     l2171:
  7015   002D38  0E00               	movlw	0
  7016   002D3A  6E0F               	movwf	___fldiv@b^(0+1280),c
  7017   002D3C  0E00               	movlw	0
  7018   002D3E  6E10               	movwf	(___fldiv@b+1)^(0+1280),c
  7019   002D40  0E00               	movlw	0
  7020   002D42  6E11               	movwf	(___fldiv@b+2)^(0+1280),c
  7021   002D44  0E00               	movlw	0
  7022   002D46  6E12               	movwf	(___fldiv@b+3)^(0+1280),c
  7023   002D48                     l2173:
  7024   002D48  5016               	movf	(___fldiv@a+3)^(0+1280),w,c
  7025   002D4A  0B80               	andlw	128
  7026   002D4C  1A1F               	xorwf	___fldiv@sign^(0+1280),f,c
  7027   002D4E  5016               	movf	(___fldiv@a+3)^(0+1280),w,c
  7028   002D50  2416               	addwf	(___fldiv@a+3)^(0+1280),w,c
  7029   002D52  6E27               	movwf	___fldiv@aexp^(0+1280),c
  7030   002D54  BE15               	btfsc	(___fldiv@a+2)^(0+1280),7,c
  7031   002D56  8027               	bsf	___fldiv@aexp^(0+1280),0,c
  7032   002D58  5027               	movf	___fldiv@aexp^(0+1280),w,c
  7033   002D5A  B4D8               	btfsc	status,2,c
  7034   002D5C  D00E               	goto	l2191
  7035   002D5E  2827               	incf	___fldiv@aexp^(0+1280),w,c
  7036   002D60  A4D8               	btfss	status,2,c
  7037   002D62  D008               	goto	l2187
  7038   002D64  0E00               	movlw	0
  7039   002D66  6E13               	movwf	___fldiv@a^(0+1280),c
  7040   002D68  0E00               	movlw	0
  7041   002D6A  6E14               	movwf	(___fldiv@a+1)^(0+1280),c
  7042   002D6C  0E00               	movlw	0
  7043   002D6E  6E15               	movwf	(___fldiv@a+2)^(0+1280),c
  7044   002D70  0E00               	movlw	0
  7045   002D72  6E16               	movwf	(___fldiv@a+3)^(0+1280),c
  7046   002D74                     l2187:
  7047   002D74  8E15               	bsf	(___fldiv@a+2)^(0+1280),7,c
  7048   002D76  6A16               	clrf	(___fldiv@a+3)^(0+1280),c
  7049   002D78  D008               	goto	l2193
  7050   002D7A                     l2191:
  7051   002D7A  0E00               	movlw	0
  7052   002D7C  6E13               	movwf	___fldiv@a^(0+1280),c
  7053   002D7E  0E00               	movlw	0
  7054   002D80  6E14               	movwf	(___fldiv@a+1)^(0+1280),c
  7055   002D82  0E00               	movlw	0
  7056   002D84  6E15               	movwf	(___fldiv@a+2)^(0+1280),c
  7057   002D86  0E00               	movlw	0
  7058   002D88  6E16               	movwf	(___fldiv@a+3)^(0+1280),c
  7059   002D8A                     l2193:
  7060   002D8A  5013               	movf	___fldiv@a^(0+1280),w,c
  7061   002D8C  1014               	iorwf	(___fldiv@a+1)^(0+1280),w,c
  7062   002D8E  1015               	iorwf	(___fldiv@a+2)^(0+1280),w,c
  7063   002D90  1016               	iorwf	(___fldiv@a+3)^(0+1280),w,c
  7064   002D92  A4D8               	btfss	status,2,c
  7065   002D94  D017               	goto	l2205
  7066   002D96  0E00               	movlw	0
  7067   002D98  6E0F               	movwf	___fldiv@b^(0+1280),c
  7068   002D9A  0E00               	movlw	0
  7069   002D9C  6E10               	movwf	(___fldiv@b+1)^(0+1280),c
  7070   002D9E  0E00               	movlw	0
  7071   002DA0  6E11               	movwf	(___fldiv@b+2)^(0+1280),c
  7072   002DA2  0E00               	movlw	0
  7073   002DA4  6E12               	movwf	(___fldiv@b+3)^(0+1280),c
  7074   002DA6  0E80               	movlw	128
  7075   002DA8  1211               	iorwf	(___fldiv@b+2)^(0+1280),f,c
  7076   002DAA  0E7F               	movlw	127
  7077   002DAC  1212               	iorwf	(___fldiv@b+3)^(0+1280),f,c
  7078   002DAE                     l2199:
  7079   002DAE  501F               	movf	___fldiv@sign^(0+1280),w,c
  7080   002DB0  1212               	iorwf	(___fldiv@b+3)^(0+1280),f,c
  7081   002DB2  C50F  F50F         	movff	___fldiv@b,?___fldiv
  7082   002DB6  C510  F510         	movff	___fldiv@b+1,?___fldiv+1
  7083   002DBA  C511  F511         	movff	___fldiv@b+2,?___fldiv+2
  7084   002DBE  C512  F512         	movff	___fldiv@b+3,?___fldiv+3
  7085   002DC2  0012               	return	
  7086   002DC4                     l2205:
  7087   002DC4  5026               	movf	___fldiv@bexp^(0+1280),w,c
  7088   002DC6  A4D8               	btfss	status,2,c
  7089   002DC8  D009               	goto	l2213
  7090   002DCA  0E00               	movlw	0
  7091   002DCC  6E0F               	movwf	?___fldiv^(0+1280),c
  7092   002DCE  0E00               	movlw	0
  7093   002DD0  6E10               	movwf	(?___fldiv+1)^(0+1280),c
  7094   002DD2  0E00               	movlw	0
  7095   002DD4  6E11               	movwf	(?___fldiv+2)^(0+1280),c
  7096   002DD6  0E00               	movlw	0
  7097   002DD8  6E12               	movwf	(?___fldiv+3)^(0+1280),c
  7098   002DDA  0012               	return	
  7099   002DDC                     l2213:
  7100   002DDC  5027               	movf	___fldiv@aexp^(0+1280),w,c
  7101   002DDE  C526  F517         	movff	___fldiv@bexp,??___fldiv
  7102   002DE2  6A18               	clrf	(??___fldiv+1)^(0+1280),c
  7103   002DE4  5E17               	subwf	??___fldiv^(0+1280),f,c
  7104   002DE6  0E00               	movlw	0
  7105   002DE8  5A18               	subwfb	(??___fldiv+1)^(0+1280),f,c
  7106   002DEA  0E7F               	movlw	127
  7107   002DEC  2417               	addwf	??___fldiv^(0+1280),w,c
  7108   002DEE  6E20               	movwf	___fldiv@new_exp^(0+1280),c
  7109   002DF0  0E00               	movlw	0
  7110   002DF2  2018               	addwfc	(??___fldiv+1)^(0+1280),w,c
  7111   002DF4  6E21               	movwf	(___fldiv@new_exp+1)^(0+1280),c
  7112   002DF6  C50F  F51B         	movff	___fldiv@b,___fldiv@rem
  7113   002DFA  C510  F51C         	movff	___fldiv@b+1,___fldiv@rem+1
  7114   002DFE  C511  F51D         	movff	___fldiv@b+2,___fldiv@rem+2
  7115   002E02  C512  F51E         	movff	___fldiv@b+3,___fldiv@rem+3
  7116   002E06  0E00               	movlw	0
  7117   002E08  6E0F               	movwf	___fldiv@b^(0+1280),c
  7118   002E0A  0E00               	movlw	0
  7119   002E0C  6E10               	movwf	(___fldiv@b+1)^(0+1280),c
  7120   002E0E  0E00               	movlw	0
  7121   002E10  6E11               	movwf	(___fldiv@b+2)^(0+1280),c
  7122   002E12  0E00               	movlw	0
  7123   002E14  6E12               	movwf	(___fldiv@b+3)^(0+1280),c
  7124   002E16  0E00               	movlw	0
  7125   002E18  6E22               	movwf	___fldiv@grs^(0+1280),c
  7126   002E1A  0E00               	movlw	0
  7127   002E1C  6E23               	movwf	(___fldiv@grs+1)^(0+1280),c
  7128   002E1E  0E00               	movlw	0
  7129   002E20  6E24               	movwf	(___fldiv@grs+2)^(0+1280),c
  7130   002E22  0E00               	movlw	0
  7131   002E24  6E25               	movwf	(___fldiv@grs+3)^(0+1280),c
  7132   002E26  6A27               	clrf	___fldiv@aexp^(0+1280),c
  7133   002E28  D028               	goto	l954
  7134   002E2A                     l2223:
  7135   002E2A  5027               	movf	___fldiv@aexp^(0+1280),w,c
  7136   002E2C  B4D8               	btfsc	status,2,c
  7137   002E2E  D011               	goto	l2231
  7138   002E30  90D8               	bcf	status,0,c
  7139   002E32  361B               	rlcf	___fldiv@rem^(0+1280),f,c
  7140   002E34  361C               	rlcf	(___fldiv@rem+1)^(0+1280),f,c
  7141   002E36  361D               	rlcf	(___fldiv@rem+2)^(0+1280),f,c
  7142   002E38  361E               	rlcf	(___fldiv@rem+3)^(0+1280),f,c
  7143   002E3A  90D8               	bcf	status,0,c
  7144   002E3C  360F               	rlcf	___fldiv@b^(0+1280),f,c
  7145   002E3E  3610               	rlcf	(___fldiv@b+1)^(0+1280),f,c
  7146   002E40  3611               	rlcf	(___fldiv@b+2)^(0+1280),f,c
  7147   002E42  3612               	rlcf	(___fldiv@b+3)^(0+1280),f,c
  7148   002E44  BE25               	btfsc	(___fldiv@grs+3)^(0+1280),7,c
  7149   002E46  800F               	bsf	___fldiv@b^(0+1280),0,c
  7150   002E48  90D8               	bcf	status,0,c
  7151   002E4A  3622               	rlcf	___fldiv@grs^(0+1280),f,c
  7152   002E4C  3623               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
  7153   002E4E  3624               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
  7154   002E50  3625               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
  7155   002E52                     l2231:
  7156   002E52  5013               	movf	___fldiv@a^(0+1280),w,c
  7157   002E54  5C1B               	subwf	___fldiv@rem^(0+1280),w,c
  7158   002E56  5014               	movf	(___fldiv@a+1)^(0+1280),w,c
  7159   002E58  581C               	subwfb	(___fldiv@rem+1)^(0+1280),w,c
  7160   002E5A  5015               	movf	(___fldiv@a+2)^(0+1280),w,c
  7161   002E5C  581D               	subwfb	(___fldiv@rem+2)^(0+1280),w,c
  7162   002E5E  5016               	movf	(___fldiv@a+3)^(0+1280),w,c
  7163   002E60  581E               	subwfb	(___fldiv@rem+3)^(0+1280),w,c
  7164   002E62  A0D8               	btfss	status,0,c
  7165   002E64  D009               	goto	l2237
  7166   002E66  8C25               	bsf	(___fldiv@grs+3)^(0+1280),6,c
  7167   002E68  5013               	movf	___fldiv@a^(0+1280),w,c
  7168   002E6A  5E1B               	subwf	___fldiv@rem^(0+1280),f,c
  7169   002E6C  5014               	movf	(___fldiv@a+1)^(0+1280),w,c
  7170   002E6E  5A1C               	subwfb	(___fldiv@rem+1)^(0+1280),f,c
  7171   002E70  5015               	movf	(___fldiv@a+2)^(0+1280),w,c
  7172   002E72  5A1D               	subwfb	(___fldiv@rem+2)^(0+1280),f,c
  7173   002E74  5016               	movf	(___fldiv@a+3)^(0+1280),w,c
  7174   002E76  5A1E               	subwfb	(___fldiv@rem+3)^(0+1280),f,c
  7175   002E78                     l2237:
  7176   002E78  2A27               	incf	___fldiv@aexp^(0+1280),f,c
  7177   002E7A                     l954:
  7178   002E7A  0E19               	movlw	25
  7179   002E7C  6427               	cpfsgt	___fldiv@aexp^(0+1280),c
  7180   002E7E  D7D5               	goto	l2223
  7181   002E80  501B               	movf	___fldiv@rem^(0+1280),w,c
  7182   002E82  101C               	iorwf	(___fldiv@rem+1)^(0+1280),w,c
  7183   002E84  101D               	iorwf	(___fldiv@rem+2)^(0+1280),w,c
  7184   002E86  101E               	iorwf	(___fldiv@rem+3)^(0+1280),w,c
  7185   002E88  B4D8               	btfsc	status,2,c
  7186   002E8A  D011               	goto	l2249
  7187   002E8C  8022               	bsf	___fldiv@grs^(0+1280),0,c
  7188   002E8E  D00F               	goto	l2249
  7189   002E90                     l2243:
  7190   002E90  90D8               	bcf	status,0,c
  7191   002E92  360F               	rlcf	___fldiv@b^(0+1280),f,c
  7192   002E94  3610               	rlcf	(___fldiv@b+1)^(0+1280),f,c
  7193   002E96  3611               	rlcf	(___fldiv@b+2)^(0+1280),f,c
  7194   002E98  3612               	rlcf	(___fldiv@b+3)^(0+1280),f,c
  7195   002E9A  BE25               	btfsc	(___fldiv@grs+3)^(0+1280),7,c
  7196   002E9C  800F               	bsf	___fldiv@b^(0+1280),0,c
  7197   002E9E  90D8               	bcf	status,0,c
  7198   002EA0  3622               	rlcf	___fldiv@grs^(0+1280),f,c
  7199   002EA2  3623               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
  7200   002EA4  3624               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
  7201   002EA6  3625               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
  7202   002EA8  0620               	decf	___fldiv@new_exp^(0+1280),f,c
  7203   002EAA  A0D8               	btfss	status,0,c
  7204   002EAC  0621               	decf	(___fldiv@new_exp+1)^(0+1280),f,c
  7205   002EAE                     l2249:
  7206   002EAE  AE11               	btfss	(___fldiv@b+2)^(0+1280),7,c
  7207   002EB0  D7EF               	goto	l2243
  7208   002EB2  6A27               	clrf	___fldiv@aexp^(0+1280),c
  7209   002EB4  AE25               	btfss	(___fldiv@grs+3)^(0+1280),7,c
  7210   002EB6  D017               	goto	l965
  7211   002EB8  0EFF               	movlw	255
  7212   002EBA  1422               	andwf	___fldiv@grs^(0+1280),w,c
  7213   002EBC  6E17               	movwf	??___fldiv^(0+1280),c
  7214   002EBE  0EFF               	movlw	255
  7215   002EC0  1423               	andwf	(___fldiv@grs+1)^(0+1280),w,c
  7216   002EC2  6E18               	movwf	(??___fldiv+1)^(0+1280),c
  7217   002EC4  0EFF               	movlw	255
  7218   002EC6  1424               	andwf	(___fldiv@grs+2)^(0+1280),w,c
  7219   002EC8  6E19               	movwf	(??___fldiv+2)^(0+1280),c
  7220   002ECA  0E7F               	movlw	127
  7221   002ECC  1425               	andwf	(___fldiv@grs+3)^(0+1280),w,c
  7222   002ECE  6E1A               	movwf	(??___fldiv+3)^(0+1280),c
  7223   002ED0  5017               	movf	??___fldiv^(0+1280),w,c
  7224   002ED2  1018               	iorwf	(??___fldiv+1)^(0+1280),w,c
  7225   002ED4  1019               	iorwf	(??___fldiv+2)^(0+1280),w,c
  7226   002ED6  101A               	iorwf	(??___fldiv+3)^(0+1280),w,c
  7227   002ED8  B4D8               	btfsc	status,2,c
  7228   002EDA  D003               	goto	l966
  7229   002EDC                     u1050:
  7230   002EDC  0E01               	movlw	1
  7231   002EDE  6E27               	movwf	___fldiv@aexp^(0+1280),c
  7232   002EE0  D002               	goto	l965
  7233   002EE2                     l966:
  7234   002EE2  B00F               	btfsc	___fldiv@b^(0+1280),0,c
  7235   002EE4  D7FB               	goto	u1050
  7236   002EE6                     l965:
  7237   002EE6  5027               	movf	___fldiv@aexp^(0+1280),w,c
  7238   002EE8  B4D8               	btfsc	status,2,c
  7239   002EEA  D01F               	goto	l2265
  7240   002EEC  0E01               	movlw	1
  7241   002EEE  260F               	addwf	___fldiv@b^(0+1280),f,c
  7242   002EF0  0E00               	movlw	0
  7243   002EF2  2210               	addwfc	(___fldiv@b+1)^(0+1280),f,c
  7244   002EF4  2211               	addwfc	(___fldiv@b+2)^(0+1280),f,c
  7245   002EF6  2212               	addwfc	(___fldiv@b+3)^(0+1280),f,c
  7246   002EF8  A012               	btfss	(___fldiv@b+3)^(0+1280),0,c
  7247   002EFA  D017               	goto	l2265
  7248   002EFC  C50F  F517         	movff	___fldiv@b,??___fldiv
  7249   002F00  C510  F518         	movff	___fldiv@b+1,??___fldiv+1
  7250   002F04  C511  F519         	movff	___fldiv@b+2,??___fldiv+2
  7251   002F08  C512  F51A         	movff	___fldiv@b+3,??___fldiv+3
  7252   002F0C  341A               	rlcf	(??___fldiv+3)^(0+1280),w,c
  7253   002F0E  321A               	rrcf	(??___fldiv+3)^(0+1280),f,c
  7254   002F10  3219               	rrcf	(??___fldiv+2)^(0+1280),f,c
  7255   002F12  3218               	rrcf	(??___fldiv+1)^(0+1280),f,c
  7256   002F14  3217               	rrcf	??___fldiv^(0+1280),f,c
  7257   002F16  C517  F50F         	movff	??___fldiv,___fldiv@b
  7258   002F1A  C518  F510         	movff	??___fldiv+1,___fldiv@b+1
  7259   002F1E  C519  F511         	movff	??___fldiv+2,___fldiv@b+2
  7260   002F22  C51A  F512         	movff	??___fldiv+3,___fldiv@b+3
  7261   002F26  4A20               	infsnz	___fldiv@new_exp^(0+1280),f,c
  7262   002F28  2A21               	incf	(___fldiv@new_exp+1)^(0+1280),f,c
  7263   002F2A                     l2265:
  7264   002F2A  BE21               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
  7265   002F2C  D010               	goto	l2269
  7266   002F2E  5021               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
  7267   002F30  E103               	bnz	u1090
  7268   002F32  2820               	incf	___fldiv@new_exp^(0+1280),w,c
  7269   002F34  A0D8               	btfss	status,0,c
  7270   002F36  D00B               	goto	l2269
  7271   002F38                     u1090:
  7272   002F38  0E00               	movlw	0
  7273   002F3A  6E21               	movwf	(___fldiv@new_exp+1)^(0+1280),c
  7274   002F3C  6820               	setf	___fldiv@new_exp^(0+1280),c
  7275   002F3E  0E00               	movlw	0
  7276   002F40  6E0F               	movwf	___fldiv@b^(0+1280),c
  7277   002F42  0E00               	movlw	0
  7278   002F44  6E10               	movwf	(___fldiv@b+1)^(0+1280),c
  7279   002F46  0E00               	movlw	0
  7280   002F48  6E11               	movwf	(___fldiv@b+2)^(0+1280),c
  7281   002F4A  0E00               	movlw	0
  7282   002F4C  6E12               	movwf	(___fldiv@b+3)^(0+1280),c
  7283   002F4E                     l2269:
  7284   002F4E  BE21               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
  7285   002F50  D005               	goto	u1100
  7286   002F52  5021               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
  7287   002F54  E110               	bnz	l2275
  7288   002F56  0420               	decf	___fldiv@new_exp^(0+1280),w,c
  7289   002F58  B0D8               	btfsc	status,0,c
  7290   002F5A  D00D               	goto	l2275
  7291   002F5C                     u1100:
  7292   002F5C  0E00               	movlw	0
  7293   002F5E  6E21               	movwf	(___fldiv@new_exp+1)^(0+1280),c
  7294   002F60  0E00               	movlw	0
  7295   002F62  6E20               	movwf	___fldiv@new_exp^(0+1280),c
  7296   002F64  0E00               	movlw	0
  7297   002F66  6E0F               	movwf	___fldiv@b^(0+1280),c
  7298   002F68  0E00               	movlw	0
  7299   002F6A  6E10               	movwf	(___fldiv@b+1)^(0+1280),c
  7300   002F6C  0E00               	movlw	0
  7301   002F6E  6E11               	movwf	(___fldiv@b+2)^(0+1280),c
  7302   002F70  0E00               	movlw	0
  7303   002F72  6E12               	movwf	(___fldiv@b+3)^(0+1280),c
  7304   002F74  6A1F               	clrf	___fldiv@sign^(0+1280),c
  7305   002F76                     l2275:
  7306   002F76  C520  F526         	movff	___fldiv@new_exp,___fldiv@bexp
  7307   002F7A  A026               	btfss	___fldiv@bexp^(0+1280),0,c
  7308   002F7C  D002               	goto	l2281
  7309   002F7E  8E11               	bsf	(___fldiv@b+2)^(0+1280),7,c
  7310   002F80  D001               	goto	l2283
  7311   002F82                     l2281:
  7312   002F82  9E11               	bcf	(___fldiv@b+2)^(0+1280),7,c
  7313   002F84                     l2283:
  7314   002F84  90D8               	bcf	status,0,c
  7315   002F86  3026               	rrcf	___fldiv@bexp^(0+1280),w,c
  7316   002F88  6E12               	movwf	(___fldiv@b+3)^(0+1280),c
  7317   002F8A  D711               	goto	l2199
  7318   002F8C                     __end_of___fldiv:
  7319                           	callstack 0
  7320                           
  7321                           	psect	rparam
  7322   000001                     ___rparam_used  equ	1
  7323   000000                     ___param_bank   equ	0
  7324   000000                     __Lparam        equ	__Lrparam
  7325   000000                     __Hparam        equ	__Hrparam
  7326                           
  7327                           	psect	config
  7328                           
  7329                           ;Config register CONFIG1 @ 0x300000
  7330                           ;	External Oscillator Selection
  7331                           ;	FEXTOSC = OFF, Oscillator not enabled
  7332                           ;	Reset Oscillator Selection
  7333                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  7334   300000                     	org	3145728
  7335   300000  FC                 	db	252
  7336                           
  7337                           ;Config register CONFIG2 @ 0x300001
  7338                           ;	Clock out Enable bit
  7339                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  7340                           ;	PRLOCKED One-Way Set Enable bit
  7341                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  7342                           ;	Clock Switch Enable bit
  7343                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7344                           ;	Fail-Safe Clock Monitor Enable bit
  7345                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7346   300001                     	org	3145729
  7347   300001  FF                 	db	255
  7348                           
  7349                           ;Config register CONFIG3 @ 0x300002
  7350                           ;	MCLR Enable bit
  7351                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  7352                           ;	Power-up timer selection bits
  7353                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  7354                           ;	Multi-vector enable bit
  7355                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  7356                           ;	IVTLOCK bit One-way set enable bit
  7357                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  7358                           ;	Low Power BOR Enable bit
  7359                           ;	LPBOREN = OFF, Low-Power BOR disabled
  7360                           ;	Brown-out Reset Enable bits
  7361                           ;	BOREN = OFF, Brown-out Reset disabled
  7362   300002                     	org	3145730
  7363   300002  3D                 	db	61
  7364                           
  7365                           ;Config register CONFIG4 @ 0x300003
  7366                           ;	Brown-out Reset Voltage Selection bits
  7367                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  7368                           ;	ZCD Disable bit
  7369                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  7370                           ;	PPSLOCK bit One-Way Set Enable bit
  7371                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  7372                           ;	Stack Full/Underflow Reset Enable bit
  7373                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7374                           ;	Low Voltage Programming Enable bit
  7375                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  7376                           ;	Extended Instruction Set Enable bit
  7377                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  7378   300003                     	org	3145731
  7379   300003  DF                 	db	223
  7380                           
  7381                           ;Config register CONFIG5 @ 0x300004
  7382                           ;	WDT Period selection bits
  7383                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7384                           ;	WDT operating mode
  7385                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  7386   300004                     	org	3145732
  7387   300004  9F                 	db	159
  7388                           
  7389                           ;Config register CONFIG6 @ 0x300005
  7390                           ;	WDT Window Select bits
  7391                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7392                           ;	WDT input clock selector
  7393                           ;	WDTCCS = SC, Software Control
  7394   300005                     	org	3145733
  7395   300005  FF                 	db	255
  7396                           
  7397                           ;Config register CONFIG7 @ 0x300006
  7398                           ;	Boot Block Size selection bits
  7399                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  7400                           ;	Boot Block enable bit
  7401                           ;	BBEN = OFF, Boot block disabled
  7402                           ;	Storage Area Flash enable bit
  7403                           ;	SAFEN = OFF, SAF disabled
  7404                           ;	Background Debugger
  7405                           ;	DEBUG = OFF, Background Debugger disabled
  7406   300006                     	org	3145734
  7407   300006  FF                 	db	255
  7408                           
  7409                           ;Config register CONFIG8 @ 0x300007
  7410                           ;	Boot Block Write Protection bit
  7411                           ;	WRTB = OFF, Boot Block not Write protected
  7412                           ;	Configuration Register Write Protection bit
  7413                           ;	WRTC = OFF, Configuration registers not Write protected
  7414                           ;	Data EEPROM Write Protection bit
  7415                           ;	WRTD = OFF, Data EEPROM not Write protected
  7416                           ;	SAF Write protection bit
  7417                           ;	WRTSAF = OFF, SAF not Write Protected
  7418                           ;	Application Block write protection bit
  7419                           ;	WRTAPP = OFF, Application Block not write protected
  7420   300007                     	org	3145735
  7421   300007  FF                 	db	255
  7422                           
  7423                           ;Config register CONFIG10 @ 0x300009
  7424                           ;	PFM and Data EEPROM Code Protection bit
  7425                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  7426   300009                     	org	3145737
  7427   300009  FF                 	db	255
  7428                           tosu	equ	0x4FF
  7429                           tosh	equ	0x4FE
  7430                           tosl	equ	0x4FD
  7431                           stkptr	equ	0x4FC
  7432                           pclatu	equ	0x4FB
  7433                           pclath	equ	0x4FA
  7434                           pcl	equ	0x4F9
  7435                           tblptru	equ	0x4F8
  7436                           tblptrh	equ	0x4F7
  7437                           tblptrl	equ	0x4F6
  7438                           tablat	equ	0x4F5
  7439                           prodh	equ	0x4F4
  7440                           prodl	equ	0x4F3
  7441                           indf0	equ	0x4EF
  7442                           postinc0	equ	0x4EE
  7443                           postdec0	equ	0x4ED
  7444                           preinc0	equ	0x4EC
  7445                           plusw0	equ	0x4EB
  7446                           fsr0h	equ	0x4EA
  7447                           fsr0l	equ	0x4E9
  7448                           wreg	equ	0x4E8
  7449                           indf1	equ	0x4E7
  7450                           postinc1	equ	0x4E6
  7451                           postdec1	equ	0x4E5
  7452                           preinc1	equ	0x4E4
  7453                           plusw1	equ	0x4E3
  7454                           fsr1h	equ	0x4E2
  7455                           fsr1l	equ	0x4E1
  7456                           bsr	equ	0x4E0
  7457                           indf2	equ	0x4DF
  7458                           postinc2	equ	0x4DE
  7459                           postdec2	equ	0x4DD
  7460                           preinc2	equ	0x4DC
  7461                           plusw2	equ	0x4DB
  7462                           fsr2h	equ	0x4DA
  7463                           fsr2l	equ	0x4D9
  7464                           status	equ	0x4D8

Data Sizes:
    Strings     101
    Constant    0
    Data        1
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     48      54
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    I2C_ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), STR_2(CODE[16]), STR_4(CODE[9]), STR_5(CODE[6]), 
		 -> STR_6(CODE[3]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 51
		 -> STR_1(CODE[16]), STR_2(CODE[16]), STR_3(CODE[51]), STR_4(CODE[9]), 
		 -> STR_5(CODE[6]), STR_6(CODE[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 51
		 -> STR_1(CODE[16]), STR_2(CODE[16]), STR_3(CODE[51]), STR_4(CODE[9]), 
		 -> STR_5(CODE[6]), STR_6(CODE[3]), 

    U1_STRING_SEND@cadena	PTR const unsigned char  size(1) Largest target is 51
		 -> STR_3(CODE[51]), 


Critical Paths under _main in COMRAM

    _main->_HCSR04_Distance
    _pantallazo->_I2C_ESCRIBE_MENSAJE2
    _U1_STRING_SEND->_strlen
    _I2C_POS_CURSOR->_I2C_ENVIA_LCD_CMD
    _I2C_ESCRIBE_MENSAJE2->_I2C_ENVIA_LCD_DATA
    _configuro->_I2C_LCD_INIT
    _I2C_LCD_INIT->_I2C_CURSOR_ONOFF
    _I2C_CURSOR_ONOFF->_I2C_ENVIA_LCD_CMD
    _I2C_CURSOR_HOME->_I2C_ENVIA_LCD_CMD
    _I2C_BORRAR_LCD->_I2C_ENVIA_LCD_CMD
    _I2C_ENVIA_LCD_CMD->_I2C1_WRITESINGLEBYTE
    _I2C_LCD_ESCRIBE_VAR_INT->___lwdiv
    ___lwdiv->___lwmod
    _I2C_LCD_ESCRIBE_VAR_CHAR->___lbdiv
    ___lbdiv->___awmod
    _I2C_ENVIA_LCD_DATA->_I2C1_WRITESINGLEBYTE
    _HCSR04_Distance->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    8194
                                             47 COMRAM     1     1      0
                    _HCSR04_Distance
               _I2C_ESCRIBE_MENSAJE2
           _I2C_LCD_ESCRIBE_VAR_CHAR
            _I2C_LCD_ESCRIBE_VAR_INT
                     _I2C_POS_CURSOR
                          _configuro
                         _pantallazo
 ---------------------------------------------------------------------------------
 (1) _pantallazo                                           2     2      0    1394
                                             10 COMRAM     2     2      0
                     _I2C_BORRAR_LCD
               _I2C_ESCRIBE_MENSAJE2
                     _I2C_POS_CURSOR
                     _U1_STRING_SEND
 ---------------------------------------------------------------------------------
 (2) _U1_STRING_SEND                                       4     3      1     222
                                              3 COMRAM     4     3      1
                       _U1_BYTE_SEND
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _U1_BYTE_SEND                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_POS_CURSOR                                       3     2      1     459
                                              6 COMRAM     3     2      1
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_ESCRIBE_MENSAJE2                                 4     3      1     462
                                              6 COMRAM     4     3      1
                 _I2C_ENVIA_LCD_DATA
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2      92
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     960
                       _I2C_LCD_INIT
                            _U1_INIT
 ---------------------------------------------------------------------------------
 (2) _U1_INIT                                              2     0      2      46
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_INIT                                         2     2      0     914
                                              7 COMRAM     2     2      0
                          _I2C1_INIT
               _I2C1_WRITESINGLEBYTE
                     _I2C_BORRAR_LCD
                    _I2C_CURSOR_HOME
                   _I2C_CURSOR_ONOFF
 ---------------------------------------------------------------------------------
 (3) _I2C_CURSOR_ONOFF                                     1     1      0     309
                                              6 COMRAM     1     1      0
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _I2C_CURSOR_HOME                                      0     0      0     251
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_BORRAR_LCD                                       0     0      0     251
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _I2C_ENVIA_LCD_CMD                                    4     4      0     251
                                              2 COMRAM     4     4      0
               _I2C1_WRITESINGLEBYTE
 ---------------------------------------------------------------------------------
 (3) _I2C1_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_ESCRIBE_VAR_INT                              9     5      4    2048
                                             12 COMRAM     9     5      4
                 _I2C_ENVIA_LCD_DATA
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     167
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     170
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_ESCRIBE_VAR_CHAR                             5     4      1    1135
                                             10 COMRAM     5     4      1
                 _I2C_ENVIA_LCD_DATA
                            ___awmod
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     169
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     172
                                              6 COMRAM     4     3      1
                            ___awmod (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _I2C_ENVIA_LCD_DATA                                   4     4      0     251
                                              2 COMRAM     4     4      0
               _I2C1_WRITESINGLEBYTE
 ---------------------------------------------------------------------------------
 (4) _I2C1_WRITESINGLEBYTE                                 2     1      1     103
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _HCSR04_Distance                                      8     6      2    1736
                                             39 COMRAM     8     6      2
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     337
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     230
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1123
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HCSR04_Distance
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _I2C_ESCRIBE_MENSAJE2
     _I2C_ENVIA_LCD_DATA
       _I2C1_WRITESINGLEBYTE
     _strlen
   _I2C_LCD_ESCRIBE_VAR_CHAR
     _I2C_ENVIA_LCD_DATA
     ___awmod
     ___lbdiv
       ___awmod (ARG)
       ___lbmod (ARG)
     ___lbmod
   _I2C_LCD_ESCRIBE_VAR_INT
     _I2C_ENVIA_LCD_DATA
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _I2C_POS_CURSOR
     _I2C_ENVIA_LCD_CMD
       _I2C1_WRITESINGLEBYTE
   _configuro
     _I2C_LCD_INIT
       _I2C1_INIT
       _I2C1_WRITESINGLEBYTE
       _I2C_BORRAR_LCD
         _I2C_ENVIA_LCD_CMD
       _I2C_CURSOR_HOME
         _I2C_ENVIA_LCD_CMD
       _I2C_CURSOR_ONOFF
         _I2C_ENVIA_LCD_CMD
     _U1_INIT
   _pantallazo
     _I2C_BORRAR_LCD
     _I2C_ESCRIBE_MENSAJE2
     _I2C_POS_CURSOR
     _U1_STRING_SEND
       _U1_BYTE_SEND
       _strlen

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRllh       357      0       0      0.0%
BITBIGSFRllllh     353      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBIGSFRh         223      0       0      0.0%
BITBIGSFRllllll    173      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITBIGSFRlllh      119      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     48      54     56.8%
BITBIGSFRlh         44      0       0      0.0%
BITBIGSFRlllllh      5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      54      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jun 30 16:52:55 2025

                     ___fldiv@aexp 0527                       ___fldiv@bexp 0526  
                     ___fldiv@sign 051F                                 l51 3792  
                               l66 34FE                                l316 3802  
                              l270 3264                                l273 326C  
                              l282 30D8                                l861 3558  
                              l871 367A                                l954 2E7A  
                              l965 2EE6                                l966 2EE2  
                              u770 3796                                u780 379A  
                     ___awmod@sign 0506                                wreg 04E8  
                     _I2C_LCD_ADDR 0536                       _I2C_LCD_INIT 2668  
                _I2C_ENVIA_LCD_CMD 3450                       ___fltol@exp1 050A  
                             l1032 3048                               l1025 2FCA  
                  __end_of_U1_INIT 37E0                               l2213 2DDC  
                             l2205 2DC4                               l2231 2E52  
                             l2223 2E2A                               l2303 3394  
                             l2401 375C                               l2153 36E8  
                             l2243 2E90                               l2171 2D38  
                             l2323 33DA                               l2315 33C2  
                             l2307 33A2                               l2237 2E78  
                             l2173 2D48                               l2333 31B6  
                             l2309 33AA                               l2501 332A  
                             l2421 3526                               l2149 36CC  
                             l2191 2D7A                               l2167 2D32  
                             l2319 33CC                               l2503 3334  
                             l2423 352E                               l2281 2F82  
                             l2265 2F2A                               l2249 2EAE  
                             l2193 2D8A                               l2361 3224  
                             l2353 3210                               l2409 3774  
                             l2505 3346                               l2433 354E  
                             l2441 3650                               l2513 2A72  
                             l2283 2F84                               l2275 2F76  
                             l2187 2D74                               l2443 3658  
                             l2531 2B0C                               l2523 2AB2  
                             l2515 2A7C                               l2269 2F4E  
                             l2349 3200                               l2381 369A  
                             l2509 3360                               l2533 2B22  
                             l2525 2ACC                               l2199 2DAE  
                             l2367 3240                               l2359 3218  
                             l2471 3030                               l2551 2C62  
                             l2543 2BBC                               l2535 2B44  
                             l2527 2AEC                               l2519 2A94  
                             l2465 2FF8                               l2377 3694  
                             l2393 36B8                               l2449 3670  
                             l2553 2C92                               l2545 2BD8  
                             l2537 2B6C                               l2561 2CE4  
                             l1913 372E                               l2625 30D4  
                             l2467 2FFE                               l2459 2FDA  
                             l2299 3388                               l2547 2C02  
                             l2539 2B94                               l1915 3730  
                             l1931 34DC                               l2477 306E  
                             l2469 300A                               l2389 36B0  
                             l2557 2CC2                               l2549 2C32  
                             l2495 30BA                               l2479 307A  
                             l1951 371E                               l1935 34EE  
                             l1927 34CA                               l2647 3166  
                             l1947 3702                               l1889 37EE  
                             STR_1 2644                               STR_2 2634  
                             STR_3 2601                               STR_4 2654  
                             STR_5 265D                               STR_6 2663  
                             u1100 2F5C                               u1050 2EDC  
                             u1300 3532                               u1230 322A  
                             u1150 33AE                               u2007 298C  
                             u2017 29A2                               u1090 2F38  
                             u1410 3084                               u1330 365C  
                             u2107 325C                               u2027 3478  
                             u1180 31A4                               u1260 369E  
                             u2037 348A                               u1190 31D4  
                             u1510 3172                               u2047 349E  
                             u2057 34B0                               u1195 31CA  
                             u2067 340C                               u2077 3420  
                             u2087 3434                               u1607 26B4  
                             u1527 314A                               u2097 3448  
                             u1617 26C6                               u1537 315C  
                             u1707 277A                               u1627 26DC  
                             u1547 317A                               u1717 278C  
                             u1637 26F0                               u1557 318C  
                             u1807 2828                               u1727 279C  
                             u1647 2702                               u1567 3630  
                             u1817 2838                               u1737 27AE  
                             u1657 2718                               u1577 3504  
                             u1907 28DE                               u1827 284A  
                             u1747 27C0                               u1667 272C  
                             u1587 2672                               u1917 28F0  
                             u1837 285C                               u1757 27D0  
                             u1677 273E                               u1597 2690  
                             u1927 2902                               u1847 286C  
                             u1767 27E2                               u1687 2754  
                             u1937 2912                               u1857 287E  
                             u1777 27F4                               u1697 2768  
                             u1947 2924                               u1867 2890  
                             u1787 2804                               u1957 2936  
                             u1877 28A0                               u1797 2816  
                             u1967 2946                               u1887 28B2  
                             u1977 2958                               u1897 28C8  
                             u1987 296A                               u1997 297A  
                             _TMR1 031C                 ?_I2C_ENVIA_LCD_CMD 0501  
         I2C_ENVIA_LCD_CMD@command 0504                               _main 30CC  
                ??_I2C_CURSOR_HOME 0507                               start FFFC  
                  ___fldiv@new_exp 0520                ??_I2C_ENVIA_LCD_CMD 0503  
                     ___param_bank 0000                 _I2C_ENVIA_LCD_DATA 33E4  
                __end_of_I2C1_INIT 35FA                      ___fltol@sign1 0509  
                            ?_main 0501                              _ADPCH 03EC  
                  __end_of___fldiv 2F8C                              _ADREF 03F8  
                  __end_of___lbdiv 36BC                    __end_of___awmod 33E4  
                  __end_of___lbmod 377C                    __end_of___fltol 3252  
                            _T1CLK 0321                              _T1CON 031E  
                  __end_of___lwdiv 3562                    __end_of___lwmod 3684  
                            _U1TXB 02A3                              _OSCEN 00B3  
                            _TMR1H 031D                              _TMR1L 031C  
              ?_I2C_ENVIA_LCD_DATA 0501          __end_of_I2C_ENVIA_LCD_CMD 34B8  
                   _I2C_BORRAR_LCD 3812                  ?_I2C_CURSOR_ONOFF 0501  
                            tablat 04F5                      ?_U1_BYTE_SEND 0501  
                            status 04D8                 ??_I2C_CURSOR_ONOFF 0507  
           I2C_CURSOR_ONOFF@estado 0507                    ___lbdiv@divisor 0507  
                  ___lbdiv@counter 0509               ??_I2C_ENVIA_LCD_DATA 0503  
                  __initialization 37A0                       __end_of_main 3198  
 __end_of_I2C_LCD_ESCRIBE_VAR_CHAR 3376            I2C_ESCRIBE_MENSAJE2@tam 0509  
                           ??_main 0530                      __activetblptr 0003  
         ?_I2C_LCD_ESCRIBE_VAR_INT 050D                          ??_U1_INIT 0503  
           __end_of_I2C_BORRAR_LCD 381A                             _ADRESH 03EB  
                   ??_U1_BYTE_SEND 0501                             _U1CON0 02AB  
                           _U1CON1 02AC                             _U1CON2 02AD  
                           _U1BRGH 02AF                             _U1BRGL 02AE  
                           _RC3PPS 0214                             _RC4PPS 0215  
                           _RF0PPS 0229                             _OSCFRQ 00B1  
                 __end_of___xxtofl 30CC      I2C1_WRITESINGLEBYTE@direccion 0502  
                        ??___fldiv 0517                          ??___lbdiv 0508  
                        ??___awmod 0505                          ??___lbmod 0502  
                        ??___fltol 0505                          ??___lwdiv 050A  
                        ??___lwmod 0505                  ??_HCSR04_Distance 052A  
                  ___awmod@divisor 0503                             isa$std 0001  
                  ___awmod@counter 0505                             _strlen 3728  
                     __pdataCOMRAM 0536                       __mediumconst 2600  
                           tblptrh 04F7                             tblptrl 04F6  
                           tblptru 04F8                    ?_I2C_BORRAR_LCD 0501  
                 ___lbdiv@dividend 0508                     _I2C_POS_CURSOR 34B8  
                     ___xxtofl@arg 050B                       ___xxtofl@exp 050A  
                     ___xxtofl@val 0501                  U1_STRING_SEND@tam 0506  
                  ___lbmod@divisor 0501                         __accesstop 0560  
          __end_of__initialization 37BC                    ___lbmod@counter 0503  
                    ___rparam_used 0001                         ___fltol@f1 0501  
                   __pcstackCOMRAM 0501       I2C_LCD_ESCRIBE_VAR_INT@punto 0510  
  __end_of_I2C_LCD_ESCRIBE_VAR_INT 2D06                   ___lbdiv@quotient 050A  
            I2C_ESCRIBE_MENSAJE2@i 050A           _I2C_LCD_ESCRIBE_VAR_CHAR 32E8  
                  _I2C_CURSOR_HOME 380A             __end_of_I2C_POS_CURSOR 3510  
                  U1_STRING_SEND@i 0507                            _I2C1CNT 028D  
                          _I2C1TXB 028C               __end_of_U1_BYTE_SEND 380A  
      I2C_ENVIA_LCD_DATA@lownibble 0506                            ?_strlen 0501  
         HCSR04_Distance@distancia 052E                          _I2C1_INIT 35B0  
                          _U1RXPPS 0272                          ?___xxtofl 0501  
                          _U1_INIT 37C2                            _OSCCON1 00AD  
     __end_of_I2C_ESCRIBE_MENSAJE2 3728                    ?_I2C_POS_CURSOR 0507  
       I2C_ESCRIBE_MENSAJE2@cadena 0507                            __Hparam 0000  
                          __Lparam 0000                  __end_of_configuro 35B0  
                          ___fldiv 2D06                            ___lbdiv 3684  
                          ___awmod 3376                            ___lbmod 3754  
                          ___fltol 3198                            ___lwdiv 3510  
                          ___lwmod 3642                       __psmallconst 2600  
                          __pcinit 37A0                            __ramtop 2600  
                          __ptext0 30CC                            __ptext1 35FA  
                          __ptext2 36BC                            __ptext3 37FC  
                          __ptext4 34B8                            __ptext5 36F2  
                          __ptext6 3728                            __ptext7 3562  
                          __ptext8 37C2                            __ptext9 2668  
          __end_of_I2C_CURSOR_HOME 3812                        _I2C1CLKbits 029C  
                        _T1CONbits 031E                         ?_I2C1_INIT 0501  
       I2C_ENVIA_LCD_CMD@lownibble 0506                         ??___xxtofl 0505  
                 ___awmod@dividend 0501                         _pantallazo 35FA  
   I2C_LCD_ESCRIBE_VAR_CHAR@decena 050D                        _I2C1PIRbits 029A  
             end_of_initialization 37BC     I2C_LCD_ESCRIBE_VAR_CHAR@numero 050E  
   I2C_LCD_ESCRIBE_VAR_CHAR@unidad 050F                         _tmr1_count 0533  
                  _HCSR04_Distance 3252    I2C_LCD_ESCRIBE_VAR_CHAR@centena 050C  
 I2C_LCD_ESCRIBE_VAR_INT@n_digitos 050F                 I2C_POS_CURSOR@fila 0509  
                          strlen@a 0503                            strlen@s 0501  
                        _PORTCbits 04D0                   ??_I2C_BORRAR_LCD 0507  
                 ___lbmod@dividend 0502                      ___xxtofl@sign 0509  
                        _TRISAbits 04C6                          _TRISCbits 04C8  
                        _TRISEbits 04CA                          _TRISFbits 04CB  
                      ___fldiv@grs 0522                        ___fldiv@rem 051B  
                      ___lbmod@rem 0504               _I2C_ESCRIBE_MENSAJE2 36F2  
    I2C_LCD_ESCRIBE_VAR_INT@decena 0514         ??_I2C_LCD_ESCRIBE_VAR_CHAR 050C  
    I2C_LCD_ESCRIBE_VAR_INT@millar 0512                      __pidataCOMRAM 381A  
    I2C_LCD_ESCRIBE_VAR_INT@numero 050D      I2C_LCD_ESCRIBE_VAR_INT@unidad 0515  
                 ?_I2C_CURSOR_HOME 0501                     _U1_STRING_SEND 36BC  
                      ??_I2C1_INIT 0501                     __end_of_strlen 3754  
              start_initialization 37A0                        ?_pantallazo 0501  
                    ?_I2C_LCD_INIT 0501       __end_of_I2C1_WRITESINGLEBYTE 37A0  
          __end_of_HCSR04_Distance 32E8                       _U1_BYTE_SEND 37FC  
            ?_I2C_ESCRIBE_MENSAJE2 0507       I2C_ENVIA_LCD_DATA@highnibble 0505  
                 _I2C_CURSOR_ONOFF 37E0             __end_of_U1_STRING_SEND 36F2  
                         ??_strlen 0503                   ??_I2C_POS_CURSOR 0508  
                        ___fldiv@a 0513                          ___fldiv@b 050F  
                   ??_I2C_LCD_INIT 0508  I2C_LCD_ESCRIBE_VAR_CHAR@n_digitos 050B  
                         ?_U1_INIT 0501                        __pbssCOMRAM 0531  
          _I2C_LCD_ESCRIBE_VAR_INT 29BC                   ___lwdiv@dividend 0506  
   I2C_LCD_ESCRIBE_VAR_INT@centena 0513                           ?___fldiv 050F  
                         ?___lbdiv 0507                           ?___awmod 0501  
                         ?___lbmod 0501                           ?___fltol 0501  
                         _I2C1ADB1 028F                           ?___lwdiv 0506  
                         ?___lwmod 0501                    ?_U1_STRING_SEND 0504  
                        _configuro 3562                        __smallconst 2600  
                 ___lwdiv@quotient 050A            HCSR04_Distance@temporal 052A  
                 ?_HCSR04_Distance 0528                        _U1ERRIRbits 02B2  
                         _LATEbits 04C2                           _LATFbits 04C3  
           ??_I2C_ESCRIBE_MENSAJE2 0508                      _I2C1STAT1bits 0299  
             _I2C1_WRITESINGLEBYTE 377C             I2C_ENVIA_LCD_DATA@data 0504  
                       ?_configuro 0501                         _ADCON0bits 03F3  
      I2C_ENVIA_LCD_CMD@highnibble 0505          ??_I2C_LCD_ESCRIBE_VAR_INT 0511  
       __end_of_I2C_ENVIA_LCD_DATA 3450              I2C_POS_CURSOR@columna 0507  
                 _distancia_hcsr04 0531                           __Hrparam 0000  
             __end_of_I2C_LCD_INIT 29BC                   U1_BYTE_SEND@dato 0501  
                      _lectura_ch0 0535                           __Lrparam 0000  
            ?_I2C1_WRITESINGLEBYTE 0501                         _ANSELAbits 0400  
                       _ANSELCbits 0410                         _ANSELEbits 0420  
                       _ANSELFbits 0428                           ___xxtofl 2F8C  
                     ??_pantallazo 050B                       _I2C1CON0bits 0294  
                     _I2C1CON1bits 0295                       _I2C1CON2bits 0296  
                  ___lwdiv@divisor 0508           I2C1_WRITESINGLEBYTE@dato 0501  
                  ___lwdiv@counter 050C                           __ptext10 37E0  
                         __ptext11 380A                           __ptext20 3684  
                         __ptext12 3812                           __ptext21 3376  
                         __ptext13 3450                           __ptext22 33E4  
                         __ptext14 35B0                           __ptext23 377C  
                         __ptext15 29BC                           __ptext24 3252  
                         __ptext16 3642                           __ptext25 2F8C  
                         __ptext17 3510                           __ptext26 3198  
                         __ptext18 32E8                           __ptext27 2D06  
                         __ptext19 3754                         _RC3I2Cbits 0287  
         __end_of_I2C_CURSOR_ONOFF 37FC                         _RC4I2Cbits 0286  
                         isa$xinst 0000                 __end_of_pantallazo 3642  
                       _ODCONCbits 0412                        ??_configuro 050A  
                 U1_INIT@velocidad 0501          ?_I2C_LCD_ESCRIBE_VAR_CHAR 050B  
                 ___lwmod@dividend 0501    I2C_LCD_ESCRIBE_VAR_INT@d_millar 0511  
           ??_I2C1_WRITESINGLEBYTE 0502                   ??_U1_STRING_SEND 0505  
                  ___lwmod@divisor 0503                    ___lwmod@counter 0505  
             U1_STRING_SEND@cadena 0504  
