

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jun 30 16:14:07 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Generated 04/02/2025 GMT
    41                           ; 
    42                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F57Q43 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   0004E0                     bsr             equ	1248
    75   0004E9                     fsr0            equ	1257
    76   0004EA                     fsr0h           equ	1258
    77   0004E9                     fsr0l           equ	1257
    78   0004E1                     fsr1            equ	1249
    79   0004E2                     fsr1h           equ	1250
    80   0004E1                     fsr1l           equ	1249
    81   0004D9                     fsr2            equ	1241
    82   0004DA                     fsr2h           equ	1242
    83   0004D9                     fsr2l           equ	1241
    84   0004EF                     indf0           equ	1263
    85   0004E7                     indf1           equ	1255
    86   0004DF                     indf2           equ	1247
    87   0004D6                     intcon          equ	1238
    88   000041                     nvmcon          equ	65
    89   0004F9                     pcl             equ	1273
    90   0004FA                     pclath          equ	1274
    91   0004FB                     pclatu          equ	1275
    92   0004EB                     plusw0          equ	1259
    93   0004E3                     plusw1          equ	1251
    94   0004DB                     plusw2          equ	1243
    95   0004ED                     postdec0        equ	1261
    96   0004E5                     postdec1        equ	1253
    97   0004DD                     postdec2        equ	1245
    98   0004EE                     postinc0        equ	1262
    99   0004E6                     postinc1        equ	1254
   100   0004DE                     postinc2        equ	1246
   101   0004EC                     preinc0         equ	1260
   102   0004E4                     preinc1         equ	1252
   103   0004DC                     preinc2         equ	1244
   104   0004F3                     prod            equ	1267
   105   0004F4                     prodh           equ	1268
   106   0004F3                     prodl           equ	1267
   107   0004D8                     status          equ	1240
   108   0004F5                     tablat          equ	1269
   109   0004F6                     tblptr          equ	1270
   110   0004F7                     tblptrh         equ	1271
   111   0004F6                     tblptrl         equ	1270
   112   0004F8                     tblptru         equ	1272
   113   0004FD                     tosl            equ	1277
   114   0004E8                     wreg            equ	1256
   115   000039                     CLKRCON         equ	57	;# 
   116   00003A                     CLKRCLK         equ	58	;# 
   117   000040                     NVMCON0         equ	64	;# 
   118   000041                     NVMCON1         equ	65	;# 
   119   000042                     NVMLOCK         equ	66	;# 
   120   000043                     NVMADR          equ	67	;# 
   121   000043                     NVMADRL         equ	67	;# 
   122   000044                     NVMADRH         equ	68	;# 
   123   000045                     NVMADRU         equ	69	;# 
   124   000046                     NVMDAT          equ	70	;# 
   125   000046                     NVMDATL         equ	70	;# 
   126   000047                     NVMDATH         equ	71	;# 
   127   000048                     VREGCON         equ	72	;# 
   128   000049                     BORCON          equ	73	;# 
   129   00004A                     HLVDCON0        equ	74	;# 
   130   00004B                     HLVDCON1        equ	75	;# 
   131   00004C                     ZCDCON          equ	76	;# 
   132   000060                     PMD0            equ	96	;# 
   133   000061                     PMD1            equ	97	;# 
   134   000063                     PMD3            equ	99	;# 
   135   000064                     PMD4            equ	100	;# 
   136   000065                     PMD5            equ	101	;# 
   137   000066                     PMD6            equ	102	;# 
   138   000067                     PMD7            equ	103	;# 
   139   000068                     PMD8            equ	104	;# 
   140   00006A                     MD1CON0         equ	106	;# 
   141   00006B                     MD1CON1         equ	107	;# 
   142   00006C                     MD1SRC          equ	108	;# 
   143   00006D                     MD1CARL         equ	109	;# 
   144   00006E                     MD1CARH         equ	110	;# 
   145   00006F                     CMOUT           equ	111	;# 
   146   000070                     CM1CON0         equ	112	;# 
   147   000071                     CM1CON1         equ	113	;# 
   148   000072                     CM1NCH          equ	114	;# 
   149   000073                     CM1PCH          equ	115	;# 
   150   000074                     CM2CON0         equ	116	;# 
   151   000075                     CM2CON1         equ	117	;# 
   152   000076                     CM2NCH          equ	118	;# 
   153   000077                     CM2PCH          equ	119	;# 
   154   000078                     WDTCON0         equ	120	;# 
   155   000079                     WDTCON1         equ	121	;# 
   156   00007A                     WDTPS           equ	122	;# 
   157   00007A                     WDTPSL          equ	122	;# 
   158   00007B                     WDTPSH          equ	123	;# 
   159   00007C                     WDTTMR          equ	124	;# 
   160   00007D                     DAC1DAT         equ	125	;# 
   161   00007D                     DAC1DATL        equ	125	;# 
   162   00007F                     DAC1CON         equ	127	;# 
   163   000080                     SPI1RXB         equ	128	;# 
   164   000081                     SPI1TXB         equ	129	;# 
   165   000082                     SPI1TCNT        equ	130	;# 
   166   000082                     SPI1TCNTL       equ	130	;# 
   167   000083                     SPI1TCNTH       equ	131	;# 
   168   000084                     SPI1CON0        equ	132	;# 
   169   000085                     SPI1CON1        equ	133	;# 
   170   000086                     SPI1CON2        equ	134	;# 
   171   000087                     SPI1STATUS      equ	135	;# 
   172   000088                     SPI1TWIDTH      equ	136	;# 
   173   000089                     SPI1BAUD        equ	137	;# 
   174   00008A                     SPI1INTF        equ	138	;# 
   175   00008B                     SPI1INTE        equ	139	;# 
   176   00008C                     SPI1CLK         equ	140	;# 
   177   00008D                     SPI2RXB         equ	141	;# 
   178   00008E                     SPI2TXB         equ	142	;# 
   179   00008F                     SPI2TCNT        equ	143	;# 
   180   00008F                     SPI2TCNTL       equ	143	;# 
   181   000090                     SPI2TCNTH       equ	144	;# 
   182   000091                     SPI2CON0        equ	145	;# 
   183   000092                     SPI2CON1        equ	146	;# 
   184   000093                     SPI2CON2        equ	147	;# 
   185   000094                     SPI2STATUS      equ	148	;# 
   186   000095                     SPI2TWIDTH      equ	149	;# 
   187   000096                     SPI2BAUD        equ	150	;# 
   188   000097                     SPI2INTF        equ	151	;# 
   189   000098                     SPI2INTE        equ	152	;# 
   190   000099                     SPI2CLK         equ	153	;# 
   191   0000AC                     ACTCON          equ	172	;# 
   192   0000AD                     OSCCON1         equ	173	;# 
   193   0000AE                     OSCCON2         equ	174	;# 
   194   0000AF                     OSCCON3         equ	175	;# 
   195   0000B0                     OSCTUNE         equ	176	;# 
   196   0000B1                     OSCFRQ          equ	177	;# 
   197   0000B1                     OSCFREQ         equ	177	;# 
   198   0000B2                     OSCSTAT         equ	178	;# 
   199   0000B2                     OSCSTAT1        equ	178	;# 
   200   0000B3                     OSCEN           equ	179	;# 
   201   0000B4                     PRLOCK          equ	180	;# 
   202   0000B5                     SCANPR          equ	181	;# 
   203   0000B6                     DMA1PR          equ	182	;# 
   204   0000B7                     DMA2PR          equ	183	;# 
   205   0000B8                     DMA3PR          equ	184	;# 
   206   0000B9                     DMA4PR          equ	185	;# 
   207   0000BA                     DMA5PR          equ	186	;# 
   208   0000BB                     DMA6PR          equ	187	;# 
   209   0000BE                     MAINPR          equ	190	;# 
   210   0000BF                     ISRPR           equ	191	;# 
   211   0000D4                     CLCDATA         equ	212	;# 
   212   0000D5                     CLCSELECT       equ	213	;# 
   213   0000D6                     CLCnCON         equ	214	;# 
   214   0000D7                     CLCnPOL         equ	215	;# 
   215   0000D8                     CLCnSEL0        equ	216	;# 
   216   0000D9                     CLCnSEL1        equ	217	;# 
   217   0000DA                     CLCnSEL2        equ	218	;# 
   218   0000DB                     CLCnSEL3        equ	219	;# 
   219   0000DC                     CLCnGLS0        equ	220	;# 
   220   0000DD                     CLCnGLS1        equ	221	;# 
   221   0000DE                     CLCnGLS2        equ	222	;# 
   222   0000DF                     CLCnGLS3        equ	223	;# 
   223   0000E8                     DMASELECT       equ	232	;# 
   224   0000E9                     DMAnBUF         equ	233	;# 
   225   0000EA                     DMAnDCNT        equ	234	;# 
   226   0000EA                     DMAnDCNTL       equ	234	;# 
   227   0000EB                     DMAnDCNTH       equ	235	;# 
   228   0000EC                     DMAnDPTR        equ	236	;# 
   229   0000EC                     DMAnDPTRL       equ	236	;# 
   230   0000ED                     DMAnDPTRH       equ	237	;# 
   231   0000EE                     DMAnDSZ         equ	238	;# 
   232   0000EE                     DMAnDSZL        equ	238	;# 
   233   0000EF                     DMAnDSZH        equ	239	;# 
   234   0000F0                     DMAnDSA         equ	240	;# 
   235   0000F0                     DMAnDSAL        equ	240	;# 
   236   0000F1                     DMAnDSAH        equ	241	;# 
   237   0000F2                     DMAnSCNT        equ	242	;# 
   238   0000F2                     DMAnSCNTL       equ	242	;# 
   239   0000F3                     DMAnSCNTH       equ	243	;# 
   240   0000F4                     DMAnSPTR        equ	244	;# 
   241   0000F4                     DMAnSPTRL       equ	244	;# 
   242   0000F5                     DMAnSPTRH       equ	245	;# 
   243   0000F6                     DMAnSPTRU       equ	246	;# 
   244   0000F7                     DMAnSSZ         equ	247	;# 
   245   0000F7                     DMAnSSZL        equ	247	;# 
   246   0000F8                     DMAnSSZH        equ	248	;# 
   247   0000F9                     DMAnSSA         equ	249	;# 
   248   0000F9                     DMAnSSAL        equ	249	;# 
   249   0000FA                     DMAnSSAH        equ	250	;# 
   250   0000FB                     DMAnSSAU        equ	251	;# 
   251   0000FC                     DMAnCON0        equ	252	;# 
   252   0000FD                     DMAnCON1        equ	253	;# 
   253   0000FE                     DMAnAIRQ        equ	254	;# 
   254   0000FF                     DMAnSIRQ        equ	255	;# 
   255   000200                     PPSLOCK         equ	512	;# 
   256   000201                     RA0PPS          equ	513	;# 
   257   000202                     RA1PPS          equ	514	;# 
   258   000203                     RA2PPS          equ	515	;# 
   259   000204                     RA3PPS          equ	516	;# 
   260   000205                     RA4PPS          equ	517	;# 
   261   000206                     RA5PPS          equ	518	;# 
   262   000207                     RA6PPS          equ	519	;# 
   263   000208                     RA7PPS          equ	520	;# 
   264   000209                     RB0PPS          equ	521	;# 
   265   00020A                     RB1PPS          equ	522	;# 
   266   00020B                     RB2PPS          equ	523	;# 
   267   00020C                     RB3PPS          equ	524	;# 
   268   00020D                     RB4PPS          equ	525	;# 
   269   00020E                     RB5PPS          equ	526	;# 
   270   00020F                     RB6PPS          equ	527	;# 
   271   000210                     RB7PPS          equ	528	;# 
   272   000211                     RC0PPS          equ	529	;# 
   273   000212                     RC1PPS          equ	530	;# 
   274   000213                     RC2PPS          equ	531	;# 
   275   000214                     RC3PPS          equ	532	;# 
   276   000215                     RC4PPS          equ	533	;# 
   277   000216                     RC5PPS          equ	534	;# 
   278   000217                     RC6PPS          equ	535	;# 
   279   000218                     RC7PPS          equ	536	;# 
   280   000219                     RD0PPS          equ	537	;# 
   281   00021A                     RD1PPS          equ	538	;# 
   282   00021B                     RD2PPS          equ	539	;# 
   283   00021C                     RD3PPS          equ	540	;# 
   284   00021D                     RD4PPS          equ	541	;# 
   285   00021E                     RD5PPS          equ	542	;# 
   286   00021F                     RD6PPS          equ	543	;# 
   287   000220                     RD7PPS          equ	544	;# 
   288   000221                     RE0PPS          equ	545	;# 
   289   000222                     RE1PPS          equ	546	;# 
   290   000223                     RE2PPS          equ	547	;# 
   291   000229                     RF0PPS          equ	553	;# 
   292   00022A                     RF1PPS          equ	554	;# 
   293   00022B                     RF2PPS          equ	555	;# 
   294   00022C                     RF3PPS          equ	556	;# 
   295   00022D                     RF4PPS          equ	557	;# 
   296   00022E                     RF5PPS          equ	558	;# 
   297   00022F                     RF6PPS          equ	559	;# 
   298   000230                     RF7PPS          equ	560	;# 
   299   00023E                     INT0PPS         equ	574	;# 
   300   00023F                     INT1PPS         equ	575	;# 
   301   000240                     INT2PPS         equ	576	;# 
   302   000241                     T0CKIPPS        equ	577	;# 
   303   000242                     T1CKIPPS        equ	578	;# 
   304   000243                     T1GPPS          equ	579	;# 
   305   000244                     T3CKIPPS        equ	580	;# 
   306   000245                     T3GPPS          equ	581	;# 
   307   000246                     T5CKIPPS        equ	582	;# 
   308   000247                     T5GPPS          equ	583	;# 
   309   000248                     T2INPPS         equ	584	;# 
   310   000249                     T4INPPS         equ	585	;# 
   311   00024A                     T6INPPS         equ	586	;# 
   312   00024F                     CCP1PPS         equ	591	;# 
   313   000250                     CCP2PPS         equ	592	;# 
   314   000251                     CCP3PPS         equ	593	;# 
   315   000253                     PWM1ERSPPS      equ	595	;# 
   316   000254                     PWM2ERSPPS      equ	596	;# 
   317   000255                     PWM3ERSPPS      equ	597	;# 
   318   000257                     PWMIN0PPS       equ	599	;# 
   319   000258                     PWMIN1PPS       equ	600	;# 
   320   000259                     SMT1WINPPS      equ	601	;# 
   321   00025A                     SMT1SIGPPS      equ	602	;# 
   322   00025B                     CWG1PPS         equ	603	;# 
   323   00025B                     CWG1INPPS       equ	603	;# 
   324   00025C                     CWG2PPS         equ	604	;# 
   325   00025C                     CWG2INPPS       equ	604	;# 
   326   00025D                     CWG3PPS         equ	605	;# 
   327   00025D                     CWG3INPPS       equ	605	;# 
   328   00025E                     MD1CARLPPS      equ	606	;# 
   329   00025E                     MDCARLPPS       equ	606	;# 
   330   00025F                     MD1CARHPPS      equ	607	;# 
   331   00025F                     MDCARHPPS       equ	607	;# 
   332   000260                     MD1SRCPPS       equ	608	;# 
   333   000260                     MDSRCPPS        equ	608	;# 
   334   000261                     CLCIN0PPS       equ	609	;# 
   335   000262                     CLCIN1PPS       equ	610	;# 
   336   000263                     CLCIN2PPS       equ	611	;# 
   337   000264                     CLCIN3PPS       equ	612	;# 
   338   000265                     CLCIN4PPS       equ	613	;# 
   339   000266                     CLCIN5PPS       equ	614	;# 
   340   000267                     CLCIN6PPS       equ	615	;# 
   341   000268                     CLCIN7PPS       equ	616	;# 
   342   000269                     ADACTPPS        equ	617	;# 
   343   00026A                     SPI1SCKPPS      equ	618	;# 
   344   00026B                     SPI1SDIPPS      equ	619	;# 
   345   00026C                     SPI1SSPPS       equ	620	;# 
   346   00026D                     SPI2SCKPPS      equ	621	;# 
   347   00026E                     SPI2SDIPPS      equ	622	;# 
   348   00026F                     SPI2SSPPS       equ	623	;# 
   349   000270                     I2C1SDAPPS      equ	624	;# 
   350   000271                     I2C1SCLPPS      equ	625	;# 
   351   000272                     U1RXPPS         equ	626	;# 
   352   000273                     U1CTSPPS        equ	627	;# 
   353   000274                     U2RXPPS         equ	628	;# 
   354   000275                     U2CTSPPS        equ	629	;# 
   355   000276                     U3RXPPS         equ	630	;# 
   356   000277                     U3CTSPPS        equ	631	;# 
   357   000278                     U4RXPPS         equ	632	;# 
   358   000279                     U4CTSPPS        equ	633	;# 
   359   00027A                     U5RXPPS         equ	634	;# 
   360   00027B                     U5CTSPPS        equ	635	;# 
   361   000286                     RC4I2C          equ	646	;# 
   362   000287                     RC3I2C          equ	647	;# 
   363   000288                     RB2I2C          equ	648	;# 
   364   000289                     RB1I2C          equ	649	;# 
   365   00028B                     I2C1RXB         equ	651	;# 
   366   00028C                     I2C1TXB         equ	652	;# 
   367   00028D                     I2C1CNT         equ	653	;# 
   368   00028E                     I2C1ADB0        equ	654	;# 
   369   00028F                     I2C1ADB1        equ	655	;# 
   370   000290                     I2C1ADR0        equ	656	;# 
   371   000291                     I2C1ADR1        equ	657	;# 
   372   000292                     I2C1ADR2        equ	658	;# 
   373   000293                     I2C1ADR3        equ	659	;# 
   374   000294                     I2C1CON0        equ	660	;# 
   375   000295                     I2C1CON1        equ	661	;# 
   376   000296                     I2C1CON2        equ	662	;# 
   377   000297                     I2C1ERR         equ	663	;# 
   378   000298                     I2C1STAT0       equ	664	;# 
   379   000299                     I2C1STAT1       equ	665	;# 
   380   00029A                     I2C1PIR         equ	666	;# 
   381   00029B                     I2C1PIE         equ	667	;# 
   382   00029C                     I2C1CLK         equ	668	;# 
   383   00029D                     I2C1BTO         equ	669	;# 
   384   0002A1                     U1RXB           equ	673	;# 
   385   0002A1                     U1RXBL          equ	673	;# 
   386   0002A2                     U1RXCHK         equ	674	;# 
   387   0002A3                     U1TXB           equ	675	;# 
   388   0002A3                     U1TXBL          equ	675	;# 
   389   0002A4                     U1TXCHK         equ	676	;# 
   390   0002A5                     U1P1            equ	677	;# 
   391   0002A5                     U1P1L           equ	677	;# 
   392   0002A6                     U1P1H           equ	678	;# 
   393   0002A7                     U1P2            equ	679	;# 
   394   0002A7                     U1P2L           equ	679	;# 
   395   0002A8                     U1P2H           equ	680	;# 
   396   0002A9                     U1P3            equ	681	;# 
   397   0002A9                     U1P3L           equ	681	;# 
   398   0002AA                     U1P3H           equ	682	;# 
   399   0002AB                     U1CON0          equ	683	;# 
   400   0002AC                     U1CON1          equ	684	;# 
   401   0002AD                     U1CON2          equ	685	;# 
   402   0002AE                     U1BRG           equ	686	;# 
   403   0002AE                     U1BRGL          equ	686	;# 
   404   0002AF                     U1BRGH          equ	687	;# 
   405   0002B0                     U1FIFO          equ	688	;# 
   406   0002B1                     U1UIR           equ	689	;# 
   407   0002B2                     U1ERRIR         equ	690	;# 
   408   0002B3                     U1ERRIE         equ	691	;# 
   409   0002B4                     U2RXB           equ	692	;# 
   410   0002B4                     U2RXBL          equ	692	;# 
   411   0002B6                     U2TXB           equ	694	;# 
   412   0002B6                     U2TXBL          equ	694	;# 
   413   0002B8                     U2P1            equ	696	;# 
   414   0002B8                     U2P1L           equ	696	;# 
   415   0002BA                     U2P2            equ	698	;# 
   416   0002BA                     U2P2L           equ	698	;# 
   417   0002BC                     U2P3            equ	700	;# 
   418   0002BC                     U2P3L           equ	700	;# 
   419   0002BE                     U2CON0          equ	702	;# 
   420   0002BF                     U2CON1          equ	703	;# 
   421   0002C0                     U2CON2          equ	704	;# 
   422   0002C1                     U2BRG           equ	705	;# 
   423   0002C1                     U2BRGL          equ	705	;# 
   424   0002C2                     U2BRGH          equ	706	;# 
   425   0002C3                     U2FIFO          equ	707	;# 
   426   0002C4                     U2UIR           equ	708	;# 
   427   0002C5                     U2ERRIR         equ	709	;# 
   428   0002C6                     U2ERRIE         equ	710	;# 
   429   0002C7                     U3RXB           equ	711	;# 
   430   0002C7                     U3RXBL          equ	711	;# 
   431   0002C9                     U3TXB           equ	713	;# 
   432   0002C9                     U3TXBL          equ	713	;# 
   433   0002CB                     U3P1            equ	715	;# 
   434   0002CB                     U3P1L           equ	715	;# 
   435   0002CD                     U3P2            equ	717	;# 
   436   0002CD                     U3P2L           equ	717	;# 
   437   0002CF                     U3P3            equ	719	;# 
   438   0002CF                     U3P3L           equ	719	;# 
   439   0002D1                     U3CON0          equ	721	;# 
   440   0002D2                     U3CON1          equ	722	;# 
   441   0002D3                     U3CON2          equ	723	;# 
   442   0002D4                     U3BRG           equ	724	;# 
   443   0002D4                     U3BRGL          equ	724	;# 
   444   0002D5                     U3BRGH          equ	725	;# 
   445   0002D6                     U3FIFO          equ	726	;# 
   446   0002D7                     U3UIR           equ	727	;# 
   447   0002D8                     U3ERRIR         equ	728	;# 
   448   0002D9                     U3ERRIE         equ	729	;# 
   449   0002DA                     U4RXB           equ	730	;# 
   450   0002DA                     U4RXBL          equ	730	;# 
   451   0002DC                     U4TXB           equ	732	;# 
   452   0002DC                     U4TXBL          equ	732	;# 
   453   0002DE                     U4P1            equ	734	;# 
   454   0002DE                     U4P1L           equ	734	;# 
   455   0002E0                     U4P2            equ	736	;# 
   456   0002E0                     U4P2L           equ	736	;# 
   457   0002E2                     U4P3            equ	738	;# 
   458   0002E2                     U4P3L           equ	738	;# 
   459   0002E4                     U4CON0          equ	740	;# 
   460   0002E5                     U4CON1          equ	741	;# 
   461   0002E6                     U4CON2          equ	742	;# 
   462   0002E7                     U4BRG           equ	743	;# 
   463   0002E7                     U4BRGL          equ	743	;# 
   464   0002E8                     U4BRGH          equ	744	;# 
   465   0002E9                     U4FIFO          equ	745	;# 
   466   0002EA                     U4UIR           equ	746	;# 
   467   0002EB                     U4ERRIR         equ	747	;# 
   468   0002EC                     U4ERRIE         equ	748	;# 
   469   0002ED                     U5RXB           equ	749	;# 
   470   0002ED                     U5RXBL          equ	749	;# 
   471   0002EF                     U5TXB           equ	751	;# 
   472   0002EF                     U5TXBL          equ	751	;# 
   473   0002F1                     U5P1            equ	753	;# 
   474   0002F1                     U5P1L           equ	753	;# 
   475   0002F3                     U5P2            equ	755	;# 
   476   0002F3                     U5P2L           equ	755	;# 
   477   0002F5                     U5P3            equ	757	;# 
   478   0002F5                     U5P3L           equ	757	;# 
   479   0002F7                     U5CON0          equ	759	;# 
   480   0002F8                     U5CON1          equ	760	;# 
   481   0002F9                     U5CON2          equ	761	;# 
   482   0002FA                     U5BRG           equ	762	;# 
   483   0002FA                     U5BRGL          equ	762	;# 
   484   0002FB                     U5BRGH          equ	763	;# 
   485   0002FC                     U5FIFO          equ	764	;# 
   486   0002FD                     U5UIR           equ	765	;# 
   487   0002FE                     U5ERRIR         equ	766	;# 
   488   0002FF                     U5ERRIE         equ	767	;# 
   489   000300                     SMT1TMR         equ	768	;# 
   490   000300                     SMT1TMRL        equ	768	;# 
   491   000301                     SMT1TMRH        equ	769	;# 
   492   000302                     SMT1TMRU        equ	770	;# 
   493   000303                     SMT1CPR         equ	771	;# 
   494   000303                     SMT1CPRL        equ	771	;# 
   495   000304                     SMT1CPRH        equ	772	;# 
   496   000305                     SMT1CPRU        equ	773	;# 
   497   000306                     SMT1CPW         equ	774	;# 
   498   000306                     SMT1CPWL        equ	774	;# 
   499   000307                     SMT1CPWH        equ	775	;# 
   500   000308                     SMT1CPWU        equ	776	;# 
   501   000309                     SMT1PR          equ	777	;# 
   502   000309                     SMT1PRL         equ	777	;# 
   503   00030A                     SMT1PRH         equ	778	;# 
   504   00030B                     SMT1PRU         equ	779	;# 
   505   00030C                     SMT1CON0        equ	780	;# 
   506   00030D                     SMT1CON1        equ	781	;# 
   507   00030E                     SMT1STAT        equ	782	;# 
   508   00030F                     SMT1CLK         equ	783	;# 
   509   000310                     SMT1SIG         equ	784	;# 
   510   000311                     SMT1WIN         equ	785	;# 
   511   000318                     TMR0L           equ	792	;# 
   512   000318                     TMR0            equ	792	;# 
   513   000319                     TMR0H           equ	793	;# 
   514   000319                     PR0             equ	793	;# 
   515   00031A                     T0CON0          equ	794	;# 
   516   00031B                     T0CON1          equ	795	;# 
   517   00031C                     TMR1            equ	796	;# 
   518   00031C                     TMR1L           equ	796	;# 
   519   00031D                     TMR1H           equ	797	;# 
   520   00031E                     T1CON           equ	798	;# 
   521   00031E                     TMR1CON         equ	798	;# 
   522   00031F                     T1GCON          equ	799	;# 
   523   00031F                     TMR1GCON        equ	799	;# 
   524   000320                     T1GATE          equ	800	;# 
   525   000320                     TMR1GATE        equ	800	;# 
   526   000321                     T1CLK           equ	801	;# 
   527   000321                     TMR1CLK         equ	801	;# 
   528   000321                     PR1             equ	801	;# 
   529   000322                     T2TMR           equ	802	;# 
   530   000322                     TMR2            equ	802	;# 
   531   000323                     T2PR            equ	803	;# 
   532   000323                     PR2             equ	803	;# 
   533   000324                     T2CON           equ	804	;# 
   534   000325                     T2HLT           equ	805	;# 
   535   000326                     T2CLKCON        equ	806	;# 
   536   000326                     T2CLK           equ	806	;# 
   537   000327                     T2RST           equ	807	;# 
   538   000328                     TMR3            equ	808	;# 
   539   000328                     TMR3L           equ	808	;# 
   540   000329                     TMR3H           equ	809	;# 
   541   00032A                     T3CON           equ	810	;# 
   542   00032A                     TMR3CON         equ	810	;# 
   543   00032B                     T3GCON          equ	811	;# 
   544   00032B                     TMR3GCON        equ	811	;# 
   545   00032C                     T3GATE          equ	812	;# 
   546   00032C                     TMR3GATE        equ	812	;# 
   547   00032D                     T3CLK           equ	813	;# 
   548   00032D                     TMR3CLK         equ	813	;# 
   549   00032D                     PR3             equ	813	;# 
   550   00032E                     T4TMR           equ	814	;# 
   551   00032E                     TMR4            equ	814	;# 
   552   00032F                     T4PR            equ	815	;# 
   553   00032F                     PR4             equ	815	;# 
   554   000330                     T4CON           equ	816	;# 
   555   000331                     T4HLT           equ	817	;# 
   556   000332                     T4CLKCON        equ	818	;# 
   557   000332                     T4CLK           equ	818	;# 
   558   000333                     T4RST           equ	819	;# 
   559   000334                     TMR5            equ	820	;# 
   560   000334                     TMR5L           equ	820	;# 
   561   000335                     TMR5H           equ	821	;# 
   562   000336                     T5CON           equ	822	;# 
   563   000336                     TMR5CON         equ	822	;# 
   564   000337                     T5GCON          equ	823	;# 
   565   000337                     TMR5GCON        equ	823	;# 
   566   000338                     T5GATE          equ	824	;# 
   567   000338                     TMR5GATE        equ	824	;# 
   568   000339                     T5CLK           equ	825	;# 
   569   000339                     TMR5CLK         equ	825	;# 
   570   000339                     PR5             equ	825	;# 
   571   00033A                     T6TMR           equ	826	;# 
   572   00033A                     TMR6            equ	826	;# 
   573   00033B                     T6PR            equ	827	;# 
   574   00033B                     PR6             equ	827	;# 
   575   00033C                     T6CON           equ	828	;# 
   576   00033D                     T6HLT           equ	829	;# 
   577   00033E                     T6CLKCON        equ	830	;# 
   578   00033E                     T6CLK           equ	830	;# 
   579   00033F                     T6RST           equ	831	;# 
   580   000340                     CCPR1           equ	832	;# 
   581   000340                     CCPR1L          equ	832	;# 
   582   000341                     CCPR1H          equ	833	;# 
   583   000342                     CCP1CON         equ	834	;# 
   584   000343                     CCP1CAP         equ	835	;# 
   585   000344                     CCPR2           equ	836	;# 
   586   000344                     CCPR2L          equ	836	;# 
   587   000345                     CCPR2H          equ	837	;# 
   588   000346                     CCP2CON         equ	838	;# 
   589   000347                     CCP2CAP         equ	839	;# 
   590   000348                     CCPR3           equ	840	;# 
   591   000348                     CCPR3L          equ	840	;# 
   592   000349                     CCPR3H          equ	841	;# 
   593   00034A                     CCP3CON         equ	842	;# 
   594   00034B                     CCP3CAP         equ	843	;# 
   595   00034C                     CCPTMRS0        equ	844	;# 
   596   00034F                     CRCDATA         equ	847	;# 
   597   00034F                     CRCDATL         equ	847	;# 
   598   000350                     CRCDATH         equ	848	;# 
   599   000351                     CRCACC          equ	849	;# 
   600   000351                     CRCACCL         equ	849	;# 
   601   000352                     CRCACCH         equ	850	;# 
   602   000353                     CRCSHFT         equ	851	;# 
   603   000353                     CRCSHIFTL       equ	851	;# 
   604   000354                     CRCSHIFTH       equ	852	;# 
   605   000355                     CRCXOR          equ	853	;# 
   606   000355                     CRCXORL         equ	853	;# 
   607   000356                     CRCXORH         equ	854	;# 
   608   000357                     CRCCON0         equ	855	;# 
   609   000358                     CRCCON1         equ	856	;# 
   610   00035A                     SCANLADR        equ	858	;# 
   611   00035A                     SCANLADRL       equ	858	;# 
   612   00035B                     SCANLADRH       equ	859	;# 
   613   00035C                     SCANLADRU       equ	860	;# 
   614   00035D                     SCANHADR        equ	861	;# 
   615   00035D                     SCANHADRL       equ	861	;# 
   616   00035E                     SCANHADRH       equ	862	;# 
   617   00035F                     SCANHADRU       equ	863	;# 
   618   000360                     SCANCON0        equ	864	;# 
   619   000361                     SCANTRIG        equ	865	;# 
   620   000362                     IPR0            equ	866	;# 
   621   000363                     IPR1            equ	867	;# 
   622   000364                     IPR2            equ	868	;# 
   623   000365                     IPR3            equ	869	;# 
   624   000366                     IPR4            equ	870	;# 
   625   000367                     IPR5            equ	871	;# 
   626   000368                     IPR6            equ	872	;# 
   627   000369                     IPR7            equ	873	;# 
   628   00036A                     IPR8            equ	874	;# 
   629   00036B                     IPR9            equ	875	;# 
   630   00036C                     IPR10           equ	876	;# 
   631   00036D                     IPR11           equ	877	;# 
   632   00036E                     IPR12           equ	878	;# 
   633   00036F                     IPR13           equ	879	;# 
   634   000370                     IPR14           equ	880	;# 
   635   000371                     IPR15           equ	881	;# 
   636   000373                     STATUS_CSHAD    equ	883	;# 
   637   000374                     WREG_CSHAD      equ	884	;# 
   638   000375                     BSR_CSHAD       equ	885	;# 
   639   000376                     SHADCON         equ	886	;# 
   640   000377                     STATUS_SHAD     equ	887	;# 
   641   000378                     WREG_SHAD       equ	888	;# 
   642   000379                     BSR_SHAD        equ	889	;# 
   643   00037A                     PCLATH_SHAD     equ	890	;# 
   644   00037B                     PCLATU_SHAD     equ	891	;# 
   645   00037C                     FSR0SH          equ	892	;# 
   646   00037C                     FSR0L_SHAD      equ	892	;# 
   647   00037D                     FSR0H_SHAD      equ	893	;# 
   648   00037E                     FSR1SH          equ	894	;# 
   649   00037E                     FSR1L_SHAD      equ	894	;# 
   650   00037F                     FSR1H_SHAD      equ	895	;# 
   651   000380                     FSR2SH          equ	896	;# 
   652   000380                     FSR2L_SHAD      equ	896	;# 
   653   000381                     FSR2H_SHAD      equ	897	;# 
   654   000382                     PRODSH          equ	898	;# 
   655   000382                     PRODL_SHAD      equ	898	;# 
   656   000383                     PRODH_SHAD      equ	899	;# 
   657   0003BC                     CWG1CLK         equ	956	;# 
   658   0003BC                     CWG1CLKCON      equ	956	;# 
   659   0003BD                     CWG1ISM         equ	957	;# 
   660   0003BD                     CWG1DAT         equ	957	;# 
   661   0003BE                     CWG1DBR         equ	958	;# 
   662   0003BF                     CWG1DBF         equ	959	;# 
   663   0003C0                     CWG1CON0        equ	960	;# 
   664   0003C1                     CWG1CON1        equ	961	;# 
   665   0003C2                     CWG1AS0         equ	962	;# 
   666   0003C3                     CWG1AS1         equ	963	;# 
   667   0003C4                     CWG1STR         equ	964	;# 
   668   0003C5                     CWG2CLK         equ	965	;# 
   669   0003C5                     CWG2CLKCON      equ	965	;# 
   670   0003C6                     CWG2ISM         equ	966	;# 
   671   0003C6                     CWG2DAT         equ	966	;# 
   672   0003C7                     CWG2DBR         equ	967	;# 
   673   0003C8                     CWG2DBF         equ	968	;# 
   674   0003C9                     CWG2CON0        equ	969	;# 
   675   0003CA                     CWG2CON1        equ	970	;# 
   676   0003CB                     CWG2AS0         equ	971	;# 
   677   0003CC                     CWG2AS1         equ	972	;# 
   678   0003CD                     CWG2STR         equ	973	;# 
   679   0003CE                     CWG3CLK         equ	974	;# 
   680   0003CE                     CWG3CLKCON      equ	974	;# 
   681   0003CF                     CWG3ISM         equ	975	;# 
   682   0003CF                     CWG3DAT         equ	975	;# 
   683   0003D0                     CWG3DBR         equ	976	;# 
   684   0003D1                     CWG3DBF         equ	977	;# 
   685   0003D2                     CWG3CON0        equ	978	;# 
   686   0003D3                     CWG3CON1        equ	979	;# 
   687   0003D4                     CWG3AS0         equ	980	;# 
   688   0003D5                     CWG3AS1         equ	981	;# 
   689   0003D6                     CWG3STR         equ	982	;# 
   690   0003D7                     FVRCON          equ	983	;# 
   691   0003D8                     ADCPCON         equ	984	;# 
   692   0003D8                     ADCP            equ	984	;# 
   693   0003D9                     ADLTH           equ	985	;# 
   694   0003D9                     ADLTHL          equ	985	;# 
   695   0003DA                     ADLTHH          equ	986	;# 
   696   0003DB                     ADUTH           equ	987	;# 
   697   0003DB                     ADUTHL          equ	987	;# 
   698   0003DC                     ADUTHH          equ	988	;# 
   699   0003DD                     ADERR           equ	989	;# 
   700   0003DD                     ADERRL          equ	989	;# 
   701   0003DE                     ADERRH          equ	990	;# 
   702   0003DF                     ADSTPT          equ	991	;# 
   703   0003DF                     ADSTPTL         equ	991	;# 
   704   0003E0                     ADSTPTH         equ	992	;# 
   705   0003E1                     ADFLTR          equ	993	;# 
   706   0003E1                     ADFLTRL         equ	993	;# 
   707   0003E2                     ADFLTRH         equ	994	;# 
   708   0003E3                     ADACC           equ	995	;# 
   709   0003E3                     ADACCL          equ	995	;# 
   710   0003E4                     ADACCH          equ	996	;# 
   711   0003E5                     ADACCU          equ	997	;# 
   712   0003E6                     ADCNT           equ	998	;# 
   713   0003E7                     ADRPT           equ	999	;# 
   714   0003E8                     ADPREV          equ	1000	;# 
   715   0003E8                     ADPREVL         equ	1000	;# 
   716   0003E9                     ADPREVH         equ	1001	;# 
   717   0003EA                     ADRES           equ	1002	;# 
   718   0003EA                     ADRESL          equ	1002	;# 
   719   0003EB                     ADRESH          equ	1003	;# 
   720   0003EC                     ADPCH           equ	1004	;# 
   721   0003EE                     ADACQ           equ	1006	;# 
   722   0003EE                     ADACQL          equ	1006	;# 
   723   0003EF                     ADACQH          equ	1007	;# 
   724   0003F0                     ADCAP           equ	1008	;# 
   725   0003F1                     ADPRE           equ	1009	;# 
   726   0003F1                     ADPREL          equ	1009	;# 
   727   0003F2                     ADPREH          equ	1010	;# 
   728   0003F3                     ADCON0          equ	1011	;# 
   729   0003F4                     ADCON1          equ	1012	;# 
   730   0003F5                     ADCON2          equ	1013	;# 
   731   0003F6                     ADCON3          equ	1014	;# 
   732   0003F7                     ADSTAT          equ	1015	;# 
   733   0003F8                     ADREF           equ	1016	;# 
   734   0003F9                     ADACT           equ	1017	;# 
   735   0003FA                     ADCLK           equ	1018	;# 
   736   000400                     ANSELA          equ	1024	;# 
   737   000401                     WPUA            equ	1025	;# 
   738   000402                     ODCONA          equ	1026	;# 
   739   000403                     SLRCONA         equ	1027	;# 
   740   000404                     INLVLA          equ	1028	;# 
   741   000405                     IOCAP           equ	1029	;# 
   742   000406                     IOCAN           equ	1030	;# 
   743   000407                     IOCAF           equ	1031	;# 
   744   000408                     ANSELB          equ	1032	;# 
   745   000409                     WPUB            equ	1033	;# 
   746   00040A                     ODCONB          equ	1034	;# 
   747   00040B                     SLRCONB         equ	1035	;# 
   748   00040C                     INLVLB          equ	1036	;# 
   749   00040D                     IOCBP           equ	1037	;# 
   750   00040E                     IOCBN           equ	1038	;# 
   751   00040F                     IOCBF           equ	1039	;# 
   752   000410                     ANSELC          equ	1040	;# 
   753   000411                     WPUC            equ	1041	;# 
   754   000412                     ODCONC          equ	1042	;# 
   755   000413                     SLRCONC         equ	1043	;# 
   756   000414                     INLVLC          equ	1044	;# 
   757   000415                     IOCCP           equ	1045	;# 
   758   000416                     IOCCN           equ	1046	;# 
   759   000417                     IOCCF           equ	1047	;# 
   760   000418                     ANSELD          equ	1048	;# 
   761   000419                     WPUD            equ	1049	;# 
   762   00041A                     ODCOND          equ	1050	;# 
   763   00041B                     SLRCOND         equ	1051	;# 
   764   00041C                     INLVLD          equ	1052	;# 
   765   000420                     ANSELE          equ	1056	;# 
   766   000421                     WPUE            equ	1057	;# 
   767   000422                     ODCONE          equ	1058	;# 
   768   000423                     SLRCONE         equ	1059	;# 
   769   000424                     INLVLE          equ	1060	;# 
   770   000425                     IOCEP           equ	1061	;# 
   771   000426                     IOCEN           equ	1062	;# 
   772   000427                     IOCEF           equ	1063	;# 
   773   000428                     ANSELF          equ	1064	;# 
   774   000429                     WPUF            equ	1065	;# 
   775   00042A                     ODCONF          equ	1066	;# 
   776   00042B                     SLRCONF         equ	1067	;# 
   777   00042C                     INLVLF          equ	1068	;# 
   778   000440                     NCO1ACC         equ	1088	;# 
   779   000440                     NCO1ACCL        equ	1088	;# 
   780   000441                     NCO1ACCH        equ	1089	;# 
   781   000442                     NCO1ACCU        equ	1090	;# 
   782   000443                     NCO1INC         equ	1091	;# 
   783   000443                     NCO1INCL        equ	1091	;# 
   784   000444                     NCO1INCH        equ	1092	;# 
   785   000445                     NCO1INCU        equ	1093	;# 
   786   000446                     NCO1CON         equ	1094	;# 
   787   000447                     NCO1CLK         equ	1095	;# 
   788   000448                     NCO2ACC         equ	1096	;# 
   789   000448                     NCO2ACCL        equ	1096	;# 
   790   000449                     NCO2ACCH        equ	1097	;# 
   791   00044A                     NCO2ACCU        equ	1098	;# 
   792   00044B                     NCO2INC         equ	1099	;# 
   793   00044B                     NCO2INCL        equ	1099	;# 
   794   00044C                     NCO2INCH        equ	1100	;# 
   795   00044D                     NCO2INCU        equ	1101	;# 
   796   00044E                     NCO2CON         equ	1102	;# 
   797   00044F                     NCO2CLK         equ	1103	;# 
   798   000450                     NCO3ACC         equ	1104	;# 
   799   000450                     NCO3ACCL        equ	1104	;# 
   800   000451                     NCO3ACCH        equ	1105	;# 
   801   000452                     NCO3ACCU        equ	1106	;# 
   802   000453                     NCO3INC         equ	1107	;# 
   803   000453                     NCO3INCL        equ	1107	;# 
   804   000454                     NCO3INCH        equ	1108	;# 
   805   000455                     NCO3INCU        equ	1109	;# 
   806   000456                     NCO3CON         equ	1110	;# 
   807   000457                     NCO3CLK         equ	1111	;# 
   808   000459                     IVTLOCK         equ	1113	;# 
   809   00045A                     IVTAD           equ	1114	;# 
   810   00045A                     IVTADL          equ	1114	;# 
   811   00045B                     IVTADH          equ	1115	;# 
   812   00045C                     IVTADU          equ	1116	;# 
   813   00045D                     IVTBASE         equ	1117	;# 
   814   00045D                     IVTBASEL        equ	1117	;# 
   815   00045E                     IVTBASEH        equ	1118	;# 
   816   00045F                     IVTBASEU        equ	1119	;# 
   817   000460                     PWM1ERS         equ	1120	;# 
   818   000461                     PWM1CLK         equ	1121	;# 
   819   000462                     PWM1LDS         equ	1122	;# 
   820   000463                     PWM1PR          equ	1123	;# 
   821   000463                     PWM1PRL         equ	1123	;# 
   822   000464                     PWM1PRH         equ	1124	;# 
   823   000465                     PWM1CPRE        equ	1125	;# 
   824   000466                     PWM1PIPOS       equ	1126	;# 
   825   000467                     PWM1GIR         equ	1127	;# 
   826   000468                     PWM1GIE         equ	1128	;# 
   827   000469                     PWM1CON         equ	1129	;# 
   828   00046A                     PWM1S1CFG       equ	1130	;# 
   829   00046B                     PWM1S1P1        equ	1131	;# 
   830   00046B                     PWM1S1P1L       equ	1131	;# 
   831   00046C                     PWM1S1P1H       equ	1132	;# 
   832   00046D                     PWM1S1P2        equ	1133	;# 
   833   00046D                     PWM1S1P2L       equ	1133	;# 
   834   00046E                     PWM1S1P2H       equ	1134	;# 
   835   00046F                     PWM2ERS         equ	1135	;# 
   836   000470                     PWM2CLK         equ	1136	;# 
   837   000471                     PWM2LDS         equ	1137	;# 
   838   000472                     PWM2PR          equ	1138	;# 
   839   000472                     PWM2PRL         equ	1138	;# 
   840   000473                     PWM2PRH         equ	1139	;# 
   841   000474                     PWM2CPRE        equ	1140	;# 
   842   000475                     PWM2PIPOS       equ	1141	;# 
   843   000476                     PWM2GIR         equ	1142	;# 
   844   000477                     PWM2GIE         equ	1143	;# 
   845   000478                     PWM2CON         equ	1144	;# 
   846   000479                     PWM2S1CFG       equ	1145	;# 
   847   00047A                     PWM2S1P1        equ	1146	;# 
   848   00047A                     PWM2S1P1L       equ	1146	;# 
   849   00047B                     PWM2S1P1H       equ	1147	;# 
   850   00047C                     PWM2S1P2        equ	1148	;# 
   851   00047C                     PWM2S1P2L       equ	1148	;# 
   852   00047D                     PWM2S1P2H       equ	1149	;# 
   853   00047E                     PWM3ERS         equ	1150	;# 
   854   00047F                     PWM3CLK         equ	1151	;# 
   855   000480                     PWM3LDS         equ	1152	;# 
   856   000481                     PWM3PR          equ	1153	;# 
   857   000481                     PWM3PRL         equ	1153	;# 
   858   000482                     PWM3PRH         equ	1154	;# 
   859   000483                     PWM3CPRE        equ	1155	;# 
   860   000484                     PWM3PIPOS       equ	1156	;# 
   861   000485                     PWM3GIR         equ	1157	;# 
   862   000486                     PWM3GIE         equ	1158	;# 
   863   000487                     PWM3CON         equ	1159	;# 
   864   000488                     PWM3S1CFG       equ	1160	;# 
   865   000489                     PWM3S1P1        equ	1161	;# 
   866   000489                     PWM3S1P1L       equ	1161	;# 
   867   00048A                     PWM3S1P1H       equ	1162	;# 
   868   00048B                     PWM3S1P2        equ	1163	;# 
   869   00048B                     PWM3S1P2L       equ	1163	;# 
   870   00048C                     PWM3S1P2H       equ	1164	;# 
   871   00049C                     PWMLOAD         equ	1180	;# 
   872   00049D                     PWMEN           equ	1181	;# 
   873   00049E                     PIE0            equ	1182	;# 
   874   00049F                     PIE1            equ	1183	;# 
   875   0004A0                     PIE2            equ	1184	;# 
   876   0004A1                     PIE3            equ	1185	;# 
   877   0004A2                     PIE4            equ	1186	;# 
   878   0004A3                     PIE5            equ	1187	;# 
   879   0004A4                     PIE6            equ	1188	;# 
   880   0004A5                     PIE7            equ	1189	;# 
   881   0004A6                     PIE8            equ	1190	;# 
   882   0004A7                     PIE9            equ	1191	;# 
   883   0004A8                     PIE10           equ	1192	;# 
   884   0004A9                     PIE11           equ	1193	;# 
   885   0004AA                     PIE12           equ	1194	;# 
   886   0004AB                     PIE13           equ	1195	;# 
   887   0004AC                     PIE14           equ	1196	;# 
   888   0004AD                     PIE15           equ	1197	;# 
   889   0004AE                     PIR0            equ	1198	;# 
   890   0004AF                     PIR1            equ	1199	;# 
   891   0004B0                     PIR2            equ	1200	;# 
   892   0004B1                     PIR3            equ	1201	;# 
   893   0004B2                     PIR4            equ	1202	;# 
   894   0004B3                     PIR5            equ	1203	;# 
   895   0004B4                     PIR6            equ	1204	;# 
   896   0004B5                     PIR7            equ	1205	;# 
   897   0004B6                     PIR8            equ	1206	;# 
   898   0004B7                     PIR9            equ	1207	;# 
   899   0004B8                     PIR10           equ	1208	;# 
   900   0004B9                     PIR11           equ	1209	;# 
   901   0004BA                     PIR12           equ	1210	;# 
   902   0004BB                     PIR13           equ	1211	;# 
   903   0004BC                     PIR14           equ	1212	;# 
   904   0004BD                     PIR15           equ	1213	;# 
   905   0004BE                     LATA            equ	1214	;# 
   906   0004BF                     LATB            equ	1215	;# 
   907   0004C0                     LATC            equ	1216	;# 
   908   0004C1                     LATD            equ	1217	;# 
   909   0004C2                     LATE            equ	1218	;# 
   910   0004C3                     LATF            equ	1219	;# 
   911   0004C6                     TRISA           equ	1222	;# 
   912   0004C7                     TRISB           equ	1223	;# 
   913   0004C8                     TRISC           equ	1224	;# 
   914   0004C9                     TRISD           equ	1225	;# 
   915   0004CA                     TRISE           equ	1226	;# 
   916   0004CB                     TRISF           equ	1227	;# 
   917   0004CE                     PORTA           equ	1230	;# 
   918   0004CF                     PORTB           equ	1231	;# 
   919   0004D0                     PORTC           equ	1232	;# 
   920   0004D1                     PORTD           equ	1233	;# 
   921   0004D2                     PORTE           equ	1234	;# 
   922   0004D3                     PORTF           equ	1235	;# 
   923   0004D6                     INTCON0         equ	1238	;# 
   924   0004D7                     INTCON1         equ	1239	;# 
   925   0004D8                     STATUS          equ	1240	;# 
   926   0004D9                     FSR2            equ	1241	;# 
   927   0004D9                     FSR2L           equ	1241	;# 
   928   0004DA                     FSR2H           equ	1242	;# 
   929   0004DB                     PLUSW2          equ	1243	;# 
   930   0004DC                     PREINC2         equ	1244	;# 
   931   0004DD                     POSTDEC2        equ	1245	;# 
   932   0004DE                     POSTINC2        equ	1246	;# 
   933   0004DF                     INDF2           equ	1247	;# 
   934   0004E0                     BSR             equ	1248	;# 
   935   0004E1                     FSR1            equ	1249	;# 
   936   0004E1                     FSR1L           equ	1249	;# 
   937   0004E2                     FSR1H           equ	1250	;# 
   938   0004E3                     PLUSW1          equ	1251	;# 
   939   0004E4                     PREINC1         equ	1252	;# 
   940   0004E5                     POSTDEC1        equ	1253	;# 
   941   0004E6                     POSTINC1        equ	1254	;# 
   942   0004E7                     INDF1           equ	1255	;# 
   943   0004E8                     WREG            equ	1256	;# 
   944   0004E9                     FSR0            equ	1257	;# 
   945   0004E9                     FSR0L           equ	1257	;# 
   946   0004EA                     FSR0H           equ	1258	;# 
   947   0004EB                     PLUSW0          equ	1259	;# 
   948   0004EC                     PREINC0         equ	1260	;# 
   949   0004ED                     POSTDEC0        equ	1261	;# 
   950   0004EE                     POSTINC0        equ	1262	;# 
   951   0004EF                     INDF0           equ	1263	;# 
   952   0004F0                     PCON0           equ	1264	;# 
   953   0004F1                     PCON1           equ	1265	;# 
   954   0004F2                     CPUDOZE         equ	1266	;# 
   955   0004F3                     PROD            equ	1267	;# 
   956   0004F3                     PRODL           equ	1267	;# 
   957   0004F4                     PRODH           equ	1268	;# 
   958   0004F5                     TABLAT          equ	1269	;# 
   959   0004F6                     TBLPTR          equ	1270	;# 
   960   0004F6                     TBLPTRL         equ	1270	;# 
   961   0004F7                     TBLPTRH         equ	1271	;# 
   962   0004F8                     TBLPTRU         equ	1272	;# 
   963   0004F9                     PCLAT           equ	1273	;# 
   964   0004F9                     PCL             equ	1273	;# 
   965   0004FA                     PCLATH          equ	1274	;# 
   966   0004FB                     PCLATU          equ	1275	;# 
   967   0004FC                     STKPTR          equ	1276	;# 
   968   0004FD                     TOS             equ	1277	;# 
   969   0004FD                     TOSL            equ	1277	;# 
   970   0004FE                     TOSH            equ	1278	;# 
   971   0004FF                     TOSU            equ	1279	;# 
   972   000039                     CLKRCON         equ	57	;# 
   973   00003A                     CLKRCLK         equ	58	;# 
   974   000040                     NVMCON0         equ	64	;# 
   975   000041                     NVMCON1         equ	65	;# 
   976   000042                     NVMLOCK         equ	66	;# 
   977   000043                     NVMADR          equ	67	;# 
   978   000043                     NVMADRL         equ	67	;# 
   979   000044                     NVMADRH         equ	68	;# 
   980   000045                     NVMADRU         equ	69	;# 
   981   000046                     NVMDAT          equ	70	;# 
   982   000046                     NVMDATL         equ	70	;# 
   983   000047                     NVMDATH         equ	71	;# 
   984   000048                     VREGCON         equ	72	;# 
   985   000049                     BORCON          equ	73	;# 
   986   00004A                     HLVDCON0        equ	74	;# 
   987   00004B                     HLVDCON1        equ	75	;# 
   988   00004C                     ZCDCON          equ	76	;# 
   989   000060                     PMD0            equ	96	;# 
   990   000061                     PMD1            equ	97	;# 
   991   000063                     PMD3            equ	99	;# 
   992   000064                     PMD4            equ	100	;# 
   993   000065                     PMD5            equ	101	;# 
   994   000066                     PMD6            equ	102	;# 
   995   000067                     PMD7            equ	103	;# 
   996   000068                     PMD8            equ	104	;# 
   997   00006A                     MD1CON0         equ	106	;# 
   998   00006B                     MD1CON1         equ	107	;# 
   999   00006C                     MD1SRC          equ	108	;# 
  1000   00006D                     MD1CARL         equ	109	;# 
  1001   00006E                     MD1CARH         equ	110	;# 
  1002   00006F                     CMOUT           equ	111	;# 
  1003   000070                     CM1CON0         equ	112	;# 
  1004   000071                     CM1CON1         equ	113	;# 
  1005   000072                     CM1NCH          equ	114	;# 
  1006   000073                     CM1PCH          equ	115	;# 
  1007   000074                     CM2CON0         equ	116	;# 
  1008   000075                     CM2CON1         equ	117	;# 
  1009   000076                     CM2NCH          equ	118	;# 
  1010   000077                     CM2PCH          equ	119	;# 
  1011   000078                     WDTCON0         equ	120	;# 
  1012   000079                     WDTCON1         equ	121	;# 
  1013   00007A                     WDTPS           equ	122	;# 
  1014   00007A                     WDTPSL          equ	122	;# 
  1015   00007B                     WDTPSH          equ	123	;# 
  1016   00007C                     WDTTMR          equ	124	;# 
  1017   00007D                     DAC1DAT         equ	125	;# 
  1018   00007D                     DAC1DATL        equ	125	;# 
  1019   00007F                     DAC1CON         equ	127	;# 
  1020   000080                     SPI1RXB         equ	128	;# 
  1021   000081                     SPI1TXB         equ	129	;# 
  1022   000082                     SPI1TCNT        equ	130	;# 
  1023   000082                     SPI1TCNTL       equ	130	;# 
  1024   000083                     SPI1TCNTH       equ	131	;# 
  1025   000084                     SPI1CON0        equ	132	;# 
  1026   000085                     SPI1CON1        equ	133	;# 
  1027   000086                     SPI1CON2        equ	134	;# 
  1028   000087                     SPI1STATUS      equ	135	;# 
  1029   000088                     SPI1TWIDTH      equ	136	;# 
  1030   000089                     SPI1BAUD        equ	137	;# 
  1031   00008A                     SPI1INTF        equ	138	;# 
  1032   00008B                     SPI1INTE        equ	139	;# 
  1033   00008C                     SPI1CLK         equ	140	;# 
  1034   00008D                     SPI2RXB         equ	141	;# 
  1035   00008E                     SPI2TXB         equ	142	;# 
  1036   00008F                     SPI2TCNT        equ	143	;# 
  1037   00008F                     SPI2TCNTL       equ	143	;# 
  1038   000090                     SPI2TCNTH       equ	144	;# 
  1039   000091                     SPI2CON0        equ	145	;# 
  1040   000092                     SPI2CON1        equ	146	;# 
  1041   000093                     SPI2CON2        equ	147	;# 
  1042   000094                     SPI2STATUS      equ	148	;# 
  1043   000095                     SPI2TWIDTH      equ	149	;# 
  1044   000096                     SPI2BAUD        equ	150	;# 
  1045   000097                     SPI2INTF        equ	151	;# 
  1046   000098                     SPI2INTE        equ	152	;# 
  1047   000099                     SPI2CLK         equ	153	;# 
  1048   0000AC                     ACTCON          equ	172	;# 
  1049   0000AD                     OSCCON1         equ	173	;# 
  1050   0000AE                     OSCCON2         equ	174	;# 
  1051   0000AF                     OSCCON3         equ	175	;# 
  1052   0000B0                     OSCTUNE         equ	176	;# 
  1053   0000B1                     OSCFRQ          equ	177	;# 
  1054   0000B1                     OSCFREQ         equ	177	;# 
  1055   0000B2                     OSCSTAT         equ	178	;# 
  1056   0000B2                     OSCSTAT1        equ	178	;# 
  1057   0000B3                     OSCEN           equ	179	;# 
  1058   0000B4                     PRLOCK          equ	180	;# 
  1059   0000B5                     SCANPR          equ	181	;# 
  1060   0000B6                     DMA1PR          equ	182	;# 
  1061   0000B7                     DMA2PR          equ	183	;# 
  1062   0000B8                     DMA3PR          equ	184	;# 
  1063   0000B9                     DMA4PR          equ	185	;# 
  1064   0000BA                     DMA5PR          equ	186	;# 
  1065   0000BB                     DMA6PR          equ	187	;# 
  1066   0000BE                     MAINPR          equ	190	;# 
  1067   0000BF                     ISRPR           equ	191	;# 
  1068   0000D4                     CLCDATA         equ	212	;# 
  1069   0000D5                     CLCSELECT       equ	213	;# 
  1070   0000D6                     CLCnCON         equ	214	;# 
  1071   0000D7                     CLCnPOL         equ	215	;# 
  1072   0000D8                     CLCnSEL0        equ	216	;# 
  1073   0000D9                     CLCnSEL1        equ	217	;# 
  1074   0000DA                     CLCnSEL2        equ	218	;# 
  1075   0000DB                     CLCnSEL3        equ	219	;# 
  1076   0000DC                     CLCnGLS0        equ	220	;# 
  1077   0000DD                     CLCnGLS1        equ	221	;# 
  1078   0000DE                     CLCnGLS2        equ	222	;# 
  1079   0000DF                     CLCnGLS3        equ	223	;# 
  1080   0000E8                     DMASELECT       equ	232	;# 
  1081   0000E9                     DMAnBUF         equ	233	;# 
  1082   0000EA                     DMAnDCNT        equ	234	;# 
  1083   0000EA                     DMAnDCNTL       equ	234	;# 
  1084   0000EB                     DMAnDCNTH       equ	235	;# 
  1085   0000EC                     DMAnDPTR        equ	236	;# 
  1086   0000EC                     DMAnDPTRL       equ	236	;# 
  1087   0000ED                     DMAnDPTRH       equ	237	;# 
  1088   0000EE                     DMAnDSZ         equ	238	;# 
  1089   0000EE                     DMAnDSZL        equ	238	;# 
  1090   0000EF                     DMAnDSZH        equ	239	;# 
  1091   0000F0                     DMAnDSA         equ	240	;# 
  1092   0000F0                     DMAnDSAL        equ	240	;# 
  1093   0000F1                     DMAnDSAH        equ	241	;# 
  1094   0000F2                     DMAnSCNT        equ	242	;# 
  1095   0000F2                     DMAnSCNTL       equ	242	;# 
  1096   0000F3                     DMAnSCNTH       equ	243	;# 
  1097   0000F4                     DMAnSPTR        equ	244	;# 
  1098   0000F4                     DMAnSPTRL       equ	244	;# 
  1099   0000F5                     DMAnSPTRH       equ	245	;# 
  1100   0000F6                     DMAnSPTRU       equ	246	;# 
  1101   0000F7                     DMAnSSZ         equ	247	;# 
  1102   0000F7                     DMAnSSZL        equ	247	;# 
  1103   0000F8                     DMAnSSZH        equ	248	;# 
  1104   0000F9                     DMAnSSA         equ	249	;# 
  1105   0000F9                     DMAnSSAL        equ	249	;# 
  1106   0000FA                     DMAnSSAH        equ	250	;# 
  1107   0000FB                     DMAnSSAU        equ	251	;# 
  1108   0000FC                     DMAnCON0        equ	252	;# 
  1109   0000FD                     DMAnCON1        equ	253	;# 
  1110   0000FE                     DMAnAIRQ        equ	254	;# 
  1111   0000FF                     DMAnSIRQ        equ	255	;# 
  1112   000200                     PPSLOCK         equ	512	;# 
  1113   000201                     RA0PPS          equ	513	;# 
  1114   000202                     RA1PPS          equ	514	;# 
  1115   000203                     RA2PPS          equ	515	;# 
  1116   000204                     RA3PPS          equ	516	;# 
  1117   000205                     RA4PPS          equ	517	;# 
  1118   000206                     RA5PPS          equ	518	;# 
  1119   000207                     RA6PPS          equ	519	;# 
  1120   000208                     RA7PPS          equ	520	;# 
  1121   000209                     RB0PPS          equ	521	;# 
  1122   00020A                     RB1PPS          equ	522	;# 
  1123   00020B                     RB2PPS          equ	523	;# 
  1124   00020C                     RB3PPS          equ	524	;# 
  1125   00020D                     RB4PPS          equ	525	;# 
  1126   00020E                     RB5PPS          equ	526	;# 
  1127   00020F                     RB6PPS          equ	527	;# 
  1128   000210                     RB7PPS          equ	528	;# 
  1129   000211                     RC0PPS          equ	529	;# 
  1130   000212                     RC1PPS          equ	530	;# 
  1131   000213                     RC2PPS          equ	531	;# 
  1132   000214                     RC3PPS          equ	532	;# 
  1133   000215                     RC4PPS          equ	533	;# 
  1134   000216                     RC5PPS          equ	534	;# 
  1135   000217                     RC6PPS          equ	535	;# 
  1136   000218                     RC7PPS          equ	536	;# 
  1137   000219                     RD0PPS          equ	537	;# 
  1138   00021A                     RD1PPS          equ	538	;# 
  1139   00021B                     RD2PPS          equ	539	;# 
  1140   00021C                     RD3PPS          equ	540	;# 
  1141   00021D                     RD4PPS          equ	541	;# 
  1142   00021E                     RD5PPS          equ	542	;# 
  1143   00021F                     RD6PPS          equ	543	;# 
  1144   000220                     RD7PPS          equ	544	;# 
  1145   000221                     RE0PPS          equ	545	;# 
  1146   000222                     RE1PPS          equ	546	;# 
  1147   000223                     RE2PPS          equ	547	;# 
  1148   000229                     RF0PPS          equ	553	;# 
  1149   00022A                     RF1PPS          equ	554	;# 
  1150   00022B                     RF2PPS          equ	555	;# 
  1151   00022C                     RF3PPS          equ	556	;# 
  1152   00022D                     RF4PPS          equ	557	;# 
  1153   00022E                     RF5PPS          equ	558	;# 
  1154   00022F                     RF6PPS          equ	559	;# 
  1155   000230                     RF7PPS          equ	560	;# 
  1156   00023E                     INT0PPS         equ	574	;# 
  1157   00023F                     INT1PPS         equ	575	;# 
  1158   000240                     INT2PPS         equ	576	;# 
  1159   000241                     T0CKIPPS        equ	577	;# 
  1160   000242                     T1CKIPPS        equ	578	;# 
  1161   000243                     T1GPPS          equ	579	;# 
  1162   000244                     T3CKIPPS        equ	580	;# 
  1163   000245                     T3GPPS          equ	581	;# 
  1164   000246                     T5CKIPPS        equ	582	;# 
  1165   000247                     T5GPPS          equ	583	;# 
  1166   000248                     T2INPPS         equ	584	;# 
  1167   000249                     T4INPPS         equ	585	;# 
  1168   00024A                     T6INPPS         equ	586	;# 
  1169   00024F                     CCP1PPS         equ	591	;# 
  1170   000250                     CCP2PPS         equ	592	;# 
  1171   000251                     CCP3PPS         equ	593	;# 
  1172   000253                     PWM1ERSPPS      equ	595	;# 
  1173   000254                     PWM2ERSPPS      equ	596	;# 
  1174   000255                     PWM3ERSPPS      equ	597	;# 
  1175   000257                     PWMIN0PPS       equ	599	;# 
  1176   000258                     PWMIN1PPS       equ	600	;# 
  1177   000259                     SMT1WINPPS      equ	601	;# 
  1178   00025A                     SMT1SIGPPS      equ	602	;# 
  1179   00025B                     CWG1PPS         equ	603	;# 
  1180   00025B                     CWG1INPPS       equ	603	;# 
  1181   00025C                     CWG2PPS         equ	604	;# 
  1182   00025C                     CWG2INPPS       equ	604	;# 
  1183   00025D                     CWG3PPS         equ	605	;# 
  1184   00025D                     CWG3INPPS       equ	605	;# 
  1185   00025E                     MD1CARLPPS      equ	606	;# 
  1186   00025E                     MDCARLPPS       equ	606	;# 
  1187   00025F                     MD1CARHPPS      equ	607	;# 
  1188   00025F                     MDCARHPPS       equ	607	;# 
  1189   000260                     MD1SRCPPS       equ	608	;# 
  1190   000260                     MDSRCPPS        equ	608	;# 
  1191   000261                     CLCIN0PPS       equ	609	;# 
  1192   000262                     CLCIN1PPS       equ	610	;# 
  1193   000263                     CLCIN2PPS       equ	611	;# 
  1194   000264                     CLCIN3PPS       equ	612	;# 
  1195   000265                     CLCIN4PPS       equ	613	;# 
  1196   000266                     CLCIN5PPS       equ	614	;# 
  1197   000267                     CLCIN6PPS       equ	615	;# 
  1198   000268                     CLCIN7PPS       equ	616	;# 
  1199   000269                     ADACTPPS        equ	617	;# 
  1200   00026A                     SPI1SCKPPS      equ	618	;# 
  1201   00026B                     SPI1SDIPPS      equ	619	;# 
  1202   00026C                     SPI1SSPPS       equ	620	;# 
  1203   00026D                     SPI2SCKPPS      equ	621	;# 
  1204   00026E                     SPI2SDIPPS      equ	622	;# 
  1205   00026F                     SPI2SSPPS       equ	623	;# 
  1206   000270                     I2C1SDAPPS      equ	624	;# 
  1207   000271                     I2C1SCLPPS      equ	625	;# 
  1208   000272                     U1RXPPS         equ	626	;# 
  1209   000273                     U1CTSPPS        equ	627	;# 
  1210   000274                     U2RXPPS         equ	628	;# 
  1211   000275                     U2CTSPPS        equ	629	;# 
  1212   000276                     U3RXPPS         equ	630	;# 
  1213   000277                     U3CTSPPS        equ	631	;# 
  1214   000278                     U4RXPPS         equ	632	;# 
  1215   000279                     U4CTSPPS        equ	633	;# 
  1216   00027A                     U5RXPPS         equ	634	;# 
  1217   00027B                     U5CTSPPS        equ	635	;# 
  1218   000286                     RC4I2C          equ	646	;# 
  1219   000287                     RC3I2C          equ	647	;# 
  1220   000288                     RB2I2C          equ	648	;# 
  1221   000289                     RB1I2C          equ	649	;# 
  1222   00028B                     I2C1RXB         equ	651	;# 
  1223   00028C                     I2C1TXB         equ	652	;# 
  1224   00028D                     I2C1CNT         equ	653	;# 
  1225   00028E                     I2C1ADB0        equ	654	;# 
  1226   00028F                     I2C1ADB1        equ	655	;# 
  1227   000290                     I2C1ADR0        equ	656	;# 
  1228   000291                     I2C1ADR1        equ	657	;# 
  1229   000292                     I2C1ADR2        equ	658	;# 
  1230   000293                     I2C1ADR3        equ	659	;# 
  1231   000294                     I2C1CON0        equ	660	;# 
  1232   000295                     I2C1CON1        equ	661	;# 
  1233   000296                     I2C1CON2        equ	662	;# 
  1234   000297                     I2C1ERR         equ	663	;# 
  1235   000298                     I2C1STAT0       equ	664	;# 
  1236   000299                     I2C1STAT1       equ	665	;# 
  1237   00029A                     I2C1PIR         equ	666	;# 
  1238   00029B                     I2C1PIE         equ	667	;# 
  1239   00029C                     I2C1CLK         equ	668	;# 
  1240   00029D                     I2C1BTO         equ	669	;# 
  1241   0002A1                     U1RXB           equ	673	;# 
  1242   0002A1                     U1RXBL          equ	673	;# 
  1243   0002A2                     U1RXCHK         equ	674	;# 
  1244   0002A3                     U1TXB           equ	675	;# 
  1245   0002A3                     U1TXBL          equ	675	;# 
  1246   0002A4                     U1TXCHK         equ	676	;# 
  1247   0002A5                     U1P1            equ	677	;# 
  1248   0002A5                     U1P1L           equ	677	;# 
  1249   0002A6                     U1P1H           equ	678	;# 
  1250   0002A7                     U1P2            equ	679	;# 
  1251   0002A7                     U1P2L           equ	679	;# 
  1252   0002A8                     U1P2H           equ	680	;# 
  1253   0002A9                     U1P3            equ	681	;# 
  1254   0002A9                     U1P3L           equ	681	;# 
  1255   0002AA                     U1P3H           equ	682	;# 
  1256   0002AB                     U1CON0          equ	683	;# 
  1257   0002AC                     U1CON1          equ	684	;# 
  1258   0002AD                     U1CON2          equ	685	;# 
  1259   0002AE                     U1BRG           equ	686	;# 
  1260   0002AE                     U1BRGL          equ	686	;# 
  1261   0002AF                     U1BRGH          equ	687	;# 
  1262   0002B0                     U1FIFO          equ	688	;# 
  1263   0002B1                     U1UIR           equ	689	;# 
  1264   0002B2                     U1ERRIR         equ	690	;# 
  1265   0002B3                     U1ERRIE         equ	691	;# 
  1266   0002B4                     U2RXB           equ	692	;# 
  1267   0002B4                     U2RXBL          equ	692	;# 
  1268   0002B6                     U2TXB           equ	694	;# 
  1269   0002B6                     U2TXBL          equ	694	;# 
  1270   0002B8                     U2P1            equ	696	;# 
  1271   0002B8                     U2P1L           equ	696	;# 
  1272   0002BA                     U2P2            equ	698	;# 
  1273   0002BA                     U2P2L           equ	698	;# 
  1274   0002BC                     U2P3            equ	700	;# 
  1275   0002BC                     U2P3L           equ	700	;# 
  1276   0002BE                     U2CON0          equ	702	;# 
  1277   0002BF                     U2CON1          equ	703	;# 
  1278   0002C0                     U2CON2          equ	704	;# 
  1279   0002C1                     U2BRG           equ	705	;# 
  1280   0002C1                     U2BRGL          equ	705	;# 
  1281   0002C2                     U2BRGH          equ	706	;# 
  1282   0002C3                     U2FIFO          equ	707	;# 
  1283   0002C4                     U2UIR           equ	708	;# 
  1284   0002C5                     U2ERRIR         equ	709	;# 
  1285   0002C6                     U2ERRIE         equ	710	;# 
  1286   0002C7                     U3RXB           equ	711	;# 
  1287   0002C7                     U3RXBL          equ	711	;# 
  1288   0002C9                     U3TXB           equ	713	;# 
  1289   0002C9                     U3TXBL          equ	713	;# 
  1290   0002CB                     U3P1            equ	715	;# 
  1291   0002CB                     U3P1L           equ	715	;# 
  1292   0002CD                     U3P2            equ	717	;# 
  1293   0002CD                     U3P2L           equ	717	;# 
  1294   0002CF                     U3P3            equ	719	;# 
  1295   0002CF                     U3P3L           equ	719	;# 
  1296   0002D1                     U3CON0          equ	721	;# 
  1297   0002D2                     U3CON1          equ	722	;# 
  1298   0002D3                     U3CON2          equ	723	;# 
  1299   0002D4                     U3BRG           equ	724	;# 
  1300   0002D4                     U3BRGL          equ	724	;# 
  1301   0002D5                     U3BRGH          equ	725	;# 
  1302   0002D6                     U3FIFO          equ	726	;# 
  1303   0002D7                     U3UIR           equ	727	;# 
  1304   0002D8                     U3ERRIR         equ	728	;# 
  1305   0002D9                     U3ERRIE         equ	729	;# 
  1306   0002DA                     U4RXB           equ	730	;# 
  1307   0002DA                     U4RXBL          equ	730	;# 
  1308   0002DC                     U4TXB           equ	732	;# 
  1309   0002DC                     U4TXBL          equ	732	;# 
  1310   0002DE                     U4P1            equ	734	;# 
  1311   0002DE                     U4P1L           equ	734	;# 
  1312   0002E0                     U4P2            equ	736	;# 
  1313   0002E0                     U4P2L           equ	736	;# 
  1314   0002E2                     U4P3            equ	738	;# 
  1315   0002E2                     U4P3L           equ	738	;# 
  1316   0002E4                     U4CON0          equ	740	;# 
  1317   0002E5                     U4CON1          equ	741	;# 
  1318   0002E6                     U4CON2          equ	742	;# 
  1319   0002E7                     U4BRG           equ	743	;# 
  1320   0002E7                     U4BRGL          equ	743	;# 
  1321   0002E8                     U4BRGH          equ	744	;# 
  1322   0002E9                     U4FIFO          equ	745	;# 
  1323   0002EA                     U4UIR           equ	746	;# 
  1324   0002EB                     U4ERRIR         equ	747	;# 
  1325   0002EC                     U4ERRIE         equ	748	;# 
  1326   0002ED                     U5RXB           equ	749	;# 
  1327   0002ED                     U5RXBL          equ	749	;# 
  1328   0002EF                     U5TXB           equ	751	;# 
  1329   0002EF                     U5TXBL          equ	751	;# 
  1330   0002F1                     U5P1            equ	753	;# 
  1331   0002F1                     U5P1L           equ	753	;# 
  1332   0002F3                     U5P2            equ	755	;# 
  1333   0002F3                     U5P2L           equ	755	;# 
  1334   0002F5                     U5P3            equ	757	;# 
  1335   0002F5                     U5P3L           equ	757	;# 
  1336   0002F7                     U5CON0          equ	759	;# 
  1337   0002F8                     U5CON1          equ	760	;# 
  1338   0002F9                     U5CON2          equ	761	;# 
  1339   0002FA                     U5BRG           equ	762	;# 
  1340   0002FA                     U5BRGL          equ	762	;# 
  1341   0002FB                     U5BRGH          equ	763	;# 
  1342   0002FC                     U5FIFO          equ	764	;# 
  1343   0002FD                     U5UIR           equ	765	;# 
  1344   0002FE                     U5ERRIR         equ	766	;# 
  1345   0002FF                     U5ERRIE         equ	767	;# 
  1346   000300                     SMT1TMR         equ	768	;# 
  1347   000300                     SMT1TMRL        equ	768	;# 
  1348   000301                     SMT1TMRH        equ	769	;# 
  1349   000302                     SMT1TMRU        equ	770	;# 
  1350   000303                     SMT1CPR         equ	771	;# 
  1351   000303                     SMT1CPRL        equ	771	;# 
  1352   000304                     SMT1CPRH        equ	772	;# 
  1353   000305                     SMT1CPRU        equ	773	;# 
  1354   000306                     SMT1CPW         equ	774	;# 
  1355   000306                     SMT1CPWL        equ	774	;# 
  1356   000307                     SMT1CPWH        equ	775	;# 
  1357   000308                     SMT1CPWU        equ	776	;# 
  1358   000309                     SMT1PR          equ	777	;# 
  1359   000309                     SMT1PRL         equ	777	;# 
  1360   00030A                     SMT1PRH         equ	778	;# 
  1361   00030B                     SMT1PRU         equ	779	;# 
  1362   00030C                     SMT1CON0        equ	780	;# 
  1363   00030D                     SMT1CON1        equ	781	;# 
  1364   00030E                     SMT1STAT        equ	782	;# 
  1365   00030F                     SMT1CLK         equ	783	;# 
  1366   000310                     SMT1SIG         equ	784	;# 
  1367   000311                     SMT1WIN         equ	785	;# 
  1368   000318                     TMR0L           equ	792	;# 
  1369   000318                     TMR0            equ	792	;# 
  1370   000319                     TMR0H           equ	793	;# 
  1371   000319                     PR0             equ	793	;# 
  1372   00031A                     T0CON0          equ	794	;# 
  1373   00031B                     T0CON1          equ	795	;# 
  1374   00031C                     TMR1            equ	796	;# 
  1375   00031C                     TMR1L           equ	796	;# 
  1376   00031D                     TMR1H           equ	797	;# 
  1377   00031E                     T1CON           equ	798	;# 
  1378   00031E                     TMR1CON         equ	798	;# 
  1379   00031F                     T1GCON          equ	799	;# 
  1380   00031F                     TMR1GCON        equ	799	;# 
  1381   000320                     T1GATE          equ	800	;# 
  1382   000320                     TMR1GATE        equ	800	;# 
  1383   000321                     T1CLK           equ	801	;# 
  1384   000321                     TMR1CLK         equ	801	;# 
  1385   000321                     PR1             equ	801	;# 
  1386   000322                     T2TMR           equ	802	;# 
  1387   000322                     TMR2            equ	802	;# 
  1388   000323                     T2PR            equ	803	;# 
  1389   000323                     PR2             equ	803	;# 
  1390   000324                     T2CON           equ	804	;# 
  1391   000325                     T2HLT           equ	805	;# 
  1392   000326                     T2CLKCON        equ	806	;# 
  1393   000326                     T2CLK           equ	806	;# 
  1394   000327                     T2RST           equ	807	;# 
  1395   000328                     TMR3            equ	808	;# 
  1396   000328                     TMR3L           equ	808	;# 
  1397   000329                     TMR3H           equ	809	;# 
  1398   00032A                     T3CON           equ	810	;# 
  1399   00032A                     TMR3CON         equ	810	;# 
  1400   00032B                     T3GCON          equ	811	;# 
  1401   00032B                     TMR3GCON        equ	811	;# 
  1402   00032C                     T3GATE          equ	812	;# 
  1403   00032C                     TMR3GATE        equ	812	;# 
  1404   00032D                     T3CLK           equ	813	;# 
  1405   00032D                     TMR3CLK         equ	813	;# 
  1406   00032D                     PR3             equ	813	;# 
  1407   00032E                     T4TMR           equ	814	;# 
  1408   00032E                     TMR4            equ	814	;# 
  1409   00032F                     T4PR            equ	815	;# 
  1410   00032F                     PR4             equ	815	;# 
  1411   000330                     T4CON           equ	816	;# 
  1412   000331                     T4HLT           equ	817	;# 
  1413   000332                     T4CLKCON        equ	818	;# 
  1414   000332                     T4CLK           equ	818	;# 
  1415   000333                     T4RST           equ	819	;# 
  1416   000334                     TMR5            equ	820	;# 
  1417   000334                     TMR5L           equ	820	;# 
  1418   000335                     TMR5H           equ	821	;# 
  1419   000336                     T5CON           equ	822	;# 
  1420   000336                     TMR5CON         equ	822	;# 
  1421   000337                     T5GCON          equ	823	;# 
  1422   000337                     TMR5GCON        equ	823	;# 
  1423   000338                     T5GATE          equ	824	;# 
  1424   000338                     TMR5GATE        equ	824	;# 
  1425   000339                     T5CLK           equ	825	;# 
  1426   000339                     TMR5CLK         equ	825	;# 
  1427   000339                     PR5             equ	825	;# 
  1428   00033A                     T6TMR           equ	826	;# 
  1429   00033A                     TMR6            equ	826	;# 
  1430   00033B                     T6PR            equ	827	;# 
  1431   00033B                     PR6             equ	827	;# 
  1432   00033C                     T6CON           equ	828	;# 
  1433   00033D                     T6HLT           equ	829	;# 
  1434   00033E                     T6CLKCON        equ	830	;# 
  1435   00033E                     T6CLK           equ	830	;# 
  1436   00033F                     T6RST           equ	831	;# 
  1437   000340                     CCPR1           equ	832	;# 
  1438   000340                     CCPR1L          equ	832	;# 
  1439   000341                     CCPR1H          equ	833	;# 
  1440   000342                     CCP1CON         equ	834	;# 
  1441   000343                     CCP1CAP         equ	835	;# 
  1442   000344                     CCPR2           equ	836	;# 
  1443   000344                     CCPR2L          equ	836	;# 
  1444   000345                     CCPR2H          equ	837	;# 
  1445   000346                     CCP2CON         equ	838	;# 
  1446   000347                     CCP2CAP         equ	839	;# 
  1447   000348                     CCPR3           equ	840	;# 
  1448   000348                     CCPR3L          equ	840	;# 
  1449   000349                     CCPR3H          equ	841	;# 
  1450   00034A                     CCP3CON         equ	842	;# 
  1451   00034B                     CCP3CAP         equ	843	;# 
  1452   00034C                     CCPTMRS0        equ	844	;# 
  1453   00034F                     CRCDATA         equ	847	;# 
  1454   00034F                     CRCDATL         equ	847	;# 
  1455   000350                     CRCDATH         equ	848	;# 
  1456   000351                     CRCACC          equ	849	;# 
  1457   000351                     CRCACCL         equ	849	;# 
  1458   000352                     CRCACCH         equ	850	;# 
  1459   000353                     CRCSHFT         equ	851	;# 
  1460   000353                     CRCSHIFTL       equ	851	;# 
  1461   000354                     CRCSHIFTH       equ	852	;# 
  1462   000355                     CRCXOR          equ	853	;# 
  1463   000355                     CRCXORL         equ	853	;# 
  1464   000356                     CRCXORH         equ	854	;# 
  1465   000357                     CRCCON0         equ	855	;# 
  1466   000358                     CRCCON1         equ	856	;# 
  1467   00035A                     SCANLADR        equ	858	;# 
  1468   00035A                     SCANLADRL       equ	858	;# 
  1469   00035B                     SCANLADRH       equ	859	;# 
  1470   00035C                     SCANLADRU       equ	860	;# 
  1471   00035D                     SCANHADR        equ	861	;# 
  1472   00035D                     SCANHADRL       equ	861	;# 
  1473   00035E                     SCANHADRH       equ	862	;# 
  1474   00035F                     SCANHADRU       equ	863	;# 
  1475   000360                     SCANCON0        equ	864	;# 
  1476   000361                     SCANTRIG        equ	865	;# 
  1477   000362                     IPR0            equ	866	;# 
  1478   000363                     IPR1            equ	867	;# 
  1479   000364                     IPR2            equ	868	;# 
  1480   000365                     IPR3            equ	869	;# 
  1481   000366                     IPR4            equ	870	;# 
  1482   000367                     IPR5            equ	871	;# 
  1483   000368                     IPR6            equ	872	;# 
  1484   000369                     IPR7            equ	873	;# 
  1485   00036A                     IPR8            equ	874	;# 
  1486   00036B                     IPR9            equ	875	;# 
  1487   00036C                     IPR10           equ	876	;# 
  1488   00036D                     IPR11           equ	877	;# 
  1489   00036E                     IPR12           equ	878	;# 
  1490   00036F                     IPR13           equ	879	;# 
  1491   000370                     IPR14           equ	880	;# 
  1492   000371                     IPR15           equ	881	;# 
  1493   000373                     STATUS_CSHAD    equ	883	;# 
  1494   000374                     WREG_CSHAD      equ	884	;# 
  1495   000375                     BSR_CSHAD       equ	885	;# 
  1496   000376                     SHADCON         equ	886	;# 
  1497   000377                     STATUS_SHAD     equ	887	;# 
  1498   000378                     WREG_SHAD       equ	888	;# 
  1499   000379                     BSR_SHAD        equ	889	;# 
  1500   00037A                     PCLATH_SHAD     equ	890	;# 
  1501   00037B                     PCLATU_SHAD     equ	891	;# 
  1502   00037C                     FSR0SH          equ	892	;# 
  1503   00037C                     FSR0L_SHAD      equ	892	;# 
  1504   00037D                     FSR0H_SHAD      equ	893	;# 
  1505   00037E                     FSR1SH          equ	894	;# 
  1506   00037E                     FSR1L_SHAD      equ	894	;# 
  1507   00037F                     FSR1H_SHAD      equ	895	;# 
  1508   000380                     FSR2SH          equ	896	;# 
  1509   000380                     FSR2L_SHAD      equ	896	;# 
  1510   000381                     FSR2H_SHAD      equ	897	;# 
  1511   000382                     PRODSH          equ	898	;# 
  1512   000382                     PRODL_SHAD      equ	898	;# 
  1513   000383                     PRODH_SHAD      equ	899	;# 
  1514   0003BC                     CWG1CLK         equ	956	;# 
  1515   0003BC                     CWG1CLKCON      equ	956	;# 
  1516   0003BD                     CWG1ISM         equ	957	;# 
  1517   0003BD                     CWG1DAT         equ	957	;# 
  1518   0003BE                     CWG1DBR         equ	958	;# 
  1519   0003BF                     CWG1DBF         equ	959	;# 
  1520   0003C0                     CWG1CON0        equ	960	;# 
  1521   0003C1                     CWG1CON1        equ	961	;# 
  1522   0003C2                     CWG1AS0         equ	962	;# 
  1523   0003C3                     CWG1AS1         equ	963	;# 
  1524   0003C4                     CWG1STR         equ	964	;# 
  1525   0003C5                     CWG2CLK         equ	965	;# 
  1526   0003C5                     CWG2CLKCON      equ	965	;# 
  1527   0003C6                     CWG2ISM         equ	966	;# 
  1528   0003C6                     CWG2DAT         equ	966	;# 
  1529   0003C7                     CWG2DBR         equ	967	;# 
  1530   0003C8                     CWG2DBF         equ	968	;# 
  1531   0003C9                     CWG2CON0        equ	969	;# 
  1532   0003CA                     CWG2CON1        equ	970	;# 
  1533   0003CB                     CWG2AS0         equ	971	;# 
  1534   0003CC                     CWG2AS1         equ	972	;# 
  1535   0003CD                     CWG2STR         equ	973	;# 
  1536   0003CE                     CWG3CLK         equ	974	;# 
  1537   0003CE                     CWG3CLKCON      equ	974	;# 
  1538   0003CF                     CWG3ISM         equ	975	;# 
  1539   0003CF                     CWG3DAT         equ	975	;# 
  1540   0003D0                     CWG3DBR         equ	976	;# 
  1541   0003D1                     CWG3DBF         equ	977	;# 
  1542   0003D2                     CWG3CON0        equ	978	;# 
  1543   0003D3                     CWG3CON1        equ	979	;# 
  1544   0003D4                     CWG3AS0         equ	980	;# 
  1545   0003D5                     CWG3AS1         equ	981	;# 
  1546   0003D6                     CWG3STR         equ	982	;# 
  1547   0003D7                     FVRCON          equ	983	;# 
  1548   0003D8                     ADCPCON         equ	984	;# 
  1549   0003D8                     ADCP            equ	984	;# 
  1550   0003D9                     ADLTH           equ	985	;# 
  1551   0003D9                     ADLTHL          equ	985	;# 
  1552   0003DA                     ADLTHH          equ	986	;# 
  1553   0003DB                     ADUTH           equ	987	;# 
  1554   0003DB                     ADUTHL          equ	987	;# 
  1555   0003DC                     ADUTHH          equ	988	;# 
  1556   0003DD                     ADERR           equ	989	;# 
  1557   0003DD                     ADERRL          equ	989	;# 
  1558   0003DE                     ADERRH          equ	990	;# 
  1559   0003DF                     ADSTPT          equ	991	;# 
  1560   0003DF                     ADSTPTL         equ	991	;# 
  1561   0003E0                     ADSTPTH         equ	992	;# 
  1562   0003E1                     ADFLTR          equ	993	;# 
  1563   0003E1                     ADFLTRL         equ	993	;# 
  1564   0003E2                     ADFLTRH         equ	994	;# 
  1565   0003E3                     ADACC           equ	995	;# 
  1566   0003E3                     ADACCL          equ	995	;# 
  1567   0003E4                     ADACCH          equ	996	;# 
  1568   0003E5                     ADACCU          equ	997	;# 
  1569   0003E6                     ADCNT           equ	998	;# 
  1570   0003E7                     ADRPT           equ	999	;# 
  1571   0003E8                     ADPREV          equ	1000	;# 
  1572   0003E8                     ADPREVL         equ	1000	;# 
  1573   0003E9                     ADPREVH         equ	1001	;# 
  1574   0003EA                     ADRES           equ	1002	;# 
  1575   0003EA                     ADRESL          equ	1002	;# 
  1576   0003EB                     ADRESH          equ	1003	;# 
  1577   0003EC                     ADPCH           equ	1004	;# 
  1578   0003EE                     ADACQ           equ	1006	;# 
  1579   0003EE                     ADACQL          equ	1006	;# 
  1580   0003EF                     ADACQH          equ	1007	;# 
  1581   0003F0                     ADCAP           equ	1008	;# 
  1582   0003F1                     ADPRE           equ	1009	;# 
  1583   0003F1                     ADPREL          equ	1009	;# 
  1584   0003F2                     ADPREH          equ	1010	;# 
  1585   0003F3                     ADCON0          equ	1011	;# 
  1586   0003F4                     ADCON1          equ	1012	;# 
  1587   0003F5                     ADCON2          equ	1013	;# 
  1588   0003F6                     ADCON3          equ	1014	;# 
  1589   0003F7                     ADSTAT          equ	1015	;# 
  1590   0003F8                     ADREF           equ	1016	;# 
  1591   0003F9                     ADACT           equ	1017	;# 
  1592   0003FA                     ADCLK           equ	1018	;# 
  1593   000400                     ANSELA          equ	1024	;# 
  1594   000401                     WPUA            equ	1025	;# 
  1595   000402                     ODCONA          equ	1026	;# 
  1596   000403                     SLRCONA         equ	1027	;# 
  1597   000404                     INLVLA          equ	1028	;# 
  1598   000405                     IOCAP           equ	1029	;# 
  1599   000406                     IOCAN           equ	1030	;# 
  1600   000407                     IOCAF           equ	1031	;# 
  1601   000408                     ANSELB          equ	1032	;# 
  1602   000409                     WPUB            equ	1033	;# 
  1603   00040A                     ODCONB          equ	1034	;# 
  1604   00040B                     SLRCONB         equ	1035	;# 
  1605   00040C                     INLVLB          equ	1036	;# 
  1606   00040D                     IOCBP           equ	1037	;# 
  1607   00040E                     IOCBN           equ	1038	;# 
  1608   00040F                     IOCBF           equ	1039	;# 
  1609   000410                     ANSELC          equ	1040	;# 
  1610   000411                     WPUC            equ	1041	;# 
  1611   000412                     ODCONC          equ	1042	;# 
  1612   000413                     SLRCONC         equ	1043	;# 
  1613   000414                     INLVLC          equ	1044	;# 
  1614   000415                     IOCCP           equ	1045	;# 
  1615   000416                     IOCCN           equ	1046	;# 
  1616   000417                     IOCCF           equ	1047	;# 
  1617   000418                     ANSELD          equ	1048	;# 
  1618   000419                     WPUD            equ	1049	;# 
  1619   00041A                     ODCOND          equ	1050	;# 
  1620   00041B                     SLRCOND         equ	1051	;# 
  1621   00041C                     INLVLD          equ	1052	;# 
  1622   000420                     ANSELE          equ	1056	;# 
  1623   000421                     WPUE            equ	1057	;# 
  1624   000422                     ODCONE          equ	1058	;# 
  1625   000423                     SLRCONE         equ	1059	;# 
  1626   000424                     INLVLE          equ	1060	;# 
  1627   000425                     IOCEP           equ	1061	;# 
  1628   000426                     IOCEN           equ	1062	;# 
  1629   000427                     IOCEF           equ	1063	;# 
  1630   000428                     ANSELF          equ	1064	;# 
  1631   000429                     WPUF            equ	1065	;# 
  1632   00042A                     ODCONF          equ	1066	;# 
  1633   00042B                     SLRCONF         equ	1067	;# 
  1634   00042C                     INLVLF          equ	1068	;# 
  1635   000440                     NCO1ACC         equ	1088	;# 
  1636   000440                     NCO1ACCL        equ	1088	;# 
  1637   000441                     NCO1ACCH        equ	1089	;# 
  1638   000442                     NCO1ACCU        equ	1090	;# 
  1639   000443                     NCO1INC         equ	1091	;# 
  1640   000443                     NCO1INCL        equ	1091	;# 
  1641   000444                     NCO1INCH        equ	1092	;# 
  1642   000445                     NCO1INCU        equ	1093	;# 
  1643   000446                     NCO1CON         equ	1094	;# 
  1644   000447                     NCO1CLK         equ	1095	;# 
  1645   000448                     NCO2ACC         equ	1096	;# 
  1646   000448                     NCO2ACCL        equ	1096	;# 
  1647   000449                     NCO2ACCH        equ	1097	;# 
  1648   00044A                     NCO2ACCU        equ	1098	;# 
  1649   00044B                     NCO2INC         equ	1099	;# 
  1650   00044B                     NCO2INCL        equ	1099	;# 
  1651   00044C                     NCO2INCH        equ	1100	;# 
  1652   00044D                     NCO2INCU        equ	1101	;# 
  1653   00044E                     NCO2CON         equ	1102	;# 
  1654   00044F                     NCO2CLK         equ	1103	;# 
  1655   000450                     NCO3ACC         equ	1104	;# 
  1656   000450                     NCO3ACCL        equ	1104	;# 
  1657   000451                     NCO3ACCH        equ	1105	;# 
  1658   000452                     NCO3ACCU        equ	1106	;# 
  1659   000453                     NCO3INC         equ	1107	;# 
  1660   000453                     NCO3INCL        equ	1107	;# 
  1661   000454                     NCO3INCH        equ	1108	;# 
  1662   000455                     NCO3INCU        equ	1109	;# 
  1663   000456                     NCO3CON         equ	1110	;# 
  1664   000457                     NCO3CLK         equ	1111	;# 
  1665   000459                     IVTLOCK         equ	1113	;# 
  1666   00045A                     IVTAD           equ	1114	;# 
  1667   00045A                     IVTADL          equ	1114	;# 
  1668   00045B                     IVTADH          equ	1115	;# 
  1669   00045C                     IVTADU          equ	1116	;# 
  1670   00045D                     IVTBASE         equ	1117	;# 
  1671   00045D                     IVTBASEL        equ	1117	;# 
  1672   00045E                     IVTBASEH        equ	1118	;# 
  1673   00045F                     IVTBASEU        equ	1119	;# 
  1674   000460                     PWM1ERS         equ	1120	;# 
  1675   000461                     PWM1CLK         equ	1121	;# 
  1676   000462                     PWM1LDS         equ	1122	;# 
  1677   000463                     PWM1PR          equ	1123	;# 
  1678   000463                     PWM1PRL         equ	1123	;# 
  1679   000464                     PWM1PRH         equ	1124	;# 
  1680   000465                     PWM1CPRE        equ	1125	;# 
  1681   000466                     PWM1PIPOS       equ	1126	;# 
  1682   000467                     PWM1GIR         equ	1127	;# 
  1683   000468                     PWM1GIE         equ	1128	;# 
  1684   000469                     PWM1CON         equ	1129	;# 
  1685   00046A                     PWM1S1CFG       equ	1130	;# 
  1686   00046B                     PWM1S1P1        equ	1131	;# 
  1687   00046B                     PWM1S1P1L       equ	1131	;# 
  1688   00046C                     PWM1S1P1H       equ	1132	;# 
  1689   00046D                     PWM1S1P2        equ	1133	;# 
  1690   00046D                     PWM1S1P2L       equ	1133	;# 
  1691   00046E                     PWM1S1P2H       equ	1134	;# 
  1692   00046F                     PWM2ERS         equ	1135	;# 
  1693   000470                     PWM2CLK         equ	1136	;# 
  1694   000471                     PWM2LDS         equ	1137	;# 
  1695   000472                     PWM2PR          equ	1138	;# 
  1696   000472                     PWM2PRL         equ	1138	;# 
  1697   000473                     PWM2PRH         equ	1139	;# 
  1698   000474                     PWM2CPRE        equ	1140	;# 
  1699   000475                     PWM2PIPOS       equ	1141	;# 
  1700   000476                     PWM2GIR         equ	1142	;# 
  1701   000477                     PWM2GIE         equ	1143	;# 
  1702   000478                     PWM2CON         equ	1144	;# 
  1703   000479                     PWM2S1CFG       equ	1145	;# 
  1704   00047A                     PWM2S1P1        equ	1146	;# 
  1705   00047A                     PWM2S1P1L       equ	1146	;# 
  1706   00047B                     PWM2S1P1H       equ	1147	;# 
  1707   00047C                     PWM2S1P2        equ	1148	;# 
  1708   00047C                     PWM2S1P2L       equ	1148	;# 
  1709   00047D                     PWM2S1P2H       equ	1149	;# 
  1710   00047E                     PWM3ERS         equ	1150	;# 
  1711   00047F                     PWM3CLK         equ	1151	;# 
  1712   000480                     PWM3LDS         equ	1152	;# 
  1713   000481                     PWM3PR          equ	1153	;# 
  1714   000481                     PWM3PRL         equ	1153	;# 
  1715   000482                     PWM3PRH         equ	1154	;# 
  1716   000483                     PWM3CPRE        equ	1155	;# 
  1717   000484                     PWM3PIPOS       equ	1156	;# 
  1718   000485                     PWM3GIR         equ	1157	;# 
  1719   000486                     PWM3GIE         equ	1158	;# 
  1720   000487                     PWM3CON         equ	1159	;# 
  1721   000488                     PWM3S1CFG       equ	1160	;# 
  1722   000489                     PWM3S1P1        equ	1161	;# 
  1723   000489                     PWM3S1P1L       equ	1161	;# 
  1724   00048A                     PWM3S1P1H       equ	1162	;# 
  1725   00048B                     PWM3S1P2        equ	1163	;# 
  1726   00048B                     PWM3S1P2L       equ	1163	;# 
  1727   00048C                     PWM3S1P2H       equ	1164	;# 
  1728   00049C                     PWMLOAD         equ	1180	;# 
  1729   00049D                     PWMEN           equ	1181	;# 
  1730   00049E                     PIE0            equ	1182	;# 
  1731   00049F                     PIE1            equ	1183	;# 
  1732   0004A0                     PIE2            equ	1184	;# 
  1733   0004A1                     PIE3            equ	1185	;# 
  1734   0004A2                     PIE4            equ	1186	;# 
  1735   0004A3                     PIE5            equ	1187	;# 
  1736   0004A4                     PIE6            equ	1188	;# 
  1737   0004A5                     PIE7            equ	1189	;# 
  1738   0004A6                     PIE8            equ	1190	;# 
  1739   0004A7                     PIE9            equ	1191	;# 
  1740   0004A8                     PIE10           equ	1192	;# 
  1741   0004A9                     PIE11           equ	1193	;# 
  1742   0004AA                     PIE12           equ	1194	;# 
  1743   0004AB                     PIE13           equ	1195	;# 
  1744   0004AC                     PIE14           equ	1196	;# 
  1745   0004AD                     PIE15           equ	1197	;# 
  1746   0004AE                     PIR0            equ	1198	;# 
  1747   0004AF                     PIR1            equ	1199	;# 
  1748   0004B0                     PIR2            equ	1200	;# 
  1749   0004B1                     PIR3            equ	1201	;# 
  1750   0004B2                     PIR4            equ	1202	;# 
  1751   0004B3                     PIR5            equ	1203	;# 
  1752   0004B4                     PIR6            equ	1204	;# 
  1753   0004B5                     PIR7            equ	1205	;# 
  1754   0004B6                     PIR8            equ	1206	;# 
  1755   0004B7                     PIR9            equ	1207	;# 
  1756   0004B8                     PIR10           equ	1208	;# 
  1757   0004B9                     PIR11           equ	1209	;# 
  1758   0004BA                     PIR12           equ	1210	;# 
  1759   0004BB                     PIR13           equ	1211	;# 
  1760   0004BC                     PIR14           equ	1212	;# 
  1761   0004BD                     PIR15           equ	1213	;# 
  1762   0004BE                     LATA            equ	1214	;# 
  1763   0004BF                     LATB            equ	1215	;# 
  1764   0004C0                     LATC            equ	1216	;# 
  1765   0004C1                     LATD            equ	1217	;# 
  1766   0004C2                     LATE            equ	1218	;# 
  1767   0004C3                     LATF            equ	1219	;# 
  1768   0004C6                     TRISA           equ	1222	;# 
  1769   0004C7                     TRISB           equ	1223	;# 
  1770   0004C8                     TRISC           equ	1224	;# 
  1771   0004C9                     TRISD           equ	1225	;# 
  1772   0004CA                     TRISE           equ	1226	;# 
  1773   0004CB                     TRISF           equ	1227	;# 
  1774   0004CE                     PORTA           equ	1230	;# 
  1775   0004CF                     PORTB           equ	1231	;# 
  1776   0004D0                     PORTC           equ	1232	;# 
  1777   0004D1                     PORTD           equ	1233	;# 
  1778   0004D2                     PORTE           equ	1234	;# 
  1779   0004D3                     PORTF           equ	1235	;# 
  1780   0004D6                     INTCON0         equ	1238	;# 
  1781   0004D7                     INTCON1         equ	1239	;# 
  1782   0004D8                     STATUS          equ	1240	;# 
  1783   0004D9                     FSR2            equ	1241	;# 
  1784   0004D9                     FSR2L           equ	1241	;# 
  1785   0004DA                     FSR2H           equ	1242	;# 
  1786   0004DB                     PLUSW2          equ	1243	;# 
  1787   0004DC                     PREINC2         equ	1244	;# 
  1788   0004DD                     POSTDEC2        equ	1245	;# 
  1789   0004DE                     POSTINC2        equ	1246	;# 
  1790   0004DF                     INDF2           equ	1247	;# 
  1791   0004E0                     BSR             equ	1248	;# 
  1792   0004E1                     FSR1            equ	1249	;# 
  1793   0004E1                     FSR1L           equ	1249	;# 
  1794   0004E2                     FSR1H           equ	1250	;# 
  1795   0004E3                     PLUSW1          equ	1251	;# 
  1796   0004E4                     PREINC1         equ	1252	;# 
  1797   0004E5                     POSTDEC1        equ	1253	;# 
  1798   0004E6                     POSTINC1        equ	1254	;# 
  1799   0004E7                     INDF1           equ	1255	;# 
  1800   0004E8                     WREG            equ	1256	;# 
  1801   0004E9                     FSR0            equ	1257	;# 
  1802   0004E9                     FSR0L           equ	1257	;# 
  1803   0004EA                     FSR0H           equ	1258	;# 
  1804   0004EB                     PLUSW0          equ	1259	;# 
  1805   0004EC                     PREINC0         equ	1260	;# 
  1806   0004ED                     POSTDEC0        equ	1261	;# 
  1807   0004EE                     POSTINC0        equ	1262	;# 
  1808   0004EF                     INDF0           equ	1263	;# 
  1809   0004F0                     PCON0           equ	1264	;# 
  1810   0004F1                     PCON1           equ	1265	;# 
  1811   0004F2                     CPUDOZE         equ	1266	;# 
  1812   0004F3                     PROD            equ	1267	;# 
  1813   0004F3                     PRODL           equ	1267	;# 
  1814   0004F4                     PRODH           equ	1268	;# 
  1815   0004F5                     TABLAT          equ	1269	;# 
  1816   0004F6                     TBLPTR          equ	1270	;# 
  1817   0004F6                     TBLPTRL         equ	1270	;# 
  1818   0004F7                     TBLPTRH         equ	1271	;# 
  1819   0004F8                     TBLPTRU         equ	1272	;# 
  1820   0004F9                     PCLAT           equ	1273	;# 
  1821   0004F9                     PCL             equ	1273	;# 
  1822   0004FA                     PCLATH          equ	1274	;# 
  1823   0004FB                     PCLATU          equ	1275	;# 
  1824   0004FC                     STKPTR          equ	1276	;# 
  1825   0004FD                     TOS             equ	1277	;# 
  1826   0004FD                     TOSL            equ	1277	;# 
  1827   0004FE                     TOSH            equ	1278	;# 
  1828   0004FF                     TOSU            equ	1279	;# 
  1829                           
  1830                           	psect	idataCOMRAM
  1831   003770                     __pidataCOMRAM:
  1832                           	callstack 0
  1833                           
  1834                           ;initializer for _I2C_LCD_ADDR
  1835   003770  27                 	db	39
  1836   0000B3                     _OSCEN          set	179
  1837   0000B1                     _OSCFRQ         set	177
  1838   0000AD                     _OSCCON1        set	173
  1839   00029A                     _I2C1PIRbits    set	666
  1840   000295                     _I2C1CON1bits   set	661
  1841   000299                     _I2C1STAT1bits  set	665
  1842   00028C                     _I2C1TXB        set	652
  1843   00028F                     _I2C1ADB1       set	655
  1844   00028D                     _I2C1CNT        set	653
  1845   000296                     _I2C1CON2bits   set	662
  1846   00029C                     _I2C1CLKbits    set	668
  1847   000294                     _I2C1CON0bits   set	660
  1848   000286                     _RC4I2Cbits     set	646
  1849   000287                     _RC3I2Cbits     set	647
  1850   000215                     _RC4PPS         set	533
  1851   000214                     _RC3PPS         set	532
  1852   00031C                     _TMR1           set	796
  1853   0003EB                     _ADRESH         set	1003
  1854   00031E                     _T1CONbits      set	798
  1855   00031C                     _TMR1L          set	796
  1856   00031D                     _TMR1H          set	797
  1857   00031E                     _T1CON          set	798
  1858   000321                     _T1CLK          set	801
  1859   0003F8                     _ADREF          set	1016
  1860   0003EC                     _ADPCH          set	1004
  1861   0003F3                     _ADCON0bits     set	1011
  1862   000428                     _ANSELFbits     set	1064
  1863   000420                     _ANSELEbits     set	1056
  1864   000400                     _ANSELAbits     set	1024
  1865   000412                     _ODCONCbits     set	1042
  1866   000410                     _ANSELCbits     set	1040
  1867   0004C3                     _LATFbits       set	1219
  1868   0004D0                     _PORTCbits      set	1232
  1869   0004C2                     _LATEbits       set	1218
  1870   0004CB                     _TRISFbits      set	1227
  1871   0004CA                     _TRISEbits      set	1226
  1872   0004C6                     _TRISAbits      set	1222
  1873   0004C8                     _TRISCbits      set	1224
  1874                           
  1875                           	psect	smallconst
  1876   002600                     __psmallconst:
  1877                           	callstack 0
  1878   002600  00                 	db	0
  1879   002601                     STR_2:
  1880   002601  49                 	db	73	;'I'
  1881   002602  6E                 	db	110	;'n'
  1882   002603  67                 	db	103	;'g'
  1883   002604  2E                 	db	46
  1884   002605  20                 	db	32
  1885   002606  42                 	db	66	;'B'
  1886   002607  69                 	db	105	;'i'
  1887   002608  6F                 	db	111	;'o'
  1888   002609  4D                 	db	77	;'M'
  1889   00260A  65                 	db	101	;'e'
  1890   00260B  63                 	db	99	;'c'
  1891   00260C  61                 	db	97	;'a'
  1892   00260D  45                 	db	69	;'E'
  1893   00260E  6C                 	db	108	;'l'
  1894   00260F  65                 	db	101	;'e'
  1895   002610  00                 	db	0
  1896   002611                     STR_1:
  1897   002611  53                 	db	83	;'S'
  1898   002612  65                 	db	101	;'e'
  1899   002613  6D                 	db	109	;'m'
  1900   002614  31                 	db	49	;'1'
  1901   002615  34                 	db	52	;'4'
  1902   002616  20                 	db	32
  1903   002617  55                 	db	85	;'U'
  1904   002618  50                 	db	80	;'P'
  1905   002619  43                 	db	67	;'C'
  1906   00261A  20                 	db	32
  1907   00261B  4D                 	db	77	;'M'
  1908   00261C  69                 	db	105	;'i'
  1909   00261D  63                 	db	99	;'c'
  1910   00261E  72                 	db	114	;'r'
  1911   00261F  6F                 	db	111	;'o'
  1912   002620  00                 	db	0
  1913   002621                     STR_3:
  1914   002621  41                 	db	65	;'A'
  1915   002622  44                 	db	68	;'D'
  1916   002623  43                 	db	67	;'C'
  1917   002624  5F                 	db	95	;'_'
  1918   002625  43                 	db	67	;'C'
  1919   002626  48                 	db	72	;'H'
  1920   002627  30                 	db	48	;'0'
  1921   002628  3A                 	db	58	;':'
  1922   002629  00                 	db	0
  1923   00262A                     STR_4:
  1924   00262A  44                 	db	68	;'D'
  1925   00262B  69                 	db	105	;'i'
  1926   00262C  73                 	db	115	;'s'
  1927   00262D  74                 	db	116	;'t'
  1928   00262E  3A                 	db	58	;':'
  1929   00262F  00                 	db	0
  1930   002630                     STR_5:
  1931   002630  63                 	db	99	;'c'
  1932   002631  6D                 	db	109	;'m'
  1933   002632  00                 	db	0
  1934   002633  00                 	db	0	; dummy byte at the end
  1935   002600                     __smallconst    set	__psmallconst
  1936   002600                     __mediumconst   set	__psmallconst
  1937   000003                     __activetblptr  equ	3
  1938                           
  1939                           ; #config settings
  1940                           
  1941                           	psect	cinit
  1942   003722                     __pcinit:
  1943                           	callstack 0
  1944   003722                     start_initialization:
  1945                           	callstack 0
  1946   003722                     __initialization:
  1947                           	callstack 0
  1948                           
  1949                           ; Initialize objects allocated to COMRAM (1 bytes)
  1950                           ; load TBLPTR registers with __pidataCOMRAM
  1951   003722  0E70               	movlw	low __pidataCOMRAM
  1952   003724  6EF6               	movwf	tblptrl,c
  1953   003726  0E37               	movlw	high __pidataCOMRAM
  1954   003728  6EF7               	movwf	tblptrh,c
  1955   00372A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1956   00372C  6EF8               	movwf	tblptru,c
  1957   00372E  0009               	tblrd		*+	;fetch initializer
  1958   003730  C4F5 F536          	movff	tablat,__pdataCOMRAM
  1959                           
  1960                           ; Clear objects allocated to COMRAM (5 bytes)
  1961   003734  6A35               	clrf	(__pbssCOMRAM+4)& (0+255),c
  1962   003736  6A34               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1963   003738  6A33               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1964   00373A  6A32               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1965   00373C  6A31               	clrf	__pbssCOMRAM& (0+255),c
  1966   00373E                     end_of_initialization:
  1967                           	callstack 0
  1968   00373E                     __end_of__initialization:
  1969                           	callstack 0
  1970   00373E  0100               	movlb	0
  1971   003740  EF4C  F018         	goto	_main	;jump to C main() function
  1972                           
  1973                           	psect	bssCOMRAM
  1974   000531                     __pbssCOMRAM:
  1975                           	callstack 0
  1976   000531                     _distancia_hcsr04:
  1977                           	callstack 0
  1978   000531                     	ds	2
  1979   000533                     _tmr1_count:
  1980                           	callstack 0
  1981   000533                     	ds	2
  1982   000535                     _lectura_ch0:
  1983                           	callstack 0
  1984   000535                     	ds	1
  1985                           
  1986                           	psect	dataCOMRAM
  1987   000536                     __pdataCOMRAM:
  1988                           	callstack 0
  1989   000536                     _I2C_LCD_ADDR:
  1990                           	callstack 0
  1991   000536                     	ds	1
  1992                           
  1993                           	psect	cstackCOMRAM
  1994   000501                     __pcstackCOMRAM:
  1995                           	callstack 0
  1996   000501                     ?_strlen:
  1997                           	callstack 0
  1998   000501                     ?___awmod:
  1999                           	callstack 0
  2000   000501                     ?___lwmod:
  2001                           	callstack 0
  2002   000501                     ?___fltol:
  2003                           	callstack 0
  2004   000501                     ?___xxtofl:
  2005                           	callstack 0
  2006   000501                     I2C1_WRITESINGLEBYTE@dato:
  2007                           	callstack 0
  2008   000501                     ___lbmod@divisor:
  2009                           	callstack 0
  2010   000501                     strlen@s:
  2011                           	callstack 0
  2012   000501                     ___awmod@dividend:
  2013                           	callstack 0
  2014   000501                     ___lwmod@dividend:
  2015                           	callstack 0
  2016   000501                     ___fltol@f1:
  2017                           	callstack 0
  2018   000501                     ___xxtofl@val:
  2019                           	callstack 0
  2020   000501                     
  2021                           ; 1 bytes @ 0x0
  2022   000501                     	ds	1
  2023   000502                     I2C1_WRITESINGLEBYTE@direccion:
  2024                           	callstack 0
  2025   000502                     ___lbmod@dividend:
  2026                           	callstack 0
  2027   000502                     
  2028                           ; 1 bytes @ 0x1
  2029   000502                     	ds	1
  2030   000503                     ___lbmod@counter:
  2031                           	callstack 0
  2032   000503                     strlen@a:
  2033                           	callstack 0
  2034   000503                     ___awmod@divisor:
  2035                           	callstack 0
  2036   000503                     ___lwmod@divisor:
  2037                           	callstack 0
  2038   000503                     ??_I2C_ENVIA_LCD_CMD:
  2039   000503                     ??_I2C_ENVIA_LCD_DATA:
  2040   000503                     
  2041                           ; 1 bytes @ 0x2
  2042   000503                     	ds	1
  2043   000504                     I2C_ENVIA_LCD_DATA@data:
  2044                           	callstack 0
  2045   000504                     I2C_ENVIA_LCD_CMD@command:
  2046                           	callstack 0
  2047   000504                     ___lbmod@rem:
  2048                           	callstack 0
  2049                           
  2050                           ; 1 bytes @ 0x3
  2051   000504                     	ds	1
  2052   000505                     I2C_ENVIA_LCD_DATA@highnibble:
  2053                           	callstack 0
  2054   000505                     I2C_ENVIA_LCD_CMD@highnibble:
  2055                           	callstack 0
  2056   000505                     ___awmod@counter:
  2057                           	callstack 0
  2058   000505                     ___lwmod@counter:
  2059                           	callstack 0
  2060   000505                     ??___fltol:
  2061   000505                     ??___xxtofl:
  2062                           
  2063                           ; 1 bytes @ 0x4
  2064   000505                     	ds	1
  2065   000506                     ?___lwdiv:
  2066                           	callstack 0
  2067   000506                     I2C_ENVIA_LCD_DATA@lownibble:
  2068                           	callstack 0
  2069   000506                     I2C_ENVIA_LCD_CMD@lownibble:
  2070                           	callstack 0
  2071   000506                     ___awmod@sign:
  2072                           	callstack 0
  2073   000506                     ___lwdiv@dividend:
  2074                           	callstack 0
  2075                           
  2076                           ; 2 bytes @ 0x5
  2077   000506                     	ds	1
  2078   000507                     I2C_POS_CURSOR@columna:
  2079                           	callstack 0
  2080   000507                     I2C_CURSOR_ONOFF@estado:
  2081                           	callstack 0
  2082   000507                     I2C_ESCRIBE_MENSAJE2@cadena:
  2083                           	callstack 0
  2084   000507                     ___lbdiv@divisor:
  2085                           	callstack 0
  2086   000507                     
  2087                           ; 1 bytes @ 0x6
  2088   000507                     	ds	1
  2089   000508                     ___lbdiv@dividend:
  2090                           	callstack 0
  2091   000508                     ___lwdiv@divisor:
  2092                           	callstack 0
  2093   000508                     ??_I2C_POS_CURSOR:
  2094   000508                     ??_I2C_ESCRIBE_MENSAJE2:
  2095   000508                     ??_I2C_LCD_INIT:
  2096   000508                     
  2097                           ; 1 bytes @ 0x7
  2098   000508                     	ds	1
  2099   000509                     I2C_POS_CURSOR@fila:
  2100                           	callstack 0
  2101   000509                     I2C_ESCRIBE_MENSAJE2@tam:
  2102                           	callstack 0
  2103   000509                     ___fltol@sign1:
  2104                           	callstack 0
  2105   000509                     ___lbdiv@counter:
  2106                           	callstack 0
  2107   000509                     ___xxtofl@sign:
  2108                           	callstack 0
  2109                           
  2110                           ; 1 bytes @ 0x8
  2111   000509                     	ds	1
  2112   00050A                     I2C_ESCRIBE_MENSAJE2@i:
  2113                           	callstack 0
  2114   00050A                     ___fltol@exp1:
  2115                           	callstack 0
  2116   00050A                     ___lbdiv@quotient:
  2117                           	callstack 0
  2118   00050A                     ___xxtofl@exp:
  2119                           	callstack 0
  2120   00050A                     ___lwdiv@quotient:
  2121                           	callstack 0
  2122   00050A                     
  2123                           ; 1 bytes @ 0x9
  2124   00050A                     	ds	1
  2125   00050B                     I2C_LCD_ESCRIBE_VAR_CHAR@n_digitos:
  2126                           	callstack 0
  2127   00050B                     ___xxtofl@arg:
  2128                           	callstack 0
  2129   00050B                     ??_pantallazo:
  2130                           
  2131                           ; 1 bytes @ 0xA
  2132   00050B                     	ds	1
  2133   00050C                     I2C_LCD_ESCRIBE_VAR_CHAR@centena:
  2134                           	callstack 0
  2135   00050C                     ___lwdiv@counter:
  2136                           	callstack 0
  2137   00050C                     
  2138                           ; 1 bytes @ 0xB
  2139   00050C                     	ds	1
  2140   00050D                     I2C_LCD_ESCRIBE_VAR_CHAR@decena:
  2141                           	callstack 0
  2142   00050D                     I2C_LCD_ESCRIBE_VAR_INT@numero:
  2143                           	callstack 0
  2144                           
  2145                           ; 2 bytes @ 0xC
  2146   00050D                     	ds	1
  2147   00050E                     I2C_LCD_ESCRIBE_VAR_CHAR@numero:
  2148                           	callstack 0
  2149                           
  2150                           ; 1 bytes @ 0xD
  2151   00050E                     	ds	1
  2152   00050F                     ?___fldiv:
  2153                           	callstack 0
  2154   00050F                     I2C_LCD_ESCRIBE_VAR_CHAR@unidad:
  2155                           	callstack 0
  2156   00050F                     I2C_LCD_ESCRIBE_VAR_INT@n_digitos:
  2157                           	callstack 0
  2158   00050F                     ___fldiv@b:
  2159                           	callstack 0
  2160                           
  2161                           ; 4 bytes @ 0xE
  2162   00050F                     	ds	1
  2163   000510                     I2C_LCD_ESCRIBE_VAR_INT@punto:
  2164                           	callstack 0
  2165                           
  2166                           ; 1 bytes @ 0xF
  2167   000510                     	ds	1
  2168   000511                     I2C_LCD_ESCRIBE_VAR_INT@d_millar:
  2169                           	callstack 0
  2170   000511                     
  2171                           ; 1 bytes @ 0x10
  2172   000511                     	ds	1
  2173   000512                     I2C_LCD_ESCRIBE_VAR_INT@millar:
  2174                           	callstack 0
  2175                           
  2176                           ; 1 bytes @ 0x11
  2177   000512                     	ds	1
  2178   000513                     I2C_LCD_ESCRIBE_VAR_INT@centena:
  2179                           	callstack 0
  2180   000513                     ___fldiv@a:
  2181                           	callstack 0
  2182                           
  2183                           ; 4 bytes @ 0x12
  2184   000513                     	ds	1
  2185   000514                     I2C_LCD_ESCRIBE_VAR_INT@decena:
  2186                           	callstack 0
  2187                           
  2188                           ; 1 bytes @ 0x13
  2189   000514                     	ds	1
  2190   000515                     I2C_LCD_ESCRIBE_VAR_INT@unidad:
  2191                           	callstack 0
  2192                           
  2193                           ; 1 bytes @ 0x14
  2194   000515                     	ds	2
  2195   000517                     ??___fldiv:
  2196                           
  2197                           ; 1 bytes @ 0x16
  2198   000517                     	ds	4
  2199   00051B                     ___fldiv@rem:
  2200                           	callstack 0
  2201                           
  2202                           ; 4 bytes @ 0x1A
  2203   00051B                     	ds	4
  2204   00051F                     ___fldiv@sign:
  2205                           	callstack 0
  2206                           
  2207                           ; 1 bytes @ 0x1E
  2208   00051F                     	ds	1
  2209   000520                     ___fldiv@new_exp:
  2210                           	callstack 0
  2211                           
  2212                           ; 2 bytes @ 0x1F
  2213   000520                     	ds	2
  2214   000522                     ___fldiv@grs:
  2215                           	callstack 0
  2216                           
  2217                           ; 4 bytes @ 0x21
  2218   000522                     	ds	4
  2219   000526                     ___fldiv@bexp:
  2220                           	callstack 0
  2221                           
  2222                           ; 1 bytes @ 0x25
  2223   000526                     	ds	1
  2224   000527                     ___fldiv@aexp:
  2225                           	callstack 0
  2226                           
  2227                           ; 1 bytes @ 0x26
  2228   000527                     	ds	1
  2229   000528                     ?_HCSR04_Distance:
  2230                           	callstack 0
  2231                           
  2232                           ; 2 bytes @ 0x27
  2233   000528                     	ds	2
  2234   00052A                     HCSR04_Distance@temporal:
  2235                           	callstack 0
  2236   00052A                     
  2237                           ; 1 bytes @ 0x29
  2238   00052A                     	ds	4
  2239   00052E                     HCSR04_Distance@distancia:
  2240                           	callstack 0
  2241                           
  2242                           ; 2 bytes @ 0x2D
  2243   00052E                     	ds	2
  2244   000530                     ??_main:
  2245                           
  2246                           ; 1 bytes @ 0x2F
  2247   000530                     	ds	1
  2248                           
  2249 ;;
  2250 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2251 ;;
  2252 ;; *************** function _main *****************
  2253 ;; Defined at:
  2254 ;;		line 64 in file "maincode03.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;		None
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;		None
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2272 ;;Total ram usage:        1 bytes
  2273 ;; Hardware stack levels required when called: 5
  2274 ;; This function calls:
  2275 ;;		_HCSR04_Distance
  2276 ;;		_I2C_ESCRIBE_MENSAJE2
  2277 ;;		_I2C_LCD_ESCRIBE_VAR_CHAR
  2278 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  2279 ;;		_I2C_POS_CURSOR
  2280 ;;		_configuro
  2281 ;;		_pantallazo
  2282 ;; This function is called by:
  2283 ;;		Startup code after reset
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text0
  2288   003098                     __ptext0:
  2289                           	callstack 0
  2290   003098                     _main:
  2291                           	callstack 122
  2292                           
  2293                           ;maincode03.c: 65:     configuro();
  2294                           
  2295                           ;incstack = 0
  2296   003098  ECBC  F01A         	call	_configuro	;wreg free
  2297                           
  2298                           ; BSR set to: 4
  2299                           ;maincode03.c: 66:     pantallazo();
  2300   00309C  ECFE  F01A         	call	_pantallazo	;wreg free
  2301   0030A0                     l2502:
  2302                           
  2303                           ;maincode03.c: 68:         ADCON0bits.GO_nDONE = 1;
  2304   0030A0  0103               	movlb	3	; () banked
  2305   0030A2  81F3               	bsf	243,0,b	;volatile
  2306   0030A4                     l278:
  2307                           
  2308                           ; BSR set to: 3
  2309   0030A4  B1F3               	btfsc	243,0,b	;volatile
  2310   0030A6  D7FE               	goto	l278
  2311                           
  2312                           ; BSR set to: 3
  2313                           ;maincode03.c: 70:         lectura_ch0 = ADRESH;
  2314   0030A8  C3EB F535          	movff	1003,_lectura_ch0	;volatile
  2315                           
  2316                           ; BSR set to: 3
  2317                           ;maincode03.c: 71:         I2C_POS_CURSOR(1,0);
  2318   0030AC  0E00               	movlw	0
  2319   0030AE  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  2320   0030B0  0E01               	movlw	1
  2321   0030B2  EC42  F01A         	call	_I2C_POS_CURSOR
  2322                           
  2323                           ;maincode03.c: 72:         I2C_ESCRIBE_MENSAJE2("ADC_CH0:");
  2324   0030B6  0E21               	movlw	low STR_3
  2325   0030B8  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2326   0030BA  EC3A  F01B         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  2327                           
  2328                           ;maincode03.c: 73:         I2C_LCD_ESCRIBE_VAR_CHAR(lectura_ch0,3);
  2329   0030BE  0E03               	movlw	3
  2330   0030C0  6E0B               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@n_digitos^(0+1280),c
  2331   0030C2  5035               	movf	_lectura_ch0^(0+1280),w,c
  2332   0030C4  EC5A  F019         	call	_I2C_LCD_ESCRIBE_VAR_CHAR
  2333                           
  2334                           ;maincode03.c: 74:         I2C_POS_CURSOR(2,0);
  2335   0030C8  0E00               	movlw	0
  2336   0030CA  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  2337   0030CC  0E02               	movlw	2
  2338   0030CE  EC42  F01A         	call	_I2C_POS_CURSOR
  2339                           
  2340                           ;maincode03.c: 75:         I2C_ESCRIBE_MENSAJE2("Dist:");
  2341   0030D2  0E2A               	movlw	low STR_4
  2342   0030D4  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2343   0030D6  EC3A  F01B         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  2344                           
  2345                           ;maincode03.c: 76:         distancia_hcsr04 = HCSR04_Distance();
  2346   0030DA  EC0F  F019         	call	_HCSR04_Distance	;wreg free
  2347   0030DE  C528  F531         	movff	?_HCSR04_Distance,_distancia_hcsr04
  2348   0030E2  C529  F532         	movff	?_HCSR04_Distance+1,_distancia_hcsr04+1
  2349                           
  2350                           ;maincode03.c: 77:         I2C_LCD_ESCRIBE_VAR_INT(distancia_hcsr04, 3, 0);
  2351   0030E6  C531  F50D         	movff	_distancia_hcsr04,I2C_LCD_ESCRIBE_VAR_INT@numero
  2352   0030EA  C532  F50E         	movff	_distancia_hcsr04+1,I2C_LCD_ESCRIBE_VAR_INT@numero+1
  2353   0030EE  0E03               	movlw	3
  2354   0030F0  6E0F               	movwf	I2C_LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
  2355   0030F2  0E00               	movlw	0
  2356   0030F4  6E10               	movwf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),c
  2357   0030F6  ECC4  F014         	call	_I2C_LCD_ESCRIBE_VAR_INT	;wreg free
  2358                           
  2359                           ;maincode03.c: 78:         I2C_ESCRIBE_MENSAJE2("cm");
  2360   0030FA  0E30               	movlw	low STR_5
  2361   0030FC  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2362   0030FE  EC3A  F01B         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  2363                           
  2364                           ;maincode03.c: 79:         if(distancia_hcsr04 <= 3){
  2365   003102  5032               	movf	(_distancia_hcsr04+1)^(0+1280),w,c
  2366   003104  E116               	bnz	l2524
  2367   003106  0E04               	movlw	4
  2368   003108  5C31               	subwf	_distancia_hcsr04^(0+1280),w,c
  2369   00310A  B0D8               	btfsc	status,0,c
  2370   00310C  D012               	goto	l2524
  2371                           
  2372                           ;maincode03.c: 80:             LATFbits.LATF3 = 1;
  2373   00310E  86C3               	bsf	195,3,c	;volatile
  2374                           
  2375                           ;maincode03.c: 81:             _delay((unsigned long)((700)*(32000000UL/4000000.0)));
  2376   003110  0E08               	movlw	8
  2377   003112  6E30               	movwf	??_main^(0+1280),c
  2378   003114  0E44               	movlw	68
  2379   003116                     u1497:
  2380   003116  2EE8               	decfsz	wreg,f,c
  2381   003118  D7FE               	bra	u1497
  2382   00311A  2E30               	decfsz	??_main^(0+1280),f,c
  2383   00311C  D7FC               	bra	u1497
  2384   00311E  D000               	nop2	
  2385                           
  2386                           ;maincode03.c: 82:             LATFbits.LATF3 = 0;
  2387   003120  96C3               	bcf	195,3,c	;volatile
  2388                           
  2389                           ;maincode03.c: 83:             _delay((unsigned long)((19300)*(32000000UL/4000000.0)));
  2390   003122  0EC9               	movlw	201
  2391   003124  6E30               	movwf	??_main^(0+1280),c
  2392   003126  0E84               	movlw	132
  2393   003128                     u1507:
  2394   003128  2EE8               	decfsz	wreg,f,c
  2395   00312A  D7FE               	bra	u1507
  2396   00312C  2E30               	decfsz	??_main^(0+1280),f,c
  2397   00312E  D7FC               	bra	u1507
  2398                           
  2399                           ;maincode03.c: 84:         }
  2400   003130  D7B7               	goto	l2502
  2401   003132                     l2524:
  2402   003132  5032               	movf	(_distancia_hcsr04+1)^(0+1280),w,c
  2403   003134  E104               	bnz	u1480
  2404   003136  0E06               	movlw	6
  2405   003138  5C31               	subwf	_distancia_hcsr04^(0+1280),w,c
  2406   00313A  A0D8               	btfss	status,0,c
  2407   00313C  D7B1               	goto	l2502
  2408   00313E                     u1480:
  2409                           
  2410                           ;maincode03.c: 86:             LATFbits.LATF3 = 1;
  2411   00313E  86C3               	bsf	195,3,c	;volatile
  2412                           
  2413                           ;maincode03.c: 87:             _delay((unsigned long)((2300)*(32000000UL/4000000.0)));
  2414   003140  0E18               	movlw	24
  2415   003142  6E30               	movwf	??_main^(0+1280),c
  2416   003144  0EE4               	movlw	228
  2417   003146                     u1517:
  2418   003146  2EE8               	decfsz	wreg,f,c
  2419   003148  D7FE               	bra	u1517
  2420   00314A  2E30               	decfsz	??_main^(0+1280),f,c
  2421   00314C  D7FC               	bra	u1517
  2422   00314E  D000               	nop2	
  2423                           
  2424                           ;maincode03.c: 88:             LATFbits.LATF3 = 0;
  2425   003150  96C3               	bcf	195,3,c	;volatile
  2426                           
  2427                           ;maincode03.c: 89:             _delay((unsigned long)((17700)*(32000000UL/4000000.0)));
  2428   003152  0EB8               	movlw	184
  2429   003154  6E30               	movwf	??_main^(0+1280),c
  2430   003156  0EE4               	movlw	228
  2431   003158                     u1527:
  2432   003158  2EE8               	decfsz	wreg,f,c
  2433   00315A  D7FE               	bra	u1527
  2434   00315C  2E30               	decfsz	??_main^(0+1280),f,c
  2435   00315E  D7FC               	bra	u1527
  2436   003160  D000               	nop2	
  2437   003162  D79E               	goto	l2502
  2438   003164                     __end_of_main:
  2439                           	callstack 0
  2440                           
  2441 ;; *************** function _pantallazo *****************
  2442 ;; Defined at:
  2443 ;;		line 36 in file "maincode03.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 3F/4
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2459 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2460 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2461 ;;Total ram usage:        2 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; Hardware stack levels required when called: 3
  2464 ;; This function calls:
  2465 ;;		_I2C_BORRAR_LCD
  2466 ;;		_I2C_ESCRIBE_MENSAJE2
  2467 ;;		_I2C_POS_CURSOR
  2468 ;; This function is called by:
  2469 ;;		_main
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text1
  2474   0035FC                     __ptext1:
  2475                           	callstack 0
  2476   0035FC                     _pantallazo:
  2477                           	callstack 123
  2478                           
  2479                           ; BSR set to: 4
  2480                           ;maincode03.c: 37:     I2C_POS_CURSOR(1,0);
  2481                           
  2482                           ;incstack = 0
  2483   0035FC  0E00               	movlw	0
  2484   0035FE  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  2485   003600  0E01               	movlw	1
  2486   003602  EC42  F01A         	call	_I2C_POS_CURSOR
  2487                           
  2488                           ;maincode03.c: 38:     I2C_ESCRIBE_MENSAJE2("Sem14 UPC Micro");
  2489   003606  0E11               	movlw	low STR_1
  2490   003608  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2491   00360A  EC3A  F01B         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  2492                           
  2493                           ;maincode03.c: 39:     I2C_POS_CURSOR(2,0);
  2494   00360E  0E00               	movlw	0
  2495   003610  6E07               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
  2496   003612  0E02               	movlw	2
  2497   003614  EC42  F01A         	call	_I2C_POS_CURSOR
  2498                           
  2499                           ;maincode03.c: 40:     I2C_ESCRIBE_MENSAJE2("Ing. BioMecaEle");
  2500   003618  0E01               	movlw	low STR_2
  2501   00361A  6E07               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2502   00361C  EC3A  F01B         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
  2503                           
  2504                           ;maincode03.c: 41:     _delay((unsigned long)((3000)*(32000000UL/4000.0)));
  2505   003620  0E7A               	movlw	122
  2506   003622  6E0C               	movwf	(??_pantallazo+1)^(0+1280),c
  2507   003624  0EC1               	movlw	193
  2508   003626  6E0B               	movwf	??_pantallazo^(0+1280),c
  2509   003628  0E82               	movlw	130
  2510   00362A                     u1537:
  2511   00362A  2EE8               	decfsz	wreg,f,c
  2512   00362C  D7FE               	bra	u1537
  2513   00362E  2E0B               	decfsz	??_pantallazo^(0+1280),f,c
  2514   003630  D7FC               	bra	u1537
  2515   003632  2E0C               	decfsz	(??_pantallazo+1)^(0+1280),f,c
  2516   003634  D7FA               	bra	u1537
  2517                           
  2518                           ;maincode03.c: 42:     I2C_BORRAR_LCD();
  2519   003636  ECB4  F01B         	call	_I2C_BORRAR_LCD	;wreg free
  2520   00363A  0012               	return		;funcret
  2521   00363C                     __end_of_pantallazo:
  2522                           	callstack 0
  2523                           
  2524 ;; *************** function _I2C_POS_CURSOR *****************
  2525 ;; Defined at:
  2526 ;;		line 70 in file "I2C_LCD.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  fila            1    wreg     unsigned char 
  2529 ;;  columna         1    6[COMRAM] unsigned char 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  fila            1    8[COMRAM] unsigned char 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, status,2, status,0, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/3
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2541 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2543 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2544 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2545 ;;Total ram usage:        3 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 2
  2548 ;; This function calls:
  2549 ;;		_I2C_ENVIA_LCD_CMD
  2550 ;; This function is called by:
  2551 ;;		_pantallazo
  2552 ;;		_main
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text2
  2557   003484                     __ptext2:
  2558                           	callstack 0
  2559   003484                     _I2C_POS_CURSOR:
  2560                           	callstack 123
  2561                           
  2562                           ;incstack = 0
  2563                           ;I2C_POS_CURSOR@fila stored from wreg
  2564   003484  6E09               	movwf	I2C_POS_CURSOR@fila^(0+1280),c
  2565                           
  2566                           ;I2C_LCD.c: 71:  if(fila == 1){
  2567   003486  0409               	decf	I2C_POS_CURSOR@fila^(0+1280),w,c
  2568   003488  A4D8               	btfss	status,2,c
  2569   00348A  D005               	goto	l1824
  2570                           
  2571                           ;I2C_LCD.c: 72:   I2C_ENVIA_LCD_CMD(0x80+columna);
  2572   00348C  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  2573   00348E  0F80               	addlw	128
  2574   003490  EC0E  F01A         	call	_I2C_ENVIA_LCD_CMD
  2575                           
  2576                           ;I2C_LCD.c: 73:  }
  2577   003494  D01A               	goto	l66
  2578   003496                     l1824:
  2579   003496  0E02               	movlw	2
  2580   003498  1809               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  2581   00349A  A4D8               	btfss	status,2,c
  2582   00349C  D005               	goto	l1828
  2583                           
  2584                           ;I2C_LCD.c: 75:   I2C_ENVIA_LCD_CMD(0xC0+columna);
  2585   00349E  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  2586   0034A0  0FC0               	addlw	192
  2587   0034A2  EC0E  F01A         	call	_I2C_ENVIA_LCD_CMD
  2588                           
  2589                           ;I2C_LCD.c: 76:  }
  2590   0034A6  D011               	goto	l66
  2591   0034A8                     l1828:
  2592   0034A8  0E03               	movlw	3
  2593   0034AA  1809               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  2594   0034AC  A4D8               	btfss	status,2,c
  2595   0034AE  D005               	goto	l1832
  2596                           
  2597                           ;I2C_LCD.c: 78:   I2C_ENVIA_LCD_CMD(0x94+columna);
  2598   0034B0  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  2599   0034B2  0F94               	addlw	148
  2600   0034B4  EC0E  F01A         	call	_I2C_ENVIA_LCD_CMD
  2601                           
  2602                           ;I2C_LCD.c: 79:  }
  2603   0034B8  D008               	goto	l66
  2604   0034BA                     l1832:
  2605   0034BA  0E04               	movlw	4
  2606   0034BC  1809               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  2607   0034BE  A4D8               	btfss	status,2,c
  2608   0034C0  D004               	goto	l66
  2609                           
  2610                           ;I2C_LCD.c: 81:   I2C_ENVIA_LCD_CMD(0xD4+columna);
  2611   0034C2  5007               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  2612   0034C4  0FD4               	addlw	212
  2613   0034C6  EC0E  F01A         	call	_I2C_ENVIA_LCD_CMD
  2614   0034CA                     l66:
  2615                           
  2616                           ;I2C_LCD.c: 83:  _delay((unsigned long)((1)*(32000000UL/4000.0)));
  2617   0034CA  0E0B               	movlw	11
  2618   0034CC  6E08               	movwf	??_I2C_POS_CURSOR^(0+1280),c
  2619   0034CE  0E62               	movlw	98
  2620   0034D0                     u1547:
  2621   0034D0  2EE8               	decfsz	wreg,f,c
  2622   0034D2  D7FE               	bra	u1547
  2623   0034D4  2E08               	decfsz	??_I2C_POS_CURSOR^(0+1280),f,c
  2624   0034D6  D7FC               	bra	u1547
  2625   0034D8  D000               	nop2	
  2626   0034DA  0012               	return		;funcret
  2627   0034DC                     __end_of_I2C_POS_CURSOR:
  2628                           	callstack 0
  2629                           
  2630 ;; *************** function _I2C_ESCRIBE_MENSAJE2 *****************
  2631 ;; Defined at:
  2632 ;;		line 128 in file "I2C_LCD.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  cadena          1    6[COMRAM] PTR const unsigned char 
  2635 ;;		 -> STR_5(3), STR_4(6), STR_3(9), STR_2(16), 
  2636 ;;		 -> STR_1(16), 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  i               1    9[COMRAM] unsigned char 
  2639 ;;  tam             1    8[COMRAM] unsigned char 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/3
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2649 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2652 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2653 ;;Total ram usage:        4 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; Hardware stack levels required when called: 2
  2656 ;; This function calls:
  2657 ;;		_I2C_ENVIA_LCD_DATA
  2658 ;;		_strlen
  2659 ;; This function is called by:
  2660 ;;		_pantallazo
  2661 ;;		_main
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text3
  2666   003674                     __ptext3:
  2667                           	callstack 0
  2668   003674                     _I2C_ESCRIBE_MENSAJE2:
  2669                           	callstack 123
  2670                           
  2671                           ;I2C_LCD.c: 129:     unsigned char tam;;I2C_LCD.c: 130:     tam = strlen(cadena);
  2672                           
  2673                           ;incstack = 0
  2674   003674  C507  F501         	movff	I2C_ESCRIBE_MENSAJE2@cadena,strlen@s
  2675   003678  EC55  F01B         	call	_strlen	;wreg free
  2676   00367C  5001               	movf	?_strlen^(0+1280),w,c
  2677   00367E  6E09               	movwf	I2C_ESCRIBE_MENSAJE2@tam^(0+1280),c
  2678                           
  2679                           ;I2C_LCD.c: 132:  for(i = 0; i<tam; i++) {
  2680   003680  6A0A               	clrf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),c
  2681   003682  D00E               	goto	l1848
  2682   003684                     l1844:
  2683                           
  2684                           ;I2C_LCD.c: 133:   I2C_ENVIA_LCD_DATA(cadena[i]);
  2685   003684  5007               	movf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  2686   003686  240A               	addwf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2687   003688  6E08               	movwf	??_I2C_ESCRIBE_MENSAJE2^(0+1280),c
  2688   00368A  C508  F4F6         	movff	??_I2C_ESCRIBE_MENSAJE2,tblptrl
  2689   00368E                     	if	1	;There is more than 1 active tblptr byte
  2690   00368E  0E26               	movlw	high __psmallconst
  2691   003690  6EF7               	movwf	tblptrh,c
  2692   003692                     	endif
  2693   003692                     	if	0	;tblptru may be non-zero
  2694   003692                     	endif
  2695   003692                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2696   003692  0E00               	movlw	low (__psmallconst shr (0+16))
  2697   003694  6EF8               	movwf	tblptru,c
  2698   003696                     	endif
  2699   003696  0008               	tblrd		*
  2700   003698  50F5               	movf	tablat,w,c
  2701   00369A  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  2702                           
  2703                           ;I2C_LCD.c: 134:  }
  2704   00369E  2A0A               	incf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),f,c
  2705   0036A0                     l1848:
  2706   0036A0  5009               	movf	I2C_ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  2707   0036A2  5C0A               	subwf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2708   0036A4  B0D8               	btfsc	status,0,c
  2709   0036A6  0012               	return	
  2710   0036A8  D7ED               	goto	l1844
  2711   0036AA                     __end_of_I2C_ESCRIBE_MENSAJE2:
  2712                           	callstack 0
  2713                           
  2714 ;; *************** function _strlen *****************
  2715 ;; Defined at:
  2716 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2719 ;;		 -> STR_5(3), STR_4(6), STR_3(9), STR_2(16), 
  2720 ;;		 -> STR_1(16), 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2723 ;;		 -> STR_5(3), STR_4(6), STR_3(9), STR_2(16), 
  2724 ;;		 -> STR_1(16), 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  2    0[COMRAM] unsigned int 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/3
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2735 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2737 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2738 ;;Total ram usage:        3 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_I2C_ESCRIBE_MENSAJE2
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text4
  2748   0036AA                     __ptext4:
  2749                           	callstack 0
  2750   0036AA                     _strlen:
  2751                           	callstack 124
  2752                           
  2753                           ;incstack = 0
  2754   0036AA  C501  F503         	movff	strlen@s,strlen@a
  2755   0036AE  D001               	goto	l1812
  2756   0036B0                     l1810:
  2757   0036B0  2A01               	incf	strlen@s^(0+1280),f,c
  2758   0036B2                     l1812:
  2759   0036B2  C501  F4F6         	movff	strlen@s,tblptrl
  2760   0036B6                     	if	1	;There is more than 1 active tblptr byte
  2761   0036B6  0E26               	movlw	high __psmallconst
  2762   0036B8  6EF7               	movwf	tblptrh,c
  2763   0036BA                     	endif
  2764   0036BA                     	if	0	;tblptru may be non-zero
  2765   0036BA                     	endif
  2766   0036BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2767   0036BA  0E00               	movlw	low (__psmallconst shr (0+16))
  2768   0036BC  6EF8               	movwf	tblptru,c
  2769   0036BE                     	endif
  2770   0036BE  0008               	tblrd		*
  2771   0036C0  50F5               	movf	tablat,w,c
  2772   0036C2  0900               	iorlw	0
  2773   0036C4  A4D8               	btfss	status,2,c
  2774   0036C6  D7F4               	goto	l1810
  2775   0036C8  5003               	movf	strlen@a^(0+1280),w,c
  2776   0036CA  5C01               	subwf	strlen@s^(0+1280),w,c
  2777   0036CC  6E01               	movwf	?_strlen^(0+1280),c
  2778   0036CE  6A02               	clrf	(?_strlen+1)^(0+1280),c
  2779   0036D0  BE01               	btfsc	?_strlen^(0+1280),7,c
  2780   0036D2  0602               	decf	(?_strlen+1)^(0+1280),f,c
  2781   0036D4  0012               	return		;funcret
  2782   0036D6                     __end_of_strlen:
  2783                           	callstack 0
  2784                           
  2785 ;; *************** function _configuro *****************
  2786 ;; Defined at:
  2787 ;;		line 11 in file "maincode03.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 3F/4
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2805 ;;Total ram usage:        0 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; Hardware stack levels required when called: 4
  2808 ;; This function calls:
  2809 ;;		_I2C_LCD_INIT
  2810 ;; This function is called by:
  2811 ;;		_main
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text5
  2816   003578                     __ptext5:
  2817                           	callstack 0
  2818   003578                     _configuro:
  2819                           	callstack 122
  2820                           
  2821                           ;maincode03.c: 12:     OSCCON1 = 0x60;
  2822                           
  2823                           ;incstack = 0
  2824   003578  0E60               	movlw	96
  2825   00357A  0100               	movlb	0	; () banked
  2826   00357C  6FAD               	movwf	173,b	;volatile
  2827                           
  2828                           ;maincode03.c: 13:     OSCFRQ = 0x06;
  2829   00357E  0E06               	movlw	6
  2830   003580  6FB1               	movwf	177,b	;volatile
  2831                           
  2832                           ;maincode03.c: 14:     OSCEN = 0x40;
  2833   003582  0E40               	movlw	64
  2834   003584  6FB3               	movwf	179,b	;volatile
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;maincode03.c: 15:     I2C_LCD_INIT();
  2838   003586  EC1A  F013         	call	_I2C_LCD_INIT	;wreg free
  2839                           
  2840                           ;maincode03.c: 17:     TRISAbits.TRISA0 = 1;
  2841   00358A  80C6               	bsf	198,0,c	;volatile
  2842                           
  2843                           ;maincode03.c: 18:     ANSELAbits.ANSELA0 = 1;
  2844   00358C  0104               	movlb	4	; () banked
  2845   00358E  8100               	bsf	0,0,b	;volatile
  2846                           
  2847                           ; BSR set to: 4
  2848                           ;maincode03.c: 19:     ADCON0bits.CS = 1;
  2849   003590  0103               	movlb	3	; () banked
  2850   003592  89F3               	bsf	243,4,b	;volatile
  2851                           
  2852                           ; BSR set to: 3
  2853                           ;maincode03.c: 20:     ADCON0bits.ADFM = 0;
  2854   003594  0EF3               	movlw	-13
  2855   003596  17F3               	andwf	243,f,b	;volatile
  2856                           
  2857                           ; BSR set to: 3
  2858                           ;maincode03.c: 21:     ADPCH = 0x00;
  2859   003598  6BEC               	clrf	236,b	;volatile
  2860                           
  2861                           ; BSR set to: 3
  2862                           ;maincode03.c: 22:     ADREF = 0x00;
  2863   00359A  6BF8               	clrf	248,b	;volatile
  2864                           
  2865                           ; BSR set to: 3
  2866                           ;maincode03.c: 23:     ADCON0bits.ADON = 1;
  2867   00359C  8FF3               	bsf	243,7,b	;volatile
  2868                           
  2869                           ; BSR set to: 3
  2870                           ;maincode03.c: 25:     TRISEbits.TRISE0 = 0;
  2871   00359E  90CA               	bcf	202,0,c	;volatile
  2872                           
  2873                           ; BSR set to: 3
  2874                           ;maincode03.c: 26:     ANSELEbits.ANSELE0 = 0;
  2875   0035A0  0104               	movlb	4	; () banked
  2876   0035A2  9120               	bcf	32,0,b	;volatile
  2877                           
  2878                           ; BSR set to: 4
  2879                           ;maincode03.c: 27:     TRISCbits.TRISC1 = 1;
  2880   0035A4  82C8               	bsf	200,1,c	;volatile
  2881                           
  2882                           ; BSR set to: 4
  2883                           ;maincode03.c: 28:     ANSELCbits.ANSELC1 = 0;
  2884   0035A6  9310               	bcf	16,1,b	;volatile
  2885                           
  2886                           ; BSR set to: 4
  2887                           ;maincode03.c: 29:     T1CLK = 0x01;
  2888   0035A8  0E01               	movlw	1
  2889   0035AA  0103               	movlb	3	; () banked
  2890   0035AC  6F21               	movwf	33,b	;volatile
  2891                           
  2892                           ; BSR set to: 3
  2893                           ;maincode03.c: 30:     T1CON = 0x32;
  2894   0035AE  0E32               	movlw	50
  2895   0035B0  6F1E               	movwf	30,b	;volatile
  2896                           
  2897                           ; BSR set to: 3
  2898                           ;maincode03.c: 32:     TRISFbits.TRISF3 = 0;
  2899   0035B2  96CB               	bcf	203,3,c	;volatile
  2900                           
  2901                           ; BSR set to: 3
  2902                           ;maincode03.c: 33:     ANSELFbits.ANSELF3 = 0;
  2903   0035B4  0104               	movlb	4	; () banked
  2904   0035B6  9728               	bcf	40,3,b	;volatile
  2905                           
  2906                           ; BSR set to: 4
  2907   0035B8  0012               	return		;funcret
  2908   0035BA                     __end_of_configuro:
  2909                           	callstack 0
  2910                           
  2911 ;; *************** function _I2C_LCD_INIT *****************
  2912 ;; Defined at:
  2913 ;;		line 187 in file "I2C_LCD.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 3F/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2929 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2931 ;;Total ram usage:        2 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 3
  2934 ;; This function calls:
  2935 ;;		_I2C1_INIT
  2936 ;;		_I2C1_WRITESINGLEBYTE
  2937 ;;		_I2C_BORRAR_LCD
  2938 ;;		_I2C_CURSOR_HOME
  2939 ;;		_I2C_CURSOR_ONOFF
  2940 ;; This function is called by:
  2941 ;;		_configuro
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	text6
  2946   002634                     __ptext6:
  2947                           	callstack 0
  2948   002634                     _I2C_LCD_INIT:
  2949                           	callstack 122
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;I2C_LCD.c: 188:     I2C1_INIT();
  2953                           
  2954                           ; BSR set to: 4
  2955                           ;incstack = 0
  2956   002634  EC97  F01A         	call	_I2C1_INIT	;wreg free
  2957                           
  2958                           ; BSR set to: 2
  2959                           ;I2C_LCD.c: 189:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  2960   002638  0E9C               	movlw	156
  2961   00263A  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  2962   00263C  0ED7               	movlw	215
  2963   00263E                     u1557:
  2964   00263E  2EE8               	decfsz	wreg,f,c
  2965   002640  D7FE               	bra	u1557
  2966   002642  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  2967   002644  D7FC               	bra	u1557
  2968   002646  0000               	nop	
  2969                           
  2970                           ;I2C_LCD.c: 191:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  2971   002648  0E00               	movlw	0
  2972   00264A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2973   00264C  0E27               	movlw	39
  2974   00264E  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  2975                           
  2976                           ; BSR set to: 2
  2977                           ;I2C_LCD.c: 192:     _delay((unsigned long)((1000)*(32000000UL/4000.0)));
  2978   002652  0E29               	movlw	41
  2979   002654  6E09               	movwf	(??_I2C_LCD_INIT+1)^(0+1280),c
  2980   002656  0E96               	movlw	150
  2981   002658  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  2982   00265A  0E7F               	movlw	127
  2983   00265C                     u1567:
  2984   00265C  2EE8               	decfsz	wreg,f,c
  2985   00265E  D7FE               	bra	u1567
  2986   002660  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  2987   002662  D7FC               	bra	u1567
  2988   002664  2E09               	decfsz	(??_I2C_LCD_INIT+1)^(0+1280),f,c
  2989   002666  D7FA               	bra	u1567
  2990   002668  0000               	nop	
  2991                           
  2992                           ;I2C_LCD.c: 195:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  2993   00266A  0E30               	movlw	48
  2994   00266C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2995   00266E  0E27               	movlw	39
  2996   002670  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  2997                           
  2998                           ; BSR set to: 2
  2999                           ;I2C_LCD.c: 196:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  3000   002674  0E30               	movlw	48
  3001   002676  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3002   002678  0E27               	movlw	39
  3003   00267A  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3004                           
  3005                           ; BSR set to: 2
  3006                           ;I2C_LCD.c: 197:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3007   00267E  0E35               	movlw	53
  3008   002680                     u1577:
  3009   002680  2EE8               	decfsz	wreg,f,c
  3010   002682  D7FE               	bra	u1577
  3011   002684  0000               	nop	
  3012                           
  3013                           ;I2C_LCD.c: 198:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x34);
  3014   002686  0E34               	movlw	52
  3015   002688  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3016   00268A  0E27               	movlw	39
  3017   00268C  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3018                           
  3019                           ; BSR set to: 2
  3020                           ;I2C_LCD.c: 199:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3021   002690  0E35               	movlw	53
  3022   002692                     u1587:
  3023   002692  2EE8               	decfsz	wreg,f,c
  3024   002694  D7FE               	bra	u1587
  3025   002696  0000               	nop	
  3026                           
  3027                           ;I2C_LCD.c: 200:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  3028   002698  0E30               	movlw	48
  3029   00269A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3030   00269C  0E27               	movlw	39
  3031   00269E  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3032                           
  3033                           ; BSR set to: 2
  3034                           ;I2C_LCD.c: 201:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
  3035   0026A2  0E34               	movlw	52
  3036   0026A4  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  3037   0026A6  0EF2               	movlw	242
  3038   0026A8                     u1597:
  3039   0026A8  2EE8               	decfsz	wreg,f,c
  3040   0026AA  D7FE               	bra	u1597
  3041   0026AC  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  3042   0026AE  D7FC               	bra	u1597
  3043                           
  3044                           ;I2C_LCD.c: 203:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  3045   0026B0  0E30               	movlw	48
  3046   0026B2  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3047   0026B4  0E27               	movlw	39
  3048   0026B6  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3049                           
  3050                           ; BSR set to: 2
  3051                           ;I2C_LCD.c: 204:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3052   0026BA  0E35               	movlw	53
  3053   0026BC                     u1607:
  3054   0026BC  2EE8               	decfsz	wreg,f,c
  3055   0026BE  D7FE               	bra	u1607
  3056   0026C0  0000               	nop	
  3057                           
  3058                           ;I2C_LCD.c: 205:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x34);
  3059   0026C2  0E34               	movlw	52
  3060   0026C4  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3061   0026C6  0E27               	movlw	39
  3062   0026C8  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3063                           
  3064                           ; BSR set to: 2
  3065                           ;I2C_LCD.c: 206:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3066   0026CC  0E35               	movlw	53
  3067   0026CE                     u1617:
  3068   0026CE  2EE8               	decfsz	wreg,f,c
  3069   0026D0  D7FE               	bra	u1617
  3070   0026D2  0000               	nop	
  3071                           
  3072                           ;I2C_LCD.c: 207:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  3073   0026D4  0E30               	movlw	48
  3074   0026D6  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3075   0026D8  0E27               	movlw	39
  3076   0026DA  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3077                           
  3078                           ; BSR set to: 2
  3079                           ;I2C_LCD.c: 209:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
  3080   0026DE  0E34               	movlw	52
  3081   0026E0  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  3082   0026E2  0EF2               	movlw	242
  3083   0026E4                     u1627:
  3084   0026E4  2EE8               	decfsz	wreg,f,c
  3085   0026E6  D7FE               	bra	u1627
  3086   0026E8  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  3087   0026EA  D7FC               	bra	u1627
  3088                           
  3089                           ;I2C_LCD.c: 211:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  3090   0026EC  0E30               	movlw	48
  3091   0026EE  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3092   0026F0  0E27               	movlw	39
  3093   0026F2  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3094                           
  3095                           ; BSR set to: 2
  3096                           ;I2C_LCD.c: 212:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3097   0026F6  0E35               	movlw	53
  3098   0026F8                     u1637:
  3099   0026F8  2EE8               	decfsz	wreg,f,c
  3100   0026FA  D7FE               	bra	u1637
  3101   0026FC  0000               	nop	
  3102                           
  3103                           ;I2C_LCD.c: 213:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x34);
  3104   0026FE  0E34               	movlw	52
  3105   002700  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3106   002702  0E27               	movlw	39
  3107   002704  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3108                           
  3109                           ; BSR set to: 2
  3110                           ;I2C_LCD.c: 214:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3111   002708  0E35               	movlw	53
  3112   00270A                     u1647:
  3113   00270A  2EE8               	decfsz	wreg,f,c
  3114   00270C  D7FE               	bra	u1647
  3115   00270E  0000               	nop	
  3116                           
  3117                           ;I2C_LCD.c: 215:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x30);
  3118   002710  0E30               	movlw	48
  3119   002712  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3120   002714  0E27               	movlw	39
  3121   002716  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3122                           
  3123                           ; BSR set to: 2
  3124                           ;I2C_LCD.c: 217:     _delay((unsigned long)((250)*(32000000UL/4000000.0)));
  3125   00271A  0E03               	movlw	3
  3126   00271C  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  3127   00271E  0E98               	movlw	152
  3128   002720                     u1657:
  3129   002720  2EE8               	decfsz	wreg,f,c
  3130   002722  D7FE               	bra	u1657
  3131   002724  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  3132   002726  D7FC               	bra	u1657
  3133                           
  3134                           ;I2C_LCD.c: 219:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  3135   002728  0E20               	movlw	32
  3136   00272A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3137   00272C  0E27               	movlw	39
  3138   00272E  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3139                           
  3140                           ; BSR set to: 2
  3141                           ;I2C_LCD.c: 220:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3142   002732  0E35               	movlw	53
  3143   002734                     u1667:
  3144   002734  2EE8               	decfsz	wreg,f,c
  3145   002736  D7FE               	bra	u1667
  3146   002738  0000               	nop	
  3147                           
  3148                           ;I2C_LCD.c: 221:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x24);
  3149   00273A  0E24               	movlw	36
  3150   00273C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3151   00273E  0E27               	movlw	39
  3152   002740  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3153                           
  3154                           ; BSR set to: 2
  3155                           ;I2C_LCD.c: 222:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3156   002744  0E35               	movlw	53
  3157   002746                     u1677:
  3158   002746  2EE8               	decfsz	wreg,f,c
  3159   002748  D7FE               	bra	u1677
  3160   00274A  0000               	nop	
  3161                           
  3162                           ;I2C_LCD.c: 223:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  3163   00274C  0E20               	movlw	32
  3164   00274E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3165   002750  0E27               	movlw	39
  3166   002752  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3167                           
  3168                           ; BSR set to: 2
  3169                           ;I2C_LCD.c: 225:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  3170   002756  0EC8               	movlw	200
  3171   002758                     u1687:
  3172   002758  2EE8               	decfsz	wreg,f,c
  3173   00275A  D7FE               	bra	u1687
  3174                           
  3175                           ;I2C_LCD.c: 227:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  3176   00275C  0E20               	movlw	32
  3177   00275E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3178   002760  0E27               	movlw	39
  3179   002762  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3180                           
  3181                           ; BSR set to: 2
  3182                           ;I2C_LCD.c: 228:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3183   002766  0E35               	movlw	53
  3184   002768                     u1697:
  3185   002768  2EE8               	decfsz	wreg,f,c
  3186   00276A  D7FE               	bra	u1697
  3187   00276C  0000               	nop	
  3188                           
  3189                           ;I2C_LCD.c: 229:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x24);
  3190   00276E  0E24               	movlw	36
  3191   002770  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3192   002772  0E27               	movlw	39
  3193   002774  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3194                           
  3195                           ; BSR set to: 2
  3196                           ;I2C_LCD.c: 230:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3197   002778  0E35               	movlw	53
  3198   00277A                     u1707:
  3199   00277A  2EE8               	decfsz	wreg,f,c
  3200   00277C  D7FE               	bra	u1707
  3201   00277E  0000               	nop	
  3202                           
  3203                           ;I2C_LCD.c: 231:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  3204   002780  0E20               	movlw	32
  3205   002782  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3206   002784  0E27               	movlw	39
  3207   002786  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3208                           
  3209                           ; BSR set to: 2
  3210                           ;I2C_LCD.c: 233:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  3211   00278A  0EC8               	movlw	200
  3212   00278C                     u1717:
  3213   00278C  2EE8               	decfsz	wreg,f,c
  3214   00278E  D7FE               	bra	u1717
  3215                           
  3216                           ;I2C_LCD.c: 235:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x80);
  3217   002790  0E80               	movlw	128
  3218   002792  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3219   002794  0E27               	movlw	39
  3220   002796  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3221                           
  3222                           ; BSR set to: 2
  3223                           ;I2C_LCD.c: 236:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3224   00279A  0E35               	movlw	53
  3225   00279C                     u1727:
  3226   00279C  2EE8               	decfsz	wreg,f,c
  3227   00279E  D7FE               	bra	u1727
  3228   0027A0  0000               	nop	
  3229                           
  3230                           ;I2C_LCD.c: 237:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x84);
  3231   0027A2  0E84               	movlw	132
  3232   0027A4  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3233   0027A6  0E27               	movlw	39
  3234   0027A8  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3235                           
  3236                           ; BSR set to: 2
  3237                           ;I2C_LCD.c: 238:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3238   0027AC  0E35               	movlw	53
  3239   0027AE                     u1737:
  3240   0027AE  2EE8               	decfsz	wreg,f,c
  3241   0027B0  D7FE               	bra	u1737
  3242   0027B2  0000               	nop	
  3243                           
  3244                           ;I2C_LCD.c: 239:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x80);
  3245   0027B4  0E80               	movlw	128
  3246   0027B6  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3247   0027B8  0E27               	movlw	39
  3248   0027BA  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3249                           
  3250                           ; BSR set to: 2
  3251                           ;I2C_LCD.c: 241:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  3252   0027BE  0EC8               	movlw	200
  3253   0027C0                     u1747:
  3254   0027C0  2EE8               	decfsz	wreg,f,c
  3255   0027C2  D7FE               	bra	u1747
  3256                           
  3257                           ;I2C_LCD.c: 243:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  3258   0027C4  0E00               	movlw	0
  3259   0027C6  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3260   0027C8  0E27               	movlw	39
  3261   0027CA  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3262                           
  3263                           ; BSR set to: 2
  3264                           ;I2C_LCD.c: 244:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3265   0027CE  0E35               	movlw	53
  3266   0027D0                     u1757:
  3267   0027D0  2EE8               	decfsz	wreg,f,c
  3268   0027D2  D7FE               	bra	u1757
  3269   0027D4  0000               	nop	
  3270                           
  3271                           ;I2C_LCD.c: 245:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  3272   0027D6  0E04               	movlw	4
  3273   0027D8  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3274   0027DA  0E27               	movlw	39
  3275   0027DC  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3276                           
  3277                           ; BSR set to: 2
  3278                           ;I2C_LCD.c: 246:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3279   0027E0  0E35               	movlw	53
  3280   0027E2                     u1767:
  3281   0027E2  2EE8               	decfsz	wreg,f,c
  3282   0027E4  D7FE               	bra	u1767
  3283   0027E6  0000               	nop	
  3284                           
  3285                           ;I2C_LCD.c: 247:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  3286   0027E8  0E00               	movlw	0
  3287   0027EA  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3288   0027EC  0E27               	movlw	39
  3289   0027EE  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3290                           
  3291                           ; BSR set to: 2
  3292                           ;I2C_LCD.c: 249:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  3293   0027F2  0EC8               	movlw	200
  3294   0027F4                     u1777:
  3295   0027F4  2EE8               	decfsz	wreg,f,c
  3296   0027F6  D7FE               	bra	u1777
  3297                           
  3298                           ;I2C_LCD.c: 251:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0xC0);
  3299   0027F8  0EC0               	movlw	192
  3300   0027FA  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3301   0027FC  0E27               	movlw	39
  3302   0027FE  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3303                           
  3304                           ; BSR set to: 2
  3305                           ;I2C_LCD.c: 252:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3306   002802  0E35               	movlw	53
  3307   002804                     u1787:
  3308   002804  2EE8               	decfsz	wreg,f,c
  3309   002806  D7FE               	bra	u1787
  3310   002808  0000               	nop	
  3311                           
  3312                           ;I2C_LCD.c: 253:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0xC4);
  3313   00280A  0EC4               	movlw	196
  3314   00280C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3315   00280E  0E27               	movlw	39
  3316   002810  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3317                           
  3318                           ; BSR set to: 2
  3319                           ;I2C_LCD.c: 254:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3320   002814  0E35               	movlw	53
  3321   002816                     u1797:
  3322   002816  2EE8               	decfsz	wreg,f,c
  3323   002818  D7FE               	bra	u1797
  3324   00281A  0000               	nop	
  3325                           
  3326                           ;I2C_LCD.c: 255:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0xC0);
  3327   00281C  0EC0               	movlw	192
  3328   00281E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3329   002820  0E27               	movlw	39
  3330   002822  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3331                           
  3332                           ; BSR set to: 2
  3333                           ;I2C_LCD.c: 257:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  3334   002826  0EC8               	movlw	200
  3335   002828                     u1807:
  3336   002828  2EE8               	decfsz	wreg,f,c
  3337   00282A  D7FE               	bra	u1807
  3338                           
  3339                           ;I2C_LCD.c: 259:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  3340   00282C  0E00               	movlw	0
  3341   00282E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3342   002830  0E27               	movlw	39
  3343   002832  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3344                           
  3345                           ; BSR set to: 2
  3346                           ;I2C_LCD.c: 260:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3347   002836  0E35               	movlw	53
  3348   002838                     u1817:
  3349   002838  2EE8               	decfsz	wreg,f,c
  3350   00283A  D7FE               	bra	u1817
  3351   00283C  0000               	nop	
  3352                           
  3353                           ;I2C_LCD.c: 261:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  3354   00283E  0E04               	movlw	4
  3355   002840  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3356   002842  0E27               	movlw	39
  3357   002844  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3358                           
  3359                           ; BSR set to: 2
  3360                           ;I2C_LCD.c: 262:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3361   002848  0E35               	movlw	53
  3362   00284A                     u1827:
  3363   00284A  2EE8               	decfsz	wreg,f,c
  3364   00284C  D7FE               	bra	u1827
  3365   00284E  0000               	nop	
  3366                           
  3367                           ;I2C_LCD.c: 263:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  3368   002850  0E00               	movlw	0
  3369   002852  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3370   002854  0E27               	movlw	39
  3371   002856  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3372                           
  3373                           ; BSR set to: 2
  3374                           ;I2C_LCD.c: 265:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  3375   00285A  0EC8               	movlw	200
  3376   00285C                     u1837:
  3377   00285C  2EE8               	decfsz	wreg,f,c
  3378   00285E  D7FE               	bra	u1837
  3379                           
  3380                           ;I2C_LCD.c: 267:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x10);
  3381   002860  0E10               	movlw	16
  3382   002862  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3383   002864  0E27               	movlw	39
  3384   002866  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3385                           
  3386                           ; BSR set to: 2
  3387                           ;I2C_LCD.c: 268:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3388   00286A  0E35               	movlw	53
  3389   00286C                     u1847:
  3390   00286C  2EE8               	decfsz	wreg,f,c
  3391   00286E  D7FE               	bra	u1847
  3392   002870  0000               	nop	
  3393                           
  3394                           ;I2C_LCD.c: 269:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x14);
  3395   002872  0E14               	movlw	20
  3396   002874  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3397   002876  0E27               	movlw	39
  3398   002878  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3399                           
  3400                           ; BSR set to: 2
  3401                           ;I2C_LCD.c: 270:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3402   00287C  0E35               	movlw	53
  3403   00287E                     u1857:
  3404   00287E  2EE8               	decfsz	wreg,f,c
  3405   002880  D7FE               	bra	u1857
  3406   002882  0000               	nop	
  3407                           
  3408                           ;I2C_LCD.c: 271:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x10);
  3409   002884  0E10               	movlw	16
  3410   002886  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3411   002888  0E27               	movlw	39
  3412   00288A  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3413                           
  3414                           ; BSR set to: 2
  3415                           ;I2C_LCD.c: 273:      _delay((unsigned long)((2)*(32000000UL/4000.0)));
  3416   00288E  0E15               	movlw	21
  3417   002890  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  3418   002892  0EC6               	movlw	198
  3419   002894                     u1867:
  3420   002894  2EE8               	decfsz	wreg,f,c
  3421   002896  D7FE               	bra	u1867
  3422   002898  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  3423   00289A  D7FC               	bra	u1867
  3424   00289C  D000               	nop2	
  3425                           
  3426                           ;I2C_LCD.c: 275:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  3427   00289E  0E00               	movlw	0
  3428   0028A0  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3429   0028A2  0E27               	movlw	39
  3430   0028A4  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3431                           
  3432                           ; BSR set to: 2
  3433                           ;I2C_LCD.c: 276:     _delay((unsigned long)((02)*(32000000UL/4000000.0)));
  3434   0028A8  0E05               	movlw	5
  3435   0028AA                     u1877:
  3436   0028AA  2EE8               	decfsz	wreg,f,c
  3437   0028AC  D7FE               	bra	u1877
  3438   0028AE  0000               	nop	
  3439                           
  3440                           ;I2C_LCD.c: 277:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  3441   0028B0  0E04               	movlw	4
  3442   0028B2  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3443   0028B4  0E27               	movlw	39
  3444   0028B6  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3445                           
  3446                           ; BSR set to: 2
  3447                           ;I2C_LCD.c: 278:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3448   0028BA  0E35               	movlw	53
  3449   0028BC                     u1887:
  3450   0028BC  2EE8               	decfsz	wreg,f,c
  3451   0028BE  D7FE               	bra	u1887
  3452   0028C0  0000               	nop	
  3453                           
  3454                           ;I2C_LCD.c: 279:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  3455   0028C2  0E00               	movlw	0
  3456   0028C4  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3457   0028C6  0E27               	movlw	39
  3458   0028C8  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3459                           
  3460                           ; BSR set to: 2
  3461                           ;I2C_LCD.c: 281:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  3462   0028CC  0EC8               	movlw	200
  3463   0028CE                     u1897:
  3464   0028CE  2EE8               	decfsz	wreg,f,c
  3465   0028D0  D7FE               	bra	u1897
  3466                           
  3467                           ;I2C_LCD.c: 283:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x60);
  3468   0028D2  0E60               	movlw	96
  3469   0028D4  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3470   0028D6  0E27               	movlw	39
  3471   0028D8  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3472                           
  3473                           ; BSR set to: 2
  3474                           ;I2C_LCD.c: 284:     _delay((unsigned long)((02)*(32000000UL/4000000.0)));
  3475   0028DC  0E05               	movlw	5
  3476   0028DE                     u1907:
  3477   0028DE  2EE8               	decfsz	wreg,f,c
  3478   0028E0  D7FE               	bra	u1907
  3479   0028E2  0000               	nop	
  3480                           
  3481                           ;I2C_LCD.c: 285:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x64);
  3482   0028E4  0E64               	movlw	100
  3483   0028E6  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3484   0028E8  0E27               	movlw	39
  3485   0028EA  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3486                           
  3487                           ; BSR set to: 2
  3488                           ;I2C_LCD.c: 286:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3489   0028EE  0E35               	movlw	53
  3490   0028F0                     u1917:
  3491   0028F0  2EE8               	decfsz	wreg,f,c
  3492   0028F2  D7FE               	bra	u1917
  3493   0028F4  0000               	nop	
  3494                           
  3495                           ;I2C_LCD.c: 287:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x60);
  3496   0028F6  0E60               	movlw	96
  3497   0028F8  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3498   0028FA  0E27               	movlw	39
  3499   0028FC  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3500                           
  3501                           ; BSR set to: 2
  3502                           ;I2C_LCD.c: 289:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  3503   002900  0EC8               	movlw	200
  3504   002902                     u1927:
  3505   002902  2EE8               	decfsz	wreg,f,c
  3506   002904  D7FE               	bra	u1927
  3507                           
  3508                           ;I2C_LCD.c: 291:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  3509   002906  0E00               	movlw	0
  3510   002908  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3511   00290A  0E27               	movlw	39
  3512   00290C  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3513                           
  3514                           ; BSR set to: 2
  3515                           ;I2C_LCD.c: 292:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3516   002910  0E35               	movlw	53
  3517   002912                     u1937:
  3518   002912  2EE8               	decfsz	wreg,f,c
  3519   002914  D7FE               	bra	u1937
  3520   002916  0000               	nop	
  3521                           
  3522                           ;I2C_LCD.c: 293:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x04);
  3523   002918  0E04               	movlw	4
  3524   00291A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3525   00291C  0E27               	movlw	39
  3526   00291E  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3527                           
  3528                           ; BSR set to: 2
  3529                           ;I2C_LCD.c: 294:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3530   002922  0E35               	movlw	53
  3531   002924                     u1947:
  3532   002924  2EE8               	decfsz	wreg,f,c
  3533   002926  D7FE               	bra	u1947
  3534   002928  0000               	nop	
  3535                           
  3536                           ;I2C_LCD.c: 295:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x00);
  3537   00292A  0E00               	movlw	0
  3538   00292C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3539   00292E  0E27               	movlw	39
  3540   002930  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3541                           
  3542                           ; BSR set to: 2
  3543                           ;I2C_LCD.c: 297:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  3544   002934  0EC8               	movlw	200
  3545   002936                     u1957:
  3546   002936  2EE8               	decfsz	wreg,f,c
  3547   002938  D7FE               	bra	u1957
  3548                           
  3549                           ;I2C_LCD.c: 299:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  3550   00293A  0E20               	movlw	32
  3551   00293C  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3552   00293E  0E27               	movlw	39
  3553   002940  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3554                           
  3555                           ; BSR set to: 2
  3556                           ;I2C_LCD.c: 300:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3557   002944  0E35               	movlw	53
  3558   002946                     u1967:
  3559   002946  2EE8               	decfsz	wreg,f,c
  3560   002948  D7FE               	bra	u1967
  3561   00294A  0000               	nop	
  3562                           
  3563                           ;I2C_LCD.c: 301:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x24);
  3564   00294C  0E24               	movlw	36
  3565   00294E  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3566   002950  0E27               	movlw	39
  3567   002952  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3568                           
  3569                           ; BSR set to: 2
  3570                           ;I2C_LCD.c: 302:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3571   002956  0E35               	movlw	53
  3572   002958                     u1977:
  3573   002958  2EE8               	decfsz	wreg,f,c
  3574   00295A  D7FE               	bra	u1977
  3575   00295C  0000               	nop	
  3576                           
  3577                           ;I2C_LCD.c: 303:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,0x20);
  3578   00295E  0E20               	movlw	32
  3579   002960  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3580   002962  0E27               	movlw	39
  3581   002964  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3582                           
  3583                           ; BSR set to: 2
  3584                           ;I2C_LCD.c: 305:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  3585   002968  0E9C               	movlw	156
  3586   00296A  6E08               	movwf	??_I2C_LCD_INIT^(0+1280),c
  3587   00296C  0ED7               	movlw	215
  3588   00296E                     u1987:
  3589   00296E  2EE8               	decfsz	wreg,f,c
  3590   002970  D7FE               	bra	u1987
  3591   002972  2E08               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  3592   002974  D7FC               	bra	u1987
  3593   002976  0000               	nop	
  3594                           
  3595                           ;I2C_LCD.c: 306:     I2C_BORRAR_LCD();
  3596   002978  ECB4  F01B         	call	_I2C_BORRAR_LCD	;wreg free
  3597                           
  3598                           ;I2C_LCD.c: 307:     I2C_CURSOR_HOME();
  3599   00297C  ECB0  F01B         	call	_I2C_CURSOR_HOME	;wreg free
  3600                           
  3601                           ;I2C_LCD.c: 308:     I2C_CURSOR_ONOFF(1);
  3602   002980  0E01               	movlw	1
  3603   002982  ECA2  F01B         	call	_I2C_CURSOR_ONOFF
  3604   002986  0012               	return		;funcret
  3605   002988                     __end_of_I2C_LCD_INIT:
  3606                           	callstack 0
  3607                           
  3608 ;; *************** function _I2C_CURSOR_ONOFF *****************
  3609 ;; Defined at:
  3610 ;;		line 116 in file "I2C_LCD.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  estado          1    wreg     unsigned char 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  estado          1    6[COMRAM] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/2
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3628 ;;Total ram usage:        1 bytes
  3629 ;; Hardware stack levels used: 1
  3630 ;; Hardware stack levels required when called: 2
  3631 ;; This function calls:
  3632 ;;		_I2C_ENVIA_LCD_CMD
  3633 ;; This function is called by:
  3634 ;;		_I2C_LCD_INIT
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text7
  3639   003744                     __ptext7:
  3640                           	callstack 0
  3641   003744                     _I2C_CURSOR_ONOFF:
  3642                           	callstack 122
  3643                           
  3644                           ;incstack = 0
  3645                           ;I2C_CURSOR_ONOFF@estado stored from wreg
  3646   003744  6E07               	movwf	I2C_CURSOR_ONOFF@estado^(0+1280),c
  3647                           
  3648                           ;I2C_LCD.c: 117:  if(estado == 0) I2C_ENVIA_LCD_CMD(0x0E);
  3649   003746  5007               	movf	I2C_CURSOR_ONOFF@estado^(0+1280),w,c
  3650   003748  A4D8               	btfss	status,2,c
  3651   00374A  D003               	goto	l1786
  3652   00374C  0E0E               	movlw	14
  3653   00374E  EC0E  F01A         	call	_I2C_ENVIA_LCD_CMD
  3654   003752                     l1786:
  3655                           
  3656                           ;I2C_LCD.c: 118:  if(estado == 1) I2C_ENVIA_LCD_CMD(0x0C);
  3657   003752  0407               	decf	I2C_CURSOR_ONOFF@estado^(0+1280),w,c
  3658   003754  A4D8               	btfss	status,2,c
  3659   003756  0012               	return	
  3660   003758  0E0C               	movlw	12
  3661   00375A  EC0E  F01A         	call	_I2C_ENVIA_LCD_CMD
  3662   00375E  0012               	return		;funcret
  3663   003760                     __end_of_I2C_CURSOR_ONOFF:
  3664                           	callstack 0
  3665                           
  3666 ;; *************** function _I2C_CURSOR_HOME *****************
  3667 ;; Defined at:
  3668 ;;		line 96 in file "I2C_LCD.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;		None
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      void 
  3675 ;; Registers used:
  3676 ;;		wreg, status,2, status,0, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/2
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3686 ;;Total ram usage:        0 bytes
  3687 ;; Hardware stack levels used: 1
  3688 ;; Hardware stack levels required when called: 2
  3689 ;; This function calls:
  3690 ;;		_I2C_ENVIA_LCD_CMD
  3691 ;; This function is called by:
  3692 ;;		_I2C_LCD_INIT
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text8
  3697   003760                     __ptext8:
  3698                           	callstack 0
  3699   003760                     _I2C_CURSOR_HOME:
  3700                           	callstack 122
  3701                           
  3702                           ;I2C_LCD.c: 97:  I2C_ENVIA_LCD_CMD(0x02);
  3703                           
  3704                           ;incstack = 0
  3705   003760  0E02               	movlw	2
  3706   003762  EC0E  F01A         	call	_I2C_ENVIA_LCD_CMD
  3707   003766  0012               	return		;funcret
  3708   003768                     __end_of_I2C_CURSOR_HOME:
  3709                           	callstack 0
  3710                           
  3711 ;; *************** function _I2C_BORRAR_LCD *****************
  3712 ;; Defined at:
  3713 ;;		line 155 in file "I2C_LCD.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;		None
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      void 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/4
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3731 ;;Total ram usage:        0 bytes
  3732 ;; Hardware stack levels used: 1
  3733 ;; Hardware stack levels required when called: 2
  3734 ;; This function calls:
  3735 ;;		_I2C_ENVIA_LCD_CMD
  3736 ;; This function is called by:
  3737 ;;		_I2C_LCD_INIT
  3738 ;;		_pantallazo
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text9
  3743   003768                     __ptext9:
  3744                           	callstack 0
  3745   003768                     _I2C_BORRAR_LCD:
  3746                           	callstack 123
  3747                           
  3748                           ;I2C_LCD.c: 156:  I2C_ENVIA_LCD_CMD(0x01);
  3749                           
  3750                           ;incstack = 0
  3751   003768  0E01               	movlw	1
  3752   00376A  EC0E  F01A         	call	_I2C_ENVIA_LCD_CMD
  3753   00376E  0012               	return		;funcret
  3754   003770                     __end_of_I2C_BORRAR_LCD:
  3755                           	callstack 0
  3756                           
  3757 ;; *************** function _I2C_ENVIA_LCD_CMD *****************
  3758 ;; Defined at:
  3759 ;;		line 159 in file "I2C_LCD.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  command         1    wreg     unsigned char 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  command         1    3[COMRAM] unsigned char 
  3764 ;;  lownibble       1    5[COMRAM] unsigned char 
  3765 ;;  highnibble      1    4[COMRAM] unsigned char 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/3
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3776 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3777 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3778 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3779 ;;Total ram usage:        4 bytes
  3780 ;; Hardware stack levels used: 1
  3781 ;; Hardware stack levels required when called: 1
  3782 ;; This function calls:
  3783 ;;		_I2C1_WRITESINGLEBYTE
  3784 ;; This function is called by:
  3785 ;;		_I2C_POS_CURSOR
  3786 ;;		_I2C_CURSOR_HOME
  3787 ;;		_I2C_CURSOR_ONOFF
  3788 ;;		_I2C_BORRAR_LCD
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text10
  3793   00341C                     __ptext10:
  3794                           	callstack 0
  3795   00341C                     _I2C_ENVIA_LCD_CMD:
  3796                           	callstack 123
  3797                           
  3798                           ;incstack = 0
  3799                           ;I2C_ENVIA_LCD_CMD@command stored from wreg
  3800   00341C  6E04               	movwf	I2C_ENVIA_LCD_CMD@command^(0+1280),c
  3801                           
  3802                           ;I2C_LCD.c: 160:     unsigned char highnibble;;I2C_LCD.c: 161:     unsigned char lownibb
      +                          le;;I2C_LCD.c: 163:     highnibble = (command & 0xF0) | 0x08;
  3803   00341E  5004               	movf	I2C_ENVIA_LCD_CMD@command^(0+1280),w,c
  3804   003420  0BF0               	andlw	240
  3805   003422  0908               	iorlw	8
  3806   003424  6E05               	movwf	I2C_ENVIA_LCD_CMD@highnibble^(0+1280),c
  3807                           
  3808                           ;I2C_LCD.c: 164:     lownibble = (unsigned char)(((command & 0x0F)<<4)| 0x08);
  3809   003426  C504  F503         	movff	I2C_ENVIA_LCD_CMD@command,??_I2C_ENVIA_LCD_CMD
  3810   00342A  0E0F               	movlw	15
  3811   00342C  1603               	andwf	??_I2C_ENVIA_LCD_CMD^(0+1280),f,c
  3812   00342E  3803               	swapf	??_I2C_ENVIA_LCD_CMD^(0+1280),w,c
  3813   003430  0BF0               	andlw	240
  3814   003432  0908               	iorlw	8
  3815   003434  6E06               	movwf	I2C_ENVIA_LCD_CMD@lownibble^(0+1280),c
  3816                           
  3817                           ;I2C_LCD.c: 166:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(highnibble | 0x04));
  3818   003436  5005               	movf	I2C_ENVIA_LCD_CMD@highnibble^(0+1280),w,c
  3819   003438  0904               	iorlw	4
  3820   00343A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3821   00343C  0E27               	movlw	39
  3822   00343E  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3823                           
  3824                           ; BSR set to: 2
  3825                           ;I2C_LCD.c: 167:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3826   003442  0E35               	movlw	53
  3827   003444                     u1997:
  3828   003444  2EE8               	decfsz	wreg,f,c
  3829   003446  D7FE               	bra	u1997
  3830   003448  0000               	nop	
  3831                           
  3832                           ;I2C_LCD.c: 168:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,highnibble);
  3833   00344A  C505  F501         	movff	I2C_ENVIA_LCD_CMD@highnibble,I2C1_WRITESINGLEBYTE@dato
  3834   00344E  0E27               	movlw	39
  3835   003450  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3836                           
  3837                           ; BSR set to: 2
  3838                           ;I2C_LCD.c: 169:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3839   003454  0E35               	movlw	53
  3840   003456                     u2007:
  3841   003456  2EE8               	decfsz	wreg,f,c
  3842   003458  D7FE               	bra	u2007
  3843   00345A  0000               	nop	
  3844                           
  3845                           ;I2C_LCD.c: 171:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(lownibble | 0x04));
  3846   00345C  5006               	movf	I2C_ENVIA_LCD_CMD@lownibble^(0+1280),w,c
  3847   00345E  0904               	iorlw	4
  3848   003460  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  3849   003462  0E27               	movlw	39
  3850   003464  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3851                           
  3852                           ; BSR set to: 2
  3853                           ;I2C_LCD.c: 172:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3854   003468  0E35               	movlw	53
  3855   00346A                     u2017:
  3856   00346A  2EE8               	decfsz	wreg,f,c
  3857   00346C  D7FE               	bra	u2017
  3858   00346E  0000               	nop	
  3859                           
  3860                           ;I2C_LCD.c: 173:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,lownibble);
  3861   003470  C506  F501         	movff	I2C_ENVIA_LCD_CMD@lownibble,I2C1_WRITESINGLEBYTE@dato
  3862   003474  0E27               	movlw	39
  3863   003476  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  3864                           
  3865                           ; BSR set to: 2
  3866                           ;I2C_LCD.c: 174:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  3867   00347A  0E35               	movlw	53
  3868   00347C                     u2027:
  3869   00347C  2EE8               	decfsz	wreg,f,c
  3870   00347E  D7FE               	bra	u2027
  3871   003480  0000               	nop	
  3872   003482  0012               	return		;funcret
  3873   003484                     __end_of_I2C_ENVIA_LCD_CMD:
  3874                           	callstack 0
  3875                           
  3876 ;; *************** function _I2C1_INIT *****************
  3877 ;; Defined at:
  3878 ;;		line 34 in file "I2C_LCD.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;		None
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		wreg, status,2
  3887 ;; Tracked objects:
  3888 ;;		On entry : 3F/0
  3889 ;;		On exit  : 3F/2
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3896 ;;Total ram usage:        0 bytes
  3897 ;; Hardware stack levels used: 1
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_I2C_LCD_INIT
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text11
  3906   00352E                     __ptext11:
  3907                           	callstack 0
  3908   00352E                     _I2C1_INIT:
  3909                           	callstack 124
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;I2C_LCD.c: 36:     TRISCbits.TRISC3 = 0;
  3913                           
  3914                           ;incstack = 0
  3915   00352E  96C8               	bcf	200,3,c	;volatile
  3916                           
  3917                           ;I2C_LCD.c: 37:     TRISCbits.TRISC4 = 0;
  3918   003530  98C8               	bcf	200,4,c	;volatile
  3919                           
  3920                           ;I2C_LCD.c: 38:     ANSELCbits.ANSELC3 = 0;
  3921   003532  0104               	movlb	4	; () banked
  3922   003534  9710               	bcf	16,3,b	;volatile
  3923                           
  3924                           ;I2C_LCD.c: 39:     ANSELCbits.ANSELC4 = 0;
  3925   003536  9910               	bcf	16,4,b	;volatile
  3926                           
  3927                           ;I2C_LCD.c: 40:     ODCONCbits.ODCC3 = 1;
  3928   003538  8712               	bsf	18,3,b	;volatile
  3929                           
  3930                           ;I2C_LCD.c: 41:     ODCONCbits.ODCC4 = 1;
  3931   00353A  8912               	bsf	18,4,b	;volatile
  3932                           
  3933                           ; BSR set to: 4
  3934                           ;I2C_LCD.c: 43:     RC3PPS = 0x37;
  3935   00353C  0E37               	movlw	55
  3936   00353E  0102               	movlb	2	; () banked
  3937   003540  6F14               	movwf	20,b	;volatile
  3938                           
  3939                           ;I2C_LCD.c: 44:     RC4PPS = 0x38;
  3940   003542  0E38               	movlw	56
  3941   003544  6F15               	movwf	21,b	;volatile
  3942                           
  3943                           ;I2C_LCD.c: 46:     RC3I2Cbits.PU = 2;
  3944   003546  5187               	movf	135,w,b	;volatile
  3945   003548  0BCF               	andlw	-49
  3946   00354A  0920               	iorlw	32
  3947   00354C  6F87               	movwf	135,b	;volatile
  3948                           
  3949                           ;I2C_LCD.c: 47:     RC3I2Cbits.TH = 1;
  3950   00354E  5187               	movf	135,w,b	;volatile
  3951   003550  0BFC               	andlw	-4
  3952   003552  0901               	iorlw	1
  3953   003554  6F87               	movwf	135,b	;volatile
  3954                           
  3955                           ;I2C_LCD.c: 48:     RC4I2Cbits.PU = 2;
  3956   003556  5186               	movf	134,w,b	;volatile
  3957   003558  0BCF               	andlw	-49
  3958   00355A  0920               	iorlw	32
  3959   00355C  6F86               	movwf	134,b	;volatile
  3960                           
  3961                           ;I2C_LCD.c: 49:     RC4I2Cbits.TH = 1;
  3962   00355E  5186               	movf	134,w,b	;volatile
  3963   003560  0BFC               	andlw	-4
  3964   003562  0901               	iorlw	1
  3965   003564  6F86               	movwf	134,b	;volatile
  3966                           
  3967                           ; BSR set to: 2
  3968                           ;I2C_LCD.c: 50:     I2C1CON0bits.EN = 1;
  3969   003566  8F94               	bsf	148,7,b	;volatile
  3970                           
  3971                           ;I2C_LCD.c: 51:     I2C1CLKbits.CLK = 3;
  3972   003568  0E03               	movlw	3
  3973   00356A  6F9C               	movwf	156,b	;volatile
  3974                           
  3975                           ;I2C_LCD.c: 52:     I2C1CON0bits.MODE = 0x4;
  3976   00356C  5194               	movf	148,w,b	;volatile
  3977   00356E  0BF8               	andlw	-8
  3978   003570  0904               	iorlw	4
  3979   003572  6F94               	movwf	148,b	;volatile
  3980                           
  3981                           ; BSR set to: 2
  3982                           ;I2C_LCD.c: 53:     I2C1CON2bits.ABD = 0;
  3983   003574  9996               	bcf	150,4,b	;volatile
  3984                           
  3985                           ; BSR set to: 2
  3986   003576  0012               	return		;funcret
  3987   003578                     __end_of_I2C1_INIT:
  3988                           	callstack 0
  3989                           
  3990 ;; *************** function _I2C_LCD_ESCRIBE_VAR_INT *****************
  3991 ;; Defined at:
  3992 ;;		line 333 in file "I2C_LCD.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  numero          2   12[COMRAM] unsigned int 
  3995 ;;  n_digitos       1   14[COMRAM] unsigned char 
  3996 ;;  punto           1   15[COMRAM] unsigned char 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  unidad          1   20[COMRAM] unsigned char 
  3999 ;;  decena          1   19[COMRAM] unsigned char 
  4000 ;;  centena         1   18[COMRAM] unsigned char 
  4001 ;;  millar          1   17[COMRAM] unsigned char 
  4002 ;;  d_millar        1   16[COMRAM] unsigned char 
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  1    wreg      void 
  4005 ;; Registers used:
  4006 ;;		wreg, status,2, status,0, cstack
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/3
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4012 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4013 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4015 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4016 ;;Total ram usage:        9 bytes
  4017 ;; Hardware stack levels used: 1
  4018 ;; Hardware stack levels required when called: 2
  4019 ;; This function calls:
  4020 ;;		_I2C_ENVIA_LCD_DATA
  4021 ;;		___lwdiv
  4022 ;;		___lwmod
  4023 ;; This function is called by:
  4024 ;;		_main
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text12
  4029   002988                     __ptext12:
  4030                           	callstack 0
  4031   002988                     _I2C_LCD_ESCRIBE_VAR_INT:
  4032                           	callstack 124
  4033                           
  4034                           ;I2C_LCD.c: 334:     unsigned char d_millar, millar, centena, decena, unidad;;I2C_LCD.c:
      +                           335:     d_millar = numero / 10000;
  4035                           
  4036                           ; BSR set to: 2
  4037                           ;incstack = 0
  4038   002988  C50D  F506         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  4039   00298C  C50E  F507         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  4040   002990  0E27               	movlw	39
  4041   002992  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4042   002994  0E10               	movlw	16
  4043   002996  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4044   002998  EC6E  F01A         	call	___lwdiv	;wreg free
  4045   00299C  5006               	movf	?___lwdiv^(0+1280),w,c
  4046   00299E  6E11               	movwf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  4047                           
  4048                           ;I2C_LCD.c: 336:     millar = (numero % 10000) / 1000;
  4049   0029A0  0E27               	movlw	39
  4050   0029A2  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  4051   0029A4  0E10               	movlw	16
  4052   0029A6  6E03               	movwf	___lwmod@divisor^(0+1280),c
  4053   0029A8  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  4054   0029AC  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  4055   0029B0  ECDD  F01A         	call	___lwmod	;wreg free
  4056   0029B4  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  4057   0029B8  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  4058   0029BC  0E03               	movlw	3
  4059   0029BE  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4060   0029C0  0EE8               	movlw	232
  4061   0029C2  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4062   0029C4  EC6E  F01A         	call	___lwdiv	;wreg free
  4063   0029C8  5006               	movf	?___lwdiv^(0+1280),w,c
  4064   0029CA  6E12               	movwf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),c
  4065                           
  4066                           ;I2C_LCD.c: 337:     centena = (numero % 1000) / 100;
  4067   0029CC  0E03               	movlw	3
  4068   0029CE  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  4069   0029D0  0EE8               	movlw	232
  4070   0029D2  6E03               	movwf	___lwmod@divisor^(0+1280),c
  4071   0029D4  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  4072   0029D8  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  4073   0029DC  ECDD  F01A         	call	___lwmod	;wreg free
  4074   0029E0  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  4075   0029E4  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  4076   0029E8  0E00               	movlw	0
  4077   0029EA  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4078   0029EC  0E64               	movlw	100
  4079   0029EE  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4080   0029F0  EC6E  F01A         	call	___lwdiv	;wreg free
  4081   0029F4  5006               	movf	?___lwdiv^(0+1280),w,c
  4082   0029F6  6E13               	movwf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),c
  4083                           
  4084                           ;I2C_LCD.c: 338:     decena = (numero % 100) / 10;
  4085   0029F8  0E00               	movlw	0
  4086   0029FA  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  4087   0029FC  0E64               	movlw	100
  4088   0029FE  6E03               	movwf	___lwmod@divisor^(0+1280),c
  4089   002A00  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  4090   002A04  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  4091   002A08  ECDD  F01A         	call	___lwmod	;wreg free
  4092   002A0C  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  4093   002A10  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  4094   002A14  0E00               	movlw	0
  4095   002A16  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4096   002A18  0E0A               	movlw	10
  4097   002A1A  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4098   002A1C  EC6E  F01A         	call	___lwdiv	;wreg free
  4099   002A20  5006               	movf	?___lwdiv^(0+1280),w,c
  4100   002A22  6E14               	movwf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),c
  4101                           
  4102                           ;I2C_LCD.c: 339:     unidad = numero % 10;
  4103   002A24  C50D  F501         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  4104   002A28  C50E  F502         	movff	I2C_LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  4105   002A2C  0E00               	movlw	0
  4106   002A2E  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  4107   002A30  0E0A               	movlw	10
  4108   002A32  6E03               	movwf	___lwmod@divisor^(0+1280),c
  4109   002A34  ECDD  F01A         	call	___lwmod	;wreg free
  4110   002A38  5001               	movf	?___lwmod^(0+1280),w,c
  4111   002A3A  6E15               	movwf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),c
  4112                           
  4113                           ;I2C_LCD.c: 340:     switch(n_digitos){
  4114   002A3C  D139               	goto	l2440
  4115   002A3E                     l2392:
  4116                           
  4117                           ;I2C_LCD.c: 342:             I2C_ENVIA_LCD_DATA(unidad+0x30);
  4118   002A3E  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4119   002A40  0F30               	addlw	48
  4120   002A42  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4121                           
  4122                           ;I2C_LCD.c: 343:             break;
  4123   002A46  0012               	return	
  4124   002A48                     l2394:
  4125                           
  4126                           ;I2C_LCD.c: 345:             if(punto == 0){
  4127   002A48  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  4128   002A4A  A4D8               	btfss	status,2,c
  4129   002A4C  D009               	goto	l2398
  4130                           
  4131                           ;I2C_LCD.c: 346:                 I2C_ENVIA_LCD_DATA(decena+0x30);
  4132   002A4E  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4133   002A50  0F30               	addlw	48
  4134   002A52  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4135                           
  4136                           ;I2C_LCD.c: 347:                 I2C_ENVIA_LCD_DATA(unidad+0x30);
  4137   002A56  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4138   002A58  0F30               	addlw	48
  4139   002A5A  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4140                           
  4141                           ;I2C_LCD.c: 348:             }
  4142   002A5E  0012               	return	
  4143   002A60                     l2398:
  4144   002A60  0410               	decf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  4145   002A62  A4D8               	btfss	status,2,c
  4146   002A64  0012               	return	
  4147                           
  4148                           ;I2C_LCD.c: 350:                 I2C_ENVIA_LCD_DATA(decena+0x30);
  4149   002A66  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4150   002A68  0F30               	addlw	48
  4151   002A6A  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4152                           
  4153                           ;I2C_LCD.c: 351:                 I2C_ENVIA_LCD_DATA('.');
  4154   002A6E  0E2E               	movlw	46
  4155   002A70  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4156                           
  4157                           ;I2C_LCD.c: 352:                 I2C_ENVIA_LCD_DATA(unidad+0x30);
  4158   002A74  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4159   002A76  0F30               	addlw	48
  4160   002A78  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4161   002A7C  0012               	return	
  4162   002A7E                     l2402:
  4163                           
  4164                           ;I2C_LCD.c: 358:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  4165   002A7E  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4166   002A80  0F30               	addlw	48
  4167   002A82  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4168                           
  4169                           ;I2C_LCD.c: 359:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  4170   002A86  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4171   002A88  0F30               	addlw	48
  4172   002A8A  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4173                           
  4174                           ;I2C_LCD.c: 360:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  4175   002A8E  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4176   002A90  0F30               	addlw	48
  4177   002A92  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4178                           
  4179                           ;I2C_LCD.c: 361:                     break;
  4180   002A96  0012               	return	
  4181   002A98                     l2404:
  4182                           
  4183                           ;I2C_LCD.c: 363:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  4184   002A98  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4185   002A9A  0F30               	addlw	48
  4186   002A9C  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4187                           
  4188                           ;I2C_LCD.c: 364:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  4189   002AA0  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4190   002AA2  0F30               	addlw	48
  4191   002AA4  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4192                           
  4193                           ;I2C_LCD.c: 365:                     I2C_ENVIA_LCD_DATA('.');
  4194   002AA8  0E2E               	movlw	46
  4195   002AAA  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4196                           
  4197                           ;I2C_LCD.c: 366:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  4198   002AAE  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4199   002AB0  0F30               	addlw	48
  4200   002AB2  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4201                           
  4202                           ;I2C_LCD.c: 367:                     break;
  4203   002AB6  0012               	return	
  4204   002AB8                     l2406:
  4205                           
  4206                           ;I2C_LCD.c: 369:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  4207   002AB8  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4208   002ABA  0F30               	addlw	48
  4209   002ABC  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4210                           
  4211                           ;I2C_LCD.c: 370:                     I2C_ENVIA_LCD_DATA('.');
  4212   002AC0  0E2E               	movlw	46
  4213   002AC2  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4214                           
  4215                           ;I2C_LCD.c: 371:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  4216   002AC6  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4217   002AC8  0F30               	addlw	48
  4218   002ACA  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4219                           
  4220                           ;I2C_LCD.c: 372:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  4221   002ACE  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4222   002AD0  0F30               	addlw	48
  4223   002AD2  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4224                           
  4225                           ;I2C_LCD.c: 373:                     break;
  4226   002AD6  0012               	return	
  4227   002AD8                     l2410:
  4228   002AD8  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  4229                           
  4230                           ; Switch size 1, requested type "simple"
  4231                           ; Number of cases is 3, Range of values is 0 to 2
  4232                           ; switch strategies available:
  4233                           ; Name         Instructions Cycles
  4234                           ; simple_byte           10     6 (average)
  4235                           ;	Chosen strategy is simple_byte
  4236   002ADA  0A00               	xorlw	0	; case 0
  4237   002ADC  B4D8               	btfsc	status,2,c
  4238   002ADE  D7CF               	goto	l2402
  4239   002AE0  0A01               	xorlw	1	; case 1
  4240   002AE2  B4D8               	btfsc	status,2,c
  4241   002AE4  D7D9               	goto	l2404
  4242   002AE6  0A03               	xorlw	3	; case 2
  4243   002AE8  A4D8               	btfss	status,2,c
  4244   002AEA  0012               	return	
  4245   002AEC  D7E5               	goto	l2406
  4246   002AEE                     l2412:
  4247                           
  4248                           ;I2C_LCD.c: 379:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  4249   002AEE  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4250   002AF0  0F30               	addlw	48
  4251   002AF2  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4252                           
  4253                           ;I2C_LCD.c: 380:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  4254   002AF6  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4255   002AF8  0F30               	addlw	48
  4256   002AFA  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4257                           
  4258                           ;I2C_LCD.c: 381:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  4259   002AFE  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4260   002B00  0F30               	addlw	48
  4261   002B02  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4262                           
  4263                           ;I2C_LCD.c: 382:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  4264   002B06  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4265   002B08  0F30               	addlw	48
  4266   002B0A  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4267                           
  4268                           ;I2C_LCD.c: 383:                     break;
  4269   002B0E  0012               	return	
  4270   002B10                     l2414:
  4271                           
  4272                           ;I2C_LCD.c: 385:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  4273   002B10  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4274   002B12  0F30               	addlw	48
  4275   002B14  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4276                           
  4277                           ;I2C_LCD.c: 386:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  4278   002B18  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4279   002B1A  0F30               	addlw	48
  4280   002B1C  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4281                           
  4282                           ;I2C_LCD.c: 387:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  4283   002B20  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4284   002B22  0F30               	addlw	48
  4285   002B24  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4286                           
  4287                           ;I2C_LCD.c: 388:                     I2C_ENVIA_LCD_DATA('.');
  4288   002B28  0E2E               	movlw	46
  4289   002B2A  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4290                           
  4291                           ;I2C_LCD.c: 389:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  4292   002B2E  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4293   002B30  0F30               	addlw	48
  4294   002B32  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4295                           
  4296                           ;I2C_LCD.c: 390:                     break;
  4297   002B36  0012               	return	
  4298   002B38                     l2416:
  4299                           
  4300                           ;I2C_LCD.c: 392:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  4301   002B38  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4302   002B3A  0F30               	addlw	48
  4303   002B3C  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4304                           
  4305                           ;I2C_LCD.c: 393:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  4306   002B40  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4307   002B42  0F30               	addlw	48
  4308   002B44  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4309                           
  4310                           ;I2C_LCD.c: 394:                     I2C_ENVIA_LCD_DATA('.');
  4311   002B48  0E2E               	movlw	46
  4312   002B4A  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4313                           
  4314                           ;I2C_LCD.c: 395:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  4315   002B4E  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4316   002B50  0F30               	addlw	48
  4317   002B52  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4318                           
  4319                           ;I2C_LCD.c: 396:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  4320   002B56  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4321   002B58  0F30               	addlw	48
  4322   002B5A  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4323                           
  4324                           ;I2C_LCD.c: 397:                     break;
  4325   002B5E  0012               	return	
  4326   002B60                     l2418:
  4327                           
  4328                           ;I2C_LCD.c: 399:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  4329   002B60  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4330   002B62  0F30               	addlw	48
  4331   002B64  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4332                           
  4333                           ;I2C_LCD.c: 400:                     I2C_ENVIA_LCD_DATA('.');
  4334   002B68  0E2E               	movlw	46
  4335   002B6A  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4336                           
  4337                           ;I2C_LCD.c: 401:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  4338   002B6E  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4339   002B70  0F30               	addlw	48
  4340   002B72  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4341                           
  4342                           ;I2C_LCD.c: 402:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  4343   002B76  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4344   002B78  0F30               	addlw	48
  4345   002B7A  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4346                           
  4347                           ;I2C_LCD.c: 403:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  4348   002B7E  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4349   002B80  0F30               	addlw	48
  4350   002B82  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4351                           
  4352                           ;I2C_LCD.c: 404:                     break;
  4353   002B86  0012               	return	
  4354   002B88                     l2422:
  4355   002B88  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  4356                           
  4357                           ; Switch size 1, requested type "simple"
  4358                           ; Number of cases is 4, Range of values is 0 to 3
  4359                           ; switch strategies available:
  4360                           ; Name         Instructions Cycles
  4361                           ; simple_byte           13     7 (average)
  4362                           ;	Chosen strategy is simple_byte
  4363   002B8A  0A00               	xorlw	0	; case 0
  4364   002B8C  B4D8               	btfsc	status,2,c
  4365   002B8E  D7AF               	goto	l2412
  4366   002B90  0A01               	xorlw	1	; case 1
  4367   002B92  B4D8               	btfsc	status,2,c
  4368   002B94  D7BD               	goto	l2414
  4369   002B96  0A03               	xorlw	3	; case 2
  4370   002B98  B4D8               	btfsc	status,2,c
  4371   002B9A  D7CE               	goto	l2416
  4372   002B9C  0A01               	xorlw	1	; case 3
  4373   002B9E  A4D8               	btfss	status,2,c
  4374   002BA0  0012               	return	
  4375   002BA2  D7DE               	goto	l2418
  4376   002BA4                     l2424:
  4377                           
  4378                           ;I2C_LCD.c: 410:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  4379   002BA4  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  4380   002BA6  0F30               	addlw	48
  4381   002BA8  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4382                           
  4383                           ;I2C_LCD.c: 411:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  4384   002BAC  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4385   002BAE  0F30               	addlw	48
  4386   002BB0  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4387                           
  4388                           ;I2C_LCD.c: 412:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  4389   002BB4  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4390   002BB6  0F30               	addlw	48
  4391   002BB8  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4392                           
  4393                           ;I2C_LCD.c: 413:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  4394   002BBC  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4395   002BBE  0F30               	addlw	48
  4396   002BC0  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4397                           
  4398                           ;I2C_LCD.c: 414:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  4399   002BC4  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4400   002BC6  0F30               	addlw	48
  4401   002BC8  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4402                           
  4403                           ;I2C_LCD.c: 415:                     break;
  4404   002BCC  0012               	return	
  4405   002BCE                     l2426:
  4406                           
  4407                           ;I2C_LCD.c: 417:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  4408   002BCE  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  4409   002BD0  0F30               	addlw	48
  4410   002BD2  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4411                           
  4412                           ;I2C_LCD.c: 418:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  4413   002BD6  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4414   002BD8  0F30               	addlw	48
  4415   002BDA  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4416                           
  4417                           ;I2C_LCD.c: 419:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  4418   002BDE  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4419   002BE0  0F30               	addlw	48
  4420   002BE2  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4421                           
  4422                           ;I2C_LCD.c: 420:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  4423   002BE6  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4424   002BE8  0F30               	addlw	48
  4425   002BEA  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4426                           
  4427                           ;I2C_LCD.c: 421:                     I2C_ENVIA_LCD_DATA('.');
  4428   002BEE  0E2E               	movlw	46
  4429   002BF0  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4430                           
  4431                           ;I2C_LCD.c: 422:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  4432   002BF4  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4433   002BF6  0F30               	addlw	48
  4434   002BF8  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4435                           
  4436                           ;I2C_LCD.c: 423:                     break;
  4437   002BFC  0012               	return	
  4438   002BFE                     l2428:
  4439                           
  4440                           ;I2C_LCD.c: 425:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  4441   002BFE  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  4442   002C00  0F30               	addlw	48
  4443   002C02  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4444                           
  4445                           ;I2C_LCD.c: 426:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  4446   002C06  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4447   002C08  0F30               	addlw	48
  4448   002C0A  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4449                           
  4450                           ;I2C_LCD.c: 427:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  4451   002C0E  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4452   002C10  0F30               	addlw	48
  4453   002C12  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4454                           
  4455                           ;I2C_LCD.c: 428:                     I2C_ENVIA_LCD_DATA('.');
  4456   002C16  0E2E               	movlw	46
  4457   002C18  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4458                           
  4459                           ;I2C_LCD.c: 429:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  4460   002C1C  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4461   002C1E  0F30               	addlw	48
  4462   002C20  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4463                           
  4464                           ;I2C_LCD.c: 430:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  4465   002C24  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4466   002C26  0F30               	addlw	48
  4467   002C28  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4468                           
  4469                           ;I2C_LCD.c: 431:                     break;
  4470   002C2C  0012               	return	
  4471   002C2E                     l2430:
  4472                           
  4473                           ;I2C_LCD.c: 433:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  4474   002C2E  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  4475   002C30  0F30               	addlw	48
  4476   002C32  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4477                           
  4478                           ;I2C_LCD.c: 434:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  4479   002C36  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4480   002C38  0F30               	addlw	48
  4481   002C3A  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4482                           
  4483                           ;I2C_LCD.c: 435:                     I2C_ENVIA_LCD_DATA('.');
  4484   002C3E  0E2E               	movlw	46
  4485   002C40  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4486                           
  4487                           ;I2C_LCD.c: 436:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  4488   002C44  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4489   002C46  0F30               	addlw	48
  4490   002C48  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4491                           
  4492                           ;I2C_LCD.c: 437:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  4493   002C4C  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4494   002C4E  0F30               	addlw	48
  4495   002C50  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4496                           
  4497                           ;I2C_LCD.c: 438:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  4498   002C54  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4499   002C56  0F30               	addlw	48
  4500   002C58  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4501                           
  4502                           ;I2C_LCD.c: 439:                     break;
  4503   002C5C  0012               	return	
  4504   002C5E                     l2432:
  4505                           
  4506                           ;I2C_LCD.c: 441:                     I2C_ENVIA_LCD_DATA(d_millar+0x30);
  4507   002C5E  5011               	movf	I2C_LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  4508   002C60  0F30               	addlw	48
  4509   002C62  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4510                           
  4511                           ;I2C_LCD.c: 442:                     I2C_ENVIA_LCD_DATA('.');
  4512   002C66  0E2E               	movlw	46
  4513   002C68  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4514                           
  4515                           ;I2C_LCD.c: 443:                     I2C_ENVIA_LCD_DATA(millar+0x30);
  4516   002C6C  5012               	movf	I2C_LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4517   002C6E  0F30               	addlw	48
  4518   002C70  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4519                           
  4520                           ;I2C_LCD.c: 444:                     I2C_ENVIA_LCD_DATA(centena+0x30);
  4521   002C74  5013               	movf	I2C_LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4522   002C76  0F30               	addlw	48
  4523   002C78  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4524                           
  4525                           ;I2C_LCD.c: 445:                     I2C_ENVIA_LCD_DATA(decena+0x30);
  4526   002C7C  5014               	movf	I2C_LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4527   002C7E  0F30               	addlw	48
  4528   002C80  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4529                           
  4530                           ;I2C_LCD.c: 446:                     I2C_ENVIA_LCD_DATA(unidad+0x30);
  4531   002C84  5015               	movf	I2C_LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4532   002C86  0F30               	addlw	48
  4533   002C88  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4534                           
  4535                           ;I2C_LCD.c: 447:                     break;
  4536   002C8C  0012               	return	
  4537   002C8E                     l2436:
  4538   002C8E  5010               	movf	I2C_LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  4539                           
  4540                           ; Switch size 1, requested type "simple"
  4541                           ; Number of cases is 5, Range of values is 0 to 4
  4542                           ; switch strategies available:
  4543                           ; Name         Instructions Cycles
  4544                           ; simple_byte           16     9 (average)
  4545                           ;	Chosen strategy is simple_byte
  4546   002C90  0A00               	xorlw	0	; case 0
  4547   002C92  B4D8               	btfsc	status,2,c
  4548   002C94  D787               	goto	l2424
  4549   002C96  0A01               	xorlw	1	; case 1
  4550   002C98  B4D8               	btfsc	status,2,c
  4551   002C9A  D799               	goto	l2426
  4552   002C9C  0A03               	xorlw	3	; case 2
  4553   002C9E  B4D8               	btfsc	status,2,c
  4554   002CA0  D7AE               	goto	l2428
  4555   002CA2  0A01               	xorlw	1	; case 3
  4556   002CA4  B4D8               	btfsc	status,2,c
  4557   002CA6  D7C3               	goto	l2430
  4558   002CA8  0A07               	xorlw	7	; case 4
  4559   002CAA  A4D8               	btfss	status,2,c
  4560   002CAC  0012               	return	
  4561   002CAE  D7D7               	goto	l2432
  4562   002CB0                     l2440:
  4563   002CB0  500F               	movf	I2C_LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  4564                           
  4565                           ; Switch size 1, requested type "simple"
  4566                           ; Number of cases is 5, Range of values is 1 to 5
  4567                           ; switch strategies available:
  4568                           ; Name         Instructions Cycles
  4569                           ; simple_byte           16     9 (average)
  4570                           ;	Chosen strategy is simple_byte
  4571   002CB2  0A01               	xorlw	1	; case 1
  4572   002CB4  B4D8               	btfsc	status,2,c
  4573   002CB6  D6C3               	goto	l2392
  4574   002CB8  0A03               	xorlw	3	; case 2
  4575   002CBA  B4D8               	btfsc	status,2,c
  4576   002CBC  D6C5               	goto	l2394
  4577   002CBE  0A01               	xorlw	1	; case 3
  4578   002CC0  B4D8               	btfsc	status,2,c
  4579   002CC2  D70A               	goto	l2410
  4580   002CC4  0A07               	xorlw	7	; case 4
  4581   002CC6  B4D8               	btfsc	status,2,c
  4582   002CC8  D75F               	goto	l2422
  4583   002CCA  0A01               	xorlw	1	; case 5
  4584   002CCC  A4D8               	btfss	status,2,c
  4585   002CCE  0012               	return	
  4586   002CD0  D7DE               	goto	l2436
  4587   002CD2                     __end_of_I2C_LCD_ESCRIBE_VAR_INT:
  4588                           	callstack 0
  4589                           
  4590 ;; *************** function ___lwmod *****************
  4591 ;; Defined at:
  4592 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  dividend        2    0[COMRAM] unsigned int 
  4595 ;;  divisor         2    2[COMRAM] unsigned int 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  counter         1    4[COMRAM] unsigned char 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  2    0[COMRAM] unsigned int 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, status,0
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/3
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4607 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4610 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4611 ;;Total ram usage:        5 bytes
  4612 ;; Hardware stack levels used: 1
  4613 ;; This function calls:
  4614 ;;		Nothing
  4615 ;; This function is called by:
  4616 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text13
  4621   0035BA                     __ptext13:
  4622                           	callstack 0
  4623   0035BA                     ___lwmod:
  4624                           	callstack 125
  4625                           
  4626                           ;incstack = 0
  4627   0035BA  5003               	movf	___lwmod@divisor^(0+1280),w,c
  4628   0035BC  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  4629   0035BE  B4D8               	btfsc	status,2,c
  4630   0035C0  D018               	goto	l790
  4631   0035C2  0E01               	movlw	1
  4632   0035C4  6E05               	movwf	___lwmod@counter^(0+1280),c
  4633   0035C6  D004               	goto	l2322
  4634   0035C8                     l2320:
  4635   0035C8  90D8               	bcf	status,0,c
  4636   0035CA  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  4637   0035CC  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  4638   0035CE  2A05               	incf	___lwmod@counter^(0+1280),f,c
  4639   0035D0                     l2322:
  4640   0035D0  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  4641   0035D2  D7FA               	goto	l2320
  4642   0035D4                     u1300:
  4643   0035D4  5003               	movf	___lwmod@divisor^(0+1280),w,c
  4644   0035D6  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  4645   0035D8  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  4646   0035DA  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  4647   0035DC  A0D8               	btfss	status,0,c
  4648   0035DE  D004               	goto	l2328
  4649   0035E0  5003               	movf	___lwmod@divisor^(0+1280),w,c
  4650   0035E2  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  4651   0035E4  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  4652   0035E6  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  4653   0035E8                     l2328:
  4654   0035E8  90D8               	bcf	status,0,c
  4655   0035EA  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  4656   0035EC  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  4657   0035EE  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  4658   0035F0  D7F1               	goto	u1300
  4659   0035F2                     l790:
  4660   0035F2  C501  F501         	movff	___lwmod@dividend,?___lwmod
  4661   0035F6  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  4662   0035FA  0012               	return		;funcret
  4663   0035FC                     __end_of___lwmod:
  4664                           	callstack 0
  4665                           
  4666 ;; *************** function ___lwdiv *****************
  4667 ;; Defined at:
  4668 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  dividend        2    5[COMRAM] unsigned int 
  4671 ;;  divisor         2    7[COMRAM] unsigned int 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  quotient        2    9[COMRAM] unsigned int 
  4674 ;;  counter         1   11[COMRAM] unsigned char 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  2    5[COMRAM] unsigned int 
  4677 ;; Registers used:
  4678 ;;		wreg, status,2, status,0
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/3
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4684 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4685 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4687 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4688 ;;Total ram usage:        7 bytes
  4689 ;; Hardware stack levels used: 1
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text14
  4698   0034DC                     __ptext14:
  4699                           	callstack 0
  4700   0034DC                     ___lwdiv:
  4701                           	callstack 125
  4702                           
  4703                           ;incstack = 0
  4704   0034DC  0E00               	movlw	0
  4705   0034DE  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  4706   0034E0  0E00               	movlw	0
  4707   0034E2  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  4708   0034E4  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  4709   0034E6  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  4710   0034E8  B4D8               	btfsc	status,2,c
  4711   0034EA  D01C               	goto	l780
  4712   0034EC  0E01               	movlw	1
  4713   0034EE  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  4714   0034F0  D004               	goto	l2302
  4715   0034F2                     l2300:
  4716   0034F2  90D8               	bcf	status,0,c
  4717   0034F4  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  4718   0034F6  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  4719   0034F8  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  4720   0034FA                     l2302:
  4721   0034FA  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  4722   0034FC  D7FA               	goto	l2300
  4723   0034FE                     u1270:
  4724   0034FE  90D8               	bcf	status,0,c
  4725   003500  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  4726   003502  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  4727   003504  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  4728   003506  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  4729   003508  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  4730   00350A  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  4731   00350C  A0D8               	btfss	status,0,c
  4732   00350E  D005               	goto	l2312
  4733   003510  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  4734   003512  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  4735   003514  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  4736   003516  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  4737   003518  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  4738   00351A                     l2312:
  4739   00351A  90D8               	bcf	status,0,c
  4740   00351C  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  4741   00351E  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  4742   003520  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  4743   003522  D7ED               	goto	u1270
  4744   003524                     l780:
  4745   003524  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  4746   003528  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4747   00352C  0012               	return		;funcret
  4748   00352E                     __end_of___lwdiv:
  4749                           	callstack 0
  4750                           
  4751 ;; *************** function _I2C_LCD_ESCRIBE_VAR_CHAR *****************
  4752 ;; Defined at:
  4753 ;;		line 312 in file "I2C_LCD.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  numero          1    wreg     unsigned char 
  4756 ;;  n_digitos       1   10[COMRAM] unsigned char 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  numero          1   13[COMRAM] unsigned char 
  4759 ;;  unidad          1   14[COMRAM] unsigned char 
  4760 ;;  decena          1   12[COMRAM] unsigned char 
  4761 ;;  centena         1   11[COMRAM] unsigned char 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  1    wreg      void 
  4764 ;; Registers used:
  4765 ;;		wreg, status,2, status,0, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/3
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4771 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4772 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4774 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4775 ;;Total ram usage:        5 bytes
  4776 ;; Hardware stack levels used: 1
  4777 ;; Hardware stack levels required when called: 2
  4778 ;; This function calls:
  4779 ;;		_I2C_ENVIA_LCD_DATA
  4780 ;;		___awmod
  4781 ;;		___lbdiv
  4782 ;;		___lbmod
  4783 ;; This function is called by:
  4784 ;;		_main
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           	psect	text15
  4789   0032B4                     __ptext15:
  4790                           	callstack 0
  4791   0032B4                     _I2C_LCD_ESCRIBE_VAR_CHAR:
  4792                           	callstack 124
  4793                           
  4794                           ;incstack = 0
  4795                           ;I2C_LCD_ESCRIBE_VAR_CHAR@numero stored from wreg
  4796   0032B4  6E0E               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@numero^(0+1280),c
  4797                           
  4798                           ;I2C_LCD.c: 313:     unsigned char centena, decena, unidad;;I2C_LCD.c: 314:     centena 
      +                          = (numero % 1000) / 100;
  4799   0032B6  0E64               	movlw	100
  4800   0032B8  6E07               	movwf	___lbdiv@divisor^(0+1280),c
  4801   0032BA  0E03               	movlw	3
  4802   0032BC  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
  4803   0032BE  0EE8               	movlw	232
  4804   0032C0  6E03               	movwf	___awmod@divisor^(0+1280),c
  4805   0032C2  C50E  F501         	movff	I2C_LCD_ESCRIBE_VAR_CHAR@numero,___awmod@dividend
  4806   0032C6  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
  4807   0032C8  ECA1  F019         	call	___awmod	;wreg free
  4808   0032CC  5001               	movf	?___awmod^(0+1280),w,c
  4809   0032CE  EC1E  F01B         	call	___lbdiv
  4810   0032D2  6E0C               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@centena^(0+1280),c
  4811                           
  4812                           ;I2C_LCD.c: 315:     decena = (numero % 100) / 10;
  4813   0032D4  0E0A               	movlw	10
  4814   0032D6  6E07               	movwf	___lbdiv@divisor^(0+1280),c
  4815   0032D8  0E64               	movlw	100
  4816   0032DA  6E01               	movwf	___lbmod@divisor^(0+1280),c
  4817   0032DC  500E               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@numero^(0+1280),w,c
  4818   0032DE  EC6B  F01B         	call	___lbmod
  4819   0032E2  EC1E  F01B         	call	___lbdiv
  4820   0032E6  6E0D               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@decena^(0+1280),c
  4821                           
  4822                           ;I2C_LCD.c: 316:     unidad = numero % 10;
  4823   0032E8  0E0A               	movlw	10
  4824   0032EA  6E01               	movwf	___lbmod@divisor^(0+1280),c
  4825   0032EC  500E               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@numero^(0+1280),w,c
  4826   0032EE  EC6B  F01B         	call	___lbmod
  4827   0032F2  6E0F               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),c
  4828                           
  4829                           ;I2C_LCD.c: 317:     switch(n_digitos){
  4830   0032F4  D01B               	goto	l2388
  4831   0032F6                     l2380:
  4832                           
  4833                           ;I2C_LCD.c: 319:             I2C_ENVIA_LCD_DATA(unidad+0x30);
  4834   0032F6  500F               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  4835   0032F8  0F30               	addlw	48
  4836   0032FA  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4837                           
  4838                           ;I2C_LCD.c: 320:             break;
  4839   0032FE  0012               	return	
  4840   003300                     l2382:
  4841                           
  4842                           ;I2C_LCD.c: 322:             I2C_ENVIA_LCD_DATA(decena+0x30);
  4843   003300  500D               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@decena^(0+1280),w,c
  4844   003302  0F30               	addlw	48
  4845   003304  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4846                           
  4847                           ;I2C_LCD.c: 323:             I2C_ENVIA_LCD_DATA(unidad+0x30);
  4848   003308  500F               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  4849   00330A  0F30               	addlw	48
  4850   00330C  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4851                           
  4852                           ;I2C_LCD.c: 324:             break;
  4853   003310  0012               	return	
  4854   003312                     l2384:
  4855                           
  4856                           ;I2C_LCD.c: 326:             I2C_ENVIA_LCD_DATA(centena+0x30);
  4857   003312  500C               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@centena^(0+1280),w,c
  4858   003314  0F30               	addlw	48
  4859   003316  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4860                           
  4861                           ;I2C_LCD.c: 327:             I2C_ENVIA_LCD_DATA(decena+0x30);
  4862   00331A  500D               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@decena^(0+1280),w,c
  4863   00331C  0F30               	addlw	48
  4864   00331E  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4865                           
  4866                           ;I2C_LCD.c: 328:             I2C_ENVIA_LCD_DATA(unidad+0x30);
  4867   003322  500F               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  4868   003324  0F30               	addlw	48
  4869   003326  ECD8  F019         	call	_I2C_ENVIA_LCD_DATA
  4870                           
  4871                           ;I2C_LCD.c: 329:             break;
  4872   00332A  0012               	return	
  4873   00332C                     l2388:
  4874   00332C  500B               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@n_digitos^(0+1280),w,c
  4875                           
  4876                           ; Switch size 1, requested type "simple"
  4877                           ; Number of cases is 3, Range of values is 1 to 3
  4878                           ; switch strategies available:
  4879                           ; Name         Instructions Cycles
  4880                           ; simple_byte           10     6 (average)
  4881                           ;	Chosen strategy is simple_byte
  4882   00332E  0A01               	xorlw	1	; case 1
  4883   003330  B4D8               	btfsc	status,2,c
  4884   003332  D7E1               	goto	l2380
  4885   003334  0A03               	xorlw	3	; case 2
  4886   003336  B4D8               	btfsc	status,2,c
  4887   003338  D7E3               	goto	l2382
  4888   00333A  0A01               	xorlw	1	; case 3
  4889   00333C  A4D8               	btfss	status,2,c
  4890   00333E  0012               	return	
  4891   003340  D7E8               	goto	l2384
  4892   003342                     __end_of_I2C_LCD_ESCRIBE_VAR_CHAR:
  4893                           	callstack 0
  4894                           
  4895 ;; *************** function ___lbmod *****************
  4896 ;; Defined at:
  4897 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lbmod.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  dividend        1    wreg     unsigned char 
  4900 ;;  divisor         1    0[COMRAM] unsigned char 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  dividend        1    1[COMRAM] unsigned char 
  4903 ;;  rem             1    3[COMRAM] unsigned char 
  4904 ;;  counter         1    2[COMRAM] unsigned char 
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      unsigned char 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/3
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4914 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4915 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4917 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4918 ;;Total ram usage:        4 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_I2C_LCD_ESCRIBE_VAR_CHAR
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text16
  4928   0036D6                     __ptext16:
  4929                           	callstack 0
  4930   0036D6                     ___lbmod:
  4931                           	callstack 125
  4932                           
  4933                           ;incstack = 0
  4934                           ;___lbmod@dividend stored from wreg
  4935   0036D6  6E02               	movwf	___lbmod@dividend^(0+1280),c
  4936   0036D8  0E08               	movlw	8
  4937   0036DA  6E03               	movwf	___lbmod@counter^(0+1280),c
  4938   0036DC  6A04               	clrf	___lbmod@rem^(0+1280),c
  4939   0036DE                     l2280:
  4940   0036DE  90D8               	bcf	status,0,c
  4941   0036E0  3402               	rlcf	___lbmod@dividend^(0+1280),w,c
  4942   0036E2  3404               	rlcf	___lbmod@rem^(0+1280),w,c
  4943   0036E4  6E04               	movwf	___lbmod@rem^(0+1280),c
  4944   0036E6  90D8               	bcf	status,0,c
  4945   0036E8  3602               	rlcf	___lbmod@dividend^(0+1280),f,c
  4946   0036EA  5001               	movf	___lbmod@divisor^(0+1280),w,c
  4947   0036EC  5C04               	subwf	___lbmod@rem^(0+1280),w,c
  4948   0036EE  A0D8               	btfss	status,0,c
  4949   0036F0  D002               	goto	l2288
  4950   0036F2  5001               	movf	___lbmod@divisor^(0+1280),w,c
  4951   0036F4  5E04               	subwf	___lbmod@rem^(0+1280),f,c
  4952   0036F6                     l2288:
  4953   0036F6  2E03               	decfsz	___lbmod@counter^(0+1280),f,c
  4954   0036F8  D7F2               	goto	l2280
  4955   0036FA  5004               	movf	___lbmod@rem^(0+1280),w,c
  4956   0036FC  0012               	return		;funcret
  4957   0036FE                     __end_of___lbmod:
  4958                           	callstack 0
  4959                           
  4960 ;; *************** function ___lbdiv *****************
  4961 ;; Defined at:
  4962 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lbdiv.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  dividend        1    wreg     unsigned char 
  4965 ;;  divisor         1    6[COMRAM] unsigned char 
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  dividend        1    7[COMRAM] unsigned char 
  4968 ;;  quotient        1    9[COMRAM] unsigned char 
  4969 ;;  counter         1    8[COMRAM] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      unsigned char 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/3
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4979 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4980 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4982 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4983 ;;Total ram usage:        4 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; This function calls:
  4986 ;;		Nothing
  4987 ;; This function is called by:
  4988 ;;		_I2C_LCD_ESCRIBE_VAR_CHAR
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992                           	psect	text17
  4993   00363C                     __ptext17:
  4994                           	callstack 0
  4995   00363C                     ___lbdiv:
  4996                           	callstack 125
  4997                           
  4998                           ;incstack = 0
  4999                           ;___lbdiv@dividend stored from wreg
  5000   00363C  6E08               	movwf	___lbdiv@dividend^(0+1280),c
  5001   00363E  6A0A               	clrf	___lbdiv@quotient^(0+1280),c
  5002   003640  5007               	movf	___lbdiv@divisor^(0+1280),w,c
  5003   003642  B4D8               	btfsc	status,2,c
  5004   003644  D015               	goto	l2272
  5005   003646  0E01               	movlw	1
  5006   003648  6E09               	movwf	___lbdiv@counter^(0+1280),c
  5007   00364A  D003               	goto	l2260
  5008   00364C                     l2256:
  5009   00364C  90D8               	bcf	status,0,c
  5010   00364E  3607               	rlcf	___lbdiv@divisor^(0+1280),f,c
  5011   003650  2A09               	incf	___lbdiv@counter^(0+1280),f,c
  5012   003652                     l2260:
  5013   003652  AE07               	btfss	___lbdiv@divisor^(0+1280),7,c
  5014   003654  D7FB               	goto	l2256
  5015   003656                     u1230:
  5016   003656  90D8               	bcf	status,0,c
  5017   003658  360A               	rlcf	___lbdiv@quotient^(0+1280),f,c
  5018   00365A  5007               	movf	___lbdiv@divisor^(0+1280),w,c
  5019   00365C  5C08               	subwf	___lbdiv@dividend^(0+1280),w,c
  5020   00365E  A0D8               	btfss	status,0,c
  5021   003660  D003               	goto	l2268
  5022   003662  5007               	movf	___lbdiv@divisor^(0+1280),w,c
  5023   003664  5E08               	subwf	___lbdiv@dividend^(0+1280),f,c
  5024   003666  800A               	bsf	___lbdiv@quotient^(0+1280),0,c
  5025   003668                     l2268:
  5026   003668  90D8               	bcf	status,0,c
  5027   00366A  3207               	rrcf	___lbdiv@divisor^(0+1280),f,c
  5028   00366C  2E09               	decfsz	___lbdiv@counter^(0+1280),f,c
  5029   00366E  D7F3               	goto	u1230
  5030   003670                     l2272:
  5031   003670  500A               	movf	___lbdiv@quotient^(0+1280),w,c
  5032   003672  0012               	return		;funcret
  5033   003674                     __end_of___lbdiv:
  5034                           	callstack 0
  5035                           
  5036 ;; *************** function ___awmod *****************
  5037 ;; Defined at:
  5038 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  dividend        2    0[COMRAM] int 
  5041 ;;  divisor         2    2[COMRAM] int 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  sign            1    5[COMRAM] unsigned char 
  5044 ;;  counter         1    4[COMRAM] unsigned char 
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  2    0[COMRAM] int 
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/3
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5055 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5057 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5058 ;;Total ram usage:        6 bytes
  5059 ;; Hardware stack levels used: 1
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_I2C_LCD_ESCRIBE_VAR_CHAR
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text18
  5068   003342                     __ptext18:
  5069                           	callstack 0
  5070   003342                     ___awmod:
  5071                           	callstack 125
  5072                           
  5073                           ;incstack = 0
  5074   003342  6A06               	clrf	___awmod@sign^(0+1280),c
  5075   003344  AE02               	btfss	(___awmod@dividend+1)^(0+1280),7,c
  5076   003346  D006               	goto	l2178
  5077   003348  6C01               	negf	___awmod@dividend^(0+1280),c
  5078   00334A  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
  5079   00334C  B0D8               	btfsc	status,0,c
  5080   00334E  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
  5081   003350  0E01               	movlw	1
  5082   003352  6E06               	movwf	___awmod@sign^(0+1280),c
  5083   003354                     l2178:
  5084   003354  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  5085   003356  D004               	goto	l2182
  5086   003358  6C03               	negf	___awmod@divisor^(0+1280),c
  5087   00335A  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
  5088   00335C  B0D8               	btfsc	status,0,c
  5089   00335E  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
  5090   003360                     l2182:
  5091   003360  5003               	movf	___awmod@divisor^(0+1280),w,c
  5092   003362  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
  5093   003364  B4D8               	btfsc	status,2,c
  5094   003366  D018               	goto	l2198
  5095   003368  0E01               	movlw	1
  5096   00336A  6E05               	movwf	___awmod@counter^(0+1280),c
  5097   00336C  D004               	goto	l2188
  5098   00336E                     l2186:
  5099   00336E  90D8               	bcf	status,0,c
  5100   003370  3603               	rlcf	___awmod@divisor^(0+1280),f,c
  5101   003372  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
  5102   003374  2A05               	incf	___awmod@counter^(0+1280),f,c
  5103   003376                     l2188:
  5104   003376  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  5105   003378  D7FA               	goto	l2186
  5106   00337A                     u1120:
  5107   00337A  5003               	movf	___awmod@divisor^(0+1280),w,c
  5108   00337C  5C01               	subwf	___awmod@dividend^(0+1280),w,c
  5109   00337E  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
  5110   003380  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
  5111   003382  A0D8               	btfss	status,0,c
  5112   003384  D004               	goto	l2194
  5113   003386  5003               	movf	___awmod@divisor^(0+1280),w,c
  5114   003388  5E01               	subwf	___awmod@dividend^(0+1280),f,c
  5115   00338A  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
  5116   00338C  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
  5117   00338E                     l2194:
  5118   00338E  90D8               	bcf	status,0,c
  5119   003390  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
  5120   003392  3203               	rrcf	___awmod@divisor^(0+1280),f,c
  5121   003394  2E05               	decfsz	___awmod@counter^(0+1280),f,c
  5122   003396  D7F1               	goto	u1120
  5123   003398                     l2198:
  5124   003398  5006               	movf	___awmod@sign^(0+1280),w,c
  5125   00339A  B4D8               	btfsc	status,2,c
  5126   00339C  D004               	goto	l2202
  5127   00339E  6C01               	negf	___awmod@dividend^(0+1280),c
  5128   0033A0  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
  5129   0033A2  B0D8               	btfsc	status,0,c
  5130   0033A4  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
  5131   0033A6                     l2202:
  5132   0033A6  C501  F501         	movff	___awmod@dividend,?___awmod
  5133   0033AA  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
  5134   0033AE  0012               	return		;funcret
  5135   0033B0                     __end_of___awmod:
  5136                           	callstack 0
  5137                           
  5138 ;; *************** function _I2C_ENVIA_LCD_DATA *****************
  5139 ;; Defined at:
  5140 ;;		line 137 in file "I2C_LCD.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  data            1    wreg     unsigned char 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;  data            1    3[COMRAM] unsigned char 
  5145 ;;  lownibble       1    5[COMRAM] unsigned char 
  5146 ;;  highnibble      1    4[COMRAM] unsigned char 
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg, status,2, status,0, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/3
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5157 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5158 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5159 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5160 ;;Total ram usage:        4 bytes
  5161 ;; Hardware stack levels used: 1
  5162 ;; Hardware stack levels required when called: 1
  5163 ;; This function calls:
  5164 ;;		_I2C1_WRITESINGLEBYTE
  5165 ;; This function is called by:
  5166 ;;		_I2C_ESCRIBE_MENSAJE2
  5167 ;;		_I2C_LCD_ESCRIBE_VAR_CHAR
  5168 ;;		_I2C_LCD_ESCRIBE_VAR_INT
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text19
  5173   0033B0                     __ptext19:
  5174                           	callstack 0
  5175   0033B0                     _I2C_ENVIA_LCD_DATA:
  5176                           	callstack 123
  5177                           
  5178                           ;incstack = 0
  5179                           ;I2C_ENVIA_LCD_DATA@data stored from wreg
  5180   0033B0  6E04               	movwf	I2C_ENVIA_LCD_DATA@data^(0+1280),c
  5181                           
  5182                           ;I2C_LCD.c: 138:     unsigned char highnibble;;I2C_LCD.c: 139:     unsigned char lownibb
      +                          le;;I2C_LCD.c: 141:     highnibble = (data & 0xF0) | 0x08;
  5183   0033B2  5004               	movf	I2C_ENVIA_LCD_DATA@data^(0+1280),w,c
  5184   0033B4  0BF0               	andlw	240
  5185   0033B6  0908               	iorlw	8
  5186   0033B8  6E05               	movwf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),c
  5187                           
  5188                           ;I2C_LCD.c: 142:     lownibble = (unsigned char)(((data & 0x0F)<<4)| 0x08);
  5189   0033BA  C504  F503         	movff	I2C_ENVIA_LCD_DATA@data,??_I2C_ENVIA_LCD_DATA
  5190   0033BE  0E0F               	movlw	15
  5191   0033C0  1603               	andwf	??_I2C_ENVIA_LCD_DATA^(0+1280),f,c
  5192   0033C2  3803               	swapf	??_I2C_ENVIA_LCD_DATA^(0+1280),w,c
  5193   0033C4  0BF0               	andlw	240
  5194   0033C6  0908               	iorlw	8
  5195   0033C8  6E06               	movwf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),c
  5196                           
  5197                           ;I2C_LCD.c: 144:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(highnibble | 0x04 | 0x01));
  5198   0033CA  5005               	movf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),w,c
  5199   0033CC  0905               	iorlw	5
  5200   0033CE  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5201   0033D0  0E27               	movlw	39
  5202   0033D2  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  5203                           
  5204                           ; BSR set to: 2
  5205                           ;I2C_LCD.c: 145:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5206   0033D6  0E35               	movlw	53
  5207   0033D8                     u2037:
  5208   0033D8  2EE8               	decfsz	wreg,f,c
  5209   0033DA  D7FE               	bra	u2037
  5210   0033DC  0000               	nop	
  5211                           
  5212                           ;I2C_LCD.c: 146:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(highnibble | 0x01));
  5213   0033DE  5005               	movf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),w,c
  5214   0033E0  0901               	iorlw	1
  5215   0033E2  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5216   0033E4  0E27               	movlw	39
  5217   0033E6  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  5218                           
  5219                           ; BSR set to: 2
  5220                           ;I2C_LCD.c: 147:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5221   0033EA  0E35               	movlw	53
  5222   0033EC                     u2047:
  5223   0033EC  2EE8               	decfsz	wreg,f,c
  5224   0033EE  D7FE               	bra	u2047
  5225   0033F0  0000               	nop	
  5226                           
  5227                           ;I2C_LCD.c: 149:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(lownibble | 0x04 | 0x01));
  5228   0033F2  5006               	movf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),w,c
  5229   0033F4  0905               	iorlw	5
  5230   0033F6  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5231   0033F8  0E27               	movlw	39
  5232   0033FA  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  5233                           
  5234                           ; BSR set to: 2
  5235                           ;I2C_LCD.c: 150:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5236   0033FE  0E35               	movlw	53
  5237   003400                     u2057:
  5238   003400  2EE8               	decfsz	wreg,f,c
  5239   003402  D7FE               	bra	u2057
  5240   003404  0000               	nop	
  5241                           
  5242                           ;I2C_LCD.c: 151:     I2C1_WRITESINGLEBYTE(I2C_LCD_ADDR,(lownibble | 0x01));
  5243   003406  5006               	movf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),w,c
  5244   003408  0901               	iorlw	1
  5245   00340A  6E01               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  5246   00340C  0E27               	movlw	39
  5247   00340E  EC7F  F01B         	call	_I2C1_WRITESINGLEBYTE
  5248                           
  5249                           ; BSR set to: 2
  5250                           ;I2C_LCD.c: 152:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  5251   003412  0E35               	movlw	53
  5252   003414                     u2067:
  5253   003414  2EE8               	decfsz	wreg,f,c
  5254   003416  D7FE               	bra	u2067
  5255   003418  0000               	nop	
  5256   00341A  0012               	return		;funcret
  5257   00341C                     __end_of_I2C_ENVIA_LCD_DATA:
  5258                           	callstack 0
  5259                           
  5260 ;; *************** function _I2C1_WRITESINGLEBYTE *****************
  5261 ;; Defined at:
  5262 ;;		line 60 in file "I2C_LCD.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  direccion       1    wreg     unsigned char 
  5265 ;;  dato            1    0[COMRAM] unsigned char 
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;  direccion       1    1[COMRAM] unsigned char 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  1    wreg      void 
  5270 ;; Registers used:
  5271 ;;		wreg, status,2, status,0
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/2
  5274 ;;		On exit  : 3F/2
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5277 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5281 ;;Total ram usage:        2 bytes
  5282 ;; Hardware stack levels used: 1
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_I2C_ENVIA_LCD_DATA
  5287 ;;		_I2C_ENVIA_LCD_CMD
  5288 ;;		_I2C_LCD_INIT
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text20
  5293   0036FE                     __ptext20:
  5294                           	callstack 0
  5295   0036FE                     _I2C1_WRITESINGLEBYTE:
  5296                           	callstack 123
  5297                           
  5298                           ;incstack = 0
  5299                           ;I2C1_WRITESINGLEBYTE@direccion stored from wreg
  5300   0036FE  6E02               	movwf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),c
  5301                           
  5302                           ;I2C_LCD.c: 61:     I2C1CNT = 1;
  5303   003700  0E01               	movlw	1
  5304   003702  0102               	movlb	2	; () banked
  5305   003704  6F8D               	movwf	141,b	;volatile
  5306                           
  5307                           ; BSR set to: 2
  5308                           ;I2C_LCD.c: 62:     I2C1ADB1 = (direccion << 1) & 0xFE;
  5309   003706  5002               	movf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),w,c
  5310   003708  2402               	addwf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),w,c
  5311   00370A  0BFE               	andlw	254
  5312   00370C  6F8F               	movwf	143,b	;volatile
  5313                           
  5314                           ; BSR set to: 2
  5315                           ;I2C_LCD.c: 63:     I2C1TXB = dato;
  5316   00370E  C501  F28C         	movff	I2C1_WRITESINGLEBYTE@dato,652	;volatile
  5317                           
  5318                           ; BSR set to: 2
  5319                           ;I2C_LCD.c: 64:     I2C1CON0bits.S = 1;
  5320   003712  8B94               	bsf	148,5,b	;volatile
  5321   003714                     l51:
  5322                           
  5323                           ; BSR set to: 2
  5324   003714  AB99               	btfss	153,5,b	;volatile
  5325   003716  D7FE               	goto	l51
  5326   003718                     u750:
  5327                           
  5328                           ; BSR set to: 2
  5329   003718  BB95               	btfsc	149,5,b	;volatile
  5330   00371A  D7FE               	goto	u750
  5331   00371C                     u760:
  5332                           
  5333                           ; BSR set to: 2
  5334   00371C  B59A               	btfsc	154,2,b	;volatile
  5335   00371E  0012               	return	
  5336   003720  D7FD               	goto	u760
  5337   003722                     __end_of_I2C1_WRITESINGLEBYTE:
  5338                           	callstack 0
  5339                           
  5340 ;; *************** function _HCSR04_Distance *****************
  5341 ;; Defined at:
  5342 ;;		line 45 in file "maincode03.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;		None
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  temporal        4   41[COMRAM] float 
  5347 ;;  distancia       2   45[COMRAM] unsigned int 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  2   39[COMRAM] unsigned int 
  5350 ;; Registers used:
  5351 ;;		wreg, status,2, status,0, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/3
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5358 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5360 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5361 ;;Total ram usage:        8 bytes
  5362 ;; Hardware stack levels used: 1
  5363 ;; Hardware stack levels required when called: 1
  5364 ;; This function calls:
  5365 ;;		___fldiv
  5366 ;;		___fltol
  5367 ;;		___xxtofl
  5368 ;; This function is called by:
  5369 ;;		_main
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text21
  5374   00321E                     __ptext21:
  5375                           	callstack 0
  5376   00321E                     _HCSR04_Distance:
  5377                           	callstack 125
  5378                           
  5379                           ;maincode03.c: 46:     float temporal;;maincode03.c: 47:     unsigned int distancia;;mai
      +                          ncode03.c: 48:     TMR1H = 0;
  5380                           
  5381                           ; BSR set to: 2
  5382                           ;incstack = 0
  5383   00321E  0103               	movlb	3	; () banked
  5384   003220  6B1D               	clrf	29,b	;volatile
  5385                           
  5386                           ;maincode03.c: 49:     TMR1L = 0;
  5387   003222  6B1C               	clrf	28,b	;volatile
  5388                           
  5389                           ;maincode03.c: 50:     LATEbits.LATE0 = 1;
  5390   003224  80C2               	bsf	194,0,c	;volatile
  5391                           
  5392                           ; BSR set to: 3
  5393                           ;maincode03.c: 51:     _delay((unsigned long)((10)*(32000000UL/4000000.0)));
  5394   003226  0E1A               	movlw	26
  5395   003228                     u2077:
  5396   003228  2EE8               	decfsz	wreg,f,c
  5397   00322A  D7FE               	bra	u2077
  5398   00322C  D000               	nop2	
  5399                           
  5400                           ;maincode03.c: 52:     LATEbits.LATE0 = 0;
  5401   00322E  90C2               	bcf	194,0,c	;volatile
  5402   003230                     l266:
  5403   003230  A2D0               	btfss	208,1,c	;volatile
  5404   003232  D7FE               	goto	l266
  5405                           
  5406                           ;maincode03.c: 54:     T1CONbits.TMR1ON = 1;
  5407   003234  0103               	movlb	3	; () banked
  5408   003236  811E               	bsf	30,0,b	;volatile
  5409   003238                     l269:
  5410   003238  B2D0               	btfsc	208,1,c	;volatile
  5411   00323A  D7FE               	goto	l269
  5412                           
  5413                           ;maincode03.c: 56:     T1CONbits.TMR1ON = 0;
  5414   00323C  0103               	movlb	3	; () banked
  5415   00323E  911E               	bcf	30,0,b	;volatile
  5416                           
  5417                           ;maincode03.c: 58:     tmr1_count = TMR1;
  5418   003240  C31C F533          	movff	796,_tmr1_count	;volatile
  5419   003244  C31D F534          	movff	797,_tmr1_count+1	;volatile
  5420                           
  5421                           ; BSR set to: 3
  5422                           ;maincode03.c: 59:     temporal = tmr1_count/58.31;
  5423   003248  C533  F501         	movff	_tmr1_count,___xxtofl@val
  5424   00324C  C534  F502         	movff	_tmr1_count+1,___xxtofl@val+1
  5425   003250  6A03               	clrf	(___xxtofl@val+2)^(0+1280),c
  5426   003252  6A04               	clrf	(___xxtofl@val+3)^(0+1280),c
  5427   003254  0E00               	movlw	0
  5428   003256  ECAC  F017         	call	___xxtofl
  5429   00325A  C501  F50F         	movff	?___xxtofl,___fldiv@b
  5430   00325E  C502  F510         	movff	?___xxtofl+1,___fldiv@b+1
  5431   003262  C503  F511         	movff	?___xxtofl+2,___fldiv@b+2
  5432   003266  C504  F512         	movff	?___xxtofl+3,___fldiv@b+3
  5433   00326A  0E71               	movlw	113
  5434   00326C  6E13               	movwf	___fldiv@a^(0+1280),c
  5435   00326E  0E3D               	movlw	61
  5436   003270  6E14               	movwf	(___fldiv@a+1)^(0+1280),c
  5437   003272  0E69               	movlw	105
  5438   003274  6E15               	movwf	(___fldiv@a+2)^(0+1280),c
  5439   003276  0E42               	movlw	66
  5440   003278  6E16               	movwf	(___fldiv@a+3)^(0+1280),c
  5441   00327A  EC69  F016         	call	___fldiv	;wreg free
  5442   00327E  C50F  F52A         	movff	?___fldiv,HCSR04_Distance@temporal
  5443   003282  C510  F52B         	movff	?___fldiv+1,HCSR04_Distance@temporal+1
  5444   003286  C511  F52C         	movff	?___fldiv+2,HCSR04_Distance@temporal+2
  5445   00328A  C512  F52D         	movff	?___fldiv+3,HCSR04_Distance@temporal+3
  5446                           
  5447                           ;maincode03.c: 60:     distancia = temporal;
  5448   00328E  C52A  F501         	movff	HCSR04_Distance@temporal,___fltol@f1
  5449   003292  C52B  F502         	movff	HCSR04_Distance@temporal+1,___fltol@f1+1
  5450   003296  C52C  F503         	movff	HCSR04_Distance@temporal+2,___fltol@f1+2
  5451   00329A  C52D  F504         	movff	HCSR04_Distance@temporal+3,___fltol@f1+3
  5452   00329E  ECB2  F018         	call	___fltol	;wreg free
  5453   0032A2  C501  F52E         	movff	?___fltol,HCSR04_Distance@distancia
  5454   0032A6  C502  F52F         	movff	?___fltol+1,HCSR04_Distance@distancia+1
  5455                           
  5456                           ;maincode03.c: 61:     return distancia;
  5457   0032AA  C52E  F528         	movff	HCSR04_Distance@distancia,?_HCSR04_Distance
  5458   0032AE  C52F  F529         	movff	HCSR04_Distance@distancia+1,?_HCSR04_Distance+1
  5459   0032B2  0012               	return		;funcret
  5460   0032B4                     __end_of_HCSR04_Distance:
  5461                           	callstack 0
  5462                           
  5463 ;; *************** function ___xxtofl *****************
  5464 ;; Defined at:
  5465 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  sign            1    wreg     unsigned char 
  5468 ;;  val             4    0[COMRAM] long 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  sign            1    8[COMRAM] unsigned char 
  5471 ;;  arg             4   10[COMRAM] unsigned long 
  5472 ;;  exp             1    9[COMRAM] unsigned char 
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  4    0[COMRAM] unsigned char 
  5475 ;; Registers used:
  5476 ;;		wreg, status,2, status,0
  5477 ;; Tracked objects:
  5478 ;;		On entry : 3F/3
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5482 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5483 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5484 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5485 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5486 ;;Total ram usage:       14 bytes
  5487 ;; Hardware stack levels used: 1
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_HCSR04_Distance
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           	psect	text22
  5496   002F58                     __ptext22:
  5497                           	callstack 0
  5498   002F58                     ___xxtofl:
  5499                           	callstack 125
  5500                           
  5501                           ;incstack = 0
  5502                           ;___xxtofl@sign stored from wreg
  5503   002F58  6E09               	movwf	___xxtofl@sign^(0+1280),c
  5504   002F5A  5009               	movf	___xxtofl@sign^(0+1280),w,c
  5505   002F5C  A4D8               	btfss	status,2,c
  5506   002F5E  AE04               	btfss	(___xxtofl@val+3)^(0+1280),7,c
  5507   002F60  D01A               	goto	l944
  5508   002F62  C501  F505         	movff	___xxtofl@val,??___xxtofl
  5509   002F66  C502  F506         	movff	___xxtofl@val+1,??___xxtofl+1
  5510   002F6A  C503  F507         	movff	___xxtofl@val+2,??___xxtofl+2
  5511   002F6E  C504  F508         	movff	___xxtofl@val+3,??___xxtofl+3
  5512   002F72  1E05               	comf	??___xxtofl^(0+1280),f,c
  5513   002F74  1E06               	comf	(??___xxtofl+1)^(0+1280),f,c
  5514   002F76  1E07               	comf	(??___xxtofl+2)^(0+1280),f,c
  5515   002F78  1E08               	comf	(??___xxtofl+3)^(0+1280),f,c
  5516   002F7A  2A05               	incf	??___xxtofl^(0+1280),f,c
  5517   002F7C  0E00               	movlw	0
  5518   002F7E  2206               	addwfc	(??___xxtofl+1)^(0+1280),f,c
  5519   002F80  2207               	addwfc	(??___xxtofl+2)^(0+1280),f,c
  5520   002F82  2208               	addwfc	(??___xxtofl+3)^(0+1280),f,c
  5521   002F84  C505  F50B         	movff	??___xxtofl,___xxtofl@arg
  5522   002F88  C506  F50C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5523   002F8C  C507  F50D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5524   002F90  C508  F50E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5525   002F94  D008               	goto	l2338
  5526   002F96                     l944:
  5527   002F96  C501  F50B         	movff	___xxtofl@val,___xxtofl@arg
  5528   002F9A  C502  F50C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5529   002F9E  C503  F50D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5530   002FA2  C504  F50E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5531   002FA6                     l2338:
  5532   002FA6  5001               	movf	___xxtofl@val^(0+1280),w,c
  5533   002FA8  1002               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
  5534   002FAA  1003               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
  5535   002FAC  1004               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
  5536   002FAE  A4D8               	btfss	status,2,c
  5537   002FB0  D009               	goto	l2344
  5538   002FB2  0E00               	movlw	0
  5539   002FB4  6E01               	movwf	?___xxtofl^(0+1280),c
  5540   002FB6  0E00               	movlw	0
  5541   002FB8  6E02               	movwf	(?___xxtofl+1)^(0+1280),c
  5542   002FBA  0E00               	movlw	0
  5543   002FBC  6E03               	movwf	(?___xxtofl+2)^(0+1280),c
  5544   002FBE  0E00               	movlw	0
  5545   002FC0  6E04               	movwf	(?___xxtofl+3)^(0+1280),c
  5546   002FC2  0012               	return	
  5547   002FC4                     l2344:
  5548   002FC4  0E96               	movlw	150
  5549   002FC6  6E0A               	movwf	___xxtofl@exp^(0+1280),c
  5550   002FC8  D006               	goto	l2348
  5551   002FCA                     l2346:
  5552   002FCA  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
  5553   002FCC  90D8               	bcf	status,0,c
  5554   002FCE  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  5555   002FD0  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  5556   002FD2  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  5557   002FD4  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
  5558   002FD6                     l2348:
  5559   002FD6  0E00               	movlw	0
  5560   002FD8  140B               	andwf	___xxtofl@arg^(0+1280),w,c
  5561   002FDA  6E05               	movwf	??___xxtofl^(0+1280),c
  5562   002FDC  0E00               	movlw	0
  5563   002FDE  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  5564   002FE0  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
  5565   002FE2  0E00               	movlw	0
  5566   002FE4  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  5567   002FE6  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
  5568   002FE8  0EFE               	movlw	254
  5569   002FEA  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  5570   002FEC  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
  5571   002FEE  5005               	movf	??___xxtofl^(0+1280),w,c
  5572   002FF0  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  5573   002FF2  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  5574   002FF4  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  5575   002FF6  B4D8               	btfsc	status,2,c
  5576   002FF8  D00D               	goto	l951
  5577   002FFA  D7E7               	goto	l2346
  5578   002FFC                     l2350:
  5579   002FFC  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
  5580   002FFE  0E01               	movlw	1
  5581   003000  260B               	addwf	___xxtofl@arg^(0+1280),f,c
  5582   003002  0E00               	movlw	0
  5583   003004  220C               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
  5584   003006  220D               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
  5585   003008  220E               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
  5586   00300A  90D8               	bcf	status,0,c
  5587   00300C  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  5588   00300E  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  5589   003010  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  5590   003012  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
  5591   003014                     l951:
  5592   003014  0E00               	movlw	0
  5593   003016  140B               	andwf	___xxtofl@arg^(0+1280),w,c
  5594   003018  6E05               	movwf	??___xxtofl^(0+1280),c
  5595   00301A  0E00               	movlw	0
  5596   00301C  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  5597   00301E  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
  5598   003020  0E00               	movlw	0
  5599   003022  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  5600   003024  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
  5601   003026  0EFF               	movlw	255
  5602   003028  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  5603   00302A  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
  5604   00302C  5005               	movf	??___xxtofl^(0+1280),w,c
  5605   00302E  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  5606   003030  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  5607   003032  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  5608   003034  B4D8               	btfsc	status,2,c
  5609   003036  D007               	goto	l2358
  5610   003038  D7E1               	goto	l2350
  5611   00303A                     l2356:
  5612   00303A  060A               	decf	___xxtofl@exp^(0+1280),f,c
  5613   00303C  90D8               	bcf	status,0,c
  5614   00303E  360B               	rlcf	___xxtofl@arg^(0+1280),f,c
  5615   003040  360C               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
  5616   003042  360D               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
  5617   003044  360E               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
  5618   003046                     l2358:
  5619   003046  BE0D               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
  5620   003048  D003               	goto	u1380
  5621   00304A  0E02               	movlw	2
  5622   00304C  600A               	cpfslt	___xxtofl@exp^(0+1280),c
  5623   00304E  D7F5               	goto	l2356
  5624   003050                     u1380:
  5625   003050  A00A               	btfss	___xxtofl@exp^(0+1280),0,c
  5626   003052  9E0D               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
  5627   003054  90D8               	bcf	status,0,c
  5628   003056  320A               	rrcf	___xxtofl@exp^(0+1280),f,c
  5629   003058  C50A  F505         	movff	___xxtofl@exp,??___xxtofl
  5630   00305C  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
  5631   00305E  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
  5632   003060  6A08               	clrf	(??___xxtofl+3)^(0+1280),c
  5633   003062  C505  F508         	movff	??___xxtofl,??___xxtofl+3
  5634   003066  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
  5635   003068  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
  5636   00306A  6A05               	clrf	??___xxtofl^(0+1280),c
  5637   00306C  5005               	movf	??___xxtofl^(0+1280),w,c
  5638   00306E  120B               	iorwf	___xxtofl@arg^(0+1280),f,c
  5639   003070  5006               	movf	(??___xxtofl+1)^(0+1280),w,c
  5640   003072  120C               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
  5641   003074  5007               	movf	(??___xxtofl+2)^(0+1280),w,c
  5642   003076  120D               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
  5643   003078  5008               	movf	(??___xxtofl+3)^(0+1280),w,c
  5644   00307A  120E               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
  5645   00307C  5009               	movf	___xxtofl@sign^(0+1280),w,c
  5646   00307E  A4D8               	btfss	status,2,c
  5647   003080  AE04               	btfss	(___xxtofl@val+3)^(0+1280),7,c
  5648   003082  D001               	goto	l2374
  5649   003084  8E0E               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
  5650   003086                     l2374:
  5651   003086  C50B  F501         	movff	___xxtofl@arg,?___xxtofl
  5652   00308A  C50C  F502         	movff	___xxtofl@arg+1,?___xxtofl+1
  5653   00308E  C50D  F503         	movff	___xxtofl@arg+2,?___xxtofl+2
  5654   003092  C50E  F504         	movff	___xxtofl@arg+3,?___xxtofl+3
  5655   003096  0012               	return		;funcret
  5656   003098                     __end_of___xxtofl:
  5657                           	callstack 0
  5658                           
  5659 ;; *************** function ___fltol *****************
  5660 ;; Defined at:
  5661 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  f1              4    0[COMRAM] unsigned char 
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;  exp1            1    9[COMRAM] unsigned char 
  5666 ;;  sign1           1    8[COMRAM] unsigned char 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  4    0[COMRAM] long 
  5669 ;; Registers used:
  5670 ;;		wreg, status,2, status,0
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/3
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5678 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5679 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5680 ;;Total ram usage:       10 bytes
  5681 ;; Hardware stack levels used: 1
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_HCSR04_Distance
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           	psect	text23
  5690   003164                     __ptext23:
  5691                           	callstack 0
  5692   003164                     ___fltol:
  5693                           	callstack 125
  5694                           
  5695                           ;incstack = 0
  5696   003164  3403               	rlcf	(___fltol@f1+2)^(0+1280),w,c
  5697   003166  3404               	rlcf	(___fltol@f1+3)^(0+1280),w,c
  5698   003168  6E0A               	movwf	___fltol@exp1^(0+1280),c
  5699   00316A  500A               	movf	___fltol@exp1^(0+1280),w,c
  5700   00316C  A4D8               	btfss	status,2,c
  5701   00316E  D009               	goto	l2212
  5702   003170                     u1150:
  5703   003170  0E00               	movlw	0
  5704   003172  6E01               	movwf	?___fltol^(0+1280),c
  5705   003174  0E00               	movlw	0
  5706   003176  6E02               	movwf	(?___fltol+1)^(0+1280),c
  5707   003178  0E00               	movlw	0
  5708   00317A  6E03               	movwf	(?___fltol+2)^(0+1280),c
  5709   00317C  0E00               	movlw	0
  5710   00317E  6E04               	movwf	(?___fltol+3)^(0+1280),c
  5711   003180  0012               	return	
  5712   003182                     l2212:
  5713   003182  C501  F505         	movff	___fltol@f1,??___fltol
  5714   003186  C502  F506         	movff	___fltol@f1+1,??___fltol+1
  5715   00318A  C503  F507         	movff	___fltol@f1+2,??___fltol+2
  5716   00318E  C504  F508         	movff	___fltol@f1+3,??___fltol+3
  5717   003192  0E20               	movlw	32
  5718   003194  D005               	goto	u1160
  5719   003196                     u1165:
  5720   003196  90D8               	bcf	status,0,c
  5721   003198  3208               	rrcf	(??___fltol+3)^(0+1280),f,c
  5722   00319A  3207               	rrcf	(??___fltol+2)^(0+1280),f,c
  5723   00319C  3206               	rrcf	(??___fltol+1)^(0+1280),f,c
  5724   00319E  3205               	rrcf	??___fltol^(0+1280),f,c
  5725   0031A0                     u1160:
  5726   0031A0  2EE8               	decfsz	wreg,f,c
  5727   0031A2  D7F9               	goto	u1165
  5728   0031A4  5005               	movf	??___fltol^(0+1280),w,c
  5729   0031A6  6E09               	movwf	___fltol@sign1^(0+1280),c
  5730   0031A8  8E03               	bsf	(___fltol@f1+2)^(0+1280),7,c
  5731   0031AA  0EFF               	movlw	255
  5732   0031AC  1601               	andwf	___fltol@f1^(0+1280),f,c
  5733   0031AE  0EFF               	movlw	255
  5734   0031B0  1602               	andwf	(___fltol@f1+1)^(0+1280),f,c
  5735   0031B2  0EFF               	movlw	255
  5736   0031B4  1603               	andwf	(___fltol@f1+2)^(0+1280),f,c
  5737   0031B6  0E00               	movlw	0
  5738   0031B8  1604               	andwf	(___fltol@f1+3)^(0+1280),f,c
  5739   0031BA  0E96               	movlw	150
  5740   0031BC  5E0A               	subwf	___fltol@exp1^(0+1280),f,c
  5741   0031BE  AE0A               	btfss	___fltol@exp1^(0+1280),7,c
  5742   0031C0  D00D               	goto	l2232
  5743   0031C2  500A               	movf	___fltol@exp1^(0+1280),w,c
  5744   0031C4  0A80               	xorlw	128
  5745   0031C6  0F97               	addlw	151
  5746   0031C8  A0D8               	btfss	status,0,c
  5747   0031CA  D7D2               	goto	u1150
  5748   0031CC                     l2228:
  5749   0031CC  90D8               	bcf	status,0,c
  5750   0031CE  3204               	rrcf	(___fltol@f1+3)^(0+1280),f,c
  5751   0031D0  3203               	rrcf	(___fltol@f1+2)^(0+1280),f,c
  5752   0031D2  3202               	rrcf	(___fltol@f1+1)^(0+1280),f,c
  5753   0031D4  3201               	rrcf	___fltol@f1^(0+1280),f,c
  5754   0031D6  3E0A               	incfsz	___fltol@exp1^(0+1280),f,c
  5755   0031D8  D7F9               	goto	l2228
  5756   0031DA  D00D               	goto	u1200
  5757   0031DC                     l2232:
  5758   0031DC  0E1F               	movlw	31
  5759   0031DE  640A               	cpfsgt	___fltol@exp1^(0+1280),c
  5760   0031E0  D007               	goto	l2240
  5761   0031E2  D7C6               	goto	u1150
  5762   0031E4                     l2238:
  5763   0031E4  90D8               	bcf	status,0,c
  5764   0031E6  3601               	rlcf	___fltol@f1^(0+1280),f,c
  5765   0031E8  3602               	rlcf	(___fltol@f1+1)^(0+1280),f,c
  5766   0031EA  3603               	rlcf	(___fltol@f1+2)^(0+1280),f,c
  5767   0031EC  3604               	rlcf	(___fltol@f1+3)^(0+1280),f,c
  5768   0031EE  060A               	decf	___fltol@exp1^(0+1280),f,c
  5769   0031F0                     l2240:
  5770   0031F0  500A               	movf	___fltol@exp1^(0+1280),w,c
  5771   0031F2  A4D8               	btfss	status,2,c
  5772   0031F4  D7F7               	goto	l2238
  5773   0031F6                     u1200:
  5774   0031F6  5009               	movf	___fltol@sign1^(0+1280),w,c
  5775   0031F8  B4D8               	btfsc	status,2,c
  5776   0031FA  D008               	goto	l2246
  5777   0031FC  1E04               	comf	(___fltol@f1+3)^(0+1280),f,c
  5778   0031FE  1E03               	comf	(___fltol@f1+2)^(0+1280),f,c
  5779   003200  1E02               	comf	(___fltol@f1+1)^(0+1280),f,c
  5780   003202  6C01               	negf	___fltol@f1^(0+1280),c
  5781   003204  0E00               	movlw	0
  5782   003206  2202               	addwfc	(___fltol@f1+1)^(0+1280),f,c
  5783   003208  2203               	addwfc	(___fltol@f1+2)^(0+1280),f,c
  5784   00320A  2204               	addwfc	(___fltol@f1+3)^(0+1280),f,c
  5785   00320C                     l2246:
  5786   00320C  C501  F501         	movff	___fltol@f1,?___fltol
  5787   003210  C502  F502         	movff	___fltol@f1+1,?___fltol+1
  5788   003214  C503  F503         	movff	___fltol@f1+2,?___fltol+2
  5789   003218  C504  F504         	movff	___fltol@f1+3,?___fltol+3
  5790   00321C  0012               	return		;funcret
  5791   00321E                     __end_of___fltol:
  5792                           	callstack 0
  5793                           
  5794 ;; *************** function ___fldiv *****************
  5795 ;; Defined at:
  5796 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  b               4   14[COMRAM] long 
  5799 ;;  a               4   18[COMRAM] long 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  grs             4   33[COMRAM] unsigned long 
  5802 ;;  rem             4   26[COMRAM] unsigned long 
  5803 ;;  new_exp         2   31[COMRAM] short 
  5804 ;;  aexp            1   38[COMRAM] unsigned char 
  5805 ;;  bexp            1   37[COMRAM] unsigned char 
  5806 ;;  sign            1   30[COMRAM] unsigned char 
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  4   14[COMRAM] unsigned char 
  5809 ;; Registers used:
  5810 ;;		wreg, status,2, status,0
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/3
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5816 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5817 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5818 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5819 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5820 ;;Total ram usage:       25 bytes
  5821 ;; Hardware stack levels used: 1
  5822 ;; This function calls:
  5823 ;;		Nothing
  5824 ;; This function is called by:
  5825 ;;		_HCSR04_Distance
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           	psect	text24
  5830   002CD2                     __ptext24:
  5831                           	callstack 0
  5832   002CD2                     ___fldiv:
  5833                           	callstack 125
  5834                           
  5835                           ;incstack = 0
  5836   002CD2  5012               	movf	(___fldiv@b+3)^(0+1280),w,c
  5837   002CD4  0B80               	andlw	128
  5838   002CD6  6E1F               	movwf	___fldiv@sign^(0+1280),c
  5839   002CD8  5012               	movf	(___fldiv@b+3)^(0+1280),w,c
  5840   002CDA  2412               	addwf	(___fldiv@b+3)^(0+1280),w,c
  5841   002CDC  6E26               	movwf	___fldiv@bexp^(0+1280),c
  5842   002CDE  BE11               	btfsc	(___fldiv@b+2)^(0+1280),7,c
  5843   002CE0  8026               	bsf	___fldiv@bexp^(0+1280),0,c
  5844   002CE2  5026               	movf	___fldiv@bexp^(0+1280),w,c
  5845   002CE4  B4D8               	btfsc	status,2,c
  5846   002CE6  D00E               	goto	l2050
  5847   002CE8  2826               	incf	___fldiv@bexp^(0+1280),w,c
  5848   002CEA  A4D8               	btfss	status,2,c
  5849   002CEC  D008               	goto	l2046
  5850   002CEE  0E00               	movlw	0
  5851   002CF0  6E0F               	movwf	___fldiv@b^(0+1280),c
  5852   002CF2  0E00               	movlw	0
  5853   002CF4  6E10               	movwf	(___fldiv@b+1)^(0+1280),c
  5854   002CF6  0E00               	movlw	0
  5855   002CF8  6E11               	movwf	(___fldiv@b+2)^(0+1280),c
  5856   002CFA  0E00               	movlw	0
  5857   002CFC  6E12               	movwf	(___fldiv@b+3)^(0+1280),c
  5858   002CFE                     l2046:
  5859   002CFE  8E11               	bsf	(___fldiv@b+2)^(0+1280),7,c
  5860   002D00  6A12               	clrf	(___fldiv@b+3)^(0+1280),c
  5861   002D02  D008               	goto	l2052
  5862   002D04                     l2050:
  5863   002D04  0E00               	movlw	0
  5864   002D06  6E0F               	movwf	___fldiv@b^(0+1280),c
  5865   002D08  0E00               	movlw	0
  5866   002D0A  6E10               	movwf	(___fldiv@b+1)^(0+1280),c
  5867   002D0C  0E00               	movlw	0
  5868   002D0E  6E11               	movwf	(___fldiv@b+2)^(0+1280),c
  5869   002D10  0E00               	movlw	0
  5870   002D12  6E12               	movwf	(___fldiv@b+3)^(0+1280),c
  5871   002D14                     l2052:
  5872   002D14  5016               	movf	(___fldiv@a+3)^(0+1280),w,c
  5873   002D16  0B80               	andlw	128
  5874   002D18  1A1F               	xorwf	___fldiv@sign^(0+1280),f,c
  5875   002D1A  5016               	movf	(___fldiv@a+3)^(0+1280),w,c
  5876   002D1C  2416               	addwf	(___fldiv@a+3)^(0+1280),w,c
  5877   002D1E  6E27               	movwf	___fldiv@aexp^(0+1280),c
  5878   002D20  BE15               	btfsc	(___fldiv@a+2)^(0+1280),7,c
  5879   002D22  8027               	bsf	___fldiv@aexp^(0+1280),0,c
  5880   002D24  5027               	movf	___fldiv@aexp^(0+1280),w,c
  5881   002D26  B4D8               	btfsc	status,2,c
  5882   002D28  D00E               	goto	l2070
  5883   002D2A  2827               	incf	___fldiv@aexp^(0+1280),w,c
  5884   002D2C  A4D8               	btfss	status,2,c
  5885   002D2E  D008               	goto	l2066
  5886   002D30  0E00               	movlw	0
  5887   002D32  6E13               	movwf	___fldiv@a^(0+1280),c
  5888   002D34  0E00               	movlw	0
  5889   002D36  6E14               	movwf	(___fldiv@a+1)^(0+1280),c
  5890   002D38  0E00               	movlw	0
  5891   002D3A  6E15               	movwf	(___fldiv@a+2)^(0+1280),c
  5892   002D3C  0E00               	movlw	0
  5893   002D3E  6E16               	movwf	(___fldiv@a+3)^(0+1280),c
  5894   002D40                     l2066:
  5895   002D40  8E15               	bsf	(___fldiv@a+2)^(0+1280),7,c
  5896   002D42  6A16               	clrf	(___fldiv@a+3)^(0+1280),c
  5897   002D44  D008               	goto	l2072
  5898   002D46                     l2070:
  5899   002D46  0E00               	movlw	0
  5900   002D48  6E13               	movwf	___fldiv@a^(0+1280),c
  5901   002D4A  0E00               	movlw	0
  5902   002D4C  6E14               	movwf	(___fldiv@a+1)^(0+1280),c
  5903   002D4E  0E00               	movlw	0
  5904   002D50  6E15               	movwf	(___fldiv@a+2)^(0+1280),c
  5905   002D52  0E00               	movlw	0
  5906   002D54  6E16               	movwf	(___fldiv@a+3)^(0+1280),c
  5907   002D56                     l2072:
  5908   002D56  5013               	movf	___fldiv@a^(0+1280),w,c
  5909   002D58  1014               	iorwf	(___fldiv@a+1)^(0+1280),w,c
  5910   002D5A  1015               	iorwf	(___fldiv@a+2)^(0+1280),w,c
  5911   002D5C  1016               	iorwf	(___fldiv@a+3)^(0+1280),w,c
  5912   002D5E  A4D8               	btfss	status,2,c
  5913   002D60  D017               	goto	l2084
  5914   002D62  0E00               	movlw	0
  5915   002D64  6E0F               	movwf	___fldiv@b^(0+1280),c
  5916   002D66  0E00               	movlw	0
  5917   002D68  6E10               	movwf	(___fldiv@b+1)^(0+1280),c
  5918   002D6A  0E00               	movlw	0
  5919   002D6C  6E11               	movwf	(___fldiv@b+2)^(0+1280),c
  5920   002D6E  0E00               	movlw	0
  5921   002D70  6E12               	movwf	(___fldiv@b+3)^(0+1280),c
  5922   002D72  0E80               	movlw	128
  5923   002D74  1211               	iorwf	(___fldiv@b+2)^(0+1280),f,c
  5924   002D76  0E7F               	movlw	127
  5925   002D78  1212               	iorwf	(___fldiv@b+3)^(0+1280),f,c
  5926   002D7A                     l2078:
  5927   002D7A  501F               	movf	___fldiv@sign^(0+1280),w,c
  5928   002D7C  1212               	iorwf	(___fldiv@b+3)^(0+1280),f,c
  5929   002D7E  C50F  F50F         	movff	___fldiv@b,?___fldiv
  5930   002D82  C510  F510         	movff	___fldiv@b+1,?___fldiv+1
  5931   002D86  C511  F511         	movff	___fldiv@b+2,?___fldiv+2
  5932   002D8A  C512  F512         	movff	___fldiv@b+3,?___fldiv+3
  5933   002D8E  0012               	return	
  5934   002D90                     l2084:
  5935   002D90  5026               	movf	___fldiv@bexp^(0+1280),w,c
  5936   002D92  A4D8               	btfss	status,2,c
  5937   002D94  D009               	goto	l2092
  5938   002D96  0E00               	movlw	0
  5939   002D98  6E0F               	movwf	?___fldiv^(0+1280),c
  5940   002D9A  0E00               	movlw	0
  5941   002D9C  6E10               	movwf	(?___fldiv+1)^(0+1280),c
  5942   002D9E  0E00               	movlw	0
  5943   002DA0  6E11               	movwf	(?___fldiv+2)^(0+1280),c
  5944   002DA2  0E00               	movlw	0
  5945   002DA4  6E12               	movwf	(?___fldiv+3)^(0+1280),c
  5946   002DA6  0012               	return	
  5947   002DA8                     l2092:
  5948   002DA8  5027               	movf	___fldiv@aexp^(0+1280),w,c
  5949   002DAA  C526  F517         	movff	___fldiv@bexp,??___fldiv
  5950   002DAE  6A18               	clrf	(??___fldiv+1)^(0+1280),c
  5951   002DB0  5E17               	subwf	??___fldiv^(0+1280),f,c
  5952   002DB2  0E00               	movlw	0
  5953   002DB4  5A18               	subwfb	(??___fldiv+1)^(0+1280),f,c
  5954   002DB6  0E7F               	movlw	127
  5955   002DB8  2417               	addwf	??___fldiv^(0+1280),w,c
  5956   002DBA  6E20               	movwf	___fldiv@new_exp^(0+1280),c
  5957   002DBC  0E00               	movlw	0
  5958   002DBE  2018               	addwfc	(??___fldiv+1)^(0+1280),w,c
  5959   002DC0  6E21               	movwf	(___fldiv@new_exp+1)^(0+1280),c
  5960   002DC2  C50F  F51B         	movff	___fldiv@b,___fldiv@rem
  5961   002DC6  C510  F51C         	movff	___fldiv@b+1,___fldiv@rem+1
  5962   002DCA  C511  F51D         	movff	___fldiv@b+2,___fldiv@rem+2
  5963   002DCE  C512  F51E         	movff	___fldiv@b+3,___fldiv@rem+3
  5964   002DD2  0E00               	movlw	0
  5965   002DD4  6E0F               	movwf	___fldiv@b^(0+1280),c
  5966   002DD6  0E00               	movlw	0
  5967   002DD8  6E10               	movwf	(___fldiv@b+1)^(0+1280),c
  5968   002DDA  0E00               	movlw	0
  5969   002DDC  6E11               	movwf	(___fldiv@b+2)^(0+1280),c
  5970   002DDE  0E00               	movlw	0
  5971   002DE0  6E12               	movwf	(___fldiv@b+3)^(0+1280),c
  5972   002DE2  0E00               	movlw	0
  5973   002DE4  6E22               	movwf	___fldiv@grs^(0+1280),c
  5974   002DE6  0E00               	movlw	0
  5975   002DE8  6E23               	movwf	(___fldiv@grs+1)^(0+1280),c
  5976   002DEA  0E00               	movlw	0
  5977   002DEC  6E24               	movwf	(___fldiv@grs+2)^(0+1280),c
  5978   002DEE  0E00               	movlw	0
  5979   002DF0  6E25               	movwf	(___fldiv@grs+3)^(0+1280),c
  5980   002DF2  6A27               	clrf	___fldiv@aexp^(0+1280),c
  5981   002DF4  D028               	goto	l873
  5982   002DF6                     l2102:
  5983   002DF6  5027               	movf	___fldiv@aexp^(0+1280),w,c
  5984   002DF8  B4D8               	btfsc	status,2,c
  5985   002DFA  D011               	goto	l2110
  5986   002DFC  90D8               	bcf	status,0,c
  5987   002DFE  361B               	rlcf	___fldiv@rem^(0+1280),f,c
  5988   002E00  361C               	rlcf	(___fldiv@rem+1)^(0+1280),f,c
  5989   002E02  361D               	rlcf	(___fldiv@rem+2)^(0+1280),f,c
  5990   002E04  361E               	rlcf	(___fldiv@rem+3)^(0+1280),f,c
  5991   002E06  90D8               	bcf	status,0,c
  5992   002E08  360F               	rlcf	___fldiv@b^(0+1280),f,c
  5993   002E0A  3610               	rlcf	(___fldiv@b+1)^(0+1280),f,c
  5994   002E0C  3611               	rlcf	(___fldiv@b+2)^(0+1280),f,c
  5995   002E0E  3612               	rlcf	(___fldiv@b+3)^(0+1280),f,c
  5996   002E10  BE25               	btfsc	(___fldiv@grs+3)^(0+1280),7,c
  5997   002E12  800F               	bsf	___fldiv@b^(0+1280),0,c
  5998   002E14  90D8               	bcf	status,0,c
  5999   002E16  3622               	rlcf	___fldiv@grs^(0+1280),f,c
  6000   002E18  3623               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
  6001   002E1A  3624               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
  6002   002E1C  3625               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
  6003   002E1E                     l2110:
  6004   002E1E  5013               	movf	___fldiv@a^(0+1280),w,c
  6005   002E20  5C1B               	subwf	___fldiv@rem^(0+1280),w,c
  6006   002E22  5014               	movf	(___fldiv@a+1)^(0+1280),w,c
  6007   002E24  581C               	subwfb	(___fldiv@rem+1)^(0+1280),w,c
  6008   002E26  5015               	movf	(___fldiv@a+2)^(0+1280),w,c
  6009   002E28  581D               	subwfb	(___fldiv@rem+2)^(0+1280),w,c
  6010   002E2A  5016               	movf	(___fldiv@a+3)^(0+1280),w,c
  6011   002E2C  581E               	subwfb	(___fldiv@rem+3)^(0+1280),w,c
  6012   002E2E  A0D8               	btfss	status,0,c
  6013   002E30  D009               	goto	l2116
  6014   002E32  8C25               	bsf	(___fldiv@grs+3)^(0+1280),6,c
  6015   002E34  5013               	movf	___fldiv@a^(0+1280),w,c
  6016   002E36  5E1B               	subwf	___fldiv@rem^(0+1280),f,c
  6017   002E38  5014               	movf	(___fldiv@a+1)^(0+1280),w,c
  6018   002E3A  5A1C               	subwfb	(___fldiv@rem+1)^(0+1280),f,c
  6019   002E3C  5015               	movf	(___fldiv@a+2)^(0+1280),w,c
  6020   002E3E  5A1D               	subwfb	(___fldiv@rem+2)^(0+1280),f,c
  6021   002E40  5016               	movf	(___fldiv@a+3)^(0+1280),w,c
  6022   002E42  5A1E               	subwfb	(___fldiv@rem+3)^(0+1280),f,c
  6023   002E44                     l2116:
  6024   002E44  2A27               	incf	___fldiv@aexp^(0+1280),f,c
  6025   002E46                     l873:
  6026   002E46  0E19               	movlw	25
  6027   002E48  6427               	cpfsgt	___fldiv@aexp^(0+1280),c
  6028   002E4A  D7D5               	goto	l2102
  6029   002E4C  501B               	movf	___fldiv@rem^(0+1280),w,c
  6030   002E4E  101C               	iorwf	(___fldiv@rem+1)^(0+1280),w,c
  6031   002E50  101D               	iorwf	(___fldiv@rem+2)^(0+1280),w,c
  6032   002E52  101E               	iorwf	(___fldiv@rem+3)^(0+1280),w,c
  6033   002E54  B4D8               	btfsc	status,2,c
  6034   002E56  D011               	goto	l2128
  6035   002E58  8022               	bsf	___fldiv@grs^(0+1280),0,c
  6036   002E5A  D00F               	goto	l2128
  6037   002E5C                     l2122:
  6038   002E5C  90D8               	bcf	status,0,c
  6039   002E5E  360F               	rlcf	___fldiv@b^(0+1280),f,c
  6040   002E60  3610               	rlcf	(___fldiv@b+1)^(0+1280),f,c
  6041   002E62  3611               	rlcf	(___fldiv@b+2)^(0+1280),f,c
  6042   002E64  3612               	rlcf	(___fldiv@b+3)^(0+1280),f,c
  6043   002E66  BE25               	btfsc	(___fldiv@grs+3)^(0+1280),7,c
  6044   002E68  800F               	bsf	___fldiv@b^(0+1280),0,c
  6045   002E6A  90D8               	bcf	status,0,c
  6046   002E6C  3622               	rlcf	___fldiv@grs^(0+1280),f,c
  6047   002E6E  3623               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
  6048   002E70  3624               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
  6049   002E72  3625               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
  6050   002E74  0620               	decf	___fldiv@new_exp^(0+1280),f,c
  6051   002E76  A0D8               	btfss	status,0,c
  6052   002E78  0621               	decf	(___fldiv@new_exp+1)^(0+1280),f,c
  6053   002E7A                     l2128:
  6054   002E7A  AE11               	btfss	(___fldiv@b+2)^(0+1280),7,c
  6055   002E7C  D7EF               	goto	l2122
  6056   002E7E  6A27               	clrf	___fldiv@aexp^(0+1280),c
  6057   002E80  AE25               	btfss	(___fldiv@grs+3)^(0+1280),7,c
  6058   002E82  D017               	goto	l884
  6059   002E84  0EFF               	movlw	255
  6060   002E86  1422               	andwf	___fldiv@grs^(0+1280),w,c
  6061   002E88  6E17               	movwf	??___fldiv^(0+1280),c
  6062   002E8A  0EFF               	movlw	255
  6063   002E8C  1423               	andwf	(___fldiv@grs+1)^(0+1280),w,c
  6064   002E8E  6E18               	movwf	(??___fldiv+1)^(0+1280),c
  6065   002E90  0EFF               	movlw	255
  6066   002E92  1424               	andwf	(___fldiv@grs+2)^(0+1280),w,c
  6067   002E94  6E19               	movwf	(??___fldiv+2)^(0+1280),c
  6068   002E96  0E7F               	movlw	127
  6069   002E98  1425               	andwf	(___fldiv@grs+3)^(0+1280),w,c
  6070   002E9A  6E1A               	movwf	(??___fldiv+3)^(0+1280),c
  6071   002E9C  5017               	movf	??___fldiv^(0+1280),w,c
  6072   002E9E  1018               	iorwf	(??___fldiv+1)^(0+1280),w,c
  6073   002EA0  1019               	iorwf	(??___fldiv+2)^(0+1280),w,c
  6074   002EA2  101A               	iorwf	(??___fldiv+3)^(0+1280),w,c
  6075   002EA4  B4D8               	btfsc	status,2,c
  6076   002EA6  D003               	goto	l885
  6077   002EA8                     u1020:
  6078   002EA8  0E01               	movlw	1
  6079   002EAA  6E27               	movwf	___fldiv@aexp^(0+1280),c
  6080   002EAC  D002               	goto	l884
  6081   002EAE                     l885:
  6082   002EAE  B00F               	btfsc	___fldiv@b^(0+1280),0,c
  6083   002EB0  D7FB               	goto	u1020
  6084   002EB2                     l884:
  6085   002EB2  5027               	movf	___fldiv@aexp^(0+1280),w,c
  6086   002EB4  B4D8               	btfsc	status,2,c
  6087   002EB6  D01F               	goto	l2144
  6088   002EB8  0E01               	movlw	1
  6089   002EBA  260F               	addwf	___fldiv@b^(0+1280),f,c
  6090   002EBC  0E00               	movlw	0
  6091   002EBE  2210               	addwfc	(___fldiv@b+1)^(0+1280),f,c
  6092   002EC0  2211               	addwfc	(___fldiv@b+2)^(0+1280),f,c
  6093   002EC2  2212               	addwfc	(___fldiv@b+3)^(0+1280),f,c
  6094   002EC4  A012               	btfss	(___fldiv@b+3)^(0+1280),0,c
  6095   002EC6  D017               	goto	l2144
  6096   002EC8  C50F  F517         	movff	___fldiv@b,??___fldiv
  6097   002ECC  C510  F518         	movff	___fldiv@b+1,??___fldiv+1
  6098   002ED0  C511  F519         	movff	___fldiv@b+2,??___fldiv+2
  6099   002ED4  C512  F51A         	movff	___fldiv@b+3,??___fldiv+3
  6100   002ED8  341A               	rlcf	(??___fldiv+3)^(0+1280),w,c
  6101   002EDA  321A               	rrcf	(??___fldiv+3)^(0+1280),f,c
  6102   002EDC  3219               	rrcf	(??___fldiv+2)^(0+1280),f,c
  6103   002EDE  3218               	rrcf	(??___fldiv+1)^(0+1280),f,c
  6104   002EE0  3217               	rrcf	??___fldiv^(0+1280),f,c
  6105   002EE2  C517  F50F         	movff	??___fldiv,___fldiv@b
  6106   002EE6  C518  F510         	movff	??___fldiv+1,___fldiv@b+1
  6107   002EEA  C519  F511         	movff	??___fldiv+2,___fldiv@b+2
  6108   002EEE  C51A  F512         	movff	??___fldiv+3,___fldiv@b+3
  6109   002EF2  4A20               	infsnz	___fldiv@new_exp^(0+1280),f,c
  6110   002EF4  2A21               	incf	(___fldiv@new_exp+1)^(0+1280),f,c
  6111   002EF6                     l2144:
  6112   002EF6  BE21               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
  6113   002EF8  D010               	goto	l2148
  6114   002EFA  5021               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
  6115   002EFC  E103               	bnz	u1060
  6116   002EFE  2820               	incf	___fldiv@new_exp^(0+1280),w,c
  6117   002F00  A0D8               	btfss	status,0,c
  6118   002F02  D00B               	goto	l2148
  6119   002F04                     u1060:
  6120   002F04  0E00               	movlw	0
  6121   002F06  6E21               	movwf	(___fldiv@new_exp+1)^(0+1280),c
  6122   002F08  6820               	setf	___fldiv@new_exp^(0+1280),c
  6123   002F0A  0E00               	movlw	0
  6124   002F0C  6E0F               	movwf	___fldiv@b^(0+1280),c
  6125   002F0E  0E00               	movlw	0
  6126   002F10  6E10               	movwf	(___fldiv@b+1)^(0+1280),c
  6127   002F12  0E00               	movlw	0
  6128   002F14  6E11               	movwf	(___fldiv@b+2)^(0+1280),c
  6129   002F16  0E00               	movlw	0
  6130   002F18  6E12               	movwf	(___fldiv@b+3)^(0+1280),c
  6131   002F1A                     l2148:
  6132   002F1A  BE21               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
  6133   002F1C  D005               	goto	u1070
  6134   002F1E  5021               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
  6135   002F20  E110               	bnz	l2154
  6136   002F22  0420               	decf	___fldiv@new_exp^(0+1280),w,c
  6137   002F24  B0D8               	btfsc	status,0,c
  6138   002F26  D00D               	goto	l2154
  6139   002F28                     u1070:
  6140   002F28  0E00               	movlw	0
  6141   002F2A  6E21               	movwf	(___fldiv@new_exp+1)^(0+1280),c
  6142   002F2C  0E00               	movlw	0
  6143   002F2E  6E20               	movwf	___fldiv@new_exp^(0+1280),c
  6144   002F30  0E00               	movlw	0
  6145   002F32  6E0F               	movwf	___fldiv@b^(0+1280),c
  6146   002F34  0E00               	movlw	0
  6147   002F36  6E10               	movwf	(___fldiv@b+1)^(0+1280),c
  6148   002F38  0E00               	movlw	0
  6149   002F3A  6E11               	movwf	(___fldiv@b+2)^(0+1280),c
  6150   002F3C  0E00               	movlw	0
  6151   002F3E  6E12               	movwf	(___fldiv@b+3)^(0+1280),c
  6152   002F40  6A1F               	clrf	___fldiv@sign^(0+1280),c
  6153   002F42                     l2154:
  6154   002F42  C520  F526         	movff	___fldiv@new_exp,___fldiv@bexp
  6155   002F46  A026               	btfss	___fldiv@bexp^(0+1280),0,c
  6156   002F48  D002               	goto	l2160
  6157   002F4A  8E11               	bsf	(___fldiv@b+2)^(0+1280),7,c
  6158   002F4C  D001               	goto	l2162
  6159   002F4E                     l2160:
  6160   002F4E  9E11               	bcf	(___fldiv@b+2)^(0+1280),7,c
  6161   002F50                     l2162:
  6162   002F50  90D8               	bcf	status,0,c
  6163   002F52  3026               	rrcf	___fldiv@bexp^(0+1280),w,c
  6164   002F54  6E12               	movwf	(___fldiv@b+3)^(0+1280),c
  6165   002F56  D711               	goto	l2078
  6166   002F58                     __end_of___fldiv:
  6167                           	callstack 0
  6168                           
  6169                           	psect	rparam
  6170   000001                     ___rparam_used  equ	1
  6171   000000                     ___param_bank   equ	0
  6172   000000                     __Lparam        equ	__Lrparam
  6173   000000                     __Hparam        equ	__Hrparam
  6174                           
  6175                           	psect	config
  6176                           
  6177                           ;Config register CONFIG1 @ 0x300000
  6178                           ;	External Oscillator Selection
  6179                           ;	FEXTOSC = OFF, Oscillator not enabled
  6180                           ;	Reset Oscillator Selection
  6181                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  6182   300000                     	org	3145728
  6183   300000  FC                 	db	252
  6184                           
  6185                           ;Config register CONFIG2 @ 0x300001
  6186                           ;	Clock out Enable bit
  6187                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  6188                           ;	PRLOCKED One-Way Set Enable bit
  6189                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  6190                           ;	Clock Switch Enable bit
  6191                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  6192                           ;	Fail-Safe Clock Monitor Enable bit
  6193                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  6194   300001                     	org	3145729
  6195   300001  FF                 	db	255
  6196                           
  6197                           ;Config register CONFIG3 @ 0x300002
  6198                           ;	MCLR Enable bit
  6199                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  6200                           ;	Power-up timer selection bits
  6201                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  6202                           ;	Multi-vector enable bit
  6203                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  6204                           ;	IVTLOCK bit One-way set enable bit
  6205                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  6206                           ;	Low Power BOR Enable bit
  6207                           ;	LPBOREN = OFF, Low-Power BOR disabled
  6208                           ;	Brown-out Reset Enable bits
  6209                           ;	BOREN = OFF, Brown-out Reset disabled
  6210   300002                     	org	3145730
  6211   300002  3D                 	db	61
  6212                           
  6213                           ;Config register CONFIG4 @ 0x300003
  6214                           ;	Brown-out Reset Voltage Selection bits
  6215                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  6216                           ;	ZCD Disable bit
  6217                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  6218                           ;	PPSLOCK bit One-Way Set Enable bit
  6219                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  6220                           ;	Stack Full/Underflow Reset Enable bit
  6221                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6222                           ;	Low Voltage Programming Enable bit
  6223                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  6224                           ;	Extended Instruction Set Enable bit
  6225                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  6226   300003                     	org	3145731
  6227   300003  DF                 	db	223
  6228                           
  6229                           ;Config register CONFIG5 @ 0x300004
  6230                           ;	WDT Period selection bits
  6231                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6232                           ;	WDT operating mode
  6233                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  6234   300004                     	org	3145732
  6235   300004  9F                 	db	159
  6236                           
  6237                           ;Config register CONFIG6 @ 0x300005
  6238                           ;	WDT Window Select bits
  6239                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  6240                           ;	WDT input clock selector
  6241                           ;	WDTCCS = SC, Software Control
  6242   300005                     	org	3145733
  6243   300005  FF                 	db	255
  6244                           
  6245                           ;Config register CONFIG7 @ 0x300006
  6246                           ;	Boot Block Size selection bits
  6247                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  6248                           ;	Boot Block enable bit
  6249                           ;	BBEN = OFF, Boot block disabled
  6250                           ;	Storage Area Flash enable bit
  6251                           ;	SAFEN = OFF, SAF disabled
  6252                           ;	Background Debugger
  6253                           ;	DEBUG = OFF, Background Debugger disabled
  6254   300006                     	org	3145734
  6255   300006  FF                 	db	255
  6256                           
  6257                           ;Config register CONFIG8 @ 0x300007
  6258                           ;	Boot Block Write Protection bit
  6259                           ;	WRTB = OFF, Boot Block not Write protected
  6260                           ;	Configuration Register Write Protection bit
  6261                           ;	WRTC = OFF, Configuration registers not Write protected
  6262                           ;	Data EEPROM Write Protection bit
  6263                           ;	WRTD = OFF, Data EEPROM not Write protected
  6264                           ;	SAF Write protection bit
  6265                           ;	WRTSAF = OFF, SAF not Write Protected
  6266                           ;	Application Block write protection bit
  6267                           ;	WRTAPP = OFF, Application Block not write protected
  6268   300007                     	org	3145735
  6269   300007  FF                 	db	255
  6270                           
  6271                           ;Config register CONFIG10 @ 0x300009
  6272                           ;	PFM and Data EEPROM Code Protection bit
  6273                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  6274   300009                     	org	3145737
  6275   300009  FF                 	db	255
  6276                           tosu	equ	0x4FF
  6277                           tosh	equ	0x4FE
  6278                           tosl	equ	0x4FD
  6279                           stkptr	equ	0x4FC
  6280                           pclatu	equ	0x4FB
  6281                           pclath	equ	0x4FA
  6282                           pcl	equ	0x4F9
  6283                           tblptru	equ	0x4F8
  6284                           tblptrh	equ	0x4F7
  6285                           tblptrl	equ	0x4F6
  6286                           tablat	equ	0x4F5
  6287                           prodh	equ	0x4F4
  6288                           prodl	equ	0x4F3
  6289                           indf0	equ	0x4EF
  6290                           postinc0	equ	0x4EE
  6291                           postdec0	equ	0x4ED
  6292                           preinc0	equ	0x4EC
  6293                           plusw0	equ	0x4EB
  6294                           fsr0h	equ	0x4EA
  6295                           fsr0l	equ	0x4E9
  6296                           wreg	equ	0x4E8
  6297                           indf1	equ	0x4E7
  6298                           postinc1	equ	0x4E6
  6299                           postdec1	equ	0x4E5
  6300                           preinc1	equ	0x4E4
  6301                           plusw1	equ	0x4E3
  6302                           fsr1h	equ	0x4E2
  6303                           fsr1l	equ	0x4E1
  6304                           bsr	equ	0x4E0
  6305                           indf2	equ	0x4DF
  6306                           postinc2	equ	0x4DE
  6307                           postdec2	equ	0x4DD
  6308                           preinc2	equ	0x4DC
  6309                           plusw2	equ	0x4DB
  6310                           fsr2h	equ	0x4DA
  6311                           fsr2l	equ	0x4D9
  6312                           status	equ	0x4D8

Data Sizes:
    Strings     50
    Constant    0
    Data        1
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     48      54
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    I2C_ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), STR_2(CODE[16]), STR_3(CODE[9]), STR_4(CODE[6]), 
		 -> STR_5(CODE[3]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), STR_2(CODE[16]), STR_3(CODE[9]), STR_4(CODE[6]), 
		 -> STR_5(CODE[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), STR_2(CODE[16]), STR_3(CODE[9]), STR_4(CODE[6]), 
		 -> STR_5(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_HCSR04_Distance
    _pantallazo->_I2C_ESCRIBE_MENSAJE2
    _I2C_POS_CURSOR->_I2C_ENVIA_LCD_CMD
    _I2C_ESCRIBE_MENSAJE2->_I2C_ENVIA_LCD_DATA
    _configuro->_I2C_LCD_INIT
    _I2C_LCD_INIT->_I2C_CURSOR_ONOFF
    _I2C_CURSOR_ONOFF->_I2C_ENVIA_LCD_CMD
    _I2C_CURSOR_HOME->_I2C_ENVIA_LCD_CMD
    _I2C_BORRAR_LCD->_I2C_ENVIA_LCD_CMD
    _I2C_ENVIA_LCD_CMD->_I2C1_WRITESINGLEBYTE
    _I2C_LCD_ESCRIBE_VAR_INT->___lwdiv
    ___lwdiv->___lwmod
    _I2C_LCD_ESCRIBE_VAR_CHAR->___lbdiv
    ___lbdiv->___awmod
    _I2C_ENVIA_LCD_DATA->_I2C1_WRITESINGLEBYTE
    _HCSR04_Distance->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7924
                                             47 COMRAM     1     1      0
                    _HCSR04_Distance
               _I2C_ESCRIBE_MENSAJE2
           _I2C_LCD_ESCRIBE_VAR_CHAR
            _I2C_LCD_ESCRIBE_VAR_INT
                     _I2C_POS_CURSOR
                          _configuro
                         _pantallazo
 ---------------------------------------------------------------------------------
 (1) _pantallazo                                           2     2      0    1171
                                             10 COMRAM     2     2      0
                     _I2C_BORRAR_LCD
               _I2C_ESCRIBE_MENSAJE2
                     _I2C_POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _I2C_POS_CURSOR                                       3     2      1     459
                                              6 COMRAM     3     2      1
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_ESCRIBE_MENSAJE2                                 4     3      1     461
                                              6 COMRAM     4     3      1
                 _I2C_ENVIA_LCD_DATA
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     914
                       _I2C_LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_INIT                                         2     2      0     914
                                              7 COMRAM     2     2      0
                          _I2C1_INIT
               _I2C1_WRITESINGLEBYTE
                     _I2C_BORRAR_LCD
                    _I2C_CURSOR_HOME
                   _I2C_CURSOR_ONOFF
 ---------------------------------------------------------------------------------
 (3) _I2C_CURSOR_ONOFF                                     1     1      0     309
                                              6 COMRAM     1     1      0
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _I2C_CURSOR_HOME                                      0     0      0     251
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_BORRAR_LCD                                       0     0      0     251
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _I2C_ENVIA_LCD_CMD                                    4     4      0     251
                                              2 COMRAM     4     4      0
               _I2C1_WRITESINGLEBYTE
 ---------------------------------------------------------------------------------
 (3) _I2C1_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_ESCRIBE_VAR_INT                              9     5      4    2048
                                             12 COMRAM     9     5      4
                 _I2C_ENVIA_LCD_DATA
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     167
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     170
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_ESCRIBE_VAR_CHAR                             5     4      1    1135
                                             10 COMRAM     5     4      1
                 _I2C_ENVIA_LCD_DATA
                            ___awmod
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     169
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     172
                                              6 COMRAM     4     3      1
                            ___awmod (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _I2C_ENVIA_LCD_DATA                                   4     4      0     251
                                              2 COMRAM     4     4      0
               _I2C1_WRITESINGLEBYTE
 ---------------------------------------------------------------------------------
 (4) _I2C1_WRITESINGLEBYTE                                 2     1      1     103
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _HCSR04_Distance                                      8     6      2    1736
                                             39 COMRAM     8     6      2
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     337
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     230
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1123
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HCSR04_Distance
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _I2C_ESCRIBE_MENSAJE2
     _I2C_ENVIA_LCD_DATA
       _I2C1_WRITESINGLEBYTE
     _strlen
   _I2C_LCD_ESCRIBE_VAR_CHAR
     _I2C_ENVIA_LCD_DATA
     ___awmod
     ___lbdiv
       ___awmod (ARG)
       ___lbmod (ARG)
     ___lbmod
   _I2C_LCD_ESCRIBE_VAR_INT
     _I2C_ENVIA_LCD_DATA
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _I2C_POS_CURSOR
     _I2C_ENVIA_LCD_CMD
       _I2C1_WRITESINGLEBYTE
   _configuro
     _I2C_LCD_INIT
       _I2C1_INIT
       _I2C1_WRITESINGLEBYTE
       _I2C_BORRAR_LCD
         _I2C_ENVIA_LCD_CMD
       _I2C_CURSOR_HOME
         _I2C_ENVIA_LCD_CMD
       _I2C_CURSOR_ONOFF
         _I2C_ENVIA_LCD_CMD
   _pantallazo
     _I2C_BORRAR_LCD
     _I2C_ESCRIBE_MENSAJE2
     _I2C_POS_CURSOR

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRllh       357      0       0      0.0%
BITBIGSFRllllh     353      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBIGSFRh         223      0       0      0.0%
BITBIGSFRllllll    173      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITBIGSFRlllh      119      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     48      54     56.8%
BITBIGSFRlh         44      0       0      0.0%
BITBIGSFRlllllh      5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      54      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jun 30 16:14:07 2025

                     ___fldiv@aexp 0527                       ___fldiv@bexp 0526  
                     ___fldiv@sign 051F                                 l51 3714  
                               l66 34CA                                l266 3230  
                              l269 3238                                l278 30A4  
                              l780 3524                                l790 35F2  
                              l951 3014                                l944 2F96  
                              l873 2E46                                l884 2EB2  
                              l885 2EAE                                u750 3718  
                              u760 371C                       ___awmod@sign 0506  
                              wreg 04E8                       _I2C_LCD_ADDR 0536  
                     _I2C_LCD_INIT 2634                  _I2C_ENVIA_LCD_CMD 341C  
                     ___fltol@exp1 050A                               l2110 2E1E  
                             l2102 2DF6                               l2122 2E5C  
                             l2050 2D04                               l2202 33A6  
                             l2116 2E44                               l2052 2D14  
                             l2212 3182                               l2300 34F2  
                             l2070 2D46                               l2046 2CFE  
                             l2302 34FA                               l2160 2F4E  
                             l2144 2EF6                               l2128 2E7A  
                             l2072 2D56                               l2240 31F0  
                             l2232 31DC                               l2312 351A  
                             l2320 35C8                               l2162 2F50  
                             l2154 2F42                               l2066 2D40  
                             l2322 35D0                               l2410 2AD8  
                             l2402 2A7E                               l2148 2F1A  
                             l2092 2DA8                               l2084 2D90  
                             l2228 31CC                               l2260 3652  
                             l2412 2AEE                               l2404 2A98  
                             l2078 2D7A                               l2246 320C  
                             l2238 31E4                               l2350 2FFC  
                             l2182 3360                               l2430 2C2E  
                             l2422 2B88                               l2414 2B10  
                             l2406 2AB8                               l2502 30A0  
                             l2344 2FC4                               l2256 364C  
                             l2272 3670                               l2280 36DE  
                             l2328 35E8                               l2432 2C5E  
                             l2424 2BA4                               l2416 2B38  
                             l2440 2CB0                               l2346 2FCA  
                             l2338 2FA6                               l2194 338E  
                             l2186 336E                               l2178 3354  
                             l2426 2BCE                               l2418 2B60  
                             l1810 36B0                               l2356 303A  
                             l2348 2FD6                               l2188 3376  
                             l2268 3668                               l2380 32F6  
                             l2436 2C8E                               l2428 2BFE  
                             l1812 36B2                               l2524 3132  
                             l2374 3086                               l2358 3046  
                             l2198 3398                               l2382 3300  
                             l2288 36F6                               l2384 3312  
                             l2392 2A3E                               l1832 34BA  
                             l1824 3496                               l2394 2A48  
                             l2388 332C                               l1844 3684  
                             l1828 34A8                               l2398 2A60  
                             l1848 36A0                               l1786 3752  
                             STR_1 2611                               STR_2 2601  
                             STR_3 2621                               STR_4 262A  
                             STR_5 2630                               u1020 2EA8  
                             u1200 31F6                               u1120 337A  
                             u1060 2F04                               u1300 35D4  
                             u1070 2F28                               u1150 3170  
                             u1230 3656                               u2007 3456  
                             u1160 31A0                               u2017 346A  
                             u2027 347C                               u1165 3196  
                             u2037 33D8                               u1270 34FE  
                             u2047 33EC                               u2057 3400  
                             u2067 3414                               u1507 3128  
                             u1380 3050                               u2077 3228  
                             u1517 3146                               u1607 26BC  
                             u1527 3158                               u1480 313E  
                             u1617 26CE                               u1537 362A  
                             u1707 277A                               u1627 26E4  
                             u1547 34D0                               u1717 278C  
                             u1637 26F8                               u1557 263E  
                             u1807 2828                               u1727 279C  
                             u1647 270A                               u1567 265C  
                             u1817 2838                               u1737 27AE  
                             u1657 2720                               u1577 2680  
                             u1497 3116                               u1907 28DE  
                             u1827 284A                               u1747 27C0  
                             u1667 2734                               u1587 2692  
                             u1917 28F0                               u1837 285C  
                             u1757 27D0                               u1677 2746  
                             u1597 26A8                               u1927 2902  
                             u1847 286C                               u1767 27E2  
                             u1687 2758                               u1937 2912  
                             u1857 287E                               u1777 27F4  
                             u1697 2768                               u1947 2924  
                             u1867 2894                               u1787 2804  
                             u1957 2936                               u1877 28AA  
                             u1797 2816                               u1967 2946  
                             u1887 28BC                               u1977 2958  
                             u1897 28CE                               u1987 296E  
                             u1997 3444                               _TMR1 031C  
               ?_I2C_ENVIA_LCD_CMD 0501           I2C_ENVIA_LCD_CMD@command 0504  
                             _main 3098                  ??_I2C_CURSOR_HOME 0507  
                             start FFFC                    ___fldiv@new_exp 0520  
              ??_I2C_ENVIA_LCD_CMD 0503                       ___param_bank 0000  
               _I2C_ENVIA_LCD_DATA 33B0                  __end_of_I2C1_INIT 3578  
                    ___fltol@sign1 0509                              ?_main 0501  
                            _ADPCH 03EC                    __end_of___fldiv 2F58  
                            _ADREF 03F8                    __end_of___lbdiv 3674  
                  __end_of___awmod 33B0                    __end_of___lbmod 36FE  
                  __end_of___fltol 321E                              _T1CLK 0321  
                            _T1CON 031E                    __end_of___lwdiv 352E  
                  __end_of___lwmod 35FC                              _OSCEN 00B3  
                            _TMR1H 031D                              _TMR1L 031C  
              ?_I2C_ENVIA_LCD_DATA 0501          __end_of_I2C_ENVIA_LCD_CMD 3484  
                   _I2C_BORRAR_LCD 3768                  ?_I2C_CURSOR_ONOFF 0501  
                            tablat 04F5                              status 04D8  
               ??_I2C_CURSOR_ONOFF 0507             I2C_CURSOR_ONOFF@estado 0507  
                  ___lbdiv@divisor 0507                    ___lbdiv@counter 0509  
             ??_I2C_ENVIA_LCD_DATA 0503                    __initialization 3722  
                     __end_of_main 3164   __end_of_I2C_LCD_ESCRIBE_VAR_CHAR 3342  
          I2C_ESCRIBE_MENSAJE2@tam 0509                             ??_main 0530  
                    __activetblptr 0003           ?_I2C_LCD_ESCRIBE_VAR_INT 050D  
           __end_of_I2C_BORRAR_LCD 3770                             _ADRESH 03EB  
                           _RC3PPS 0214                             _RC4PPS 0215  
                           _OSCFRQ 00B1                   __end_of___xxtofl 3098  
    I2C1_WRITESINGLEBYTE@direccion 0502                          ??___fldiv 0517  
                        ??___lbdiv 0508                          ??___awmod 0505  
                        ??___lbmod 0502                          ??___fltol 0505  
                        ??___lwdiv 050A                          ??___lwmod 0505  
                ??_HCSR04_Distance 052A                    ___awmod@divisor 0503  
                           isa$std 0001                    ___awmod@counter 0505  
                           _strlen 36AA                       __pdataCOMRAM 0536  
                     __mediumconst 2600                             tblptrh 04F7  
                           tblptrl 04F6                             tblptru 04F8  
                  ?_I2C_BORRAR_LCD 0501                   ___lbdiv@dividend 0508  
                   _I2C_POS_CURSOR 3484                       ___xxtofl@arg 050B  
                     ___xxtofl@exp 050A                       ___xxtofl@val 0501  
                  ___lbmod@divisor 0501                         __accesstop 0560  
          __end_of__initialization 373E                    ___lbmod@counter 0503  
                    ___rparam_used 0001                         ___fltol@f1 0501  
                   __pcstackCOMRAM 0501       I2C_LCD_ESCRIBE_VAR_INT@punto 0510  
  __end_of_I2C_LCD_ESCRIBE_VAR_INT 2CD2                   ___lbdiv@quotient 050A  
            I2C_ESCRIBE_MENSAJE2@i 050A           _I2C_LCD_ESCRIBE_VAR_CHAR 32B4  
                  _I2C_CURSOR_HOME 3760             __end_of_I2C_POS_CURSOR 34DC  
                          _I2C1CNT 028D                            _I2C1TXB 028C  
      I2C_ENVIA_LCD_DATA@lownibble 0506                            ?_strlen 0501  
         HCSR04_Distance@distancia 052E                          _I2C1_INIT 352E  
                        ?___xxtofl 0501                            _OSCCON1 00AD  
     __end_of_I2C_ESCRIBE_MENSAJE2 36AA                    ?_I2C_POS_CURSOR 0507  
       I2C_ESCRIBE_MENSAJE2@cadena 0507                            __Hparam 0000  
                          __Lparam 0000                  __end_of_configuro 35BA  
                          ___fldiv 2CD2                            ___lbdiv 363C  
                          ___awmod 3342                            ___lbmod 36D6  
                          ___fltol 3164                            ___lwdiv 34DC  
                          ___lwmod 35BA                       __psmallconst 2600  
                          __pcinit 3722                            __ramtop 2600  
                          __ptext0 3098                            __ptext1 35FC  
                          __ptext2 3484                            __ptext3 3674  
                          __ptext4 36AA                            __ptext5 3578  
                          __ptext6 2634                            __ptext7 3744  
                          __ptext8 3760                            __ptext9 3768  
          __end_of_I2C_CURSOR_HOME 3768                        _I2C1CLKbits 029C  
                        _T1CONbits 031E                         ?_I2C1_INIT 0501  
       I2C_ENVIA_LCD_CMD@lownibble 0506                         ??___xxtofl 0505  
                 ___awmod@dividend 0501                         _pantallazo 35FC  
   I2C_LCD_ESCRIBE_VAR_CHAR@decena 050D                        _I2C1PIRbits 029A  
             end_of_initialization 373E     I2C_LCD_ESCRIBE_VAR_CHAR@numero 050E  
   I2C_LCD_ESCRIBE_VAR_CHAR@unidad 050F                         _tmr1_count 0533  
                  _HCSR04_Distance 321E    I2C_LCD_ESCRIBE_VAR_CHAR@centena 050C  
 I2C_LCD_ESCRIBE_VAR_INT@n_digitos 050F                 I2C_POS_CURSOR@fila 0509  
                          strlen@a 0503                            strlen@s 0501  
                        _PORTCbits 04D0                   ??_I2C_BORRAR_LCD 0507  
                 ___lbmod@dividend 0502                      ___xxtofl@sign 0509  
                        _TRISAbits 04C6                          _TRISCbits 04C8  
                        _TRISEbits 04CA                          _TRISFbits 04CB  
                      ___fldiv@grs 0522                        ___fldiv@rem 051B  
                      ___lbmod@rem 0504               _I2C_ESCRIBE_MENSAJE2 3674  
    I2C_LCD_ESCRIBE_VAR_INT@decena 0514         ??_I2C_LCD_ESCRIBE_VAR_CHAR 050C  
    I2C_LCD_ESCRIBE_VAR_INT@millar 0512                      __pidataCOMRAM 3770  
    I2C_LCD_ESCRIBE_VAR_INT@numero 050D      I2C_LCD_ESCRIBE_VAR_INT@unidad 0515  
                 ?_I2C_CURSOR_HOME 0501                        ??_I2C1_INIT 0501  
                   __end_of_strlen 36D6                start_initialization 3722  
                      ?_pantallazo 0501                      ?_I2C_LCD_INIT 0501  
     __end_of_I2C1_WRITESINGLEBYTE 3722            __end_of_HCSR04_Distance 32B4  
            ?_I2C_ESCRIBE_MENSAJE2 0507       I2C_ENVIA_LCD_DATA@highnibble 0505  
                 _I2C_CURSOR_ONOFF 3744                           ??_strlen 0503  
                 ??_I2C_POS_CURSOR 0508                          ___fldiv@a 0513  
                        ___fldiv@b 050F                     ??_I2C_LCD_INIT 0508  
I2C_LCD_ESCRIBE_VAR_CHAR@n_digitos 050B                        __pbssCOMRAM 0531  
          _I2C_LCD_ESCRIBE_VAR_INT 2988                   ___lwdiv@dividend 0506  
   I2C_LCD_ESCRIBE_VAR_INT@centena 0513                           ?___fldiv 050F  
                         ?___lbdiv 0507                           ?___awmod 0501  
                         ?___lbmod 0501                           ?___fltol 0501  
                         _I2C1ADB1 028F                           ?___lwdiv 0506  
                         ?___lwmod 0501                          _configuro 3578  
                      __smallconst 2600                   ___lwdiv@quotient 050A  
          HCSR04_Distance@temporal 052A                   ?_HCSR04_Distance 0528  
                         _LATEbits 04C2                           _LATFbits 04C3  
           ??_I2C_ESCRIBE_MENSAJE2 0508                      _I2C1STAT1bits 0299  
             _I2C1_WRITESINGLEBYTE 36FE             I2C_ENVIA_LCD_DATA@data 0504  
                       ?_configuro 0501                         _ADCON0bits 03F3  
      I2C_ENVIA_LCD_CMD@highnibble 0505          ??_I2C_LCD_ESCRIBE_VAR_INT 0511  
       __end_of_I2C_ENVIA_LCD_DATA 341C              I2C_POS_CURSOR@columna 0507  
                 _distancia_hcsr04 0531                           __Hrparam 0000  
             __end_of_I2C_LCD_INIT 2988                        _lectura_ch0 0535  
                         __Lrparam 0000              ?_I2C1_WRITESINGLEBYTE 0501  
                       _ANSELAbits 0400                         _ANSELCbits 0410  
                       _ANSELEbits 0420                         _ANSELFbits 0428  
                         ___xxtofl 2F58                       ??_pantallazo 050B  
                     _I2C1CON0bits 0294                       _I2C1CON1bits 0295  
                     _I2C1CON2bits 0296                    ___lwdiv@divisor 0508  
         I2C1_WRITESINGLEBYTE@dato 0501                    ___lwdiv@counter 050C  
                         __ptext10 341C                           __ptext11 352E  
                         __ptext20 36FE                           __ptext12 2988  
                         __ptext21 321E                           __ptext13 35BA  
                         __ptext22 2F58                           __ptext14 34DC  
                         __ptext23 3164                           __ptext15 32B4  
                         __ptext24 2CD2                           __ptext16 36D6  
                         __ptext17 363C                           __ptext18 3342  
                         __ptext19 33B0                         _RC3I2Cbits 0287  
         __end_of_I2C_CURSOR_ONOFF 3760                         _RC4I2Cbits 0286  
                         isa$xinst 0000                 __end_of_pantallazo 363C  
                       _ODCONCbits 0412                        ??_configuro 050A  
        ?_I2C_LCD_ESCRIBE_VAR_CHAR 050B                   ___lwmod@dividend 0501  
  I2C_LCD_ESCRIBE_VAR_INT@d_millar 0511             ??_I2C1_WRITESINGLEBYTE 0502  
                  ___lwmod@divisor 0503                    ___lwmod@counter 0505  
