

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Jun 13 11:59:06 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=4,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=4,class=CODE,space=0,delta=1
    32                           	psect	text21,global,reloc=4,class=CODE,space=0,delta=1
    33                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Generated 04/02/2025 GMT
    39                           ; 
    40                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F57Q43 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   0004E0                     bsr             equ	1248
    73   0004E9                     fsr0            equ	1257
    74   0004EA                     fsr0h           equ	1258
    75   0004E9                     fsr0l           equ	1257
    76   0004E1                     fsr1            equ	1249
    77   0004E2                     fsr1h           equ	1250
    78   0004E1                     fsr1l           equ	1249
    79   0004D9                     fsr2            equ	1241
    80   0004DA                     fsr2h           equ	1242
    81   0004D9                     fsr2l           equ	1241
    82   0004EF                     indf0           equ	1263
    83   0004E7                     indf1           equ	1255
    84   0004DF                     indf2           equ	1247
    85   0004D6                     intcon          equ	1238
    86   000041                     nvmcon          equ	65
    87   0004F9                     pcl             equ	1273
    88   0004FA                     pclath          equ	1274
    89   0004FB                     pclatu          equ	1275
    90   0004EB                     plusw0          equ	1259
    91   0004E3                     plusw1          equ	1251
    92   0004DB                     plusw2          equ	1243
    93   0004ED                     postdec0        equ	1261
    94   0004E5                     postdec1        equ	1253
    95   0004DD                     postdec2        equ	1245
    96   0004EE                     postinc0        equ	1262
    97   0004E6                     postinc1        equ	1254
    98   0004DE                     postinc2        equ	1246
    99   0004EC                     preinc0         equ	1260
   100   0004E4                     preinc1         equ	1252
   101   0004DC                     preinc2         equ	1244
   102   0004F3                     prod            equ	1267
   103   0004F4                     prodh           equ	1268
   104   0004F3                     prodl           equ	1267
   105   0004D8                     status          equ	1240
   106   0004F5                     tablat          equ	1269
   107   0004F6                     tblptr          equ	1270
   108   0004F7                     tblptrh         equ	1271
   109   0004F6                     tblptrl         equ	1270
   110   0004F8                     tblptru         equ	1272
   111   0004FD                     tosl            equ	1277
   112   0004E8                     wreg            equ	1256
   113   000039                     CLKRCON         equ	57	;# 
   114   00003A                     CLKRCLK         equ	58	;# 
   115   000040                     NVMCON0         equ	64	;# 
   116   000041                     NVMCON1         equ	65	;# 
   117   000042                     NVMLOCK         equ	66	;# 
   118   000043                     NVMADR          equ	67	;# 
   119   000043                     NVMADRL         equ	67	;# 
   120   000044                     NVMADRH         equ	68	;# 
   121   000045                     NVMADRU         equ	69	;# 
   122   000046                     NVMDAT          equ	70	;# 
   123   000046                     NVMDATL         equ	70	;# 
   124   000047                     NVMDATH         equ	71	;# 
   125   000048                     VREGCON         equ	72	;# 
   126   000049                     BORCON          equ	73	;# 
   127   00004A                     HLVDCON0        equ	74	;# 
   128   00004B                     HLVDCON1        equ	75	;# 
   129   00004C                     ZCDCON          equ	76	;# 
   130   000060                     PMD0            equ	96	;# 
   131   000061                     PMD1            equ	97	;# 
   132   000063                     PMD3            equ	99	;# 
   133   000064                     PMD4            equ	100	;# 
   134   000065                     PMD5            equ	101	;# 
   135   000066                     PMD6            equ	102	;# 
   136   000067                     PMD7            equ	103	;# 
   137   000068                     PMD8            equ	104	;# 
   138   00006A                     MD1CON0         equ	106	;# 
   139   00006B                     MD1CON1         equ	107	;# 
   140   00006C                     MD1SRC          equ	108	;# 
   141   00006D                     MD1CARL         equ	109	;# 
   142   00006E                     MD1CARH         equ	110	;# 
   143   00006F                     CMOUT           equ	111	;# 
   144   000070                     CM1CON0         equ	112	;# 
   145   000071                     CM1CON1         equ	113	;# 
   146   000072                     CM1NCH          equ	114	;# 
   147   000073                     CM1PCH          equ	115	;# 
   148   000074                     CM2CON0         equ	116	;# 
   149   000075                     CM2CON1         equ	117	;# 
   150   000076                     CM2NCH          equ	118	;# 
   151   000077                     CM2PCH          equ	119	;# 
   152   000078                     WDTCON0         equ	120	;# 
   153   000079                     WDTCON1         equ	121	;# 
   154   00007A                     WDTPS           equ	122	;# 
   155   00007A                     WDTPSL          equ	122	;# 
   156   00007B                     WDTPSH          equ	123	;# 
   157   00007C                     WDTTMR          equ	124	;# 
   158   00007D                     DAC1DAT         equ	125	;# 
   159   00007D                     DAC1DATL        equ	125	;# 
   160   00007F                     DAC1CON         equ	127	;# 
   161   000080                     SPI1RXB         equ	128	;# 
   162   000081                     SPI1TXB         equ	129	;# 
   163   000082                     SPI1TCNT        equ	130	;# 
   164   000082                     SPI1TCNTL       equ	130	;# 
   165   000083                     SPI1TCNTH       equ	131	;# 
   166   000084                     SPI1CON0        equ	132	;# 
   167   000085                     SPI1CON1        equ	133	;# 
   168   000086                     SPI1CON2        equ	134	;# 
   169   000087                     SPI1STATUS      equ	135	;# 
   170   000088                     SPI1TWIDTH      equ	136	;# 
   171   000089                     SPI1BAUD        equ	137	;# 
   172   00008A                     SPI1INTF        equ	138	;# 
   173   00008B                     SPI1INTE        equ	139	;# 
   174   00008C                     SPI1CLK         equ	140	;# 
   175   00008D                     SPI2RXB         equ	141	;# 
   176   00008E                     SPI2TXB         equ	142	;# 
   177   00008F                     SPI2TCNT        equ	143	;# 
   178   00008F                     SPI2TCNTL       equ	143	;# 
   179   000090                     SPI2TCNTH       equ	144	;# 
   180   000091                     SPI2CON0        equ	145	;# 
   181   000092                     SPI2CON1        equ	146	;# 
   182   000093                     SPI2CON2        equ	147	;# 
   183   000094                     SPI2STATUS      equ	148	;# 
   184   000095                     SPI2TWIDTH      equ	149	;# 
   185   000096                     SPI2BAUD        equ	150	;# 
   186   000097                     SPI2INTF        equ	151	;# 
   187   000098                     SPI2INTE        equ	152	;# 
   188   000099                     SPI2CLK         equ	153	;# 
   189   0000AC                     ACTCON          equ	172	;# 
   190   0000AD                     OSCCON1         equ	173	;# 
   191   0000AE                     OSCCON2         equ	174	;# 
   192   0000AF                     OSCCON3         equ	175	;# 
   193   0000B0                     OSCTUNE         equ	176	;# 
   194   0000B1                     OSCFRQ          equ	177	;# 
   195   0000B1                     OSCFREQ         equ	177	;# 
   196   0000B2                     OSCSTAT         equ	178	;# 
   197   0000B2                     OSCSTAT1        equ	178	;# 
   198   0000B3                     OSCEN           equ	179	;# 
   199   0000B4                     PRLOCK          equ	180	;# 
   200   0000B5                     SCANPR          equ	181	;# 
   201   0000B6                     DMA1PR          equ	182	;# 
   202   0000B7                     DMA2PR          equ	183	;# 
   203   0000B8                     DMA3PR          equ	184	;# 
   204   0000B9                     DMA4PR          equ	185	;# 
   205   0000BA                     DMA5PR          equ	186	;# 
   206   0000BB                     DMA6PR          equ	187	;# 
   207   0000BE                     MAINPR          equ	190	;# 
   208   0000BF                     ISRPR           equ	191	;# 
   209   0000D4                     CLCDATA         equ	212	;# 
   210   0000D5                     CLCSELECT       equ	213	;# 
   211   0000D6                     CLCnCON         equ	214	;# 
   212   0000D7                     CLCnPOL         equ	215	;# 
   213   0000D8                     CLCnSEL0        equ	216	;# 
   214   0000D9                     CLCnSEL1        equ	217	;# 
   215   0000DA                     CLCnSEL2        equ	218	;# 
   216   0000DB                     CLCnSEL3        equ	219	;# 
   217   0000DC                     CLCnGLS0        equ	220	;# 
   218   0000DD                     CLCnGLS1        equ	221	;# 
   219   0000DE                     CLCnGLS2        equ	222	;# 
   220   0000DF                     CLCnGLS3        equ	223	;# 
   221   0000E8                     DMASELECT       equ	232	;# 
   222   0000E9                     DMAnBUF         equ	233	;# 
   223   0000EA                     DMAnDCNT        equ	234	;# 
   224   0000EA                     DMAnDCNTL       equ	234	;# 
   225   0000EB                     DMAnDCNTH       equ	235	;# 
   226   0000EC                     DMAnDPTR        equ	236	;# 
   227   0000EC                     DMAnDPTRL       equ	236	;# 
   228   0000ED                     DMAnDPTRH       equ	237	;# 
   229   0000EE                     DMAnDSZ         equ	238	;# 
   230   0000EE                     DMAnDSZL        equ	238	;# 
   231   0000EF                     DMAnDSZH        equ	239	;# 
   232   0000F0                     DMAnDSA         equ	240	;# 
   233   0000F0                     DMAnDSAL        equ	240	;# 
   234   0000F1                     DMAnDSAH        equ	241	;# 
   235   0000F2                     DMAnSCNT        equ	242	;# 
   236   0000F2                     DMAnSCNTL       equ	242	;# 
   237   0000F3                     DMAnSCNTH       equ	243	;# 
   238   0000F4                     DMAnSPTR        equ	244	;# 
   239   0000F4                     DMAnSPTRL       equ	244	;# 
   240   0000F5                     DMAnSPTRH       equ	245	;# 
   241   0000F6                     DMAnSPTRU       equ	246	;# 
   242   0000F7                     DMAnSSZ         equ	247	;# 
   243   0000F7                     DMAnSSZL        equ	247	;# 
   244   0000F8                     DMAnSSZH        equ	248	;# 
   245   0000F9                     DMAnSSA         equ	249	;# 
   246   0000F9                     DMAnSSAL        equ	249	;# 
   247   0000FA                     DMAnSSAH        equ	250	;# 
   248   0000FB                     DMAnSSAU        equ	251	;# 
   249   0000FC                     DMAnCON0        equ	252	;# 
   250   0000FD                     DMAnCON1        equ	253	;# 
   251   0000FE                     DMAnAIRQ        equ	254	;# 
   252   0000FF                     DMAnSIRQ        equ	255	;# 
   253   000200                     PPSLOCK         equ	512	;# 
   254   000201                     RA0PPS          equ	513	;# 
   255   000202                     RA1PPS          equ	514	;# 
   256   000203                     RA2PPS          equ	515	;# 
   257   000204                     RA3PPS          equ	516	;# 
   258   000205                     RA4PPS          equ	517	;# 
   259   000206                     RA5PPS          equ	518	;# 
   260   000207                     RA6PPS          equ	519	;# 
   261   000208                     RA7PPS          equ	520	;# 
   262   000209                     RB0PPS          equ	521	;# 
   263   00020A                     RB1PPS          equ	522	;# 
   264   00020B                     RB2PPS          equ	523	;# 
   265   00020C                     RB3PPS          equ	524	;# 
   266   00020D                     RB4PPS          equ	525	;# 
   267   00020E                     RB5PPS          equ	526	;# 
   268   00020F                     RB6PPS          equ	527	;# 
   269   000210                     RB7PPS          equ	528	;# 
   270   000211                     RC0PPS          equ	529	;# 
   271   000212                     RC1PPS          equ	530	;# 
   272   000213                     RC2PPS          equ	531	;# 
   273   000214                     RC3PPS          equ	532	;# 
   274   000215                     RC4PPS          equ	533	;# 
   275   000216                     RC5PPS          equ	534	;# 
   276   000217                     RC6PPS          equ	535	;# 
   277   000218                     RC7PPS          equ	536	;# 
   278   000219                     RD0PPS          equ	537	;# 
   279   00021A                     RD1PPS          equ	538	;# 
   280   00021B                     RD2PPS          equ	539	;# 
   281   00021C                     RD3PPS          equ	540	;# 
   282   00021D                     RD4PPS          equ	541	;# 
   283   00021E                     RD5PPS          equ	542	;# 
   284   00021F                     RD6PPS          equ	543	;# 
   285   000220                     RD7PPS          equ	544	;# 
   286   000221                     RE0PPS          equ	545	;# 
   287   000222                     RE1PPS          equ	546	;# 
   288   000223                     RE2PPS          equ	547	;# 
   289   000229                     RF0PPS          equ	553	;# 
   290   00022A                     RF1PPS          equ	554	;# 
   291   00022B                     RF2PPS          equ	555	;# 
   292   00022C                     RF3PPS          equ	556	;# 
   293   00022D                     RF4PPS          equ	557	;# 
   294   00022E                     RF5PPS          equ	558	;# 
   295   00022F                     RF6PPS          equ	559	;# 
   296   000230                     RF7PPS          equ	560	;# 
   297   00023E                     INT0PPS         equ	574	;# 
   298   00023F                     INT1PPS         equ	575	;# 
   299   000240                     INT2PPS         equ	576	;# 
   300   000241                     T0CKIPPS        equ	577	;# 
   301   000242                     T1CKIPPS        equ	578	;# 
   302   000243                     T1GPPS          equ	579	;# 
   303   000244                     T3CKIPPS        equ	580	;# 
   304   000245                     T3GPPS          equ	581	;# 
   305   000246                     T5CKIPPS        equ	582	;# 
   306   000247                     T5GPPS          equ	583	;# 
   307   000248                     T2INPPS         equ	584	;# 
   308   000249                     T4INPPS         equ	585	;# 
   309   00024A                     T6INPPS         equ	586	;# 
   310   00024F                     CCP1PPS         equ	591	;# 
   311   000250                     CCP2PPS         equ	592	;# 
   312   000251                     CCP3PPS         equ	593	;# 
   313   000253                     PWM1ERSPPS      equ	595	;# 
   314   000254                     PWM2ERSPPS      equ	596	;# 
   315   000255                     PWM3ERSPPS      equ	597	;# 
   316   000257                     PWMIN0PPS       equ	599	;# 
   317   000258                     PWMIN1PPS       equ	600	;# 
   318   000259                     SMT1WINPPS      equ	601	;# 
   319   00025A                     SMT1SIGPPS      equ	602	;# 
   320   00025B                     CWG1PPS         equ	603	;# 
   321   00025B                     CWG1INPPS       equ	603	;# 
   322   00025C                     CWG2PPS         equ	604	;# 
   323   00025C                     CWG2INPPS       equ	604	;# 
   324   00025D                     CWG3PPS         equ	605	;# 
   325   00025D                     CWG3INPPS       equ	605	;# 
   326   00025E                     MD1CARLPPS      equ	606	;# 
   327   00025E                     MDCARLPPS       equ	606	;# 
   328   00025F                     MD1CARHPPS      equ	607	;# 
   329   00025F                     MDCARHPPS       equ	607	;# 
   330   000260                     MD1SRCPPS       equ	608	;# 
   331   000260                     MDSRCPPS        equ	608	;# 
   332   000261                     CLCIN0PPS       equ	609	;# 
   333   000262                     CLCIN1PPS       equ	610	;# 
   334   000263                     CLCIN2PPS       equ	611	;# 
   335   000264                     CLCIN3PPS       equ	612	;# 
   336   000265                     CLCIN4PPS       equ	613	;# 
   337   000266                     CLCIN5PPS       equ	614	;# 
   338   000267                     CLCIN6PPS       equ	615	;# 
   339   000268                     CLCIN7PPS       equ	616	;# 
   340   000269                     ADACTPPS        equ	617	;# 
   341   00026A                     SPI1SCKPPS      equ	618	;# 
   342   00026B                     SPI1SDIPPS      equ	619	;# 
   343   00026C                     SPI1SSPPS       equ	620	;# 
   344   00026D                     SPI2SCKPPS      equ	621	;# 
   345   00026E                     SPI2SDIPPS      equ	622	;# 
   346   00026F                     SPI2SSPPS       equ	623	;# 
   347   000270                     I2C1SDAPPS      equ	624	;# 
   348   000271                     I2C1SCLPPS      equ	625	;# 
   349   000272                     U1RXPPS         equ	626	;# 
   350   000273                     U1CTSPPS        equ	627	;# 
   351   000274                     U2RXPPS         equ	628	;# 
   352   000275                     U2CTSPPS        equ	629	;# 
   353   000276                     U3RXPPS         equ	630	;# 
   354   000277                     U3CTSPPS        equ	631	;# 
   355   000278                     U4RXPPS         equ	632	;# 
   356   000279                     U4CTSPPS        equ	633	;# 
   357   00027A                     U5RXPPS         equ	634	;# 
   358   00027B                     U5CTSPPS        equ	635	;# 
   359   000286                     RC4I2C          equ	646	;# 
   360   000287                     RC3I2C          equ	647	;# 
   361   000288                     RB2I2C          equ	648	;# 
   362   000289                     RB1I2C          equ	649	;# 
   363   00028B                     I2C1RXB         equ	651	;# 
   364   00028C                     I2C1TXB         equ	652	;# 
   365   00028D                     I2C1CNT         equ	653	;# 
   366   00028E                     I2C1ADB0        equ	654	;# 
   367   00028F                     I2C1ADB1        equ	655	;# 
   368   000290                     I2C1ADR0        equ	656	;# 
   369   000291                     I2C1ADR1        equ	657	;# 
   370   000292                     I2C1ADR2        equ	658	;# 
   371   000293                     I2C1ADR3        equ	659	;# 
   372   000294                     I2C1CON0        equ	660	;# 
   373   000295                     I2C1CON1        equ	661	;# 
   374   000296                     I2C1CON2        equ	662	;# 
   375   000297                     I2C1ERR         equ	663	;# 
   376   000298                     I2C1STAT0       equ	664	;# 
   377   000299                     I2C1STAT1       equ	665	;# 
   378   00029A                     I2C1PIR         equ	666	;# 
   379   00029B                     I2C1PIE         equ	667	;# 
   380   00029C                     I2C1CLK         equ	668	;# 
   381   00029D                     I2C1BTO         equ	669	;# 
   382   0002A1                     U1RXB           equ	673	;# 
   383   0002A1                     U1RXBL          equ	673	;# 
   384   0002A2                     U1RXCHK         equ	674	;# 
   385   0002A3                     U1TXB           equ	675	;# 
   386   0002A3                     U1TXBL          equ	675	;# 
   387   0002A4                     U1TXCHK         equ	676	;# 
   388   0002A5                     U1P1            equ	677	;# 
   389   0002A5                     U1P1L           equ	677	;# 
   390   0002A6                     U1P1H           equ	678	;# 
   391   0002A7                     U1P2            equ	679	;# 
   392   0002A7                     U1P2L           equ	679	;# 
   393   0002A8                     U1P2H           equ	680	;# 
   394   0002A9                     U1P3            equ	681	;# 
   395   0002A9                     U1P3L           equ	681	;# 
   396   0002AA                     U1P3H           equ	682	;# 
   397   0002AB                     U1CON0          equ	683	;# 
   398   0002AC                     U1CON1          equ	684	;# 
   399   0002AD                     U1CON2          equ	685	;# 
   400   0002AE                     U1BRG           equ	686	;# 
   401   0002AE                     U1BRGL          equ	686	;# 
   402   0002AF                     U1BRGH          equ	687	;# 
   403   0002B0                     U1FIFO          equ	688	;# 
   404   0002B1                     U1UIR           equ	689	;# 
   405   0002B2                     U1ERRIR         equ	690	;# 
   406   0002B3                     U1ERRIE         equ	691	;# 
   407   0002B4                     U2RXB           equ	692	;# 
   408   0002B4                     U2RXBL          equ	692	;# 
   409   0002B6                     U2TXB           equ	694	;# 
   410   0002B6                     U2TXBL          equ	694	;# 
   411   0002B8                     U2P1            equ	696	;# 
   412   0002B8                     U2P1L           equ	696	;# 
   413   0002BA                     U2P2            equ	698	;# 
   414   0002BA                     U2P2L           equ	698	;# 
   415   0002BC                     U2P3            equ	700	;# 
   416   0002BC                     U2P3L           equ	700	;# 
   417   0002BE                     U2CON0          equ	702	;# 
   418   0002BF                     U2CON1          equ	703	;# 
   419   0002C0                     U2CON2          equ	704	;# 
   420   0002C1                     U2BRG           equ	705	;# 
   421   0002C1                     U2BRGL          equ	705	;# 
   422   0002C2                     U2BRGH          equ	706	;# 
   423   0002C3                     U2FIFO          equ	707	;# 
   424   0002C4                     U2UIR           equ	708	;# 
   425   0002C5                     U2ERRIR         equ	709	;# 
   426   0002C6                     U2ERRIE         equ	710	;# 
   427   0002C7                     U3RXB           equ	711	;# 
   428   0002C7                     U3RXBL          equ	711	;# 
   429   0002C9                     U3TXB           equ	713	;# 
   430   0002C9                     U3TXBL          equ	713	;# 
   431   0002CB                     U3P1            equ	715	;# 
   432   0002CB                     U3P1L           equ	715	;# 
   433   0002CD                     U3P2            equ	717	;# 
   434   0002CD                     U3P2L           equ	717	;# 
   435   0002CF                     U3P3            equ	719	;# 
   436   0002CF                     U3P3L           equ	719	;# 
   437   0002D1                     U3CON0          equ	721	;# 
   438   0002D2                     U3CON1          equ	722	;# 
   439   0002D3                     U3CON2          equ	723	;# 
   440   0002D4                     U3BRG           equ	724	;# 
   441   0002D4                     U3BRGL          equ	724	;# 
   442   0002D5                     U3BRGH          equ	725	;# 
   443   0002D6                     U3FIFO          equ	726	;# 
   444   0002D7                     U3UIR           equ	727	;# 
   445   0002D8                     U3ERRIR         equ	728	;# 
   446   0002D9                     U3ERRIE         equ	729	;# 
   447   0002DA                     U4RXB           equ	730	;# 
   448   0002DA                     U4RXBL          equ	730	;# 
   449   0002DC                     U4TXB           equ	732	;# 
   450   0002DC                     U4TXBL          equ	732	;# 
   451   0002DE                     U4P1            equ	734	;# 
   452   0002DE                     U4P1L           equ	734	;# 
   453   0002E0                     U4P2            equ	736	;# 
   454   0002E0                     U4P2L           equ	736	;# 
   455   0002E2                     U4P3            equ	738	;# 
   456   0002E2                     U4P3L           equ	738	;# 
   457   0002E4                     U4CON0          equ	740	;# 
   458   0002E5                     U4CON1          equ	741	;# 
   459   0002E6                     U4CON2          equ	742	;# 
   460   0002E7                     U4BRG           equ	743	;# 
   461   0002E7                     U4BRGL          equ	743	;# 
   462   0002E8                     U4BRGH          equ	744	;# 
   463   0002E9                     U4FIFO          equ	745	;# 
   464   0002EA                     U4UIR           equ	746	;# 
   465   0002EB                     U4ERRIR         equ	747	;# 
   466   0002EC                     U4ERRIE         equ	748	;# 
   467   0002ED                     U5RXB           equ	749	;# 
   468   0002ED                     U5RXBL          equ	749	;# 
   469   0002EF                     U5TXB           equ	751	;# 
   470   0002EF                     U5TXBL          equ	751	;# 
   471   0002F1                     U5P1            equ	753	;# 
   472   0002F1                     U5P1L           equ	753	;# 
   473   0002F3                     U5P2            equ	755	;# 
   474   0002F3                     U5P2L           equ	755	;# 
   475   0002F5                     U5P3            equ	757	;# 
   476   0002F5                     U5P3L           equ	757	;# 
   477   0002F7                     U5CON0          equ	759	;# 
   478   0002F8                     U5CON1          equ	760	;# 
   479   0002F9                     U5CON2          equ	761	;# 
   480   0002FA                     U5BRG           equ	762	;# 
   481   0002FA                     U5BRGL          equ	762	;# 
   482   0002FB                     U5BRGH          equ	763	;# 
   483   0002FC                     U5FIFO          equ	764	;# 
   484   0002FD                     U5UIR           equ	765	;# 
   485   0002FE                     U5ERRIR         equ	766	;# 
   486   0002FF                     U5ERRIE         equ	767	;# 
   487   000300                     SMT1TMR         equ	768	;# 
   488   000300                     SMT1TMRL        equ	768	;# 
   489   000301                     SMT1TMRH        equ	769	;# 
   490   000302                     SMT1TMRU        equ	770	;# 
   491   000303                     SMT1CPR         equ	771	;# 
   492   000303                     SMT1CPRL        equ	771	;# 
   493   000304                     SMT1CPRH        equ	772	;# 
   494   000305                     SMT1CPRU        equ	773	;# 
   495   000306                     SMT1CPW         equ	774	;# 
   496   000306                     SMT1CPWL        equ	774	;# 
   497   000307                     SMT1CPWH        equ	775	;# 
   498   000308                     SMT1CPWU        equ	776	;# 
   499   000309                     SMT1PR          equ	777	;# 
   500   000309                     SMT1PRL         equ	777	;# 
   501   00030A                     SMT1PRH         equ	778	;# 
   502   00030B                     SMT1PRU         equ	779	;# 
   503   00030C                     SMT1CON0        equ	780	;# 
   504   00030D                     SMT1CON1        equ	781	;# 
   505   00030E                     SMT1STAT        equ	782	;# 
   506   00030F                     SMT1CLK         equ	783	;# 
   507   000310                     SMT1SIG         equ	784	;# 
   508   000311                     SMT1WIN         equ	785	;# 
   509   000318                     TMR0L           equ	792	;# 
   510   000318                     TMR0            equ	792	;# 
   511   000319                     TMR0H           equ	793	;# 
   512   000319                     PR0             equ	793	;# 
   513   00031A                     T0CON0          equ	794	;# 
   514   00031B                     T0CON1          equ	795	;# 
   515   00031C                     TMR1            equ	796	;# 
   516   00031C                     TMR1L           equ	796	;# 
   517   00031D                     TMR1H           equ	797	;# 
   518   00031E                     T1CON           equ	798	;# 
   519   00031E                     TMR1CON         equ	798	;# 
   520   00031F                     T1GCON          equ	799	;# 
   521   00031F                     TMR1GCON        equ	799	;# 
   522   000320                     T1GATE          equ	800	;# 
   523   000320                     TMR1GATE        equ	800	;# 
   524   000321                     T1CLK           equ	801	;# 
   525   000321                     TMR1CLK         equ	801	;# 
   526   000321                     PR1             equ	801	;# 
   527   000322                     T2TMR           equ	802	;# 
   528   000322                     TMR2            equ	802	;# 
   529   000323                     T2PR            equ	803	;# 
   530   000323                     PR2             equ	803	;# 
   531   000324                     T2CON           equ	804	;# 
   532   000325                     T2HLT           equ	805	;# 
   533   000326                     T2CLKCON        equ	806	;# 
   534   000326                     T2CLK           equ	806	;# 
   535   000327                     T2RST           equ	807	;# 
   536   000328                     TMR3            equ	808	;# 
   537   000328                     TMR3L           equ	808	;# 
   538   000329                     TMR3H           equ	809	;# 
   539   00032A                     T3CON           equ	810	;# 
   540   00032A                     TMR3CON         equ	810	;# 
   541   00032B                     T3GCON          equ	811	;# 
   542   00032B                     TMR3GCON        equ	811	;# 
   543   00032C                     T3GATE          equ	812	;# 
   544   00032C                     TMR3GATE        equ	812	;# 
   545   00032D                     T3CLK           equ	813	;# 
   546   00032D                     TMR3CLK         equ	813	;# 
   547   00032D                     PR3             equ	813	;# 
   548   00032E                     T4TMR           equ	814	;# 
   549   00032E                     TMR4            equ	814	;# 
   550   00032F                     T4PR            equ	815	;# 
   551   00032F                     PR4             equ	815	;# 
   552   000330                     T4CON           equ	816	;# 
   553   000331                     T4HLT           equ	817	;# 
   554   000332                     T4CLKCON        equ	818	;# 
   555   000332                     T4CLK           equ	818	;# 
   556   000333                     T4RST           equ	819	;# 
   557   000334                     TMR5            equ	820	;# 
   558   000334                     TMR5L           equ	820	;# 
   559   000335                     TMR5H           equ	821	;# 
   560   000336                     T5CON           equ	822	;# 
   561   000336                     TMR5CON         equ	822	;# 
   562   000337                     T5GCON          equ	823	;# 
   563   000337                     TMR5GCON        equ	823	;# 
   564   000338                     T5GATE          equ	824	;# 
   565   000338                     TMR5GATE        equ	824	;# 
   566   000339                     T5CLK           equ	825	;# 
   567   000339                     TMR5CLK         equ	825	;# 
   568   000339                     PR5             equ	825	;# 
   569   00033A                     T6TMR           equ	826	;# 
   570   00033A                     TMR6            equ	826	;# 
   571   00033B                     T6PR            equ	827	;# 
   572   00033B                     PR6             equ	827	;# 
   573   00033C                     T6CON           equ	828	;# 
   574   00033D                     T6HLT           equ	829	;# 
   575   00033E                     T6CLKCON        equ	830	;# 
   576   00033E                     T6CLK           equ	830	;# 
   577   00033F                     T6RST           equ	831	;# 
   578   000340                     CCPR1           equ	832	;# 
   579   000340                     CCPR1L          equ	832	;# 
   580   000341                     CCPR1H          equ	833	;# 
   581   000342                     CCP1CON         equ	834	;# 
   582   000343                     CCP1CAP         equ	835	;# 
   583   000344                     CCPR2           equ	836	;# 
   584   000344                     CCPR2L          equ	836	;# 
   585   000345                     CCPR2H          equ	837	;# 
   586   000346                     CCP2CON         equ	838	;# 
   587   000347                     CCP2CAP         equ	839	;# 
   588   000348                     CCPR3           equ	840	;# 
   589   000348                     CCPR3L          equ	840	;# 
   590   000349                     CCPR3H          equ	841	;# 
   591   00034A                     CCP3CON         equ	842	;# 
   592   00034B                     CCP3CAP         equ	843	;# 
   593   00034C                     CCPTMRS0        equ	844	;# 
   594   00034F                     CRCDATA         equ	847	;# 
   595   00034F                     CRCDATL         equ	847	;# 
   596   000350                     CRCDATH         equ	848	;# 
   597   000351                     CRCACC          equ	849	;# 
   598   000351                     CRCACCL         equ	849	;# 
   599   000352                     CRCACCH         equ	850	;# 
   600   000353                     CRCSHFT         equ	851	;# 
   601   000353                     CRCSHIFTL       equ	851	;# 
   602   000354                     CRCSHIFTH       equ	852	;# 
   603   000355                     CRCXOR          equ	853	;# 
   604   000355                     CRCXORL         equ	853	;# 
   605   000356                     CRCXORH         equ	854	;# 
   606   000357                     CRCCON0         equ	855	;# 
   607   000358                     CRCCON1         equ	856	;# 
   608   00035A                     SCANLADR        equ	858	;# 
   609   00035A                     SCANLADRL       equ	858	;# 
   610   00035B                     SCANLADRH       equ	859	;# 
   611   00035C                     SCANLADRU       equ	860	;# 
   612   00035D                     SCANHADR        equ	861	;# 
   613   00035D                     SCANHADRL       equ	861	;# 
   614   00035E                     SCANHADRH       equ	862	;# 
   615   00035F                     SCANHADRU       equ	863	;# 
   616   000360                     SCANCON0        equ	864	;# 
   617   000361                     SCANTRIG        equ	865	;# 
   618   000362                     IPR0            equ	866	;# 
   619   000363                     IPR1            equ	867	;# 
   620   000364                     IPR2            equ	868	;# 
   621   000365                     IPR3            equ	869	;# 
   622   000366                     IPR4            equ	870	;# 
   623   000367                     IPR5            equ	871	;# 
   624   000368                     IPR6            equ	872	;# 
   625   000369                     IPR7            equ	873	;# 
   626   00036A                     IPR8            equ	874	;# 
   627   00036B                     IPR9            equ	875	;# 
   628   00036C                     IPR10           equ	876	;# 
   629   00036D                     IPR11           equ	877	;# 
   630   00036E                     IPR12           equ	878	;# 
   631   00036F                     IPR13           equ	879	;# 
   632   000370                     IPR14           equ	880	;# 
   633   000371                     IPR15           equ	881	;# 
   634   000373                     STATUS_CSHAD    equ	883	;# 
   635   000374                     WREG_CSHAD      equ	884	;# 
   636   000375                     BSR_CSHAD       equ	885	;# 
   637   000376                     SHADCON         equ	886	;# 
   638   000377                     STATUS_SHAD     equ	887	;# 
   639   000378                     WREG_SHAD       equ	888	;# 
   640   000379                     BSR_SHAD        equ	889	;# 
   641   00037A                     PCLATH_SHAD     equ	890	;# 
   642   00037B                     PCLATU_SHAD     equ	891	;# 
   643   00037C                     FSR0SH          equ	892	;# 
   644   00037C                     FSR0L_SHAD      equ	892	;# 
   645   00037D                     FSR0H_SHAD      equ	893	;# 
   646   00037E                     FSR1SH          equ	894	;# 
   647   00037E                     FSR1L_SHAD      equ	894	;# 
   648   00037F                     FSR1H_SHAD      equ	895	;# 
   649   000380                     FSR2SH          equ	896	;# 
   650   000380                     FSR2L_SHAD      equ	896	;# 
   651   000381                     FSR2H_SHAD      equ	897	;# 
   652   000382                     PRODSH          equ	898	;# 
   653   000382                     PRODL_SHAD      equ	898	;# 
   654   000383                     PRODH_SHAD      equ	899	;# 
   655   0003BC                     CWG1CLK         equ	956	;# 
   656   0003BC                     CWG1CLKCON      equ	956	;# 
   657   0003BD                     CWG1ISM         equ	957	;# 
   658   0003BD                     CWG1DAT         equ	957	;# 
   659   0003BE                     CWG1DBR         equ	958	;# 
   660   0003BF                     CWG1DBF         equ	959	;# 
   661   0003C0                     CWG1CON0        equ	960	;# 
   662   0003C1                     CWG1CON1        equ	961	;# 
   663   0003C2                     CWG1AS0         equ	962	;# 
   664   0003C3                     CWG1AS1         equ	963	;# 
   665   0003C4                     CWG1STR         equ	964	;# 
   666   0003C5                     CWG2CLK         equ	965	;# 
   667   0003C5                     CWG2CLKCON      equ	965	;# 
   668   0003C6                     CWG2ISM         equ	966	;# 
   669   0003C6                     CWG2DAT         equ	966	;# 
   670   0003C7                     CWG2DBR         equ	967	;# 
   671   0003C8                     CWG2DBF         equ	968	;# 
   672   0003C9                     CWG2CON0        equ	969	;# 
   673   0003CA                     CWG2CON1        equ	970	;# 
   674   0003CB                     CWG2AS0         equ	971	;# 
   675   0003CC                     CWG2AS1         equ	972	;# 
   676   0003CD                     CWG2STR         equ	973	;# 
   677   0003CE                     CWG3CLK         equ	974	;# 
   678   0003CE                     CWG3CLKCON      equ	974	;# 
   679   0003CF                     CWG3ISM         equ	975	;# 
   680   0003CF                     CWG3DAT         equ	975	;# 
   681   0003D0                     CWG3DBR         equ	976	;# 
   682   0003D1                     CWG3DBF         equ	977	;# 
   683   0003D2                     CWG3CON0        equ	978	;# 
   684   0003D3                     CWG3CON1        equ	979	;# 
   685   0003D4                     CWG3AS0         equ	980	;# 
   686   0003D5                     CWG3AS1         equ	981	;# 
   687   0003D6                     CWG3STR         equ	982	;# 
   688   0003D7                     FVRCON          equ	983	;# 
   689   0003D8                     ADCPCON         equ	984	;# 
   690   0003D8                     ADCP            equ	984	;# 
   691   0003D9                     ADLTH           equ	985	;# 
   692   0003D9                     ADLTHL          equ	985	;# 
   693   0003DA                     ADLTHH          equ	986	;# 
   694   0003DB                     ADUTH           equ	987	;# 
   695   0003DB                     ADUTHL          equ	987	;# 
   696   0003DC                     ADUTHH          equ	988	;# 
   697   0003DD                     ADERR           equ	989	;# 
   698   0003DD                     ADERRL          equ	989	;# 
   699   0003DE                     ADERRH          equ	990	;# 
   700   0003DF                     ADSTPT          equ	991	;# 
   701   0003DF                     ADSTPTL         equ	991	;# 
   702   0003E0                     ADSTPTH         equ	992	;# 
   703   0003E1                     ADFLTR          equ	993	;# 
   704   0003E1                     ADFLTRL         equ	993	;# 
   705   0003E2                     ADFLTRH         equ	994	;# 
   706   0003E3                     ADACC           equ	995	;# 
   707   0003E3                     ADACCL          equ	995	;# 
   708   0003E4                     ADACCH          equ	996	;# 
   709   0003E5                     ADACCU          equ	997	;# 
   710   0003E6                     ADCNT           equ	998	;# 
   711   0003E7                     ADRPT           equ	999	;# 
   712   0003E8                     ADPREV          equ	1000	;# 
   713   0003E8                     ADPREVL         equ	1000	;# 
   714   0003E9                     ADPREVH         equ	1001	;# 
   715   0003EA                     ADRES           equ	1002	;# 
   716   0003EA                     ADRESL          equ	1002	;# 
   717   0003EB                     ADRESH          equ	1003	;# 
   718   0003EC                     ADPCH           equ	1004	;# 
   719   0003EE                     ADACQ           equ	1006	;# 
   720   0003EE                     ADACQL          equ	1006	;# 
   721   0003EF                     ADACQH          equ	1007	;# 
   722   0003F0                     ADCAP           equ	1008	;# 
   723   0003F1                     ADPRE           equ	1009	;# 
   724   0003F1                     ADPREL          equ	1009	;# 
   725   0003F2                     ADPREH          equ	1010	;# 
   726   0003F3                     ADCON0          equ	1011	;# 
   727   0003F4                     ADCON1          equ	1012	;# 
   728   0003F5                     ADCON2          equ	1013	;# 
   729   0003F6                     ADCON3          equ	1014	;# 
   730   0003F7                     ADSTAT          equ	1015	;# 
   731   0003F8                     ADREF           equ	1016	;# 
   732   0003F9                     ADACT           equ	1017	;# 
   733   0003FA                     ADCLK           equ	1018	;# 
   734   000400                     ANSELA          equ	1024	;# 
   735   000401                     WPUA            equ	1025	;# 
   736   000402                     ODCONA          equ	1026	;# 
   737   000403                     SLRCONA         equ	1027	;# 
   738   000404                     INLVLA          equ	1028	;# 
   739   000405                     IOCAP           equ	1029	;# 
   740   000406                     IOCAN           equ	1030	;# 
   741   000407                     IOCAF           equ	1031	;# 
   742   000408                     ANSELB          equ	1032	;# 
   743   000409                     WPUB            equ	1033	;# 
   744   00040A                     ODCONB          equ	1034	;# 
   745   00040B                     SLRCONB         equ	1035	;# 
   746   00040C                     INLVLB          equ	1036	;# 
   747   00040D                     IOCBP           equ	1037	;# 
   748   00040E                     IOCBN           equ	1038	;# 
   749   00040F                     IOCBF           equ	1039	;# 
   750   000410                     ANSELC          equ	1040	;# 
   751   000411                     WPUC            equ	1041	;# 
   752   000412                     ODCONC          equ	1042	;# 
   753   000413                     SLRCONC         equ	1043	;# 
   754   000414                     INLVLC          equ	1044	;# 
   755   000415                     IOCCP           equ	1045	;# 
   756   000416                     IOCCN           equ	1046	;# 
   757   000417                     IOCCF           equ	1047	;# 
   758   000418                     ANSELD          equ	1048	;# 
   759   000419                     WPUD            equ	1049	;# 
   760   00041A                     ODCOND          equ	1050	;# 
   761   00041B                     SLRCOND         equ	1051	;# 
   762   00041C                     INLVLD          equ	1052	;# 
   763   000420                     ANSELE          equ	1056	;# 
   764   000421                     WPUE            equ	1057	;# 
   765   000422                     ODCONE          equ	1058	;# 
   766   000423                     SLRCONE         equ	1059	;# 
   767   000424                     INLVLE          equ	1060	;# 
   768   000425                     IOCEP           equ	1061	;# 
   769   000426                     IOCEN           equ	1062	;# 
   770   000427                     IOCEF           equ	1063	;# 
   771   000428                     ANSELF          equ	1064	;# 
   772   000429                     WPUF            equ	1065	;# 
   773   00042A                     ODCONF          equ	1066	;# 
   774   00042B                     SLRCONF         equ	1067	;# 
   775   00042C                     INLVLF          equ	1068	;# 
   776   000440                     NCO1ACC         equ	1088	;# 
   777   000440                     NCO1ACCL        equ	1088	;# 
   778   000441                     NCO1ACCH        equ	1089	;# 
   779   000442                     NCO1ACCU        equ	1090	;# 
   780   000443                     NCO1INC         equ	1091	;# 
   781   000443                     NCO1INCL        equ	1091	;# 
   782   000444                     NCO1INCH        equ	1092	;# 
   783   000445                     NCO1INCU        equ	1093	;# 
   784   000446                     NCO1CON         equ	1094	;# 
   785   000447                     NCO1CLK         equ	1095	;# 
   786   000448                     NCO2ACC         equ	1096	;# 
   787   000448                     NCO2ACCL        equ	1096	;# 
   788   000449                     NCO2ACCH        equ	1097	;# 
   789   00044A                     NCO2ACCU        equ	1098	;# 
   790   00044B                     NCO2INC         equ	1099	;# 
   791   00044B                     NCO2INCL        equ	1099	;# 
   792   00044C                     NCO2INCH        equ	1100	;# 
   793   00044D                     NCO2INCU        equ	1101	;# 
   794   00044E                     NCO2CON         equ	1102	;# 
   795   00044F                     NCO2CLK         equ	1103	;# 
   796   000450                     NCO3ACC         equ	1104	;# 
   797   000450                     NCO3ACCL        equ	1104	;# 
   798   000451                     NCO3ACCH        equ	1105	;# 
   799   000452                     NCO3ACCU        equ	1106	;# 
   800   000453                     NCO3INC         equ	1107	;# 
   801   000453                     NCO3INCL        equ	1107	;# 
   802   000454                     NCO3INCH        equ	1108	;# 
   803   000455                     NCO3INCU        equ	1109	;# 
   804   000456                     NCO3CON         equ	1110	;# 
   805   000457                     NCO3CLK         equ	1111	;# 
   806   000459                     IVTLOCK         equ	1113	;# 
   807   00045A                     IVTAD           equ	1114	;# 
   808   00045A                     IVTADL          equ	1114	;# 
   809   00045B                     IVTADH          equ	1115	;# 
   810   00045C                     IVTADU          equ	1116	;# 
   811   00045D                     IVTBASE         equ	1117	;# 
   812   00045D                     IVTBASEL        equ	1117	;# 
   813   00045E                     IVTBASEH        equ	1118	;# 
   814   00045F                     IVTBASEU        equ	1119	;# 
   815   000460                     PWM1ERS         equ	1120	;# 
   816   000461                     PWM1CLK         equ	1121	;# 
   817   000462                     PWM1LDS         equ	1122	;# 
   818   000463                     PWM1PR          equ	1123	;# 
   819   000463                     PWM1PRL         equ	1123	;# 
   820   000464                     PWM1PRH         equ	1124	;# 
   821   000465                     PWM1CPRE        equ	1125	;# 
   822   000466                     PWM1PIPOS       equ	1126	;# 
   823   000467                     PWM1GIR         equ	1127	;# 
   824   000468                     PWM1GIE         equ	1128	;# 
   825   000469                     PWM1CON         equ	1129	;# 
   826   00046A                     PWM1S1CFG       equ	1130	;# 
   827   00046B                     PWM1S1P1        equ	1131	;# 
   828   00046B                     PWM1S1P1L       equ	1131	;# 
   829   00046C                     PWM1S1P1H       equ	1132	;# 
   830   00046D                     PWM1S1P2        equ	1133	;# 
   831   00046D                     PWM1S1P2L       equ	1133	;# 
   832   00046E                     PWM1S1P2H       equ	1134	;# 
   833   00046F                     PWM2ERS         equ	1135	;# 
   834   000470                     PWM2CLK         equ	1136	;# 
   835   000471                     PWM2LDS         equ	1137	;# 
   836   000472                     PWM2PR          equ	1138	;# 
   837   000472                     PWM2PRL         equ	1138	;# 
   838   000473                     PWM2PRH         equ	1139	;# 
   839   000474                     PWM2CPRE        equ	1140	;# 
   840   000475                     PWM2PIPOS       equ	1141	;# 
   841   000476                     PWM2GIR         equ	1142	;# 
   842   000477                     PWM2GIE         equ	1143	;# 
   843   000478                     PWM2CON         equ	1144	;# 
   844   000479                     PWM2S1CFG       equ	1145	;# 
   845   00047A                     PWM2S1P1        equ	1146	;# 
   846   00047A                     PWM2S1P1L       equ	1146	;# 
   847   00047B                     PWM2S1P1H       equ	1147	;# 
   848   00047C                     PWM2S1P2        equ	1148	;# 
   849   00047C                     PWM2S1P2L       equ	1148	;# 
   850   00047D                     PWM2S1P2H       equ	1149	;# 
   851   00047E                     PWM3ERS         equ	1150	;# 
   852   00047F                     PWM3CLK         equ	1151	;# 
   853   000480                     PWM3LDS         equ	1152	;# 
   854   000481                     PWM3PR          equ	1153	;# 
   855   000481                     PWM3PRL         equ	1153	;# 
   856   000482                     PWM3PRH         equ	1154	;# 
   857   000483                     PWM3CPRE        equ	1155	;# 
   858   000484                     PWM3PIPOS       equ	1156	;# 
   859   000485                     PWM3GIR         equ	1157	;# 
   860   000486                     PWM3GIE         equ	1158	;# 
   861   000487                     PWM3CON         equ	1159	;# 
   862   000488                     PWM3S1CFG       equ	1160	;# 
   863   000489                     PWM3S1P1        equ	1161	;# 
   864   000489                     PWM3S1P1L       equ	1161	;# 
   865   00048A                     PWM3S1P1H       equ	1162	;# 
   866   00048B                     PWM3S1P2        equ	1163	;# 
   867   00048B                     PWM3S1P2L       equ	1163	;# 
   868   00048C                     PWM3S1P2H       equ	1164	;# 
   869   00049C                     PWMLOAD         equ	1180	;# 
   870   00049D                     PWMEN           equ	1181	;# 
   871   00049E                     PIE0            equ	1182	;# 
   872   00049F                     PIE1            equ	1183	;# 
   873   0004A0                     PIE2            equ	1184	;# 
   874   0004A1                     PIE3            equ	1185	;# 
   875   0004A2                     PIE4            equ	1186	;# 
   876   0004A3                     PIE5            equ	1187	;# 
   877   0004A4                     PIE6            equ	1188	;# 
   878   0004A5                     PIE7            equ	1189	;# 
   879   0004A6                     PIE8            equ	1190	;# 
   880   0004A7                     PIE9            equ	1191	;# 
   881   0004A8                     PIE10           equ	1192	;# 
   882   0004A9                     PIE11           equ	1193	;# 
   883   0004AA                     PIE12           equ	1194	;# 
   884   0004AB                     PIE13           equ	1195	;# 
   885   0004AC                     PIE14           equ	1196	;# 
   886   0004AD                     PIE15           equ	1197	;# 
   887   0004AE                     PIR0            equ	1198	;# 
   888   0004AF                     PIR1            equ	1199	;# 
   889   0004B0                     PIR2            equ	1200	;# 
   890   0004B1                     PIR3            equ	1201	;# 
   891   0004B2                     PIR4            equ	1202	;# 
   892   0004B3                     PIR5            equ	1203	;# 
   893   0004B4                     PIR6            equ	1204	;# 
   894   0004B5                     PIR7            equ	1205	;# 
   895   0004B6                     PIR8            equ	1206	;# 
   896   0004B7                     PIR9            equ	1207	;# 
   897   0004B8                     PIR10           equ	1208	;# 
   898   0004B9                     PIR11           equ	1209	;# 
   899   0004BA                     PIR12           equ	1210	;# 
   900   0004BB                     PIR13           equ	1211	;# 
   901   0004BC                     PIR14           equ	1212	;# 
   902   0004BD                     PIR15           equ	1213	;# 
   903   0004BE                     LATA            equ	1214	;# 
   904   0004BF                     LATB            equ	1215	;# 
   905   0004C0                     LATC            equ	1216	;# 
   906   0004C1                     LATD            equ	1217	;# 
   907   0004C2                     LATE            equ	1218	;# 
   908   0004C3                     LATF            equ	1219	;# 
   909   0004C6                     TRISA           equ	1222	;# 
   910   0004C7                     TRISB           equ	1223	;# 
   911   0004C8                     TRISC           equ	1224	;# 
   912   0004C9                     TRISD           equ	1225	;# 
   913   0004CA                     TRISE           equ	1226	;# 
   914   0004CB                     TRISF           equ	1227	;# 
   915   0004CE                     PORTA           equ	1230	;# 
   916   0004CF                     PORTB           equ	1231	;# 
   917   0004D0                     PORTC           equ	1232	;# 
   918   0004D1                     PORTD           equ	1233	;# 
   919   0004D2                     PORTE           equ	1234	;# 
   920   0004D3                     PORTF           equ	1235	;# 
   921   0004D6                     INTCON0         equ	1238	;# 
   922   0004D7                     INTCON1         equ	1239	;# 
   923   0004D8                     STATUS          equ	1240	;# 
   924   0004D9                     FSR2            equ	1241	;# 
   925   0004D9                     FSR2L           equ	1241	;# 
   926   0004DA                     FSR2H           equ	1242	;# 
   927   0004DB                     PLUSW2          equ	1243	;# 
   928   0004DC                     PREINC2         equ	1244	;# 
   929   0004DD                     POSTDEC2        equ	1245	;# 
   930   0004DE                     POSTINC2        equ	1246	;# 
   931   0004DF                     INDF2           equ	1247	;# 
   932   0004E0                     BSR             equ	1248	;# 
   933   0004E1                     FSR1            equ	1249	;# 
   934   0004E1                     FSR1L           equ	1249	;# 
   935   0004E2                     FSR1H           equ	1250	;# 
   936   0004E3                     PLUSW1          equ	1251	;# 
   937   0004E4                     PREINC1         equ	1252	;# 
   938   0004E5                     POSTDEC1        equ	1253	;# 
   939   0004E6                     POSTINC1        equ	1254	;# 
   940   0004E7                     INDF1           equ	1255	;# 
   941   0004E8                     WREG            equ	1256	;# 
   942   0004E9                     FSR0            equ	1257	;# 
   943   0004E9                     FSR0L           equ	1257	;# 
   944   0004EA                     FSR0H           equ	1258	;# 
   945   0004EB                     PLUSW0          equ	1259	;# 
   946   0004EC                     PREINC0         equ	1260	;# 
   947   0004ED                     POSTDEC0        equ	1261	;# 
   948   0004EE                     POSTINC0        equ	1262	;# 
   949   0004EF                     INDF0           equ	1263	;# 
   950   0004F0                     PCON0           equ	1264	;# 
   951   0004F1                     PCON1           equ	1265	;# 
   952   0004F2                     CPUDOZE         equ	1266	;# 
   953   0004F3                     PROD            equ	1267	;# 
   954   0004F3                     PRODL           equ	1267	;# 
   955   0004F4                     PRODH           equ	1268	;# 
   956   0004F5                     TABLAT          equ	1269	;# 
   957   0004F6                     TBLPTR          equ	1270	;# 
   958   0004F6                     TBLPTRL         equ	1270	;# 
   959   0004F7                     TBLPTRH         equ	1271	;# 
   960   0004F8                     TBLPTRU         equ	1272	;# 
   961   0004F9                     PCLAT           equ	1273	;# 
   962   0004F9                     PCL             equ	1273	;# 
   963   0004FA                     PCLATH          equ	1274	;# 
   964   0004FB                     PCLATU          equ	1275	;# 
   965   0004FC                     STKPTR          equ	1276	;# 
   966   0004FD                     TOS             equ	1277	;# 
   967   0004FD                     TOSL            equ	1277	;# 
   968   0004FE                     TOSH            equ	1278	;# 
   969   0004FF                     TOSU            equ	1279	;# 
   970   000039                     CLKRCON         equ	57	;# 
   971   00003A                     CLKRCLK         equ	58	;# 
   972   000040                     NVMCON0         equ	64	;# 
   973   000041                     NVMCON1         equ	65	;# 
   974   000042                     NVMLOCK         equ	66	;# 
   975   000043                     NVMADR          equ	67	;# 
   976   000043                     NVMADRL         equ	67	;# 
   977   000044                     NVMADRH         equ	68	;# 
   978   000045                     NVMADRU         equ	69	;# 
   979   000046                     NVMDAT          equ	70	;# 
   980   000046                     NVMDATL         equ	70	;# 
   981   000047                     NVMDATH         equ	71	;# 
   982   000048                     VREGCON         equ	72	;# 
   983   000049                     BORCON          equ	73	;# 
   984   00004A                     HLVDCON0        equ	74	;# 
   985   00004B                     HLVDCON1        equ	75	;# 
   986   00004C                     ZCDCON          equ	76	;# 
   987   000060                     PMD0            equ	96	;# 
   988   000061                     PMD1            equ	97	;# 
   989   000063                     PMD3            equ	99	;# 
   990   000064                     PMD4            equ	100	;# 
   991   000065                     PMD5            equ	101	;# 
   992   000066                     PMD6            equ	102	;# 
   993   000067                     PMD7            equ	103	;# 
   994   000068                     PMD8            equ	104	;# 
   995   00006A                     MD1CON0         equ	106	;# 
   996   00006B                     MD1CON1         equ	107	;# 
   997   00006C                     MD1SRC          equ	108	;# 
   998   00006D                     MD1CARL         equ	109	;# 
   999   00006E                     MD1CARH         equ	110	;# 
  1000   00006F                     CMOUT           equ	111	;# 
  1001   000070                     CM1CON0         equ	112	;# 
  1002   000071                     CM1CON1         equ	113	;# 
  1003   000072                     CM1NCH          equ	114	;# 
  1004   000073                     CM1PCH          equ	115	;# 
  1005   000074                     CM2CON0         equ	116	;# 
  1006   000075                     CM2CON1         equ	117	;# 
  1007   000076                     CM2NCH          equ	118	;# 
  1008   000077                     CM2PCH          equ	119	;# 
  1009   000078                     WDTCON0         equ	120	;# 
  1010   000079                     WDTCON1         equ	121	;# 
  1011   00007A                     WDTPS           equ	122	;# 
  1012   00007A                     WDTPSL          equ	122	;# 
  1013   00007B                     WDTPSH          equ	123	;# 
  1014   00007C                     WDTTMR          equ	124	;# 
  1015   00007D                     DAC1DAT         equ	125	;# 
  1016   00007D                     DAC1DATL        equ	125	;# 
  1017   00007F                     DAC1CON         equ	127	;# 
  1018   000080                     SPI1RXB         equ	128	;# 
  1019   000081                     SPI1TXB         equ	129	;# 
  1020   000082                     SPI1TCNT        equ	130	;# 
  1021   000082                     SPI1TCNTL       equ	130	;# 
  1022   000083                     SPI1TCNTH       equ	131	;# 
  1023   000084                     SPI1CON0        equ	132	;# 
  1024   000085                     SPI1CON1        equ	133	;# 
  1025   000086                     SPI1CON2        equ	134	;# 
  1026   000087                     SPI1STATUS      equ	135	;# 
  1027   000088                     SPI1TWIDTH      equ	136	;# 
  1028   000089                     SPI1BAUD        equ	137	;# 
  1029   00008A                     SPI1INTF        equ	138	;# 
  1030   00008B                     SPI1INTE        equ	139	;# 
  1031   00008C                     SPI1CLK         equ	140	;# 
  1032   00008D                     SPI2RXB         equ	141	;# 
  1033   00008E                     SPI2TXB         equ	142	;# 
  1034   00008F                     SPI2TCNT        equ	143	;# 
  1035   00008F                     SPI2TCNTL       equ	143	;# 
  1036   000090                     SPI2TCNTH       equ	144	;# 
  1037   000091                     SPI2CON0        equ	145	;# 
  1038   000092                     SPI2CON1        equ	146	;# 
  1039   000093                     SPI2CON2        equ	147	;# 
  1040   000094                     SPI2STATUS      equ	148	;# 
  1041   000095                     SPI2TWIDTH      equ	149	;# 
  1042   000096                     SPI2BAUD        equ	150	;# 
  1043   000097                     SPI2INTF        equ	151	;# 
  1044   000098                     SPI2INTE        equ	152	;# 
  1045   000099                     SPI2CLK         equ	153	;# 
  1046   0000AC                     ACTCON          equ	172	;# 
  1047   0000AD                     OSCCON1         equ	173	;# 
  1048   0000AE                     OSCCON2         equ	174	;# 
  1049   0000AF                     OSCCON3         equ	175	;# 
  1050   0000B0                     OSCTUNE         equ	176	;# 
  1051   0000B1                     OSCFRQ          equ	177	;# 
  1052   0000B1                     OSCFREQ         equ	177	;# 
  1053   0000B2                     OSCSTAT         equ	178	;# 
  1054   0000B2                     OSCSTAT1        equ	178	;# 
  1055   0000B3                     OSCEN           equ	179	;# 
  1056   0000B4                     PRLOCK          equ	180	;# 
  1057   0000B5                     SCANPR          equ	181	;# 
  1058   0000B6                     DMA1PR          equ	182	;# 
  1059   0000B7                     DMA2PR          equ	183	;# 
  1060   0000B8                     DMA3PR          equ	184	;# 
  1061   0000B9                     DMA4PR          equ	185	;# 
  1062   0000BA                     DMA5PR          equ	186	;# 
  1063   0000BB                     DMA6PR          equ	187	;# 
  1064   0000BE                     MAINPR          equ	190	;# 
  1065   0000BF                     ISRPR           equ	191	;# 
  1066   0000D4                     CLCDATA         equ	212	;# 
  1067   0000D5                     CLCSELECT       equ	213	;# 
  1068   0000D6                     CLCnCON         equ	214	;# 
  1069   0000D7                     CLCnPOL         equ	215	;# 
  1070   0000D8                     CLCnSEL0        equ	216	;# 
  1071   0000D9                     CLCnSEL1        equ	217	;# 
  1072   0000DA                     CLCnSEL2        equ	218	;# 
  1073   0000DB                     CLCnSEL3        equ	219	;# 
  1074   0000DC                     CLCnGLS0        equ	220	;# 
  1075   0000DD                     CLCnGLS1        equ	221	;# 
  1076   0000DE                     CLCnGLS2        equ	222	;# 
  1077   0000DF                     CLCnGLS3        equ	223	;# 
  1078   0000E8                     DMASELECT       equ	232	;# 
  1079   0000E9                     DMAnBUF         equ	233	;# 
  1080   0000EA                     DMAnDCNT        equ	234	;# 
  1081   0000EA                     DMAnDCNTL       equ	234	;# 
  1082   0000EB                     DMAnDCNTH       equ	235	;# 
  1083   0000EC                     DMAnDPTR        equ	236	;# 
  1084   0000EC                     DMAnDPTRL       equ	236	;# 
  1085   0000ED                     DMAnDPTRH       equ	237	;# 
  1086   0000EE                     DMAnDSZ         equ	238	;# 
  1087   0000EE                     DMAnDSZL        equ	238	;# 
  1088   0000EF                     DMAnDSZH        equ	239	;# 
  1089   0000F0                     DMAnDSA         equ	240	;# 
  1090   0000F0                     DMAnDSAL        equ	240	;# 
  1091   0000F1                     DMAnDSAH        equ	241	;# 
  1092   0000F2                     DMAnSCNT        equ	242	;# 
  1093   0000F2                     DMAnSCNTL       equ	242	;# 
  1094   0000F3                     DMAnSCNTH       equ	243	;# 
  1095   0000F4                     DMAnSPTR        equ	244	;# 
  1096   0000F4                     DMAnSPTRL       equ	244	;# 
  1097   0000F5                     DMAnSPTRH       equ	245	;# 
  1098   0000F6                     DMAnSPTRU       equ	246	;# 
  1099   0000F7                     DMAnSSZ         equ	247	;# 
  1100   0000F7                     DMAnSSZL        equ	247	;# 
  1101   0000F8                     DMAnSSZH        equ	248	;# 
  1102   0000F9                     DMAnSSA         equ	249	;# 
  1103   0000F9                     DMAnSSAL        equ	249	;# 
  1104   0000FA                     DMAnSSAH        equ	250	;# 
  1105   0000FB                     DMAnSSAU        equ	251	;# 
  1106   0000FC                     DMAnCON0        equ	252	;# 
  1107   0000FD                     DMAnCON1        equ	253	;# 
  1108   0000FE                     DMAnAIRQ        equ	254	;# 
  1109   0000FF                     DMAnSIRQ        equ	255	;# 
  1110   000200                     PPSLOCK         equ	512	;# 
  1111   000201                     RA0PPS          equ	513	;# 
  1112   000202                     RA1PPS          equ	514	;# 
  1113   000203                     RA2PPS          equ	515	;# 
  1114   000204                     RA3PPS          equ	516	;# 
  1115   000205                     RA4PPS          equ	517	;# 
  1116   000206                     RA5PPS          equ	518	;# 
  1117   000207                     RA6PPS          equ	519	;# 
  1118   000208                     RA7PPS          equ	520	;# 
  1119   000209                     RB0PPS          equ	521	;# 
  1120   00020A                     RB1PPS          equ	522	;# 
  1121   00020B                     RB2PPS          equ	523	;# 
  1122   00020C                     RB3PPS          equ	524	;# 
  1123   00020D                     RB4PPS          equ	525	;# 
  1124   00020E                     RB5PPS          equ	526	;# 
  1125   00020F                     RB6PPS          equ	527	;# 
  1126   000210                     RB7PPS          equ	528	;# 
  1127   000211                     RC0PPS          equ	529	;# 
  1128   000212                     RC1PPS          equ	530	;# 
  1129   000213                     RC2PPS          equ	531	;# 
  1130   000214                     RC3PPS          equ	532	;# 
  1131   000215                     RC4PPS          equ	533	;# 
  1132   000216                     RC5PPS          equ	534	;# 
  1133   000217                     RC6PPS          equ	535	;# 
  1134   000218                     RC7PPS          equ	536	;# 
  1135   000219                     RD0PPS          equ	537	;# 
  1136   00021A                     RD1PPS          equ	538	;# 
  1137   00021B                     RD2PPS          equ	539	;# 
  1138   00021C                     RD3PPS          equ	540	;# 
  1139   00021D                     RD4PPS          equ	541	;# 
  1140   00021E                     RD5PPS          equ	542	;# 
  1141   00021F                     RD6PPS          equ	543	;# 
  1142   000220                     RD7PPS          equ	544	;# 
  1143   000221                     RE0PPS          equ	545	;# 
  1144   000222                     RE1PPS          equ	546	;# 
  1145   000223                     RE2PPS          equ	547	;# 
  1146   000229                     RF0PPS          equ	553	;# 
  1147   00022A                     RF1PPS          equ	554	;# 
  1148   00022B                     RF2PPS          equ	555	;# 
  1149   00022C                     RF3PPS          equ	556	;# 
  1150   00022D                     RF4PPS          equ	557	;# 
  1151   00022E                     RF5PPS          equ	558	;# 
  1152   00022F                     RF6PPS          equ	559	;# 
  1153   000230                     RF7PPS          equ	560	;# 
  1154   00023E                     INT0PPS         equ	574	;# 
  1155   00023F                     INT1PPS         equ	575	;# 
  1156   000240                     INT2PPS         equ	576	;# 
  1157   000241                     T0CKIPPS        equ	577	;# 
  1158   000242                     T1CKIPPS        equ	578	;# 
  1159   000243                     T1GPPS          equ	579	;# 
  1160   000244                     T3CKIPPS        equ	580	;# 
  1161   000245                     T3GPPS          equ	581	;# 
  1162   000246                     T5CKIPPS        equ	582	;# 
  1163   000247                     T5GPPS          equ	583	;# 
  1164   000248                     T2INPPS         equ	584	;# 
  1165   000249                     T4INPPS         equ	585	;# 
  1166   00024A                     T6INPPS         equ	586	;# 
  1167   00024F                     CCP1PPS         equ	591	;# 
  1168   000250                     CCP2PPS         equ	592	;# 
  1169   000251                     CCP3PPS         equ	593	;# 
  1170   000253                     PWM1ERSPPS      equ	595	;# 
  1171   000254                     PWM2ERSPPS      equ	596	;# 
  1172   000255                     PWM3ERSPPS      equ	597	;# 
  1173   000257                     PWMIN0PPS       equ	599	;# 
  1174   000258                     PWMIN1PPS       equ	600	;# 
  1175   000259                     SMT1WINPPS      equ	601	;# 
  1176   00025A                     SMT1SIGPPS      equ	602	;# 
  1177   00025B                     CWG1PPS         equ	603	;# 
  1178   00025B                     CWG1INPPS       equ	603	;# 
  1179   00025C                     CWG2PPS         equ	604	;# 
  1180   00025C                     CWG2INPPS       equ	604	;# 
  1181   00025D                     CWG3PPS         equ	605	;# 
  1182   00025D                     CWG3INPPS       equ	605	;# 
  1183   00025E                     MD1CARLPPS      equ	606	;# 
  1184   00025E                     MDCARLPPS       equ	606	;# 
  1185   00025F                     MD1CARHPPS      equ	607	;# 
  1186   00025F                     MDCARHPPS       equ	607	;# 
  1187   000260                     MD1SRCPPS       equ	608	;# 
  1188   000260                     MDSRCPPS        equ	608	;# 
  1189   000261                     CLCIN0PPS       equ	609	;# 
  1190   000262                     CLCIN1PPS       equ	610	;# 
  1191   000263                     CLCIN2PPS       equ	611	;# 
  1192   000264                     CLCIN3PPS       equ	612	;# 
  1193   000265                     CLCIN4PPS       equ	613	;# 
  1194   000266                     CLCIN5PPS       equ	614	;# 
  1195   000267                     CLCIN6PPS       equ	615	;# 
  1196   000268                     CLCIN7PPS       equ	616	;# 
  1197   000269                     ADACTPPS        equ	617	;# 
  1198   00026A                     SPI1SCKPPS      equ	618	;# 
  1199   00026B                     SPI1SDIPPS      equ	619	;# 
  1200   00026C                     SPI1SSPPS       equ	620	;# 
  1201   00026D                     SPI2SCKPPS      equ	621	;# 
  1202   00026E                     SPI2SDIPPS      equ	622	;# 
  1203   00026F                     SPI2SSPPS       equ	623	;# 
  1204   000270                     I2C1SDAPPS      equ	624	;# 
  1205   000271                     I2C1SCLPPS      equ	625	;# 
  1206   000272                     U1RXPPS         equ	626	;# 
  1207   000273                     U1CTSPPS        equ	627	;# 
  1208   000274                     U2RXPPS         equ	628	;# 
  1209   000275                     U2CTSPPS        equ	629	;# 
  1210   000276                     U3RXPPS         equ	630	;# 
  1211   000277                     U3CTSPPS        equ	631	;# 
  1212   000278                     U4RXPPS         equ	632	;# 
  1213   000279                     U4CTSPPS        equ	633	;# 
  1214   00027A                     U5RXPPS         equ	634	;# 
  1215   00027B                     U5CTSPPS        equ	635	;# 
  1216   000286                     RC4I2C          equ	646	;# 
  1217   000287                     RC3I2C          equ	647	;# 
  1218   000288                     RB2I2C          equ	648	;# 
  1219   000289                     RB1I2C          equ	649	;# 
  1220   00028B                     I2C1RXB         equ	651	;# 
  1221   00028C                     I2C1TXB         equ	652	;# 
  1222   00028D                     I2C1CNT         equ	653	;# 
  1223   00028E                     I2C1ADB0        equ	654	;# 
  1224   00028F                     I2C1ADB1        equ	655	;# 
  1225   000290                     I2C1ADR0        equ	656	;# 
  1226   000291                     I2C1ADR1        equ	657	;# 
  1227   000292                     I2C1ADR2        equ	658	;# 
  1228   000293                     I2C1ADR3        equ	659	;# 
  1229   000294                     I2C1CON0        equ	660	;# 
  1230   000295                     I2C1CON1        equ	661	;# 
  1231   000296                     I2C1CON2        equ	662	;# 
  1232   000297                     I2C1ERR         equ	663	;# 
  1233   000298                     I2C1STAT0       equ	664	;# 
  1234   000299                     I2C1STAT1       equ	665	;# 
  1235   00029A                     I2C1PIR         equ	666	;# 
  1236   00029B                     I2C1PIE         equ	667	;# 
  1237   00029C                     I2C1CLK         equ	668	;# 
  1238   00029D                     I2C1BTO         equ	669	;# 
  1239   0002A1                     U1RXB           equ	673	;# 
  1240   0002A1                     U1RXBL          equ	673	;# 
  1241   0002A2                     U1RXCHK         equ	674	;# 
  1242   0002A3                     U1TXB           equ	675	;# 
  1243   0002A3                     U1TXBL          equ	675	;# 
  1244   0002A4                     U1TXCHK         equ	676	;# 
  1245   0002A5                     U1P1            equ	677	;# 
  1246   0002A5                     U1P1L           equ	677	;# 
  1247   0002A6                     U1P1H           equ	678	;# 
  1248   0002A7                     U1P2            equ	679	;# 
  1249   0002A7                     U1P2L           equ	679	;# 
  1250   0002A8                     U1P2H           equ	680	;# 
  1251   0002A9                     U1P3            equ	681	;# 
  1252   0002A9                     U1P3L           equ	681	;# 
  1253   0002AA                     U1P3H           equ	682	;# 
  1254   0002AB                     U1CON0          equ	683	;# 
  1255   0002AC                     U1CON1          equ	684	;# 
  1256   0002AD                     U1CON2          equ	685	;# 
  1257   0002AE                     U1BRG           equ	686	;# 
  1258   0002AE                     U1BRGL          equ	686	;# 
  1259   0002AF                     U1BRGH          equ	687	;# 
  1260   0002B0                     U1FIFO          equ	688	;# 
  1261   0002B1                     U1UIR           equ	689	;# 
  1262   0002B2                     U1ERRIR         equ	690	;# 
  1263   0002B3                     U1ERRIE         equ	691	;# 
  1264   0002B4                     U2RXB           equ	692	;# 
  1265   0002B4                     U2RXBL          equ	692	;# 
  1266   0002B6                     U2TXB           equ	694	;# 
  1267   0002B6                     U2TXBL          equ	694	;# 
  1268   0002B8                     U2P1            equ	696	;# 
  1269   0002B8                     U2P1L           equ	696	;# 
  1270   0002BA                     U2P2            equ	698	;# 
  1271   0002BA                     U2P2L           equ	698	;# 
  1272   0002BC                     U2P3            equ	700	;# 
  1273   0002BC                     U2P3L           equ	700	;# 
  1274   0002BE                     U2CON0          equ	702	;# 
  1275   0002BF                     U2CON1          equ	703	;# 
  1276   0002C0                     U2CON2          equ	704	;# 
  1277   0002C1                     U2BRG           equ	705	;# 
  1278   0002C1                     U2BRGL          equ	705	;# 
  1279   0002C2                     U2BRGH          equ	706	;# 
  1280   0002C3                     U2FIFO          equ	707	;# 
  1281   0002C4                     U2UIR           equ	708	;# 
  1282   0002C5                     U2ERRIR         equ	709	;# 
  1283   0002C6                     U2ERRIE         equ	710	;# 
  1284   0002C7                     U3RXB           equ	711	;# 
  1285   0002C7                     U3RXBL          equ	711	;# 
  1286   0002C9                     U3TXB           equ	713	;# 
  1287   0002C9                     U3TXBL          equ	713	;# 
  1288   0002CB                     U3P1            equ	715	;# 
  1289   0002CB                     U3P1L           equ	715	;# 
  1290   0002CD                     U3P2            equ	717	;# 
  1291   0002CD                     U3P2L           equ	717	;# 
  1292   0002CF                     U3P3            equ	719	;# 
  1293   0002CF                     U3P3L           equ	719	;# 
  1294   0002D1                     U3CON0          equ	721	;# 
  1295   0002D2                     U3CON1          equ	722	;# 
  1296   0002D3                     U3CON2          equ	723	;# 
  1297   0002D4                     U3BRG           equ	724	;# 
  1298   0002D4                     U3BRGL          equ	724	;# 
  1299   0002D5                     U3BRGH          equ	725	;# 
  1300   0002D6                     U3FIFO          equ	726	;# 
  1301   0002D7                     U3UIR           equ	727	;# 
  1302   0002D8                     U3ERRIR         equ	728	;# 
  1303   0002D9                     U3ERRIE         equ	729	;# 
  1304   0002DA                     U4RXB           equ	730	;# 
  1305   0002DA                     U4RXBL          equ	730	;# 
  1306   0002DC                     U4TXB           equ	732	;# 
  1307   0002DC                     U4TXBL          equ	732	;# 
  1308   0002DE                     U4P1            equ	734	;# 
  1309   0002DE                     U4P1L           equ	734	;# 
  1310   0002E0                     U4P2            equ	736	;# 
  1311   0002E0                     U4P2L           equ	736	;# 
  1312   0002E2                     U4P3            equ	738	;# 
  1313   0002E2                     U4P3L           equ	738	;# 
  1314   0002E4                     U4CON0          equ	740	;# 
  1315   0002E5                     U4CON1          equ	741	;# 
  1316   0002E6                     U4CON2          equ	742	;# 
  1317   0002E7                     U4BRG           equ	743	;# 
  1318   0002E7                     U4BRGL          equ	743	;# 
  1319   0002E8                     U4BRGH          equ	744	;# 
  1320   0002E9                     U4FIFO          equ	745	;# 
  1321   0002EA                     U4UIR           equ	746	;# 
  1322   0002EB                     U4ERRIR         equ	747	;# 
  1323   0002EC                     U4ERRIE         equ	748	;# 
  1324   0002ED                     U5RXB           equ	749	;# 
  1325   0002ED                     U5RXBL          equ	749	;# 
  1326   0002EF                     U5TXB           equ	751	;# 
  1327   0002EF                     U5TXBL          equ	751	;# 
  1328   0002F1                     U5P1            equ	753	;# 
  1329   0002F1                     U5P1L           equ	753	;# 
  1330   0002F3                     U5P2            equ	755	;# 
  1331   0002F3                     U5P2L           equ	755	;# 
  1332   0002F5                     U5P3            equ	757	;# 
  1333   0002F5                     U5P3L           equ	757	;# 
  1334   0002F7                     U5CON0          equ	759	;# 
  1335   0002F8                     U5CON1          equ	760	;# 
  1336   0002F9                     U5CON2          equ	761	;# 
  1337   0002FA                     U5BRG           equ	762	;# 
  1338   0002FA                     U5BRGL          equ	762	;# 
  1339   0002FB                     U5BRGH          equ	763	;# 
  1340   0002FC                     U5FIFO          equ	764	;# 
  1341   0002FD                     U5UIR           equ	765	;# 
  1342   0002FE                     U5ERRIR         equ	766	;# 
  1343   0002FF                     U5ERRIE         equ	767	;# 
  1344   000300                     SMT1TMR         equ	768	;# 
  1345   000300                     SMT1TMRL        equ	768	;# 
  1346   000301                     SMT1TMRH        equ	769	;# 
  1347   000302                     SMT1TMRU        equ	770	;# 
  1348   000303                     SMT1CPR         equ	771	;# 
  1349   000303                     SMT1CPRL        equ	771	;# 
  1350   000304                     SMT1CPRH        equ	772	;# 
  1351   000305                     SMT1CPRU        equ	773	;# 
  1352   000306                     SMT1CPW         equ	774	;# 
  1353   000306                     SMT1CPWL        equ	774	;# 
  1354   000307                     SMT1CPWH        equ	775	;# 
  1355   000308                     SMT1CPWU        equ	776	;# 
  1356   000309                     SMT1PR          equ	777	;# 
  1357   000309                     SMT1PRL         equ	777	;# 
  1358   00030A                     SMT1PRH         equ	778	;# 
  1359   00030B                     SMT1PRU         equ	779	;# 
  1360   00030C                     SMT1CON0        equ	780	;# 
  1361   00030D                     SMT1CON1        equ	781	;# 
  1362   00030E                     SMT1STAT        equ	782	;# 
  1363   00030F                     SMT1CLK         equ	783	;# 
  1364   000310                     SMT1SIG         equ	784	;# 
  1365   000311                     SMT1WIN         equ	785	;# 
  1366   000318                     TMR0L           equ	792	;# 
  1367   000318                     TMR0            equ	792	;# 
  1368   000319                     TMR0H           equ	793	;# 
  1369   000319                     PR0             equ	793	;# 
  1370   00031A                     T0CON0          equ	794	;# 
  1371   00031B                     T0CON1          equ	795	;# 
  1372   00031C                     TMR1            equ	796	;# 
  1373   00031C                     TMR1L           equ	796	;# 
  1374   00031D                     TMR1H           equ	797	;# 
  1375   00031E                     T1CON           equ	798	;# 
  1376   00031E                     TMR1CON         equ	798	;# 
  1377   00031F                     T1GCON          equ	799	;# 
  1378   00031F                     TMR1GCON        equ	799	;# 
  1379   000320                     T1GATE          equ	800	;# 
  1380   000320                     TMR1GATE        equ	800	;# 
  1381   000321                     T1CLK           equ	801	;# 
  1382   000321                     TMR1CLK         equ	801	;# 
  1383   000321                     PR1             equ	801	;# 
  1384   000322                     T2TMR           equ	802	;# 
  1385   000322                     TMR2            equ	802	;# 
  1386   000323                     T2PR            equ	803	;# 
  1387   000323                     PR2             equ	803	;# 
  1388   000324                     T2CON           equ	804	;# 
  1389   000325                     T2HLT           equ	805	;# 
  1390   000326                     T2CLKCON        equ	806	;# 
  1391   000326                     T2CLK           equ	806	;# 
  1392   000327                     T2RST           equ	807	;# 
  1393   000328                     TMR3            equ	808	;# 
  1394   000328                     TMR3L           equ	808	;# 
  1395   000329                     TMR3H           equ	809	;# 
  1396   00032A                     T3CON           equ	810	;# 
  1397   00032A                     TMR3CON         equ	810	;# 
  1398   00032B                     T3GCON          equ	811	;# 
  1399   00032B                     TMR3GCON        equ	811	;# 
  1400   00032C                     T3GATE          equ	812	;# 
  1401   00032C                     TMR3GATE        equ	812	;# 
  1402   00032D                     T3CLK           equ	813	;# 
  1403   00032D                     TMR3CLK         equ	813	;# 
  1404   00032D                     PR3             equ	813	;# 
  1405   00032E                     T4TMR           equ	814	;# 
  1406   00032E                     TMR4            equ	814	;# 
  1407   00032F                     T4PR            equ	815	;# 
  1408   00032F                     PR4             equ	815	;# 
  1409   000330                     T4CON           equ	816	;# 
  1410   000331                     T4HLT           equ	817	;# 
  1411   000332                     T4CLKCON        equ	818	;# 
  1412   000332                     T4CLK           equ	818	;# 
  1413   000333                     T4RST           equ	819	;# 
  1414   000334                     TMR5            equ	820	;# 
  1415   000334                     TMR5L           equ	820	;# 
  1416   000335                     TMR5H           equ	821	;# 
  1417   000336                     T5CON           equ	822	;# 
  1418   000336                     TMR5CON         equ	822	;# 
  1419   000337                     T5GCON          equ	823	;# 
  1420   000337                     TMR5GCON        equ	823	;# 
  1421   000338                     T5GATE          equ	824	;# 
  1422   000338                     TMR5GATE        equ	824	;# 
  1423   000339                     T5CLK           equ	825	;# 
  1424   000339                     TMR5CLK         equ	825	;# 
  1425   000339                     PR5             equ	825	;# 
  1426   00033A                     T6TMR           equ	826	;# 
  1427   00033A                     TMR6            equ	826	;# 
  1428   00033B                     T6PR            equ	827	;# 
  1429   00033B                     PR6             equ	827	;# 
  1430   00033C                     T6CON           equ	828	;# 
  1431   00033D                     T6HLT           equ	829	;# 
  1432   00033E                     T6CLKCON        equ	830	;# 
  1433   00033E                     T6CLK           equ	830	;# 
  1434   00033F                     T6RST           equ	831	;# 
  1435   000340                     CCPR1           equ	832	;# 
  1436   000340                     CCPR1L          equ	832	;# 
  1437   000341                     CCPR1H          equ	833	;# 
  1438   000342                     CCP1CON         equ	834	;# 
  1439   000343                     CCP1CAP         equ	835	;# 
  1440   000344                     CCPR2           equ	836	;# 
  1441   000344                     CCPR2L          equ	836	;# 
  1442   000345                     CCPR2H          equ	837	;# 
  1443   000346                     CCP2CON         equ	838	;# 
  1444   000347                     CCP2CAP         equ	839	;# 
  1445   000348                     CCPR3           equ	840	;# 
  1446   000348                     CCPR3L          equ	840	;# 
  1447   000349                     CCPR3H          equ	841	;# 
  1448   00034A                     CCP3CON         equ	842	;# 
  1449   00034B                     CCP3CAP         equ	843	;# 
  1450   00034C                     CCPTMRS0        equ	844	;# 
  1451   00034F                     CRCDATA         equ	847	;# 
  1452   00034F                     CRCDATL         equ	847	;# 
  1453   000350                     CRCDATH         equ	848	;# 
  1454   000351                     CRCACC          equ	849	;# 
  1455   000351                     CRCACCL         equ	849	;# 
  1456   000352                     CRCACCH         equ	850	;# 
  1457   000353                     CRCSHFT         equ	851	;# 
  1458   000353                     CRCSHIFTL       equ	851	;# 
  1459   000354                     CRCSHIFTH       equ	852	;# 
  1460   000355                     CRCXOR          equ	853	;# 
  1461   000355                     CRCXORL         equ	853	;# 
  1462   000356                     CRCXORH         equ	854	;# 
  1463   000357                     CRCCON0         equ	855	;# 
  1464   000358                     CRCCON1         equ	856	;# 
  1465   00035A                     SCANLADR        equ	858	;# 
  1466   00035A                     SCANLADRL       equ	858	;# 
  1467   00035B                     SCANLADRH       equ	859	;# 
  1468   00035C                     SCANLADRU       equ	860	;# 
  1469   00035D                     SCANHADR        equ	861	;# 
  1470   00035D                     SCANHADRL       equ	861	;# 
  1471   00035E                     SCANHADRH       equ	862	;# 
  1472   00035F                     SCANHADRU       equ	863	;# 
  1473   000360                     SCANCON0        equ	864	;# 
  1474   000361                     SCANTRIG        equ	865	;# 
  1475   000362                     IPR0            equ	866	;# 
  1476   000363                     IPR1            equ	867	;# 
  1477   000364                     IPR2            equ	868	;# 
  1478   000365                     IPR3            equ	869	;# 
  1479   000366                     IPR4            equ	870	;# 
  1480   000367                     IPR5            equ	871	;# 
  1481   000368                     IPR6            equ	872	;# 
  1482   000369                     IPR7            equ	873	;# 
  1483   00036A                     IPR8            equ	874	;# 
  1484   00036B                     IPR9            equ	875	;# 
  1485   00036C                     IPR10           equ	876	;# 
  1486   00036D                     IPR11           equ	877	;# 
  1487   00036E                     IPR12           equ	878	;# 
  1488   00036F                     IPR13           equ	879	;# 
  1489   000370                     IPR14           equ	880	;# 
  1490   000371                     IPR15           equ	881	;# 
  1491   000373                     STATUS_CSHAD    equ	883	;# 
  1492   000374                     WREG_CSHAD      equ	884	;# 
  1493   000375                     BSR_CSHAD       equ	885	;# 
  1494   000376                     SHADCON         equ	886	;# 
  1495   000377                     STATUS_SHAD     equ	887	;# 
  1496   000378                     WREG_SHAD       equ	888	;# 
  1497   000379                     BSR_SHAD        equ	889	;# 
  1498   00037A                     PCLATH_SHAD     equ	890	;# 
  1499   00037B                     PCLATU_SHAD     equ	891	;# 
  1500   00037C                     FSR0SH          equ	892	;# 
  1501   00037C                     FSR0L_SHAD      equ	892	;# 
  1502   00037D                     FSR0H_SHAD      equ	893	;# 
  1503   00037E                     FSR1SH          equ	894	;# 
  1504   00037E                     FSR1L_SHAD      equ	894	;# 
  1505   00037F                     FSR1H_SHAD      equ	895	;# 
  1506   000380                     FSR2SH          equ	896	;# 
  1507   000380                     FSR2L_SHAD      equ	896	;# 
  1508   000381                     FSR2H_SHAD      equ	897	;# 
  1509   000382                     PRODSH          equ	898	;# 
  1510   000382                     PRODL_SHAD      equ	898	;# 
  1511   000383                     PRODH_SHAD      equ	899	;# 
  1512   0003BC                     CWG1CLK         equ	956	;# 
  1513   0003BC                     CWG1CLKCON      equ	956	;# 
  1514   0003BD                     CWG1ISM         equ	957	;# 
  1515   0003BD                     CWG1DAT         equ	957	;# 
  1516   0003BE                     CWG1DBR         equ	958	;# 
  1517   0003BF                     CWG1DBF         equ	959	;# 
  1518   0003C0                     CWG1CON0        equ	960	;# 
  1519   0003C1                     CWG1CON1        equ	961	;# 
  1520   0003C2                     CWG1AS0         equ	962	;# 
  1521   0003C3                     CWG1AS1         equ	963	;# 
  1522   0003C4                     CWG1STR         equ	964	;# 
  1523   0003C5                     CWG2CLK         equ	965	;# 
  1524   0003C5                     CWG2CLKCON      equ	965	;# 
  1525   0003C6                     CWG2ISM         equ	966	;# 
  1526   0003C6                     CWG2DAT         equ	966	;# 
  1527   0003C7                     CWG2DBR         equ	967	;# 
  1528   0003C8                     CWG2DBF         equ	968	;# 
  1529   0003C9                     CWG2CON0        equ	969	;# 
  1530   0003CA                     CWG2CON1        equ	970	;# 
  1531   0003CB                     CWG2AS0         equ	971	;# 
  1532   0003CC                     CWG2AS1         equ	972	;# 
  1533   0003CD                     CWG2STR         equ	973	;# 
  1534   0003CE                     CWG3CLK         equ	974	;# 
  1535   0003CE                     CWG3CLKCON      equ	974	;# 
  1536   0003CF                     CWG3ISM         equ	975	;# 
  1537   0003CF                     CWG3DAT         equ	975	;# 
  1538   0003D0                     CWG3DBR         equ	976	;# 
  1539   0003D1                     CWG3DBF         equ	977	;# 
  1540   0003D2                     CWG3CON0        equ	978	;# 
  1541   0003D3                     CWG3CON1        equ	979	;# 
  1542   0003D4                     CWG3AS0         equ	980	;# 
  1543   0003D5                     CWG3AS1         equ	981	;# 
  1544   0003D6                     CWG3STR         equ	982	;# 
  1545   0003D7                     FVRCON          equ	983	;# 
  1546   0003D8                     ADCPCON         equ	984	;# 
  1547   0003D8                     ADCP            equ	984	;# 
  1548   0003D9                     ADLTH           equ	985	;# 
  1549   0003D9                     ADLTHL          equ	985	;# 
  1550   0003DA                     ADLTHH          equ	986	;# 
  1551   0003DB                     ADUTH           equ	987	;# 
  1552   0003DB                     ADUTHL          equ	987	;# 
  1553   0003DC                     ADUTHH          equ	988	;# 
  1554   0003DD                     ADERR           equ	989	;# 
  1555   0003DD                     ADERRL          equ	989	;# 
  1556   0003DE                     ADERRH          equ	990	;# 
  1557   0003DF                     ADSTPT          equ	991	;# 
  1558   0003DF                     ADSTPTL         equ	991	;# 
  1559   0003E0                     ADSTPTH         equ	992	;# 
  1560   0003E1                     ADFLTR          equ	993	;# 
  1561   0003E1                     ADFLTRL         equ	993	;# 
  1562   0003E2                     ADFLTRH         equ	994	;# 
  1563   0003E3                     ADACC           equ	995	;# 
  1564   0003E3                     ADACCL          equ	995	;# 
  1565   0003E4                     ADACCH          equ	996	;# 
  1566   0003E5                     ADACCU          equ	997	;# 
  1567   0003E6                     ADCNT           equ	998	;# 
  1568   0003E7                     ADRPT           equ	999	;# 
  1569   0003E8                     ADPREV          equ	1000	;# 
  1570   0003E8                     ADPREVL         equ	1000	;# 
  1571   0003E9                     ADPREVH         equ	1001	;# 
  1572   0003EA                     ADRES           equ	1002	;# 
  1573   0003EA                     ADRESL          equ	1002	;# 
  1574   0003EB                     ADRESH          equ	1003	;# 
  1575   0003EC                     ADPCH           equ	1004	;# 
  1576   0003EE                     ADACQ           equ	1006	;# 
  1577   0003EE                     ADACQL          equ	1006	;# 
  1578   0003EF                     ADACQH          equ	1007	;# 
  1579   0003F0                     ADCAP           equ	1008	;# 
  1580   0003F1                     ADPRE           equ	1009	;# 
  1581   0003F1                     ADPREL          equ	1009	;# 
  1582   0003F2                     ADPREH          equ	1010	;# 
  1583   0003F3                     ADCON0          equ	1011	;# 
  1584   0003F4                     ADCON1          equ	1012	;# 
  1585   0003F5                     ADCON2          equ	1013	;# 
  1586   0003F6                     ADCON3          equ	1014	;# 
  1587   0003F7                     ADSTAT          equ	1015	;# 
  1588   0003F8                     ADREF           equ	1016	;# 
  1589   0003F9                     ADACT           equ	1017	;# 
  1590   0003FA                     ADCLK           equ	1018	;# 
  1591   000400                     ANSELA          equ	1024	;# 
  1592   000401                     WPUA            equ	1025	;# 
  1593   000402                     ODCONA          equ	1026	;# 
  1594   000403                     SLRCONA         equ	1027	;# 
  1595   000404                     INLVLA          equ	1028	;# 
  1596   000405                     IOCAP           equ	1029	;# 
  1597   000406                     IOCAN           equ	1030	;# 
  1598   000407                     IOCAF           equ	1031	;# 
  1599   000408                     ANSELB          equ	1032	;# 
  1600   000409                     WPUB            equ	1033	;# 
  1601   00040A                     ODCONB          equ	1034	;# 
  1602   00040B                     SLRCONB         equ	1035	;# 
  1603   00040C                     INLVLB          equ	1036	;# 
  1604   00040D                     IOCBP           equ	1037	;# 
  1605   00040E                     IOCBN           equ	1038	;# 
  1606   00040F                     IOCBF           equ	1039	;# 
  1607   000410                     ANSELC          equ	1040	;# 
  1608   000411                     WPUC            equ	1041	;# 
  1609   000412                     ODCONC          equ	1042	;# 
  1610   000413                     SLRCONC         equ	1043	;# 
  1611   000414                     INLVLC          equ	1044	;# 
  1612   000415                     IOCCP           equ	1045	;# 
  1613   000416                     IOCCN           equ	1046	;# 
  1614   000417                     IOCCF           equ	1047	;# 
  1615   000418                     ANSELD          equ	1048	;# 
  1616   000419                     WPUD            equ	1049	;# 
  1617   00041A                     ODCOND          equ	1050	;# 
  1618   00041B                     SLRCOND         equ	1051	;# 
  1619   00041C                     INLVLD          equ	1052	;# 
  1620   000420                     ANSELE          equ	1056	;# 
  1621   000421                     WPUE            equ	1057	;# 
  1622   000422                     ODCONE          equ	1058	;# 
  1623   000423                     SLRCONE         equ	1059	;# 
  1624   000424                     INLVLE          equ	1060	;# 
  1625   000425                     IOCEP           equ	1061	;# 
  1626   000426                     IOCEN           equ	1062	;# 
  1627   000427                     IOCEF           equ	1063	;# 
  1628   000428                     ANSELF          equ	1064	;# 
  1629   000429                     WPUF            equ	1065	;# 
  1630   00042A                     ODCONF          equ	1066	;# 
  1631   00042B                     SLRCONF         equ	1067	;# 
  1632   00042C                     INLVLF          equ	1068	;# 
  1633   000440                     NCO1ACC         equ	1088	;# 
  1634   000440                     NCO1ACCL        equ	1088	;# 
  1635   000441                     NCO1ACCH        equ	1089	;# 
  1636   000442                     NCO1ACCU        equ	1090	;# 
  1637   000443                     NCO1INC         equ	1091	;# 
  1638   000443                     NCO1INCL        equ	1091	;# 
  1639   000444                     NCO1INCH        equ	1092	;# 
  1640   000445                     NCO1INCU        equ	1093	;# 
  1641   000446                     NCO1CON         equ	1094	;# 
  1642   000447                     NCO1CLK         equ	1095	;# 
  1643   000448                     NCO2ACC         equ	1096	;# 
  1644   000448                     NCO2ACCL        equ	1096	;# 
  1645   000449                     NCO2ACCH        equ	1097	;# 
  1646   00044A                     NCO2ACCU        equ	1098	;# 
  1647   00044B                     NCO2INC         equ	1099	;# 
  1648   00044B                     NCO2INCL        equ	1099	;# 
  1649   00044C                     NCO2INCH        equ	1100	;# 
  1650   00044D                     NCO2INCU        equ	1101	;# 
  1651   00044E                     NCO2CON         equ	1102	;# 
  1652   00044F                     NCO2CLK         equ	1103	;# 
  1653   000450                     NCO3ACC         equ	1104	;# 
  1654   000450                     NCO3ACCL        equ	1104	;# 
  1655   000451                     NCO3ACCH        equ	1105	;# 
  1656   000452                     NCO3ACCU        equ	1106	;# 
  1657   000453                     NCO3INC         equ	1107	;# 
  1658   000453                     NCO3INCL        equ	1107	;# 
  1659   000454                     NCO3INCH        equ	1108	;# 
  1660   000455                     NCO3INCU        equ	1109	;# 
  1661   000456                     NCO3CON         equ	1110	;# 
  1662   000457                     NCO3CLK         equ	1111	;# 
  1663   000459                     IVTLOCK         equ	1113	;# 
  1664   00045A                     IVTAD           equ	1114	;# 
  1665   00045A                     IVTADL          equ	1114	;# 
  1666   00045B                     IVTADH          equ	1115	;# 
  1667   00045C                     IVTADU          equ	1116	;# 
  1668   00045D                     IVTBASE         equ	1117	;# 
  1669   00045D                     IVTBASEL        equ	1117	;# 
  1670   00045E                     IVTBASEH        equ	1118	;# 
  1671   00045F                     IVTBASEU        equ	1119	;# 
  1672   000460                     PWM1ERS         equ	1120	;# 
  1673   000461                     PWM1CLK         equ	1121	;# 
  1674   000462                     PWM1LDS         equ	1122	;# 
  1675   000463                     PWM1PR          equ	1123	;# 
  1676   000463                     PWM1PRL         equ	1123	;# 
  1677   000464                     PWM1PRH         equ	1124	;# 
  1678   000465                     PWM1CPRE        equ	1125	;# 
  1679   000466                     PWM1PIPOS       equ	1126	;# 
  1680   000467                     PWM1GIR         equ	1127	;# 
  1681   000468                     PWM1GIE         equ	1128	;# 
  1682   000469                     PWM1CON         equ	1129	;# 
  1683   00046A                     PWM1S1CFG       equ	1130	;# 
  1684   00046B                     PWM1S1P1        equ	1131	;# 
  1685   00046B                     PWM1S1P1L       equ	1131	;# 
  1686   00046C                     PWM1S1P1H       equ	1132	;# 
  1687   00046D                     PWM1S1P2        equ	1133	;# 
  1688   00046D                     PWM1S1P2L       equ	1133	;# 
  1689   00046E                     PWM1S1P2H       equ	1134	;# 
  1690   00046F                     PWM2ERS         equ	1135	;# 
  1691   000470                     PWM2CLK         equ	1136	;# 
  1692   000471                     PWM2LDS         equ	1137	;# 
  1693   000472                     PWM2PR          equ	1138	;# 
  1694   000472                     PWM2PRL         equ	1138	;# 
  1695   000473                     PWM2PRH         equ	1139	;# 
  1696   000474                     PWM2CPRE        equ	1140	;# 
  1697   000475                     PWM2PIPOS       equ	1141	;# 
  1698   000476                     PWM2GIR         equ	1142	;# 
  1699   000477                     PWM2GIE         equ	1143	;# 
  1700   000478                     PWM2CON         equ	1144	;# 
  1701   000479                     PWM2S1CFG       equ	1145	;# 
  1702   00047A                     PWM2S1P1        equ	1146	;# 
  1703   00047A                     PWM2S1P1L       equ	1146	;# 
  1704   00047B                     PWM2S1P1H       equ	1147	;# 
  1705   00047C                     PWM2S1P2        equ	1148	;# 
  1706   00047C                     PWM2S1P2L       equ	1148	;# 
  1707   00047D                     PWM2S1P2H       equ	1149	;# 
  1708   00047E                     PWM3ERS         equ	1150	;# 
  1709   00047F                     PWM3CLK         equ	1151	;# 
  1710   000480                     PWM3LDS         equ	1152	;# 
  1711   000481                     PWM3PR          equ	1153	;# 
  1712   000481                     PWM3PRL         equ	1153	;# 
  1713   000482                     PWM3PRH         equ	1154	;# 
  1714   000483                     PWM3CPRE        equ	1155	;# 
  1715   000484                     PWM3PIPOS       equ	1156	;# 
  1716   000485                     PWM3GIR         equ	1157	;# 
  1717   000486                     PWM3GIE         equ	1158	;# 
  1718   000487                     PWM3CON         equ	1159	;# 
  1719   000488                     PWM3S1CFG       equ	1160	;# 
  1720   000489                     PWM3S1P1        equ	1161	;# 
  1721   000489                     PWM3S1P1L       equ	1161	;# 
  1722   00048A                     PWM3S1P1H       equ	1162	;# 
  1723   00048B                     PWM3S1P2        equ	1163	;# 
  1724   00048B                     PWM3S1P2L       equ	1163	;# 
  1725   00048C                     PWM3S1P2H       equ	1164	;# 
  1726   00049C                     PWMLOAD         equ	1180	;# 
  1727   00049D                     PWMEN           equ	1181	;# 
  1728   00049E                     PIE0            equ	1182	;# 
  1729   00049F                     PIE1            equ	1183	;# 
  1730   0004A0                     PIE2            equ	1184	;# 
  1731   0004A1                     PIE3            equ	1185	;# 
  1732   0004A2                     PIE4            equ	1186	;# 
  1733   0004A3                     PIE5            equ	1187	;# 
  1734   0004A4                     PIE6            equ	1188	;# 
  1735   0004A5                     PIE7            equ	1189	;# 
  1736   0004A6                     PIE8            equ	1190	;# 
  1737   0004A7                     PIE9            equ	1191	;# 
  1738   0004A8                     PIE10           equ	1192	;# 
  1739   0004A9                     PIE11           equ	1193	;# 
  1740   0004AA                     PIE12           equ	1194	;# 
  1741   0004AB                     PIE13           equ	1195	;# 
  1742   0004AC                     PIE14           equ	1196	;# 
  1743   0004AD                     PIE15           equ	1197	;# 
  1744   0004AE                     PIR0            equ	1198	;# 
  1745   0004AF                     PIR1            equ	1199	;# 
  1746   0004B0                     PIR2            equ	1200	;# 
  1747   0004B1                     PIR3            equ	1201	;# 
  1748   0004B2                     PIR4            equ	1202	;# 
  1749   0004B3                     PIR5            equ	1203	;# 
  1750   0004B4                     PIR6            equ	1204	;# 
  1751   0004B5                     PIR7            equ	1205	;# 
  1752   0004B6                     PIR8            equ	1206	;# 
  1753   0004B7                     PIR9            equ	1207	;# 
  1754   0004B8                     PIR10           equ	1208	;# 
  1755   0004B9                     PIR11           equ	1209	;# 
  1756   0004BA                     PIR12           equ	1210	;# 
  1757   0004BB                     PIR13           equ	1211	;# 
  1758   0004BC                     PIR14           equ	1212	;# 
  1759   0004BD                     PIR15           equ	1213	;# 
  1760   0004BE                     LATA            equ	1214	;# 
  1761   0004BF                     LATB            equ	1215	;# 
  1762   0004C0                     LATC            equ	1216	;# 
  1763   0004C1                     LATD            equ	1217	;# 
  1764   0004C2                     LATE            equ	1218	;# 
  1765   0004C3                     LATF            equ	1219	;# 
  1766   0004C6                     TRISA           equ	1222	;# 
  1767   0004C7                     TRISB           equ	1223	;# 
  1768   0004C8                     TRISC           equ	1224	;# 
  1769   0004C9                     TRISD           equ	1225	;# 
  1770   0004CA                     TRISE           equ	1226	;# 
  1771   0004CB                     TRISF           equ	1227	;# 
  1772   0004CE                     PORTA           equ	1230	;# 
  1773   0004CF                     PORTB           equ	1231	;# 
  1774   0004D0                     PORTC           equ	1232	;# 
  1775   0004D1                     PORTD           equ	1233	;# 
  1776   0004D2                     PORTE           equ	1234	;# 
  1777   0004D3                     PORTF           equ	1235	;# 
  1778   0004D6                     INTCON0         equ	1238	;# 
  1779   0004D7                     INTCON1         equ	1239	;# 
  1780   0004D8                     STATUS          equ	1240	;# 
  1781   0004D9                     FSR2            equ	1241	;# 
  1782   0004D9                     FSR2L           equ	1241	;# 
  1783   0004DA                     FSR2H           equ	1242	;# 
  1784   0004DB                     PLUSW2          equ	1243	;# 
  1785   0004DC                     PREINC2         equ	1244	;# 
  1786   0004DD                     POSTDEC2        equ	1245	;# 
  1787   0004DE                     POSTINC2        equ	1246	;# 
  1788   0004DF                     INDF2           equ	1247	;# 
  1789   0004E0                     BSR             equ	1248	;# 
  1790   0004E1                     FSR1            equ	1249	;# 
  1791   0004E1                     FSR1L           equ	1249	;# 
  1792   0004E2                     FSR1H           equ	1250	;# 
  1793   0004E3                     PLUSW1          equ	1251	;# 
  1794   0004E4                     PREINC1         equ	1252	;# 
  1795   0004E5                     POSTDEC1        equ	1253	;# 
  1796   0004E6                     POSTINC1        equ	1254	;# 
  1797   0004E7                     INDF1           equ	1255	;# 
  1798   0004E8                     WREG            equ	1256	;# 
  1799   0004E9                     FSR0            equ	1257	;# 
  1800   0004E9                     FSR0L           equ	1257	;# 
  1801   0004EA                     FSR0H           equ	1258	;# 
  1802   0004EB                     PLUSW0          equ	1259	;# 
  1803   0004EC                     PREINC0         equ	1260	;# 
  1804   0004ED                     POSTDEC0        equ	1261	;# 
  1805   0004EE                     POSTINC0        equ	1262	;# 
  1806   0004EF                     INDF0           equ	1263	;# 
  1807   0004F0                     PCON0           equ	1264	;# 
  1808   0004F1                     PCON1           equ	1265	;# 
  1809   0004F2                     CPUDOZE         equ	1266	;# 
  1810   0004F3                     PROD            equ	1267	;# 
  1811   0004F3                     PRODL           equ	1267	;# 
  1812   0004F4                     PRODH           equ	1268	;# 
  1813   0004F5                     TABLAT          equ	1269	;# 
  1814   0004F6                     TBLPTR          equ	1270	;# 
  1815   0004F6                     TBLPTRL         equ	1270	;# 
  1816   0004F7                     TBLPTRH         equ	1271	;# 
  1817   0004F8                     TBLPTRU         equ	1272	;# 
  1818   0004F9                     PCLAT           equ	1273	;# 
  1819   0004F9                     PCL             equ	1273	;# 
  1820   0004FA                     PCLATH          equ	1274	;# 
  1821   0004FB                     PCLATU          equ	1275	;# 
  1822   0004FC                     STKPTR          equ	1276	;# 
  1823   0004FD                     TOS             equ	1277	;# 
  1824   0004FD                     TOSL            equ	1277	;# 
  1825   0004FE                     TOSH            equ	1278	;# 
  1826   0004FF                     TOSU            equ	1279	;# 
  1827                           
  1828                           	psect	idataCOMRAM
  1829   002D76                     __pidataCOMRAM:
  1830                           	callstack 0
  1831                           
  1832                           ;initializer for _minutos
  1833   002D76  32                 	db	50
  1834                           
  1835                           ;initializer for _horas
  1836   002D77  0B                 	db	11
  1837                           
  1838                           	psect	smallconst
  1839   002600                     __psmallconst:
  1840                           	callstack 0
  1841   002600  00                 	db	0
  1842   002601                     _logo_reloj:
  1843                           	callstack 0
  1844   002601  1B                 	db	27
  1845   002602  1B                 	db	27
  1846   002603  0E                 	db	14
  1847   002604  15                 	db	21
  1848   002605  17                 	db	23
  1849   002606  11                 	db	17
  1850   002607  0E                 	db	14
  1851   002608  11                 	db	17
  1852   002609                     __end_of_logo_reloj:
  1853                           	callstack 0
  1854   0000B3                     _OSCEN          set	179
  1855   0000B1                     _OSCFRQ         set	177
  1856   0000AD                     _OSCCON1        set	173
  1857   00023E                     _INT0PPS        set	574
  1858   000229                     _RF0PPS         set	553
  1859   000346                     _CCP2CONbits    set	838
  1860   0003EB                     _ADRESH         set	1003
  1861   000340                     _CCPR1L         set	832
  1862   000341                     _CCPR1H         set	833
  1863   000342                     _CCP1CON        set	834
  1864   00031E                     _T1CON          set	798
  1865   000321                     _T1CLK          set	801
  1866   000324                     _T2CON          set	804
  1867   000326                     _T2CLKCON       set	806
  1868   000344                     _CCPR2L         set	836
  1869   000345                     _CCPR2H         set	837
  1870   000346                     _CCP2CON        set	838
  1871   000323                     _T2PR           set	803
  1872   0003EC                     _ADPCH          set	1004
  1873   0003F8                     _ADREF          set	1016
  1874   0003F3                     _ADCON0bits     set	1011
  1875   000418                     _ANSELD         set	1048
  1876   000428                     _ANSELFbits     set	1064
  1877   000400                     _ANSELAbits     set	1024
  1878   000409                     _WPUBbits       set	1033
  1879   000408                     _ANSELBbits     set	1032
  1880   0004D6                     _INTCON0bits    set	1238
  1881   0004AF                     _PIR1bits       set	1199
  1882   00049F                     _PIE1bits       set	1183
  1883   0004B1                     _PIR3bits       set	1201
  1884   0004A1                     _PIE3bits       set	1185
  1885   0004CB                     _TRISFbits      set	1227
  1886   0004C6                     _TRISAbits      set	1222
  1887   0004C7                     _TRISBbits      set	1223
  1888   0004C3                     _LATFbits       set	1219
  1889   0004D1                     _PORTD          set	1233
  1890   0004C1                     _LATD           set	1217
  1891   0004C9                     _TRISD          set	1225
  1892   0004C1                     _LATDbits       set	1217
  1893   002609                     STR_1:
  1894   002609  52                 	db	82	;'R'
  1895   00260A  45                 	db	69	;'E'
  1896   00260B  4C                 	db	76	;'L'
  1897   00260C  4F                 	db	79	;'O'
  1898   00260D  4A                 	db	74	;'J'
  1899   00260E  20                 	db	32
  1900   00260F  32                 	db	50	;'2'
  1901   002610  30                 	db	48	;'0'
  1902   002611  32                 	db	50	;'2'
  1903   002612  35                 	db	53	;'5'
  1904   002613  2D                 	db	45
  1905   002614  31                 	db	49	;'1'
  1906   002615  20                 	db	32
  1907   002616  00                 	db	0
  1908   002617                     STR_2:
  1909   002617  55                 	db	85	;'U'
  1910   002618  50                 	db	80	;'P'
  1911   002619  43                 	db	67	;'C'
  1912   00261A  20                 	db	32
  1913   00261B  4D                 	db	77	;'M'
  1914   00261C  49                 	db	73	;'I'
  1915   00261D  43                 	db	67	;'C'
  1916   00261E  52                 	db	82	;'R'
  1917   00261F  4F                 	db	79	;'O'
  1918   002620  42                 	db	66	;'B'
  1919   002621  49                 	db	73	;'I'
  1920   002622  4F                 	db	79	;'O'
  1921   002623  53                 	db	83	;'S'
  1922   002624  00                 	db	0
  1923   002625                     STR_3:
  1924   002625  43                 	db	67	;'C'
  1925   002626  61                 	db	97	;'a'
  1926   002627  6E                 	db	110	;'n'
  1927   002628  61                 	db	97	;'a'
  1928   002629  6C                 	db	108	;'l'
  1929   00262A  20                 	db	32
  1930   00262B  41                 	db	65	;'A'
  1931   00262C  4E                 	db	78	;'N'
  1932   00262D  41                 	db	65	;'A'
  1933   00262E  30                 	db	48	;'0'
  1934   00262F  3A                 	db	58	;':'
  1935   002630  00                 	db	0
  1936   002631  00                 	db	0	; dummy byte at the end
  1937   002600                     __smallconst    set	__psmallconst
  1938   002600                     __mediumconst   set	__psmallconst
  1939   000001                     __activetblptr  equ	1
  1940                           
  1941                           ; #config settings
  1942                           
  1943                           	psect	cinit
  1944   002B5E                     __pcinit:
  1945                           	callstack 0
  1946   002B5E                     start_initialization:
  1947                           	callstack 0
  1948   002B5E                     __initialization:
  1949                           	callstack 0
  1950                           
  1951                           ; Initialize objects allocated to COMRAM (2 bytes)
  1952                           ; load TBLPTR registers with __pidataCOMRAM
  1953   002B5E  0E76               	movlw	low __pidataCOMRAM
  1954   002B60  6EF6               	movwf	tblptrl,c
  1955   002B62  0E2D               	movlw	high __pidataCOMRAM
  1956   002B64  6EF7               	movwf	tblptrh,c
  1957   002B66  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1958   002B68  6EF8               	movwf	tblptru,c
  1959   002B6A  0009               	tblrd		*+	;fetch initializer
  1960   002B6C  C4F5 F513          	movff	tablat,__pdataCOMRAM
  1961   002B70  0009               	tblrd		*+	;fetch initializer
  1962   002B72  C4F5 F514          	movff	tablat,__pdataCOMRAM+1
  1963                           
  1964                           ; Clear objects allocated to COMRAM (3 bytes)
  1965   002B76  6A12               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1966   002B78  6A11               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1967   002B7A  6A10               	clrf	__pbssCOMRAM& (0+255),c
  1968                           
  1969                           ;
  1970                           ; Setup IVTBASE
  1971                           ;
  1972   00045D                     IVTBASEL        equ	1117
  1973   00045E                     IVTBASEH        equ	1118
  1974   00045F                     IVTBASEU        equ	1119
  1975   002B7C  0104               	movlb	4
  1976   002B7E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1977   002B80  6F5D               	movwf	93,b
  1978   002B82  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1979   002B84  6F5E               	movwf	94,b
  1980   002B86  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1981   002B88  6F5F               	movwf	95,b
  1982   002B8A                     end_of_initialization:
  1983                           	callstack 0
  1984   002B8A                     __end_of__initialization:
  1985                           	callstack 0
  1986   002B8A  0E00               	movlw	low (__Lsmallconst shr (0+16))
  1987   002B8C  6EF8               	movwf	tblptru,c
  1988   002B8E  0E26               	movlw	high __Lsmallconst
  1989   002B90  6EF7               	movwf	tblptrh,c
  1990   002B92  0100               	movlb	0
  1991   002B94  EF97  F016         	goto	_main	;jump to C main() function
  1992                           
  1993                           	psect	bssCOMRAM
  1994   000510                     __pbssCOMRAM:
  1995                           	callstack 0
  1996   000510                     _centesimas:
  1997                           	callstack 0
  1998   000510                     	ds	1
  1999   000511                     _segundos:
  2000                           	callstack 0
  2001   000511                     	ds	1
  2002   000512                     _valor_ADC:
  2003                           	callstack 0
  2004   000512                     	ds	1
  2005                           
  2006                           	psect	dataCOMRAM
  2007   000513                     __pdataCOMRAM:
  2008                           	callstack 0
  2009   000513                     _minutos:
  2010                           	callstack 0
  2011   000513                     	ds	1
  2012   000514                     _horas:
  2013                           	callstack 0
  2014   000514                     	ds	1
  2015                           
  2016                           	psect	cstackCOMRAM
  2017   000501                     __pcstackCOMRAM:
  2018                           	callstack 0
  2019   000501                     ??_INT0_ISR:
  2020                           
  2021                           ; 1 bytes @ 0x0
  2022   000501                     	ds	1
  2023   000502                     ?___awmod:
  2024                           	callstack 0
  2025   000502                     ENVIA_NIBBLE@dato:
  2026                           	callstack 0
  2027   000502                     LEER_LCD@aux:
  2028                           	callstack 0
  2029   000502                     ___awmod@dividend:
  2030                           	callstack 0
  2031   000502                     
  2032                           ; 1 bytes @ 0x1
  2033   000502                     	ds	1
  2034   000503                     ENVIA_CHAR@dato:
  2035                           	callstack 0
  2036   000503                     ENVIA_LCD_CMD@dato:
  2037                           	callstack 0
  2038   000503                     
  2039                           ; 1 bytes @ 0x2
  2040   000503                     	ds	1
  2041   000504                     ENVIA_CHAR@aux:
  2042                           	callstack 0
  2043   000504                     ENVIA_LCD_CMD@aux:
  2044                           	callstack 0
  2045   000504                     ___awmod@divisor:
  2046                           	callstack 0
  2047                           
  2048                           ; 2 bytes @ 0x3
  2049   000504                     	ds	1
  2050   000505                     POS_CURSOR@columna:
  2051                           	callstack 0
  2052   000505                     CURSOR_ONOFF@estado:
  2053                           	callstack 0
  2054   000505                     ESCRIBE_MENSAJE@cadena:
  2055                           	callstack 0
  2056   000505                     GENERACARACTER@vector:
  2057                           	callstack 0
  2058   000505                     ??_LCD_CONFIG:
  2059                           
  2060                           ; 1 bytes @ 0x4
  2061   000505                     	ds	1
  2062   000506                     POS_CURSOR@fila:
  2063                           	callstack 0
  2064   000506                     ESCRIBE_MENSAJE@tam:
  2065                           	callstack 0
  2066   000506                     GENERACARACTER@pos:
  2067                           	callstack 0
  2068   000506                     ___awmod@counter:
  2069                           	callstack 0
  2070   000506                     
  2071                           ; 1 bytes @ 0x5
  2072   000506                     	ds	1
  2073   000507                     ___awmod@sign:
  2074                           	callstack 0
  2075   000507                     ??_ESCRIBE_MENSAJE:
  2076   000507                     ??_GENERACARACTER:
  2077                           
  2078                           ; 1 bytes @ 0x6
  2079   000507                     	ds	1
  2080   000508                     ?___awdiv:
  2081                           	callstack 0
  2082   000508                     ESCRIBE_MENSAJE@i:
  2083                           	callstack 0
  2084   000508                     GENERACARACTER@i:
  2085                           	callstack 0
  2086   000508                     ___awdiv@dividend:
  2087                           	callstack 0
  2088                           
  2089                           ; 2 bytes @ 0x7
  2090   000508                     	ds	1
  2091   000509                     ??_lcd_init:
  2092   000509                     ??_splash_screen:
  2093                           
  2094                           ; 1 bytes @ 0x8
  2095   000509                     	ds	1
  2096   00050A                     ___awdiv@divisor:
  2097                           	callstack 0
  2098                           
  2099                           ; 2 bytes @ 0x9
  2100   00050A                     	ds	2
  2101   00050C                     ___awdiv@counter:
  2102                           	callstack 0
  2103   00050C                     
  2104                           ; 1 bytes @ 0xB
  2105   00050C                     	ds	1
  2106   00050D                     ___awdiv@sign:
  2107                           	callstack 0
  2108                           
  2109                           ; 1 bytes @ 0xC
  2110   00050D                     	ds	1
  2111   00050E                     ___awdiv@quotient:
  2112                           	callstack 0
  2113                           
  2114                           ; 2 bytes @ 0xD
  2115   00050E                     	ds	2
  2116   000510                     
  2117                           ; 1 bytes @ 0xF
  2118 ;;
  2119 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2120 ;;
  2121 ;; *************** function _main *****************
  2122 ;; Defined at:
  2123 ;;		line 114 in file "maincode04.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels required when called: 5
  2143 ;; This function calls:
  2144 ;;		_configuro
  2145 ;;		_control_backlight
  2146 ;;		_lcd_init
  2147 ;;		_mostrar_reloj
  2148 ;;		_splash_screen
  2149 ;; This function is called by:
  2150 ;;		Startup code after reset
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text0
  2155   002D2E                     __ptext0:
  2156                           	callstack 0
  2157   002D2E                     _main:
  2158                           	callstack 122
  2159   002D2E                     
  2160                           ;maincode04.c: 115:     configuro();
  2161   002D2E  ECAF  F014         	call	_configuro	;wreg free
  2162   002D32                     
  2163                           ;maincode04.c: 116:     lcd_init();
  2164   002D32  EC06  F016         	call	_lcd_init	;wreg free
  2165   002D36                     
  2166                           ;maincode04.c: 117:     splash_screen();
  2167   002D36  EC88  F015         	call	_splash_screen	;wreg free
  2168   002D3A                     l1442:
  2169                           
  2170                           ;maincode04.c: 119:         control_backlight();
  2171   002D3A  EC96  F013         	call	_control_backlight	;wreg free
  2172   002D3E                     
  2173                           ;maincode04.c: 120:         mostrar_reloj();
  2174   002D3E  EC19  F013         	call	_mostrar_reloj	;wreg free
  2175   002D42  EF9D  F016         	goto	l1442
  2176   002D46  EF81  F000         	goto	start
  2177   002D4A                     __end_of_main:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _splash_screen *****************
  2181 ;; Defined at:
  2182 ;;		line 75 in file "maincode04.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2198 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2199 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2200 ;;Total ram usage:        2 bytes
  2201 ;; Hardware stack levels used: 1
  2202 ;; Hardware stack levels required when called: 4
  2203 ;; This function calls:
  2204 ;;		_BORRAR_LCD
  2205 ;;		_ENVIA_CHAR
  2206 ;;		_ESCRIBE_MENSAJE
  2207 ;;		_POS_CURSOR
  2208 ;; This function is called by:
  2209 ;;		_main
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text1
  2214   002B10                     __ptext1:
  2215                           	callstack 0
  2216   002B10                     _splash_screen:
  2217                           	callstack 122
  2218   002B10                     
  2219                           ;maincode04.c: 76:     POS_CURSOR(1,1);
  2220   002B10  0E01               	movlw	1
  2221   002B12  6E05               	movwf	POS_CURSOR@columna^(0+1280),c
  2222   002B14  0E01               	movlw	1
  2223   002B16  ECE9  F015         	call	_POS_CURSOR
  2224   002B1A                     
  2225                           ;maincode04.c: 77:     ESCRIBE_MENSAJE("RELOJ 2025-1 ",13);
  2226   002B1A  0E09               	movlw	low STR_1
  2227   002B1C  6E05               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2228   002B1E  0E0D               	movlw	13
  2229   002B20  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2230   002B22  EC6A  F016         	call	_ESCRIBE_MENSAJE	;wreg free
  2231   002B26                     
  2232                           ;maincode04.c: 78:     ENVIA_CHAR(0);
  2233   002B26  0E00               	movlw	0
  2234   002B28  EC39  F016         	call	_ENVIA_CHAR
  2235   002B2C                     
  2236                           ;maincode04.c: 79:     POS_CURSOR(2,1);
  2237   002B2C  0E01               	movlw	1
  2238   002B2E  6E05               	movwf	POS_CURSOR@columna^(0+1280),c
  2239   002B30  0E02               	movlw	2
  2240   002B32  ECE9  F015         	call	_POS_CURSOR
  2241   002B36                     
  2242                           ;maincode04.c: 80:     ESCRIBE_MENSAJE("UPC MICROBIOS",13);
  2243   002B36  0E17               	movlw	low STR_2
  2244   002B38  6E05               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2245   002B3A  0E0D               	movlw	13
  2246   002B3C  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2247   002B3E  EC6A  F016         	call	_ESCRIBE_MENSAJE	;wreg free
  2248   002B42                     
  2249                           ;maincode04.c: 81:     _delay((unsigned long)((3000)*(32000000UL/4000.0)));
  2250   002B42  0E7A               	movlw	122
  2251   002B44  6E0A               	movwf	(??_splash_screen+1)^(0+1280),c
  2252   002B46  0EC1               	movlw	193
  2253   002B48  6E09               	movwf	??_splash_screen^(0+1280),c
  2254   002B4A  0E82               	movlw	130
  2255   002B4C                     u477:
  2256   002B4C  2EE8               	decfsz	wreg,f,c
  2257   002B4E  D7FE               	bra	u477
  2258   002B50  2E09               	decfsz	??_splash_screen^(0+1280),f,c
  2259   002B52  D7FC               	bra	u477
  2260   002B54  2E0A               	decfsz	(??_splash_screen+1)^(0+1280),f,c
  2261   002B56  D7FA               	bra	u477
  2262   002B58                     
  2263                           ;maincode04.c: 82:     BORRAR_LCD();
  2264   002B58  ECB7  F016         	call	_BORRAR_LCD	;wreg free
  2265   002B5C  0012               	return		;funcret
  2266   002B5E                     __end_of_splash_screen:
  2267                           	callstack 0
  2268                           
  2269 ;; *************** function _mostrar_reloj *****************
  2270 ;; Defined at:
  2271 ;;		line 98 in file "maincode04.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2289 ;;Total ram usage:        0 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 4
  2292 ;; This function calls:
  2293 ;;		_ENVIA_CHAR
  2294 ;;		_POS_CURSOR
  2295 ;;		___awdiv
  2296 ;;		___awmod
  2297 ;; This function is called by:
  2298 ;;		_main
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text2
  2303   002632                     __ptext2:
  2304                           	callstack 0
  2305   002632                     _mostrar_reloj:
  2306                           	callstack 122
  2307   002632                     
  2308                           ;maincode04.c: 99:     POS_CURSOR(2,0);
  2309   002632  0E00               	movlw	0
  2310   002634  6E05               	movwf	POS_CURSOR@columna^(0+1280),c
  2311   002636  0E02               	movlw	2
  2312   002638  ECE9  F015         	call	_POS_CURSOR
  2313                           
  2314                           ;maincode04.c: 100:     ENVIA_CHAR(0);
  2315   00263C  0E00               	movlw	0
  2316   00263E  EC39  F016         	call	_ENVIA_CHAR
  2317                           
  2318                           ;maincode04.c: 101:     ENVIA_CHAR(' ');
  2319   002642  0E20               	movlw	32
  2320   002644  EC39  F016         	call	_ENVIA_CHAR
  2321                           
  2322                           ;maincode04.c: 102:     ENVIA_CHAR((horas / 10) + 0x30);
  2323   002648  C514  F508         	movff	_horas,___awdiv@dividend
  2324   00264C  6A09               	clrf	(___awdiv@dividend+1)^(0+1280),c
  2325   00264E  0E00               	movlw	0
  2326   002650  6E0B               	movwf	(___awdiv@divisor+1)^(0+1280),c
  2327   002652  0E0A               	movlw	10
  2328   002654  6E0A               	movwf	___awdiv@divisor^(0+1280),c
  2329   002656  ECF7  F013         	call	___awdiv	;wreg free
  2330   00265A  5008               	movf	?___awdiv^(0+1280),w,c
  2331   00265C  0F30               	addlw	48
  2332   00265E  EC39  F016         	call	_ENVIA_CHAR
  2333                           
  2334                           ;maincode04.c: 103:     ENVIA_CHAR((horas % 10) + 0x30);
  2335   002662  C514  F502         	movff	_horas,___awmod@dividend
  2336   002666  6A03               	clrf	(___awmod@dividend+1)^(0+1280),c
  2337   002668  0E00               	movlw	0
  2338   00266A  6E05               	movwf	(___awmod@divisor+1)^(0+1280),c
  2339   00266C  0E0A               	movlw	10
  2340   00266E  6E04               	movwf	___awmod@divisor^(0+1280),c
  2341   002670  EC58  F014         	call	___awmod	;wreg free
  2342   002674  5002               	movf	?___awmod^(0+1280),w,c
  2343   002676  0F30               	addlw	48
  2344   002678  EC39  F016         	call	_ENVIA_CHAR
  2345                           
  2346                           ;maincode04.c: 104:     ENVIA_CHAR(':');
  2347   00267C  0E3A               	movlw	58
  2348   00267E  EC39  F016         	call	_ENVIA_CHAR
  2349                           
  2350                           ;maincode04.c: 105:     ENVIA_CHAR((minutos / 10) + 0x30);
  2351   002682  C513  F508         	movff	_minutos,___awdiv@dividend
  2352   002686  6A09               	clrf	(___awdiv@dividend+1)^(0+1280),c
  2353   002688  0E00               	movlw	0
  2354   00268A  6E0B               	movwf	(___awdiv@divisor+1)^(0+1280),c
  2355   00268C  0E0A               	movlw	10
  2356   00268E  6E0A               	movwf	___awdiv@divisor^(0+1280),c
  2357   002690  ECF7  F013         	call	___awdiv	;wreg free
  2358   002694  5008               	movf	?___awdiv^(0+1280),w,c
  2359   002696  0F30               	addlw	48
  2360   002698  EC39  F016         	call	_ENVIA_CHAR
  2361                           
  2362                           ;maincode04.c: 106:     ENVIA_CHAR((minutos % 10) + 0x30);
  2363   00269C  C513  F502         	movff	_minutos,___awmod@dividend
  2364   0026A0  6A03               	clrf	(___awmod@dividend+1)^(0+1280),c
  2365   0026A2  0E00               	movlw	0
  2366   0026A4  6E05               	movwf	(___awmod@divisor+1)^(0+1280),c
  2367   0026A6  0E0A               	movlw	10
  2368   0026A8  6E04               	movwf	___awmod@divisor^(0+1280),c
  2369   0026AA  EC58  F014         	call	___awmod	;wreg free
  2370   0026AE  5002               	movf	?___awmod^(0+1280),w,c
  2371   0026B0  0F30               	addlw	48
  2372   0026B2  EC39  F016         	call	_ENVIA_CHAR
  2373                           
  2374                           ;maincode04.c: 107:     ENVIA_CHAR(':');
  2375   0026B6  0E3A               	movlw	58
  2376   0026B8  EC39  F016         	call	_ENVIA_CHAR
  2377                           
  2378                           ;maincode04.c: 108:     ENVIA_CHAR((segundos / 10) + 0x30);
  2379   0026BC  C511  F508         	movff	_segundos,___awdiv@dividend
  2380   0026C0  6A09               	clrf	(___awdiv@dividend+1)^(0+1280),c
  2381   0026C2  0E00               	movlw	0
  2382   0026C4  6E0B               	movwf	(___awdiv@divisor+1)^(0+1280),c
  2383   0026C6  0E0A               	movlw	10
  2384   0026C8  6E0A               	movwf	___awdiv@divisor^(0+1280),c
  2385   0026CA  ECF7  F013         	call	___awdiv	;wreg free
  2386   0026CE  5008               	movf	?___awdiv^(0+1280),w,c
  2387   0026D0  0F30               	addlw	48
  2388   0026D2  EC39  F016         	call	_ENVIA_CHAR
  2389                           
  2390                           ;maincode04.c: 109:     ENVIA_CHAR((segundos % 10) + 0x30);
  2391   0026D6  C511  F502         	movff	_segundos,___awmod@dividend
  2392   0026DA  6A03               	clrf	(___awmod@dividend+1)^(0+1280),c
  2393   0026DC  0E00               	movlw	0
  2394   0026DE  6E05               	movwf	(___awmod@divisor+1)^(0+1280),c
  2395   0026E0  0E0A               	movlw	10
  2396   0026E2  6E04               	movwf	___awmod@divisor^(0+1280),c
  2397   0026E4  EC58  F014         	call	___awmod	;wreg free
  2398   0026E8  5002               	movf	?___awmod^(0+1280),w,c
  2399   0026EA  0F30               	addlw	48
  2400   0026EC  EC39  F016         	call	_ENVIA_CHAR
  2401                           
  2402                           ;maincode04.c: 110:     ENVIA_CHAR(':');
  2403   0026F0  0E3A               	movlw	58
  2404   0026F2  EC39  F016         	call	_ENVIA_CHAR
  2405                           
  2406                           ;maincode04.c: 111:     ENVIA_CHAR((centesimas / 10) + 0x30);
  2407   0026F6  C510  F508         	movff	_centesimas,___awdiv@dividend
  2408   0026FA  6A09               	clrf	(___awdiv@dividend+1)^(0+1280),c
  2409   0026FC  0E00               	movlw	0
  2410   0026FE  6E0B               	movwf	(___awdiv@divisor+1)^(0+1280),c
  2411   002700  0E0A               	movlw	10
  2412   002702  6E0A               	movwf	___awdiv@divisor^(0+1280),c
  2413   002704  ECF7  F013         	call	___awdiv	;wreg free
  2414   002708  5008               	movf	?___awdiv^(0+1280),w,c
  2415   00270A  0F30               	addlw	48
  2416   00270C  EC39  F016         	call	_ENVIA_CHAR
  2417                           
  2418                           ;maincode04.c: 112:     ENVIA_CHAR((centesimas % 10) + 0x30);
  2419   002710  C510  F502         	movff	_centesimas,___awmod@dividend
  2420   002714  6A03               	clrf	(___awmod@dividend+1)^(0+1280),c
  2421   002716  0E00               	movlw	0
  2422   002718  6E05               	movwf	(___awmod@divisor+1)^(0+1280),c
  2423   00271A  0E0A               	movlw	10
  2424   00271C  6E04               	movwf	___awmod@divisor^(0+1280),c
  2425   00271E  EC58  F014         	call	___awmod	;wreg free
  2426   002722  5002               	movf	?___awmod^(0+1280),w,c
  2427   002724  0F30               	addlw	48
  2428   002726  EC39  F016         	call	_ENVIA_CHAR
  2429   00272A  0012               	return		;funcret
  2430   00272C                     __end_of_mostrar_reloj:
  2431                           	callstack 0
  2432                           
  2433 ;; *************** function _lcd_init *****************
  2434 ;; Defined at:
  2435 ;;		line 64 in file "maincode04.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;		None
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;		None
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2452 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2453 ;;Total ram usage:        1 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 4
  2456 ;; This function calls:
  2457 ;;		_BORRAR_LCD
  2458 ;;		_CURSOR_HOME
  2459 ;;		_CURSOR_ONOFF
  2460 ;;		_GENERACARACTER
  2461 ;;		_LCD_CONFIG
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text3
  2468   002C0C                     __ptext3:
  2469                           	callstack 0
  2470   002C0C                     _lcd_init:
  2471                           	callstack 122
  2472   002C0C                     
  2473                           ;maincode04.c: 65:     TRISD = 0x00;
  2474   002C0C  6AC9               	clrf	201,c	;volatile
  2475                           
  2476                           ;maincode04.c: 66:     ANSELD = 0x00;
  2477   002C0E  0104               	movlb	4	; () banked
  2478   002C10  6B18               	clrf	24,b	;volatile
  2479   002C12                     
  2480                           ; BSR set to: 4
  2481                           ;maincode04.c: 67:     LCD_CONFIG();
  2482   002C12  EC58  F015         	call	_LCD_CONFIG	;wreg free
  2483   002C16                     
  2484                           ;maincode04.c: 68:     _delay((unsigned long)((19)*(32000000UL/4000.0)));
  2485   002C16  0EC6               	movlw	198
  2486   002C18  6E09               	movwf	??_lcd_init^(0+1280),c
  2487   002C1A  0E66               	movlw	102
  2488   002C1C                     u487:
  2489   002C1C  2EE8               	decfsz	wreg,f,c
  2490   002C1E  D7FE               	bra	u487
  2491   002C20  2E09               	decfsz	??_lcd_init^(0+1280),f,c
  2492   002C22  D7FC               	bra	u487
  2493   002C24                     
  2494                           ;maincode04.c: 69:     BORRAR_LCD();
  2495   002C24  ECB7  F016         	call	_BORRAR_LCD	;wreg free
  2496   002C28                     
  2497                           ;maincode04.c: 70:     CURSOR_HOME();
  2498   002C28  ECB3  F016         	call	_CURSOR_HOME	;wreg free
  2499   002C2C                     
  2500                           ;maincode04.c: 71:     CURSOR_ONOFF(1);
  2501   002C2C  0E01               	movlw	1
  2502   002C2E  EC52  F016         	call	_CURSOR_ONOFF
  2503   002C32                     
  2504                           ;maincode04.c: 72:     GENERACARACTER(logo_reloj,0);
  2505   002C32  0E01               	movlw	low _logo_reloj
  2506   002C34  6E05               	movwf	GENERACARACTER@vector^(0+1280),c
  2507   002C36  0E00               	movlw	0
  2508   002C38  6E06               	movwf	GENERACARACTER@pos^(0+1280),c
  2509   002C3A  ECCC  F015         	call	_GENERACARACTER	;wreg free
  2510   002C3E  0012               	return		;funcret
  2511   002C40                     __end_of_lcd_init:
  2512                           	callstack 0
  2513                           
  2514 ;; *************** function _LCD_CONFIG *****************
  2515 ;; Defined at:
  2516 ;;		line 72 in file "LCD.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2, status,0, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2534 ;;Total ram usage:        1 bytes
  2535 ;; Hardware stack levels used: 1
  2536 ;; Hardware stack levels required when called: 3
  2537 ;; This function calls:
  2538 ;;		_ENVIA_LCD_CMD
  2539 ;;		_ENVIA_NIBBLE
  2540 ;; This function is called by:
  2541 ;;		_lcd_init
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text4
  2546   002AB0                     __ptext4:
  2547                           	callstack 0
  2548   002AB0                     _LCD_CONFIG:
  2549                           	callstack 122
  2550   002AB0                     
  2551                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  2552   002AB0  90C1               	bcf	193,0,c	;volatile
  2553                           
  2554                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  2555   002AB2  92C1               	bcf	193,1,c	;volatile
  2556   002AB4                     
  2557                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  2558   002AB4  0E30               	movlw	48
  2559   002AB6  ECA5  F016         	call	_ENVIA_NIBBLE
  2560   002ABA                     
  2561                           ;LCD.c: 77:         _delay(24000);
  2562   002ABA  0E20               	movlw	32
  2563   002ABC  6E05               	movwf	??_LCD_CONFIG^(0+1280),c
  2564   002ABE  0E2A               	movlw	42
  2565   002AC0                     u497:
  2566   002AC0  2EE8               	decfsz	wreg,f,c
  2567   002AC2  D7FE               	bra	u497
  2568   002AC4  2E05               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2569   002AC6  D7FC               	bra	u497
  2570   002AC8                     
  2571                           ;LCD.c: 78:         _delay(24000);
  2572   002AC8  0E20               	movlw	32
  2573   002ACA  6E05               	movwf	??_LCD_CONFIG^(0+1280),c
  2574   002ACC  0E2A               	movlw	42
  2575   002ACE                     u507:
  2576   002ACE  2EE8               	decfsz	wreg,f,c
  2577   002AD0  D7FE               	bra	u507
  2578   002AD2  2E05               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2579   002AD4  D7FC               	bra	u507
  2580                           
  2581                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  2582   002AD6  0E30               	movlw	48
  2583   002AD8  ECA5  F016         	call	_ENVIA_NIBBLE
  2584   002ADC                     
  2585                           ;LCD.c: 83:  _delay(1200);
  2586   002ADC  0EF0               	movlw	240
  2587   002ADE                     u517:
  2588   002ADE  D000               	nop2	
  2589   002AE0  2EE8               	decfsz	wreg,f,c
  2590   002AE2  D7FD               	bra	u517
  2591   002AE4                     
  2592                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  2593   002AE4  0E30               	movlw	48
  2594   002AE6  ECA5  F016         	call	_ENVIA_NIBBLE
  2595   002AEA                     
  2596                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  2597   002AEA  0E20               	movlw	32
  2598   002AEC  ECA5  F016         	call	_ENVIA_NIBBLE
  2599   002AF0                     
  2600                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  2601   002AF0  0E01               	movlw	1
  2602   002AF2  EC20  F016         	call	_ENVIA_LCD_CMD
  2603   002AF6                     
  2604                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  2605   002AF6  0E28               	movlw	40
  2606   002AF8  EC20  F016         	call	_ENVIA_LCD_CMD
  2607   002AFC                     
  2608                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  2609   002AFC  0E0F               	movlw	15
  2610   002AFE  EC20  F016         	call	_ENVIA_LCD_CMD
  2611   002B02                     
  2612                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  2613   002B02  0E06               	movlw	6
  2614   002B04  EC20  F016         	call	_ENVIA_LCD_CMD
  2615   002B08                     
  2616                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  2617   002B08  0E01               	movlw	1
  2618   002B0A  EC20  F016         	call	_ENVIA_LCD_CMD
  2619   002B0E  0012               	return		;funcret
  2620   002B10                     __end_of_LCD_CONFIG:
  2621                           	callstack 0
  2622                           
  2623 ;; *************** function _GENERACARACTER *****************
  2624 ;; Defined at:
  2625 ;;		line 153 in file "LCD.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  vector          1    4[COMRAM] PTR const unsigned char 
  2628 ;;		 -> logo_reloj(8), 
  2629 ;;  pos             1    5[COMRAM] unsigned char 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  i               1    7[COMRAM] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2643 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2644 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2645 ;;Total ram usage:        4 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 3
  2648 ;; This function calls:
  2649 ;;		_ENVIA_CHAR
  2650 ;;		_ENVIA_LCD_CMD
  2651 ;; This function is called by:
  2652 ;;		_lcd_init
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text5
  2657   002B98                     __ptext5:
  2658                           	callstack 0
  2659   002B98                     _GENERACARACTER:
  2660                           	callstack 122
  2661   002B98                     
  2662                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
  2663   002B98  5006               	movf	GENERACARACTER@pos^(0+1280),w,c
  2664   002B9A  0D08               	mullw	8
  2665   002B9C  50F3               	movf	243,w,c
  2666   002B9E  0F40               	addlw	64
  2667   002BA0  EC20  F016         	call	_ENVIA_LCD_CMD
  2668   002BA4                     
  2669                           ;LCD.c: 157:  for(i=0;i<8;i++)
  2670   002BA4  6A08               	clrf	GENERACARACTER@i^(0+1280),c
  2671   002BA6                     l1302:
  2672                           
  2673                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
  2674   002BA6  5005               	movf	GENERACARACTER@vector^(0+1280),w,c
  2675   002BA8  2408               	addwf	GENERACARACTER@i^(0+1280),w,c
  2676   002BAA  6E07               	movwf	??_GENERACARACTER^(0+1280),c
  2677   002BAC  C507  F4F6         	movff	??_GENERACARACTER,tblptrl
  2678   002BB0                     	if	0	;There is only one active tblptr byte
  2679   002BB0                     	endif
  2680   002BB0                     	if	0	;tblptru may be non-zero
  2681   002BB0                     	endif
  2682   002BB0                     	if	0	;tblptru may be non-zero
  2683   002BB0                     	endif
  2684   002BB0  0008               	tblrd		*
  2685   002BB2  50F5               	movf	tablat,w,c
  2686   002BB4  EC39  F016         	call	_ENVIA_CHAR
  2687   002BB8                     
  2688                           ;LCD.c: 160:  }
  2689   002BB8  2A08               	incf	GENERACARACTER@i^(0+1280),f,c
  2690   002BBA  0E07               	movlw	7
  2691   002BBC  6408               	cpfsgt	GENERACARACTER@i^(0+1280),c
  2692   002BBE  EFE3  F015         	goto	u331
  2693   002BC2  EFE5  F015         	goto	u330
  2694   002BC6                     u331:
  2695   002BC6  EFD3  F015         	goto	l1302
  2696   002BCA                     u330:
  2697   002BCA                     
  2698                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  2699   002BCA  0E80               	movlw	128
  2700   002BCC  EC20  F016         	call	_ENVIA_LCD_CMD
  2701   002BD0  0012               	return		;funcret
  2702   002BD2                     __end_of_GENERACARACTER:
  2703                           	callstack 0
  2704                           
  2705 ;; *************** function _CURSOR_ONOFF *****************
  2706 ;; Defined at:
  2707 ;;		line 35 in file "LCD.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  estado          1    wreg     unsigned char 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  estado          1    4[COMRAM] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      void 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2725 ;;Total ram usage:        1 bytes
  2726 ;; Hardware stack levels used: 1
  2727 ;; Hardware stack levels required when called: 3
  2728 ;; This function calls:
  2729 ;;		_ENVIA_LCD_CMD
  2730 ;; This function is called by:
  2731 ;;		_lcd_init
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text6
  2736   002CA4                     __ptext6:
  2737                           	callstack 0
  2738   002CA4                     _CURSOR_ONOFF:
  2739                           	callstack 122
  2740                           
  2741                           ;incstack = 0
  2742                           ;CURSOR_ONOFF@estado stored from wreg
  2743   002CA4  6E05               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  2744   002CA6                     
  2745                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  2746   002CA6  5005               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  2747   002CA8  A4D8               	btfss	status,2,c
  2748   002CAA  EF59  F016         	goto	u41
  2749   002CAE  EF5B  F016         	goto	u40
  2750   002CB2                     u41:
  2751   002CB2  EF5E  F016         	goto	l1004
  2752   002CB6                     u40:
  2753   002CB6  0E0E               	movlw	14
  2754   002CB8  EC20  F016         	call	_ENVIA_LCD_CMD
  2755   002CBC                     l1004:
  2756                           
  2757                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2758   002CBC  0405               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  2759   002CBE  A4D8               	btfss	status,2,c
  2760   002CC0  EF64  F016         	goto	u51
  2761   002CC4  EF66  F016         	goto	u50
  2762   002CC8                     u51:
  2763   002CC8  EF69  F016         	goto	l42
  2764   002CCC                     u50:
  2765   002CCC  0E0C               	movlw	12
  2766   002CCE  EC20  F016         	call	_ENVIA_LCD_CMD
  2767   002CD2                     l42:
  2768   002CD2  0012               	return		;funcret
  2769   002CD4                     __end_of_CURSOR_ONOFF:
  2770                           	callstack 0
  2771                           
  2772 ;; *************** function _CURSOR_HOME *****************
  2773 ;; Defined at:
  2774 ;;		line 30 in file "LCD.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used: 1
  2794 ;; Hardware stack levels required when called: 3
  2795 ;; This function calls:
  2796 ;;		_ENVIA_LCD_CMD
  2797 ;; This function is called by:
  2798 ;;		_lcd_init
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text7
  2803   002D66                     __ptext7:
  2804                           	callstack 0
  2805   002D66                     _CURSOR_HOME:
  2806                           	callstack 122
  2807   002D66                     
  2808                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  2809   002D66  0E02               	movlw	2
  2810   002D68  EC20  F016         	call	_ENVIA_LCD_CMD
  2811   002D6C  0012               	return		;funcret
  2812   002D6E                     __end_of_CURSOR_HOME:
  2813                           	callstack 0
  2814                           
  2815 ;; *************** function _BORRAR_LCD *****************
  2816 ;; Defined at:
  2817 ;;		line 67 in file "LCD.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;		None
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;		None
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2835 ;;Total ram usage:        0 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 3
  2838 ;; This function calls:
  2839 ;;		_ENVIA_LCD_CMD
  2840 ;; This function is called by:
  2841 ;;		_lcd_init
  2842 ;;		_splash_screen
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text8
  2847   002D6E                     __ptext8:
  2848                           	callstack 0
  2849   002D6E                     _BORRAR_LCD:
  2850                           	callstack 122
  2851   002D6E                     
  2852                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  2853   002D6E  0E01               	movlw	1
  2854   002D70  EC20  F016         	call	_ENVIA_LCD_CMD
  2855   002D74  0012               	return		;funcret
  2856   002D76                     __end_of_BORRAR_LCD:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function _control_backlight *****************
  2860 ;; Defined at:
  2861 ;;		line 85 in file "maincode04.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 4
  2882 ;; This function calls:
  2883 ;;		_ENVIA_CHAR
  2884 ;;		_ESCRIBE_MENSAJE
  2885 ;;		_POS_CURSOR
  2886 ;;		___awdiv
  2887 ;;		___awmod
  2888 ;; This function is called by:
  2889 ;;		_main
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text9
  2894   00272C                     __ptext9:
  2895                           	callstack 0
  2896   00272C                     _control_backlight:
  2897                           	callstack 122
  2898   00272C                     
  2899                           ;maincode04.c: 86:     ADCON0bits.GO_nDONE = 1;
  2900   00272C  0103               	movlb	3	; () banked
  2901   00272E  81F3               	bsf	243,0,b	;volatile
  2902   002730                     l188:
  2903                           
  2904                           ; BSR set to: 3
  2905   002730  B1F3               	btfsc	243,0,b	;volatile
  2906   002732  EF9D  F013         	goto	u461
  2907   002736  EF9F  F013         	goto	u460
  2908   00273A                     u461:
  2909   00273A  EF98  F013         	goto	l188
  2910   00273E                     u460:
  2911   00273E                     
  2912                           ; BSR set to: 3
  2913                           ;maincode04.c: 88:     valor_ADC = ADRESH;
  2914   00273E  C3EB F512          	movff	1003,_valor_ADC	;volatile
  2915   002742                     
  2916                           ; BSR set to: 3
  2917                           ;maincode04.c: 89:     POS_CURSOR(1,0);
  2918   002742  0E00               	movlw	0
  2919   002744  6E05               	movwf	POS_CURSOR@columna^(0+1280),c
  2920   002746  0E01               	movlw	1
  2921   002748  ECE9  F015         	call	_POS_CURSOR
  2922   00274C                     
  2923                           ;maincode04.c: 90:     ESCRIBE_MENSAJE("Canal ANA0:", 11);
  2924   00274C  0E25               	movlw	low STR_3
  2925   00274E  6E05               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2926   002750  0E0B               	movlw	11
  2927   002752  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2928   002754  EC6A  F016         	call	_ESCRIBE_MENSAJE	;wreg free
  2929   002758                     
  2930                           ;maincode04.c: 91:     ENVIA_CHAR((valor_ADC / 1000) + 0x30);
  2931   002758  C512  F508         	movff	_valor_ADC,___awdiv@dividend
  2932   00275C  6A09               	clrf	(___awdiv@dividend+1)^(0+1280),c
  2933   00275E  0E03               	movlw	3
  2934   002760  6E0B               	movwf	(___awdiv@divisor+1)^(0+1280),c
  2935   002762  0EE8               	movlw	232
  2936   002764  6E0A               	movwf	___awdiv@divisor^(0+1280),c
  2937   002766  ECF7  F013         	call	___awdiv	;wreg free
  2938   00276A  5008               	movf	?___awdiv^(0+1280),w,c
  2939   00276C  0F30               	addlw	48
  2940   00276E  EC39  F016         	call	_ENVIA_CHAR
  2941   002772                     
  2942                           ;maincode04.c: 92:     ENVIA_CHAR(((valor_ADC % 1000) / 100) + 0x30);
  2943   002772  0E03               	movlw	3
  2944   002774  6E05               	movwf	(___awmod@divisor+1)^(0+1280),c
  2945   002776  0EE8               	movlw	232
  2946   002778  6E04               	movwf	___awmod@divisor^(0+1280),c
  2947   00277A  C512  F502         	movff	_valor_ADC,___awmod@dividend
  2948   00277E  6A03               	clrf	(___awmod@dividend+1)^(0+1280),c
  2949   002780  EC58  F014         	call	___awmod	;wreg free
  2950   002784  C502  F508         	movff	?___awmod,___awdiv@dividend
  2951   002788  C503  F509         	movff	?___awmod+1,___awdiv@dividend+1
  2952   00278C  0E00               	movlw	0
  2953   00278E  6E0B               	movwf	(___awdiv@divisor+1)^(0+1280),c
  2954   002790  0E64               	movlw	100
  2955   002792  6E0A               	movwf	___awdiv@divisor^(0+1280),c
  2956   002794  ECF7  F013         	call	___awdiv	;wreg free
  2957   002798  5008               	movf	?___awdiv^(0+1280),w,c
  2958   00279A  0F30               	addlw	48
  2959   00279C  EC39  F016         	call	_ENVIA_CHAR
  2960   0027A0                     
  2961                           ;maincode04.c: 93:     ENVIA_CHAR(((valor_ADC % 100) / 10) + 0x30);
  2962   0027A0  0E00               	movlw	0
  2963   0027A2  6E05               	movwf	(___awmod@divisor+1)^(0+1280),c
  2964   0027A4  0E64               	movlw	100
  2965   0027A6  6E04               	movwf	___awmod@divisor^(0+1280),c
  2966   0027A8  C512  F502         	movff	_valor_ADC,___awmod@dividend
  2967   0027AC  6A03               	clrf	(___awmod@dividend+1)^(0+1280),c
  2968   0027AE  EC58  F014         	call	___awmod	;wreg free
  2969   0027B2  C502  F508         	movff	?___awmod,___awdiv@dividend
  2970   0027B6  C503  F509         	movff	?___awmod+1,___awdiv@dividend+1
  2971   0027BA  0E00               	movlw	0
  2972   0027BC  6E0B               	movwf	(___awdiv@divisor+1)^(0+1280),c
  2973   0027BE  0E0A               	movlw	10
  2974   0027C0  6E0A               	movwf	___awdiv@divisor^(0+1280),c
  2975   0027C2  ECF7  F013         	call	___awdiv	;wreg free
  2976   0027C6  5008               	movf	?___awdiv^(0+1280),w,c
  2977   0027C8  0F30               	addlw	48
  2978   0027CA  EC39  F016         	call	_ENVIA_CHAR
  2979   0027CE                     
  2980                           ;maincode04.c: 94:     ENVIA_CHAR((valor_ADC % 10) + 0x30);
  2981   0027CE  C512  F502         	movff	_valor_ADC,___awmod@dividend
  2982   0027D2  6A03               	clrf	(___awmod@dividend+1)^(0+1280),c
  2983   0027D4  0E00               	movlw	0
  2984   0027D6  6E05               	movwf	(___awmod@divisor+1)^(0+1280),c
  2985   0027D8  0E0A               	movlw	10
  2986   0027DA  6E04               	movwf	___awmod@divisor^(0+1280),c
  2987   0027DC  EC58  F014         	call	___awmod	;wreg free
  2988   0027E0  5002               	movf	?___awmod^(0+1280),w,c
  2989   0027E2  0F30               	addlw	48
  2990   0027E4  EC39  F016         	call	_ENVIA_CHAR
  2991   0027E8                     
  2992                           ;maincode04.c: 95:     CCPR2H = ADRESH;
  2993   0027E8  C3EB F345          	movff	1003,837	;volatile
  2994   0027EC  0012               	return		;funcret
  2995   0027EE                     __end_of_control_backlight:
  2996                           	callstack 0
  2997                           
  2998 ;; *************** function ___awmod *****************
  2999 ;; Defined at:
  3000 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  dividend        2    1[COMRAM] int 
  3003 ;;  divisor         2    3[COMRAM] int 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  sign            1    6[COMRAM] unsigned char 
  3006 ;;  counter         1    5[COMRAM] unsigned char 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  2    1[COMRAM] int 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3019 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3020 ;;Total ram usage:        6 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; Hardware stack levels required when called: 1
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_control_backlight
  3027 ;;		_mostrar_reloj
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text10
  3032   0028B0                     __ptext10:
  3033                           	callstack 0
  3034   0028B0                     ___awmod:
  3035                           	callstack 124
  3036   0028B0  6A07               	clrf	___awmod@sign^(0+1280),c
  3037   0028B2  BE03               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
  3038   0028B4  EF60  F014         	goto	u400
  3039   0028B8  EF5E  F014         	goto	u401
  3040   0028BC                     u401:
  3041   0028BC  EF66  F014         	goto	l1362
  3042   0028C0                     u400:
  3043   0028C0  6C02               	negf	___awmod@dividend^(0+1280),c
  3044   0028C2  1E03               	comf	(___awmod@dividend+1)^(0+1280),f,c
  3045   0028C4  B0D8               	btfsc	status,0,c
  3046   0028C6  2A03               	incf	(___awmod@dividend+1)^(0+1280),f,c
  3047   0028C8  0E01               	movlw	1
  3048   0028CA  6E07               	movwf	___awmod@sign^(0+1280),c
  3049   0028CC                     l1362:
  3050   0028CC  BE05               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
  3051   0028CE  EF6D  F014         	goto	u410
  3052   0028D2  EF6B  F014         	goto	u411
  3053   0028D6                     u411:
  3054   0028D6  EF71  F014         	goto	l1366
  3055   0028DA                     u410:
  3056   0028DA  6C04               	negf	___awmod@divisor^(0+1280),c
  3057   0028DC  1E05               	comf	(___awmod@divisor+1)^(0+1280),f,c
  3058   0028DE  B0D8               	btfsc	status,0,c
  3059   0028E0  2A05               	incf	(___awmod@divisor+1)^(0+1280),f,c
  3060   0028E2                     l1366:
  3061   0028E2  5004               	movf	___awmod@divisor^(0+1280),w,c
  3062   0028E4  1005               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
  3063   0028E6  B4D8               	btfsc	status,2,c
  3064   0028E8  EF78  F014         	goto	u421
  3065   0028EC  EF7A  F014         	goto	u420
  3066   0028F0                     u421:
  3067   0028F0  EF9E  F014         	goto	l1382
  3068   0028F4                     u420:
  3069   0028F4  0E01               	movlw	1
  3070   0028F6  6E06               	movwf	___awmod@counter^(0+1280),c
  3071   0028F8  EF82  F014         	goto	l1372
  3072   0028FC                     l1370:
  3073   0028FC  90D8               	bcf	status,0,c
  3074   0028FE  3604               	rlcf	___awmod@divisor^(0+1280),f,c
  3075   002900  3605               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
  3076   002902  2A06               	incf	___awmod@counter^(0+1280),f,c
  3077   002904                     l1372:
  3078   002904  AE05               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  3079   002906  EF87  F014         	goto	u431
  3080   00290A  EF89  F014         	goto	u430
  3081   00290E                     u431:
  3082   00290E  EF7E  F014         	goto	l1370
  3083   002912                     u430:
  3084   002912                     l1374:
  3085   002912  5004               	movf	___awmod@divisor^(0+1280),w,c
  3086   002914  5C02               	subwf	___awmod@dividend^(0+1280),w,c
  3087   002916  5005               	movf	(___awmod@divisor+1)^(0+1280),w,c
  3088   002918  5803               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
  3089   00291A  A0D8               	btfss	status,0,c
  3090   00291C  EF92  F014         	goto	u441
  3091   002920  EF94  F014         	goto	u440
  3092   002924                     u441:
  3093   002924  EF98  F014         	goto	l1378
  3094   002928                     u440:
  3095   002928  5004               	movf	___awmod@divisor^(0+1280),w,c
  3096   00292A  5E02               	subwf	___awmod@dividend^(0+1280),f,c
  3097   00292C  5005               	movf	(___awmod@divisor+1)^(0+1280),w,c
  3098   00292E  5A03               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
  3099   002930                     l1378:
  3100   002930  90D8               	bcf	status,0,c
  3101   002932  3205               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
  3102   002934  3204               	rrcf	___awmod@divisor^(0+1280),f,c
  3103   002936  2E06               	decfsz	___awmod@counter^(0+1280),f,c
  3104   002938  EF89  F014         	goto	l1374
  3105   00293C                     l1382:
  3106   00293C  5007               	movf	___awmod@sign^(0+1280),w,c
  3107   00293E  B4D8               	btfsc	status,2,c
  3108   002940  EFA4  F014         	goto	u451
  3109   002944  EFA6  F014         	goto	u450
  3110   002948                     u451:
  3111   002948  EFAA  F014         	goto	l1386
  3112   00294C                     u450:
  3113   00294C  6C02               	negf	___awmod@dividend^(0+1280),c
  3114   00294E  1E03               	comf	(___awmod@dividend+1)^(0+1280),f,c
  3115   002950  B0D8               	btfsc	status,0,c
  3116   002952  2A03               	incf	(___awmod@dividend+1)^(0+1280),f,c
  3117   002954                     l1386:
  3118   002954  C502  F502         	movff	___awmod@dividend,?___awmod
  3119   002958  C503  F503         	movff	___awmod@dividend+1,?___awmod+1
  3120   00295C  0012               	return		;funcret
  3121   00295E                     __end_of___awmod:
  3122                           	callstack 0
  3123                           
  3124 ;; *************** function ___awdiv *****************
  3125 ;; Defined at:
  3126 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  dividend        2    7[COMRAM] int 
  3129 ;;  divisor         2    9[COMRAM] int 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  quotient        2   13[COMRAM] int 
  3132 ;;  sign            1   12[COMRAM] unsigned char 
  3133 ;;  counter         1   11[COMRAM] unsigned char 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  2    7[COMRAM] int 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3143 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3144 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3146 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3147 ;;Total ram usage:        8 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; Hardware stack levels required when called: 1
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_control_backlight
  3154 ;;		_mostrar_reloj
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text11
  3159   0027EE                     __ptext11:
  3160                           	callstack 0
  3161   0027EE                     ___awdiv:
  3162                           	callstack 124
  3163   0027EE  6A0D               	clrf	___awdiv@sign^(0+1280),c
  3164   0027F0  BE0B               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
  3165   0027F2  EFFF  F013         	goto	u340
  3166   0027F6  EFFD  F013         	goto	u341
  3167   0027FA                     u341:
  3168   0027FA  EF05  F014         	goto	l1318
  3169   0027FE                     u340:
  3170   0027FE  6C0A               	negf	___awdiv@divisor^(0+1280),c
  3171   002800  1E0B               	comf	(___awdiv@divisor+1)^(0+1280),f,c
  3172   002802  B0D8               	btfsc	status,0,c
  3173   002804  2A0B               	incf	(___awdiv@divisor+1)^(0+1280),f,c
  3174   002806  0E01               	movlw	1
  3175   002808  6E0D               	movwf	___awdiv@sign^(0+1280),c
  3176   00280A                     l1318:
  3177   00280A  BE09               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
  3178   00280C  EF0C  F014         	goto	u350
  3179   002810  EF0A  F014         	goto	u351
  3180   002814                     u351:
  3181   002814  EF12  F014         	goto	l1324
  3182   002818                     u350:
  3183   002818  6C08               	negf	___awdiv@dividend^(0+1280),c
  3184   00281A  1E09               	comf	(___awdiv@dividend+1)^(0+1280),f,c
  3185   00281C  B0D8               	btfsc	status,0,c
  3186   00281E  2A09               	incf	(___awdiv@dividend+1)^(0+1280),f,c
  3187   002820  0E01               	movlw	1
  3188   002822  1A0D               	xorwf	___awdiv@sign^(0+1280),f,c
  3189   002824                     l1324:
  3190   002824  0E00               	movlw	0
  3191   002826  6E0F               	movwf	(___awdiv@quotient+1)^(0+1280),c
  3192   002828  0E00               	movlw	0
  3193   00282A  6E0E               	movwf	___awdiv@quotient^(0+1280),c
  3194   00282C  500A               	movf	___awdiv@divisor^(0+1280),w,c
  3195   00282E  100B               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
  3196   002830  B4D8               	btfsc	status,2,c
  3197   002832  EF1D  F014         	goto	u361
  3198   002836  EF1F  F014         	goto	u360
  3199   00283A                     u361:
  3200   00283A  EF47  F014         	goto	l1346
  3201   00283E                     u360:
  3202   00283E  0E01               	movlw	1
  3203   002840  6E0C               	movwf	___awdiv@counter^(0+1280),c
  3204   002842  EF27  F014         	goto	l1332
  3205   002846                     l1330:
  3206   002846  90D8               	bcf	status,0,c
  3207   002848  360A               	rlcf	___awdiv@divisor^(0+1280),f,c
  3208   00284A  360B               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
  3209   00284C  2A0C               	incf	___awdiv@counter^(0+1280),f,c
  3210   00284E                     l1332:
  3211   00284E  AE0B               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
  3212   002850  EF2C  F014         	goto	u371
  3213   002854  EF2E  F014         	goto	u370
  3214   002858                     u371:
  3215   002858  EF23  F014         	goto	l1330
  3216   00285C                     u370:
  3217   00285C                     l1334:
  3218   00285C  90D8               	bcf	status,0,c
  3219   00285E  360E               	rlcf	___awdiv@quotient^(0+1280),f,c
  3220   002860  360F               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
  3221   002862  500A               	movf	___awdiv@divisor^(0+1280),w,c
  3222   002864  5C08               	subwf	___awdiv@dividend^(0+1280),w,c
  3223   002866  500B               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  3224   002868  5809               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
  3225   00286A  A0D8               	btfss	status,0,c
  3226   00286C  EF3A  F014         	goto	u381
  3227   002870  EF3C  F014         	goto	u380
  3228   002874                     u381:
  3229   002874  EF41  F014         	goto	l1342
  3230   002878                     u380:
  3231   002878  500A               	movf	___awdiv@divisor^(0+1280),w,c
  3232   00287A  5E08               	subwf	___awdiv@dividend^(0+1280),f,c
  3233   00287C  500B               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  3234   00287E  5A09               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
  3235   002880  800E               	bsf	___awdiv@quotient^(0+1280),0,c
  3236   002882                     l1342:
  3237   002882  90D8               	bcf	status,0,c
  3238   002884  320B               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
  3239   002886  320A               	rrcf	___awdiv@divisor^(0+1280),f,c
  3240   002888  2E0C               	decfsz	___awdiv@counter^(0+1280),f,c
  3241   00288A  EF2E  F014         	goto	l1334
  3242   00288E                     l1346:
  3243   00288E  500D               	movf	___awdiv@sign^(0+1280),w,c
  3244   002890  B4D8               	btfsc	status,2,c
  3245   002892  EF4D  F014         	goto	u391
  3246   002896  EF4F  F014         	goto	u390
  3247   00289A                     u391:
  3248   00289A  EF53  F014         	goto	l1350
  3249   00289E                     u390:
  3250   00289E  6C0E               	negf	___awdiv@quotient^(0+1280),c
  3251   0028A0  1E0F               	comf	(___awdiv@quotient+1)^(0+1280),f,c
  3252   0028A2  B0D8               	btfsc	status,0,c
  3253   0028A4  2A0F               	incf	(___awdiv@quotient+1)^(0+1280),f,c
  3254   0028A6                     l1350:
  3255   0028A6  C50E  F508         	movff	___awdiv@quotient,?___awdiv
  3256   0028AA  C50F  F509         	movff	___awdiv@quotient+1,?___awdiv+1
  3257   0028AE  0012               	return		;funcret
  3258   0028B0                     __end_of___awdiv:
  3259                           	callstack 0
  3260                           
  3261 ;; *************** function _POS_CURSOR *****************
  3262 ;; Defined at:
  3263 ;;		line 6 in file "LCD.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  fila            1    wreg     unsigned char 
  3266 ;;  columna         1    4[COMRAM] unsigned char 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  fila            1    5[COMRAM] unsigned char 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3278 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3279 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3281 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3282 ;;Total ram usage:        2 bytes
  3283 ;; Hardware stack levels used: 1
  3284 ;; Hardware stack levels required when called: 3
  3285 ;; This function calls:
  3286 ;;		_ENVIA_LCD_CMD
  3287 ;; This function is called by:
  3288 ;;		_splash_screen
  3289 ;;		_control_backlight
  3290 ;;		_mostrar_reloj
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text12
  3295   002BD2                     __ptext12:
  3296                           	callstack 0
  3297   002BD2                     _POS_CURSOR:
  3298                           	callstack 122
  3299                           
  3300                           ;incstack = 0
  3301                           ;POS_CURSOR@fila stored from wreg
  3302   002BD2  6E06               	movwf	POS_CURSOR@fila^(0+1280),c
  3303   002BD4                     
  3304                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  3305   002BD4  0406               	decf	POS_CURSOR@fila^(0+1280),w,c
  3306   002BD6  A4D8               	btfss	status,2,c
  3307   002BD8  EFF0  F015         	goto	u301
  3308   002BDC  EFF2  F015         	goto	u300
  3309   002BE0                     u301:
  3310   002BE0  EFF8  F015         	goto	l1282
  3311   002BE4                     u300:
  3312   002BE4                     
  3313                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  3314   002BE4  5005               	movf	POS_CURSOR@columna^(0+1280),w,c
  3315   002BE6  0F80               	addlw	128
  3316   002BE8  EC20  F016         	call	_ENVIA_LCD_CMD
  3317                           
  3318                           ;LCD.c: 11:  }
  3319   002BEC  EF05  F016         	goto	l24
  3320   002BF0                     l1282:
  3321   002BF0  0E02               	movlw	2
  3322   002BF2  1806               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  3323   002BF4  A4D8               	btfss	status,2,c
  3324   002BF6  EFFF  F015         	goto	u311
  3325   002BFA  EF01  F016         	goto	u310
  3326   002BFE                     u311:
  3327   002BFE  EF05  F016         	goto	l24
  3328   002C02                     u310:
  3329   002C02                     
  3330                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  3331   002C02  5005               	movf	POS_CURSOR@columna^(0+1280),w,c
  3332   002C04  0FC0               	addlw	192
  3333   002C06  EC20  F016         	call	_ENVIA_LCD_CMD
  3334   002C0A                     l24:
  3335   002C0A  0012               	return		;funcret
  3336   002C0C                     __end_of_POS_CURSOR:
  3337                           	callstack 0
  3338                           
  3339 ;; *************** function _ENVIA_LCD_CMD *****************
  3340 ;; Defined at:
  3341 ;;		line 104 in file "LCD.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  dato            1    wreg     unsigned char 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  dato            1    2[COMRAM] unsigned char 
  3346 ;;  aux             1    3[COMRAM] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      void 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3360 ;;Total ram usage:        2 bytes
  3361 ;; Hardware stack levels used: 1
  3362 ;; Hardware stack levels required when called: 2
  3363 ;; This function calls:
  3364 ;;		_ENVIA_NIBBLE
  3365 ;;		_LEER_LCD
  3366 ;; This function is called by:
  3367 ;;		_POS_CURSOR
  3368 ;;		_CURSOR_HOME
  3369 ;;		_CURSOR_ONOFF
  3370 ;;		_BORRAR_LCD
  3371 ;;		_LCD_CONFIG
  3372 ;;		_GENERACARACTER
  3373 ;;		_BLINK_CURSOR
  3374 ;;		_DISPLAY_ONOFF
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text13
  3379   002C40                     __ptext13:
  3380                           	callstack 0
  3381   002C40                     _ENVIA_LCD_CMD:
  3382                           	callstack 122
  3383                           
  3384                           ;incstack = 0
  3385                           ;ENVIA_LCD_CMD@dato stored from wreg
  3386   002C40  6E03               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  3387   002C42                     
  3388                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  3389   002C42  90C1               	bcf	193,0,c	;volatile
  3390   002C44                     
  3391                           ;LCD.c: 108:  LEER_LCD();
  3392   002C44  ECEB  F014         	call	_LEER_LCD	;wreg free
  3393   002C48                     
  3394                           ;LCD.c: 109:  TRISD = 0b00000000;
  3395   002C48  6AC9               	clrf	201,c	;volatile
  3396   002C4A                     
  3397                           ;LCD.c: 111:         _delay(1200);
  3398   002C4A  0EF0               	movlw	240
  3399   002C4C                     u527:
  3400   002C4C  D000               	nop2	
  3401   002C4E  2EE8               	decfsz	wreg,f,c
  3402   002C50  D7FD               	bra	u527
  3403   002C52                     
  3404                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  3405   002C52  92C1               	bcf	193,1,c	;volatile
  3406   002C54                     
  3407                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  3408   002C54  94C1               	bcf	193,2,c	;volatile
  3409   002C56                     
  3410                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  3411   002C56  90C1               	bcf	193,0,c	;volatile
  3412   002C58                     
  3413                           ;LCD.c: 115:  aux = dato & 0xF0;
  3414   002C58  5003               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  3415   002C5A  0BF0               	andlw	240
  3416   002C5C  6E04               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  3417   002C5E                     
  3418                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  3419   002C5E  5004               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  3420   002C60  ECA5  F016         	call	_ENVIA_NIBBLE
  3421   002C64                     
  3422                           ;LCD.c: 117:  aux = dato<<4;
  3423   002C64  3803               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  3424   002C66  0BF0               	andlw	240
  3425   002C68  6E04               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  3426   002C6A                     
  3427                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  3428   002C6A  5004               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  3429   002C6C  ECA5  F016         	call	_ENVIA_NIBBLE
  3430   002C70  0012               	return		;funcret
  3431   002C72                     __end_of_ENVIA_LCD_CMD:
  3432                           	callstack 0
  3433                           
  3434 ;; *************** function _ESCRIBE_MENSAJE *****************
  3435 ;; Defined at:
  3436 ;;		line 41 in file "LCD.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  cadena          1    4[COMRAM] PTR const unsigned char 
  3439 ;;		 -> STR_3(12), STR_2(14), STR_1(14), 
  3440 ;;  tam             1    5[COMRAM] unsigned char 
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  i               1    7[COMRAM] unsigned char 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3455 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3456 ;;Total ram usage:        4 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; Hardware stack levels required when called: 3
  3459 ;; This function calls:
  3460 ;;		_ENVIA_CHAR
  3461 ;; This function is called by:
  3462 ;;		_splash_screen
  3463 ;;		_control_backlight
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text14
  3468   002CD4                     __ptext14:
  3469                           	callstack 0
  3470   002CD4                     _ESCRIBE_MENSAJE:
  3471                           	callstack 122
  3472   002CD4                     
  3473                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  3474   002CD4  6A08               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  3475                           
  3476                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  3477   002CD6  6A08               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  3478   002CD8  EF78  F016         	goto	l1292
  3479   002CDC                     l1288:
  3480                           
  3481                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  3482   002CDC  5005               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  3483   002CDE  2408               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  3484   002CE0  6E07               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  3485   002CE2  C507  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  3486   002CE6                     	if	0	;There is only one active tblptr byte
  3487   002CE6                     	endif
  3488   002CE6                     	if	0	;tblptru may be non-zero
  3489   002CE6                     	endif
  3490   002CE6                     	if	0	;tblptru may be non-zero
  3491   002CE6                     	endif
  3492   002CE6  0008               	tblrd		*
  3493   002CE8  50F5               	movf	tablat,w,c
  3494   002CEA  EC39  F016         	call	_ENVIA_CHAR
  3495   002CEE                     
  3496                           ;LCD.c: 47:  }
  3497   002CEE  2A08               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  3498   002CF0                     l1292:
  3499   002CF0  5006               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  3500   002CF2  5C08               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  3501   002CF4  A0D8               	btfss	status,0,c
  3502   002CF6  EF7F  F016         	goto	u321
  3503   002CFA  EF81  F016         	goto	u320
  3504   002CFE                     u321:
  3505   002CFE  EF6E  F016         	goto	l1288
  3506   002D02                     u320:
  3507   002D02  0012               	return		;funcret
  3508   002D04                     __end_of_ESCRIBE_MENSAJE:
  3509                           	callstack 0
  3510                           
  3511 ;; *************** function _ENVIA_CHAR *****************
  3512 ;; Defined at:
  3513 ;;		line 50 in file "LCD.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  dato            1    wreg     unsigned char 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  dato            1    2[COMRAM] unsigned char 
  3518 ;;  aux             1    3[COMRAM] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3532 ;;Total ram usage:        2 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; Hardware stack levels required when called: 2
  3535 ;; This function calls:
  3536 ;;		_ENVIA_NIBBLE
  3537 ;;		_LEER_LCD
  3538 ;; This function is called by:
  3539 ;;		_ESCRIBE_MENSAJE
  3540 ;;		_GENERACARACTER
  3541 ;;		_splash_screen
  3542 ;;		_control_backlight
  3543 ;;		_mostrar_reloj
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text15
  3548   002C72                     __ptext15:
  3549                           	callstack 0
  3550   002C72                     _ENVIA_CHAR:
  3551                           	callstack 122
  3552                           
  3553                           ;incstack = 0
  3554                           ;ENVIA_CHAR@dato stored from wreg
  3555   002C72  6E03               	movwf	ENVIA_CHAR@dato^(0+1280),c
  3556   002C74                     
  3557                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  3558   002C74  80C1               	bsf	193,0,c	;volatile
  3559   002C76                     
  3560                           ;LCD.c: 54:  LEER_LCD();
  3561   002C76  ECEB  F014         	call	_LEER_LCD	;wreg free
  3562   002C7A                     
  3563                           ;LCD.c: 55:  TRISD = 0x00;
  3564   002C7A  6AC9               	clrf	201,c	;volatile
  3565   002C7C                     
  3566                           ;LCD.c: 56:         _delay(1200);
  3567   002C7C  0EF0               	movlw	240
  3568   002C7E                     u537:
  3569   002C7E  D000               	nop2	
  3570   002C80  2EE8               	decfsz	wreg,f,c
  3571   002C82  D7FD               	bra	u537
  3572   002C84                     
  3573                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  3574   002C84  92C1               	bcf	193,1,c	;volatile
  3575   002C86                     
  3576                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  3577   002C86  94C1               	bcf	193,2,c	;volatile
  3578   002C88                     
  3579                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  3580   002C88  80C1               	bsf	193,0,c	;volatile
  3581   002C8A                     
  3582                           ;LCD.c: 61:  aux = dato & 0xF0;
  3583   002C8A  5003               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  3584   002C8C  0BF0               	andlw	240
  3585   002C8E  6E04               	movwf	ENVIA_CHAR@aux^(0+1280),c
  3586   002C90                     
  3587                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  3588   002C90  5004               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  3589   002C92  ECA5  F016         	call	_ENVIA_NIBBLE
  3590   002C96                     
  3591                           ;LCD.c: 63:  aux = dato << 4;
  3592   002C96  3803               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  3593   002C98  0BF0               	andlw	240
  3594   002C9A  6E04               	movwf	ENVIA_CHAR@aux^(0+1280),c
  3595   002C9C                     
  3596                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  3597   002C9C  5004               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  3598   002C9E  ECA5  F016         	call	_ENVIA_NIBBLE
  3599   002CA2  0012               	return		;funcret
  3600   002CA4                     __end_of_ENVIA_CHAR:
  3601                           	callstack 0
  3602                           
  3603 ;; *************** function _LEER_LCD *****************
  3604 ;; Defined at:
  3605 ;;		line 121 in file "LCD.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  aux             1    1[COMRAM] unsigned char 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3620 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3622 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3623 ;;Total ram usage:        1 bytes
  3624 ;; Hardware stack levels used: 1
  3625 ;; Hardware stack levels required when called: 1
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_ENVIA_CHAR
  3630 ;;		_ENVIA_LCD_CMD
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text16
  3635   0029D6                     __ptext16:
  3636                           	callstack 0
  3637   0029D6                     _LEER_LCD:
  3638                           	callstack 122
  3639   0029D6                     
  3640                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3641   0029D6  0EF8               	movlw	248
  3642   0029D8  6EC9               	movwf	201,c	;volatile
  3643   0029DA                     
  3644                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  3645   0029DA  90C1               	bcf	193,0,c	;volatile
  3646   0029DC                     
  3647                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  3648   0029DC  82C1               	bsf	193,1,c	;volatile
  3649   0029DE                     
  3650                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  3651   0029DE  84C1               	bsf	193,2,c	;volatile
  3652   0029E0                     
  3653                           ;LCD.c: 128:         _delay(1200);
  3654   0029E0  0EF0               	movlw	240
  3655   0029E2                     u547:
  3656   0029E2  D000               	nop2	
  3657   0029E4  2EE8               	decfsz	wreg,f,c
  3658   0029E6  D7FD               	bra	u547
  3659   0029E8                     
  3660                           ;LCD.c: 130:  aux = PORTD;
  3661   0029E8  C4D1 F502          	movff	1233,LEER_LCD@aux	;volatile
  3662   0029EC                     
  3663                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  3664   0029EC  94C1               	bcf	193,2,c	;volatile
  3665   0029EE                     
  3666                           ;LCD.c: 132:         _delay(1200);
  3667   0029EE  0EF0               	movlw	240
  3668   0029F0                     u557:
  3669   0029F0  D000               	nop2	
  3670   0029F2  2EE8               	decfsz	wreg,f,c
  3671   0029F4  D7FD               	bra	u557
  3672   0029F6                     
  3673                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  3674   0029F6  84C1               	bsf	193,2,c	;volatile
  3675   0029F8                     
  3676                           ;LCD.c: 135:         _delay(1200);
  3677   0029F8  0EF0               	movlw	240
  3678   0029FA                     u567:
  3679   0029FA  D000               	nop2	
  3680   0029FC  2EE8               	decfsz	wreg,f,c
  3681   0029FE  D7FD               	bra	u567
  3682   002A00                     
  3683                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3684   002A00  94C1               	bcf	193,2,c	;volatile
  3685   002A02                     l922:
  3686                           
  3687                           ;LCD.c: 138:  aux = aux & 0x80;
  3688   002A02  5002               	movf	LEER_LCD@aux^(0+1280),w,c
  3689   002A04  0B80               	andlw	128
  3690   002A06  6E02               	movwf	LEER_LCD@aux^(0+1280),c
  3691                           
  3692                           ;LCD.c: 139:  while(aux == 0x80)
  3693   002A08  EF1A  F015         	goto	l936
  3694   002A0C                     l67:
  3695                           
  3696                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3697   002A0C  84C1               	bsf	193,2,c	;volatile
  3698   002A0E                     
  3699                           ;LCD.c: 142:             _delay(1200);
  3700   002A0E  0EF0               	movlw	240
  3701   002A10                     u577:
  3702   002A10  D000               	nop2	
  3703   002A12  2EE8               	decfsz	wreg,f,c
  3704   002A14  D7FD               	bra	u577
  3705   002A16                     
  3706                           ;LCD.c: 143:             aux = PORTD;
  3707   002A16  C4D1 F502          	movff	1233,LEER_LCD@aux	;volatile
  3708   002A1A                     
  3709                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3710   002A1A  94C1               	bcf	193,2,c	;volatile
  3711                           
  3712                           ;LCD.c: 145:             _delay(1200);
  3713   002A1C  0EF0               	movlw	240
  3714   002A1E                     u587:
  3715   002A1E  D000               	nop2	
  3716   002A20  2EE8               	decfsz	wreg,f,c
  3717   002A22  D7FD               	bra	u587
  3718   002A24                     
  3719                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3720   002A24  84C1               	bsf	193,2,c	;volatile
  3721                           
  3722                           ;LCD.c: 147:             _delay(1200);
  3723   002A26  0EF0               	movlw	240
  3724   002A28                     u597:
  3725   002A28  D000               	nop2	
  3726   002A2A  2EE8               	decfsz	wreg,f,c
  3727   002A2C  D7FD               	bra	u597
  3728   002A2E                     
  3729                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  3730   002A2E  94C1               	bcf	193,2,c	;volatile
  3731   002A30  EF01  F015         	goto	l922
  3732   002A34                     l936:
  3733                           
  3734                           ;LCD.c: 139:  while(aux == 0x80)
  3735   002A34  0E80               	movlw	128
  3736   002A36  1802               	xorwf	LEER_LCD@aux^(0+1280),w,c
  3737   002A38  B4D8               	btfsc	status,2,c
  3738   002A3A  EF21  F015         	goto	u11
  3739   002A3E  EF23  F015         	goto	u10
  3740   002A42                     u11:
  3741   002A42  EF06  F015         	goto	l67
  3742   002A46                     u10:
  3743   002A46  0012               	return		;funcret
  3744   002A48                     __end_of_LEER_LCD:
  3745                           	callstack 0
  3746                           
  3747 ;; *************** function _ENVIA_NIBBLE *****************
  3748 ;; Defined at:
  3749 ;;		line 93 in file "LCD.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  dato            1    wreg     unsigned char 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  dato            1    1[COMRAM] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3767 ;;Total ram usage:        1 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; Hardware stack levels required when called: 1
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_ENVIA_CHAR
  3774 ;;		_LCD_CONFIG
  3775 ;;		_ENVIA_LCD_CMD
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text17
  3780   002D4A                     __ptext17:
  3781                           	callstack 0
  3782   002D4A                     _ENVIA_NIBBLE:
  3783                           	callstack 122
  3784                           
  3785                           ;incstack = 0
  3786                           ;ENVIA_NIBBLE@dato stored from wreg
  3787   002D4A  6E02               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  3788   002D4C                     
  3789                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3790   002D4C  0E0F               	movlw	15
  3791   002D4E  16C1               	andwf	193,f,c	;volatile
  3792                           
  3793                           ;LCD.c: 96:  dato &= 0xF0;
  3794   002D50  0EF0               	movlw	240
  3795   002D52  1602               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  3796                           
  3797                           ;LCD.c: 97:  LATD|= dato;
  3798   002D54  5002               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  3799   002D56  12C1               	iorwf	193,f,c	;volatile
  3800   002D58                     
  3801                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3802   002D58  84C1               	bsf	193,2,c	;volatile
  3803   002D5A                     
  3804                           ;LCD.c: 100:         _delay(1200);
  3805   002D5A  0EF0               	movlw	240
  3806   002D5C                     u607:
  3807   002D5C  D000               	nop2	
  3808   002D5E  2EE8               	decfsz	wreg,f,c
  3809   002D60  D7FD               	bra	u607
  3810   002D62                     
  3811                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3812   002D62  94C1               	bcf	193,2,c	;volatile
  3813   002D64  0012               	return		;funcret
  3814   002D66                     __end_of_ENVIA_NIBBLE:
  3815                           	callstack 0
  3816                           
  3817 ;; *************** function _configuro *****************
  3818 ;; Defined at:
  3819 ;;		line 21 in file "maincode04.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg, status,2
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3837 ;;Total ram usage:        0 bytes
  3838 ;; Hardware stack levels used: 1
  3839 ;; Hardware stack levels required when called: 1
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_main
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           	psect	text18
  3848   00295E                     __ptext18:
  3849                           	callstack 0
  3850   00295E                     _configuro:
  3851                           	callstack 125
  3852   00295E                     
  3853                           ;maincode04.c: 22:     OSCCON1 = 0x60;
  3854   00295E  0E60               	movlw	96
  3855   002960  0100               	movlb	0	; () banked
  3856   002962  6FAD               	movwf	173,b	;volatile
  3857                           
  3858                           ;maincode04.c: 23:     OSCFRQ = 0x06;
  3859   002964  0E06               	movlw	6
  3860   002966  6FB1               	movwf	177,b	;volatile
  3861                           
  3862                           ;maincode04.c: 24:     OSCEN = 0x40;
  3863   002968  0E40               	movlw	64
  3864   00296A  6FB3               	movwf	179,b	;volatile
  3865   00296C                     
  3866                           ; BSR set to: 0
  3867                           ;maincode04.c: 26:     LATFbits.LATF0 = 1;
  3868   00296C  80C3               	bsf	195,0,c	;volatile
  3869   00296E                     
  3870                           ; BSR set to: 0
  3871                           ;maincode04.c: 27:     TRISBbits.TRISB0 = 1;
  3872   00296E  80C7               	bsf	199,0,c	;volatile
  3873   002970                     
  3874                           ; BSR set to: 0
  3875                           ;maincode04.c: 28:     ANSELBbits.ANSELB0 = 0;
  3876   002970  0104               	movlb	4	; () banked
  3877   002972  9108               	bcf	8,0,b	;volatile
  3878   002974                     
  3879                           ; BSR set to: 4
  3880                           ;maincode04.c: 29:     WPUBbits.WPUB0 = 1;
  3881   002974  8109               	bsf	9,0,b	;volatile
  3882   002976                     
  3883                           ; BSR set to: 4
  3884                           ;maincode04.c: 31:     TRISAbits.TRISA0 = 1;
  3885   002976  80C6               	bsf	198,0,c	;volatile
  3886   002978                     
  3887                           ; BSR set to: 4
  3888                           ;maincode04.c: 32:     ANSELAbits.ANSELA0 = 1;
  3889   002978  8100               	bsf	0,0,b	;volatile
  3890   00297A                     
  3891                           ; BSR set to: 4
  3892                           ;maincode04.c: 33:     ADCON0bits.CS = 1;
  3893   00297A  0103               	movlb	3	; () banked
  3894   00297C  89F3               	bsf	243,4,b	;volatile
  3895   00297E                     
  3896                           ; BSR set to: 3
  3897                           ;maincode04.c: 34:     ADREF = 0x00;
  3898   00297E  6BF8               	clrf	248,b	;volatile
  3899   002980                     
  3900                           ; BSR set to: 3
  3901                           ;maincode04.c: 35:     ADPCH = 0x00;
  3902   002980  6BEC               	clrf	236,b	;volatile
  3903   002982                     
  3904                           ; BSR set to: 3
  3905                           ;maincode04.c: 36:     ADCON0bits.ADON = 1;
  3906   002982  8FF3               	bsf	243,7,b	;volatile
  3907                           
  3908                           ;maincode04.c: 37:     ADCON0bits.ADFM = 0;
  3909   002984  0EF3               	movlw	-13
  3910   002986  17F3               	andwf	243,f,b	;volatile
  3911                           
  3912                           ;maincode04.c: 39:     RF0PPS = 0x16;
  3913   002988  0E16               	movlw	22
  3914   00298A  0102               	movlb	2	; () banked
  3915   00298C  6F29               	movwf	41,b	;volatile
  3916                           
  3917                           ;maincode04.c: 40:     T2PR = 98;
  3918   00298E  0E62               	movlw	98
  3919   002990  0103               	movlb	3	; () banked
  3920   002992  6F23               	movwf	35,b	;volatile
  3921                           
  3922                           ;maincode04.c: 41:     CCP2CON = 0x9C;
  3923   002994  0E9C               	movlw	156
  3924   002996  6F46               	movwf	70,b	;volatile
  3925                           
  3926                           ;maincode04.c: 42:     CCPR2H = 49;
  3927   002998  0E31               	movlw	49
  3928   00299A  6F45               	movwf	69,b	;volatile
  3929   00299C                     
  3930                           ; BSR set to: 3
  3931                           ;maincode04.c: 43:     CCPR2L = 0;
  3932   00299C  6B44               	clrf	68,b	;volatile
  3933                           
  3934                           ;maincode04.c: 44:     T2CLKCON = 0x01;
  3935   00299E  0E01               	movlw	1
  3936   0029A0  6F26               	movwf	38,b	;volatile
  3937                           
  3938                           ;maincode04.c: 45:     T2CON = 0xC0;
  3939   0029A2  0EC0               	movlw	192
  3940   0029A4  6F24               	movwf	36,b	;volatile
  3941   0029A6                     
  3942                           ; BSR set to: 3
  3943                           ;maincode04.c: 46:     TRISFbits.TRISF0 = 0;
  3944   0029A6  90CB               	bcf	203,0,c	;volatile
  3945   0029A8                     
  3946                           ; BSR set to: 3
  3947                           ;maincode04.c: 47:     ANSELFbits.ANSELF0 = 1;
  3948   0029A8  0104               	movlb	4	; () banked
  3949   0029AA  8128               	bsf	40,0,b	;volatile
  3950                           
  3951                           ;maincode04.c: 49:     T1CLK = 0x01;
  3952   0029AC  0E01               	movlw	1
  3953   0029AE  0103               	movlb	3	; () banked
  3954   0029B0  6F21               	movwf	33,b	;volatile
  3955                           
  3956                           ;maincode04.c: 50:     T1CON = 0x33;
  3957   0029B2  0E33               	movlw	51
  3958   0029B4  6F1E               	movwf	30,b	;volatile
  3959                           
  3960                           ;maincode04.c: 51:     CCP1CON = 0x8B;
  3961   0029B6  0E8B               	movlw	139
  3962   0029B8  6F42               	movwf	66,b	;volatile
  3963                           
  3964                           ;maincode04.c: 52:     CCPR1H = 0x27;
  3965   0029BA  0E27               	movlw	39
  3966   0029BC  6F41               	movwf	65,b	;volatile
  3967                           
  3968                           ;maincode04.c: 53:     CCPR1L = 0x10;
  3969   0029BE  0E10               	movlw	16
  3970   0029C0  6F40               	movwf	64,b	;volatile
  3971   0029C2                     
  3972                           ; BSR set to: 3
  3973                           ;maincode04.c: 54:     PIE3bits.CCP1IE = 1;
  3974   0029C2  8CA1               	bsf	161,6,c	;volatile
  3975   0029C4                     
  3976                           ; BSR set to: 3
  3977                           ;maincode04.c: 55:     PIR3bits.CCP1IF = 0;
  3978   0029C4  9CB1               	bcf	177,6,c	;volatile
  3979                           
  3980                           ;maincode04.c: 57:     INT0PPS = 0x08;
  3981   0029C6  0E08               	movlw	8
  3982   0029C8  0102               	movlb	2	; () banked
  3983   0029CA  6F3E               	movwf	62,b	;volatile
  3984   0029CC                     
  3985                           ; BSR set to: 2
  3986                           ;maincode04.c: 58:     PIE1bits.INT0IE = 1;
  3987   0029CC  809F               	bsf	159,0,c	;volatile
  3988   0029CE                     
  3989                           ; BSR set to: 2
  3990                           ;maincode04.c: 59:     PIR1bits.INT0IF = 0;
  3991   0029CE  90AF               	bcf	175,0,c	;volatile
  3992   0029D0                     
  3993                           ; BSR set to: 2
  3994                           ;maincode04.c: 60:     INTCON0bits.INT0EDG = 0;
  3995   0029D0  90D6               	bcf	214,0,c	;volatile
  3996   0029D2                     
  3997                           ; BSR set to: 2
  3998                           ;maincode04.c: 61:     INTCON0bits.GIE = 1;
  3999   0029D2  8ED6               	bsf	214,7,c	;volatile
  4000   0029D4                     
  4001                           ; BSR set to: 2
  4002   0029D4  0012               	return		;funcret
  4003   0029D6                     __end_of_configuro:
  4004                           	callstack 0
  4005                           
  4006 ;; *************** function _INT0_ISR *****************
  4007 ;; Defined at:
  4008 ;;		line 124 in file "maincode04.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      void 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4025 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4026 ;;Total ram usage:        1 bytes
  4027 ;; Hardware stack levels used: 1
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		Interrupt level 2
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text19
  4036   002D04                     __ptext19:
  4037                           	callstack 0
  4038   002D04                     _INT0_ISR:
  4039                           	callstack 122
  4040   002D04                     
  4041                           ;maincode04.c: 125:     PIR1bits.INT0IF = 0;
  4042   002D04  90AF               	bcf	175,0,c	;volatile
  4043   002D06                     
  4044                           ;maincode04.c: 126:     CCP2CONbits.CCP2EN = ~CCP2CONbits.CCP2EN;
  4045   002D06  0103               	movlb	3	; () banked
  4046   002D08  BF46               	btfsc	70,7,b	;volatile
  4047   002D0A  EF89  F016         	goto	i2u25_41
  4048   002D0E  EF8C  F016         	goto	i2u25_40
  4049   002D12                     i2u25_41:
  4050   002D12  0E01               	movlw	1
  4051   002D14  EF8D  F016         	goto	i2u25_46
  4052   002D18                     i2u25_40:
  4053   002D18  0E00               	movlw	0
  4054   002D1A                     i2u25_46:
  4055   002D1A  0AFF               	xorlw	255
  4056   002D1C  6E01               	movwf	??_INT0_ISR^(0+1280),c
  4057   002D1E  3201               	rrcf	??_INT0_ISR^(0+1280),f,c
  4058   002D20  3201               	rrcf	??_INT0_ISR^(0+1280),f,c
  4059   002D22  5146               	movf	70,w,b	;volatile
  4060   002D24  1801               	xorwf	??_INT0_ISR^(0+1280),w,c
  4061   002D26  0B7F               	andlw	-129
  4062   002D28  1801               	xorwf	??_INT0_ISR^(0+1280),w,c
  4063   002D2A  6F46               	movwf	70,b	;volatile
  4064   002D2C                     
  4065                           ; BSR set to: 3
  4066   002D2C  0011               	retfie		f
  4067   002D2E                     __end_of_INT0_ISR:
  4068                           	callstack 0
  4069                           
  4070 ;; *************** function _CCP1_ISR *****************
  4071 ;; Defined at:
  4072 ;;		line 129 in file "maincode04.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;		None
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg, status,2, status,0
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4090 ;;Total ram usage:        0 bytes
  4091 ;; Hardware stack levels used: 1
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		Interrupt level 2
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text20
  4100   002A48                     __ptext20:
  4101                           	callstack 0
  4102   002A48                     _CCP1_ISR:
  4103                           	callstack 122
  4104   002A48                     
  4105                           ;maincode04.c: 130:     PIR3bits.CCP1IF = 0;
  4106   002A48  9CB1               	bcf	177,6,c	;volatile
  4107   002A4A                     
  4108                           ;maincode04.c: 131:     if(centesimas == 99){
  4109   002A4A  0E63               	movlw	99
  4110   002A4C  1810               	xorwf	_centesimas^(0+1280),w,c
  4111   002A4E  A4D8               	btfss	status,2,c
  4112   002A50  EF2C  F015         	goto	i2u26_41
  4113   002A54  EF2E  F015         	goto	i2u26_40
  4114   002A58                     i2u26_41:
  4115   002A58  EF56  F015         	goto	i2l212
  4116   002A5C                     i2u26_40:
  4117   002A5C                     
  4118                           ;maincode04.c: 132:         centesimas = 0;
  4119   002A5C  6A10               	clrf	_centesimas^(0+1280),c
  4120   002A5E                     
  4121                           ;maincode04.c: 133:         if(segundos == 59){
  4122   002A5E  0E3B               	movlw	59
  4123   002A60  1811               	xorwf	_segundos^(0+1280),w,c
  4124   002A62  A4D8               	btfss	status,2,c
  4125   002A64  EF36  F015         	goto	i2u27_41
  4126   002A68  EF38  F015         	goto	i2u27_40
  4127   002A6C                     i2u27_41:
  4128   002A6C  EF55  F015         	goto	i2l1276
  4129   002A70                     i2u27_40:
  4130   002A70                     
  4131                           ;maincode04.c: 134:             segundos = 0;
  4132   002A70  6A11               	clrf	_segundos^(0+1280),c
  4133   002A72                     
  4134                           ;maincode04.c: 135:             if(minutos == 59){
  4135   002A72  0E3B               	movlw	59
  4136   002A74  1813               	xorwf	_minutos^(0+1280),w,c
  4137   002A76  A4D8               	btfss	status,2,c
  4138   002A78  EF40  F015         	goto	i2u28_41
  4139   002A7C  EF42  F015         	goto	i2u28_40
  4140   002A80                     i2u28_41:
  4141   002A80  EF52  F015         	goto	i2l1274
  4142   002A84                     i2u28_40:
  4143   002A84                     
  4144                           ;maincode04.c: 136:                 minutos = 0;
  4145   002A84  6A13               	clrf	_minutos^(0+1280),c
  4146   002A86                     
  4147                           ;maincode04.c: 137:                 if(horas == 23){
  4148   002A86  0E17               	movlw	23
  4149   002A88  1814               	xorwf	_horas^(0+1280),w,c
  4150   002A8A  A4D8               	btfss	status,2,c
  4151   002A8C  EF4A  F015         	goto	i2u29_41
  4152   002A90  EF4C  F015         	goto	i2u29_40
  4153   002A94                     i2u29_41:
  4154   002A94  EF4F  F015         	goto	i2l1272
  4155   002A98                     i2u29_40:
  4156   002A98                     
  4157                           ;maincode04.c: 138:                     horas = 0;
  4158   002A98  6A14               	clrf	_horas^(0+1280),c
  4159                           
  4160                           ;maincode04.c: 139:                 }
  4161   002A9A  EF56  F015         	goto	i2l212
  4162   002A9E                     i2l1272:
  4163                           
  4164                           ;maincode04.c: 141:                     horas++;
  4165   002A9E  2A14               	incf	_horas^(0+1280),f,c
  4166   002AA0  EF56  F015         	goto	i2l212
  4167   002AA4                     i2l1274:
  4168                           
  4169                           ;maincode04.c: 145:                 minutos++;
  4170   002AA4  2A13               	incf	_minutos^(0+1280),f,c
  4171   002AA6  EF56  F015         	goto	i2l212
  4172   002AAA                     i2l1276:
  4173                           
  4174                           ;maincode04.c: 149:             segundos++;
  4175   002AAA  2A11               	incf	_segundos^(0+1280),f,c
  4176   002AAC                     i2l212:
  4177                           
  4178                           ;maincode04.c: 152:     centesimas++;
  4179   002AAC  2A10               	incf	_centesimas^(0+1280),f,c
  4180   002AAE  0011               	retfie		f
  4181   002AB0                     __end_of_CCP1_ISR:
  4182                           	callstack 0
  4183                           
  4184 ;; *************** function _DEFAULT_ISR *****************
  4185 ;; Defined at:
  4186 ;;		line 155 in file "maincode04.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		None
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4204 ;;Total ram usage:        0 bytes
  4205 ;; Hardware stack levels used: 1
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		Interrupt level 2
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text21
  4214   002D78                     __ptext21:
  4215                           	callstack 0
  4216   002D78                     _DEFAULT_ISR:
  4217                           	callstack 122
  4218   002D78  0011               	retfie		f
  4219   002D7A                     __end_of_DEFAULT_ISR:
  4220                           	callstack 0
  4221                           
  4222                           ;
  4223                           ; H/W Interrupt Vector Table @ 0x8
  4224                           ;
  4225                           
  4226                           	psect	ivt0x8
  4227   000008                     __pivt0x8:
  4228                           	callstack 0
  4229   000008                     ivt0x8_base:
  4230                           	callstack 0
  4231                           
  4232                           ; Vector 0 : SWINT
  4233   000008  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4234                           
  4235                           ; Vector 1 : HLVD
  4236   00000A  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4237                           
  4238                           ; Vector 2 : OSF
  4239   00000C  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4240                           
  4241                           ; Vector 3 : CSW
  4242   00000E  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4243                           
  4244                           ; Vector 4 : Undefined
  4245   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  4246                           
  4247                           ; Vector 5 : CLC1
  4248   000012  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4249                           
  4250                           ; Vector 6 : Undefined
  4251   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  4252                           
  4253                           ; Vector 7 : IOC
  4254   000016  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4255                           
  4256                           ; Vector 8 : INT0
  4257   000018  0B41               	dw	_INT0_ISR shr (0+2)
  4258                           
  4259                           ; Vector 9 : ZCD
  4260   00001A  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4261                           
  4262                           ; Vector 10 : AD
  4263   00001C  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4264                           
  4265                           ; Vector 11 : ACT
  4266   00001E  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4267                           
  4268                           ; Vector 12 : CMP1
  4269   000020  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4270                           
  4271                           ; Vector 13 : SMT1
  4272   000022  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4273                           
  4274                           ; Vector 14 : SMT1PRA
  4275   000024  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4276                           
  4277                           ; Vector 15 : SMT1PRW
  4278   000026  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4279                           
  4280                           ; Vector 16 : ADT
  4281   000028  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4282                           
  4283                           ; Vector 17 : Undefined
  4284   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  4285                           
  4286                           ; Vector 18 : Undefined
  4287   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  4288                           
  4289                           ; Vector 19 : Undefined
  4290   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  4291                           
  4292                           ; Vector 20 : DMA1SCNT
  4293   000030  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4294                           
  4295                           ; Vector 21 : DMA1DCNT
  4296   000032  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4297                           
  4298                           ; Vector 22 : DMA1OR
  4299   000034  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4300                           
  4301                           ; Vector 23 : DMA1A
  4302   000036  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4303                           
  4304                           ; Vector 24 : SPI1RX
  4305   000038  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4306                           
  4307                           ; Vector 25 : SPI1TX
  4308   00003A  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4309                           
  4310                           ; Vector 26 : SPI1
  4311   00003C  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4312                           
  4313                           ; Vector 27 : TMR2
  4314   00003E  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4315                           
  4316                           ; Vector 28 : TMR1
  4317   000040  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4318                           
  4319                           ; Vector 29 : TMR1G
  4320   000042  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4321                           
  4322                           ; Vector 30 : CCP1
  4323   000044  0A92               	dw	_CCP1_ISR shr (0+2)
  4324                           
  4325                           ; Vector 31 : TMR0
  4326   000046  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4327                           
  4328                           ; Vector 32 : U1RX
  4329   000048  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4330                           
  4331                           ; Vector 33 : U1TX
  4332   00004A  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4333                           
  4334                           ; Vector 34 : U1E
  4335   00004C  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4336                           
  4337                           ; Vector 35 : U1
  4338   00004E  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4339                           
  4340                           ; Vector 36 : Undefined
  4341   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  4342                           
  4343                           ; Vector 37 : Undefined
  4344   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  4345                           
  4346                           ; Vector 38 : PWM1PR
  4347   000054  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4348                           
  4349                           ; Vector 39 : PWM1
  4350   000056  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4351                           
  4352                           ; Vector 40 : SPI2RX
  4353   000058  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4354                           
  4355                           ; Vector 41 : SPI2TX
  4356   00005A  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4357                           
  4358                           ; Vector 42 : SPI2
  4359   00005C  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4360                           
  4361                           ; Vector 43 : Undefined
  4362   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  4363                           
  4364                           ; Vector 44 : TMR3
  4365   000060  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4366                           
  4367                           ; Vector 45 : TMR3G
  4368   000062  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4369                           
  4370                           ; Vector 46 : PWM2PR
  4371   000064  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4372                           
  4373                           ; Vector 47 : PWM2
  4374   000066  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4375                           
  4376                           ; Vector 48 : INT1
  4377   000068  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4378                           
  4379                           ; Vector 49 : CLC2
  4380   00006A  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4381                           
  4382                           ; Vector 50 : CWG1
  4383   00006C  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4384                           
  4385                           ; Vector 51 : NCO1
  4386   00006E  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4387                           
  4388                           ; Vector 52 : DMA2SCNT
  4389   000070  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4390                           
  4391                           ; Vector 53 : DMA2DCNT
  4392   000072  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4393                           
  4394                           ; Vector 54 : DMA2OR
  4395   000074  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4396                           
  4397                           ; Vector 55 : DMA2A
  4398   000076  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4399                           
  4400                           ; Vector 56 : I2C1RX
  4401   000078  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4402                           
  4403                           ; Vector 57 : I2C1TX
  4404   00007A  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4405                           
  4406                           ; Vector 58 : I2C1
  4407   00007C  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4408                           
  4409                           ; Vector 59 : I2C1E
  4410   00007E  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4411                           
  4412                           ; Vector 60 : Undefined
  4413   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  4414                           
  4415                           ; Vector 61 : CLC3
  4416   000082  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4417                           
  4418                           ; Vector 62 : PWM3PR
  4419   000084  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4420                           
  4421                           ; Vector 63 : PWM3
  4422   000086  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4423                           
  4424                           ; Vector 64 : U2RX
  4425   000088  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4426                           
  4427                           ; Vector 65 : U2TX
  4428   00008A  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4429                           
  4430                           ; Vector 66 : U2E
  4431   00008C  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4432                           
  4433                           ; Vector 67 : U2
  4434   00008E  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4435                           
  4436                           ; Vector 68 : TMR5
  4437   000090  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4438                           
  4439                           ; Vector 69 : TMR5G
  4440   000092  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4441                           
  4442                           ; Vector 70 : CCP2
  4443   000094  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4444                           
  4445                           ; Vector 71 : SCAN
  4446   000096  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4447                           
  4448                           ; Vector 72 : U3RX
  4449   000098  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4450                           
  4451                           ; Vector 73 : U3TX
  4452   00009A  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4453                           
  4454                           ; Vector 74 : U3E
  4455   00009C  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4456                           
  4457                           ; Vector 75 : U3
  4458   00009E  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4459                           
  4460                           ; Vector 76 : Undefined
  4461   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  4462                           
  4463                           ; Vector 77 : CLC4
  4464   0000A2  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4465                           
  4466                           ; Vector 78 : Undefined
  4467   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  4468                           
  4469                           ; Vector 79 : Undefined
  4470   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  4471                           
  4472                           ; Vector 80 : INT2
  4473   0000A8  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4474                           
  4475                           ; Vector 81 : CLC5
  4476   0000AA  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4477                           
  4478                           ; Vector 82 : CWG2
  4479   0000AC  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4480                           
  4481                           ; Vector 83 : NCO2
  4482   0000AE  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4483                           
  4484                           ; Vector 84 : DMA3SCNT
  4485   0000B0  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4486                           
  4487                           ; Vector 85 : DMA3DCNT
  4488   0000B2  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4489                           
  4490                           ; Vector 86 : DMA3OR
  4491   0000B4  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4492                           
  4493                           ; Vector 87 : DMA3A
  4494   0000B6  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4495                           
  4496                           ; Vector 88 : CCP3
  4497   0000B8  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4498                           
  4499                           ; Vector 89 : CLC6
  4500   0000BA  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4501                           
  4502                           ; Vector 90 : CWG3
  4503   0000BC  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4504                           
  4505                           ; Vector 91 : TMR4
  4506   0000BE  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4507                           
  4508                           ; Vector 92 : DMA4SCNT
  4509   0000C0  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4510                           
  4511                           ; Vector 93 : DMA4DCNT
  4512   0000C2  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4513                           
  4514                           ; Vector 94 : DMA4OR
  4515   0000C4  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4516                           
  4517                           ; Vector 95 : DMA4A
  4518   0000C6  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4519                           
  4520                           ; Vector 96 : U4RX
  4521   0000C8  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4522                           
  4523                           ; Vector 97 : U4TX
  4524   0000CA  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4525                           
  4526                           ; Vector 98 : U4E
  4527   0000CC  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4528                           
  4529                           ; Vector 99 : U4
  4530   0000CE  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4531                           
  4532                           ; Vector 100 : DMA5SCNT
  4533   0000D0  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4534                           
  4535                           ; Vector 101 : DMA5DCNT
  4536   0000D2  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4537                           
  4538                           ; Vector 102 : DMA5OR
  4539   0000D4  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4540                           
  4541                           ; Vector 103 : DMA5A
  4542   0000D6  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4543                           
  4544                           ; Vector 104 : U5RX
  4545   0000D8  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4546                           
  4547                           ; Vector 105 : U5TX
  4548   0000DA  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4549                           
  4550                           ; Vector 106 : U5E
  4551   0000DC  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4552                           
  4553                           ; Vector 107 : U5
  4554   0000DE  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4555                           
  4556                           ; Vector 108 : DMA6SCNT
  4557   0000E0  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4558                           
  4559                           ; Vector 109 : DMA6DCNT
  4560   0000E2  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4561                           
  4562                           ; Vector 110 : DMA6OR
  4563   0000E4  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4564                           
  4565                           ; Vector 111 : DMA6A
  4566   0000E6  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4567                           
  4568                           ; Vector 112 : Undefined
  4569   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  4570                           
  4571                           ; Vector 113 : CLC7
  4572   0000EA  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4573                           
  4574                           ; Vector 114 : CMP2
  4575   0000EC  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4576                           
  4577                           ; Vector 115 : NCO3
  4578   0000EE  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4579                           
  4580                           ; Vector 116 : Undefined
  4581   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  4582                           
  4583                           ; Vector 117 : Undefined
  4584   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  4585                           
  4586                           ; Vector 118 : Undefined
  4587   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  4588                           
  4589                           ; Vector 119 : Undefined
  4590   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  4591                           
  4592                           ; Vector 120 : NVM
  4593   0000F8  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4594                           
  4595                           ; Vector 121 : CLC8
  4596   0000FA  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4597                           
  4598                           ; Vector 122 : CRC
  4599   0000FC  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4600                           
  4601                           ; Vector 123 : TMR6
  4602   0000FE  0B5E               	dw	_DEFAULT_ISR shr (0+2)
  4603   000100                     ivt0x8_undefint:
  4604                           	callstack 0
  4605   000100  00FF               	reset	
  4606                           
  4607                           	psect	rparam
  4608   000001                     ___rparam_used  equ	1
  4609   000000                     ___param_bank   equ	0
  4610   000000                     __Lparam        equ	__Lrparam
  4611   000000                     __Hparam        equ	__Hrparam
  4612                           
  4613                           	psect	config
  4614                           
  4615                           ;Config register CONFIG1 @ 0x300000
  4616                           ;	External Oscillator Selection
  4617                           ;	FEXTOSC = OFF, Oscillator not enabled
  4618                           ;	Reset Oscillator Selection
  4619                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  4620   300000                     	org	3145728
  4621   300000  FC                 	db	252
  4622                           
  4623                           ;Config register CONFIG2 @ 0x300001
  4624                           ;	Clock out Enable bit
  4625                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4626                           ;	PRLOCKED One-Way Set Enable bit
  4627                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  4628                           ;	Clock Switch Enable bit
  4629                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4630                           ;	Fail-Safe Clock Monitor Enable bit
  4631                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4632   300001                     	org	3145729
  4633   300001  FF                 	db	255
  4634                           
  4635                           ;Config register CONFIG3 @ 0x300002
  4636                           ;	MCLR Enable bit
  4637                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4638                           ;	Power-up timer selection bits
  4639                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  4640                           ;	Multi-vector enable bit
  4641                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  4642                           ;	IVTLOCK bit One-way set enable bit
  4643                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  4644                           ;	Low Power BOR Enable bit
  4645                           ;	LPBOREN = OFF, Low-Power BOR disabled
  4646                           ;	Brown-out Reset Enable bits
  4647                           ;	BOREN = OFF, Brown-out Reset disabled
  4648   300002                     	org	3145730
  4649   300002  3D                 	db	61
  4650                           
  4651                           ;Config register CONFIG4 @ 0x300003
  4652                           ;	Brown-out Reset Voltage Selection bits
  4653                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  4654                           ;	ZCD Disable bit
  4655                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  4656                           ;	PPSLOCK bit One-Way Set Enable bit
  4657                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  4658                           ;	Stack Full/Underflow Reset Enable bit
  4659                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4660                           ;	Low Voltage Programming Enable bit
  4661                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  4662                           ;	Extended Instruction Set Enable bit
  4663                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4664   300003                     	org	3145731
  4665   300003  DF                 	db	223
  4666                           
  4667                           ;Config register CONFIG5 @ 0x300004
  4668                           ;	WDT Period selection bits
  4669                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4670                           ;	WDT operating mode
  4671                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4672   300004                     	org	3145732
  4673   300004  9F                 	db	159
  4674                           
  4675                           ;Config register CONFIG6 @ 0x300005
  4676                           ;	WDT Window Select bits
  4677                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4678                           ;	WDT input clock selector
  4679                           ;	WDTCCS = SC, Software Control
  4680   300005                     	org	3145733
  4681   300005  FF                 	db	255
  4682                           
  4683                           ;Config register CONFIG7 @ 0x300006
  4684                           ;	Boot Block Size selection bits
  4685                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4686                           ;	Boot Block enable bit
  4687                           ;	BBEN = OFF, Boot block disabled
  4688                           ;	Storage Area Flash enable bit
  4689                           ;	SAFEN = OFF, SAF disabled
  4690                           ;	Background Debugger
  4691                           ;	DEBUG = OFF, Background Debugger disabled
  4692   300006                     	org	3145734
  4693   300006  FF                 	db	255
  4694                           
  4695                           ;Config register CONFIG8 @ 0x300007
  4696                           ;	Boot Block Write Protection bit
  4697                           ;	WRTB = OFF, Boot Block not Write protected
  4698                           ;	Configuration Register Write Protection bit
  4699                           ;	WRTC = OFF, Configuration registers not Write protected
  4700                           ;	Data EEPROM Write Protection bit
  4701                           ;	WRTD = OFF, Data EEPROM not Write protected
  4702                           ;	SAF Write protection bit
  4703                           ;	WRTSAF = OFF, SAF not Write Protected
  4704                           ;	Application Block write protection bit
  4705                           ;	WRTAPP = OFF, Application Block not write protected
  4706   300007                     	org	3145735
  4707   300007  FF                 	db	255
  4708                           
  4709                           ;Config register CONFIG10 @ 0x300009
  4710                           ;	PFM and Data EEPROM Code Protection bit
  4711                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  4712   300009                     	org	3145737
  4713   300009  FF                 	db	255
  4714                           tosu	equ	0x4FF
  4715                           tosh	equ	0x4FE
  4716                           tosl	equ	0x4FD
  4717                           stkptr	equ	0x4FC
  4718                           pclatu	equ	0x4FB
  4719                           pclath	equ	0x4FA
  4720                           pcl	equ	0x4F9
  4721                           tblptru	equ	0x4F8
  4722                           tblptrh	equ	0x4F7
  4723                           tblptrl	equ	0x4F6
  4724                           tablat	equ	0x4F5
  4725                           prodh	equ	0x4F4
  4726                           prodl	equ	0x4F3
  4727                           indf0	equ	0x4EF
  4728                           postinc0	equ	0x4EE
  4729                           postdec0	equ	0x4ED
  4730                           preinc0	equ	0x4EC
  4731                           plusw0	equ	0x4EB
  4732                           fsr0h	equ	0x4EA
  4733                           fsr0l	equ	0x4E9
  4734                           wreg	equ	0x4E8
  4735                           indf1	equ	0x4E7
  4736                           postinc1	equ	0x4E6
  4737                           postdec1	equ	0x4E5
  4738                           preinc1	equ	0x4E4
  4739                           plusw1	equ	0x4E3
  4740                           fsr1h	equ	0x4E2
  4741                           fsr1l	equ	0x4E1
  4742                           bsr	equ	0x4E0
  4743                           indf2	equ	0x4DF
  4744                           postinc2	equ	0x4DE
  4745                           postdec2	equ	0x4DD
  4746                           preinc2	equ	0x4DC
  4747                           plusw2	equ	0x4DB
  4748                           fsr2h	equ	0x4DA
  4749                           fsr2l	equ	0x4D9
  4750                           status	equ	0x4D8

Data Sizes:
    Strings     40
    Constant    8
    Data        2
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      20
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[14]), STR_3(CODE[12]), 

    GENERACARACTER@vector	PTR const unsigned char  size(1) Largest target is 8
		 -> logo_reloj(CODE[8]), 


Critical Paths under _main in COMRAM

    _splash_screen->_ESCRIBE_MENSAJE
    _mostrar_reloj->___awdiv
    _lcd_init->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _control_backlight->___awdiv
    ___awdiv->___awmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _CCP1_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _CCP1_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _CCP1_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _CCP1_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _CCP1_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _CCP1_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _CCP1_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _CCP1_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _CCP1_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _CCP1_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _CCP1_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _CCP1_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _CCP1_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _CCP1_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _CCP1_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _CCP1_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _CCP1_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _CCP1_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _CCP1_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _CCP1_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _CCP1_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _CCP1_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _CCP1_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _CCP1_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _CCP1_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _CCP1_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _CCP1_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _CCP1_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _CCP1_ISR in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _CCP1_ISR in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _CCP1_ISR in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _CCP1_ISR in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Critical Paths under _CCP1_ISR in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3719
                          _configuro
                  _control_backlight
                           _lcd_init
                      _mostrar_reloj
                      _splash_screen
 ---------------------------------------------------------------------------------
 (1) _splash_screen                                        2     2      0     683
                                              8 COMRAM     2     2      0
                         _BORRAR_LCD
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (1) _mostrar_reloj                                        0     0      0     970
                         _ENVIA_CHAR
                         _POS_CURSOR
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     879
                                              8 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              4 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     2      2     354
                                              4 COMRAM     4     2      2
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              4 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _control_backlight                                    0     0      0    1187
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     310
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     314
                                              7 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     226
                                              4 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              2 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE                                      4     2      2     217
                                              4 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              2 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _DEFAULT_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuro
   _control_backlight
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _ESCRIBE_MENSAJE
       _ENVIA_CHAR
     _POS_CURSOR
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _mostrar_reloj
     _ENVIA_CHAR
     _POS_CURSOR
     ___awdiv
     ___awmod
   _splash_screen
     _BORRAR_LCD
     _ENVIA_CHAR
     _ESCRIBE_MENSAJE
     _POS_CURSOR

 _INT0_ISR (ROOT)

 _CCP1_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRllh       624      0       0      0.0%
BITBIGSFRh         268      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBIGSFRlh        206      0       0      0.0%
BITBIGSFRllll      173      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     15      20     21.1%
BITBIGSFRlllh        5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      20      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Jun 13 11:59:06 2025

                       l24 2C0A                         l42 2CD2                         l51 2CA2  
                       l60 2D64                         l37 2D6C                         l54 2D74  
                       l63 2C70                         l48 2D02                         l57 2B0E  
                       l74 2BD0                         l67 2A0C                         l69 2A46  
                       u10 2A46                         u11 2A42                         u40 2CB6  
                       u41 2CB2                         u50 2CCC                         u51 2CC8  
             ___awdiv@sign 050D              _splash_screen 2B10              ENVIA_CHAR@aux 0504  
                      l190 273E                        l182 2C3E                        l191 27EC  
                      l185 2B5C                        l194 272A                        l179 29D4  
                      l188 2730                        l471 295C                        l458 28AE  
                      l900 29D6                        l910 29E8                        l902 29DA  
                      l920 2A00                        l912 29EC                        l904 29DC  
                      l930 2A24                        l922 2A02                        l914 29EE  
                      l906 29DE                        l940 2D58                        l932 2A2E  
                      l924 2A0E                        l916 29F6                        l908 29E0  
                      l942 2D5A                        l926 2A16                        l918 29F8  
                      l950 2C48                        l944 2D62                        l928 2A1A  
                      l936 2A34                        l960 2C58                        l952 2C4A  
                      l938 2D4C                        l970 2C76                        l962 2C5E  
                      l954 2C52                        l946 2C42                        l980 2C88  
                      l972 2C7A                        l964 2C64                        l956 2C54  
                      l948 2C44                        l982 2C8A                        l974 2C7C  
                      l966 2C6A                        l958 2C56                        l984 2C90  
                      l976 2C84                        l968 2C74                        l986 2C96  
                      l978 2C86                        l988 2C9C                        l998 2D66  
                      u300 2BE4                        u301 2BE0                        u310 2C02  
                      u311 2BFE                        u320 2D02                        u400 28C0  
                      u321 2CFE                        u401 28BC                        u410 28DA  
                      u330 2BCA                        u411 28D6                        u331 2BC6  
                      u340 27FE                        u420 28F4                        u341 27FA  
                      u421 28F0                        u350 2818                        u430 2912  
                      u351 2814                        u431 290E                        u360 283E  
                      u440 2928                        u361 283A                        u441 2924  
                      u370 285C                        u450 294C                        u371 2858  
                      u451 2948                        u507 2ACE                        u380 2878  
                      u460 273E                        u381 2874                        u461 273A  
                      u517 2ADE                        u390 289E                        u607 2D5C  
                      u527 2C4C                        u391 289A                        u537 2C7E  
                      u547 29E2                        u557 29F0                        u477 2B4C  
                      u567 29FA                        u487 2C1C                        u577 2A10  
                      u497 2AC0                        u587 2A1E                        u597 2A28  
             ___awmod@sign 0507                LEER_LCD@aux 0502                        wreg 04E8  
             ?_CURSOR_HOME 0501            ??_mostrar_reloj 0510             ??_ENVIA_NIBBLE 0502  
           ENVIA_CHAR@dato 0503                       l1000 2CA6                       l1002 2CB6  
                     l1004 2CBC                       l1020 2AB4                       l1006 2CCC  
                     l1030 2AEA                       l1022 2ABA                       l1016 2D6E  
                     l1040 2B08                       l1032 2AF0                       l1024 2AC8  
                     l1034 2AF6                       l1026 2ADC                       l1018 2AB0  
                     l1140 296C                       l1036 2AFC                       l1028 2AE4  
                     l1150 2978                       l1142 296E                       l1310 27EE  
                     l1302 2BA6                       l1038 2B02                       l1160 299C  
                     l1152 297A                       l1144 2970                       l1320 2818  
                     l1312 27F0                       l1304 2BB8                       l1400 2C2C  
                     l1170 29CC                       l1162 29A6                       l1154 297E  
                     l1146 2974                       l1138 295E                       l1330 2846  
                     l1322 2820                       l1314 27FE                       l1306 2BBA  
                     l1402 2C32                       l1410 2B2C                       l1172 29CE  
                     l1164 29A8                       l1156 2980                       l1148 2976  
                     l1340 2880                       l1332 284E                       l1324 2824  
                     l1316 2806                       l1420 2742                       l1308 2BCA  
                     l1412 2B36                       l1404 2B10                       l1174 29D0  
                     l1166 29C2                       l1158 2982                       l1350 28A6  
                     l1342 2882                       l1334 285C                       l1326 282C  
                     l1318 280A                       l1430 27CE                       l1422 274C  
                     l1414 2B42                       l1406 2B1A                       l1176 29D2  
                     l1168 29C4                       l1280 2BE4                       l1344 2888  
                     l1336 2862                       l1328 283E                       l1360 28C8  
                     l1432 27E8                       l1424 2758                       l1416 2B58  
                     l1408 2B26                       l1440 2D36                       l1290 2CEE  
                     l1282 2BF0                       l1338 2878                       l1346 288E  
                     l1370 28FC                       l1362 28CC                       l1354 28B0  
                     l1426 2772                       l1418 272C                       l1434 2632  
                     l1442 2D3A                       l1292 2CF0                       l1284 2C02  
                     l1348 289E                       l1380 2936                       l1372 2904  
                     l1364 28DA                       l1356 28B2                       l1428 27A0  
                     l1444 2D3E                       l1436 2D2E                       l1286 2CD4  
                     l1278 2BD4                       l1374 2912                       l1382 293C  
                     l1366 28E2                       l1358 28C0                       l1294 2B98  
                     l1390 2C0C                       l1438 2D32                       l1288 2CDC  
                     l1384 294C                       l1376 2928                       l1368 28F4  
                     l1296 2BA4                       l1392 2C12                       l1386 2954  
                     l1378 2930                       l1394 2C16                       l1396 2C24  
                     l1398 2C28                       STR_1 2609                       STR_2 2617  
                     STR_3 2625                       _LATD 04C1                       _T2PR 0323  
                     _main 2D2E           __end_of_CCP1_ISR 2AB0                       prodl 04F3  
                     start 0102              ?_CURSOR_ONOFF 0501               ___param_bank 0000  
          ??_ENVIA_LCD_CMD 0503           __end_of_LEER_LCD 2A48             ?_splash_screen 0501  
         __end_of_INT0_ISR 2D2E             _GENERACARACTER 2B98                      ?_main 0501  
                    _ADPCH 03EC                      _ADREF 03F8            __end_of___awdiv 28B0  
          __end_of___awmod 295E                      _T1CLK 0321            ___awdiv@divisor 050A  
                    _T1CON 031E                      _T2CON 0324                      i2l212 2AAC  
                    i2l207 2D2C                      i2l224 2D78                      i2l219 2AAE  
          ___awdiv@counter 050C                      _OSCEN 00B3                      _PORTD 04D1  
                    _TRISD 04C9                      _horas 0514                ?_POS_CURSOR 0505  
                    tablat 04F5                      status 04D8             ??_CURSOR_ONOFF 0505  
          __initialization 2B5E               __end_of_main 2D4A     __end_of_GENERACARACTER 2BD2  
          _ESCRIBE_MENSAJE 2CD4                     ??_main 0510              __activetblptr 0001  
                   _ADRESH 03EB                     _CCPR1H 0341                     _CCPR2H 0345  
                   _CCPR1L 0340                     _CCPR2L 0344           ___awdiv@dividend 0508  
                   _ANSELD 0418                     _RF0PPS 0229                     i2l1250 2D04  
                   i2l1260 2A5E                     i2l1252 2D06                     i2l1270 2A98  
                   i2l1262 2A70                     i2l1254 2A48                     i2l1272 2A9E  
                   i2l1264 2A72                     i2l1256 2A4A                     i2l1266 2A84  
                   i2l1274 2AA4                     i2l1258 2A5C                     i2l1268 2A86  
                   i2l1276 2AAA                     _OSCFRQ 00B1           __end_of_lcd_init 2C40  
          ??_splash_screen 0509                  ??___awdiv 050C                  ??___awmod 0506  
     __end_of_ENVIA_NIBBLE 2D66            ?_GENERACARACTER 0505           ___awdiv@quotient 050E  
          ___awmod@divisor 0504                     isa$std 0001            ___awmod@counter 0506  
                ?_CCP1_ISR 0501               __pdataCOMRAM 0513               __mediumconst 2600  
                   tblptrh 04F7                     tblptrl 04F6                     tblptru 04F8  
             ??_BORRAR_LCD 0505                  ?_LEER_LCD 0501                 __accesstop 0560  
  __end_of__initialization 2B8A                  ?_INT0_ISR 0501               ??_LCD_CONFIG 0505  
            ___rparam_used 0001               ??_ENVIA_CHAR 0503    __end_of_ESCRIBE_MENSAJE 2D04  
           __pcstackCOMRAM 0501             ivt0x8_undefint 0100         __end_of_BORRAR_LCD 2D76  
               ??_CCP1_ISR 0502           ENVIA_LCD_CMD@aux 0504       __end_of_CURSOR_ONOFF 2CD4  
       __end_of_LCD_CONFIG 2B10         __end_of_ENVIA_CHAR 2CA4                 ??_LEER_LCD 0502  
         ENVIA_NIBBLE@dato 0502                 ??_INT0_ISR 0501                    IVTBASEH 045E  
                  IVTBASEL 045D                    IVTBASEU 045F                 _centesimas 0510  
                  _CCP1CON 0342                    _CCP2CON 0346              ??_DEFAULT_ISR 0502  
                  _INT0PPS 023E                    _OSCCON1 00AD                    i2u25_40 2D18  
                  i2u25_41 2D12                    i2u25_46 2D1A                    i2u26_40 2A5C  
                  i2u26_41 2A58                    i2u27_40 2A70                    i2u27_41 2A6C  
                  i2u28_40 2A84                    i2u28_41 2A80                    i2u29_40 2A98  
                  i2u29_41 2A94               ??_POS_CURSOR 0506                  ?_lcd_init 0501  
    __end_of_mostrar_reloj 272C                    __Hparam 0000                    __Lparam 0000  
         ?_ESCRIBE_MENSAJE 0505          __end_of_configuro 29D6                    ___awdiv 27EE  
                  ___awmod 28B0               __psmallconst 2600      __end_of_ENVIA_LCD_CMD 2C72  
                  __pcinit 2B5E         __end_of_POS_CURSOR 2C0C                    __ramtop 2600  
                  __ptext0 2D2E                    __ptext1 2B10                    __ptext2 2632  
                  __ptext3 2C0C                    __ptext4 2AB0                    __ptext5 2B98  
                  __ptext6 2CA4                    __ptext7 2D66                    __ptext8 2D6E  
                  __ptext9 272C            GENERACARACTER@i 0508           ___awmod@dividend 0502  
                  _minutos 0513                 _logo_reloj 2601                 ??_lcd_init 0509  
             _ENVIA_NIBBLE 2D4A        __end_of_DEFAULT_ISR 2D7A       end_of_initialization 2B8A  
         ??_GENERACARACTER 0507       GENERACARACTER@vector 0505                  _TRISAbits 04C6  
                _TRISBbits 04C7                  _TRISFbits 04CB                _CCP2CONbits 0346  
             _CURSOR_ONOFF 2CA4         CURSOR_ONOFF@estado 0505      __end_of_splash_screen 2B5E  
            __pidataCOMRAM 2D76                _DEFAULT_ISR 2D78              ??_CURSOR_HOME 0505  
      start_initialization 2B5E                 ivt0x8_base 0008          ENVIA_LCD_CMD@dato 0503  
              __pbssCOMRAM 0510        __end_of_CURSOR_HOME 2D6E          _control_backlight 272C  
                 ?___awdiv 0508                   ?___awmod 0502         ?_control_backlight 0501  
        GENERACARACTER@pos 0506                  _configuro 295E                __smallconst 2600  
      ??_control_backlight 0510                   _CCP1_ISR 2A48                   _T2CLKCON 0326  
                 _LEER_LCD 29D6                   _INT0_ISR 2D04                   _LATDbits 04C1  
                 _LATFbits 04C3                   _PIE1bits 049F  __end_of_control_backlight 27EE  
                 _PIE3bits 04A1                   _PIR1bits 04AF                   _PIR3bits 04B1  
                _valor_ADC 0512           ESCRIBE_MENSAJE@i 0508             POS_CURSOR@fila 0506  
               ?_configuro 0501                 _ADCON0bits 03F3                   _WPUBbits 0409  
              _CURSOR_HOME 2D66                _INTCON0bits 04D6                   __Hrparam 0000  
                 __Lrparam 0000               __Lsmallconst 2600                 _ANSELAbits 0400  
               _ANSELBbits 0408                 _ANSELFbits 0428               ?_DEFAULT_ISR 0501  
                 __pivt0x8 0008                   __ptext10 28B0                   __ptext11 27EE  
                 __ptext20 2A48                   __ptext12 2BD2                   __ptext21 2D78  
                 __ptext13 2C40                   __ptext14 2CD4                   __ptext15 2C72  
                 __ptext16 29D6                   __ptext17 2D4A                   __ptext18 295E  
                 __ptext19 2D04                 _BORRAR_LCD 2D6E                   _lcd_init 2C0C  
            _mostrar_reloj 2632                 _LCD_CONFIG 2AB0                 _ENVIA_CHAR 2C72  
                 _segundos 0511                   isa$xinst 0000         __end_of_logo_reloj 2609  
            _ENVIA_LCD_CMD 2C40                ??_configuro 0502          ??_ESCRIBE_MENSAJE 0507  
           ?_mostrar_reloj 0501                   intlevel2 0000      ESCRIBE_MENSAJE@cadena 0505  
           ?_ENVIA_LCD_CMD 0501                ?_BORRAR_LCD 0501              ?_ENVIA_NIBBLE 0501  
               _POS_CURSOR 2BD2                ?_LCD_CONFIG 0501         ESCRIBE_MENSAJE@tam 0506  
              ?_ENVIA_CHAR 0501          POS_CURSOR@columna 0505  
