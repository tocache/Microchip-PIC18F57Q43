

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Jun 06 11:51:51 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 04/02/2025 GMT
    27                           ; 
    28                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F57Q43 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   0004E0                     bsr             equ	1248
    61   0004E9                     fsr0            equ	1257
    62   0004EA                     fsr0h           equ	1258
    63   0004E9                     fsr0l           equ	1257
    64   0004E1                     fsr1            equ	1249
    65   0004E2                     fsr1h           equ	1250
    66   0004E1                     fsr1l           equ	1249
    67   0004D9                     fsr2            equ	1241
    68   0004DA                     fsr2h           equ	1242
    69   0004D9                     fsr2l           equ	1241
    70   0004EF                     indf0           equ	1263
    71   0004E7                     indf1           equ	1255
    72   0004DF                     indf2           equ	1247
    73   0004D6                     intcon          equ	1238
    74   000041                     nvmcon          equ	65
    75   0004F9                     pcl             equ	1273
    76   0004FA                     pclath          equ	1274
    77   0004FB                     pclatu          equ	1275
    78   0004EB                     plusw0          equ	1259
    79   0004E3                     plusw1          equ	1251
    80   0004DB                     plusw2          equ	1243
    81   0004ED                     postdec0        equ	1261
    82   0004E5                     postdec1        equ	1253
    83   0004DD                     postdec2        equ	1245
    84   0004EE                     postinc0        equ	1262
    85   0004E6                     postinc1        equ	1254
    86   0004DE                     postinc2        equ	1246
    87   0004EC                     preinc0         equ	1260
    88   0004E4                     preinc1         equ	1252
    89   0004DC                     preinc2         equ	1244
    90   0004F3                     prod            equ	1267
    91   0004F4                     prodh           equ	1268
    92   0004F3                     prodl           equ	1267
    93   0004D8                     status          equ	1240
    94   0004F5                     tablat          equ	1269
    95   0004F6                     tblptr          equ	1270
    96   0004F7                     tblptrh         equ	1271
    97   0004F6                     tblptrl         equ	1270
    98   0004F8                     tblptru         equ	1272
    99   0004FD                     tosl            equ	1277
   100   0004E8                     wreg            equ	1256
   101   000039                     CLKRCON         equ	57	;# 
   102   00003A                     CLKRCLK         equ	58	;# 
   103   000040                     NVMCON0         equ	64	;# 
   104   000041                     NVMCON1         equ	65	;# 
   105   000042                     NVMLOCK         equ	66	;# 
   106   000043                     NVMADR          equ	67	;# 
   107   000043                     NVMADRL         equ	67	;# 
   108   000044                     NVMADRH         equ	68	;# 
   109   000045                     NVMADRU         equ	69	;# 
   110   000046                     NVMDAT          equ	70	;# 
   111   000046                     NVMDATL         equ	70	;# 
   112   000047                     NVMDATH         equ	71	;# 
   113   000048                     VREGCON         equ	72	;# 
   114   000049                     BORCON          equ	73	;# 
   115   00004A                     HLVDCON0        equ	74	;# 
   116   00004B                     HLVDCON1        equ	75	;# 
   117   00004C                     ZCDCON          equ	76	;# 
   118   000060                     PMD0            equ	96	;# 
   119   000061                     PMD1            equ	97	;# 
   120   000063                     PMD3            equ	99	;# 
   121   000064                     PMD4            equ	100	;# 
   122   000065                     PMD5            equ	101	;# 
   123   000066                     PMD6            equ	102	;# 
   124   000067                     PMD7            equ	103	;# 
   125   000068                     PMD8            equ	104	;# 
   126   00006A                     MD1CON0         equ	106	;# 
   127   00006B                     MD1CON1         equ	107	;# 
   128   00006C                     MD1SRC          equ	108	;# 
   129   00006D                     MD1CARL         equ	109	;# 
   130   00006E                     MD1CARH         equ	110	;# 
   131   00006F                     CMOUT           equ	111	;# 
   132   000070                     CM1CON0         equ	112	;# 
   133   000071                     CM1CON1         equ	113	;# 
   134   000072                     CM1NCH          equ	114	;# 
   135   000073                     CM1PCH          equ	115	;# 
   136   000074                     CM2CON0         equ	116	;# 
   137   000075                     CM2CON1         equ	117	;# 
   138   000076                     CM2NCH          equ	118	;# 
   139   000077                     CM2PCH          equ	119	;# 
   140   000078                     WDTCON0         equ	120	;# 
   141   000079                     WDTCON1         equ	121	;# 
   142   00007A                     WDTPS           equ	122	;# 
   143   00007A                     WDTPSL          equ	122	;# 
   144   00007B                     WDTPSH          equ	123	;# 
   145   00007C                     WDTTMR          equ	124	;# 
   146   00007D                     DAC1DAT         equ	125	;# 
   147   00007D                     DAC1DATL        equ	125	;# 
   148   00007F                     DAC1CON         equ	127	;# 
   149   000080                     SPI1RXB         equ	128	;# 
   150   000081                     SPI1TXB         equ	129	;# 
   151   000082                     SPI1TCNT        equ	130	;# 
   152   000082                     SPI1TCNTL       equ	130	;# 
   153   000083                     SPI1TCNTH       equ	131	;# 
   154   000084                     SPI1CON0        equ	132	;# 
   155   000085                     SPI1CON1        equ	133	;# 
   156   000086                     SPI1CON2        equ	134	;# 
   157   000087                     SPI1STATUS      equ	135	;# 
   158   000088                     SPI1TWIDTH      equ	136	;# 
   159   000089                     SPI1BAUD        equ	137	;# 
   160   00008A                     SPI1INTF        equ	138	;# 
   161   00008B                     SPI1INTE        equ	139	;# 
   162   00008C                     SPI1CLK         equ	140	;# 
   163   00008D                     SPI2RXB         equ	141	;# 
   164   00008E                     SPI2TXB         equ	142	;# 
   165   00008F                     SPI2TCNT        equ	143	;# 
   166   00008F                     SPI2TCNTL       equ	143	;# 
   167   000090                     SPI2TCNTH       equ	144	;# 
   168   000091                     SPI2CON0        equ	145	;# 
   169   000092                     SPI2CON1        equ	146	;# 
   170   000093                     SPI2CON2        equ	147	;# 
   171   000094                     SPI2STATUS      equ	148	;# 
   172   000095                     SPI2TWIDTH      equ	149	;# 
   173   000096                     SPI2BAUD        equ	150	;# 
   174   000097                     SPI2INTF        equ	151	;# 
   175   000098                     SPI2INTE        equ	152	;# 
   176   000099                     SPI2CLK         equ	153	;# 
   177   0000AC                     ACTCON          equ	172	;# 
   178   0000AD                     OSCCON1         equ	173	;# 
   179   0000AE                     OSCCON2         equ	174	;# 
   180   0000AF                     OSCCON3         equ	175	;# 
   181   0000B0                     OSCTUNE         equ	176	;# 
   182   0000B1                     OSCFRQ          equ	177	;# 
   183   0000B1                     OSCFREQ         equ	177	;# 
   184   0000B2                     OSCSTAT         equ	178	;# 
   185   0000B2                     OSCSTAT1        equ	178	;# 
   186   0000B3                     OSCEN           equ	179	;# 
   187   0000B4                     PRLOCK          equ	180	;# 
   188   0000B5                     SCANPR          equ	181	;# 
   189   0000B6                     DMA1PR          equ	182	;# 
   190   0000B7                     DMA2PR          equ	183	;# 
   191   0000B8                     DMA3PR          equ	184	;# 
   192   0000B9                     DMA4PR          equ	185	;# 
   193   0000BA                     DMA5PR          equ	186	;# 
   194   0000BB                     DMA6PR          equ	187	;# 
   195   0000BE                     MAINPR          equ	190	;# 
   196   0000BF                     ISRPR           equ	191	;# 
   197   0000D4                     CLCDATA         equ	212	;# 
   198   0000D5                     CLCSELECT       equ	213	;# 
   199   0000D6                     CLCnCON         equ	214	;# 
   200   0000D7                     CLCnPOL         equ	215	;# 
   201   0000D8                     CLCnSEL0        equ	216	;# 
   202   0000D9                     CLCnSEL1        equ	217	;# 
   203   0000DA                     CLCnSEL2        equ	218	;# 
   204   0000DB                     CLCnSEL3        equ	219	;# 
   205   0000DC                     CLCnGLS0        equ	220	;# 
   206   0000DD                     CLCnGLS1        equ	221	;# 
   207   0000DE                     CLCnGLS2        equ	222	;# 
   208   0000DF                     CLCnGLS3        equ	223	;# 
   209   0000E8                     DMASELECT       equ	232	;# 
   210   0000E9                     DMAnBUF         equ	233	;# 
   211   0000EA                     DMAnDCNT        equ	234	;# 
   212   0000EA                     DMAnDCNTL       equ	234	;# 
   213   0000EB                     DMAnDCNTH       equ	235	;# 
   214   0000EC                     DMAnDPTR        equ	236	;# 
   215   0000EC                     DMAnDPTRL       equ	236	;# 
   216   0000ED                     DMAnDPTRH       equ	237	;# 
   217   0000EE                     DMAnDSZ         equ	238	;# 
   218   0000EE                     DMAnDSZL        equ	238	;# 
   219   0000EF                     DMAnDSZH        equ	239	;# 
   220   0000F0                     DMAnDSA         equ	240	;# 
   221   0000F0                     DMAnDSAL        equ	240	;# 
   222   0000F1                     DMAnDSAH        equ	241	;# 
   223   0000F2                     DMAnSCNT        equ	242	;# 
   224   0000F2                     DMAnSCNTL       equ	242	;# 
   225   0000F3                     DMAnSCNTH       equ	243	;# 
   226   0000F4                     DMAnSPTR        equ	244	;# 
   227   0000F4                     DMAnSPTRL       equ	244	;# 
   228   0000F5                     DMAnSPTRH       equ	245	;# 
   229   0000F6                     DMAnSPTRU       equ	246	;# 
   230   0000F7                     DMAnSSZ         equ	247	;# 
   231   0000F7                     DMAnSSZL        equ	247	;# 
   232   0000F8                     DMAnSSZH        equ	248	;# 
   233   0000F9                     DMAnSSA         equ	249	;# 
   234   0000F9                     DMAnSSAL        equ	249	;# 
   235   0000FA                     DMAnSSAH        equ	250	;# 
   236   0000FB                     DMAnSSAU        equ	251	;# 
   237   0000FC                     DMAnCON0        equ	252	;# 
   238   0000FD                     DMAnCON1        equ	253	;# 
   239   0000FE                     DMAnAIRQ        equ	254	;# 
   240   0000FF                     DMAnSIRQ        equ	255	;# 
   241   000200                     PPSLOCK         equ	512	;# 
   242   000201                     RA0PPS          equ	513	;# 
   243   000202                     RA1PPS          equ	514	;# 
   244   000203                     RA2PPS          equ	515	;# 
   245   000204                     RA3PPS          equ	516	;# 
   246   000205                     RA4PPS          equ	517	;# 
   247   000206                     RA5PPS          equ	518	;# 
   248   000207                     RA6PPS          equ	519	;# 
   249   000208                     RA7PPS          equ	520	;# 
   250   000209                     RB0PPS          equ	521	;# 
   251   00020A                     RB1PPS          equ	522	;# 
   252   00020B                     RB2PPS          equ	523	;# 
   253   00020C                     RB3PPS          equ	524	;# 
   254   00020D                     RB4PPS          equ	525	;# 
   255   00020E                     RB5PPS          equ	526	;# 
   256   00020F                     RB6PPS          equ	527	;# 
   257   000210                     RB7PPS          equ	528	;# 
   258   000211                     RC0PPS          equ	529	;# 
   259   000212                     RC1PPS          equ	530	;# 
   260   000213                     RC2PPS          equ	531	;# 
   261   000214                     RC3PPS          equ	532	;# 
   262   000215                     RC4PPS          equ	533	;# 
   263   000216                     RC5PPS          equ	534	;# 
   264   000217                     RC6PPS          equ	535	;# 
   265   000218                     RC7PPS          equ	536	;# 
   266   000219                     RD0PPS          equ	537	;# 
   267   00021A                     RD1PPS          equ	538	;# 
   268   00021B                     RD2PPS          equ	539	;# 
   269   00021C                     RD3PPS          equ	540	;# 
   270   00021D                     RD4PPS          equ	541	;# 
   271   00021E                     RD5PPS          equ	542	;# 
   272   00021F                     RD6PPS          equ	543	;# 
   273   000220                     RD7PPS          equ	544	;# 
   274   000221                     RE0PPS          equ	545	;# 
   275   000222                     RE1PPS          equ	546	;# 
   276   000223                     RE2PPS          equ	547	;# 
   277   000229                     RF0PPS          equ	553	;# 
   278   00022A                     RF1PPS          equ	554	;# 
   279   00022B                     RF2PPS          equ	555	;# 
   280   00022C                     RF3PPS          equ	556	;# 
   281   00022D                     RF4PPS          equ	557	;# 
   282   00022E                     RF5PPS          equ	558	;# 
   283   00022F                     RF6PPS          equ	559	;# 
   284   000230                     RF7PPS          equ	560	;# 
   285   00023E                     INT0PPS         equ	574	;# 
   286   00023F                     INT1PPS         equ	575	;# 
   287   000240                     INT2PPS         equ	576	;# 
   288   000241                     T0CKIPPS        equ	577	;# 
   289   000242                     T1CKIPPS        equ	578	;# 
   290   000243                     T1GPPS          equ	579	;# 
   291   000244                     T3CKIPPS        equ	580	;# 
   292   000245                     T3GPPS          equ	581	;# 
   293   000246                     T5CKIPPS        equ	582	;# 
   294   000247                     T5GPPS          equ	583	;# 
   295   000248                     T2INPPS         equ	584	;# 
   296   000249                     T4INPPS         equ	585	;# 
   297   00024A                     T6INPPS         equ	586	;# 
   298   00024F                     CCP1PPS         equ	591	;# 
   299   000250                     CCP2PPS         equ	592	;# 
   300   000251                     CCP3PPS         equ	593	;# 
   301   000253                     PWM1ERSPPS      equ	595	;# 
   302   000254                     PWM2ERSPPS      equ	596	;# 
   303   000255                     PWM3ERSPPS      equ	597	;# 
   304   000257                     PWMIN0PPS       equ	599	;# 
   305   000258                     PWMIN1PPS       equ	600	;# 
   306   000259                     SMT1WINPPS      equ	601	;# 
   307   00025A                     SMT1SIGPPS      equ	602	;# 
   308   00025B                     CWG1PPS         equ	603	;# 
   309   00025B                     CWG1INPPS       equ	603	;# 
   310   00025C                     CWG2PPS         equ	604	;# 
   311   00025C                     CWG2INPPS       equ	604	;# 
   312   00025D                     CWG3PPS         equ	605	;# 
   313   00025D                     CWG3INPPS       equ	605	;# 
   314   00025E                     MD1CARLPPS      equ	606	;# 
   315   00025E                     MDCARLPPS       equ	606	;# 
   316   00025F                     MD1CARHPPS      equ	607	;# 
   317   00025F                     MDCARHPPS       equ	607	;# 
   318   000260                     MD1SRCPPS       equ	608	;# 
   319   000260                     MDSRCPPS        equ	608	;# 
   320   000261                     CLCIN0PPS       equ	609	;# 
   321   000262                     CLCIN1PPS       equ	610	;# 
   322   000263                     CLCIN2PPS       equ	611	;# 
   323   000264                     CLCIN3PPS       equ	612	;# 
   324   000265                     CLCIN4PPS       equ	613	;# 
   325   000266                     CLCIN5PPS       equ	614	;# 
   326   000267                     CLCIN6PPS       equ	615	;# 
   327   000268                     CLCIN7PPS       equ	616	;# 
   328   000269                     ADACTPPS        equ	617	;# 
   329   00026A                     SPI1SCKPPS      equ	618	;# 
   330   00026B                     SPI1SDIPPS      equ	619	;# 
   331   00026C                     SPI1SSPPS       equ	620	;# 
   332   00026D                     SPI2SCKPPS      equ	621	;# 
   333   00026E                     SPI2SDIPPS      equ	622	;# 
   334   00026F                     SPI2SSPPS       equ	623	;# 
   335   000270                     I2C1SDAPPS      equ	624	;# 
   336   000271                     I2C1SCLPPS      equ	625	;# 
   337   000272                     U1RXPPS         equ	626	;# 
   338   000273                     U1CTSPPS        equ	627	;# 
   339   000274                     U2RXPPS         equ	628	;# 
   340   000275                     U2CTSPPS        equ	629	;# 
   341   000276                     U3RXPPS         equ	630	;# 
   342   000277                     U3CTSPPS        equ	631	;# 
   343   000278                     U4RXPPS         equ	632	;# 
   344   000279                     U4CTSPPS        equ	633	;# 
   345   00027A                     U5RXPPS         equ	634	;# 
   346   00027B                     U5CTSPPS        equ	635	;# 
   347   000286                     RC4I2C          equ	646	;# 
   348   000287                     RC3I2C          equ	647	;# 
   349   000288                     RB2I2C          equ	648	;# 
   350   000289                     RB1I2C          equ	649	;# 
   351   00028B                     I2C1RXB         equ	651	;# 
   352   00028C                     I2C1TXB         equ	652	;# 
   353   00028D                     I2C1CNT         equ	653	;# 
   354   00028E                     I2C1ADB0        equ	654	;# 
   355   00028F                     I2C1ADB1        equ	655	;# 
   356   000290                     I2C1ADR0        equ	656	;# 
   357   000291                     I2C1ADR1        equ	657	;# 
   358   000292                     I2C1ADR2        equ	658	;# 
   359   000293                     I2C1ADR3        equ	659	;# 
   360   000294                     I2C1CON0        equ	660	;# 
   361   000295                     I2C1CON1        equ	661	;# 
   362   000296                     I2C1CON2        equ	662	;# 
   363   000297                     I2C1ERR         equ	663	;# 
   364   000298                     I2C1STAT0       equ	664	;# 
   365   000299                     I2C1STAT1       equ	665	;# 
   366   00029A                     I2C1PIR         equ	666	;# 
   367   00029B                     I2C1PIE         equ	667	;# 
   368   00029C                     I2C1CLK         equ	668	;# 
   369   00029D                     I2C1BTO         equ	669	;# 
   370   0002A1                     U1RXB           equ	673	;# 
   371   0002A1                     U1RXBL          equ	673	;# 
   372   0002A2                     U1RXCHK         equ	674	;# 
   373   0002A3                     U1TXB           equ	675	;# 
   374   0002A3                     U1TXBL          equ	675	;# 
   375   0002A4                     U1TXCHK         equ	676	;# 
   376   0002A5                     U1P1            equ	677	;# 
   377   0002A5                     U1P1L           equ	677	;# 
   378   0002A6                     U1P1H           equ	678	;# 
   379   0002A7                     U1P2            equ	679	;# 
   380   0002A7                     U1P2L           equ	679	;# 
   381   0002A8                     U1P2H           equ	680	;# 
   382   0002A9                     U1P3            equ	681	;# 
   383   0002A9                     U1P3L           equ	681	;# 
   384   0002AA                     U1P3H           equ	682	;# 
   385   0002AB                     U1CON0          equ	683	;# 
   386   0002AC                     U1CON1          equ	684	;# 
   387   0002AD                     U1CON2          equ	685	;# 
   388   0002AE                     U1BRG           equ	686	;# 
   389   0002AE                     U1BRGL          equ	686	;# 
   390   0002AF                     U1BRGH          equ	687	;# 
   391   0002B0                     U1FIFO          equ	688	;# 
   392   0002B1                     U1UIR           equ	689	;# 
   393   0002B2                     U1ERRIR         equ	690	;# 
   394   0002B3                     U1ERRIE         equ	691	;# 
   395   0002B4                     U2RXB           equ	692	;# 
   396   0002B4                     U2RXBL          equ	692	;# 
   397   0002B6                     U2TXB           equ	694	;# 
   398   0002B6                     U2TXBL          equ	694	;# 
   399   0002B8                     U2P1            equ	696	;# 
   400   0002B8                     U2P1L           equ	696	;# 
   401   0002BA                     U2P2            equ	698	;# 
   402   0002BA                     U2P2L           equ	698	;# 
   403   0002BC                     U2P3            equ	700	;# 
   404   0002BC                     U2P3L           equ	700	;# 
   405   0002BE                     U2CON0          equ	702	;# 
   406   0002BF                     U2CON1          equ	703	;# 
   407   0002C0                     U2CON2          equ	704	;# 
   408   0002C1                     U2BRG           equ	705	;# 
   409   0002C1                     U2BRGL          equ	705	;# 
   410   0002C2                     U2BRGH          equ	706	;# 
   411   0002C3                     U2FIFO          equ	707	;# 
   412   0002C4                     U2UIR           equ	708	;# 
   413   0002C5                     U2ERRIR         equ	709	;# 
   414   0002C6                     U2ERRIE         equ	710	;# 
   415   0002C7                     U3RXB           equ	711	;# 
   416   0002C7                     U3RXBL          equ	711	;# 
   417   0002C9                     U3TXB           equ	713	;# 
   418   0002C9                     U3TXBL          equ	713	;# 
   419   0002CB                     U3P1            equ	715	;# 
   420   0002CB                     U3P1L           equ	715	;# 
   421   0002CD                     U3P2            equ	717	;# 
   422   0002CD                     U3P2L           equ	717	;# 
   423   0002CF                     U3P3            equ	719	;# 
   424   0002CF                     U3P3L           equ	719	;# 
   425   0002D1                     U3CON0          equ	721	;# 
   426   0002D2                     U3CON1          equ	722	;# 
   427   0002D3                     U3CON2          equ	723	;# 
   428   0002D4                     U3BRG           equ	724	;# 
   429   0002D4                     U3BRGL          equ	724	;# 
   430   0002D5                     U3BRGH          equ	725	;# 
   431   0002D6                     U3FIFO          equ	726	;# 
   432   0002D7                     U3UIR           equ	727	;# 
   433   0002D8                     U3ERRIR         equ	728	;# 
   434   0002D9                     U3ERRIE         equ	729	;# 
   435   0002DA                     U4RXB           equ	730	;# 
   436   0002DA                     U4RXBL          equ	730	;# 
   437   0002DC                     U4TXB           equ	732	;# 
   438   0002DC                     U4TXBL          equ	732	;# 
   439   0002DE                     U4P1            equ	734	;# 
   440   0002DE                     U4P1L           equ	734	;# 
   441   0002E0                     U4P2            equ	736	;# 
   442   0002E0                     U4P2L           equ	736	;# 
   443   0002E2                     U4P3            equ	738	;# 
   444   0002E2                     U4P3L           equ	738	;# 
   445   0002E4                     U4CON0          equ	740	;# 
   446   0002E5                     U4CON1          equ	741	;# 
   447   0002E6                     U4CON2          equ	742	;# 
   448   0002E7                     U4BRG           equ	743	;# 
   449   0002E7                     U4BRGL          equ	743	;# 
   450   0002E8                     U4BRGH          equ	744	;# 
   451   0002E9                     U4FIFO          equ	745	;# 
   452   0002EA                     U4UIR           equ	746	;# 
   453   0002EB                     U4ERRIR         equ	747	;# 
   454   0002EC                     U4ERRIE         equ	748	;# 
   455   0002ED                     U5RXB           equ	749	;# 
   456   0002ED                     U5RXBL          equ	749	;# 
   457   0002EF                     U5TXB           equ	751	;# 
   458   0002EF                     U5TXBL          equ	751	;# 
   459   0002F1                     U5P1            equ	753	;# 
   460   0002F1                     U5P1L           equ	753	;# 
   461   0002F3                     U5P2            equ	755	;# 
   462   0002F3                     U5P2L           equ	755	;# 
   463   0002F5                     U5P3            equ	757	;# 
   464   0002F5                     U5P3L           equ	757	;# 
   465   0002F7                     U5CON0          equ	759	;# 
   466   0002F8                     U5CON1          equ	760	;# 
   467   0002F9                     U5CON2          equ	761	;# 
   468   0002FA                     U5BRG           equ	762	;# 
   469   0002FA                     U5BRGL          equ	762	;# 
   470   0002FB                     U5BRGH          equ	763	;# 
   471   0002FC                     U5FIFO          equ	764	;# 
   472   0002FD                     U5UIR           equ	765	;# 
   473   0002FE                     U5ERRIR         equ	766	;# 
   474   0002FF                     U5ERRIE         equ	767	;# 
   475   000300                     SMT1TMR         equ	768	;# 
   476   000300                     SMT1TMRL        equ	768	;# 
   477   000301                     SMT1TMRH        equ	769	;# 
   478   000302                     SMT1TMRU        equ	770	;# 
   479   000303                     SMT1CPR         equ	771	;# 
   480   000303                     SMT1CPRL        equ	771	;# 
   481   000304                     SMT1CPRH        equ	772	;# 
   482   000305                     SMT1CPRU        equ	773	;# 
   483   000306                     SMT1CPW         equ	774	;# 
   484   000306                     SMT1CPWL        equ	774	;# 
   485   000307                     SMT1CPWH        equ	775	;# 
   486   000308                     SMT1CPWU        equ	776	;# 
   487   000309                     SMT1PR          equ	777	;# 
   488   000309                     SMT1PRL         equ	777	;# 
   489   00030A                     SMT1PRH         equ	778	;# 
   490   00030B                     SMT1PRU         equ	779	;# 
   491   00030C                     SMT1CON0        equ	780	;# 
   492   00030D                     SMT1CON1        equ	781	;# 
   493   00030E                     SMT1STAT        equ	782	;# 
   494   00030F                     SMT1CLK         equ	783	;# 
   495   000310                     SMT1SIG         equ	784	;# 
   496   000311                     SMT1WIN         equ	785	;# 
   497   000318                     TMR0L           equ	792	;# 
   498   000318                     TMR0            equ	792	;# 
   499   000319                     TMR0H           equ	793	;# 
   500   000319                     PR0             equ	793	;# 
   501   00031A                     T0CON0          equ	794	;# 
   502   00031B                     T0CON1          equ	795	;# 
   503   00031C                     TMR1            equ	796	;# 
   504   00031C                     TMR1L           equ	796	;# 
   505   00031D                     TMR1H           equ	797	;# 
   506   00031E                     T1CON           equ	798	;# 
   507   00031E                     TMR1CON         equ	798	;# 
   508   00031F                     T1GCON          equ	799	;# 
   509   00031F                     TMR1GCON        equ	799	;# 
   510   000320                     T1GATE          equ	800	;# 
   511   000320                     TMR1GATE        equ	800	;# 
   512   000321                     T1CLK           equ	801	;# 
   513   000321                     TMR1CLK         equ	801	;# 
   514   000321                     PR1             equ	801	;# 
   515   000322                     T2TMR           equ	802	;# 
   516   000322                     TMR2            equ	802	;# 
   517   000323                     T2PR            equ	803	;# 
   518   000323                     PR2             equ	803	;# 
   519   000324                     T2CON           equ	804	;# 
   520   000325                     T2HLT           equ	805	;# 
   521   000326                     T2CLKCON        equ	806	;# 
   522   000326                     T2CLK           equ	806	;# 
   523   000327                     T2RST           equ	807	;# 
   524   000328                     TMR3            equ	808	;# 
   525   000328                     TMR3L           equ	808	;# 
   526   000329                     TMR3H           equ	809	;# 
   527   00032A                     T3CON           equ	810	;# 
   528   00032A                     TMR3CON         equ	810	;# 
   529   00032B                     T3GCON          equ	811	;# 
   530   00032B                     TMR3GCON        equ	811	;# 
   531   00032C                     T3GATE          equ	812	;# 
   532   00032C                     TMR3GATE        equ	812	;# 
   533   00032D                     T3CLK           equ	813	;# 
   534   00032D                     TMR3CLK         equ	813	;# 
   535   00032D                     PR3             equ	813	;# 
   536   00032E                     T4TMR           equ	814	;# 
   537   00032E                     TMR4            equ	814	;# 
   538   00032F                     T4PR            equ	815	;# 
   539   00032F                     PR4             equ	815	;# 
   540   000330                     T4CON           equ	816	;# 
   541   000331                     T4HLT           equ	817	;# 
   542   000332                     T4CLKCON        equ	818	;# 
   543   000332                     T4CLK           equ	818	;# 
   544   000333                     T4RST           equ	819	;# 
   545   000334                     TMR5            equ	820	;# 
   546   000334                     TMR5L           equ	820	;# 
   547   000335                     TMR5H           equ	821	;# 
   548   000336                     T5CON           equ	822	;# 
   549   000336                     TMR5CON         equ	822	;# 
   550   000337                     T5GCON          equ	823	;# 
   551   000337                     TMR5GCON        equ	823	;# 
   552   000338                     T5GATE          equ	824	;# 
   553   000338                     TMR5GATE        equ	824	;# 
   554   000339                     T5CLK           equ	825	;# 
   555   000339                     TMR5CLK         equ	825	;# 
   556   000339                     PR5             equ	825	;# 
   557   00033A                     T6TMR           equ	826	;# 
   558   00033A                     TMR6            equ	826	;# 
   559   00033B                     T6PR            equ	827	;# 
   560   00033B                     PR6             equ	827	;# 
   561   00033C                     T6CON           equ	828	;# 
   562   00033D                     T6HLT           equ	829	;# 
   563   00033E                     T6CLKCON        equ	830	;# 
   564   00033E                     T6CLK           equ	830	;# 
   565   00033F                     T6RST           equ	831	;# 
   566   000340                     CCPR1           equ	832	;# 
   567   000340                     CCPR1L          equ	832	;# 
   568   000341                     CCPR1H          equ	833	;# 
   569   000342                     CCP1CON         equ	834	;# 
   570   000343                     CCP1CAP         equ	835	;# 
   571   000344                     CCPR2           equ	836	;# 
   572   000344                     CCPR2L          equ	836	;# 
   573   000345                     CCPR2H          equ	837	;# 
   574   000346                     CCP2CON         equ	838	;# 
   575   000347                     CCP2CAP         equ	839	;# 
   576   000348                     CCPR3           equ	840	;# 
   577   000348                     CCPR3L          equ	840	;# 
   578   000349                     CCPR3H          equ	841	;# 
   579   00034A                     CCP3CON         equ	842	;# 
   580   00034B                     CCP3CAP         equ	843	;# 
   581   00034C                     CCPTMRS0        equ	844	;# 
   582   00034F                     CRCDATA         equ	847	;# 
   583   00034F                     CRCDATL         equ	847	;# 
   584   000350                     CRCDATH         equ	848	;# 
   585   000351                     CRCACC          equ	849	;# 
   586   000351                     CRCACCL         equ	849	;# 
   587   000352                     CRCACCH         equ	850	;# 
   588   000353                     CRCSHFT         equ	851	;# 
   589   000353                     CRCSHIFTL       equ	851	;# 
   590   000354                     CRCSHIFTH       equ	852	;# 
   591   000355                     CRCXOR          equ	853	;# 
   592   000355                     CRCXORL         equ	853	;# 
   593   000356                     CRCXORH         equ	854	;# 
   594   000357                     CRCCON0         equ	855	;# 
   595   000358                     CRCCON1         equ	856	;# 
   596   00035A                     SCANLADR        equ	858	;# 
   597   00035A                     SCANLADRL       equ	858	;# 
   598   00035B                     SCANLADRH       equ	859	;# 
   599   00035C                     SCANLADRU       equ	860	;# 
   600   00035D                     SCANHADR        equ	861	;# 
   601   00035D                     SCANHADRL       equ	861	;# 
   602   00035E                     SCANHADRH       equ	862	;# 
   603   00035F                     SCANHADRU       equ	863	;# 
   604   000360                     SCANCON0        equ	864	;# 
   605   000361                     SCANTRIG        equ	865	;# 
   606   000362                     IPR0            equ	866	;# 
   607   000363                     IPR1            equ	867	;# 
   608   000364                     IPR2            equ	868	;# 
   609   000365                     IPR3            equ	869	;# 
   610   000366                     IPR4            equ	870	;# 
   611   000367                     IPR5            equ	871	;# 
   612   000368                     IPR6            equ	872	;# 
   613   000369                     IPR7            equ	873	;# 
   614   00036A                     IPR8            equ	874	;# 
   615   00036B                     IPR9            equ	875	;# 
   616   00036C                     IPR10           equ	876	;# 
   617   00036D                     IPR11           equ	877	;# 
   618   00036E                     IPR12           equ	878	;# 
   619   00036F                     IPR13           equ	879	;# 
   620   000370                     IPR14           equ	880	;# 
   621   000371                     IPR15           equ	881	;# 
   622   000373                     STATUS_CSHAD    equ	883	;# 
   623   000374                     WREG_CSHAD      equ	884	;# 
   624   000375                     BSR_CSHAD       equ	885	;# 
   625   000376                     SHADCON         equ	886	;# 
   626   000377                     STATUS_SHAD     equ	887	;# 
   627   000378                     WREG_SHAD       equ	888	;# 
   628   000379                     BSR_SHAD        equ	889	;# 
   629   00037A                     PCLATH_SHAD     equ	890	;# 
   630   00037B                     PCLATU_SHAD     equ	891	;# 
   631   00037C                     FSR0SH          equ	892	;# 
   632   00037C                     FSR0L_SHAD      equ	892	;# 
   633   00037D                     FSR0H_SHAD      equ	893	;# 
   634   00037E                     FSR1SH          equ	894	;# 
   635   00037E                     FSR1L_SHAD      equ	894	;# 
   636   00037F                     FSR1H_SHAD      equ	895	;# 
   637   000380                     FSR2SH          equ	896	;# 
   638   000380                     FSR2L_SHAD      equ	896	;# 
   639   000381                     FSR2H_SHAD      equ	897	;# 
   640   000382                     PRODSH          equ	898	;# 
   641   000382                     PRODL_SHAD      equ	898	;# 
   642   000383                     PRODH_SHAD      equ	899	;# 
   643   0003BC                     CWG1CLK         equ	956	;# 
   644   0003BC                     CWG1CLKCON      equ	956	;# 
   645   0003BD                     CWG1ISM         equ	957	;# 
   646   0003BD                     CWG1DAT         equ	957	;# 
   647   0003BE                     CWG1DBR         equ	958	;# 
   648   0003BF                     CWG1DBF         equ	959	;# 
   649   0003C0                     CWG1CON0        equ	960	;# 
   650   0003C1                     CWG1CON1        equ	961	;# 
   651   0003C2                     CWG1AS0         equ	962	;# 
   652   0003C3                     CWG1AS1         equ	963	;# 
   653   0003C4                     CWG1STR         equ	964	;# 
   654   0003C5                     CWG2CLK         equ	965	;# 
   655   0003C5                     CWG2CLKCON      equ	965	;# 
   656   0003C6                     CWG2ISM         equ	966	;# 
   657   0003C6                     CWG2DAT         equ	966	;# 
   658   0003C7                     CWG2DBR         equ	967	;# 
   659   0003C8                     CWG2DBF         equ	968	;# 
   660   0003C9                     CWG2CON0        equ	969	;# 
   661   0003CA                     CWG2CON1        equ	970	;# 
   662   0003CB                     CWG2AS0         equ	971	;# 
   663   0003CC                     CWG2AS1         equ	972	;# 
   664   0003CD                     CWG2STR         equ	973	;# 
   665   0003CE                     CWG3CLK         equ	974	;# 
   666   0003CE                     CWG3CLKCON      equ	974	;# 
   667   0003CF                     CWG3ISM         equ	975	;# 
   668   0003CF                     CWG3DAT         equ	975	;# 
   669   0003D0                     CWG3DBR         equ	976	;# 
   670   0003D1                     CWG3DBF         equ	977	;# 
   671   0003D2                     CWG3CON0        equ	978	;# 
   672   0003D3                     CWG3CON1        equ	979	;# 
   673   0003D4                     CWG3AS0         equ	980	;# 
   674   0003D5                     CWG3AS1         equ	981	;# 
   675   0003D6                     CWG3STR         equ	982	;# 
   676   0003D7                     FVRCON          equ	983	;# 
   677   0003D8                     ADCPCON         equ	984	;# 
   678   0003D8                     ADCP            equ	984	;# 
   679   0003D9                     ADLTH           equ	985	;# 
   680   0003D9                     ADLTHL          equ	985	;# 
   681   0003DA                     ADLTHH          equ	986	;# 
   682   0003DB                     ADUTH           equ	987	;# 
   683   0003DB                     ADUTHL          equ	987	;# 
   684   0003DC                     ADUTHH          equ	988	;# 
   685   0003DD                     ADERR           equ	989	;# 
   686   0003DD                     ADERRL          equ	989	;# 
   687   0003DE                     ADERRH          equ	990	;# 
   688   0003DF                     ADSTPT          equ	991	;# 
   689   0003DF                     ADSTPTL         equ	991	;# 
   690   0003E0                     ADSTPTH         equ	992	;# 
   691   0003E1                     ADFLTR          equ	993	;# 
   692   0003E1                     ADFLTRL         equ	993	;# 
   693   0003E2                     ADFLTRH         equ	994	;# 
   694   0003E3                     ADACC           equ	995	;# 
   695   0003E3                     ADACCL          equ	995	;# 
   696   0003E4                     ADACCH          equ	996	;# 
   697   0003E5                     ADACCU          equ	997	;# 
   698   0003E6                     ADCNT           equ	998	;# 
   699   0003E7                     ADRPT           equ	999	;# 
   700   0003E8                     ADPREV          equ	1000	;# 
   701   0003E8                     ADPREVL         equ	1000	;# 
   702   0003E9                     ADPREVH         equ	1001	;# 
   703   0003EA                     ADRES           equ	1002	;# 
   704   0003EA                     ADRESL          equ	1002	;# 
   705   0003EB                     ADRESH          equ	1003	;# 
   706   0003EC                     ADPCH           equ	1004	;# 
   707   0003EE                     ADACQ           equ	1006	;# 
   708   0003EE                     ADACQL          equ	1006	;# 
   709   0003EF                     ADACQH          equ	1007	;# 
   710   0003F0                     ADCAP           equ	1008	;# 
   711   0003F1                     ADPRE           equ	1009	;# 
   712   0003F1                     ADPREL          equ	1009	;# 
   713   0003F2                     ADPREH          equ	1010	;# 
   714   0003F3                     ADCON0          equ	1011	;# 
   715   0003F4                     ADCON1          equ	1012	;# 
   716   0003F5                     ADCON2          equ	1013	;# 
   717   0003F6                     ADCON3          equ	1014	;# 
   718   0003F7                     ADSTAT          equ	1015	;# 
   719   0003F8                     ADREF           equ	1016	;# 
   720   0003F9                     ADACT           equ	1017	;# 
   721   0003FA                     ADCLK           equ	1018	;# 
   722   000400                     ANSELA          equ	1024	;# 
   723   000401                     WPUA            equ	1025	;# 
   724   000402                     ODCONA          equ	1026	;# 
   725   000403                     SLRCONA         equ	1027	;# 
   726   000404                     INLVLA          equ	1028	;# 
   727   000405                     IOCAP           equ	1029	;# 
   728   000406                     IOCAN           equ	1030	;# 
   729   000407                     IOCAF           equ	1031	;# 
   730   000408                     ANSELB          equ	1032	;# 
   731   000409                     WPUB            equ	1033	;# 
   732   00040A                     ODCONB          equ	1034	;# 
   733   00040B                     SLRCONB         equ	1035	;# 
   734   00040C                     INLVLB          equ	1036	;# 
   735   00040D                     IOCBP           equ	1037	;# 
   736   00040E                     IOCBN           equ	1038	;# 
   737   00040F                     IOCBF           equ	1039	;# 
   738   000410                     ANSELC          equ	1040	;# 
   739   000411                     WPUC            equ	1041	;# 
   740   000412                     ODCONC          equ	1042	;# 
   741   000413                     SLRCONC         equ	1043	;# 
   742   000414                     INLVLC          equ	1044	;# 
   743   000415                     IOCCP           equ	1045	;# 
   744   000416                     IOCCN           equ	1046	;# 
   745   000417                     IOCCF           equ	1047	;# 
   746   000418                     ANSELD          equ	1048	;# 
   747   000419                     WPUD            equ	1049	;# 
   748   00041A                     ODCOND          equ	1050	;# 
   749   00041B                     SLRCOND         equ	1051	;# 
   750   00041C                     INLVLD          equ	1052	;# 
   751   000420                     ANSELE          equ	1056	;# 
   752   000421                     WPUE            equ	1057	;# 
   753   000422                     ODCONE          equ	1058	;# 
   754   000423                     SLRCONE         equ	1059	;# 
   755   000424                     INLVLE          equ	1060	;# 
   756   000425                     IOCEP           equ	1061	;# 
   757   000426                     IOCEN           equ	1062	;# 
   758   000427                     IOCEF           equ	1063	;# 
   759   000428                     ANSELF          equ	1064	;# 
   760   000429                     WPUF            equ	1065	;# 
   761   00042A                     ODCONF          equ	1066	;# 
   762   00042B                     SLRCONF         equ	1067	;# 
   763   00042C                     INLVLF          equ	1068	;# 
   764   000440                     NCO1ACC         equ	1088	;# 
   765   000440                     NCO1ACCL        equ	1088	;# 
   766   000441                     NCO1ACCH        equ	1089	;# 
   767   000442                     NCO1ACCU        equ	1090	;# 
   768   000443                     NCO1INC         equ	1091	;# 
   769   000443                     NCO1INCL        equ	1091	;# 
   770   000444                     NCO1INCH        equ	1092	;# 
   771   000445                     NCO1INCU        equ	1093	;# 
   772   000446                     NCO1CON         equ	1094	;# 
   773   000447                     NCO1CLK         equ	1095	;# 
   774   000448                     NCO2ACC         equ	1096	;# 
   775   000448                     NCO2ACCL        equ	1096	;# 
   776   000449                     NCO2ACCH        equ	1097	;# 
   777   00044A                     NCO2ACCU        equ	1098	;# 
   778   00044B                     NCO2INC         equ	1099	;# 
   779   00044B                     NCO2INCL        equ	1099	;# 
   780   00044C                     NCO2INCH        equ	1100	;# 
   781   00044D                     NCO2INCU        equ	1101	;# 
   782   00044E                     NCO2CON         equ	1102	;# 
   783   00044F                     NCO2CLK         equ	1103	;# 
   784   000450                     NCO3ACC         equ	1104	;# 
   785   000450                     NCO3ACCL        equ	1104	;# 
   786   000451                     NCO3ACCH        equ	1105	;# 
   787   000452                     NCO3ACCU        equ	1106	;# 
   788   000453                     NCO3INC         equ	1107	;# 
   789   000453                     NCO3INCL        equ	1107	;# 
   790   000454                     NCO3INCH        equ	1108	;# 
   791   000455                     NCO3INCU        equ	1109	;# 
   792   000456                     NCO3CON         equ	1110	;# 
   793   000457                     NCO3CLK         equ	1111	;# 
   794   000459                     IVTLOCK         equ	1113	;# 
   795   00045A                     IVTAD           equ	1114	;# 
   796   00045A                     IVTADL          equ	1114	;# 
   797   00045B                     IVTADH          equ	1115	;# 
   798   00045C                     IVTADU          equ	1116	;# 
   799   00045D                     IVTBASE         equ	1117	;# 
   800   00045D                     IVTBASEL        equ	1117	;# 
   801   00045E                     IVTBASEH        equ	1118	;# 
   802   00045F                     IVTBASEU        equ	1119	;# 
   803   000460                     PWM1ERS         equ	1120	;# 
   804   000461                     PWM1CLK         equ	1121	;# 
   805   000462                     PWM1LDS         equ	1122	;# 
   806   000463                     PWM1PR          equ	1123	;# 
   807   000463                     PWM1PRL         equ	1123	;# 
   808   000464                     PWM1PRH         equ	1124	;# 
   809   000465                     PWM1CPRE        equ	1125	;# 
   810   000466                     PWM1PIPOS       equ	1126	;# 
   811   000467                     PWM1GIR         equ	1127	;# 
   812   000468                     PWM1GIE         equ	1128	;# 
   813   000469                     PWM1CON         equ	1129	;# 
   814   00046A                     PWM1S1CFG       equ	1130	;# 
   815   00046B                     PWM1S1P1        equ	1131	;# 
   816   00046B                     PWM1S1P1L       equ	1131	;# 
   817   00046C                     PWM1S1P1H       equ	1132	;# 
   818   00046D                     PWM1S1P2        equ	1133	;# 
   819   00046D                     PWM1S1P2L       equ	1133	;# 
   820   00046E                     PWM1S1P2H       equ	1134	;# 
   821   00046F                     PWM2ERS         equ	1135	;# 
   822   000470                     PWM2CLK         equ	1136	;# 
   823   000471                     PWM2LDS         equ	1137	;# 
   824   000472                     PWM2PR          equ	1138	;# 
   825   000472                     PWM2PRL         equ	1138	;# 
   826   000473                     PWM2PRH         equ	1139	;# 
   827   000474                     PWM2CPRE        equ	1140	;# 
   828   000475                     PWM2PIPOS       equ	1141	;# 
   829   000476                     PWM2GIR         equ	1142	;# 
   830   000477                     PWM2GIE         equ	1143	;# 
   831   000478                     PWM2CON         equ	1144	;# 
   832   000479                     PWM2S1CFG       equ	1145	;# 
   833   00047A                     PWM2S1P1        equ	1146	;# 
   834   00047A                     PWM2S1P1L       equ	1146	;# 
   835   00047B                     PWM2S1P1H       equ	1147	;# 
   836   00047C                     PWM2S1P2        equ	1148	;# 
   837   00047C                     PWM2S1P2L       equ	1148	;# 
   838   00047D                     PWM2S1P2H       equ	1149	;# 
   839   00047E                     PWM3ERS         equ	1150	;# 
   840   00047F                     PWM3CLK         equ	1151	;# 
   841   000480                     PWM3LDS         equ	1152	;# 
   842   000481                     PWM3PR          equ	1153	;# 
   843   000481                     PWM3PRL         equ	1153	;# 
   844   000482                     PWM3PRH         equ	1154	;# 
   845   000483                     PWM3CPRE        equ	1155	;# 
   846   000484                     PWM3PIPOS       equ	1156	;# 
   847   000485                     PWM3GIR         equ	1157	;# 
   848   000486                     PWM3GIE         equ	1158	;# 
   849   000487                     PWM3CON         equ	1159	;# 
   850   000488                     PWM3S1CFG       equ	1160	;# 
   851   000489                     PWM3S1P1        equ	1161	;# 
   852   000489                     PWM3S1P1L       equ	1161	;# 
   853   00048A                     PWM3S1P1H       equ	1162	;# 
   854   00048B                     PWM3S1P2        equ	1163	;# 
   855   00048B                     PWM3S1P2L       equ	1163	;# 
   856   00048C                     PWM3S1P2H       equ	1164	;# 
   857   00049C                     PWMLOAD         equ	1180	;# 
   858   00049D                     PWMEN           equ	1181	;# 
   859   00049E                     PIE0            equ	1182	;# 
   860   00049F                     PIE1            equ	1183	;# 
   861   0004A0                     PIE2            equ	1184	;# 
   862   0004A1                     PIE3            equ	1185	;# 
   863   0004A2                     PIE4            equ	1186	;# 
   864   0004A3                     PIE5            equ	1187	;# 
   865   0004A4                     PIE6            equ	1188	;# 
   866   0004A5                     PIE7            equ	1189	;# 
   867   0004A6                     PIE8            equ	1190	;# 
   868   0004A7                     PIE9            equ	1191	;# 
   869   0004A8                     PIE10           equ	1192	;# 
   870   0004A9                     PIE11           equ	1193	;# 
   871   0004AA                     PIE12           equ	1194	;# 
   872   0004AB                     PIE13           equ	1195	;# 
   873   0004AC                     PIE14           equ	1196	;# 
   874   0004AD                     PIE15           equ	1197	;# 
   875   0004AE                     PIR0            equ	1198	;# 
   876   0004AF                     PIR1            equ	1199	;# 
   877   0004B0                     PIR2            equ	1200	;# 
   878   0004B1                     PIR3            equ	1201	;# 
   879   0004B2                     PIR4            equ	1202	;# 
   880   0004B3                     PIR5            equ	1203	;# 
   881   0004B4                     PIR6            equ	1204	;# 
   882   0004B5                     PIR7            equ	1205	;# 
   883   0004B6                     PIR8            equ	1206	;# 
   884   0004B7                     PIR9            equ	1207	;# 
   885   0004B8                     PIR10           equ	1208	;# 
   886   0004B9                     PIR11           equ	1209	;# 
   887   0004BA                     PIR12           equ	1210	;# 
   888   0004BB                     PIR13           equ	1211	;# 
   889   0004BC                     PIR14           equ	1212	;# 
   890   0004BD                     PIR15           equ	1213	;# 
   891   0004BE                     LATA            equ	1214	;# 
   892   0004BF                     LATB            equ	1215	;# 
   893   0004C0                     LATC            equ	1216	;# 
   894   0004C1                     LATD            equ	1217	;# 
   895   0004C2                     LATE            equ	1218	;# 
   896   0004C3                     LATF            equ	1219	;# 
   897   0004C6                     TRISA           equ	1222	;# 
   898   0004C7                     TRISB           equ	1223	;# 
   899   0004C8                     TRISC           equ	1224	;# 
   900   0004C9                     TRISD           equ	1225	;# 
   901   0004CA                     TRISE           equ	1226	;# 
   902   0004CB                     TRISF           equ	1227	;# 
   903   0004CE                     PORTA           equ	1230	;# 
   904   0004CF                     PORTB           equ	1231	;# 
   905   0004D0                     PORTC           equ	1232	;# 
   906   0004D1                     PORTD           equ	1233	;# 
   907   0004D2                     PORTE           equ	1234	;# 
   908   0004D3                     PORTF           equ	1235	;# 
   909   0004D6                     INTCON0         equ	1238	;# 
   910   0004D7                     INTCON1         equ	1239	;# 
   911   0004D8                     STATUS          equ	1240	;# 
   912   0004D9                     FSR2            equ	1241	;# 
   913   0004D9                     FSR2L           equ	1241	;# 
   914   0004DA                     FSR2H           equ	1242	;# 
   915   0004DB                     PLUSW2          equ	1243	;# 
   916   0004DC                     PREINC2         equ	1244	;# 
   917   0004DD                     POSTDEC2        equ	1245	;# 
   918   0004DE                     POSTINC2        equ	1246	;# 
   919   0004DF                     INDF2           equ	1247	;# 
   920   0004E0                     BSR             equ	1248	;# 
   921   0004E1                     FSR1            equ	1249	;# 
   922   0004E1                     FSR1L           equ	1249	;# 
   923   0004E2                     FSR1H           equ	1250	;# 
   924   0004E3                     PLUSW1          equ	1251	;# 
   925   0004E4                     PREINC1         equ	1252	;# 
   926   0004E5                     POSTDEC1        equ	1253	;# 
   927   0004E6                     POSTINC1        equ	1254	;# 
   928   0004E7                     INDF1           equ	1255	;# 
   929   0004E8                     WREG            equ	1256	;# 
   930   0004E9                     FSR0            equ	1257	;# 
   931   0004E9                     FSR0L           equ	1257	;# 
   932   0004EA                     FSR0H           equ	1258	;# 
   933   0004EB                     PLUSW0          equ	1259	;# 
   934   0004EC                     PREINC0         equ	1260	;# 
   935   0004ED                     POSTDEC0        equ	1261	;# 
   936   0004EE                     POSTINC0        equ	1262	;# 
   937   0004EF                     INDF0           equ	1263	;# 
   938   0004F0                     PCON0           equ	1264	;# 
   939   0004F1                     PCON1           equ	1265	;# 
   940   0004F2                     CPUDOZE         equ	1266	;# 
   941   0004F3                     PROD            equ	1267	;# 
   942   0004F3                     PRODL           equ	1267	;# 
   943   0004F4                     PRODH           equ	1268	;# 
   944   0004F5                     TABLAT          equ	1269	;# 
   945   0004F6                     TBLPTR          equ	1270	;# 
   946   0004F6                     TBLPTRL         equ	1270	;# 
   947   0004F7                     TBLPTRH         equ	1271	;# 
   948   0004F8                     TBLPTRU         equ	1272	;# 
   949   0004F9                     PCLAT           equ	1273	;# 
   950   0004F9                     PCL             equ	1273	;# 
   951   0004FA                     PCLATH          equ	1274	;# 
   952   0004FB                     PCLATU          equ	1275	;# 
   953   0004FC                     STKPTR          equ	1276	;# 
   954   0004FD                     TOS             equ	1277	;# 
   955   0004FD                     TOSL            equ	1277	;# 
   956   0004FE                     TOSH            equ	1278	;# 
   957   0004FF                     TOSU            equ	1279	;# 
   958   000039                     CLKRCON         equ	57	;# 
   959   00003A                     CLKRCLK         equ	58	;# 
   960   000040                     NVMCON0         equ	64	;# 
   961   000041                     NVMCON1         equ	65	;# 
   962   000042                     NVMLOCK         equ	66	;# 
   963   000043                     NVMADR          equ	67	;# 
   964   000043                     NVMADRL         equ	67	;# 
   965   000044                     NVMADRH         equ	68	;# 
   966   000045                     NVMADRU         equ	69	;# 
   967   000046                     NVMDAT          equ	70	;# 
   968   000046                     NVMDATL         equ	70	;# 
   969   000047                     NVMDATH         equ	71	;# 
   970   000048                     VREGCON         equ	72	;# 
   971   000049                     BORCON          equ	73	;# 
   972   00004A                     HLVDCON0        equ	74	;# 
   973   00004B                     HLVDCON1        equ	75	;# 
   974   00004C                     ZCDCON          equ	76	;# 
   975   000060                     PMD0            equ	96	;# 
   976   000061                     PMD1            equ	97	;# 
   977   000063                     PMD3            equ	99	;# 
   978   000064                     PMD4            equ	100	;# 
   979   000065                     PMD5            equ	101	;# 
   980   000066                     PMD6            equ	102	;# 
   981   000067                     PMD7            equ	103	;# 
   982   000068                     PMD8            equ	104	;# 
   983   00006A                     MD1CON0         equ	106	;# 
   984   00006B                     MD1CON1         equ	107	;# 
   985   00006C                     MD1SRC          equ	108	;# 
   986   00006D                     MD1CARL         equ	109	;# 
   987   00006E                     MD1CARH         equ	110	;# 
   988   00006F                     CMOUT           equ	111	;# 
   989   000070                     CM1CON0         equ	112	;# 
   990   000071                     CM1CON1         equ	113	;# 
   991   000072                     CM1NCH          equ	114	;# 
   992   000073                     CM1PCH          equ	115	;# 
   993   000074                     CM2CON0         equ	116	;# 
   994   000075                     CM2CON1         equ	117	;# 
   995   000076                     CM2NCH          equ	118	;# 
   996   000077                     CM2PCH          equ	119	;# 
   997   000078                     WDTCON0         equ	120	;# 
   998   000079                     WDTCON1         equ	121	;# 
   999   00007A                     WDTPS           equ	122	;# 
  1000   00007A                     WDTPSL          equ	122	;# 
  1001   00007B                     WDTPSH          equ	123	;# 
  1002   00007C                     WDTTMR          equ	124	;# 
  1003   00007D                     DAC1DAT         equ	125	;# 
  1004   00007D                     DAC1DATL        equ	125	;# 
  1005   00007F                     DAC1CON         equ	127	;# 
  1006   000080                     SPI1RXB         equ	128	;# 
  1007   000081                     SPI1TXB         equ	129	;# 
  1008   000082                     SPI1TCNT        equ	130	;# 
  1009   000082                     SPI1TCNTL       equ	130	;# 
  1010   000083                     SPI1TCNTH       equ	131	;# 
  1011   000084                     SPI1CON0        equ	132	;# 
  1012   000085                     SPI1CON1        equ	133	;# 
  1013   000086                     SPI1CON2        equ	134	;# 
  1014   000087                     SPI1STATUS      equ	135	;# 
  1015   000088                     SPI1TWIDTH      equ	136	;# 
  1016   000089                     SPI1BAUD        equ	137	;# 
  1017   00008A                     SPI1INTF        equ	138	;# 
  1018   00008B                     SPI1INTE        equ	139	;# 
  1019   00008C                     SPI1CLK         equ	140	;# 
  1020   00008D                     SPI2RXB         equ	141	;# 
  1021   00008E                     SPI2TXB         equ	142	;# 
  1022   00008F                     SPI2TCNT        equ	143	;# 
  1023   00008F                     SPI2TCNTL       equ	143	;# 
  1024   000090                     SPI2TCNTH       equ	144	;# 
  1025   000091                     SPI2CON0        equ	145	;# 
  1026   000092                     SPI2CON1        equ	146	;# 
  1027   000093                     SPI2CON2        equ	147	;# 
  1028   000094                     SPI2STATUS      equ	148	;# 
  1029   000095                     SPI2TWIDTH      equ	149	;# 
  1030   000096                     SPI2BAUD        equ	150	;# 
  1031   000097                     SPI2INTF        equ	151	;# 
  1032   000098                     SPI2INTE        equ	152	;# 
  1033   000099                     SPI2CLK         equ	153	;# 
  1034   0000AC                     ACTCON          equ	172	;# 
  1035   0000AD                     OSCCON1         equ	173	;# 
  1036   0000AE                     OSCCON2         equ	174	;# 
  1037   0000AF                     OSCCON3         equ	175	;# 
  1038   0000B0                     OSCTUNE         equ	176	;# 
  1039   0000B1                     OSCFRQ          equ	177	;# 
  1040   0000B1                     OSCFREQ         equ	177	;# 
  1041   0000B2                     OSCSTAT         equ	178	;# 
  1042   0000B2                     OSCSTAT1        equ	178	;# 
  1043   0000B3                     OSCEN           equ	179	;# 
  1044   0000B4                     PRLOCK          equ	180	;# 
  1045   0000B5                     SCANPR          equ	181	;# 
  1046   0000B6                     DMA1PR          equ	182	;# 
  1047   0000B7                     DMA2PR          equ	183	;# 
  1048   0000B8                     DMA3PR          equ	184	;# 
  1049   0000B9                     DMA4PR          equ	185	;# 
  1050   0000BA                     DMA5PR          equ	186	;# 
  1051   0000BB                     DMA6PR          equ	187	;# 
  1052   0000BE                     MAINPR          equ	190	;# 
  1053   0000BF                     ISRPR           equ	191	;# 
  1054   0000D4                     CLCDATA         equ	212	;# 
  1055   0000D5                     CLCSELECT       equ	213	;# 
  1056   0000D6                     CLCnCON         equ	214	;# 
  1057   0000D7                     CLCnPOL         equ	215	;# 
  1058   0000D8                     CLCnSEL0        equ	216	;# 
  1059   0000D9                     CLCnSEL1        equ	217	;# 
  1060   0000DA                     CLCnSEL2        equ	218	;# 
  1061   0000DB                     CLCnSEL3        equ	219	;# 
  1062   0000DC                     CLCnGLS0        equ	220	;# 
  1063   0000DD                     CLCnGLS1        equ	221	;# 
  1064   0000DE                     CLCnGLS2        equ	222	;# 
  1065   0000DF                     CLCnGLS3        equ	223	;# 
  1066   0000E8                     DMASELECT       equ	232	;# 
  1067   0000E9                     DMAnBUF         equ	233	;# 
  1068   0000EA                     DMAnDCNT        equ	234	;# 
  1069   0000EA                     DMAnDCNTL       equ	234	;# 
  1070   0000EB                     DMAnDCNTH       equ	235	;# 
  1071   0000EC                     DMAnDPTR        equ	236	;# 
  1072   0000EC                     DMAnDPTRL       equ	236	;# 
  1073   0000ED                     DMAnDPTRH       equ	237	;# 
  1074   0000EE                     DMAnDSZ         equ	238	;# 
  1075   0000EE                     DMAnDSZL        equ	238	;# 
  1076   0000EF                     DMAnDSZH        equ	239	;# 
  1077   0000F0                     DMAnDSA         equ	240	;# 
  1078   0000F0                     DMAnDSAL        equ	240	;# 
  1079   0000F1                     DMAnDSAH        equ	241	;# 
  1080   0000F2                     DMAnSCNT        equ	242	;# 
  1081   0000F2                     DMAnSCNTL       equ	242	;# 
  1082   0000F3                     DMAnSCNTH       equ	243	;# 
  1083   0000F4                     DMAnSPTR        equ	244	;# 
  1084   0000F4                     DMAnSPTRL       equ	244	;# 
  1085   0000F5                     DMAnSPTRH       equ	245	;# 
  1086   0000F6                     DMAnSPTRU       equ	246	;# 
  1087   0000F7                     DMAnSSZ         equ	247	;# 
  1088   0000F7                     DMAnSSZL        equ	247	;# 
  1089   0000F8                     DMAnSSZH        equ	248	;# 
  1090   0000F9                     DMAnSSA         equ	249	;# 
  1091   0000F9                     DMAnSSAL        equ	249	;# 
  1092   0000FA                     DMAnSSAH        equ	250	;# 
  1093   0000FB                     DMAnSSAU        equ	251	;# 
  1094   0000FC                     DMAnCON0        equ	252	;# 
  1095   0000FD                     DMAnCON1        equ	253	;# 
  1096   0000FE                     DMAnAIRQ        equ	254	;# 
  1097   0000FF                     DMAnSIRQ        equ	255	;# 
  1098   000200                     PPSLOCK         equ	512	;# 
  1099   000201                     RA0PPS          equ	513	;# 
  1100   000202                     RA1PPS          equ	514	;# 
  1101   000203                     RA2PPS          equ	515	;# 
  1102   000204                     RA3PPS          equ	516	;# 
  1103   000205                     RA4PPS          equ	517	;# 
  1104   000206                     RA5PPS          equ	518	;# 
  1105   000207                     RA6PPS          equ	519	;# 
  1106   000208                     RA7PPS          equ	520	;# 
  1107   000209                     RB0PPS          equ	521	;# 
  1108   00020A                     RB1PPS          equ	522	;# 
  1109   00020B                     RB2PPS          equ	523	;# 
  1110   00020C                     RB3PPS          equ	524	;# 
  1111   00020D                     RB4PPS          equ	525	;# 
  1112   00020E                     RB5PPS          equ	526	;# 
  1113   00020F                     RB6PPS          equ	527	;# 
  1114   000210                     RB7PPS          equ	528	;# 
  1115   000211                     RC0PPS          equ	529	;# 
  1116   000212                     RC1PPS          equ	530	;# 
  1117   000213                     RC2PPS          equ	531	;# 
  1118   000214                     RC3PPS          equ	532	;# 
  1119   000215                     RC4PPS          equ	533	;# 
  1120   000216                     RC5PPS          equ	534	;# 
  1121   000217                     RC6PPS          equ	535	;# 
  1122   000218                     RC7PPS          equ	536	;# 
  1123   000219                     RD0PPS          equ	537	;# 
  1124   00021A                     RD1PPS          equ	538	;# 
  1125   00021B                     RD2PPS          equ	539	;# 
  1126   00021C                     RD3PPS          equ	540	;# 
  1127   00021D                     RD4PPS          equ	541	;# 
  1128   00021E                     RD5PPS          equ	542	;# 
  1129   00021F                     RD6PPS          equ	543	;# 
  1130   000220                     RD7PPS          equ	544	;# 
  1131   000221                     RE0PPS          equ	545	;# 
  1132   000222                     RE1PPS          equ	546	;# 
  1133   000223                     RE2PPS          equ	547	;# 
  1134   000229                     RF0PPS          equ	553	;# 
  1135   00022A                     RF1PPS          equ	554	;# 
  1136   00022B                     RF2PPS          equ	555	;# 
  1137   00022C                     RF3PPS          equ	556	;# 
  1138   00022D                     RF4PPS          equ	557	;# 
  1139   00022E                     RF5PPS          equ	558	;# 
  1140   00022F                     RF6PPS          equ	559	;# 
  1141   000230                     RF7PPS          equ	560	;# 
  1142   00023E                     INT0PPS         equ	574	;# 
  1143   00023F                     INT1PPS         equ	575	;# 
  1144   000240                     INT2PPS         equ	576	;# 
  1145   000241                     T0CKIPPS        equ	577	;# 
  1146   000242                     T1CKIPPS        equ	578	;# 
  1147   000243                     T1GPPS          equ	579	;# 
  1148   000244                     T3CKIPPS        equ	580	;# 
  1149   000245                     T3GPPS          equ	581	;# 
  1150   000246                     T5CKIPPS        equ	582	;# 
  1151   000247                     T5GPPS          equ	583	;# 
  1152   000248                     T2INPPS         equ	584	;# 
  1153   000249                     T4INPPS         equ	585	;# 
  1154   00024A                     T6INPPS         equ	586	;# 
  1155   00024F                     CCP1PPS         equ	591	;# 
  1156   000250                     CCP2PPS         equ	592	;# 
  1157   000251                     CCP3PPS         equ	593	;# 
  1158   000253                     PWM1ERSPPS      equ	595	;# 
  1159   000254                     PWM2ERSPPS      equ	596	;# 
  1160   000255                     PWM3ERSPPS      equ	597	;# 
  1161   000257                     PWMIN0PPS       equ	599	;# 
  1162   000258                     PWMIN1PPS       equ	600	;# 
  1163   000259                     SMT1WINPPS      equ	601	;# 
  1164   00025A                     SMT1SIGPPS      equ	602	;# 
  1165   00025B                     CWG1PPS         equ	603	;# 
  1166   00025B                     CWG1INPPS       equ	603	;# 
  1167   00025C                     CWG2PPS         equ	604	;# 
  1168   00025C                     CWG2INPPS       equ	604	;# 
  1169   00025D                     CWG3PPS         equ	605	;# 
  1170   00025D                     CWG3INPPS       equ	605	;# 
  1171   00025E                     MD1CARLPPS      equ	606	;# 
  1172   00025E                     MDCARLPPS       equ	606	;# 
  1173   00025F                     MD1CARHPPS      equ	607	;# 
  1174   00025F                     MDCARHPPS       equ	607	;# 
  1175   000260                     MD1SRCPPS       equ	608	;# 
  1176   000260                     MDSRCPPS        equ	608	;# 
  1177   000261                     CLCIN0PPS       equ	609	;# 
  1178   000262                     CLCIN1PPS       equ	610	;# 
  1179   000263                     CLCIN2PPS       equ	611	;# 
  1180   000264                     CLCIN3PPS       equ	612	;# 
  1181   000265                     CLCIN4PPS       equ	613	;# 
  1182   000266                     CLCIN5PPS       equ	614	;# 
  1183   000267                     CLCIN6PPS       equ	615	;# 
  1184   000268                     CLCIN7PPS       equ	616	;# 
  1185   000269                     ADACTPPS        equ	617	;# 
  1186   00026A                     SPI1SCKPPS      equ	618	;# 
  1187   00026B                     SPI1SDIPPS      equ	619	;# 
  1188   00026C                     SPI1SSPPS       equ	620	;# 
  1189   00026D                     SPI2SCKPPS      equ	621	;# 
  1190   00026E                     SPI2SDIPPS      equ	622	;# 
  1191   00026F                     SPI2SSPPS       equ	623	;# 
  1192   000270                     I2C1SDAPPS      equ	624	;# 
  1193   000271                     I2C1SCLPPS      equ	625	;# 
  1194   000272                     U1RXPPS         equ	626	;# 
  1195   000273                     U1CTSPPS        equ	627	;# 
  1196   000274                     U2RXPPS         equ	628	;# 
  1197   000275                     U2CTSPPS        equ	629	;# 
  1198   000276                     U3RXPPS         equ	630	;# 
  1199   000277                     U3CTSPPS        equ	631	;# 
  1200   000278                     U4RXPPS         equ	632	;# 
  1201   000279                     U4CTSPPS        equ	633	;# 
  1202   00027A                     U5RXPPS         equ	634	;# 
  1203   00027B                     U5CTSPPS        equ	635	;# 
  1204   000286                     RC4I2C          equ	646	;# 
  1205   000287                     RC3I2C          equ	647	;# 
  1206   000288                     RB2I2C          equ	648	;# 
  1207   000289                     RB1I2C          equ	649	;# 
  1208   00028B                     I2C1RXB         equ	651	;# 
  1209   00028C                     I2C1TXB         equ	652	;# 
  1210   00028D                     I2C1CNT         equ	653	;# 
  1211   00028E                     I2C1ADB0        equ	654	;# 
  1212   00028F                     I2C1ADB1        equ	655	;# 
  1213   000290                     I2C1ADR0        equ	656	;# 
  1214   000291                     I2C1ADR1        equ	657	;# 
  1215   000292                     I2C1ADR2        equ	658	;# 
  1216   000293                     I2C1ADR3        equ	659	;# 
  1217   000294                     I2C1CON0        equ	660	;# 
  1218   000295                     I2C1CON1        equ	661	;# 
  1219   000296                     I2C1CON2        equ	662	;# 
  1220   000297                     I2C1ERR         equ	663	;# 
  1221   000298                     I2C1STAT0       equ	664	;# 
  1222   000299                     I2C1STAT1       equ	665	;# 
  1223   00029A                     I2C1PIR         equ	666	;# 
  1224   00029B                     I2C1PIE         equ	667	;# 
  1225   00029C                     I2C1CLK         equ	668	;# 
  1226   00029D                     I2C1BTO         equ	669	;# 
  1227   0002A1                     U1RXB           equ	673	;# 
  1228   0002A1                     U1RXBL          equ	673	;# 
  1229   0002A2                     U1RXCHK         equ	674	;# 
  1230   0002A3                     U1TXB           equ	675	;# 
  1231   0002A3                     U1TXBL          equ	675	;# 
  1232   0002A4                     U1TXCHK         equ	676	;# 
  1233   0002A5                     U1P1            equ	677	;# 
  1234   0002A5                     U1P1L           equ	677	;# 
  1235   0002A6                     U1P1H           equ	678	;# 
  1236   0002A7                     U1P2            equ	679	;# 
  1237   0002A7                     U1P2L           equ	679	;# 
  1238   0002A8                     U1P2H           equ	680	;# 
  1239   0002A9                     U1P3            equ	681	;# 
  1240   0002A9                     U1P3L           equ	681	;# 
  1241   0002AA                     U1P3H           equ	682	;# 
  1242   0002AB                     U1CON0          equ	683	;# 
  1243   0002AC                     U1CON1          equ	684	;# 
  1244   0002AD                     U1CON2          equ	685	;# 
  1245   0002AE                     U1BRG           equ	686	;# 
  1246   0002AE                     U1BRGL          equ	686	;# 
  1247   0002AF                     U1BRGH          equ	687	;# 
  1248   0002B0                     U1FIFO          equ	688	;# 
  1249   0002B1                     U1UIR           equ	689	;# 
  1250   0002B2                     U1ERRIR         equ	690	;# 
  1251   0002B3                     U1ERRIE         equ	691	;# 
  1252   0002B4                     U2RXB           equ	692	;# 
  1253   0002B4                     U2RXBL          equ	692	;# 
  1254   0002B6                     U2TXB           equ	694	;# 
  1255   0002B6                     U2TXBL          equ	694	;# 
  1256   0002B8                     U2P1            equ	696	;# 
  1257   0002B8                     U2P1L           equ	696	;# 
  1258   0002BA                     U2P2            equ	698	;# 
  1259   0002BA                     U2P2L           equ	698	;# 
  1260   0002BC                     U2P3            equ	700	;# 
  1261   0002BC                     U2P3L           equ	700	;# 
  1262   0002BE                     U2CON0          equ	702	;# 
  1263   0002BF                     U2CON1          equ	703	;# 
  1264   0002C0                     U2CON2          equ	704	;# 
  1265   0002C1                     U2BRG           equ	705	;# 
  1266   0002C1                     U2BRGL          equ	705	;# 
  1267   0002C2                     U2BRGH          equ	706	;# 
  1268   0002C3                     U2FIFO          equ	707	;# 
  1269   0002C4                     U2UIR           equ	708	;# 
  1270   0002C5                     U2ERRIR         equ	709	;# 
  1271   0002C6                     U2ERRIE         equ	710	;# 
  1272   0002C7                     U3RXB           equ	711	;# 
  1273   0002C7                     U3RXBL          equ	711	;# 
  1274   0002C9                     U3TXB           equ	713	;# 
  1275   0002C9                     U3TXBL          equ	713	;# 
  1276   0002CB                     U3P1            equ	715	;# 
  1277   0002CB                     U3P1L           equ	715	;# 
  1278   0002CD                     U3P2            equ	717	;# 
  1279   0002CD                     U3P2L           equ	717	;# 
  1280   0002CF                     U3P3            equ	719	;# 
  1281   0002CF                     U3P3L           equ	719	;# 
  1282   0002D1                     U3CON0          equ	721	;# 
  1283   0002D2                     U3CON1          equ	722	;# 
  1284   0002D3                     U3CON2          equ	723	;# 
  1285   0002D4                     U3BRG           equ	724	;# 
  1286   0002D4                     U3BRGL          equ	724	;# 
  1287   0002D5                     U3BRGH          equ	725	;# 
  1288   0002D6                     U3FIFO          equ	726	;# 
  1289   0002D7                     U3UIR           equ	727	;# 
  1290   0002D8                     U3ERRIR         equ	728	;# 
  1291   0002D9                     U3ERRIE         equ	729	;# 
  1292   0002DA                     U4RXB           equ	730	;# 
  1293   0002DA                     U4RXBL          equ	730	;# 
  1294   0002DC                     U4TXB           equ	732	;# 
  1295   0002DC                     U4TXBL          equ	732	;# 
  1296   0002DE                     U4P1            equ	734	;# 
  1297   0002DE                     U4P1L           equ	734	;# 
  1298   0002E0                     U4P2            equ	736	;# 
  1299   0002E0                     U4P2L           equ	736	;# 
  1300   0002E2                     U4P3            equ	738	;# 
  1301   0002E2                     U4P3L           equ	738	;# 
  1302   0002E4                     U4CON0          equ	740	;# 
  1303   0002E5                     U4CON1          equ	741	;# 
  1304   0002E6                     U4CON2          equ	742	;# 
  1305   0002E7                     U4BRG           equ	743	;# 
  1306   0002E7                     U4BRGL          equ	743	;# 
  1307   0002E8                     U4BRGH          equ	744	;# 
  1308   0002E9                     U4FIFO          equ	745	;# 
  1309   0002EA                     U4UIR           equ	746	;# 
  1310   0002EB                     U4ERRIR         equ	747	;# 
  1311   0002EC                     U4ERRIE         equ	748	;# 
  1312   0002ED                     U5RXB           equ	749	;# 
  1313   0002ED                     U5RXBL          equ	749	;# 
  1314   0002EF                     U5TXB           equ	751	;# 
  1315   0002EF                     U5TXBL          equ	751	;# 
  1316   0002F1                     U5P1            equ	753	;# 
  1317   0002F1                     U5P1L           equ	753	;# 
  1318   0002F3                     U5P2            equ	755	;# 
  1319   0002F3                     U5P2L           equ	755	;# 
  1320   0002F5                     U5P3            equ	757	;# 
  1321   0002F5                     U5P3L           equ	757	;# 
  1322   0002F7                     U5CON0          equ	759	;# 
  1323   0002F8                     U5CON1          equ	760	;# 
  1324   0002F9                     U5CON2          equ	761	;# 
  1325   0002FA                     U5BRG           equ	762	;# 
  1326   0002FA                     U5BRGL          equ	762	;# 
  1327   0002FB                     U5BRGH          equ	763	;# 
  1328   0002FC                     U5FIFO          equ	764	;# 
  1329   0002FD                     U5UIR           equ	765	;# 
  1330   0002FE                     U5ERRIR         equ	766	;# 
  1331   0002FF                     U5ERRIE         equ	767	;# 
  1332   000300                     SMT1TMR         equ	768	;# 
  1333   000300                     SMT1TMRL        equ	768	;# 
  1334   000301                     SMT1TMRH        equ	769	;# 
  1335   000302                     SMT1TMRU        equ	770	;# 
  1336   000303                     SMT1CPR         equ	771	;# 
  1337   000303                     SMT1CPRL        equ	771	;# 
  1338   000304                     SMT1CPRH        equ	772	;# 
  1339   000305                     SMT1CPRU        equ	773	;# 
  1340   000306                     SMT1CPW         equ	774	;# 
  1341   000306                     SMT1CPWL        equ	774	;# 
  1342   000307                     SMT1CPWH        equ	775	;# 
  1343   000308                     SMT1CPWU        equ	776	;# 
  1344   000309                     SMT1PR          equ	777	;# 
  1345   000309                     SMT1PRL         equ	777	;# 
  1346   00030A                     SMT1PRH         equ	778	;# 
  1347   00030B                     SMT1PRU         equ	779	;# 
  1348   00030C                     SMT1CON0        equ	780	;# 
  1349   00030D                     SMT1CON1        equ	781	;# 
  1350   00030E                     SMT1STAT        equ	782	;# 
  1351   00030F                     SMT1CLK         equ	783	;# 
  1352   000310                     SMT1SIG         equ	784	;# 
  1353   000311                     SMT1WIN         equ	785	;# 
  1354   000318                     TMR0L           equ	792	;# 
  1355   000318                     TMR0            equ	792	;# 
  1356   000319                     TMR0H           equ	793	;# 
  1357   000319                     PR0             equ	793	;# 
  1358   00031A                     T0CON0          equ	794	;# 
  1359   00031B                     T0CON1          equ	795	;# 
  1360   00031C                     TMR1            equ	796	;# 
  1361   00031C                     TMR1L           equ	796	;# 
  1362   00031D                     TMR1H           equ	797	;# 
  1363   00031E                     T1CON           equ	798	;# 
  1364   00031E                     TMR1CON         equ	798	;# 
  1365   00031F                     T1GCON          equ	799	;# 
  1366   00031F                     TMR1GCON        equ	799	;# 
  1367   000320                     T1GATE          equ	800	;# 
  1368   000320                     TMR1GATE        equ	800	;# 
  1369   000321                     T1CLK           equ	801	;# 
  1370   000321                     TMR1CLK         equ	801	;# 
  1371   000321                     PR1             equ	801	;# 
  1372   000322                     T2TMR           equ	802	;# 
  1373   000322                     TMR2            equ	802	;# 
  1374   000323                     T2PR            equ	803	;# 
  1375   000323                     PR2             equ	803	;# 
  1376   000324                     T2CON           equ	804	;# 
  1377   000325                     T2HLT           equ	805	;# 
  1378   000326                     T2CLKCON        equ	806	;# 
  1379   000326                     T2CLK           equ	806	;# 
  1380   000327                     T2RST           equ	807	;# 
  1381   000328                     TMR3            equ	808	;# 
  1382   000328                     TMR3L           equ	808	;# 
  1383   000329                     TMR3H           equ	809	;# 
  1384   00032A                     T3CON           equ	810	;# 
  1385   00032A                     TMR3CON         equ	810	;# 
  1386   00032B                     T3GCON          equ	811	;# 
  1387   00032B                     TMR3GCON        equ	811	;# 
  1388   00032C                     T3GATE          equ	812	;# 
  1389   00032C                     TMR3GATE        equ	812	;# 
  1390   00032D                     T3CLK           equ	813	;# 
  1391   00032D                     TMR3CLK         equ	813	;# 
  1392   00032D                     PR3             equ	813	;# 
  1393   00032E                     T4TMR           equ	814	;# 
  1394   00032E                     TMR4            equ	814	;# 
  1395   00032F                     T4PR            equ	815	;# 
  1396   00032F                     PR4             equ	815	;# 
  1397   000330                     T4CON           equ	816	;# 
  1398   000331                     T4HLT           equ	817	;# 
  1399   000332                     T4CLKCON        equ	818	;# 
  1400   000332                     T4CLK           equ	818	;# 
  1401   000333                     T4RST           equ	819	;# 
  1402   000334                     TMR5            equ	820	;# 
  1403   000334                     TMR5L           equ	820	;# 
  1404   000335                     TMR5H           equ	821	;# 
  1405   000336                     T5CON           equ	822	;# 
  1406   000336                     TMR5CON         equ	822	;# 
  1407   000337                     T5GCON          equ	823	;# 
  1408   000337                     TMR5GCON        equ	823	;# 
  1409   000338                     T5GATE          equ	824	;# 
  1410   000338                     TMR5GATE        equ	824	;# 
  1411   000339                     T5CLK           equ	825	;# 
  1412   000339                     TMR5CLK         equ	825	;# 
  1413   000339                     PR5             equ	825	;# 
  1414   00033A                     T6TMR           equ	826	;# 
  1415   00033A                     TMR6            equ	826	;# 
  1416   00033B                     T6PR            equ	827	;# 
  1417   00033B                     PR6             equ	827	;# 
  1418   00033C                     T6CON           equ	828	;# 
  1419   00033D                     T6HLT           equ	829	;# 
  1420   00033E                     T6CLKCON        equ	830	;# 
  1421   00033E                     T6CLK           equ	830	;# 
  1422   00033F                     T6RST           equ	831	;# 
  1423   000340                     CCPR1           equ	832	;# 
  1424   000340                     CCPR1L          equ	832	;# 
  1425   000341                     CCPR1H          equ	833	;# 
  1426   000342                     CCP1CON         equ	834	;# 
  1427   000343                     CCP1CAP         equ	835	;# 
  1428   000344                     CCPR2           equ	836	;# 
  1429   000344                     CCPR2L          equ	836	;# 
  1430   000345                     CCPR2H          equ	837	;# 
  1431   000346                     CCP2CON         equ	838	;# 
  1432   000347                     CCP2CAP         equ	839	;# 
  1433   000348                     CCPR3           equ	840	;# 
  1434   000348                     CCPR3L          equ	840	;# 
  1435   000349                     CCPR3H          equ	841	;# 
  1436   00034A                     CCP3CON         equ	842	;# 
  1437   00034B                     CCP3CAP         equ	843	;# 
  1438   00034C                     CCPTMRS0        equ	844	;# 
  1439   00034F                     CRCDATA         equ	847	;# 
  1440   00034F                     CRCDATL         equ	847	;# 
  1441   000350                     CRCDATH         equ	848	;# 
  1442   000351                     CRCACC          equ	849	;# 
  1443   000351                     CRCACCL         equ	849	;# 
  1444   000352                     CRCACCH         equ	850	;# 
  1445   000353                     CRCSHFT         equ	851	;# 
  1446   000353                     CRCSHIFTL       equ	851	;# 
  1447   000354                     CRCSHIFTH       equ	852	;# 
  1448   000355                     CRCXOR          equ	853	;# 
  1449   000355                     CRCXORL         equ	853	;# 
  1450   000356                     CRCXORH         equ	854	;# 
  1451   000357                     CRCCON0         equ	855	;# 
  1452   000358                     CRCCON1         equ	856	;# 
  1453   00035A                     SCANLADR        equ	858	;# 
  1454   00035A                     SCANLADRL       equ	858	;# 
  1455   00035B                     SCANLADRH       equ	859	;# 
  1456   00035C                     SCANLADRU       equ	860	;# 
  1457   00035D                     SCANHADR        equ	861	;# 
  1458   00035D                     SCANHADRL       equ	861	;# 
  1459   00035E                     SCANHADRH       equ	862	;# 
  1460   00035F                     SCANHADRU       equ	863	;# 
  1461   000360                     SCANCON0        equ	864	;# 
  1462   000361                     SCANTRIG        equ	865	;# 
  1463   000362                     IPR0            equ	866	;# 
  1464   000363                     IPR1            equ	867	;# 
  1465   000364                     IPR2            equ	868	;# 
  1466   000365                     IPR3            equ	869	;# 
  1467   000366                     IPR4            equ	870	;# 
  1468   000367                     IPR5            equ	871	;# 
  1469   000368                     IPR6            equ	872	;# 
  1470   000369                     IPR7            equ	873	;# 
  1471   00036A                     IPR8            equ	874	;# 
  1472   00036B                     IPR9            equ	875	;# 
  1473   00036C                     IPR10           equ	876	;# 
  1474   00036D                     IPR11           equ	877	;# 
  1475   00036E                     IPR12           equ	878	;# 
  1476   00036F                     IPR13           equ	879	;# 
  1477   000370                     IPR14           equ	880	;# 
  1478   000371                     IPR15           equ	881	;# 
  1479   000373                     STATUS_CSHAD    equ	883	;# 
  1480   000374                     WREG_CSHAD      equ	884	;# 
  1481   000375                     BSR_CSHAD       equ	885	;# 
  1482   000376                     SHADCON         equ	886	;# 
  1483   000377                     STATUS_SHAD     equ	887	;# 
  1484   000378                     WREG_SHAD       equ	888	;# 
  1485   000379                     BSR_SHAD        equ	889	;# 
  1486   00037A                     PCLATH_SHAD     equ	890	;# 
  1487   00037B                     PCLATU_SHAD     equ	891	;# 
  1488   00037C                     FSR0SH          equ	892	;# 
  1489   00037C                     FSR0L_SHAD      equ	892	;# 
  1490   00037D                     FSR0H_SHAD      equ	893	;# 
  1491   00037E                     FSR1SH          equ	894	;# 
  1492   00037E                     FSR1L_SHAD      equ	894	;# 
  1493   00037F                     FSR1H_SHAD      equ	895	;# 
  1494   000380                     FSR2SH          equ	896	;# 
  1495   000380                     FSR2L_SHAD      equ	896	;# 
  1496   000381                     FSR2H_SHAD      equ	897	;# 
  1497   000382                     PRODSH          equ	898	;# 
  1498   000382                     PRODL_SHAD      equ	898	;# 
  1499   000383                     PRODH_SHAD      equ	899	;# 
  1500   0003BC                     CWG1CLK         equ	956	;# 
  1501   0003BC                     CWG1CLKCON      equ	956	;# 
  1502   0003BD                     CWG1ISM         equ	957	;# 
  1503   0003BD                     CWG1DAT         equ	957	;# 
  1504   0003BE                     CWG1DBR         equ	958	;# 
  1505   0003BF                     CWG1DBF         equ	959	;# 
  1506   0003C0                     CWG1CON0        equ	960	;# 
  1507   0003C1                     CWG1CON1        equ	961	;# 
  1508   0003C2                     CWG1AS0         equ	962	;# 
  1509   0003C3                     CWG1AS1         equ	963	;# 
  1510   0003C4                     CWG1STR         equ	964	;# 
  1511   0003C5                     CWG2CLK         equ	965	;# 
  1512   0003C5                     CWG2CLKCON      equ	965	;# 
  1513   0003C6                     CWG2ISM         equ	966	;# 
  1514   0003C6                     CWG2DAT         equ	966	;# 
  1515   0003C7                     CWG2DBR         equ	967	;# 
  1516   0003C8                     CWG2DBF         equ	968	;# 
  1517   0003C9                     CWG2CON0        equ	969	;# 
  1518   0003CA                     CWG2CON1        equ	970	;# 
  1519   0003CB                     CWG2AS0         equ	971	;# 
  1520   0003CC                     CWG2AS1         equ	972	;# 
  1521   0003CD                     CWG2STR         equ	973	;# 
  1522   0003CE                     CWG3CLK         equ	974	;# 
  1523   0003CE                     CWG3CLKCON      equ	974	;# 
  1524   0003CF                     CWG3ISM         equ	975	;# 
  1525   0003CF                     CWG3DAT         equ	975	;# 
  1526   0003D0                     CWG3DBR         equ	976	;# 
  1527   0003D1                     CWG3DBF         equ	977	;# 
  1528   0003D2                     CWG3CON0        equ	978	;# 
  1529   0003D3                     CWG3CON1        equ	979	;# 
  1530   0003D4                     CWG3AS0         equ	980	;# 
  1531   0003D5                     CWG3AS1         equ	981	;# 
  1532   0003D6                     CWG3STR         equ	982	;# 
  1533   0003D7                     FVRCON          equ	983	;# 
  1534   0003D8                     ADCPCON         equ	984	;# 
  1535   0003D8                     ADCP            equ	984	;# 
  1536   0003D9                     ADLTH           equ	985	;# 
  1537   0003D9                     ADLTHL          equ	985	;# 
  1538   0003DA                     ADLTHH          equ	986	;# 
  1539   0003DB                     ADUTH           equ	987	;# 
  1540   0003DB                     ADUTHL          equ	987	;# 
  1541   0003DC                     ADUTHH          equ	988	;# 
  1542   0003DD                     ADERR           equ	989	;# 
  1543   0003DD                     ADERRL          equ	989	;# 
  1544   0003DE                     ADERRH          equ	990	;# 
  1545   0003DF                     ADSTPT          equ	991	;# 
  1546   0003DF                     ADSTPTL         equ	991	;# 
  1547   0003E0                     ADSTPTH         equ	992	;# 
  1548   0003E1                     ADFLTR          equ	993	;# 
  1549   0003E1                     ADFLTRL         equ	993	;# 
  1550   0003E2                     ADFLTRH         equ	994	;# 
  1551   0003E3                     ADACC           equ	995	;# 
  1552   0003E3                     ADACCL          equ	995	;# 
  1553   0003E4                     ADACCH          equ	996	;# 
  1554   0003E5                     ADACCU          equ	997	;# 
  1555   0003E6                     ADCNT           equ	998	;# 
  1556   0003E7                     ADRPT           equ	999	;# 
  1557   0003E8                     ADPREV          equ	1000	;# 
  1558   0003E8                     ADPREVL         equ	1000	;# 
  1559   0003E9                     ADPREVH         equ	1001	;# 
  1560   0003EA                     ADRES           equ	1002	;# 
  1561   0003EA                     ADRESL          equ	1002	;# 
  1562   0003EB                     ADRESH          equ	1003	;# 
  1563   0003EC                     ADPCH           equ	1004	;# 
  1564   0003EE                     ADACQ           equ	1006	;# 
  1565   0003EE                     ADACQL          equ	1006	;# 
  1566   0003EF                     ADACQH          equ	1007	;# 
  1567   0003F0                     ADCAP           equ	1008	;# 
  1568   0003F1                     ADPRE           equ	1009	;# 
  1569   0003F1                     ADPREL          equ	1009	;# 
  1570   0003F2                     ADPREH          equ	1010	;# 
  1571   0003F3                     ADCON0          equ	1011	;# 
  1572   0003F4                     ADCON1          equ	1012	;# 
  1573   0003F5                     ADCON2          equ	1013	;# 
  1574   0003F6                     ADCON3          equ	1014	;# 
  1575   0003F7                     ADSTAT          equ	1015	;# 
  1576   0003F8                     ADREF           equ	1016	;# 
  1577   0003F9                     ADACT           equ	1017	;# 
  1578   0003FA                     ADCLK           equ	1018	;# 
  1579   000400                     ANSELA          equ	1024	;# 
  1580   000401                     WPUA            equ	1025	;# 
  1581   000402                     ODCONA          equ	1026	;# 
  1582   000403                     SLRCONA         equ	1027	;# 
  1583   000404                     INLVLA          equ	1028	;# 
  1584   000405                     IOCAP           equ	1029	;# 
  1585   000406                     IOCAN           equ	1030	;# 
  1586   000407                     IOCAF           equ	1031	;# 
  1587   000408                     ANSELB          equ	1032	;# 
  1588   000409                     WPUB            equ	1033	;# 
  1589   00040A                     ODCONB          equ	1034	;# 
  1590   00040B                     SLRCONB         equ	1035	;# 
  1591   00040C                     INLVLB          equ	1036	;# 
  1592   00040D                     IOCBP           equ	1037	;# 
  1593   00040E                     IOCBN           equ	1038	;# 
  1594   00040F                     IOCBF           equ	1039	;# 
  1595   000410                     ANSELC          equ	1040	;# 
  1596   000411                     WPUC            equ	1041	;# 
  1597   000412                     ODCONC          equ	1042	;# 
  1598   000413                     SLRCONC         equ	1043	;# 
  1599   000414                     INLVLC          equ	1044	;# 
  1600   000415                     IOCCP           equ	1045	;# 
  1601   000416                     IOCCN           equ	1046	;# 
  1602   000417                     IOCCF           equ	1047	;# 
  1603   000418                     ANSELD          equ	1048	;# 
  1604   000419                     WPUD            equ	1049	;# 
  1605   00041A                     ODCOND          equ	1050	;# 
  1606   00041B                     SLRCOND         equ	1051	;# 
  1607   00041C                     INLVLD          equ	1052	;# 
  1608   000420                     ANSELE          equ	1056	;# 
  1609   000421                     WPUE            equ	1057	;# 
  1610   000422                     ODCONE          equ	1058	;# 
  1611   000423                     SLRCONE         equ	1059	;# 
  1612   000424                     INLVLE          equ	1060	;# 
  1613   000425                     IOCEP           equ	1061	;# 
  1614   000426                     IOCEN           equ	1062	;# 
  1615   000427                     IOCEF           equ	1063	;# 
  1616   000428                     ANSELF          equ	1064	;# 
  1617   000429                     WPUF            equ	1065	;# 
  1618   00042A                     ODCONF          equ	1066	;# 
  1619   00042B                     SLRCONF         equ	1067	;# 
  1620   00042C                     INLVLF          equ	1068	;# 
  1621   000440                     NCO1ACC         equ	1088	;# 
  1622   000440                     NCO1ACCL        equ	1088	;# 
  1623   000441                     NCO1ACCH        equ	1089	;# 
  1624   000442                     NCO1ACCU        equ	1090	;# 
  1625   000443                     NCO1INC         equ	1091	;# 
  1626   000443                     NCO1INCL        equ	1091	;# 
  1627   000444                     NCO1INCH        equ	1092	;# 
  1628   000445                     NCO1INCU        equ	1093	;# 
  1629   000446                     NCO1CON         equ	1094	;# 
  1630   000447                     NCO1CLK         equ	1095	;# 
  1631   000448                     NCO2ACC         equ	1096	;# 
  1632   000448                     NCO2ACCL        equ	1096	;# 
  1633   000449                     NCO2ACCH        equ	1097	;# 
  1634   00044A                     NCO2ACCU        equ	1098	;# 
  1635   00044B                     NCO2INC         equ	1099	;# 
  1636   00044B                     NCO2INCL        equ	1099	;# 
  1637   00044C                     NCO2INCH        equ	1100	;# 
  1638   00044D                     NCO2INCU        equ	1101	;# 
  1639   00044E                     NCO2CON         equ	1102	;# 
  1640   00044F                     NCO2CLK         equ	1103	;# 
  1641   000450                     NCO3ACC         equ	1104	;# 
  1642   000450                     NCO3ACCL        equ	1104	;# 
  1643   000451                     NCO3ACCH        equ	1105	;# 
  1644   000452                     NCO3ACCU        equ	1106	;# 
  1645   000453                     NCO3INC         equ	1107	;# 
  1646   000453                     NCO3INCL        equ	1107	;# 
  1647   000454                     NCO3INCH        equ	1108	;# 
  1648   000455                     NCO3INCU        equ	1109	;# 
  1649   000456                     NCO3CON         equ	1110	;# 
  1650   000457                     NCO3CLK         equ	1111	;# 
  1651   000459                     IVTLOCK         equ	1113	;# 
  1652   00045A                     IVTAD           equ	1114	;# 
  1653   00045A                     IVTADL          equ	1114	;# 
  1654   00045B                     IVTADH          equ	1115	;# 
  1655   00045C                     IVTADU          equ	1116	;# 
  1656   00045D                     IVTBASE         equ	1117	;# 
  1657   00045D                     IVTBASEL        equ	1117	;# 
  1658   00045E                     IVTBASEH        equ	1118	;# 
  1659   00045F                     IVTBASEU        equ	1119	;# 
  1660   000460                     PWM1ERS         equ	1120	;# 
  1661   000461                     PWM1CLK         equ	1121	;# 
  1662   000462                     PWM1LDS         equ	1122	;# 
  1663   000463                     PWM1PR          equ	1123	;# 
  1664   000463                     PWM1PRL         equ	1123	;# 
  1665   000464                     PWM1PRH         equ	1124	;# 
  1666   000465                     PWM1CPRE        equ	1125	;# 
  1667   000466                     PWM1PIPOS       equ	1126	;# 
  1668   000467                     PWM1GIR         equ	1127	;# 
  1669   000468                     PWM1GIE         equ	1128	;# 
  1670   000469                     PWM1CON         equ	1129	;# 
  1671   00046A                     PWM1S1CFG       equ	1130	;# 
  1672   00046B                     PWM1S1P1        equ	1131	;# 
  1673   00046B                     PWM1S1P1L       equ	1131	;# 
  1674   00046C                     PWM1S1P1H       equ	1132	;# 
  1675   00046D                     PWM1S1P2        equ	1133	;# 
  1676   00046D                     PWM1S1P2L       equ	1133	;# 
  1677   00046E                     PWM1S1P2H       equ	1134	;# 
  1678   00046F                     PWM2ERS         equ	1135	;# 
  1679   000470                     PWM2CLK         equ	1136	;# 
  1680   000471                     PWM2LDS         equ	1137	;# 
  1681   000472                     PWM2PR          equ	1138	;# 
  1682   000472                     PWM2PRL         equ	1138	;# 
  1683   000473                     PWM2PRH         equ	1139	;# 
  1684   000474                     PWM2CPRE        equ	1140	;# 
  1685   000475                     PWM2PIPOS       equ	1141	;# 
  1686   000476                     PWM2GIR         equ	1142	;# 
  1687   000477                     PWM2GIE         equ	1143	;# 
  1688   000478                     PWM2CON         equ	1144	;# 
  1689   000479                     PWM2S1CFG       equ	1145	;# 
  1690   00047A                     PWM2S1P1        equ	1146	;# 
  1691   00047A                     PWM2S1P1L       equ	1146	;# 
  1692   00047B                     PWM2S1P1H       equ	1147	;# 
  1693   00047C                     PWM2S1P2        equ	1148	;# 
  1694   00047C                     PWM2S1P2L       equ	1148	;# 
  1695   00047D                     PWM2S1P2H       equ	1149	;# 
  1696   00047E                     PWM3ERS         equ	1150	;# 
  1697   00047F                     PWM3CLK         equ	1151	;# 
  1698   000480                     PWM3LDS         equ	1152	;# 
  1699   000481                     PWM3PR          equ	1153	;# 
  1700   000481                     PWM3PRL         equ	1153	;# 
  1701   000482                     PWM3PRH         equ	1154	;# 
  1702   000483                     PWM3CPRE        equ	1155	;# 
  1703   000484                     PWM3PIPOS       equ	1156	;# 
  1704   000485                     PWM3GIR         equ	1157	;# 
  1705   000486                     PWM3GIE         equ	1158	;# 
  1706   000487                     PWM3CON         equ	1159	;# 
  1707   000488                     PWM3S1CFG       equ	1160	;# 
  1708   000489                     PWM3S1P1        equ	1161	;# 
  1709   000489                     PWM3S1P1L       equ	1161	;# 
  1710   00048A                     PWM3S1P1H       equ	1162	;# 
  1711   00048B                     PWM3S1P2        equ	1163	;# 
  1712   00048B                     PWM3S1P2L       equ	1163	;# 
  1713   00048C                     PWM3S1P2H       equ	1164	;# 
  1714   00049C                     PWMLOAD         equ	1180	;# 
  1715   00049D                     PWMEN           equ	1181	;# 
  1716   00049E                     PIE0            equ	1182	;# 
  1717   00049F                     PIE1            equ	1183	;# 
  1718   0004A0                     PIE2            equ	1184	;# 
  1719   0004A1                     PIE3            equ	1185	;# 
  1720   0004A2                     PIE4            equ	1186	;# 
  1721   0004A3                     PIE5            equ	1187	;# 
  1722   0004A4                     PIE6            equ	1188	;# 
  1723   0004A5                     PIE7            equ	1189	;# 
  1724   0004A6                     PIE8            equ	1190	;# 
  1725   0004A7                     PIE9            equ	1191	;# 
  1726   0004A8                     PIE10           equ	1192	;# 
  1727   0004A9                     PIE11           equ	1193	;# 
  1728   0004AA                     PIE12           equ	1194	;# 
  1729   0004AB                     PIE13           equ	1195	;# 
  1730   0004AC                     PIE14           equ	1196	;# 
  1731   0004AD                     PIE15           equ	1197	;# 
  1732   0004AE                     PIR0            equ	1198	;# 
  1733   0004AF                     PIR1            equ	1199	;# 
  1734   0004B0                     PIR2            equ	1200	;# 
  1735   0004B1                     PIR3            equ	1201	;# 
  1736   0004B2                     PIR4            equ	1202	;# 
  1737   0004B3                     PIR5            equ	1203	;# 
  1738   0004B4                     PIR6            equ	1204	;# 
  1739   0004B5                     PIR7            equ	1205	;# 
  1740   0004B6                     PIR8            equ	1206	;# 
  1741   0004B7                     PIR9            equ	1207	;# 
  1742   0004B8                     PIR10           equ	1208	;# 
  1743   0004B9                     PIR11           equ	1209	;# 
  1744   0004BA                     PIR12           equ	1210	;# 
  1745   0004BB                     PIR13           equ	1211	;# 
  1746   0004BC                     PIR14           equ	1212	;# 
  1747   0004BD                     PIR15           equ	1213	;# 
  1748   0004BE                     LATA            equ	1214	;# 
  1749   0004BF                     LATB            equ	1215	;# 
  1750   0004C0                     LATC            equ	1216	;# 
  1751   0004C1                     LATD            equ	1217	;# 
  1752   0004C2                     LATE            equ	1218	;# 
  1753   0004C3                     LATF            equ	1219	;# 
  1754   0004C6                     TRISA           equ	1222	;# 
  1755   0004C7                     TRISB           equ	1223	;# 
  1756   0004C8                     TRISC           equ	1224	;# 
  1757   0004C9                     TRISD           equ	1225	;# 
  1758   0004CA                     TRISE           equ	1226	;# 
  1759   0004CB                     TRISF           equ	1227	;# 
  1760   0004CE                     PORTA           equ	1230	;# 
  1761   0004CF                     PORTB           equ	1231	;# 
  1762   0004D0                     PORTC           equ	1232	;# 
  1763   0004D1                     PORTD           equ	1233	;# 
  1764   0004D2                     PORTE           equ	1234	;# 
  1765   0004D3                     PORTF           equ	1235	;# 
  1766   0004D6                     INTCON0         equ	1238	;# 
  1767   0004D7                     INTCON1         equ	1239	;# 
  1768   0004D8                     STATUS          equ	1240	;# 
  1769   0004D9                     FSR2            equ	1241	;# 
  1770   0004D9                     FSR2L           equ	1241	;# 
  1771   0004DA                     FSR2H           equ	1242	;# 
  1772   0004DB                     PLUSW2          equ	1243	;# 
  1773   0004DC                     PREINC2         equ	1244	;# 
  1774   0004DD                     POSTDEC2        equ	1245	;# 
  1775   0004DE                     POSTINC2        equ	1246	;# 
  1776   0004DF                     INDF2           equ	1247	;# 
  1777   0004E0                     BSR             equ	1248	;# 
  1778   0004E1                     FSR1            equ	1249	;# 
  1779   0004E1                     FSR1L           equ	1249	;# 
  1780   0004E2                     FSR1H           equ	1250	;# 
  1781   0004E3                     PLUSW1          equ	1251	;# 
  1782   0004E4                     PREINC1         equ	1252	;# 
  1783   0004E5                     POSTDEC1        equ	1253	;# 
  1784   0004E6                     POSTINC1        equ	1254	;# 
  1785   0004E7                     INDF1           equ	1255	;# 
  1786   0004E8                     WREG            equ	1256	;# 
  1787   0004E9                     FSR0            equ	1257	;# 
  1788   0004E9                     FSR0L           equ	1257	;# 
  1789   0004EA                     FSR0H           equ	1258	;# 
  1790   0004EB                     PLUSW0          equ	1259	;# 
  1791   0004EC                     PREINC0         equ	1260	;# 
  1792   0004ED                     POSTDEC0        equ	1261	;# 
  1793   0004EE                     POSTINC0        equ	1262	;# 
  1794   0004EF                     INDF0           equ	1263	;# 
  1795   0004F0                     PCON0           equ	1264	;# 
  1796   0004F1                     PCON1           equ	1265	;# 
  1797   0004F2                     CPUDOZE         equ	1266	;# 
  1798   0004F3                     PROD            equ	1267	;# 
  1799   0004F3                     PRODL           equ	1267	;# 
  1800   0004F4                     PRODH           equ	1268	;# 
  1801   0004F5                     TABLAT          equ	1269	;# 
  1802   0004F6                     TBLPTR          equ	1270	;# 
  1803   0004F6                     TBLPTRL         equ	1270	;# 
  1804   0004F7                     TBLPTRH         equ	1271	;# 
  1805   0004F8                     TBLPTRU         equ	1272	;# 
  1806   0004F9                     PCLAT           equ	1273	;# 
  1807   0004F9                     PCL             equ	1273	;# 
  1808   0004FA                     PCLATH          equ	1274	;# 
  1809   0004FB                     PCLATU          equ	1275	;# 
  1810   0004FC                     STKPTR          equ	1276	;# 
  1811   0004FD                     TOS             equ	1277	;# 
  1812   0004FD                     TOSL            equ	1277	;# 
  1813   0004FE                     TOSH            equ	1278	;# 
  1814   0004FF                     TOSU            equ	1279	;# 
  1815                           
  1816                           	psect	smallconst
  1817   002600                     __psmallconst:
  1818                           	callstack 0
  1819   002600  00                 	db	0
  1820   002601                     _persona_2:
  1821                           	callstack 0
  1822   002601  0C                 	db	12
  1823   002602  0C                 	db	12
  1824   002603  05                 	db	5
  1825   002604  0E                 	db	14
  1826   002605  14                 	db	20
  1827   002606  04                 	db	4
  1828   002607  0A                 	db	10
  1829   002608  13                 	db	19
  1830   002609                     __end_of_persona_2:
  1831                           	callstack 0
  1832   002609                     _persona_1:
  1833                           	callstack 0
  1834   002609  06                 	db	6
  1835   00260A  06                 	db	6
  1836   00260B  04                 	db	4
  1837   00260C  0D                 	db	13
  1838   00260D  16                 	db	22
  1839   00260E  04                 	db	4
  1840   00260F  0A                 	db	10
  1841   002610  1A                 	db	26
  1842   002611                     __end_of_persona_1:
  1843                           	callstack 0
  1844   0000B3                     _OSCEN          set	179
  1845   0000B1                     _OSCFRQ         set	177
  1846   0000AD                     _OSCCON1        set	173
  1847   000240                     _INT2PPS        set	576
  1848   000418                     _ANSELD         set	1048
  1849   000409                     _WPUBbits       set	1033
  1850   000408                     _ANSELBbits     set	1032
  1851   0004D6                     _INTCON0bits    set	1238
  1852   0004B8                     _PIR10bits      set	1208
  1853   0004A8                     _PIE10bits      set	1192
  1854   0004C7                     _TRISBbits      set	1223
  1855   0004D1                     _PORTD          set	1233
  1856   0004C1                     _LATD           set	1217
  1857   0004C9                     _TRISD          set	1225
  1858   0004C1                     _LATDbits       set	1217
  1859   002611                     STR_2:
  1860   002611  55                 	db	85	;'U'
  1861   002612  50                 	db	80	;'P'
  1862   002613  63                 	db	99	;'c'
  1863   002614  69                 	db	105	;'i'
  1864   002615  6E                 	db	110	;'n'
  1865   002616  6F                 	db	111	;'o'
  1866   002617  73                 	db	115	;'s'
  1867   002618  20                 	db	32
  1868   002619  43                 	db	67	;'C'
  1869   00261A  6F                 	db	111	;'o'
  1870   00261B  72                 	db	114	;'r'
  1871   00261C  61                 	db	97	;'a'
  1872   00261D  7A                 	db	122	;'z'
  1873   00261E  6F                 	db	111	;'o'
  1874   00261F  6E                 	db	110	;'n'
  1875   002620  00                 	db	0
  1876   002621                     STR_1:
  1877   002621  4D                 	db	77	;'M'
  1878   002622  69                 	db	105	;'i'
  1879   002623  63                 	db	99	;'c'
  1880   002624  72                 	db	114	;'r'
  1881   002625  6F                 	db	111	;'o'
  1882   002626  73                 	db	115	;'s'
  1883   002627  20                 	db	32
  1884   002628  32                 	db	50	;'2'
  1885   002629  30                 	db	48	;'0'
  1886   00262A  32                 	db	50	;'2'
  1887   00262B  35                 	db	53	;'5'
  1888   00262C  2D                 	db	45
  1889   00262D  31                 	db	49	;'1'
  1890   00262E  00                 	db	0
  1891   00262F  00                 	db	0	; dummy byte at the end
  1892   002600                     __smallconst    set	__psmallconst
  1893   002600                     __mediumconst   set	__psmallconst
  1894   000001                     __activetblptr  equ	1
  1895                           
  1896                           ; #config settings
  1897                           
  1898                           	psect	cinit
  1899   002910                     __pcinit:
  1900                           	callstack 0
  1901   002910                     start_initialization:
  1902                           	callstack 0
  1903   002910                     __initialization:
  1904                           	callstack 0
  1905   002910                     end_of_initialization:
  1906                           	callstack 0
  1907   002910                     __end_of__initialization:
  1908                           	callstack 0
  1909   002910  0E00               	movlw	low (__Lsmallconst shr (0+16))
  1910   002912  6EF8               	movwf	tblptru,c
  1911   002914  0E26               	movlw	high __Lsmallconst
  1912   002916  6EF7               	movwf	tblptrh,c
  1913   002918  0100               	movlb	0
  1914   00291A  EF18  F013         	goto	_main	;jump to C main() function
  1915                           
  1916                           	psect	cstackCOMRAM
  1917   000501                     __pcstackCOMRAM:
  1918                           	callstack 0
  1919   000501                     ENVIA_NIBBLE@dato:
  1920                           	callstack 0
  1921   000501                     LEER_LCD@aux:
  1922                           	callstack 0
  1923   000501                     
  1924                           ; 1 bytes @ 0x0
  1925   000501                     	ds	1
  1926   000502                     ENVIA_CHAR@dato:
  1927                           	callstack 0
  1928   000502                     ENVIA_LCD_CMD@dato:
  1929                           	callstack 0
  1930   000502                     
  1931                           ; 1 bytes @ 0x1
  1932   000502                     	ds	1
  1933   000503                     ENVIA_CHAR@aux:
  1934                           	callstack 0
  1935   000503                     ENVIA_LCD_CMD@aux:
  1936                           	callstack 0
  1937                           
  1938                           ; 1 bytes @ 0x2
  1939   000503                     	ds	1
  1940   000504                     POS_CURSOR@columna:
  1941                           	callstack 0
  1942   000504                     CURSOR_ONOFF@estado:
  1943                           	callstack 0
  1944   000504                     ESCRIBE_MENSAJE@cadena:
  1945                           	callstack 0
  1946   000504                     GENERACARACTER@vector:
  1947                           	callstack 0
  1948   000504                     ??_LCD_CONFIG:
  1949                           
  1950                           ; 1 bytes @ 0x3
  1951   000504                     	ds	1
  1952   000505                     POS_CURSOR@fila:
  1953                           	callstack 0
  1954   000505                     ESCRIBE_MENSAJE@tam:
  1955                           	callstack 0
  1956   000505                     GENERACARACTER@pos:
  1957                           	callstack 0
  1958   000505                     
  1959                           ; 1 bytes @ 0x4
  1960   000505                     	ds	1
  1961   000506                     ??_ESCRIBE_MENSAJE:
  1962   000506                     ??_GENERACARACTER:
  1963                           
  1964                           ; 1 bytes @ 0x5
  1965   000506                     	ds	1
  1966   000507                     ESCRIBE_MENSAJE@i:
  1967                           	callstack 0
  1968   000507                     GENERACARACTER@i:
  1969                           	callstack 0
  1970                           
  1971                           ; 1 bytes @ 0x6
  1972   000507                     	ds	1
  1973   000508                     ??_lcd_init:
  1974                           
  1975                           ; 1 bytes @ 0x7
  1976   000508                     	ds	1
  1977   000509                     ??_main:
  1978                           
  1979                           ; 1 bytes @ 0x8
  1980   000509                     	ds	2
  1981                           
  1982 ;;
  1983 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1984 ;;
  1985 ;; *************** function _main *****************
  1986 ;; Defined at:
  1987 ;;		line 39 in file "maincode03.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2003 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2004 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2005 ;;Total ram usage:        2 bytes
  2006 ;; Hardware stack levels required when called: 4
  2007 ;; This function calls:
  2008 ;;		_BORRAR_LCD
  2009 ;;		_ENVIA_CHAR
  2010 ;;		_ESCRIBE_MENSAJE
  2011 ;;		_POS_CURSOR
  2012 ;;		_configuro
  2013 ;;		_lcd_init
  2014 ;; This function is called by:
  2015 ;;		Startup code after reset
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text0
  2020   002630                     __ptext0:
  2021                           	callstack 0
  2022   002630                     _main:
  2023                           	callstack 123
  2024                           
  2025                           ;maincode03.c: 40:     configuro();
  2026                           
  2027                           ;incstack = 0
  2028   002630  EC35  F014         	call	_configuro	;wreg free
  2029                           
  2030                           ; BSR set to: 2
  2031                           ;maincode03.c: 41:     lcd_init();
  2032   002634  ECCA  F013         	call	_lcd_init	;wreg free
  2033                           
  2034                           ;maincode03.c: 42:     POS_CURSOR(1,1);
  2035   002638  0E01               	movlw	1
  2036   00263A  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2037   00263C  0E01               	movlw	1
  2038   00263E  EC48  F014         	call	_POS_CURSOR
  2039                           
  2040                           ;maincode03.c: 43:     ESCRIBE_MENSAJE("Micros 2025-1", 13);
  2041   002642  0E21               	movlw	low STR_1
  2042   002644  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2043   002646  0E0D               	movlw	13
  2044   002648  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2045   00264A  EC5A  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2046                           
  2047                           ;maincode03.c: 44:     POS_CURSOR(2,0);
  2048   00264E  0E00               	movlw	0
  2049   002650  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2050   002652  0E02               	movlw	2
  2051   002654  EC48  F014         	call	_POS_CURSOR
  2052                           
  2053                           ;maincode03.c: 45:     ESCRIBE_MENSAJE("UPcinos Corazon", 15);
  2054   002658  0E11               	movlw	low STR_2
  2055   00265A  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2056   00265C  0E0F               	movlw	15
  2057   00265E  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2058   002660  EC5A  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2059                           
  2060                           ;maincode03.c: 46:     _delay((unsigned long)((2000)*(32000000UL/4000.0)));
  2061   002664  0E52               	movlw	82
  2062   002666  6E0A               	movwf	(??_main+1)^(0+1280),c
  2063   002668  0E2B               	movlw	43
  2064   00266A  6E09               	movwf	??_main^(0+1280),c
  2065   00266C  0E00               	movlw	0
  2066   00266E                     u127:
  2067   00266E  2EE8               	decfsz	wreg,f,c
  2068   002670  D7FE               	bra	u127
  2069   002672  2E09               	decfsz	??_main^(0+1280),f,c
  2070   002674  D7FC               	bra	u127
  2071   002676  2E0A               	decfsz	(??_main+1)^(0+1280),f,c
  2072   002678  D7FA               	bra	u127
  2073   00267A  D000               	nop2	
  2074                           
  2075                           ;maincode03.c: 47:     BORRAR_LCD();
  2076   00267C  EC93  F014         	call	_BORRAR_LCD	;wreg free
  2077   002680                     l1092:
  2078                           
  2079                           ;maincode03.c: 49:         POS_CURSOR(1,0);
  2080   002680  0E00               	movlw	0
  2081   002682  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2082   002684  0E01               	movlw	1
  2083   002686  EC48  F014         	call	_POS_CURSOR
  2084                           
  2085                           ;maincode03.c: 50:         ENVIA_CHAR(0);
  2086   00268A  0E00               	movlw	0
  2087   00268C  EC04  F014         	call	_ENVIA_CHAR
  2088                           
  2089                           ;maincode03.c: 51:         _delay((unsigned long)((500)*(32000000UL/4000.0)));
  2090   002690  0E15               	movlw	21
  2091   002692  6E0A               	movwf	(??_main+1)^(0+1280),c
  2092   002694  0E4B               	movlw	75
  2093   002696  6E09               	movwf	??_main^(0+1280),c
  2094   002698  0EBE               	movlw	190
  2095   00269A                     u137:
  2096   00269A  2EE8               	decfsz	wreg,f,c
  2097   00269C  D7FE               	bra	u137
  2098   00269E  2E09               	decfsz	??_main^(0+1280),f,c
  2099   0026A0  D7FC               	bra	u137
  2100   0026A2  2E0A               	decfsz	(??_main+1)^(0+1280),f,c
  2101   0026A4  D7FA               	bra	u137
  2102   0026A6  D000               	nop2	
  2103                           
  2104                           ;maincode03.c: 52:         POS_CURSOR(1,0);
  2105   0026A8  0E00               	movlw	0
  2106   0026AA  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2107   0026AC  0E01               	movlw	1
  2108   0026AE  EC48  F014         	call	_POS_CURSOR
  2109                           
  2110                           ;maincode03.c: 53:         ENVIA_CHAR(1);
  2111   0026B2  0E01               	movlw	1
  2112   0026B4  EC04  F014         	call	_ENVIA_CHAR
  2113                           
  2114                           ;maincode03.c: 54:         _delay((unsigned long)((500)*(32000000UL/4000.0)));
  2115   0026B8  0E15               	movlw	21
  2116   0026BA  6E0A               	movwf	(??_main+1)^(0+1280),c
  2117   0026BC  0E4B               	movlw	75
  2118   0026BE  6E09               	movwf	??_main^(0+1280),c
  2119   0026C0  0EBE               	movlw	190
  2120   0026C2                     u147:
  2121   0026C2  2EE8               	decfsz	wreg,f,c
  2122   0026C4  D7FE               	bra	u147
  2123   0026C6  2E09               	decfsz	??_main^(0+1280),f,c
  2124   0026C8  D7FC               	bra	u147
  2125   0026CA  2E0A               	decfsz	(??_main+1)^(0+1280),f,c
  2126   0026CC  D7FA               	bra	u147
  2127   0026CE  D000               	nop2	
  2128   0026D0  D7D7               	goto	l1092
  2129   0026D2                     __end_of_main:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function _lcd_init *****************
  2133 ;; Defined at:
  2134 ;;		line 27 in file "maincode03.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 3F/2
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2150 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2152 ;;Total ram usage:        1 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 3
  2155 ;; This function calls:
  2156 ;;		_BORRAR_LCD
  2157 ;;		_CURSOR_HOME
  2158 ;;		_CURSOR_ONOFF
  2159 ;;		_GENERACARACTER
  2160 ;;		_LCD_CONFIG
  2161 ;; This function is called by:
  2162 ;;		_main
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text1
  2167   002794                     __ptext1:
  2168                           	callstack 0
  2169   002794                     _lcd_init:
  2170                           	callstack 123
  2171                           
  2172                           ; BSR set to: 2
  2173                           ;maincode03.c: 28:     TRISD = 0x00;
  2174                           
  2175                           ;incstack = 0
  2176   002794  6AC9               	clrf	201,c	;volatile
  2177                           
  2178                           ;maincode03.c: 29:     ANSELD = 0x00;
  2179   002796  0104               	movlb	4	; () banked
  2180   002798  6B18               	clrf	24,b	;volatile
  2181                           
  2182                           ; BSR set to: 4
  2183                           ;maincode03.c: 30:     LCD_CONFIG();
  2184   00279A  EC9A  F013         	call	_LCD_CONFIG	;wreg free
  2185                           
  2186                           ;maincode03.c: 31:     _delay((unsigned long)((21)*(32000000UL/4000.0)));
  2187   00279E  0EDB               	movlw	219
  2188   0027A0  6E08               	movwf	??_lcd_init^(0+1280),c
  2189   0027A2  0E2D               	movlw	45
  2190   0027A4                     u157:
  2191   0027A4  2EE8               	decfsz	wreg,f,c
  2192   0027A6  D7FE               	bra	u157
  2193   0027A8  2E08               	decfsz	??_lcd_init^(0+1280),f,c
  2194   0027AA  D7FC               	bra	u157
  2195   0027AC  0000               	nop	
  2196                           
  2197                           ;maincode03.c: 32:     BORRAR_LCD();
  2198   0027AE  EC93  F014         	call	_BORRAR_LCD	;wreg free
  2199                           
  2200                           ;maincode03.c: 33:     CURSOR_HOME();
  2201   0027B2  EC8F  F014         	call	_CURSOR_HOME	;wreg free
  2202                           
  2203                           ;maincode03.c: 34:     CURSOR_ONOFF(1);
  2204   0027B6  0E01               	movlw	1
  2205   0027B8  EC6C  F014         	call	_CURSOR_ONOFF
  2206                           
  2207                           ;maincode03.c: 35:     GENERACARACTER(persona_1, 0);
  2208   0027BC  0E09               	movlw	low _persona_1
  2209   0027BE  6E04               	movwf	GENERACARACTER@vector^(0+1280),c
  2210   0027C0  0E00               	movlw	0
  2211   0027C2  6E05               	movwf	GENERACARACTER@pos^(0+1280),c
  2212   0027C4  EC1D  F014         	call	_GENERACARACTER	;wreg free
  2213                           
  2214                           ;maincode03.c: 36:     GENERACARACTER(persona_2, 1);
  2215   0027C8  0E01               	movlw	low _persona_2
  2216   0027CA  6E04               	movwf	GENERACARACTER@vector^(0+1280),c
  2217   0027CC  0E01               	movlw	1
  2218   0027CE  6E05               	movwf	GENERACARACTER@pos^(0+1280),c
  2219   0027D0  EC1D  F014         	call	_GENERACARACTER	;wreg free
  2220   0027D4  0012               	return		;funcret
  2221   0027D6                     __end_of_lcd_init:
  2222                           	callstack 0
  2223                           
  2224 ;; *************** function _LCD_CONFIG *****************
  2225 ;; Defined at:
  2226 ;;		line 72 in file "LCD.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;		None
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;		None
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      void 
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 3F/4
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2244 ;;Total ram usage:        1 bytes
  2245 ;; Hardware stack levels used: 1
  2246 ;; Hardware stack levels required when called: 2
  2247 ;; This function calls:
  2248 ;;		_ENVIA_LCD_CMD
  2249 ;;		_ENVIA_NIBBLE
  2250 ;; This function is called by:
  2251 ;;		_lcd_init
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text2
  2256   002734                     __ptext2:
  2257                           	callstack 0
  2258   002734                     _LCD_CONFIG:
  2259                           	callstack 123
  2260                           
  2261                           ; BSR set to: 4
  2262                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  2263                           
  2264                           ;incstack = 0
  2265   002734  90C1               	bcf	193,0,c	;volatile
  2266                           
  2267                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  2268   002736  92C1               	bcf	193,1,c	;volatile
  2269                           
  2270                           ; BSR set to: 4
  2271                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  2272   002738  0E30               	movlw	48
  2273   00273A  EC7A  F014         	call	_ENVIA_NIBBLE
  2274                           
  2275                           ;LCD.c: 77:         _delay(24000);
  2276   00273E  0E20               	movlw	32
  2277   002740  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2278   002742  0E2A               	movlw	42
  2279   002744                     u167:
  2280   002744  2EE8               	decfsz	wreg,f,c
  2281   002746  D7FE               	bra	u167
  2282   002748  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2283   00274A  D7FC               	bra	u167
  2284                           
  2285                           ;LCD.c: 78:         _delay(24000);
  2286   00274C  0E20               	movlw	32
  2287   00274E  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2288   002750  0E2A               	movlw	42
  2289   002752                     u177:
  2290   002752  2EE8               	decfsz	wreg,f,c
  2291   002754  D7FE               	bra	u177
  2292   002756  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2293   002758  D7FC               	bra	u177
  2294                           
  2295                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  2296   00275A  0E30               	movlw	48
  2297   00275C  EC7A  F014         	call	_ENVIA_NIBBLE
  2298                           
  2299                           ;LCD.c: 83:  _delay(1200);
  2300   002760  0EF0               	movlw	240
  2301   002762                     u187:
  2302   002762  D000               	nop2	
  2303   002764  2EE8               	decfsz	wreg,f,c
  2304   002766  D7FD               	bra	u187
  2305                           
  2306                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  2307   002768  0E30               	movlw	48
  2308   00276A  EC7A  F014         	call	_ENVIA_NIBBLE
  2309                           
  2310                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  2311   00276E  0E20               	movlw	32
  2312   002770  EC7A  F014         	call	_ENVIA_NIBBLE
  2313                           
  2314                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  2315   002774  0E01               	movlw	1
  2316   002776  ECEB  F013         	call	_ENVIA_LCD_CMD
  2317                           
  2318                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  2319   00277A  0E28               	movlw	40
  2320   00277C  ECEB  F013         	call	_ENVIA_LCD_CMD
  2321                           
  2322                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  2323   002780  0E0F               	movlw	15
  2324   002782  ECEB  F013         	call	_ENVIA_LCD_CMD
  2325                           
  2326                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  2327   002786  0E06               	movlw	6
  2328   002788  ECEB  F013         	call	_ENVIA_LCD_CMD
  2329                           
  2330                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  2331   00278C  0E01               	movlw	1
  2332   00278E  ECEB  F013         	call	_ENVIA_LCD_CMD
  2333   002792  0012               	return		;funcret
  2334   002794                     __end_of_LCD_CONFIG:
  2335                           	callstack 0
  2336                           
  2337 ;; *************** function _GENERACARACTER *****************
  2338 ;; Defined at:
  2339 ;;		line 153 in file "LCD.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  vector          1    3[COMRAM] PTR const unsigned char 
  2342 ;;		 -> persona_2(8), persona_1(8), 
  2343 ;;  pos             1    4[COMRAM] unsigned char 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  i               1    6[COMRAM] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/4
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2358 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2359 ;;Total ram usage:        4 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; Hardware stack levels required when called: 2
  2362 ;; This function calls:
  2363 ;;		_ENVIA_CHAR
  2364 ;;		_ENVIA_LCD_CMD
  2365 ;; This function is called by:
  2366 ;;		_lcd_init
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text3
  2371   00283A                     __ptext3:
  2372                           	callstack 0
  2373   00283A                     _GENERACARACTER:
  2374                           	callstack 123
  2375                           
  2376                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
  2377                           
  2378                           ;incstack = 0
  2379   00283A  5005               	movf	GENERACARACTER@pos^(0+1280),w,c
  2380   00283C  0D08               	mullw	8
  2381   00283E  50F3               	movf	243,w,c
  2382   002840  0F40               	addlw	64
  2383   002842  ECEB  F013         	call	_ENVIA_LCD_CMD
  2384                           
  2385                           ;LCD.c: 157:  for(i=0;i<8;i++)
  2386   002846  6A07               	clrf	GENERACARACTER@i^(0+1280),c
  2387   002848                     l1036:
  2388                           
  2389                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
  2390   002848  5004               	movf	GENERACARACTER@vector^(0+1280),w,c
  2391   00284A  2407               	addwf	GENERACARACTER@i^(0+1280),w,c
  2392   00284C  6E06               	movwf	??_GENERACARACTER^(0+1280),c
  2393   00284E  C506  F4F6         	movff	??_GENERACARACTER,tblptrl
  2394   002852                     	if	0	;There is only one active tblptr byte
  2395   002852                     	endif
  2396   002852                     	if	0	;tblptru may be non-zero
  2397   002852                     	endif
  2398   002852                     	if	0	;tblptru may be non-zero
  2399   002852                     	endif
  2400   002852  0008               	tblrd		*
  2401   002854  50F5               	movf	tablat,w,c
  2402   002856  EC04  F014         	call	_ENVIA_CHAR
  2403                           
  2404                           ;LCD.c: 160:  }
  2405   00285A  2A07               	incf	GENERACARACTER@i^(0+1280),f,c
  2406   00285C  0E07               	movlw	7
  2407   00285E  6407               	cpfsgt	GENERACARACTER@i^(0+1280),c
  2408   002860  D7F3               	goto	l1036
  2409                           
  2410                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  2411   002862  0E80               	movlw	128
  2412   002864  ECEB  F013         	call	_ENVIA_LCD_CMD
  2413   002868  0012               	return		;funcret
  2414   00286A                     __end_of_GENERACARACTER:
  2415                           	callstack 0
  2416                           
  2417 ;; *************** function _CURSOR_ONOFF *****************
  2418 ;; Defined at:
  2419 ;;		line 35 in file "LCD.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  estado          1    wreg     unsigned char 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  estado          1    3[COMRAM] unsigned char 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2, status,0, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/4
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2436 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2437 ;;Total ram usage:        1 bytes
  2438 ;; Hardware stack levels used: 1
  2439 ;; Hardware stack levels required when called: 2
  2440 ;; This function calls:
  2441 ;;		_ENVIA_LCD_CMD
  2442 ;; This function is called by:
  2443 ;;		_lcd_init
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text4
  2448   0028D8                     __ptext4:
  2449                           	callstack 0
  2450   0028D8                     _CURSOR_ONOFF:
  2451                           	callstack 123
  2452                           
  2453                           ;incstack = 0
  2454                           ;CURSOR_ONOFF@estado stored from wreg
  2455   0028D8  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  2456                           
  2457                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  2458   0028DA  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  2459   0028DC  A4D8               	btfss	status,2,c
  2460   0028DE  D003               	goto	l906
  2461   0028E0  0E0E               	movlw	14
  2462   0028E2  ECEB  F013         	call	_ENVIA_LCD_CMD
  2463   0028E6                     l906:
  2464                           
  2465                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2466   0028E6  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  2467   0028E8  A4D8               	btfss	status,2,c
  2468   0028EA  0012               	return	
  2469   0028EC  0E0C               	movlw	12
  2470   0028EE  ECEB  F013         	call	_ENVIA_LCD_CMD
  2471   0028F2  0012               	return		;funcret
  2472   0028F4                     __end_of_CURSOR_ONOFF:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function _CURSOR_HOME *****************
  2476 ;; Defined at:
  2477 ;;		line 30 in file "LCD.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/4
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2495 ;;Total ram usage:        0 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; Hardware stack levels required when called: 2
  2498 ;; This function calls:
  2499 ;;		_ENVIA_LCD_CMD
  2500 ;; This function is called by:
  2501 ;;		_lcd_init
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text5
  2506   00291E                     __ptext5:
  2507                           	callstack 0
  2508   00291E                     _CURSOR_HOME:
  2509                           	callstack 123
  2510                           
  2511                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  2512                           
  2513                           ;incstack = 0
  2514   00291E  0E02               	movlw	2
  2515   002920  ECEB  F013         	call	_ENVIA_LCD_CMD
  2516   002924  0012               	return		;funcret
  2517   002926                     __end_of_CURSOR_HOME:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _BORRAR_LCD *****************
  2521 ;; Defined at:
  2522 ;;		line 67 in file "LCD.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/2
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2540 ;;Total ram usage:        0 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 2
  2543 ;; This function calls:
  2544 ;;		_ENVIA_LCD_CMD
  2545 ;; This function is called by:
  2546 ;;		_lcd_init
  2547 ;;		_main
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text6
  2552   002926                     __ptext6:
  2553                           	callstack 0
  2554   002926                     _BORRAR_LCD:
  2555                           	callstack 123
  2556                           
  2557                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  2558                           
  2559                           ;incstack = 0
  2560   002926  0E01               	movlw	1
  2561   002928  ECEB  F013         	call	_ENVIA_LCD_CMD
  2562   00292C  0012               	return		;funcret
  2563   00292E                     __end_of_BORRAR_LCD:
  2564                           	callstack 0
  2565                           
  2566 ;; *************** function _configuro *****************
  2567 ;; Defined at:
  2568 ;;		line 10 in file "maincode03.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 3F/2
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2586 ;;Total ram usage:        0 bytes
  2587 ;; Hardware stack levels used: 1
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text7
  2596   00286A                     __ptext7:
  2597                           	callstack 0
  2598   00286A                     _configuro:
  2599                           	callstack 126
  2600                           
  2601                           ;maincode03.c: 12:     OSCCON1 = 0x60;
  2602                           
  2603                           ;incstack = 0
  2604   00286A  0E60               	movlw	96
  2605   00286C  0100               	movlb	0	; () banked
  2606   00286E  6FAD               	movwf	173,b	;volatile
  2607                           
  2608                           ;maincode03.c: 13:     OSCFRQ = 0x06;
  2609   002870  0E06               	movlw	6
  2610   002872  6FB1               	movwf	177,b	;volatile
  2611                           
  2612                           ;maincode03.c: 14:     OSCEN = 0x40;
  2613   002874  0E40               	movlw	64
  2614   002876  6FB3               	movwf	179,b	;volatile
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;maincode03.c: 16:     TRISBbits.TRISB4 = 1;
  2618   002878  88C7               	bsf	199,4,c	;volatile
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;maincode03.c: 17:     ANSELBbits.ANSELB4 = 0;
  2622   00287A  0104               	movlb	4	; () banked
  2623   00287C  9908               	bcf	8,4,b	;volatile
  2624                           
  2625                           ; BSR set to: 4
  2626                           ;maincode03.c: 18:     WPUBbits.WPUB4 = 1;
  2627   00287E  8909               	bsf	9,4,b	;volatile
  2628                           
  2629                           ;maincode03.c: 20:     INT2PPS = 0x0C;
  2630   002880  0E0C               	movlw	12
  2631   002882  0102               	movlb	2	; () banked
  2632   002884  6F40               	movwf	64,b	;volatile
  2633                           
  2634                           ; BSR set to: 2
  2635                           ;maincode03.c: 21:     PIE10bits.INT2IE = 1;
  2636   002886  80A8               	bsf	168,0,c	;volatile
  2637                           
  2638                           ; BSR set to: 2
  2639                           ;maincode03.c: 22:     PIR10bits.INT2IF = 0;
  2640   002888  90B8               	bcf	184,0,c	;volatile
  2641                           
  2642                           ; BSR set to: 2
  2643                           ;maincode03.c: 23:     INTCON0bits.INT2EDG = 0;
  2644   00288A  94D6               	bcf	214,2,c	;volatile
  2645                           
  2646                           ; BSR set to: 2
  2647                           ;maincode03.c: 24:     INTCON0bits.GIE = 1;
  2648   00288C  8ED6               	bsf	214,7,c	;volatile
  2649                           
  2650                           ; BSR set to: 2
  2651   00288E  0012               	return		;funcret
  2652   002890                     __end_of_configuro:
  2653                           	callstack 0
  2654                           
  2655 ;; *************** function _POS_CURSOR *****************
  2656 ;; Defined at:
  2657 ;;		line 6 in file "LCD.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  fila            1    wreg     unsigned char 
  2660 ;;  columna         1    3[COMRAM] unsigned char 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  fila            1    4[COMRAM] unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/2
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2672 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2676 ;;Total ram usage:        2 bytes
  2677 ;; Hardware stack levels used: 1
  2678 ;; Hardware stack levels required when called: 2
  2679 ;; This function calls:
  2680 ;;		_ENVIA_LCD_CMD
  2681 ;; This function is called by:
  2682 ;;		_main
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text8
  2687   002890                     __ptext8:
  2688                           	callstack 0
  2689   002890                     _POS_CURSOR:
  2690                           	callstack 124
  2691                           
  2692                           ; BSR set to: 2
  2693                           ;incstack = 0
  2694                           ;POS_CURSOR@fila stored from wreg
  2695   002890  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  2696                           
  2697                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2698   002892  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  2699   002894  A4D8               	btfss	status,2,c
  2700   002896  D005               	goto	l1048
  2701                           
  2702                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2703   002898  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2704   00289A  0F80               	addlw	128
  2705   00289C  ECEB  F013         	call	_ENVIA_LCD_CMD
  2706                           
  2707                           ;LCD.c: 11:  }
  2708   0028A0  0012               	return	
  2709   0028A2                     l1048:
  2710   0028A2  0E02               	movlw	2
  2711   0028A4  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2712   0028A6  A4D8               	btfss	status,2,c
  2713   0028A8  0012               	return	
  2714                           
  2715                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2716   0028AA  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2717   0028AC  0FC0               	addlw	192
  2718   0028AE  ECEB  F013         	call	_ENVIA_LCD_CMD
  2719   0028B2  0012               	return		;funcret
  2720   0028B4                     __end_of_POS_CURSOR:
  2721                           	callstack 0
  2722                           
  2723 ;; *************** function _ENVIA_LCD_CMD *****************
  2724 ;; Defined at:
  2725 ;;		line 104 in file "LCD.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  dato            1    wreg     unsigned char 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  dato            1    1[COMRAM] unsigned char 
  2730 ;;  aux             1    2[COMRAM] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/4
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2741 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2744 ;;Total ram usage:        2 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; Hardware stack levels required when called: 1
  2747 ;; This function calls:
  2748 ;;		_ENVIA_NIBBLE
  2749 ;;		_LEER_LCD
  2750 ;; This function is called by:
  2751 ;;		_POS_CURSOR
  2752 ;;		_CURSOR_HOME
  2753 ;;		_CURSOR_ONOFF
  2754 ;;		_BORRAR_LCD
  2755 ;;		_LCD_CONFIG
  2756 ;;		_GENERACARACTER
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           	psect	text9
  2761   0027D6                     __ptext9:
  2762                           	callstack 0
  2763   0027D6                     _ENVIA_LCD_CMD:
  2764                           	callstack 123
  2765                           
  2766                           ;incstack = 0
  2767                           ;ENVIA_LCD_CMD@dato stored from wreg
  2768   0027D6  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  2769                           
  2770                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2771   0027D8  90C1               	bcf	193,0,c	;volatile
  2772                           
  2773                           ;LCD.c: 108:  LEER_LCD();
  2774   0027DA  EC69  F013         	call	_LEER_LCD	;wreg free
  2775                           
  2776                           ;LCD.c: 109:  TRISD = 0b00000000;
  2777   0027DE  6AC9               	clrf	201,c	;volatile
  2778                           
  2779                           ;LCD.c: 111:         _delay(1200);
  2780   0027E0  0EF0               	movlw	240
  2781   0027E2                     u197:
  2782   0027E2  D000               	nop2	
  2783   0027E4  2EE8               	decfsz	wreg,f,c
  2784   0027E6  D7FD               	bra	u197
  2785                           
  2786                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2787   0027E8  92C1               	bcf	193,1,c	;volatile
  2788                           
  2789                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2790   0027EA  94C1               	bcf	193,2,c	;volatile
  2791                           
  2792                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2793   0027EC  90C1               	bcf	193,0,c	;volatile
  2794                           
  2795                           ;LCD.c: 115:  aux = dato & 0xF0;
  2796   0027EE  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2797   0027F0  0BF0               	andlw	240
  2798   0027F2  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2799                           
  2800                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2801   0027F4  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2802   0027F6  EC7A  F014         	call	_ENVIA_NIBBLE
  2803                           
  2804                           ;LCD.c: 117:  aux = dato<<4;
  2805   0027FA  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2806   0027FC  0BF0               	andlw	240
  2807   0027FE  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2808                           
  2809                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2810   002800  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2811   002802  EC7A  F014         	call	_ENVIA_NIBBLE
  2812   002806  0012               	return		;funcret
  2813   002808                     __end_of_ENVIA_LCD_CMD:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function _ESCRIBE_MENSAJE *****************
  2817 ;; Defined at:
  2818 ;;		line 41 in file "LCD.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2821 ;;		 -> STR_2(16), STR_1(14), 
  2822 ;;  tam             1    4[COMRAM] unsigned char 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  i               1    6[COMRAM] unsigned char 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/2
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2836 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2837 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2838 ;;Total ram usage:        4 bytes
  2839 ;; Hardware stack levels used: 1
  2840 ;; Hardware stack levels required when called: 2
  2841 ;; This function calls:
  2842 ;;		_ENVIA_CHAR
  2843 ;; This function is called by:
  2844 ;;		_main
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text10
  2849   0028B4                     __ptext10:
  2850                           	callstack 0
  2851   0028B4                     _ESCRIBE_MENSAJE:
  2852                           	callstack 124
  2853                           
  2854                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2855                           
  2856                           ;incstack = 0
  2857   0028B4  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2858                           
  2859                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2860   0028B6  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2861   0028B8  D00A               	goto	l1058
  2862   0028BA                     l1054:
  2863                           
  2864                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2865   0028BA  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  2866   0028BC  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2867   0028BE  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  2868   0028C0  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2869   0028C4                     	if	0	;There is only one active tblptr byte
  2870   0028C4                     	endif
  2871   0028C4                     	if	0	;tblptru may be non-zero
  2872   0028C4                     	endif
  2873   0028C4                     	if	0	;tblptru may be non-zero
  2874   0028C4                     	endif
  2875   0028C4  0008               	tblrd		*
  2876   0028C6  50F5               	movf	tablat,w,c
  2877   0028C8  EC04  F014         	call	_ENVIA_CHAR
  2878                           
  2879                           ;LCD.c: 47:  }
  2880   0028CC  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  2881   0028CE                     l1058:
  2882   0028CE  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  2883   0028D0  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2884   0028D2  B0D8               	btfsc	status,0,c
  2885   0028D4  0012               	return	
  2886   0028D6  D7F1               	goto	l1054
  2887   0028D8                     __end_of_ESCRIBE_MENSAJE:
  2888                           	callstack 0
  2889                           
  2890 ;; *************** function _ENVIA_CHAR *****************
  2891 ;; Defined at:
  2892 ;;		line 50 in file "LCD.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  dato            1    wreg     unsigned char 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  dato            1    1[COMRAM] unsigned char 
  2897 ;;  aux             1    2[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/2
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2910 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2911 ;;Total ram usage:        2 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 1
  2914 ;; This function calls:
  2915 ;;		_ENVIA_NIBBLE
  2916 ;;		_LEER_LCD
  2917 ;; This function is called by:
  2918 ;;		_ESCRIBE_MENSAJE
  2919 ;;		_GENERACARACTER
  2920 ;;		_main
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text11
  2925   002808                     __ptext11:
  2926                           	callstack 0
  2927   002808                     _ENVIA_CHAR:
  2928                           	callstack 123
  2929                           
  2930                           ;incstack = 0
  2931                           ;ENVIA_CHAR@dato stored from wreg
  2932   002808  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2933                           
  2934                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2935   00280A  80C1               	bsf	193,0,c	;volatile
  2936                           
  2937                           ;LCD.c: 54:  LEER_LCD();
  2938   00280C  EC69  F013         	call	_LEER_LCD	;wreg free
  2939                           
  2940                           ;LCD.c: 55:  TRISD = 0x00;
  2941   002810  6AC9               	clrf	201,c	;volatile
  2942                           
  2943                           ;LCD.c: 56:         _delay(1200);
  2944   002812  0EF0               	movlw	240
  2945   002814                     u207:
  2946   002814  D000               	nop2	
  2947   002816  2EE8               	decfsz	wreg,f,c
  2948   002818  D7FD               	bra	u207
  2949                           
  2950                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2951   00281A  92C1               	bcf	193,1,c	;volatile
  2952                           
  2953                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2954   00281C  94C1               	bcf	193,2,c	;volatile
  2955                           
  2956                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2957   00281E  80C1               	bsf	193,0,c	;volatile
  2958                           
  2959                           ;LCD.c: 61:  aux = dato & 0xF0;
  2960   002820  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2961   002822  0BF0               	andlw	240
  2962   002824  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2963                           
  2964                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2965   002826  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2966   002828  EC7A  F014         	call	_ENVIA_NIBBLE
  2967                           
  2968                           ;LCD.c: 63:  aux = dato << 4;
  2969   00282C  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2970   00282E  0BF0               	andlw	240
  2971   002830  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2972                           
  2973                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2974   002832  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2975   002834  EC7A  F014         	call	_ENVIA_NIBBLE
  2976   002838  0012               	return		;funcret
  2977   00283A                     __end_of_ENVIA_CHAR:
  2978                           	callstack 0
  2979                           
  2980 ;; *************** function _LEER_LCD *****************
  2981 ;; Defined at:
  2982 ;;		line 121 in file "LCD.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;		None
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  aux             1    0[COMRAM] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2, status,0
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/4
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2999 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3000 ;;Total ram usage:        1 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_ENVIA_CHAR
  3006 ;;		_ENVIA_LCD_CMD
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text12
  3011   0026D2                     __ptext12:
  3012                           	callstack 0
  3013   0026D2                     _LEER_LCD:
  3014                           	callstack 123
  3015                           
  3016                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3017                           
  3018                           ;incstack = 0
  3019   0026D2  0EF8               	movlw	248
  3020   0026D4  6EC9               	movwf	201,c	;volatile
  3021                           
  3022                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  3023   0026D6  90C1               	bcf	193,0,c	;volatile
  3024                           
  3025                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  3026   0026D8  82C1               	bsf	193,1,c	;volatile
  3027                           
  3028                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  3029   0026DA  84C1               	bsf	193,2,c	;volatile
  3030                           
  3031                           ;LCD.c: 128:         _delay(1200);
  3032   0026DC  0EF0               	movlw	240
  3033   0026DE                     u217:
  3034   0026DE  D000               	nop2	
  3035   0026E0  2EE8               	decfsz	wreg,f,c
  3036   0026E2  D7FD               	bra	u217
  3037                           
  3038                           ;LCD.c: 130:  aux = PORTD;
  3039   0026E4  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  3040                           
  3041                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  3042   0026E8  94C1               	bcf	193,2,c	;volatile
  3043                           
  3044                           ;LCD.c: 132:         _delay(1200);
  3045   0026EA  0EF0               	movlw	240
  3046   0026EC                     u227:
  3047   0026EC  D000               	nop2	
  3048   0026EE  2EE8               	decfsz	wreg,f,c
  3049   0026F0  D7FD               	bra	u227
  3050                           
  3051                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  3052   0026F2  84C1               	bsf	193,2,c	;volatile
  3053                           
  3054                           ;LCD.c: 135:         _delay(1200);
  3055   0026F4  0EF0               	movlw	240
  3056   0026F6                     u237:
  3057   0026F6  D000               	nop2	
  3058   0026F8  2EE8               	decfsz	wreg,f,c
  3059   0026FA  D7FD               	bra	u237
  3060   0026FC                     l830:
  3061                           
  3062                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3063   0026FC  94C1               	bcf	193,2,c	;volatile
  3064                           
  3065                           ;LCD.c: 138:  aux = aux & 0x80;
  3066   0026FE  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  3067   002700  0B80               	andlw	128
  3068   002702  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  3069                           
  3070                           ;LCD.c: 139:  while(aux == 0x80)
  3071   002704  D012               	goto	l846
  3072   002706                     l67:
  3073                           
  3074                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3075   002706  84C1               	bsf	193,2,c	;volatile
  3076                           
  3077                           ;LCD.c: 142:             _delay(1200);
  3078   002708  0EF0               	movlw	240
  3079   00270A                     u247:
  3080   00270A  D000               	nop2	
  3081   00270C  2EE8               	decfsz	wreg,f,c
  3082   00270E  D7FD               	bra	u247
  3083                           
  3084                           ;LCD.c: 143:             aux = PORTD;
  3085   002710  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  3086                           
  3087                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3088   002714  94C1               	bcf	193,2,c	;volatile
  3089                           
  3090                           ;LCD.c: 145:             _delay(1200);
  3091   002716  0EF0               	movlw	240
  3092   002718                     u257:
  3093   002718  D000               	nop2	
  3094   00271A  2EE8               	decfsz	wreg,f,c
  3095   00271C  D7FD               	bra	u257
  3096                           
  3097                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3098   00271E  84C1               	bsf	193,2,c	;volatile
  3099                           
  3100                           ;LCD.c: 147:             _delay(1200);
  3101   002720  0EF0               	movlw	240
  3102   002722                     u267:
  3103   002722  D000               	nop2	
  3104   002724  2EE8               	decfsz	wreg,f,c
  3105   002726  D7FD               	bra	u267
  3106   002728  D7E9               	goto	l830
  3107   00272A                     l846:
  3108                           
  3109                           ;LCD.c: 139:  while(aux == 0x80)
  3110   00272A  0E80               	movlw	128
  3111   00272C  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  3112   00272E  A4D8               	btfss	status,2,c
  3113   002730  0012               	return	
  3114   002732  D7E9               	goto	l67
  3115   002734                     __end_of_LEER_LCD:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function _ENVIA_NIBBLE *****************
  3119 ;; Defined at:
  3120 ;;		line 93 in file "LCD.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  dato            1    wreg     unsigned char 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  dato            1    0[COMRAM] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/4
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3137 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3138 ;;Total ram usage:        1 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_ENVIA_CHAR
  3144 ;;		_LCD_CONFIG
  3145 ;;		_ENVIA_LCD_CMD
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text13
  3150   0028F4                     __ptext13:
  3151                           	callstack 0
  3152   0028F4                     _ENVIA_NIBBLE:
  3153                           	callstack 124
  3154                           
  3155                           ;incstack = 0
  3156                           ;ENVIA_NIBBLE@dato stored from wreg
  3157   0028F4  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  3158                           
  3159                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3160   0028F6  0E0F               	movlw	15
  3161   0028F8  16C1               	andwf	193,f,c	;volatile
  3162                           
  3163                           ;LCD.c: 96:  dato &= 0xF0;
  3164   0028FA  0EF0               	movlw	240
  3165   0028FC  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  3166                           
  3167                           ;LCD.c: 97:  LATD|= dato;
  3168   0028FE  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  3169   002900  12C1               	iorwf	193,f,c	;volatile
  3170                           
  3171                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3172   002902  84C1               	bsf	193,2,c	;volatile
  3173                           
  3174                           ;LCD.c: 100:         _delay(1200);
  3175   002904  0EF0               	movlw	240
  3176   002906                     u277:
  3177   002906  D000               	nop2	
  3178   002908  2EE8               	decfsz	wreg,f,c
  3179   00290A  D7FD               	bra	u277
  3180                           
  3181                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3182   00290C  94C1               	bcf	193,2,c	;volatile
  3183   00290E  0012               	return		;funcret
  3184   002910                     __end_of_ENVIA_NIBBLE:
  3185                           	callstack 0
  3186                           
  3187                           	psect	rparam
  3188   000001                     ___rparam_used  equ	1
  3189   000000                     ___param_bank   equ	0
  3190   000000                     __Lparam        equ	__Lrparam
  3191   000000                     __Hparam        equ	__Hrparam
  3192                           
  3193                           	psect	config
  3194                           
  3195                           ;Config register CONFIG1 @ 0x300000
  3196                           ;	External Oscillator Selection
  3197                           ;	FEXTOSC = OFF, Oscillator not enabled
  3198                           ;	Reset Oscillator Selection
  3199                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3200   300000                     	org	3145728
  3201   300000  FC                 	db	252
  3202                           
  3203                           ;Config register CONFIG2 @ 0x300001
  3204                           ;	Clock out Enable bit
  3205                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3206                           ;	PRLOCKED One-Way Set Enable bit
  3207                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3208                           ;	Clock Switch Enable bit
  3209                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3210                           ;	Fail-Safe Clock Monitor Enable bit
  3211                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3212   300001                     	org	3145729
  3213   300001  FF                 	db	255
  3214                           
  3215                           ;Config register CONFIG3 @ 0x300002
  3216                           ;	MCLR Enable bit
  3217                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3218                           ;	Power-up timer selection bits
  3219                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  3220                           ;	Multi-vector enable bit
  3221                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3222                           ;	IVTLOCK bit One-way set enable bit
  3223                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3224                           ;	Low Power BOR Enable bit
  3225                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3226                           ;	Brown-out Reset Enable bits
  3227                           ;	BOREN = OFF, Brown-out Reset disabled
  3228   300002                     	org	3145730
  3229   300002  3D                 	db	61
  3230                           
  3231                           ;Config register CONFIG4 @ 0x300003
  3232                           ;	Brown-out Reset Voltage Selection bits
  3233                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3234                           ;	ZCD Disable bit
  3235                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3236                           ;	PPSLOCK bit One-Way Set Enable bit
  3237                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3238                           ;	Stack Full/Underflow Reset Enable bit
  3239                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3240                           ;	Low Voltage Programming Enable bit
  3241                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3242                           ;	Extended Instruction Set Enable bit
  3243                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3244   300003                     	org	3145731
  3245   300003  DF                 	db	223
  3246                           
  3247                           ;Config register CONFIG5 @ 0x300004
  3248                           ;	WDT Period selection bits
  3249                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3250                           ;	WDT operating mode
  3251                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3252   300004                     	org	3145732
  3253   300004  9F                 	db	159
  3254                           
  3255                           ;Config register CONFIG6 @ 0x300005
  3256                           ;	WDT Window Select bits
  3257                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3258                           ;	WDT input clock selector
  3259                           ;	WDTCCS = SC, Software Control
  3260   300005                     	org	3145733
  3261   300005  FF                 	db	255
  3262                           
  3263                           ;Config register CONFIG7 @ 0x300006
  3264                           ;	Boot Block Size selection bits
  3265                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3266                           ;	Boot Block enable bit
  3267                           ;	BBEN = OFF, Boot block disabled
  3268                           ;	Storage Area Flash enable bit
  3269                           ;	SAFEN = OFF, SAF disabled
  3270                           ;	Background Debugger
  3271                           ;	DEBUG = OFF, Background Debugger disabled
  3272   300006                     	org	3145734
  3273   300006  FF                 	db	255
  3274                           
  3275                           ;Config register CONFIG8 @ 0x300007
  3276                           ;	Boot Block Write Protection bit
  3277                           ;	WRTB = OFF, Boot Block not Write protected
  3278                           ;	Configuration Register Write Protection bit
  3279                           ;	WRTC = OFF, Configuration registers not Write protected
  3280                           ;	Data EEPROM Write Protection bit
  3281                           ;	WRTD = OFF, Data EEPROM not Write protected
  3282                           ;	SAF Write protection bit
  3283                           ;	WRTSAF = OFF, SAF not Write Protected
  3284                           ;	Application Block write protection bit
  3285                           ;	WRTAPP = OFF, Application Block not write protected
  3286   300007                     	org	3145735
  3287   300007  FF                 	db	255
  3288                           
  3289                           ;Config register CONFIG10 @ 0x300009
  3290                           ;	PFM and Data EEPROM Code Protection bit
  3291                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3292   300009                     	org	3145737
  3293   300009  FF                 	db	255
  3294                           tosu	equ	0x4FF
  3295                           tosh	equ	0x4FE
  3296                           tosl	equ	0x4FD
  3297                           stkptr	equ	0x4FC
  3298                           pclatu	equ	0x4FB
  3299                           pclath	equ	0x4FA
  3300                           pcl	equ	0x4F9
  3301                           tblptru	equ	0x4F8
  3302                           tblptrh	equ	0x4F7
  3303                           tblptrl	equ	0x4F6
  3304                           tablat	equ	0x4F5
  3305                           prodh	equ	0x4F4
  3306                           prodl	equ	0x4F3
  3307                           indf0	equ	0x4EF
  3308                           postinc0	equ	0x4EE
  3309                           postdec0	equ	0x4ED
  3310                           preinc0	equ	0x4EC
  3311                           plusw0	equ	0x4EB
  3312                           fsr0h	equ	0x4EA
  3313                           fsr0l	equ	0x4E9
  3314                           wreg	equ	0x4E8
  3315                           indf1	equ	0x4E7
  3316                           postinc1	equ	0x4E6
  3317                           postdec1	equ	0x4E5
  3318                           preinc1	equ	0x4E4
  3319                           plusw1	equ	0x4E3
  3320                           fsr1h	equ	0x4E2
  3321                           fsr1l	equ	0x4E1
  3322                           bsr	equ	0x4E0
  3323                           indf2	equ	0x4DF
  3324                           postinc2	equ	0x4DE
  3325                           postdec2	equ	0x4DD
  3326                           preinc2	equ	0x4DC
  3327                           plusw2	equ	0x4DB
  3328                           fsr2h	equ	0x4DA
  3329                           fsr2l	equ	0x4D9
  3330                           status	equ	0x4D8

Data Sizes:
    Strings     30
    Constant    16
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      10
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[14]), STR_2(CODE[16]), 

    GENERACARACTER@vector	PTR const unsigned char  size(1) Largest target is 8
		 -> persona_1(CODE[8]), persona_2(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_lcd_init
    _lcd_init->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1562
                                              8 COMRAM     2     2      0
                         _BORRAR_LCD
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     881
                                              7 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     2      2     356
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     226
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     215
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _configuro
   _lcd_init
     _BORRAR_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM           95      0       0      0.0%
BITBANK5           160      0       0      0.0%
BITBANK6           256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BITBIGSFRlh       1012      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBIGSFRlll       173      0       0      0.0%
BITBIGSFRh          87      0       0      0.0%
BITBIGSFRllh         5      0       0      0.0%
COMRAM              95     10      10     10.5%
BANK5              160      0       0      0.0%
BANK6              256      0       0      0.0%
BANK7              256      0       0      0.0%
BANK8              256      0       0      0.0%
BANK9              256      0       0      0.0%
BANK10             256      0       0      0.0%
BANK11             256      0       0      0.0%
BANK12             256      0       0      0.0%
BANK13             256      0       0      0.0%
BANK14             256      0       0      0.0%
BANK15             256      0       0      0.0%
BANK16             256      0       0      0.0%
BANK17             256      0       0      0.0%
BANK18             256      0       0      0.0%
BANK19             256      0       0      0.0%
BANK20             256      0       0      0.0%
BANK21             256      0       0      0.0%
BANK22             256      0       0      0.0%
BANK23             256      0       0      0.0%
BANK24             256      0       0      0.0%
BANK25             256      0       0      0.0%
BANK26             256      0       0      0.0%
BANK27             256      0       0      0.0%
BANK28             256      0       0      0.0%
BANK29             256      0       0      0.0%
BANK30             256      0       0      0.0%
BANK31             256      0       0      0.0%
BANK32             256      0       0      0.0%
BANK33             256      0       0      0.0%
BANK34             256      0       0      0.0%
BANK35             256      0       0      0.0%
BANK36             256      0       0      0.0%
BIGRAM            8191      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      10      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Jun 06 11:51:51 2025

                     l67 2706            ENVIA_CHAR@aux 0503                      l830 26FC  
                    l906 28E6                      l846 272A                      u207 2814  
                    u127 266E                      u217 26DE                      u137 269A  
                    u227 26EC                      u147 26C2                      u237 26F6  
                    u157 27A4                      u247 270A                      u167 2744  
                    u257 2718                      u177 2752                      u267 2722  
                    u187 2762                      u277 2906                      u197 27E2  
            LEER_LCD@aux 0501                      wreg 04E8             ?_CURSOR_HOME 0501  
         ??_ENVIA_NIBBLE 0501           ENVIA_CHAR@dato 0502                     l1036 2848  
                   l1054 28BA                     l1048 28A2                     l1058 28CE  
                   l1092 2680                     STR_1 2621                     STR_2 2611  
                   _LATD 04C1                     _main 2630                     prodl 04F3  
                   start FFFC            ?_CURSOR_ONOFF 0501             ___param_bank 0000  
        ??_ENVIA_LCD_CMD 0502         __end_of_LEER_LCD 2734           _GENERACARACTER 283A  
                  ?_main 0501                    _OSCEN 00B3                    _PORTD 04D1  
                  _TRISD 04C9              ?_POS_CURSOR 0504                    tablat 04F5  
                  status 04D8           ??_CURSOR_ONOFF 0504          __initialization 2910  
           __end_of_main 26D2   __end_of_GENERACARACTER 286A          _ESCRIBE_MENSAJE 28B4  
                 ??_main 0509            __activetblptr 0001                   _ANSELD 0418  
                 _OSCFRQ 00B1         __end_of_lcd_init 27D6     __end_of_ENVIA_NIBBLE 2910  
        ?_GENERACARACTER 0504                   isa$std 0001             __mediumconst 2600  
                 tblptrh 04F7                   tblptrl 04F6                   tblptru 04F8  
           ??_BORRAR_LCD 0504                ?_LEER_LCD 0501               __accesstop 0560  
__end_of__initialization 2910             ??_LCD_CONFIG 0504            ___rparam_used 0001  
           ??_ENVIA_CHAR 0502  __end_of_ESCRIBE_MENSAJE 28D8           __pcstackCOMRAM 0501  
     __end_of_BORRAR_LCD 292E         ENVIA_LCD_CMD@aux 0503     __end_of_CURSOR_ONOFF 28F4  
     __end_of_LCD_CONFIG 2794       __end_of_ENVIA_CHAR 283A               ??_LEER_LCD 0501  
       ENVIA_NIBBLE@dato 0501                  _INT2PPS 0240                  _OSCCON1 00AD  
           ??_POS_CURSOR 0505                ?_lcd_init 0501                  __Hparam 0000  
                __Lparam 0000         ?_ESCRIBE_MENSAJE 0504        __end_of_configuro 2890  
           __psmallconst 2600    __end_of_ENVIA_LCD_CMD 2808                  __pcinit 2910  
     __end_of_POS_CURSOR 28B4                  __ramtop 2600                  __ptext0 2630  
                __ptext1 2794                  __ptext2 2734                  __ptext3 283A  
                __ptext4 28D8                  __ptext5 291E                  __ptext6 2926  
                __ptext7 286A                  __ptext8 2890                  __ptext9 27D6  
        GENERACARACTER@i 0507                _PIE10bits 04A8               ??_lcd_init 0508  
           _ENVIA_NIBBLE 28F4     end_of_initialization 2910        __end_of_persona_1 2611  
      __end_of_persona_2 2609                _PIR10bits 04B8         ??_GENERACARACTER 0506  
   GENERACARACTER@vector 0504                _TRISBbits 04C7             _CURSOR_ONOFF 28D8  
     CURSOR_ONOFF@estado 0504            ??_CURSOR_HOME 0504      start_initialization 2910  
      ENVIA_LCD_CMD@dato 0502      __end_of_CURSOR_HOME 2926        GENERACARACTER@pos 0505  
              _configuro 286A              __smallconst 2600                 _LEER_LCD 26D2  
               _LATDbits 04C1                _persona_1 2609                _persona_2 2601  
       ESCRIBE_MENSAJE@i 0507           POS_CURSOR@fila 0505               ?_configuro 0501  
               _WPUBbits 0409              _CURSOR_HOME 291E              _INTCON0bits 04D6  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 2600  
             _ANSELBbits 0408                 __ptext10 28B4                 __ptext11 2808  
               __ptext12 26D2                 __ptext13 28F4               _BORRAR_LCD 2926  
               _lcd_init 2794               _LCD_CONFIG 2734               _ENVIA_CHAR 2808  
               isa$xinst 0000            _ENVIA_LCD_CMD 27D6              ??_configuro 0501  
      ??_ESCRIBE_MENSAJE 0506    ESCRIBE_MENSAJE@cadena 0504           ?_ENVIA_LCD_CMD 0501  
            ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501               _POS_CURSOR 2890  
            ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 0505              ?_ENVIA_CHAR 0501  
      POS_CURSOR@columna 0504  
