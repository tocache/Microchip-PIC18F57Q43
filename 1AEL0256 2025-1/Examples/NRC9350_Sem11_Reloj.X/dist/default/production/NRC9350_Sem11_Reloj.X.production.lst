

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jun 09 19:43:10 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=1
    29                           	psect	text18,global,reloc=4,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=4,class=CODE,space=0,delta=1
    31                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Generated 04/02/2025 GMT
    37                           ; 
    38                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F57Q43 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   0004E0                     bsr             equ	1248
    71   0004E9                     fsr0            equ	1257
    72   0004EA                     fsr0h           equ	1258
    73   0004E9                     fsr0l           equ	1257
    74   0004E1                     fsr1            equ	1249
    75   0004E2                     fsr1h           equ	1250
    76   0004E1                     fsr1l           equ	1249
    77   0004D9                     fsr2            equ	1241
    78   0004DA                     fsr2h           equ	1242
    79   0004D9                     fsr2l           equ	1241
    80   0004EF                     indf0           equ	1263
    81   0004E7                     indf1           equ	1255
    82   0004DF                     indf2           equ	1247
    83   0004D6                     intcon          equ	1238
    84   000041                     nvmcon          equ	65
    85   0004F9                     pcl             equ	1273
    86   0004FA                     pclath          equ	1274
    87   0004FB                     pclatu          equ	1275
    88   0004EB                     plusw0          equ	1259
    89   0004E3                     plusw1          equ	1251
    90   0004DB                     plusw2          equ	1243
    91   0004ED                     postdec0        equ	1261
    92   0004E5                     postdec1        equ	1253
    93   0004DD                     postdec2        equ	1245
    94   0004EE                     postinc0        equ	1262
    95   0004E6                     postinc1        equ	1254
    96   0004DE                     postinc2        equ	1246
    97   0004EC                     preinc0         equ	1260
    98   0004E4                     preinc1         equ	1252
    99   0004DC                     preinc2         equ	1244
   100   0004F3                     prod            equ	1267
   101   0004F4                     prodh           equ	1268
   102   0004F3                     prodl           equ	1267
   103   0004D8                     status          equ	1240
   104   0004F5                     tablat          equ	1269
   105   0004F6                     tblptr          equ	1270
   106   0004F7                     tblptrh         equ	1271
   107   0004F6                     tblptrl         equ	1270
   108   0004F8                     tblptru         equ	1272
   109   0004FD                     tosl            equ	1277
   110   0004E8                     wreg            equ	1256
   111   000039                     CLKRCON         equ	57	;# 
   112   00003A                     CLKRCLK         equ	58	;# 
   113   000040                     NVMCON0         equ	64	;# 
   114   000041                     NVMCON1         equ	65	;# 
   115   000042                     NVMLOCK         equ	66	;# 
   116   000043                     NVMADR          equ	67	;# 
   117   000043                     NVMADRL         equ	67	;# 
   118   000044                     NVMADRH         equ	68	;# 
   119   000045                     NVMADRU         equ	69	;# 
   120   000046                     NVMDAT          equ	70	;# 
   121   000046                     NVMDATL         equ	70	;# 
   122   000047                     NVMDATH         equ	71	;# 
   123   000048                     VREGCON         equ	72	;# 
   124   000049                     BORCON          equ	73	;# 
   125   00004A                     HLVDCON0        equ	74	;# 
   126   00004B                     HLVDCON1        equ	75	;# 
   127   00004C                     ZCDCON          equ	76	;# 
   128   000060                     PMD0            equ	96	;# 
   129   000061                     PMD1            equ	97	;# 
   130   000063                     PMD3            equ	99	;# 
   131   000064                     PMD4            equ	100	;# 
   132   000065                     PMD5            equ	101	;# 
   133   000066                     PMD6            equ	102	;# 
   134   000067                     PMD7            equ	103	;# 
   135   000068                     PMD8            equ	104	;# 
   136   00006A                     MD1CON0         equ	106	;# 
   137   00006B                     MD1CON1         equ	107	;# 
   138   00006C                     MD1SRC          equ	108	;# 
   139   00006D                     MD1CARL         equ	109	;# 
   140   00006E                     MD1CARH         equ	110	;# 
   141   00006F                     CMOUT           equ	111	;# 
   142   000070                     CM1CON0         equ	112	;# 
   143   000071                     CM1CON1         equ	113	;# 
   144   000072                     CM1NCH          equ	114	;# 
   145   000073                     CM1PCH          equ	115	;# 
   146   000074                     CM2CON0         equ	116	;# 
   147   000075                     CM2CON1         equ	117	;# 
   148   000076                     CM2NCH          equ	118	;# 
   149   000077                     CM2PCH          equ	119	;# 
   150   000078                     WDTCON0         equ	120	;# 
   151   000079                     WDTCON1         equ	121	;# 
   152   00007A                     WDTPS           equ	122	;# 
   153   00007A                     WDTPSL          equ	122	;# 
   154   00007B                     WDTPSH          equ	123	;# 
   155   00007C                     WDTTMR          equ	124	;# 
   156   00007D                     DAC1DAT         equ	125	;# 
   157   00007D                     DAC1DATL        equ	125	;# 
   158   00007F                     DAC1CON         equ	127	;# 
   159   000080                     SPI1RXB         equ	128	;# 
   160   000081                     SPI1TXB         equ	129	;# 
   161   000082                     SPI1TCNT        equ	130	;# 
   162   000082                     SPI1TCNTL       equ	130	;# 
   163   000083                     SPI1TCNTH       equ	131	;# 
   164   000084                     SPI1CON0        equ	132	;# 
   165   000085                     SPI1CON1        equ	133	;# 
   166   000086                     SPI1CON2        equ	134	;# 
   167   000087                     SPI1STATUS      equ	135	;# 
   168   000088                     SPI1TWIDTH      equ	136	;# 
   169   000089                     SPI1BAUD        equ	137	;# 
   170   00008A                     SPI1INTF        equ	138	;# 
   171   00008B                     SPI1INTE        equ	139	;# 
   172   00008C                     SPI1CLK         equ	140	;# 
   173   00008D                     SPI2RXB         equ	141	;# 
   174   00008E                     SPI2TXB         equ	142	;# 
   175   00008F                     SPI2TCNT        equ	143	;# 
   176   00008F                     SPI2TCNTL       equ	143	;# 
   177   000090                     SPI2TCNTH       equ	144	;# 
   178   000091                     SPI2CON0        equ	145	;# 
   179   000092                     SPI2CON1        equ	146	;# 
   180   000093                     SPI2CON2        equ	147	;# 
   181   000094                     SPI2STATUS      equ	148	;# 
   182   000095                     SPI2TWIDTH      equ	149	;# 
   183   000096                     SPI2BAUD        equ	150	;# 
   184   000097                     SPI2INTF        equ	151	;# 
   185   000098                     SPI2INTE        equ	152	;# 
   186   000099                     SPI2CLK         equ	153	;# 
   187   0000AC                     ACTCON          equ	172	;# 
   188   0000AD                     OSCCON1         equ	173	;# 
   189   0000AE                     OSCCON2         equ	174	;# 
   190   0000AF                     OSCCON3         equ	175	;# 
   191   0000B0                     OSCTUNE         equ	176	;# 
   192   0000B1                     OSCFRQ          equ	177	;# 
   193   0000B1                     OSCFREQ         equ	177	;# 
   194   0000B2                     OSCSTAT         equ	178	;# 
   195   0000B2                     OSCSTAT1        equ	178	;# 
   196   0000B3                     OSCEN           equ	179	;# 
   197   0000B4                     PRLOCK          equ	180	;# 
   198   0000B5                     SCANPR          equ	181	;# 
   199   0000B6                     DMA1PR          equ	182	;# 
   200   0000B7                     DMA2PR          equ	183	;# 
   201   0000B8                     DMA3PR          equ	184	;# 
   202   0000B9                     DMA4PR          equ	185	;# 
   203   0000BA                     DMA5PR          equ	186	;# 
   204   0000BB                     DMA6PR          equ	187	;# 
   205   0000BE                     MAINPR          equ	190	;# 
   206   0000BF                     ISRPR           equ	191	;# 
   207   0000D4                     CLCDATA         equ	212	;# 
   208   0000D5                     CLCSELECT       equ	213	;# 
   209   0000D6                     CLCnCON         equ	214	;# 
   210   0000D7                     CLCnPOL         equ	215	;# 
   211   0000D8                     CLCnSEL0        equ	216	;# 
   212   0000D9                     CLCnSEL1        equ	217	;# 
   213   0000DA                     CLCnSEL2        equ	218	;# 
   214   0000DB                     CLCnSEL3        equ	219	;# 
   215   0000DC                     CLCnGLS0        equ	220	;# 
   216   0000DD                     CLCnGLS1        equ	221	;# 
   217   0000DE                     CLCnGLS2        equ	222	;# 
   218   0000DF                     CLCnGLS3        equ	223	;# 
   219   0000E8                     DMASELECT       equ	232	;# 
   220   0000E9                     DMAnBUF         equ	233	;# 
   221   0000EA                     DMAnDCNT        equ	234	;# 
   222   0000EA                     DMAnDCNTL       equ	234	;# 
   223   0000EB                     DMAnDCNTH       equ	235	;# 
   224   0000EC                     DMAnDPTR        equ	236	;# 
   225   0000EC                     DMAnDPTRL       equ	236	;# 
   226   0000ED                     DMAnDPTRH       equ	237	;# 
   227   0000EE                     DMAnDSZ         equ	238	;# 
   228   0000EE                     DMAnDSZL        equ	238	;# 
   229   0000EF                     DMAnDSZH        equ	239	;# 
   230   0000F0                     DMAnDSA         equ	240	;# 
   231   0000F0                     DMAnDSAL        equ	240	;# 
   232   0000F1                     DMAnDSAH        equ	241	;# 
   233   0000F2                     DMAnSCNT        equ	242	;# 
   234   0000F2                     DMAnSCNTL       equ	242	;# 
   235   0000F3                     DMAnSCNTH       equ	243	;# 
   236   0000F4                     DMAnSPTR        equ	244	;# 
   237   0000F4                     DMAnSPTRL       equ	244	;# 
   238   0000F5                     DMAnSPTRH       equ	245	;# 
   239   0000F6                     DMAnSPTRU       equ	246	;# 
   240   0000F7                     DMAnSSZ         equ	247	;# 
   241   0000F7                     DMAnSSZL        equ	247	;# 
   242   0000F8                     DMAnSSZH        equ	248	;# 
   243   0000F9                     DMAnSSA         equ	249	;# 
   244   0000F9                     DMAnSSAL        equ	249	;# 
   245   0000FA                     DMAnSSAH        equ	250	;# 
   246   0000FB                     DMAnSSAU        equ	251	;# 
   247   0000FC                     DMAnCON0        equ	252	;# 
   248   0000FD                     DMAnCON1        equ	253	;# 
   249   0000FE                     DMAnAIRQ        equ	254	;# 
   250   0000FF                     DMAnSIRQ        equ	255	;# 
   251   000200                     PPSLOCK         equ	512	;# 
   252   000201                     RA0PPS          equ	513	;# 
   253   000202                     RA1PPS          equ	514	;# 
   254   000203                     RA2PPS          equ	515	;# 
   255   000204                     RA3PPS          equ	516	;# 
   256   000205                     RA4PPS          equ	517	;# 
   257   000206                     RA5PPS          equ	518	;# 
   258   000207                     RA6PPS          equ	519	;# 
   259   000208                     RA7PPS          equ	520	;# 
   260   000209                     RB0PPS          equ	521	;# 
   261   00020A                     RB1PPS          equ	522	;# 
   262   00020B                     RB2PPS          equ	523	;# 
   263   00020C                     RB3PPS          equ	524	;# 
   264   00020D                     RB4PPS          equ	525	;# 
   265   00020E                     RB5PPS          equ	526	;# 
   266   00020F                     RB6PPS          equ	527	;# 
   267   000210                     RB7PPS          equ	528	;# 
   268   000211                     RC0PPS          equ	529	;# 
   269   000212                     RC1PPS          equ	530	;# 
   270   000213                     RC2PPS          equ	531	;# 
   271   000214                     RC3PPS          equ	532	;# 
   272   000215                     RC4PPS          equ	533	;# 
   273   000216                     RC5PPS          equ	534	;# 
   274   000217                     RC6PPS          equ	535	;# 
   275   000218                     RC7PPS          equ	536	;# 
   276   000219                     RD0PPS          equ	537	;# 
   277   00021A                     RD1PPS          equ	538	;# 
   278   00021B                     RD2PPS          equ	539	;# 
   279   00021C                     RD3PPS          equ	540	;# 
   280   00021D                     RD4PPS          equ	541	;# 
   281   00021E                     RD5PPS          equ	542	;# 
   282   00021F                     RD6PPS          equ	543	;# 
   283   000220                     RD7PPS          equ	544	;# 
   284   000221                     RE0PPS          equ	545	;# 
   285   000222                     RE1PPS          equ	546	;# 
   286   000223                     RE2PPS          equ	547	;# 
   287   000229                     RF0PPS          equ	553	;# 
   288   00022A                     RF1PPS          equ	554	;# 
   289   00022B                     RF2PPS          equ	555	;# 
   290   00022C                     RF3PPS          equ	556	;# 
   291   00022D                     RF4PPS          equ	557	;# 
   292   00022E                     RF5PPS          equ	558	;# 
   293   00022F                     RF6PPS          equ	559	;# 
   294   000230                     RF7PPS          equ	560	;# 
   295   00023E                     INT0PPS         equ	574	;# 
   296   00023F                     INT1PPS         equ	575	;# 
   297   000240                     INT2PPS         equ	576	;# 
   298   000241                     T0CKIPPS        equ	577	;# 
   299   000242                     T1CKIPPS        equ	578	;# 
   300   000243                     T1GPPS          equ	579	;# 
   301   000244                     T3CKIPPS        equ	580	;# 
   302   000245                     T3GPPS          equ	581	;# 
   303   000246                     T5CKIPPS        equ	582	;# 
   304   000247                     T5GPPS          equ	583	;# 
   305   000248                     T2INPPS         equ	584	;# 
   306   000249                     T4INPPS         equ	585	;# 
   307   00024A                     T6INPPS         equ	586	;# 
   308   00024F                     CCP1PPS         equ	591	;# 
   309   000250                     CCP2PPS         equ	592	;# 
   310   000251                     CCP3PPS         equ	593	;# 
   311   000253                     PWM1ERSPPS      equ	595	;# 
   312   000254                     PWM2ERSPPS      equ	596	;# 
   313   000255                     PWM3ERSPPS      equ	597	;# 
   314   000257                     PWMIN0PPS       equ	599	;# 
   315   000258                     PWMIN1PPS       equ	600	;# 
   316   000259                     SMT1WINPPS      equ	601	;# 
   317   00025A                     SMT1SIGPPS      equ	602	;# 
   318   00025B                     CWG1PPS         equ	603	;# 
   319   00025B                     CWG1INPPS       equ	603	;# 
   320   00025C                     CWG2PPS         equ	604	;# 
   321   00025C                     CWG2INPPS       equ	604	;# 
   322   00025D                     CWG3PPS         equ	605	;# 
   323   00025D                     CWG3INPPS       equ	605	;# 
   324   00025E                     MD1CARLPPS      equ	606	;# 
   325   00025E                     MDCARLPPS       equ	606	;# 
   326   00025F                     MD1CARHPPS      equ	607	;# 
   327   00025F                     MDCARHPPS       equ	607	;# 
   328   000260                     MD1SRCPPS       equ	608	;# 
   329   000260                     MDSRCPPS        equ	608	;# 
   330   000261                     CLCIN0PPS       equ	609	;# 
   331   000262                     CLCIN1PPS       equ	610	;# 
   332   000263                     CLCIN2PPS       equ	611	;# 
   333   000264                     CLCIN3PPS       equ	612	;# 
   334   000265                     CLCIN4PPS       equ	613	;# 
   335   000266                     CLCIN5PPS       equ	614	;# 
   336   000267                     CLCIN6PPS       equ	615	;# 
   337   000268                     CLCIN7PPS       equ	616	;# 
   338   000269                     ADACTPPS        equ	617	;# 
   339   00026A                     SPI1SCKPPS      equ	618	;# 
   340   00026B                     SPI1SDIPPS      equ	619	;# 
   341   00026C                     SPI1SSPPS       equ	620	;# 
   342   00026D                     SPI2SCKPPS      equ	621	;# 
   343   00026E                     SPI2SDIPPS      equ	622	;# 
   344   00026F                     SPI2SSPPS       equ	623	;# 
   345   000270                     I2C1SDAPPS      equ	624	;# 
   346   000271                     I2C1SCLPPS      equ	625	;# 
   347   000272                     U1RXPPS         equ	626	;# 
   348   000273                     U1CTSPPS        equ	627	;# 
   349   000274                     U2RXPPS         equ	628	;# 
   350   000275                     U2CTSPPS        equ	629	;# 
   351   000276                     U3RXPPS         equ	630	;# 
   352   000277                     U3CTSPPS        equ	631	;# 
   353   000278                     U4RXPPS         equ	632	;# 
   354   000279                     U4CTSPPS        equ	633	;# 
   355   00027A                     U5RXPPS         equ	634	;# 
   356   00027B                     U5CTSPPS        equ	635	;# 
   357   000286                     RC4I2C          equ	646	;# 
   358   000287                     RC3I2C          equ	647	;# 
   359   000288                     RB2I2C          equ	648	;# 
   360   000289                     RB1I2C          equ	649	;# 
   361   00028B                     I2C1RXB         equ	651	;# 
   362   00028C                     I2C1TXB         equ	652	;# 
   363   00028D                     I2C1CNT         equ	653	;# 
   364   00028E                     I2C1ADB0        equ	654	;# 
   365   00028F                     I2C1ADB1        equ	655	;# 
   366   000290                     I2C1ADR0        equ	656	;# 
   367   000291                     I2C1ADR1        equ	657	;# 
   368   000292                     I2C1ADR2        equ	658	;# 
   369   000293                     I2C1ADR3        equ	659	;# 
   370   000294                     I2C1CON0        equ	660	;# 
   371   000295                     I2C1CON1        equ	661	;# 
   372   000296                     I2C1CON2        equ	662	;# 
   373   000297                     I2C1ERR         equ	663	;# 
   374   000298                     I2C1STAT0       equ	664	;# 
   375   000299                     I2C1STAT1       equ	665	;# 
   376   00029A                     I2C1PIR         equ	666	;# 
   377   00029B                     I2C1PIE         equ	667	;# 
   378   00029C                     I2C1CLK         equ	668	;# 
   379   00029D                     I2C1BTO         equ	669	;# 
   380   0002A1                     U1RXB           equ	673	;# 
   381   0002A1                     U1RXBL          equ	673	;# 
   382   0002A2                     U1RXCHK         equ	674	;# 
   383   0002A3                     U1TXB           equ	675	;# 
   384   0002A3                     U1TXBL          equ	675	;# 
   385   0002A4                     U1TXCHK         equ	676	;# 
   386   0002A5                     U1P1            equ	677	;# 
   387   0002A5                     U1P1L           equ	677	;# 
   388   0002A6                     U1P1H           equ	678	;# 
   389   0002A7                     U1P2            equ	679	;# 
   390   0002A7                     U1P2L           equ	679	;# 
   391   0002A8                     U1P2H           equ	680	;# 
   392   0002A9                     U1P3            equ	681	;# 
   393   0002A9                     U1P3L           equ	681	;# 
   394   0002AA                     U1P3H           equ	682	;# 
   395   0002AB                     U1CON0          equ	683	;# 
   396   0002AC                     U1CON1          equ	684	;# 
   397   0002AD                     U1CON2          equ	685	;# 
   398   0002AE                     U1BRG           equ	686	;# 
   399   0002AE                     U1BRGL          equ	686	;# 
   400   0002AF                     U1BRGH          equ	687	;# 
   401   0002B0                     U1FIFO          equ	688	;# 
   402   0002B1                     U1UIR           equ	689	;# 
   403   0002B2                     U1ERRIR         equ	690	;# 
   404   0002B3                     U1ERRIE         equ	691	;# 
   405   0002B4                     U2RXB           equ	692	;# 
   406   0002B4                     U2RXBL          equ	692	;# 
   407   0002B6                     U2TXB           equ	694	;# 
   408   0002B6                     U2TXBL          equ	694	;# 
   409   0002B8                     U2P1            equ	696	;# 
   410   0002B8                     U2P1L           equ	696	;# 
   411   0002BA                     U2P2            equ	698	;# 
   412   0002BA                     U2P2L           equ	698	;# 
   413   0002BC                     U2P3            equ	700	;# 
   414   0002BC                     U2P3L           equ	700	;# 
   415   0002BE                     U2CON0          equ	702	;# 
   416   0002BF                     U2CON1          equ	703	;# 
   417   0002C0                     U2CON2          equ	704	;# 
   418   0002C1                     U2BRG           equ	705	;# 
   419   0002C1                     U2BRGL          equ	705	;# 
   420   0002C2                     U2BRGH          equ	706	;# 
   421   0002C3                     U2FIFO          equ	707	;# 
   422   0002C4                     U2UIR           equ	708	;# 
   423   0002C5                     U2ERRIR         equ	709	;# 
   424   0002C6                     U2ERRIE         equ	710	;# 
   425   0002C7                     U3RXB           equ	711	;# 
   426   0002C7                     U3RXBL          equ	711	;# 
   427   0002C9                     U3TXB           equ	713	;# 
   428   0002C9                     U3TXBL          equ	713	;# 
   429   0002CB                     U3P1            equ	715	;# 
   430   0002CB                     U3P1L           equ	715	;# 
   431   0002CD                     U3P2            equ	717	;# 
   432   0002CD                     U3P2L           equ	717	;# 
   433   0002CF                     U3P3            equ	719	;# 
   434   0002CF                     U3P3L           equ	719	;# 
   435   0002D1                     U3CON0          equ	721	;# 
   436   0002D2                     U3CON1          equ	722	;# 
   437   0002D3                     U3CON2          equ	723	;# 
   438   0002D4                     U3BRG           equ	724	;# 
   439   0002D4                     U3BRGL          equ	724	;# 
   440   0002D5                     U3BRGH          equ	725	;# 
   441   0002D6                     U3FIFO          equ	726	;# 
   442   0002D7                     U3UIR           equ	727	;# 
   443   0002D8                     U3ERRIR         equ	728	;# 
   444   0002D9                     U3ERRIE         equ	729	;# 
   445   0002DA                     U4RXB           equ	730	;# 
   446   0002DA                     U4RXBL          equ	730	;# 
   447   0002DC                     U4TXB           equ	732	;# 
   448   0002DC                     U4TXBL          equ	732	;# 
   449   0002DE                     U4P1            equ	734	;# 
   450   0002DE                     U4P1L           equ	734	;# 
   451   0002E0                     U4P2            equ	736	;# 
   452   0002E0                     U4P2L           equ	736	;# 
   453   0002E2                     U4P3            equ	738	;# 
   454   0002E2                     U4P3L           equ	738	;# 
   455   0002E4                     U4CON0          equ	740	;# 
   456   0002E5                     U4CON1          equ	741	;# 
   457   0002E6                     U4CON2          equ	742	;# 
   458   0002E7                     U4BRG           equ	743	;# 
   459   0002E7                     U4BRGL          equ	743	;# 
   460   0002E8                     U4BRGH          equ	744	;# 
   461   0002E9                     U4FIFO          equ	745	;# 
   462   0002EA                     U4UIR           equ	746	;# 
   463   0002EB                     U4ERRIR         equ	747	;# 
   464   0002EC                     U4ERRIE         equ	748	;# 
   465   0002ED                     U5RXB           equ	749	;# 
   466   0002ED                     U5RXBL          equ	749	;# 
   467   0002EF                     U5TXB           equ	751	;# 
   468   0002EF                     U5TXBL          equ	751	;# 
   469   0002F1                     U5P1            equ	753	;# 
   470   0002F1                     U5P1L           equ	753	;# 
   471   0002F3                     U5P2            equ	755	;# 
   472   0002F3                     U5P2L           equ	755	;# 
   473   0002F5                     U5P3            equ	757	;# 
   474   0002F5                     U5P3L           equ	757	;# 
   475   0002F7                     U5CON0          equ	759	;# 
   476   0002F8                     U5CON1          equ	760	;# 
   477   0002F9                     U5CON2          equ	761	;# 
   478   0002FA                     U5BRG           equ	762	;# 
   479   0002FA                     U5BRGL          equ	762	;# 
   480   0002FB                     U5BRGH          equ	763	;# 
   481   0002FC                     U5FIFO          equ	764	;# 
   482   0002FD                     U5UIR           equ	765	;# 
   483   0002FE                     U5ERRIR         equ	766	;# 
   484   0002FF                     U5ERRIE         equ	767	;# 
   485   000300                     SMT1TMR         equ	768	;# 
   486   000300                     SMT1TMRL        equ	768	;# 
   487   000301                     SMT1TMRH        equ	769	;# 
   488   000302                     SMT1TMRU        equ	770	;# 
   489   000303                     SMT1CPR         equ	771	;# 
   490   000303                     SMT1CPRL        equ	771	;# 
   491   000304                     SMT1CPRH        equ	772	;# 
   492   000305                     SMT1CPRU        equ	773	;# 
   493   000306                     SMT1CPW         equ	774	;# 
   494   000306                     SMT1CPWL        equ	774	;# 
   495   000307                     SMT1CPWH        equ	775	;# 
   496   000308                     SMT1CPWU        equ	776	;# 
   497   000309                     SMT1PR          equ	777	;# 
   498   000309                     SMT1PRL         equ	777	;# 
   499   00030A                     SMT1PRH         equ	778	;# 
   500   00030B                     SMT1PRU         equ	779	;# 
   501   00030C                     SMT1CON0        equ	780	;# 
   502   00030D                     SMT1CON1        equ	781	;# 
   503   00030E                     SMT1STAT        equ	782	;# 
   504   00030F                     SMT1CLK         equ	783	;# 
   505   000310                     SMT1SIG         equ	784	;# 
   506   000311                     SMT1WIN         equ	785	;# 
   507   000318                     TMR0L           equ	792	;# 
   508   000318                     TMR0            equ	792	;# 
   509   000319                     TMR0H           equ	793	;# 
   510   000319                     PR0             equ	793	;# 
   511   00031A                     T0CON0          equ	794	;# 
   512   00031B                     T0CON1          equ	795	;# 
   513   00031C                     TMR1            equ	796	;# 
   514   00031C                     TMR1L           equ	796	;# 
   515   00031D                     TMR1H           equ	797	;# 
   516   00031E                     T1CON           equ	798	;# 
   517   00031E                     TMR1CON         equ	798	;# 
   518   00031F                     T1GCON          equ	799	;# 
   519   00031F                     TMR1GCON        equ	799	;# 
   520   000320                     T1GATE          equ	800	;# 
   521   000320                     TMR1GATE        equ	800	;# 
   522   000321                     T1CLK           equ	801	;# 
   523   000321                     TMR1CLK         equ	801	;# 
   524   000321                     PR1             equ	801	;# 
   525   000322                     T2TMR           equ	802	;# 
   526   000322                     TMR2            equ	802	;# 
   527   000323                     T2PR            equ	803	;# 
   528   000323                     PR2             equ	803	;# 
   529   000324                     T2CON           equ	804	;# 
   530   000325                     T2HLT           equ	805	;# 
   531   000326                     T2CLKCON        equ	806	;# 
   532   000326                     T2CLK           equ	806	;# 
   533   000327                     T2RST           equ	807	;# 
   534   000328                     TMR3            equ	808	;# 
   535   000328                     TMR3L           equ	808	;# 
   536   000329                     TMR3H           equ	809	;# 
   537   00032A                     T3CON           equ	810	;# 
   538   00032A                     TMR3CON         equ	810	;# 
   539   00032B                     T3GCON          equ	811	;# 
   540   00032B                     TMR3GCON        equ	811	;# 
   541   00032C                     T3GATE          equ	812	;# 
   542   00032C                     TMR3GATE        equ	812	;# 
   543   00032D                     T3CLK           equ	813	;# 
   544   00032D                     TMR3CLK         equ	813	;# 
   545   00032D                     PR3             equ	813	;# 
   546   00032E                     T4TMR           equ	814	;# 
   547   00032E                     TMR4            equ	814	;# 
   548   00032F                     T4PR            equ	815	;# 
   549   00032F                     PR4             equ	815	;# 
   550   000330                     T4CON           equ	816	;# 
   551   000331                     T4HLT           equ	817	;# 
   552   000332                     T4CLKCON        equ	818	;# 
   553   000332                     T4CLK           equ	818	;# 
   554   000333                     T4RST           equ	819	;# 
   555   000334                     TMR5            equ	820	;# 
   556   000334                     TMR5L           equ	820	;# 
   557   000335                     TMR5H           equ	821	;# 
   558   000336                     T5CON           equ	822	;# 
   559   000336                     TMR5CON         equ	822	;# 
   560   000337                     T5GCON          equ	823	;# 
   561   000337                     TMR5GCON        equ	823	;# 
   562   000338                     T5GATE          equ	824	;# 
   563   000338                     TMR5GATE        equ	824	;# 
   564   000339                     T5CLK           equ	825	;# 
   565   000339                     TMR5CLK         equ	825	;# 
   566   000339                     PR5             equ	825	;# 
   567   00033A                     T6TMR           equ	826	;# 
   568   00033A                     TMR6            equ	826	;# 
   569   00033B                     T6PR            equ	827	;# 
   570   00033B                     PR6             equ	827	;# 
   571   00033C                     T6CON           equ	828	;# 
   572   00033D                     T6HLT           equ	829	;# 
   573   00033E                     T6CLKCON        equ	830	;# 
   574   00033E                     T6CLK           equ	830	;# 
   575   00033F                     T6RST           equ	831	;# 
   576   000340                     CCPR1           equ	832	;# 
   577   000340                     CCPR1L          equ	832	;# 
   578   000341                     CCPR1H          equ	833	;# 
   579   000342                     CCP1CON         equ	834	;# 
   580   000343                     CCP1CAP         equ	835	;# 
   581   000344                     CCPR2           equ	836	;# 
   582   000344                     CCPR2L          equ	836	;# 
   583   000345                     CCPR2H          equ	837	;# 
   584   000346                     CCP2CON         equ	838	;# 
   585   000347                     CCP2CAP         equ	839	;# 
   586   000348                     CCPR3           equ	840	;# 
   587   000348                     CCPR3L          equ	840	;# 
   588   000349                     CCPR3H          equ	841	;# 
   589   00034A                     CCP3CON         equ	842	;# 
   590   00034B                     CCP3CAP         equ	843	;# 
   591   00034C                     CCPTMRS0        equ	844	;# 
   592   00034F                     CRCDATA         equ	847	;# 
   593   00034F                     CRCDATL         equ	847	;# 
   594   000350                     CRCDATH         equ	848	;# 
   595   000351                     CRCACC          equ	849	;# 
   596   000351                     CRCACCL         equ	849	;# 
   597   000352                     CRCACCH         equ	850	;# 
   598   000353                     CRCSHFT         equ	851	;# 
   599   000353                     CRCSHIFTL       equ	851	;# 
   600   000354                     CRCSHIFTH       equ	852	;# 
   601   000355                     CRCXOR          equ	853	;# 
   602   000355                     CRCXORL         equ	853	;# 
   603   000356                     CRCXORH         equ	854	;# 
   604   000357                     CRCCON0         equ	855	;# 
   605   000358                     CRCCON1         equ	856	;# 
   606   00035A                     SCANLADR        equ	858	;# 
   607   00035A                     SCANLADRL       equ	858	;# 
   608   00035B                     SCANLADRH       equ	859	;# 
   609   00035C                     SCANLADRU       equ	860	;# 
   610   00035D                     SCANHADR        equ	861	;# 
   611   00035D                     SCANHADRL       equ	861	;# 
   612   00035E                     SCANHADRH       equ	862	;# 
   613   00035F                     SCANHADRU       equ	863	;# 
   614   000360                     SCANCON0        equ	864	;# 
   615   000361                     SCANTRIG        equ	865	;# 
   616   000362                     IPR0            equ	866	;# 
   617   000363                     IPR1            equ	867	;# 
   618   000364                     IPR2            equ	868	;# 
   619   000365                     IPR3            equ	869	;# 
   620   000366                     IPR4            equ	870	;# 
   621   000367                     IPR5            equ	871	;# 
   622   000368                     IPR6            equ	872	;# 
   623   000369                     IPR7            equ	873	;# 
   624   00036A                     IPR8            equ	874	;# 
   625   00036B                     IPR9            equ	875	;# 
   626   00036C                     IPR10           equ	876	;# 
   627   00036D                     IPR11           equ	877	;# 
   628   00036E                     IPR12           equ	878	;# 
   629   00036F                     IPR13           equ	879	;# 
   630   000370                     IPR14           equ	880	;# 
   631   000371                     IPR15           equ	881	;# 
   632   000373                     STATUS_CSHAD    equ	883	;# 
   633   000374                     WREG_CSHAD      equ	884	;# 
   634   000375                     BSR_CSHAD       equ	885	;# 
   635   000376                     SHADCON         equ	886	;# 
   636   000377                     STATUS_SHAD     equ	887	;# 
   637   000378                     WREG_SHAD       equ	888	;# 
   638   000379                     BSR_SHAD        equ	889	;# 
   639   00037A                     PCLATH_SHAD     equ	890	;# 
   640   00037B                     PCLATU_SHAD     equ	891	;# 
   641   00037C                     FSR0SH          equ	892	;# 
   642   00037C                     FSR0L_SHAD      equ	892	;# 
   643   00037D                     FSR0H_SHAD      equ	893	;# 
   644   00037E                     FSR1SH          equ	894	;# 
   645   00037E                     FSR1L_SHAD      equ	894	;# 
   646   00037F                     FSR1H_SHAD      equ	895	;# 
   647   000380                     FSR2SH          equ	896	;# 
   648   000380                     FSR2L_SHAD      equ	896	;# 
   649   000381                     FSR2H_SHAD      equ	897	;# 
   650   000382                     PRODSH          equ	898	;# 
   651   000382                     PRODL_SHAD      equ	898	;# 
   652   000383                     PRODH_SHAD      equ	899	;# 
   653   0003BC                     CWG1CLK         equ	956	;# 
   654   0003BC                     CWG1CLKCON      equ	956	;# 
   655   0003BD                     CWG1ISM         equ	957	;# 
   656   0003BD                     CWG1DAT         equ	957	;# 
   657   0003BE                     CWG1DBR         equ	958	;# 
   658   0003BF                     CWG1DBF         equ	959	;# 
   659   0003C0                     CWG1CON0        equ	960	;# 
   660   0003C1                     CWG1CON1        equ	961	;# 
   661   0003C2                     CWG1AS0         equ	962	;# 
   662   0003C3                     CWG1AS1         equ	963	;# 
   663   0003C4                     CWG1STR         equ	964	;# 
   664   0003C5                     CWG2CLK         equ	965	;# 
   665   0003C5                     CWG2CLKCON      equ	965	;# 
   666   0003C6                     CWG2ISM         equ	966	;# 
   667   0003C6                     CWG2DAT         equ	966	;# 
   668   0003C7                     CWG2DBR         equ	967	;# 
   669   0003C8                     CWG2DBF         equ	968	;# 
   670   0003C9                     CWG2CON0        equ	969	;# 
   671   0003CA                     CWG2CON1        equ	970	;# 
   672   0003CB                     CWG2AS0         equ	971	;# 
   673   0003CC                     CWG2AS1         equ	972	;# 
   674   0003CD                     CWG2STR         equ	973	;# 
   675   0003CE                     CWG3CLK         equ	974	;# 
   676   0003CE                     CWG3CLKCON      equ	974	;# 
   677   0003CF                     CWG3ISM         equ	975	;# 
   678   0003CF                     CWG3DAT         equ	975	;# 
   679   0003D0                     CWG3DBR         equ	976	;# 
   680   0003D1                     CWG3DBF         equ	977	;# 
   681   0003D2                     CWG3CON0        equ	978	;# 
   682   0003D3                     CWG3CON1        equ	979	;# 
   683   0003D4                     CWG3AS0         equ	980	;# 
   684   0003D5                     CWG3AS1         equ	981	;# 
   685   0003D6                     CWG3STR         equ	982	;# 
   686   0003D7                     FVRCON          equ	983	;# 
   687   0003D8                     ADCPCON         equ	984	;# 
   688   0003D8                     ADCP            equ	984	;# 
   689   0003D9                     ADLTH           equ	985	;# 
   690   0003D9                     ADLTHL          equ	985	;# 
   691   0003DA                     ADLTHH          equ	986	;# 
   692   0003DB                     ADUTH           equ	987	;# 
   693   0003DB                     ADUTHL          equ	987	;# 
   694   0003DC                     ADUTHH          equ	988	;# 
   695   0003DD                     ADERR           equ	989	;# 
   696   0003DD                     ADERRL          equ	989	;# 
   697   0003DE                     ADERRH          equ	990	;# 
   698   0003DF                     ADSTPT          equ	991	;# 
   699   0003DF                     ADSTPTL         equ	991	;# 
   700   0003E0                     ADSTPTH         equ	992	;# 
   701   0003E1                     ADFLTR          equ	993	;# 
   702   0003E1                     ADFLTRL         equ	993	;# 
   703   0003E2                     ADFLTRH         equ	994	;# 
   704   0003E3                     ADACC           equ	995	;# 
   705   0003E3                     ADACCL          equ	995	;# 
   706   0003E4                     ADACCH          equ	996	;# 
   707   0003E5                     ADACCU          equ	997	;# 
   708   0003E6                     ADCNT           equ	998	;# 
   709   0003E7                     ADRPT           equ	999	;# 
   710   0003E8                     ADPREV          equ	1000	;# 
   711   0003E8                     ADPREVL         equ	1000	;# 
   712   0003E9                     ADPREVH         equ	1001	;# 
   713   0003EA                     ADRES           equ	1002	;# 
   714   0003EA                     ADRESL          equ	1002	;# 
   715   0003EB                     ADRESH          equ	1003	;# 
   716   0003EC                     ADPCH           equ	1004	;# 
   717   0003EE                     ADACQ           equ	1006	;# 
   718   0003EE                     ADACQL          equ	1006	;# 
   719   0003EF                     ADACQH          equ	1007	;# 
   720   0003F0                     ADCAP           equ	1008	;# 
   721   0003F1                     ADPRE           equ	1009	;# 
   722   0003F1                     ADPREL          equ	1009	;# 
   723   0003F2                     ADPREH          equ	1010	;# 
   724   0003F3                     ADCON0          equ	1011	;# 
   725   0003F4                     ADCON1          equ	1012	;# 
   726   0003F5                     ADCON2          equ	1013	;# 
   727   0003F6                     ADCON3          equ	1014	;# 
   728   0003F7                     ADSTAT          equ	1015	;# 
   729   0003F8                     ADREF           equ	1016	;# 
   730   0003F9                     ADACT           equ	1017	;# 
   731   0003FA                     ADCLK           equ	1018	;# 
   732   000400                     ANSELA          equ	1024	;# 
   733   000401                     WPUA            equ	1025	;# 
   734   000402                     ODCONA          equ	1026	;# 
   735   000403                     SLRCONA         equ	1027	;# 
   736   000404                     INLVLA          equ	1028	;# 
   737   000405                     IOCAP           equ	1029	;# 
   738   000406                     IOCAN           equ	1030	;# 
   739   000407                     IOCAF           equ	1031	;# 
   740   000408                     ANSELB          equ	1032	;# 
   741   000409                     WPUB            equ	1033	;# 
   742   00040A                     ODCONB          equ	1034	;# 
   743   00040B                     SLRCONB         equ	1035	;# 
   744   00040C                     INLVLB          equ	1036	;# 
   745   00040D                     IOCBP           equ	1037	;# 
   746   00040E                     IOCBN           equ	1038	;# 
   747   00040F                     IOCBF           equ	1039	;# 
   748   000410                     ANSELC          equ	1040	;# 
   749   000411                     WPUC            equ	1041	;# 
   750   000412                     ODCONC          equ	1042	;# 
   751   000413                     SLRCONC         equ	1043	;# 
   752   000414                     INLVLC          equ	1044	;# 
   753   000415                     IOCCP           equ	1045	;# 
   754   000416                     IOCCN           equ	1046	;# 
   755   000417                     IOCCF           equ	1047	;# 
   756   000418                     ANSELD          equ	1048	;# 
   757   000419                     WPUD            equ	1049	;# 
   758   00041A                     ODCOND          equ	1050	;# 
   759   00041B                     SLRCOND         equ	1051	;# 
   760   00041C                     INLVLD          equ	1052	;# 
   761   000420                     ANSELE          equ	1056	;# 
   762   000421                     WPUE            equ	1057	;# 
   763   000422                     ODCONE          equ	1058	;# 
   764   000423                     SLRCONE         equ	1059	;# 
   765   000424                     INLVLE          equ	1060	;# 
   766   000425                     IOCEP           equ	1061	;# 
   767   000426                     IOCEN           equ	1062	;# 
   768   000427                     IOCEF           equ	1063	;# 
   769   000428                     ANSELF          equ	1064	;# 
   770   000429                     WPUF            equ	1065	;# 
   771   00042A                     ODCONF          equ	1066	;# 
   772   00042B                     SLRCONF         equ	1067	;# 
   773   00042C                     INLVLF          equ	1068	;# 
   774   000440                     NCO1ACC         equ	1088	;# 
   775   000440                     NCO1ACCL        equ	1088	;# 
   776   000441                     NCO1ACCH        equ	1089	;# 
   777   000442                     NCO1ACCU        equ	1090	;# 
   778   000443                     NCO1INC         equ	1091	;# 
   779   000443                     NCO1INCL        equ	1091	;# 
   780   000444                     NCO1INCH        equ	1092	;# 
   781   000445                     NCO1INCU        equ	1093	;# 
   782   000446                     NCO1CON         equ	1094	;# 
   783   000447                     NCO1CLK         equ	1095	;# 
   784   000448                     NCO2ACC         equ	1096	;# 
   785   000448                     NCO2ACCL        equ	1096	;# 
   786   000449                     NCO2ACCH        equ	1097	;# 
   787   00044A                     NCO2ACCU        equ	1098	;# 
   788   00044B                     NCO2INC         equ	1099	;# 
   789   00044B                     NCO2INCL        equ	1099	;# 
   790   00044C                     NCO2INCH        equ	1100	;# 
   791   00044D                     NCO2INCU        equ	1101	;# 
   792   00044E                     NCO2CON         equ	1102	;# 
   793   00044F                     NCO2CLK         equ	1103	;# 
   794   000450                     NCO3ACC         equ	1104	;# 
   795   000450                     NCO3ACCL        equ	1104	;# 
   796   000451                     NCO3ACCH        equ	1105	;# 
   797   000452                     NCO3ACCU        equ	1106	;# 
   798   000453                     NCO3INC         equ	1107	;# 
   799   000453                     NCO3INCL        equ	1107	;# 
   800   000454                     NCO3INCH        equ	1108	;# 
   801   000455                     NCO3INCU        equ	1109	;# 
   802   000456                     NCO3CON         equ	1110	;# 
   803   000457                     NCO3CLK         equ	1111	;# 
   804   000459                     IVTLOCK         equ	1113	;# 
   805   00045A                     IVTAD           equ	1114	;# 
   806   00045A                     IVTADL          equ	1114	;# 
   807   00045B                     IVTADH          equ	1115	;# 
   808   00045C                     IVTADU          equ	1116	;# 
   809   00045D                     IVTBASE         equ	1117	;# 
   810   00045D                     IVTBASEL        equ	1117	;# 
   811   00045E                     IVTBASEH        equ	1118	;# 
   812   00045F                     IVTBASEU        equ	1119	;# 
   813   000460                     PWM1ERS         equ	1120	;# 
   814   000461                     PWM1CLK         equ	1121	;# 
   815   000462                     PWM1LDS         equ	1122	;# 
   816   000463                     PWM1PR          equ	1123	;# 
   817   000463                     PWM1PRL         equ	1123	;# 
   818   000464                     PWM1PRH         equ	1124	;# 
   819   000465                     PWM1CPRE        equ	1125	;# 
   820   000466                     PWM1PIPOS       equ	1126	;# 
   821   000467                     PWM1GIR         equ	1127	;# 
   822   000468                     PWM1GIE         equ	1128	;# 
   823   000469                     PWM1CON         equ	1129	;# 
   824   00046A                     PWM1S1CFG       equ	1130	;# 
   825   00046B                     PWM1S1P1        equ	1131	;# 
   826   00046B                     PWM1S1P1L       equ	1131	;# 
   827   00046C                     PWM1S1P1H       equ	1132	;# 
   828   00046D                     PWM1S1P2        equ	1133	;# 
   829   00046D                     PWM1S1P2L       equ	1133	;# 
   830   00046E                     PWM1S1P2H       equ	1134	;# 
   831   00046F                     PWM2ERS         equ	1135	;# 
   832   000470                     PWM2CLK         equ	1136	;# 
   833   000471                     PWM2LDS         equ	1137	;# 
   834   000472                     PWM2PR          equ	1138	;# 
   835   000472                     PWM2PRL         equ	1138	;# 
   836   000473                     PWM2PRH         equ	1139	;# 
   837   000474                     PWM2CPRE        equ	1140	;# 
   838   000475                     PWM2PIPOS       equ	1141	;# 
   839   000476                     PWM2GIR         equ	1142	;# 
   840   000477                     PWM2GIE         equ	1143	;# 
   841   000478                     PWM2CON         equ	1144	;# 
   842   000479                     PWM2S1CFG       equ	1145	;# 
   843   00047A                     PWM2S1P1        equ	1146	;# 
   844   00047A                     PWM2S1P1L       equ	1146	;# 
   845   00047B                     PWM2S1P1H       equ	1147	;# 
   846   00047C                     PWM2S1P2        equ	1148	;# 
   847   00047C                     PWM2S1P2L       equ	1148	;# 
   848   00047D                     PWM2S1P2H       equ	1149	;# 
   849   00047E                     PWM3ERS         equ	1150	;# 
   850   00047F                     PWM3CLK         equ	1151	;# 
   851   000480                     PWM3LDS         equ	1152	;# 
   852   000481                     PWM3PR          equ	1153	;# 
   853   000481                     PWM3PRL         equ	1153	;# 
   854   000482                     PWM3PRH         equ	1154	;# 
   855   000483                     PWM3CPRE        equ	1155	;# 
   856   000484                     PWM3PIPOS       equ	1156	;# 
   857   000485                     PWM3GIR         equ	1157	;# 
   858   000486                     PWM3GIE         equ	1158	;# 
   859   000487                     PWM3CON         equ	1159	;# 
   860   000488                     PWM3S1CFG       equ	1160	;# 
   861   000489                     PWM3S1P1        equ	1161	;# 
   862   000489                     PWM3S1P1L       equ	1161	;# 
   863   00048A                     PWM3S1P1H       equ	1162	;# 
   864   00048B                     PWM3S1P2        equ	1163	;# 
   865   00048B                     PWM3S1P2L       equ	1163	;# 
   866   00048C                     PWM3S1P2H       equ	1164	;# 
   867   00049C                     PWMLOAD         equ	1180	;# 
   868   00049D                     PWMEN           equ	1181	;# 
   869   00049E                     PIE0            equ	1182	;# 
   870   00049F                     PIE1            equ	1183	;# 
   871   0004A0                     PIE2            equ	1184	;# 
   872   0004A1                     PIE3            equ	1185	;# 
   873   0004A2                     PIE4            equ	1186	;# 
   874   0004A3                     PIE5            equ	1187	;# 
   875   0004A4                     PIE6            equ	1188	;# 
   876   0004A5                     PIE7            equ	1189	;# 
   877   0004A6                     PIE8            equ	1190	;# 
   878   0004A7                     PIE9            equ	1191	;# 
   879   0004A8                     PIE10           equ	1192	;# 
   880   0004A9                     PIE11           equ	1193	;# 
   881   0004AA                     PIE12           equ	1194	;# 
   882   0004AB                     PIE13           equ	1195	;# 
   883   0004AC                     PIE14           equ	1196	;# 
   884   0004AD                     PIE15           equ	1197	;# 
   885   0004AE                     PIR0            equ	1198	;# 
   886   0004AF                     PIR1            equ	1199	;# 
   887   0004B0                     PIR2            equ	1200	;# 
   888   0004B1                     PIR3            equ	1201	;# 
   889   0004B2                     PIR4            equ	1202	;# 
   890   0004B3                     PIR5            equ	1203	;# 
   891   0004B4                     PIR6            equ	1204	;# 
   892   0004B5                     PIR7            equ	1205	;# 
   893   0004B6                     PIR8            equ	1206	;# 
   894   0004B7                     PIR9            equ	1207	;# 
   895   0004B8                     PIR10           equ	1208	;# 
   896   0004B9                     PIR11           equ	1209	;# 
   897   0004BA                     PIR12           equ	1210	;# 
   898   0004BB                     PIR13           equ	1211	;# 
   899   0004BC                     PIR14           equ	1212	;# 
   900   0004BD                     PIR15           equ	1213	;# 
   901   0004BE                     LATA            equ	1214	;# 
   902   0004BF                     LATB            equ	1215	;# 
   903   0004C0                     LATC            equ	1216	;# 
   904   0004C1                     LATD            equ	1217	;# 
   905   0004C2                     LATE            equ	1218	;# 
   906   0004C3                     LATF            equ	1219	;# 
   907   0004C6                     TRISA           equ	1222	;# 
   908   0004C7                     TRISB           equ	1223	;# 
   909   0004C8                     TRISC           equ	1224	;# 
   910   0004C9                     TRISD           equ	1225	;# 
   911   0004CA                     TRISE           equ	1226	;# 
   912   0004CB                     TRISF           equ	1227	;# 
   913   0004CE                     PORTA           equ	1230	;# 
   914   0004CF                     PORTB           equ	1231	;# 
   915   0004D0                     PORTC           equ	1232	;# 
   916   0004D1                     PORTD           equ	1233	;# 
   917   0004D2                     PORTE           equ	1234	;# 
   918   0004D3                     PORTF           equ	1235	;# 
   919   0004D6                     INTCON0         equ	1238	;# 
   920   0004D7                     INTCON1         equ	1239	;# 
   921   0004D8                     STATUS          equ	1240	;# 
   922   0004D9                     FSR2            equ	1241	;# 
   923   0004D9                     FSR2L           equ	1241	;# 
   924   0004DA                     FSR2H           equ	1242	;# 
   925   0004DB                     PLUSW2          equ	1243	;# 
   926   0004DC                     PREINC2         equ	1244	;# 
   927   0004DD                     POSTDEC2        equ	1245	;# 
   928   0004DE                     POSTINC2        equ	1246	;# 
   929   0004DF                     INDF2           equ	1247	;# 
   930   0004E0                     BSR             equ	1248	;# 
   931   0004E1                     FSR1            equ	1249	;# 
   932   0004E1                     FSR1L           equ	1249	;# 
   933   0004E2                     FSR1H           equ	1250	;# 
   934   0004E3                     PLUSW1          equ	1251	;# 
   935   0004E4                     PREINC1         equ	1252	;# 
   936   0004E5                     POSTDEC1        equ	1253	;# 
   937   0004E6                     POSTINC1        equ	1254	;# 
   938   0004E7                     INDF1           equ	1255	;# 
   939   0004E8                     WREG            equ	1256	;# 
   940   0004E9                     FSR0            equ	1257	;# 
   941   0004E9                     FSR0L           equ	1257	;# 
   942   0004EA                     FSR0H           equ	1258	;# 
   943   0004EB                     PLUSW0          equ	1259	;# 
   944   0004EC                     PREINC0         equ	1260	;# 
   945   0004ED                     POSTDEC0        equ	1261	;# 
   946   0004EE                     POSTINC0        equ	1262	;# 
   947   0004EF                     INDF0           equ	1263	;# 
   948   0004F0                     PCON0           equ	1264	;# 
   949   0004F1                     PCON1           equ	1265	;# 
   950   0004F2                     CPUDOZE         equ	1266	;# 
   951   0004F3                     PROD            equ	1267	;# 
   952   0004F3                     PRODL           equ	1267	;# 
   953   0004F4                     PRODH           equ	1268	;# 
   954   0004F5                     TABLAT          equ	1269	;# 
   955   0004F6                     TBLPTR          equ	1270	;# 
   956   0004F6                     TBLPTRL         equ	1270	;# 
   957   0004F7                     TBLPTRH         equ	1271	;# 
   958   0004F8                     TBLPTRU         equ	1272	;# 
   959   0004F9                     PCLAT           equ	1273	;# 
   960   0004F9                     PCL             equ	1273	;# 
   961   0004FA                     PCLATH          equ	1274	;# 
   962   0004FB                     PCLATU          equ	1275	;# 
   963   0004FC                     STKPTR          equ	1276	;# 
   964   0004FD                     TOS             equ	1277	;# 
   965   0004FD                     TOSL            equ	1277	;# 
   966   0004FE                     TOSH            equ	1278	;# 
   967   0004FF                     TOSU            equ	1279	;# 
   968   000039                     CLKRCON         equ	57	;# 
   969   00003A                     CLKRCLK         equ	58	;# 
   970   000040                     NVMCON0         equ	64	;# 
   971   000041                     NVMCON1         equ	65	;# 
   972   000042                     NVMLOCK         equ	66	;# 
   973   000043                     NVMADR          equ	67	;# 
   974   000043                     NVMADRL         equ	67	;# 
   975   000044                     NVMADRH         equ	68	;# 
   976   000045                     NVMADRU         equ	69	;# 
   977   000046                     NVMDAT          equ	70	;# 
   978   000046                     NVMDATL         equ	70	;# 
   979   000047                     NVMDATH         equ	71	;# 
   980   000048                     VREGCON         equ	72	;# 
   981   000049                     BORCON          equ	73	;# 
   982   00004A                     HLVDCON0        equ	74	;# 
   983   00004B                     HLVDCON1        equ	75	;# 
   984   00004C                     ZCDCON          equ	76	;# 
   985   000060                     PMD0            equ	96	;# 
   986   000061                     PMD1            equ	97	;# 
   987   000063                     PMD3            equ	99	;# 
   988   000064                     PMD4            equ	100	;# 
   989   000065                     PMD5            equ	101	;# 
   990   000066                     PMD6            equ	102	;# 
   991   000067                     PMD7            equ	103	;# 
   992   000068                     PMD8            equ	104	;# 
   993   00006A                     MD1CON0         equ	106	;# 
   994   00006B                     MD1CON1         equ	107	;# 
   995   00006C                     MD1SRC          equ	108	;# 
   996   00006D                     MD1CARL         equ	109	;# 
   997   00006E                     MD1CARH         equ	110	;# 
   998   00006F                     CMOUT           equ	111	;# 
   999   000070                     CM1CON0         equ	112	;# 
  1000   000071                     CM1CON1         equ	113	;# 
  1001   000072                     CM1NCH          equ	114	;# 
  1002   000073                     CM1PCH          equ	115	;# 
  1003   000074                     CM2CON0         equ	116	;# 
  1004   000075                     CM2CON1         equ	117	;# 
  1005   000076                     CM2NCH          equ	118	;# 
  1006   000077                     CM2PCH          equ	119	;# 
  1007   000078                     WDTCON0         equ	120	;# 
  1008   000079                     WDTCON1         equ	121	;# 
  1009   00007A                     WDTPS           equ	122	;# 
  1010   00007A                     WDTPSL          equ	122	;# 
  1011   00007B                     WDTPSH          equ	123	;# 
  1012   00007C                     WDTTMR          equ	124	;# 
  1013   00007D                     DAC1DAT         equ	125	;# 
  1014   00007D                     DAC1DATL        equ	125	;# 
  1015   00007F                     DAC1CON         equ	127	;# 
  1016   000080                     SPI1RXB         equ	128	;# 
  1017   000081                     SPI1TXB         equ	129	;# 
  1018   000082                     SPI1TCNT        equ	130	;# 
  1019   000082                     SPI1TCNTL       equ	130	;# 
  1020   000083                     SPI1TCNTH       equ	131	;# 
  1021   000084                     SPI1CON0        equ	132	;# 
  1022   000085                     SPI1CON1        equ	133	;# 
  1023   000086                     SPI1CON2        equ	134	;# 
  1024   000087                     SPI1STATUS      equ	135	;# 
  1025   000088                     SPI1TWIDTH      equ	136	;# 
  1026   000089                     SPI1BAUD        equ	137	;# 
  1027   00008A                     SPI1INTF        equ	138	;# 
  1028   00008B                     SPI1INTE        equ	139	;# 
  1029   00008C                     SPI1CLK         equ	140	;# 
  1030   00008D                     SPI2RXB         equ	141	;# 
  1031   00008E                     SPI2TXB         equ	142	;# 
  1032   00008F                     SPI2TCNT        equ	143	;# 
  1033   00008F                     SPI2TCNTL       equ	143	;# 
  1034   000090                     SPI2TCNTH       equ	144	;# 
  1035   000091                     SPI2CON0        equ	145	;# 
  1036   000092                     SPI2CON1        equ	146	;# 
  1037   000093                     SPI2CON2        equ	147	;# 
  1038   000094                     SPI2STATUS      equ	148	;# 
  1039   000095                     SPI2TWIDTH      equ	149	;# 
  1040   000096                     SPI2BAUD        equ	150	;# 
  1041   000097                     SPI2INTF        equ	151	;# 
  1042   000098                     SPI2INTE        equ	152	;# 
  1043   000099                     SPI2CLK         equ	153	;# 
  1044   0000AC                     ACTCON          equ	172	;# 
  1045   0000AD                     OSCCON1         equ	173	;# 
  1046   0000AE                     OSCCON2         equ	174	;# 
  1047   0000AF                     OSCCON3         equ	175	;# 
  1048   0000B0                     OSCTUNE         equ	176	;# 
  1049   0000B1                     OSCFRQ          equ	177	;# 
  1050   0000B1                     OSCFREQ         equ	177	;# 
  1051   0000B2                     OSCSTAT         equ	178	;# 
  1052   0000B2                     OSCSTAT1        equ	178	;# 
  1053   0000B3                     OSCEN           equ	179	;# 
  1054   0000B4                     PRLOCK          equ	180	;# 
  1055   0000B5                     SCANPR          equ	181	;# 
  1056   0000B6                     DMA1PR          equ	182	;# 
  1057   0000B7                     DMA2PR          equ	183	;# 
  1058   0000B8                     DMA3PR          equ	184	;# 
  1059   0000B9                     DMA4PR          equ	185	;# 
  1060   0000BA                     DMA5PR          equ	186	;# 
  1061   0000BB                     DMA6PR          equ	187	;# 
  1062   0000BE                     MAINPR          equ	190	;# 
  1063   0000BF                     ISRPR           equ	191	;# 
  1064   0000D4                     CLCDATA         equ	212	;# 
  1065   0000D5                     CLCSELECT       equ	213	;# 
  1066   0000D6                     CLCnCON         equ	214	;# 
  1067   0000D7                     CLCnPOL         equ	215	;# 
  1068   0000D8                     CLCnSEL0        equ	216	;# 
  1069   0000D9                     CLCnSEL1        equ	217	;# 
  1070   0000DA                     CLCnSEL2        equ	218	;# 
  1071   0000DB                     CLCnSEL3        equ	219	;# 
  1072   0000DC                     CLCnGLS0        equ	220	;# 
  1073   0000DD                     CLCnGLS1        equ	221	;# 
  1074   0000DE                     CLCnGLS2        equ	222	;# 
  1075   0000DF                     CLCnGLS3        equ	223	;# 
  1076   0000E8                     DMASELECT       equ	232	;# 
  1077   0000E9                     DMAnBUF         equ	233	;# 
  1078   0000EA                     DMAnDCNT        equ	234	;# 
  1079   0000EA                     DMAnDCNTL       equ	234	;# 
  1080   0000EB                     DMAnDCNTH       equ	235	;# 
  1081   0000EC                     DMAnDPTR        equ	236	;# 
  1082   0000EC                     DMAnDPTRL       equ	236	;# 
  1083   0000ED                     DMAnDPTRH       equ	237	;# 
  1084   0000EE                     DMAnDSZ         equ	238	;# 
  1085   0000EE                     DMAnDSZL        equ	238	;# 
  1086   0000EF                     DMAnDSZH        equ	239	;# 
  1087   0000F0                     DMAnDSA         equ	240	;# 
  1088   0000F0                     DMAnDSAL        equ	240	;# 
  1089   0000F1                     DMAnDSAH        equ	241	;# 
  1090   0000F2                     DMAnSCNT        equ	242	;# 
  1091   0000F2                     DMAnSCNTL       equ	242	;# 
  1092   0000F3                     DMAnSCNTH       equ	243	;# 
  1093   0000F4                     DMAnSPTR        equ	244	;# 
  1094   0000F4                     DMAnSPTRL       equ	244	;# 
  1095   0000F5                     DMAnSPTRH       equ	245	;# 
  1096   0000F6                     DMAnSPTRU       equ	246	;# 
  1097   0000F7                     DMAnSSZ         equ	247	;# 
  1098   0000F7                     DMAnSSZL        equ	247	;# 
  1099   0000F8                     DMAnSSZH        equ	248	;# 
  1100   0000F9                     DMAnSSA         equ	249	;# 
  1101   0000F9                     DMAnSSAL        equ	249	;# 
  1102   0000FA                     DMAnSSAH        equ	250	;# 
  1103   0000FB                     DMAnSSAU        equ	251	;# 
  1104   0000FC                     DMAnCON0        equ	252	;# 
  1105   0000FD                     DMAnCON1        equ	253	;# 
  1106   0000FE                     DMAnAIRQ        equ	254	;# 
  1107   0000FF                     DMAnSIRQ        equ	255	;# 
  1108   000200                     PPSLOCK         equ	512	;# 
  1109   000201                     RA0PPS          equ	513	;# 
  1110   000202                     RA1PPS          equ	514	;# 
  1111   000203                     RA2PPS          equ	515	;# 
  1112   000204                     RA3PPS          equ	516	;# 
  1113   000205                     RA4PPS          equ	517	;# 
  1114   000206                     RA5PPS          equ	518	;# 
  1115   000207                     RA6PPS          equ	519	;# 
  1116   000208                     RA7PPS          equ	520	;# 
  1117   000209                     RB0PPS          equ	521	;# 
  1118   00020A                     RB1PPS          equ	522	;# 
  1119   00020B                     RB2PPS          equ	523	;# 
  1120   00020C                     RB3PPS          equ	524	;# 
  1121   00020D                     RB4PPS          equ	525	;# 
  1122   00020E                     RB5PPS          equ	526	;# 
  1123   00020F                     RB6PPS          equ	527	;# 
  1124   000210                     RB7PPS          equ	528	;# 
  1125   000211                     RC0PPS          equ	529	;# 
  1126   000212                     RC1PPS          equ	530	;# 
  1127   000213                     RC2PPS          equ	531	;# 
  1128   000214                     RC3PPS          equ	532	;# 
  1129   000215                     RC4PPS          equ	533	;# 
  1130   000216                     RC5PPS          equ	534	;# 
  1131   000217                     RC6PPS          equ	535	;# 
  1132   000218                     RC7PPS          equ	536	;# 
  1133   000219                     RD0PPS          equ	537	;# 
  1134   00021A                     RD1PPS          equ	538	;# 
  1135   00021B                     RD2PPS          equ	539	;# 
  1136   00021C                     RD3PPS          equ	540	;# 
  1137   00021D                     RD4PPS          equ	541	;# 
  1138   00021E                     RD5PPS          equ	542	;# 
  1139   00021F                     RD6PPS          equ	543	;# 
  1140   000220                     RD7PPS          equ	544	;# 
  1141   000221                     RE0PPS          equ	545	;# 
  1142   000222                     RE1PPS          equ	546	;# 
  1143   000223                     RE2PPS          equ	547	;# 
  1144   000229                     RF0PPS          equ	553	;# 
  1145   00022A                     RF1PPS          equ	554	;# 
  1146   00022B                     RF2PPS          equ	555	;# 
  1147   00022C                     RF3PPS          equ	556	;# 
  1148   00022D                     RF4PPS          equ	557	;# 
  1149   00022E                     RF5PPS          equ	558	;# 
  1150   00022F                     RF6PPS          equ	559	;# 
  1151   000230                     RF7PPS          equ	560	;# 
  1152   00023E                     INT0PPS         equ	574	;# 
  1153   00023F                     INT1PPS         equ	575	;# 
  1154   000240                     INT2PPS         equ	576	;# 
  1155   000241                     T0CKIPPS        equ	577	;# 
  1156   000242                     T1CKIPPS        equ	578	;# 
  1157   000243                     T1GPPS          equ	579	;# 
  1158   000244                     T3CKIPPS        equ	580	;# 
  1159   000245                     T3GPPS          equ	581	;# 
  1160   000246                     T5CKIPPS        equ	582	;# 
  1161   000247                     T5GPPS          equ	583	;# 
  1162   000248                     T2INPPS         equ	584	;# 
  1163   000249                     T4INPPS         equ	585	;# 
  1164   00024A                     T6INPPS         equ	586	;# 
  1165   00024F                     CCP1PPS         equ	591	;# 
  1166   000250                     CCP2PPS         equ	592	;# 
  1167   000251                     CCP3PPS         equ	593	;# 
  1168   000253                     PWM1ERSPPS      equ	595	;# 
  1169   000254                     PWM2ERSPPS      equ	596	;# 
  1170   000255                     PWM3ERSPPS      equ	597	;# 
  1171   000257                     PWMIN0PPS       equ	599	;# 
  1172   000258                     PWMIN1PPS       equ	600	;# 
  1173   000259                     SMT1WINPPS      equ	601	;# 
  1174   00025A                     SMT1SIGPPS      equ	602	;# 
  1175   00025B                     CWG1PPS         equ	603	;# 
  1176   00025B                     CWG1INPPS       equ	603	;# 
  1177   00025C                     CWG2PPS         equ	604	;# 
  1178   00025C                     CWG2INPPS       equ	604	;# 
  1179   00025D                     CWG3PPS         equ	605	;# 
  1180   00025D                     CWG3INPPS       equ	605	;# 
  1181   00025E                     MD1CARLPPS      equ	606	;# 
  1182   00025E                     MDCARLPPS       equ	606	;# 
  1183   00025F                     MD1CARHPPS      equ	607	;# 
  1184   00025F                     MDCARHPPS       equ	607	;# 
  1185   000260                     MD1SRCPPS       equ	608	;# 
  1186   000260                     MDSRCPPS        equ	608	;# 
  1187   000261                     CLCIN0PPS       equ	609	;# 
  1188   000262                     CLCIN1PPS       equ	610	;# 
  1189   000263                     CLCIN2PPS       equ	611	;# 
  1190   000264                     CLCIN3PPS       equ	612	;# 
  1191   000265                     CLCIN4PPS       equ	613	;# 
  1192   000266                     CLCIN5PPS       equ	614	;# 
  1193   000267                     CLCIN6PPS       equ	615	;# 
  1194   000268                     CLCIN7PPS       equ	616	;# 
  1195   000269                     ADACTPPS        equ	617	;# 
  1196   00026A                     SPI1SCKPPS      equ	618	;# 
  1197   00026B                     SPI1SDIPPS      equ	619	;# 
  1198   00026C                     SPI1SSPPS       equ	620	;# 
  1199   00026D                     SPI2SCKPPS      equ	621	;# 
  1200   00026E                     SPI2SDIPPS      equ	622	;# 
  1201   00026F                     SPI2SSPPS       equ	623	;# 
  1202   000270                     I2C1SDAPPS      equ	624	;# 
  1203   000271                     I2C1SCLPPS      equ	625	;# 
  1204   000272                     U1RXPPS         equ	626	;# 
  1205   000273                     U1CTSPPS        equ	627	;# 
  1206   000274                     U2RXPPS         equ	628	;# 
  1207   000275                     U2CTSPPS        equ	629	;# 
  1208   000276                     U3RXPPS         equ	630	;# 
  1209   000277                     U3CTSPPS        equ	631	;# 
  1210   000278                     U4RXPPS         equ	632	;# 
  1211   000279                     U4CTSPPS        equ	633	;# 
  1212   00027A                     U5RXPPS         equ	634	;# 
  1213   00027B                     U5CTSPPS        equ	635	;# 
  1214   000286                     RC4I2C          equ	646	;# 
  1215   000287                     RC3I2C          equ	647	;# 
  1216   000288                     RB2I2C          equ	648	;# 
  1217   000289                     RB1I2C          equ	649	;# 
  1218   00028B                     I2C1RXB         equ	651	;# 
  1219   00028C                     I2C1TXB         equ	652	;# 
  1220   00028D                     I2C1CNT         equ	653	;# 
  1221   00028E                     I2C1ADB0        equ	654	;# 
  1222   00028F                     I2C1ADB1        equ	655	;# 
  1223   000290                     I2C1ADR0        equ	656	;# 
  1224   000291                     I2C1ADR1        equ	657	;# 
  1225   000292                     I2C1ADR2        equ	658	;# 
  1226   000293                     I2C1ADR3        equ	659	;# 
  1227   000294                     I2C1CON0        equ	660	;# 
  1228   000295                     I2C1CON1        equ	661	;# 
  1229   000296                     I2C1CON2        equ	662	;# 
  1230   000297                     I2C1ERR         equ	663	;# 
  1231   000298                     I2C1STAT0       equ	664	;# 
  1232   000299                     I2C1STAT1       equ	665	;# 
  1233   00029A                     I2C1PIR         equ	666	;# 
  1234   00029B                     I2C1PIE         equ	667	;# 
  1235   00029C                     I2C1CLK         equ	668	;# 
  1236   00029D                     I2C1BTO         equ	669	;# 
  1237   0002A1                     U1RXB           equ	673	;# 
  1238   0002A1                     U1RXBL          equ	673	;# 
  1239   0002A2                     U1RXCHK         equ	674	;# 
  1240   0002A3                     U1TXB           equ	675	;# 
  1241   0002A3                     U1TXBL          equ	675	;# 
  1242   0002A4                     U1TXCHK         equ	676	;# 
  1243   0002A5                     U1P1            equ	677	;# 
  1244   0002A5                     U1P1L           equ	677	;# 
  1245   0002A6                     U1P1H           equ	678	;# 
  1246   0002A7                     U1P2            equ	679	;# 
  1247   0002A7                     U1P2L           equ	679	;# 
  1248   0002A8                     U1P2H           equ	680	;# 
  1249   0002A9                     U1P3            equ	681	;# 
  1250   0002A9                     U1P3L           equ	681	;# 
  1251   0002AA                     U1P3H           equ	682	;# 
  1252   0002AB                     U1CON0          equ	683	;# 
  1253   0002AC                     U1CON1          equ	684	;# 
  1254   0002AD                     U1CON2          equ	685	;# 
  1255   0002AE                     U1BRG           equ	686	;# 
  1256   0002AE                     U1BRGL          equ	686	;# 
  1257   0002AF                     U1BRGH          equ	687	;# 
  1258   0002B0                     U1FIFO          equ	688	;# 
  1259   0002B1                     U1UIR           equ	689	;# 
  1260   0002B2                     U1ERRIR         equ	690	;# 
  1261   0002B3                     U1ERRIE         equ	691	;# 
  1262   0002B4                     U2RXB           equ	692	;# 
  1263   0002B4                     U2RXBL          equ	692	;# 
  1264   0002B6                     U2TXB           equ	694	;# 
  1265   0002B6                     U2TXBL          equ	694	;# 
  1266   0002B8                     U2P1            equ	696	;# 
  1267   0002B8                     U2P1L           equ	696	;# 
  1268   0002BA                     U2P2            equ	698	;# 
  1269   0002BA                     U2P2L           equ	698	;# 
  1270   0002BC                     U2P3            equ	700	;# 
  1271   0002BC                     U2P3L           equ	700	;# 
  1272   0002BE                     U2CON0          equ	702	;# 
  1273   0002BF                     U2CON1          equ	703	;# 
  1274   0002C0                     U2CON2          equ	704	;# 
  1275   0002C1                     U2BRG           equ	705	;# 
  1276   0002C1                     U2BRGL          equ	705	;# 
  1277   0002C2                     U2BRGH          equ	706	;# 
  1278   0002C3                     U2FIFO          equ	707	;# 
  1279   0002C4                     U2UIR           equ	708	;# 
  1280   0002C5                     U2ERRIR         equ	709	;# 
  1281   0002C6                     U2ERRIE         equ	710	;# 
  1282   0002C7                     U3RXB           equ	711	;# 
  1283   0002C7                     U3RXBL          equ	711	;# 
  1284   0002C9                     U3TXB           equ	713	;# 
  1285   0002C9                     U3TXBL          equ	713	;# 
  1286   0002CB                     U3P1            equ	715	;# 
  1287   0002CB                     U3P1L           equ	715	;# 
  1288   0002CD                     U3P2            equ	717	;# 
  1289   0002CD                     U3P2L           equ	717	;# 
  1290   0002CF                     U3P3            equ	719	;# 
  1291   0002CF                     U3P3L           equ	719	;# 
  1292   0002D1                     U3CON0          equ	721	;# 
  1293   0002D2                     U3CON1          equ	722	;# 
  1294   0002D3                     U3CON2          equ	723	;# 
  1295   0002D4                     U3BRG           equ	724	;# 
  1296   0002D4                     U3BRGL          equ	724	;# 
  1297   0002D5                     U3BRGH          equ	725	;# 
  1298   0002D6                     U3FIFO          equ	726	;# 
  1299   0002D7                     U3UIR           equ	727	;# 
  1300   0002D8                     U3ERRIR         equ	728	;# 
  1301   0002D9                     U3ERRIE         equ	729	;# 
  1302   0002DA                     U4RXB           equ	730	;# 
  1303   0002DA                     U4RXBL          equ	730	;# 
  1304   0002DC                     U4TXB           equ	732	;# 
  1305   0002DC                     U4TXBL          equ	732	;# 
  1306   0002DE                     U4P1            equ	734	;# 
  1307   0002DE                     U4P1L           equ	734	;# 
  1308   0002E0                     U4P2            equ	736	;# 
  1309   0002E0                     U4P2L           equ	736	;# 
  1310   0002E2                     U4P3            equ	738	;# 
  1311   0002E2                     U4P3L           equ	738	;# 
  1312   0002E4                     U4CON0          equ	740	;# 
  1313   0002E5                     U4CON1          equ	741	;# 
  1314   0002E6                     U4CON2          equ	742	;# 
  1315   0002E7                     U4BRG           equ	743	;# 
  1316   0002E7                     U4BRGL          equ	743	;# 
  1317   0002E8                     U4BRGH          equ	744	;# 
  1318   0002E9                     U4FIFO          equ	745	;# 
  1319   0002EA                     U4UIR           equ	746	;# 
  1320   0002EB                     U4ERRIR         equ	747	;# 
  1321   0002EC                     U4ERRIE         equ	748	;# 
  1322   0002ED                     U5RXB           equ	749	;# 
  1323   0002ED                     U5RXBL          equ	749	;# 
  1324   0002EF                     U5TXB           equ	751	;# 
  1325   0002EF                     U5TXBL          equ	751	;# 
  1326   0002F1                     U5P1            equ	753	;# 
  1327   0002F1                     U5P1L           equ	753	;# 
  1328   0002F3                     U5P2            equ	755	;# 
  1329   0002F3                     U5P2L           equ	755	;# 
  1330   0002F5                     U5P3            equ	757	;# 
  1331   0002F5                     U5P3L           equ	757	;# 
  1332   0002F7                     U5CON0          equ	759	;# 
  1333   0002F8                     U5CON1          equ	760	;# 
  1334   0002F9                     U5CON2          equ	761	;# 
  1335   0002FA                     U5BRG           equ	762	;# 
  1336   0002FA                     U5BRGL          equ	762	;# 
  1337   0002FB                     U5BRGH          equ	763	;# 
  1338   0002FC                     U5FIFO          equ	764	;# 
  1339   0002FD                     U5UIR           equ	765	;# 
  1340   0002FE                     U5ERRIR         equ	766	;# 
  1341   0002FF                     U5ERRIE         equ	767	;# 
  1342   000300                     SMT1TMR         equ	768	;# 
  1343   000300                     SMT1TMRL        equ	768	;# 
  1344   000301                     SMT1TMRH        equ	769	;# 
  1345   000302                     SMT1TMRU        equ	770	;# 
  1346   000303                     SMT1CPR         equ	771	;# 
  1347   000303                     SMT1CPRL        equ	771	;# 
  1348   000304                     SMT1CPRH        equ	772	;# 
  1349   000305                     SMT1CPRU        equ	773	;# 
  1350   000306                     SMT1CPW         equ	774	;# 
  1351   000306                     SMT1CPWL        equ	774	;# 
  1352   000307                     SMT1CPWH        equ	775	;# 
  1353   000308                     SMT1CPWU        equ	776	;# 
  1354   000309                     SMT1PR          equ	777	;# 
  1355   000309                     SMT1PRL         equ	777	;# 
  1356   00030A                     SMT1PRH         equ	778	;# 
  1357   00030B                     SMT1PRU         equ	779	;# 
  1358   00030C                     SMT1CON0        equ	780	;# 
  1359   00030D                     SMT1CON1        equ	781	;# 
  1360   00030E                     SMT1STAT        equ	782	;# 
  1361   00030F                     SMT1CLK         equ	783	;# 
  1362   000310                     SMT1SIG         equ	784	;# 
  1363   000311                     SMT1WIN         equ	785	;# 
  1364   000318                     TMR0L           equ	792	;# 
  1365   000318                     TMR0            equ	792	;# 
  1366   000319                     TMR0H           equ	793	;# 
  1367   000319                     PR0             equ	793	;# 
  1368   00031A                     T0CON0          equ	794	;# 
  1369   00031B                     T0CON1          equ	795	;# 
  1370   00031C                     TMR1            equ	796	;# 
  1371   00031C                     TMR1L           equ	796	;# 
  1372   00031D                     TMR1H           equ	797	;# 
  1373   00031E                     T1CON           equ	798	;# 
  1374   00031E                     TMR1CON         equ	798	;# 
  1375   00031F                     T1GCON          equ	799	;# 
  1376   00031F                     TMR1GCON        equ	799	;# 
  1377   000320                     T1GATE          equ	800	;# 
  1378   000320                     TMR1GATE        equ	800	;# 
  1379   000321                     T1CLK           equ	801	;# 
  1380   000321                     TMR1CLK         equ	801	;# 
  1381   000321                     PR1             equ	801	;# 
  1382   000322                     T2TMR           equ	802	;# 
  1383   000322                     TMR2            equ	802	;# 
  1384   000323                     T2PR            equ	803	;# 
  1385   000323                     PR2             equ	803	;# 
  1386   000324                     T2CON           equ	804	;# 
  1387   000325                     T2HLT           equ	805	;# 
  1388   000326                     T2CLKCON        equ	806	;# 
  1389   000326                     T2CLK           equ	806	;# 
  1390   000327                     T2RST           equ	807	;# 
  1391   000328                     TMR3            equ	808	;# 
  1392   000328                     TMR3L           equ	808	;# 
  1393   000329                     TMR3H           equ	809	;# 
  1394   00032A                     T3CON           equ	810	;# 
  1395   00032A                     TMR3CON         equ	810	;# 
  1396   00032B                     T3GCON          equ	811	;# 
  1397   00032B                     TMR3GCON        equ	811	;# 
  1398   00032C                     T3GATE          equ	812	;# 
  1399   00032C                     TMR3GATE        equ	812	;# 
  1400   00032D                     T3CLK           equ	813	;# 
  1401   00032D                     TMR3CLK         equ	813	;# 
  1402   00032D                     PR3             equ	813	;# 
  1403   00032E                     T4TMR           equ	814	;# 
  1404   00032E                     TMR4            equ	814	;# 
  1405   00032F                     T4PR            equ	815	;# 
  1406   00032F                     PR4             equ	815	;# 
  1407   000330                     T4CON           equ	816	;# 
  1408   000331                     T4HLT           equ	817	;# 
  1409   000332                     T4CLKCON        equ	818	;# 
  1410   000332                     T4CLK           equ	818	;# 
  1411   000333                     T4RST           equ	819	;# 
  1412   000334                     TMR5            equ	820	;# 
  1413   000334                     TMR5L           equ	820	;# 
  1414   000335                     TMR5H           equ	821	;# 
  1415   000336                     T5CON           equ	822	;# 
  1416   000336                     TMR5CON         equ	822	;# 
  1417   000337                     T5GCON          equ	823	;# 
  1418   000337                     TMR5GCON        equ	823	;# 
  1419   000338                     T5GATE          equ	824	;# 
  1420   000338                     TMR5GATE        equ	824	;# 
  1421   000339                     T5CLK           equ	825	;# 
  1422   000339                     TMR5CLK         equ	825	;# 
  1423   000339                     PR5             equ	825	;# 
  1424   00033A                     T6TMR           equ	826	;# 
  1425   00033A                     TMR6            equ	826	;# 
  1426   00033B                     T6PR            equ	827	;# 
  1427   00033B                     PR6             equ	827	;# 
  1428   00033C                     T6CON           equ	828	;# 
  1429   00033D                     T6HLT           equ	829	;# 
  1430   00033E                     T6CLKCON        equ	830	;# 
  1431   00033E                     T6CLK           equ	830	;# 
  1432   00033F                     T6RST           equ	831	;# 
  1433   000340                     CCPR1           equ	832	;# 
  1434   000340                     CCPR1L          equ	832	;# 
  1435   000341                     CCPR1H          equ	833	;# 
  1436   000342                     CCP1CON         equ	834	;# 
  1437   000343                     CCP1CAP         equ	835	;# 
  1438   000344                     CCPR2           equ	836	;# 
  1439   000344                     CCPR2L          equ	836	;# 
  1440   000345                     CCPR2H          equ	837	;# 
  1441   000346                     CCP2CON         equ	838	;# 
  1442   000347                     CCP2CAP         equ	839	;# 
  1443   000348                     CCPR3           equ	840	;# 
  1444   000348                     CCPR3L          equ	840	;# 
  1445   000349                     CCPR3H          equ	841	;# 
  1446   00034A                     CCP3CON         equ	842	;# 
  1447   00034B                     CCP3CAP         equ	843	;# 
  1448   00034C                     CCPTMRS0        equ	844	;# 
  1449   00034F                     CRCDATA         equ	847	;# 
  1450   00034F                     CRCDATL         equ	847	;# 
  1451   000350                     CRCDATH         equ	848	;# 
  1452   000351                     CRCACC          equ	849	;# 
  1453   000351                     CRCACCL         equ	849	;# 
  1454   000352                     CRCACCH         equ	850	;# 
  1455   000353                     CRCSHFT         equ	851	;# 
  1456   000353                     CRCSHIFTL       equ	851	;# 
  1457   000354                     CRCSHIFTH       equ	852	;# 
  1458   000355                     CRCXOR          equ	853	;# 
  1459   000355                     CRCXORL         equ	853	;# 
  1460   000356                     CRCXORH         equ	854	;# 
  1461   000357                     CRCCON0         equ	855	;# 
  1462   000358                     CRCCON1         equ	856	;# 
  1463   00035A                     SCANLADR        equ	858	;# 
  1464   00035A                     SCANLADRL       equ	858	;# 
  1465   00035B                     SCANLADRH       equ	859	;# 
  1466   00035C                     SCANLADRU       equ	860	;# 
  1467   00035D                     SCANHADR        equ	861	;# 
  1468   00035D                     SCANHADRL       equ	861	;# 
  1469   00035E                     SCANHADRH       equ	862	;# 
  1470   00035F                     SCANHADRU       equ	863	;# 
  1471   000360                     SCANCON0        equ	864	;# 
  1472   000361                     SCANTRIG        equ	865	;# 
  1473   000362                     IPR0            equ	866	;# 
  1474   000363                     IPR1            equ	867	;# 
  1475   000364                     IPR2            equ	868	;# 
  1476   000365                     IPR3            equ	869	;# 
  1477   000366                     IPR4            equ	870	;# 
  1478   000367                     IPR5            equ	871	;# 
  1479   000368                     IPR6            equ	872	;# 
  1480   000369                     IPR7            equ	873	;# 
  1481   00036A                     IPR8            equ	874	;# 
  1482   00036B                     IPR9            equ	875	;# 
  1483   00036C                     IPR10           equ	876	;# 
  1484   00036D                     IPR11           equ	877	;# 
  1485   00036E                     IPR12           equ	878	;# 
  1486   00036F                     IPR13           equ	879	;# 
  1487   000370                     IPR14           equ	880	;# 
  1488   000371                     IPR15           equ	881	;# 
  1489   000373                     STATUS_CSHAD    equ	883	;# 
  1490   000374                     WREG_CSHAD      equ	884	;# 
  1491   000375                     BSR_CSHAD       equ	885	;# 
  1492   000376                     SHADCON         equ	886	;# 
  1493   000377                     STATUS_SHAD     equ	887	;# 
  1494   000378                     WREG_SHAD       equ	888	;# 
  1495   000379                     BSR_SHAD        equ	889	;# 
  1496   00037A                     PCLATH_SHAD     equ	890	;# 
  1497   00037B                     PCLATU_SHAD     equ	891	;# 
  1498   00037C                     FSR0SH          equ	892	;# 
  1499   00037C                     FSR0L_SHAD      equ	892	;# 
  1500   00037D                     FSR0H_SHAD      equ	893	;# 
  1501   00037E                     FSR1SH          equ	894	;# 
  1502   00037E                     FSR1L_SHAD      equ	894	;# 
  1503   00037F                     FSR1H_SHAD      equ	895	;# 
  1504   000380                     FSR2SH          equ	896	;# 
  1505   000380                     FSR2L_SHAD      equ	896	;# 
  1506   000381                     FSR2H_SHAD      equ	897	;# 
  1507   000382                     PRODSH          equ	898	;# 
  1508   000382                     PRODL_SHAD      equ	898	;# 
  1509   000383                     PRODH_SHAD      equ	899	;# 
  1510   0003BC                     CWG1CLK         equ	956	;# 
  1511   0003BC                     CWG1CLKCON      equ	956	;# 
  1512   0003BD                     CWG1ISM         equ	957	;# 
  1513   0003BD                     CWG1DAT         equ	957	;# 
  1514   0003BE                     CWG1DBR         equ	958	;# 
  1515   0003BF                     CWG1DBF         equ	959	;# 
  1516   0003C0                     CWG1CON0        equ	960	;# 
  1517   0003C1                     CWG1CON1        equ	961	;# 
  1518   0003C2                     CWG1AS0         equ	962	;# 
  1519   0003C3                     CWG1AS1         equ	963	;# 
  1520   0003C4                     CWG1STR         equ	964	;# 
  1521   0003C5                     CWG2CLK         equ	965	;# 
  1522   0003C5                     CWG2CLKCON      equ	965	;# 
  1523   0003C6                     CWG2ISM         equ	966	;# 
  1524   0003C6                     CWG2DAT         equ	966	;# 
  1525   0003C7                     CWG2DBR         equ	967	;# 
  1526   0003C8                     CWG2DBF         equ	968	;# 
  1527   0003C9                     CWG2CON0        equ	969	;# 
  1528   0003CA                     CWG2CON1        equ	970	;# 
  1529   0003CB                     CWG2AS0         equ	971	;# 
  1530   0003CC                     CWG2AS1         equ	972	;# 
  1531   0003CD                     CWG2STR         equ	973	;# 
  1532   0003CE                     CWG3CLK         equ	974	;# 
  1533   0003CE                     CWG3CLKCON      equ	974	;# 
  1534   0003CF                     CWG3ISM         equ	975	;# 
  1535   0003CF                     CWG3DAT         equ	975	;# 
  1536   0003D0                     CWG3DBR         equ	976	;# 
  1537   0003D1                     CWG3DBF         equ	977	;# 
  1538   0003D2                     CWG3CON0        equ	978	;# 
  1539   0003D3                     CWG3CON1        equ	979	;# 
  1540   0003D4                     CWG3AS0         equ	980	;# 
  1541   0003D5                     CWG3AS1         equ	981	;# 
  1542   0003D6                     CWG3STR         equ	982	;# 
  1543   0003D7                     FVRCON          equ	983	;# 
  1544   0003D8                     ADCPCON         equ	984	;# 
  1545   0003D8                     ADCP            equ	984	;# 
  1546   0003D9                     ADLTH           equ	985	;# 
  1547   0003D9                     ADLTHL          equ	985	;# 
  1548   0003DA                     ADLTHH          equ	986	;# 
  1549   0003DB                     ADUTH           equ	987	;# 
  1550   0003DB                     ADUTHL          equ	987	;# 
  1551   0003DC                     ADUTHH          equ	988	;# 
  1552   0003DD                     ADERR           equ	989	;# 
  1553   0003DD                     ADERRL          equ	989	;# 
  1554   0003DE                     ADERRH          equ	990	;# 
  1555   0003DF                     ADSTPT          equ	991	;# 
  1556   0003DF                     ADSTPTL         equ	991	;# 
  1557   0003E0                     ADSTPTH         equ	992	;# 
  1558   0003E1                     ADFLTR          equ	993	;# 
  1559   0003E1                     ADFLTRL         equ	993	;# 
  1560   0003E2                     ADFLTRH         equ	994	;# 
  1561   0003E3                     ADACC           equ	995	;# 
  1562   0003E3                     ADACCL          equ	995	;# 
  1563   0003E4                     ADACCH          equ	996	;# 
  1564   0003E5                     ADACCU          equ	997	;# 
  1565   0003E6                     ADCNT           equ	998	;# 
  1566   0003E7                     ADRPT           equ	999	;# 
  1567   0003E8                     ADPREV          equ	1000	;# 
  1568   0003E8                     ADPREVL         equ	1000	;# 
  1569   0003E9                     ADPREVH         equ	1001	;# 
  1570   0003EA                     ADRES           equ	1002	;# 
  1571   0003EA                     ADRESL          equ	1002	;# 
  1572   0003EB                     ADRESH          equ	1003	;# 
  1573   0003EC                     ADPCH           equ	1004	;# 
  1574   0003EE                     ADACQ           equ	1006	;# 
  1575   0003EE                     ADACQL          equ	1006	;# 
  1576   0003EF                     ADACQH          equ	1007	;# 
  1577   0003F0                     ADCAP           equ	1008	;# 
  1578   0003F1                     ADPRE           equ	1009	;# 
  1579   0003F1                     ADPREL          equ	1009	;# 
  1580   0003F2                     ADPREH          equ	1010	;# 
  1581   0003F3                     ADCON0          equ	1011	;# 
  1582   0003F4                     ADCON1          equ	1012	;# 
  1583   0003F5                     ADCON2          equ	1013	;# 
  1584   0003F6                     ADCON3          equ	1014	;# 
  1585   0003F7                     ADSTAT          equ	1015	;# 
  1586   0003F8                     ADREF           equ	1016	;# 
  1587   0003F9                     ADACT           equ	1017	;# 
  1588   0003FA                     ADCLK           equ	1018	;# 
  1589   000400                     ANSELA          equ	1024	;# 
  1590   000401                     WPUA            equ	1025	;# 
  1591   000402                     ODCONA          equ	1026	;# 
  1592   000403                     SLRCONA         equ	1027	;# 
  1593   000404                     INLVLA          equ	1028	;# 
  1594   000405                     IOCAP           equ	1029	;# 
  1595   000406                     IOCAN           equ	1030	;# 
  1596   000407                     IOCAF           equ	1031	;# 
  1597   000408                     ANSELB          equ	1032	;# 
  1598   000409                     WPUB            equ	1033	;# 
  1599   00040A                     ODCONB          equ	1034	;# 
  1600   00040B                     SLRCONB         equ	1035	;# 
  1601   00040C                     INLVLB          equ	1036	;# 
  1602   00040D                     IOCBP           equ	1037	;# 
  1603   00040E                     IOCBN           equ	1038	;# 
  1604   00040F                     IOCBF           equ	1039	;# 
  1605   000410                     ANSELC          equ	1040	;# 
  1606   000411                     WPUC            equ	1041	;# 
  1607   000412                     ODCONC          equ	1042	;# 
  1608   000413                     SLRCONC         equ	1043	;# 
  1609   000414                     INLVLC          equ	1044	;# 
  1610   000415                     IOCCP           equ	1045	;# 
  1611   000416                     IOCCN           equ	1046	;# 
  1612   000417                     IOCCF           equ	1047	;# 
  1613   000418                     ANSELD          equ	1048	;# 
  1614   000419                     WPUD            equ	1049	;# 
  1615   00041A                     ODCOND          equ	1050	;# 
  1616   00041B                     SLRCOND         equ	1051	;# 
  1617   00041C                     INLVLD          equ	1052	;# 
  1618   000420                     ANSELE          equ	1056	;# 
  1619   000421                     WPUE            equ	1057	;# 
  1620   000422                     ODCONE          equ	1058	;# 
  1621   000423                     SLRCONE         equ	1059	;# 
  1622   000424                     INLVLE          equ	1060	;# 
  1623   000425                     IOCEP           equ	1061	;# 
  1624   000426                     IOCEN           equ	1062	;# 
  1625   000427                     IOCEF           equ	1063	;# 
  1626   000428                     ANSELF          equ	1064	;# 
  1627   000429                     WPUF            equ	1065	;# 
  1628   00042A                     ODCONF          equ	1066	;# 
  1629   00042B                     SLRCONF         equ	1067	;# 
  1630   00042C                     INLVLF          equ	1068	;# 
  1631   000440                     NCO1ACC         equ	1088	;# 
  1632   000440                     NCO1ACCL        equ	1088	;# 
  1633   000441                     NCO1ACCH        equ	1089	;# 
  1634   000442                     NCO1ACCU        equ	1090	;# 
  1635   000443                     NCO1INC         equ	1091	;# 
  1636   000443                     NCO1INCL        equ	1091	;# 
  1637   000444                     NCO1INCH        equ	1092	;# 
  1638   000445                     NCO1INCU        equ	1093	;# 
  1639   000446                     NCO1CON         equ	1094	;# 
  1640   000447                     NCO1CLK         equ	1095	;# 
  1641   000448                     NCO2ACC         equ	1096	;# 
  1642   000448                     NCO2ACCL        equ	1096	;# 
  1643   000449                     NCO2ACCH        equ	1097	;# 
  1644   00044A                     NCO2ACCU        equ	1098	;# 
  1645   00044B                     NCO2INC         equ	1099	;# 
  1646   00044B                     NCO2INCL        equ	1099	;# 
  1647   00044C                     NCO2INCH        equ	1100	;# 
  1648   00044D                     NCO2INCU        equ	1101	;# 
  1649   00044E                     NCO2CON         equ	1102	;# 
  1650   00044F                     NCO2CLK         equ	1103	;# 
  1651   000450                     NCO3ACC         equ	1104	;# 
  1652   000450                     NCO3ACCL        equ	1104	;# 
  1653   000451                     NCO3ACCH        equ	1105	;# 
  1654   000452                     NCO3ACCU        equ	1106	;# 
  1655   000453                     NCO3INC         equ	1107	;# 
  1656   000453                     NCO3INCL        equ	1107	;# 
  1657   000454                     NCO3INCH        equ	1108	;# 
  1658   000455                     NCO3INCU        equ	1109	;# 
  1659   000456                     NCO3CON         equ	1110	;# 
  1660   000457                     NCO3CLK         equ	1111	;# 
  1661   000459                     IVTLOCK         equ	1113	;# 
  1662   00045A                     IVTAD           equ	1114	;# 
  1663   00045A                     IVTADL          equ	1114	;# 
  1664   00045B                     IVTADH          equ	1115	;# 
  1665   00045C                     IVTADU          equ	1116	;# 
  1666   00045D                     IVTBASE         equ	1117	;# 
  1667   00045D                     IVTBASEL        equ	1117	;# 
  1668   00045E                     IVTBASEH        equ	1118	;# 
  1669   00045F                     IVTBASEU        equ	1119	;# 
  1670   000460                     PWM1ERS         equ	1120	;# 
  1671   000461                     PWM1CLK         equ	1121	;# 
  1672   000462                     PWM1LDS         equ	1122	;# 
  1673   000463                     PWM1PR          equ	1123	;# 
  1674   000463                     PWM1PRL         equ	1123	;# 
  1675   000464                     PWM1PRH         equ	1124	;# 
  1676   000465                     PWM1CPRE        equ	1125	;# 
  1677   000466                     PWM1PIPOS       equ	1126	;# 
  1678   000467                     PWM1GIR         equ	1127	;# 
  1679   000468                     PWM1GIE         equ	1128	;# 
  1680   000469                     PWM1CON         equ	1129	;# 
  1681   00046A                     PWM1S1CFG       equ	1130	;# 
  1682   00046B                     PWM1S1P1        equ	1131	;# 
  1683   00046B                     PWM1S1P1L       equ	1131	;# 
  1684   00046C                     PWM1S1P1H       equ	1132	;# 
  1685   00046D                     PWM1S1P2        equ	1133	;# 
  1686   00046D                     PWM1S1P2L       equ	1133	;# 
  1687   00046E                     PWM1S1P2H       equ	1134	;# 
  1688   00046F                     PWM2ERS         equ	1135	;# 
  1689   000470                     PWM2CLK         equ	1136	;# 
  1690   000471                     PWM2LDS         equ	1137	;# 
  1691   000472                     PWM2PR          equ	1138	;# 
  1692   000472                     PWM2PRL         equ	1138	;# 
  1693   000473                     PWM2PRH         equ	1139	;# 
  1694   000474                     PWM2CPRE        equ	1140	;# 
  1695   000475                     PWM2PIPOS       equ	1141	;# 
  1696   000476                     PWM2GIR         equ	1142	;# 
  1697   000477                     PWM2GIE         equ	1143	;# 
  1698   000478                     PWM2CON         equ	1144	;# 
  1699   000479                     PWM2S1CFG       equ	1145	;# 
  1700   00047A                     PWM2S1P1        equ	1146	;# 
  1701   00047A                     PWM2S1P1L       equ	1146	;# 
  1702   00047B                     PWM2S1P1H       equ	1147	;# 
  1703   00047C                     PWM2S1P2        equ	1148	;# 
  1704   00047C                     PWM2S1P2L       equ	1148	;# 
  1705   00047D                     PWM2S1P2H       equ	1149	;# 
  1706   00047E                     PWM3ERS         equ	1150	;# 
  1707   00047F                     PWM3CLK         equ	1151	;# 
  1708   000480                     PWM3LDS         equ	1152	;# 
  1709   000481                     PWM3PR          equ	1153	;# 
  1710   000481                     PWM3PRL         equ	1153	;# 
  1711   000482                     PWM3PRH         equ	1154	;# 
  1712   000483                     PWM3CPRE        equ	1155	;# 
  1713   000484                     PWM3PIPOS       equ	1156	;# 
  1714   000485                     PWM3GIR         equ	1157	;# 
  1715   000486                     PWM3GIE         equ	1158	;# 
  1716   000487                     PWM3CON         equ	1159	;# 
  1717   000488                     PWM3S1CFG       equ	1160	;# 
  1718   000489                     PWM3S1P1        equ	1161	;# 
  1719   000489                     PWM3S1P1L       equ	1161	;# 
  1720   00048A                     PWM3S1P1H       equ	1162	;# 
  1721   00048B                     PWM3S1P2        equ	1163	;# 
  1722   00048B                     PWM3S1P2L       equ	1163	;# 
  1723   00048C                     PWM3S1P2H       equ	1164	;# 
  1724   00049C                     PWMLOAD         equ	1180	;# 
  1725   00049D                     PWMEN           equ	1181	;# 
  1726   00049E                     PIE0            equ	1182	;# 
  1727   00049F                     PIE1            equ	1183	;# 
  1728   0004A0                     PIE2            equ	1184	;# 
  1729   0004A1                     PIE3            equ	1185	;# 
  1730   0004A2                     PIE4            equ	1186	;# 
  1731   0004A3                     PIE5            equ	1187	;# 
  1732   0004A4                     PIE6            equ	1188	;# 
  1733   0004A5                     PIE7            equ	1189	;# 
  1734   0004A6                     PIE8            equ	1190	;# 
  1735   0004A7                     PIE9            equ	1191	;# 
  1736   0004A8                     PIE10           equ	1192	;# 
  1737   0004A9                     PIE11           equ	1193	;# 
  1738   0004AA                     PIE12           equ	1194	;# 
  1739   0004AB                     PIE13           equ	1195	;# 
  1740   0004AC                     PIE14           equ	1196	;# 
  1741   0004AD                     PIE15           equ	1197	;# 
  1742   0004AE                     PIR0            equ	1198	;# 
  1743   0004AF                     PIR1            equ	1199	;# 
  1744   0004B0                     PIR2            equ	1200	;# 
  1745   0004B1                     PIR3            equ	1201	;# 
  1746   0004B2                     PIR4            equ	1202	;# 
  1747   0004B3                     PIR5            equ	1203	;# 
  1748   0004B4                     PIR6            equ	1204	;# 
  1749   0004B5                     PIR7            equ	1205	;# 
  1750   0004B6                     PIR8            equ	1206	;# 
  1751   0004B7                     PIR9            equ	1207	;# 
  1752   0004B8                     PIR10           equ	1208	;# 
  1753   0004B9                     PIR11           equ	1209	;# 
  1754   0004BA                     PIR12           equ	1210	;# 
  1755   0004BB                     PIR13           equ	1211	;# 
  1756   0004BC                     PIR14           equ	1212	;# 
  1757   0004BD                     PIR15           equ	1213	;# 
  1758   0004BE                     LATA            equ	1214	;# 
  1759   0004BF                     LATB            equ	1215	;# 
  1760   0004C0                     LATC            equ	1216	;# 
  1761   0004C1                     LATD            equ	1217	;# 
  1762   0004C2                     LATE            equ	1218	;# 
  1763   0004C3                     LATF            equ	1219	;# 
  1764   0004C6                     TRISA           equ	1222	;# 
  1765   0004C7                     TRISB           equ	1223	;# 
  1766   0004C8                     TRISC           equ	1224	;# 
  1767   0004C9                     TRISD           equ	1225	;# 
  1768   0004CA                     TRISE           equ	1226	;# 
  1769   0004CB                     TRISF           equ	1227	;# 
  1770   0004CE                     PORTA           equ	1230	;# 
  1771   0004CF                     PORTB           equ	1231	;# 
  1772   0004D0                     PORTC           equ	1232	;# 
  1773   0004D1                     PORTD           equ	1233	;# 
  1774   0004D2                     PORTE           equ	1234	;# 
  1775   0004D3                     PORTF           equ	1235	;# 
  1776   0004D6                     INTCON0         equ	1238	;# 
  1777   0004D7                     INTCON1         equ	1239	;# 
  1778   0004D8                     STATUS          equ	1240	;# 
  1779   0004D9                     FSR2            equ	1241	;# 
  1780   0004D9                     FSR2L           equ	1241	;# 
  1781   0004DA                     FSR2H           equ	1242	;# 
  1782   0004DB                     PLUSW2          equ	1243	;# 
  1783   0004DC                     PREINC2         equ	1244	;# 
  1784   0004DD                     POSTDEC2        equ	1245	;# 
  1785   0004DE                     POSTINC2        equ	1246	;# 
  1786   0004DF                     INDF2           equ	1247	;# 
  1787   0004E0                     BSR             equ	1248	;# 
  1788   0004E1                     FSR1            equ	1249	;# 
  1789   0004E1                     FSR1L           equ	1249	;# 
  1790   0004E2                     FSR1H           equ	1250	;# 
  1791   0004E3                     PLUSW1          equ	1251	;# 
  1792   0004E4                     PREINC1         equ	1252	;# 
  1793   0004E5                     POSTDEC1        equ	1253	;# 
  1794   0004E6                     POSTINC1        equ	1254	;# 
  1795   0004E7                     INDF1           equ	1255	;# 
  1796   0004E8                     WREG            equ	1256	;# 
  1797   0004E9                     FSR0            equ	1257	;# 
  1798   0004E9                     FSR0L           equ	1257	;# 
  1799   0004EA                     FSR0H           equ	1258	;# 
  1800   0004EB                     PLUSW0          equ	1259	;# 
  1801   0004EC                     PREINC0         equ	1260	;# 
  1802   0004ED                     POSTDEC0        equ	1261	;# 
  1803   0004EE                     POSTINC0        equ	1262	;# 
  1804   0004EF                     INDF0           equ	1263	;# 
  1805   0004F0                     PCON0           equ	1264	;# 
  1806   0004F1                     PCON1           equ	1265	;# 
  1807   0004F2                     CPUDOZE         equ	1266	;# 
  1808   0004F3                     PROD            equ	1267	;# 
  1809   0004F3                     PRODL           equ	1267	;# 
  1810   0004F4                     PRODH           equ	1268	;# 
  1811   0004F5                     TABLAT          equ	1269	;# 
  1812   0004F6                     TBLPTR          equ	1270	;# 
  1813   0004F6                     TBLPTRL         equ	1270	;# 
  1814   0004F7                     TBLPTRH         equ	1271	;# 
  1815   0004F8                     TBLPTRU         equ	1272	;# 
  1816   0004F9                     PCLAT           equ	1273	;# 
  1817   0004F9                     PCL             equ	1273	;# 
  1818   0004FA                     PCLATH          equ	1274	;# 
  1819   0004FB                     PCLATU          equ	1275	;# 
  1820   0004FC                     STKPTR          equ	1276	;# 
  1821   0004FD                     TOS             equ	1277	;# 
  1822   0004FD                     TOSL            equ	1277	;# 
  1823   0004FE                     TOSH            equ	1278	;# 
  1824   0004FF                     TOSU            equ	1279	;# 
  1825                           
  1826                           	psect	idataCOMRAM
  1827   002AB8                     __pidataCOMRAM:
  1828                           	callstack 0
  1829                           
  1830                           ;initializer for _minutos
  1831   002AB8  2B                 	db	43
  1832                           
  1833                           ;initializer for _horas
  1834   002AB9  13                 	db	19
  1835                           
  1836                           	psect	smallconst
  1837   002600                     __psmallconst:
  1838                           	callstack 0
  1839   002600  00                 	db	0
  1840   002601                     _reloj:
  1841                           	callstack 0
  1842   002601  1B                 	db	27
  1843   002602  1B                 	db	27
  1844   002603  0E                 	db	14
  1845   002604  15                 	db	21
  1846   002605  15                 	db	21
  1847   002606  17                 	db	23
  1848   002607  11                 	db	17
  1849   002608  0E                 	db	14
  1850   002609                     __end_of_reloj:
  1851                           	callstack 0
  1852   0000B3                     _OSCENbits      set	179
  1853   0000B1                     _OSCFRQ         set	177
  1854   0000AD                     _OSCCON1        set	173
  1855   000229                     _RF0PPS         set	553
  1856   0003EB                     _ADRESH         set	1003
  1857   000340                     _CCPR1L         set	832
  1858   000341                     _CCPR1H         set	833
  1859   000342                     _CCP1CON        set	834
  1860   00031E                     _T1CON          set	798
  1861   000321                     _T1CLK          set	801
  1862   0003EC                     _ADPCH          set	1004
  1863   0003F3                     _ADCON0bits     set	1011
  1864   000324                     _T2CON          set	804
  1865   000326                     _T2CLKCON       set	806
  1866   000344                     _CCPR2L         set	836
  1867   000345                     _CCPR2H         set	837
  1868   000346                     _CCP2CON        set	838
  1869   000323                     _T2PR           set	803
  1870   000418                     _ANSELD         set	1048
  1871   000400                     _ANSELAbits     set	1024
  1872   000428                     _ANSELFbits     set	1064
  1873   0004D1                     _PORTD          set	1233
  1874   0004C1                     _LATD           set	1217
  1875   0004C1                     _LATDbits       set	1217
  1876   0004C9                     _TRISD          set	1225
  1877   0004D6                     _INTCON0bits    set	1238
  1878   0004B1                     _PIR3bits       set	1201
  1879   0004A1                     _PIE3bits       set	1185
  1880   0004C6                     _TRISAbits      set	1222
  1881   0004CB                     _TRISFbits      set	1227
  1882   002609                     STR_2:
  1883   002609  4D                 	db	77	;'M'
  1884   00260A  69                 	db	105	;'i'
  1885   00260B  63                 	db	99	;'c'
  1886   00260C  72                 	db	114	;'r'
  1887   00260D  6F                 	db	111	;'o'
  1888   00260E  20                 	db	32
  1889   00260F  4E                 	db	78	;'N'
  1890   002610  52                 	db	82	;'R'
  1891   002611  43                 	db	67	;'C'
  1892   002612  39                 	db	57	;'9'
  1893   002613  33                 	db	51	;'3'
  1894   002614  35                 	db	53	;'5'
  1895   002615  30                 	db	48	;'0'
  1896   002616  00                 	db	0
  1897   002617                     STR_1:
  1898   002617  53                 	db	83	;'S'
  1899   002618  65                 	db	101	;'e'
  1900   002619  67                 	db	103	;'g'
  1901   00261A  75                 	db	117	;'u'
  1902   00261B  6E                 	db	110	;'n'
  1903   00261C  64                 	db	100	;'d'
  1904   00261D  6F                 	db	111	;'o'
  1905   00261E  20                 	db	32
  1906   00261F  74                 	db	116	;'t'
  1907   002620  75                 	db	117	;'u'
  1908   002621  72                 	db	114	;'r'
  1909   002622  6E                 	db	110	;'n'
  1910   002623  6F                 	db	111	;'o'
  1911   002624  00                 	db	0
  1912   002625                     STR_3:
  1913   002625  48                 	db	72	;'H'
  1914   002626  6F                 	db	111	;'o'
  1915   002627  72                 	db	114	;'r'
  1916   002628  61                 	db	97	;'a'
  1917   002629  20                 	db	32
  1918   00262A  61                 	db	97	;'a'
  1919   00262B  63                 	db	99	;'c'
  1920   00262C  74                 	db	116	;'t'
  1921   00262D  75                 	db	117	;'u'
  1922   00262E  61                 	db	97	;'a'
  1923   00262F  6C                 	db	108	;'l'
  1924   002630  3A                 	db	58	;':'
  1925   002631  00                 	db	0
  1926   002632  00                 	db	0	; dummy byte at the end
  1927   002600                     __smallconst    set	__psmallconst
  1928   002600                     __mediumconst   set	__psmallconst
  1929   000001                     __activetblptr  equ	1
  1930                           
  1931                           ; #config settings
  1932                           
  1933                           	psect	cinit
  1934   0028B8                     __pcinit:
  1935                           	callstack 0
  1936   0028B8                     start_initialization:
  1937                           	callstack 0
  1938   0028B8                     __initialization:
  1939                           	callstack 0
  1940                           
  1941                           ; Initialize objects allocated to COMRAM (2 bytes)
  1942                           ; load TBLPTR registers with __pidataCOMRAM
  1943   0028B8  0EB8               	movlw	low __pidataCOMRAM
  1944   0028BA  6EF6               	movwf	tblptrl,c
  1945   0028BC  0E2A               	movlw	high __pidataCOMRAM
  1946   0028BE  6EF7               	movwf	tblptrh,c
  1947   0028C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1948   0028C2  6EF8               	movwf	tblptru,c
  1949   0028C4  0009               	tblrd		*+	;fetch initializer
  1950   0028C6  C4F5 F50C          	movff	tablat,__pdataCOMRAM
  1951   0028CA  0009               	tblrd		*+	;fetch initializer
  1952   0028CC  C4F5 F50D          	movff	tablat,__pdataCOMRAM+1
  1953                           
  1954                           ; Clear objects allocated to COMRAM (2 bytes)
  1955   0028D0  6A0B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1956   0028D2  6A0A               	clrf	__pbssCOMRAM& (0+255),c
  1957                           
  1958                           ;
  1959                           ; Setup IVTBASE
  1960                           ;
  1961   00045D                     IVTBASEL        equ	1117
  1962   00045E                     IVTBASEH        equ	1118
  1963   00045F                     IVTBASEU        equ	1119
  1964   0028D4  0104               	movlb	4
  1965   0028D6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1966   0028D8  6F5D               	movwf	93,b
  1967   0028DA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1968   0028DC  6F5E               	movwf	94,b
  1969   0028DE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1970   0028E0  6F5F               	movwf	95,b
  1971   0028E2                     end_of_initialization:
  1972                           	callstack 0
  1973   0028E2                     __end_of__initialization:
  1974                           	callstack 0
  1975   0028E2  0E00               	movlw	low (__Lsmallconst shr (0+16))
  1976   0028E4  6EF8               	movwf	tblptru,c
  1977   0028E6  0E26               	movlw	high __Lsmallconst
  1978   0028E8  6EF7               	movwf	tblptrh,c
  1979   0028EA  0100               	movlb	0
  1980   0028EC  EF1A  F013         	goto	_main	;jump to C main() function
  1981                           
  1982                           	psect	bssCOMRAM
  1983   00050A                     __pbssCOMRAM:
  1984                           	callstack 0
  1985   00050A                     _centesimas:
  1986                           	callstack 0
  1987   00050A                     	ds	1
  1988   00050B                     _segundos:
  1989                           	callstack 0
  1990   00050B                     	ds	1
  1991                           
  1992                           	psect	dataCOMRAM
  1993   00050C                     __pdataCOMRAM:
  1994                           	callstack 0
  1995   00050C                     _minutos:
  1996                           	callstack 0
  1997   00050C                     	ds	1
  1998   00050D                     _horas:
  1999                           	callstack 0
  2000   00050D                     	ds	1
  2001                           
  2002                           	psect	cstackCOMRAM
  2003   000501                     __pcstackCOMRAM:
  2004                           	callstack 0
  2005   000501                     ENVIA_NIBBLE@dato:
  2006                           	callstack 0
  2007   000501                     LEER_LCD@aux:
  2008                           	callstack 0
  2009   000501                     ___lbdiv@divisor:
  2010                           	callstack 0
  2011   000501                     ___lbmod@divisor:
  2012                           	callstack 0
  2013   000501                     
  2014                           ; 1 bytes @ 0x0
  2015   000501                     	ds	1
  2016   000502                     ENVIA_CHAR@dato:
  2017                           	callstack 0
  2018   000502                     ENVIA_LCD_CMD@dato:
  2019                           	callstack 0
  2020   000502                     ___lbdiv@dividend:
  2021                           	callstack 0
  2022   000502                     ___lbmod@dividend:
  2023                           	callstack 0
  2024   000502                     
  2025                           ; 1 bytes @ 0x1
  2026   000502                     	ds	1
  2027   000503                     ENVIA_CHAR@aux:
  2028                           	callstack 0
  2029   000503                     ENVIA_LCD_CMD@aux:
  2030                           	callstack 0
  2031   000503                     ___lbdiv@counter:
  2032                           	callstack 0
  2033   000503                     ___lbmod@counter:
  2034                           	callstack 0
  2035                           
  2036                           ; 1 bytes @ 0x2
  2037   000503                     	ds	1
  2038   000504                     POS_CURSOR@columna:
  2039                           	callstack 0
  2040   000504                     CURSOR_ONOFF@estado:
  2041                           	callstack 0
  2042   000504                     ESCRIBE_MENSAJE@cadena:
  2043                           	callstack 0
  2044   000504                     GENERACARACTER@vector:
  2045                           	callstack 0
  2046   000504                     ___lbdiv@quotient:
  2047                           	callstack 0
  2048   000504                     ___lbmod@rem:
  2049                           	callstack 0
  2050   000504                     ??_LCD_CONFIG:
  2051   000504                     
  2052                           ; 1 bytes @ 0x3
  2053   000504                     	ds	1
  2054   000505                     POS_CURSOR@fila:
  2055                           	callstack 0
  2056   000505                     ESCRIBE_MENSAJE@tam:
  2057                           	callstack 0
  2058   000505                     GENERACARACTER@pos:
  2059                           	callstack 0
  2060   000505                     
  2061                           ; 1 bytes @ 0x4
  2062   000505                     	ds	1
  2063   000506                     ??_GENERACARACTER:
  2064   000506                     ??_ESCRIBE_MENSAJE:
  2065                           
  2066                           ; 1 bytes @ 0x5
  2067   000506                     	ds	1
  2068   000507                     ESCRIBE_MENSAJE@i:
  2069                           	callstack 0
  2070   000507                     GENERACARACTER@i:
  2071                           	callstack 0
  2072                           
  2073                           ; 1 bytes @ 0x6
  2074   000507                     	ds	1
  2075   000508                     ??_lcd_init:
  2076   000508                     ??_splash_screen:
  2077                           
  2078                           ; 1 bytes @ 0x7
  2079   000508                     	ds	2
  2080   00050A                     
  2081                           ; 1 bytes @ 0x9
  2082 ;;
  2083 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2084 ;;
  2085 ;; *************** function _main *****************
  2086 ;; Defined at:
  2087 ;;		line 81 in file "maincode02.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;		None
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2105 ;;Total ram usage:        0 bytes
  2106 ;; Hardware stack levels required when called: 5
  2107 ;; This function calls:
  2108 ;;		_ENVIA_CHAR
  2109 ;;		_ESCRIBE_MENSAJE
  2110 ;;		_POS_CURSOR
  2111 ;;		___lbdiv
  2112 ;;		___lbmod
  2113 ;;		_configuro
  2114 ;;		_control_backlight
  2115 ;;		_lcd_init
  2116 ;;		_splash_screen
  2117 ;; This function is called by:
  2118 ;;		Startup code after reset
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text0
  2123   002634                     __ptext0:
  2124                           	callstack 0
  2125   002634                     _main:
  2126                           	callstack 122
  2127                           
  2128                           ;maincode02.c: 82:     configuro();
  2129                           
  2130                           ;incstack = 0
  2131   002634  ECE3  F013         	call	_configuro	;wreg free
  2132                           
  2133                           ; BSR set to: 3
  2134                           ;maincode02.c: 83:     lcd_init();
  2135   002638  EC94  F014         	call	_lcd_init	;wreg free
  2136                           
  2137                           ;maincode02.c: 84:     splash_screen();
  2138   00263C  EC11  F014         	call	_splash_screen	;wreg free
  2139   002640                     l1307:
  2140                           
  2141                           ;maincode02.c: 86:         control_backlight();
  2142   002640  EC4D  F015         	call	_control_backlight	;wreg free
  2143                           
  2144                           ; BSR set to: 3
  2145                           ;maincode02.c: 87:         POS_CURSOR(1,2);
  2146   002644  0E02               	movlw	2
  2147   002646  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2148   002648  0E01               	movlw	1
  2149   00264A  EC0D  F015         	call	_POS_CURSOR
  2150                           
  2151                           ;maincode02.c: 88:         ESCRIBE_MENSAJE("Hora actual:", 12);
  2152   00264E  0E25               	movlw	low STR_3
  2153   002650  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2154   002652  0E0C               	movlw	12
  2155   002654  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2156   002656  EC1F  F015         	call	_ESCRIBE_MENSAJE	;wreg free
  2157                           
  2158                           ;maincode02.c: 89:         POS_CURSOR(2,1);
  2159   00265A  0E01               	movlw	1
  2160   00265C  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2161   00265E  0E02               	movlw	2
  2162   002660  EC0D  F015         	call	_POS_CURSOR
  2163                           
  2164                           ;maincode02.c: 90:         ENVIA_CHAR(0);
  2165   002664  0E00               	movlw	0
  2166   002666  ECAF  F014         	call	_ENVIA_CHAR
  2167                           
  2168                           ;maincode02.c: 91:         ENVIA_CHAR(' ');
  2169   00266A  0E20               	movlw	32
  2170   00266C  ECAF  F014         	call	_ENVIA_CHAR
  2171                           
  2172                           ;maincode02.c: 92:         ENVIA_CHAR((horas/10)+0x30);
  2173   002670  0E0A               	movlw	10
  2174   002672  6E01               	movwf	___lbdiv@divisor^(0+1280),c
  2175   002674  500D               	movf	_horas^(0+1280),w,c
  2176   002676  EC78  F014         	call	___lbdiv
  2177   00267A  0F30               	addlw	48
  2178   00267C  ECAF  F014         	call	_ENVIA_CHAR
  2179                           
  2180                           ;maincode02.c: 93:         ENVIA_CHAR((horas%10)+0x30);
  2181   002680  0E0A               	movlw	10
  2182   002682  6E01               	movwf	___lbmod@divisor^(0+1280),c
  2183   002684  500D               	movf	_horas^(0+1280),w,c
  2184   002686  ECF9  F014         	call	___lbmod
  2185   00268A  0F30               	addlw	48
  2186   00268C  ECAF  F014         	call	_ENVIA_CHAR
  2187                           
  2188                           ;maincode02.c: 94:         ENVIA_CHAR(':');
  2189   002690  0E3A               	movlw	58
  2190   002692  ECAF  F014         	call	_ENVIA_CHAR
  2191                           
  2192                           ;maincode02.c: 95:         ENVIA_CHAR((minutos/10)+0x30);
  2193   002696  0E0A               	movlw	10
  2194   002698  6E01               	movwf	___lbdiv@divisor^(0+1280),c
  2195   00269A  500C               	movf	_minutos^(0+1280),w,c
  2196   00269C  EC78  F014         	call	___lbdiv
  2197   0026A0  0F30               	addlw	48
  2198   0026A2  ECAF  F014         	call	_ENVIA_CHAR
  2199                           
  2200                           ;maincode02.c: 96:         ENVIA_CHAR((minutos%10)+0x30);
  2201   0026A6  0E0A               	movlw	10
  2202   0026A8  6E01               	movwf	___lbmod@divisor^(0+1280),c
  2203   0026AA  500C               	movf	_minutos^(0+1280),w,c
  2204   0026AC  ECF9  F014         	call	___lbmod
  2205   0026B0  0F30               	addlw	48
  2206   0026B2  ECAF  F014         	call	_ENVIA_CHAR
  2207                           
  2208                           ;maincode02.c: 97:         ENVIA_CHAR(':');
  2209   0026B6  0E3A               	movlw	58
  2210   0026B8  ECAF  F014         	call	_ENVIA_CHAR
  2211                           
  2212                           ;maincode02.c: 98:         ENVIA_CHAR((segundos/10)+0x30);
  2213   0026BC  0E0A               	movlw	10
  2214   0026BE  6E01               	movwf	___lbdiv@divisor^(0+1280),c
  2215   0026C0  500B               	movf	_segundos^(0+1280),w,c
  2216   0026C2  EC78  F014         	call	___lbdiv
  2217   0026C6  0F30               	addlw	48
  2218   0026C8  ECAF  F014         	call	_ENVIA_CHAR
  2219                           
  2220                           ;maincode02.c: 99:         ENVIA_CHAR((segundos%10)+0x30);
  2221   0026CC  0E0A               	movlw	10
  2222   0026CE  6E01               	movwf	___lbmod@divisor^(0+1280),c
  2223   0026D0  500B               	movf	_segundos^(0+1280),w,c
  2224   0026D2  ECF9  F014         	call	___lbmod
  2225   0026D6  0F30               	addlw	48
  2226   0026D8  ECAF  F014         	call	_ENVIA_CHAR
  2227                           
  2228                           ;maincode02.c: 100:         ENVIA_CHAR(':');
  2229   0026DC  0E3A               	movlw	58
  2230   0026DE  ECAF  F014         	call	_ENVIA_CHAR
  2231                           
  2232                           ;maincode02.c: 101:         ENVIA_CHAR((centesimas/10)+0x30);
  2233   0026E2  0E0A               	movlw	10
  2234   0026E4  6E01               	movwf	___lbdiv@divisor^(0+1280),c
  2235   0026E6  500A               	movf	_centesimas^(0+1280),w,c
  2236   0026E8  EC78  F014         	call	___lbdiv
  2237   0026EC  0F30               	addlw	48
  2238   0026EE  ECAF  F014         	call	_ENVIA_CHAR
  2239                           
  2240                           ;maincode02.c: 102:         ENVIA_CHAR((centesimas%10)+0x30);
  2241   0026F2  0E0A               	movlw	10
  2242   0026F4  6E01               	movwf	___lbmod@divisor^(0+1280),c
  2243   0026F6  500A               	movf	_centesimas^(0+1280),w,c
  2244   0026F8  ECF9  F014         	call	___lbmod
  2245   0026FC  0F30               	addlw	48
  2246   0026FE  ECAF  F014         	call	_ENVIA_CHAR
  2247   002702  D79E               	goto	l1307
  2248   002704                     __end_of_main:
  2249                           	callstack 0
  2250                           
  2251 ;; *************** function _splash_screen *****************
  2252 ;; Defined at:
  2253 ;;		line 64 in file "maincode02.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/3
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2269 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2270 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2271 ;;Total ram usage:        2 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; Hardware stack levels required when called: 4
  2274 ;; This function calls:
  2275 ;;		_BORRAR_LCD
  2276 ;;		_ENVIA_CHAR
  2277 ;;		_ESCRIBE_MENSAJE
  2278 ;;		_POS_CURSOR
  2279 ;; This function is called by:
  2280 ;;		_main
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text1
  2285   002822                     __ptext1:
  2286                           	callstack 0
  2287   002822                     _splash_screen:
  2288                           	callstack 122
  2289                           
  2290                           ;maincode02.c: 65:     POS_CURSOR(1,1);
  2291                           
  2292                           ;incstack = 0
  2293   002822  0E01               	movlw	1
  2294   002824  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2295   002826  0E01               	movlw	1
  2296   002828  EC0D  F015         	call	_POS_CURSOR
  2297                           
  2298                           ;maincode02.c: 66:     ESCRIBE_MENSAJE("Segundo turno", 13);
  2299   00282C  0E17               	movlw	low STR_1
  2300   00282E  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2301   002830  0E0D               	movlw	13
  2302   002832  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2303   002834  EC1F  F015         	call	_ESCRIBE_MENSAJE	;wreg free
  2304                           
  2305                           ;maincode02.c: 67:     POS_CURSOR(2,1);
  2306   002838  0E01               	movlw	1
  2307   00283A  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2308   00283C  0E02               	movlw	2
  2309   00283E  EC0D  F015         	call	_POS_CURSOR
  2310                           
  2311                           ;maincode02.c: 68:     ESCRIBE_MENSAJE("Micro NRC9350", 13);
  2312   002842  0E09               	movlw	low STR_2
  2313   002844  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2314   002846  0E0D               	movlw	13
  2315   002848  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2316   00284A  EC1F  F015         	call	_ESCRIBE_MENSAJE	;wreg free
  2317                           
  2318                           ;maincode02.c: 69:     _delay((unsigned long)((2000)*(32000000UL/4000.0)));
  2319   00284E  0E52               	movlw	82
  2320   002850  6E09               	movwf	(??_splash_screen+1)^(0+1280),c
  2321   002852  0E2B               	movlw	43
  2322   002854  6E08               	movwf	??_splash_screen^(0+1280),c
  2323   002856  0E00               	movlw	0
  2324   002858                     u257:
  2325   002858  2EE8               	decfsz	wreg,f,c
  2326   00285A  D7FE               	bra	u257
  2327   00285C  2E08               	decfsz	??_splash_screen^(0+1280),f,c
  2328   00285E  D7FC               	bra	u257
  2329   002860  2E09               	decfsz	(??_splash_screen+1)^(0+1280),f,c
  2330   002862  D7FA               	bra	u257
  2331   002864  D000               	nop2	
  2332                           
  2333                           ;maincode02.c: 70:     BORRAR_LCD();
  2334   002866  EC58  F015         	call	_BORRAR_LCD	;wreg free
  2335                           
  2336                           ;maincode02.c: 71:     POS_CURSOR(1,0);
  2337   00286A  0E00               	movlw	0
  2338   00286C  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2339   00286E  0E01               	movlw	1
  2340   002870  EC0D  F015         	call	_POS_CURSOR
  2341                           
  2342                           ;maincode02.c: 72:     ENVIA_CHAR(0);
  2343   002874  0E00               	movlw	0
  2344   002876  ECAF  F014         	call	_ENVIA_CHAR
  2345   00287A  0012               	return		;funcret
  2346   00287C                     __end_of_splash_screen:
  2347                           	callstack 0
  2348                           
  2349 ;; *************** function _POS_CURSOR *****************
  2350 ;; Defined at:
  2351 ;;		line 6 in file "LCD.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  fila            1    wreg     unsigned char 
  2354 ;;  columna         1    3[COMRAM] unsigned char 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  fila            1    4[COMRAM] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/3
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2366 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2369 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2370 ;;Total ram usage:        2 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 3
  2373 ;; This function calls:
  2374 ;;		_ENVIA_LCD_CMD
  2375 ;; This function is called by:
  2376 ;;		_splash_screen
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text2
  2382   002A1A                     __ptext2:
  2383                           	callstack 0
  2384   002A1A                     _POS_CURSOR:
  2385                           	callstack 122
  2386                           
  2387                           ;incstack = 0
  2388                           ;POS_CURSOR@fila stored from wreg
  2389   002A1A  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  2390                           
  2391                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2392   002A1C  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  2393   002A1E  A4D8               	btfss	status,2,c
  2394   002A20  D005               	goto	l1217
  2395                           
  2396                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2397   002A22  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2398   002A24  0F80               	addlw	128
  2399   002A26  ECC8  F014         	call	_ENVIA_LCD_CMD
  2400                           
  2401                           ;LCD.c: 11:  }
  2402   002A2A  0012               	return	
  2403   002A2C                     l1217:
  2404   002A2C  0E02               	movlw	2
  2405   002A2E  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2406   002A30  A4D8               	btfss	status,2,c
  2407   002A32  0012               	return	
  2408                           
  2409                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2410   002A34  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2411   002A36  0FC0               	addlw	192
  2412   002A38  ECC8  F014         	call	_ENVIA_LCD_CMD
  2413   002A3C  0012               	return		;funcret
  2414   002A3E                     __end_of_POS_CURSOR:
  2415                           	callstack 0
  2416                           
  2417 ;; *************** function _ESCRIBE_MENSAJE *****************
  2418 ;; Defined at:
  2419 ;;		line 41 in file "LCD.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2422 ;;		 -> STR_3(13), STR_2(14), STR_1(14), 
  2423 ;;  tam             1    4[COMRAM] unsigned char 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  i               1    6[COMRAM] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/3
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2437 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2438 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2439 ;;Total ram usage:        4 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; Hardware stack levels required when called: 3
  2442 ;; This function calls:
  2443 ;;		_ENVIA_CHAR
  2444 ;; This function is called by:
  2445 ;;		_splash_screen
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text3
  2451   002A3E                     __ptext3:
  2452                           	callstack 0
  2453   002A3E                     _ESCRIBE_MENSAJE:
  2454                           	callstack 122
  2455                           
  2456                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2457                           
  2458                           ;incstack = 0
  2459   002A3E  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2460                           
  2461                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2462   002A40  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2463   002A42  D00A               	goto	l1227
  2464   002A44                     l1223:
  2465                           
  2466                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2467   002A44  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  2468   002A46  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2469   002A48  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  2470   002A4A  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2471   002A4E                     	if	0	;There is only one active tblptr byte
  2472   002A4E                     	endif
  2473   002A4E                     	if	0	;tblptru may be non-zero
  2474   002A4E                     	endif
  2475   002A4E                     	if	0	;tblptru may be non-zero
  2476   002A4E                     	endif
  2477   002A4E  0008               	tblrd		*
  2478   002A50  50F5               	movf	tablat,w,c
  2479   002A52  ECAF  F014         	call	_ENVIA_CHAR
  2480                           
  2481                           ;LCD.c: 47:  }
  2482   002A56  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  2483   002A58                     l1227:
  2484   002A58  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  2485   002A5A  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2486   002A5C  B0D8               	btfsc	status,0,c
  2487   002A5E  0012               	return	
  2488   002A60  D7F1               	goto	l1223
  2489   002A62                     __end_of_ESCRIBE_MENSAJE:
  2490                           	callstack 0
  2491                           
  2492 ;; *************** function _lcd_init *****************
  2493 ;; Defined at:
  2494 ;;		line 53 in file "maincode02.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 3F/3
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2510 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2511 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2512 ;;Total ram usage:        1 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; Hardware stack levels required when called: 4
  2515 ;; This function calls:
  2516 ;;		_BORRAR_LCD
  2517 ;;		_CURSOR_HOME
  2518 ;;		_CURSOR_ONOFF
  2519 ;;		_GENERACARACTER
  2520 ;;		_LCD_CONFIG
  2521 ;; This function is called by:
  2522 ;;		_main
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text4
  2527   002928                     __ptext4:
  2528                           	callstack 0
  2529   002928                     _lcd_init:
  2530                           	callstack 122
  2531                           
  2532                           ; BSR set to: 3
  2533                           ;maincode02.c: 54:     TRISD = 0x00;
  2534                           
  2535                           ;incstack = 0
  2536   002928  6AC9               	clrf	201,c	;volatile
  2537                           
  2538                           ;maincode02.c: 55:     ANSELD = 0x00;
  2539   00292A  0104               	movlb	4	; () banked
  2540   00292C  6B18               	clrf	24,b	;volatile
  2541                           
  2542                           ; BSR set to: 4
  2543                           ;maincode02.c: 56:     LCD_CONFIG();
  2544   00292E  ECB3  F013         	call	_LCD_CONFIG	;wreg free
  2545                           
  2546                           ;maincode02.c: 57:     _delay((unsigned long)((21)*(32000000UL/4000.0)));
  2547   002932  0EDB               	movlw	219
  2548   002934  6E08               	movwf	??_lcd_init^(0+1280),c
  2549   002936  0E2D               	movlw	45
  2550   002938                     u267:
  2551   002938  2EE8               	decfsz	wreg,f,c
  2552   00293A  D7FE               	bra	u267
  2553   00293C  2E08               	decfsz	??_lcd_init^(0+1280),f,c
  2554   00293E  D7FC               	bra	u267
  2555   002940  0000               	nop	
  2556                           
  2557                           ;maincode02.c: 58:     BORRAR_LCD();
  2558   002942  EC58  F015         	call	_BORRAR_LCD	;wreg free
  2559                           
  2560                           ;maincode02.c: 59:     CURSOR_HOME();
  2561   002946  EC54  F015         	call	_CURSOR_HOME	;wreg free
  2562                           
  2563                           ;maincode02.c: 60:     CURSOR_ONOFF(1);
  2564   00294A  0E01               	movlw	1
  2565   00294C  EC31  F015         	call	_CURSOR_ONOFF
  2566                           
  2567                           ;maincode02.c: 61:     GENERACARACTER(reloj, 0);
  2568   002950  0E01               	movlw	low _reloj
  2569   002952  6E04               	movwf	GENERACARACTER@vector^(0+1280),c
  2570   002954  0E00               	movlw	0
  2571   002956  6E05               	movwf	GENERACARACTER@pos^(0+1280),c
  2572   002958  ECE1  F014         	call	_GENERACARACTER	;wreg free
  2573   00295C  0012               	return		;funcret
  2574   00295E                     __end_of_lcd_init:
  2575                           	callstack 0
  2576                           
  2577 ;; *************** function _LCD_CONFIG *****************
  2578 ;; Defined at:
  2579 ;;		line 72 in file "LCD.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;		None
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;		None
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      void 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0, cstack
  2588 ;; Tracked objects:
  2589 ;;		On entry : 3F/4
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2595 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2596 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2597 ;;Total ram usage:        1 bytes
  2598 ;; Hardware stack levels used: 1
  2599 ;; Hardware stack levels required when called: 3
  2600 ;; This function calls:
  2601 ;;		_ENVIA_LCD_CMD
  2602 ;;		_ENVIA_NIBBLE
  2603 ;; This function is called by:
  2604 ;;		_lcd_init
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text5
  2609   002766                     __ptext5:
  2610                           	callstack 0
  2611   002766                     _LCD_CONFIG:
  2612                           	callstack 122
  2613                           
  2614                           ; BSR set to: 4
  2615                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  2616                           
  2617                           ;incstack = 0
  2618   002766  90C1               	bcf	193,0,c	;volatile
  2619                           
  2620                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  2621   002768  92C1               	bcf	193,1,c	;volatile
  2622                           
  2623                           ; BSR set to: 4
  2624                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  2625   00276A  0E30               	movlw	48
  2626   00276C  EC3F  F015         	call	_ENVIA_NIBBLE
  2627                           
  2628                           ;LCD.c: 77:         _delay(24000);
  2629   002770  0E20               	movlw	32
  2630   002772  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2631   002774  0E2A               	movlw	42
  2632   002776                     u277:
  2633   002776  2EE8               	decfsz	wreg,f,c
  2634   002778  D7FE               	bra	u277
  2635   00277A  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2636   00277C  D7FC               	bra	u277
  2637                           
  2638                           ;LCD.c: 78:         _delay(24000);
  2639   00277E  0E20               	movlw	32
  2640   002780  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2641   002782  0E2A               	movlw	42
  2642   002784                     u287:
  2643   002784  2EE8               	decfsz	wreg,f,c
  2644   002786  D7FE               	bra	u287
  2645   002788  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2646   00278A  D7FC               	bra	u287
  2647                           
  2648                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  2649   00278C  0E30               	movlw	48
  2650   00278E  EC3F  F015         	call	_ENVIA_NIBBLE
  2651                           
  2652                           ;LCD.c: 83:  _delay(1200);
  2653   002792  0EF0               	movlw	240
  2654   002794                     u297:
  2655   002794  D000               	nop2	
  2656   002796  2EE8               	decfsz	wreg,f,c
  2657   002798  D7FD               	bra	u297
  2658                           
  2659                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  2660   00279A  0E30               	movlw	48
  2661   00279C  EC3F  F015         	call	_ENVIA_NIBBLE
  2662                           
  2663                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  2664   0027A0  0E20               	movlw	32
  2665   0027A2  EC3F  F015         	call	_ENVIA_NIBBLE
  2666                           
  2667                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  2668   0027A6  0E01               	movlw	1
  2669   0027A8  ECC8  F014         	call	_ENVIA_LCD_CMD
  2670                           
  2671                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  2672   0027AC  0E28               	movlw	40
  2673   0027AE  ECC8  F014         	call	_ENVIA_LCD_CMD
  2674                           
  2675                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  2676   0027B2  0E0F               	movlw	15
  2677   0027B4  ECC8  F014         	call	_ENVIA_LCD_CMD
  2678                           
  2679                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  2680   0027B8  0E06               	movlw	6
  2681   0027BA  ECC8  F014         	call	_ENVIA_LCD_CMD
  2682                           
  2683                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  2684   0027BE  0E01               	movlw	1
  2685   0027C0  ECC8  F014         	call	_ENVIA_LCD_CMD
  2686   0027C4  0012               	return		;funcret
  2687   0027C6                     __end_of_LCD_CONFIG:
  2688                           	callstack 0
  2689                           
  2690 ;; *************** function _GENERACARACTER *****************
  2691 ;; Defined at:
  2692 ;;		line 153 in file "LCD.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  vector          1    3[COMRAM] PTR const unsigned char 
  2695 ;;		 -> reloj(8), 
  2696 ;;  pos             1    4[COMRAM] unsigned char 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  i               1    6[COMRAM] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/4
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2709 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2710 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2711 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2712 ;;Total ram usage:        4 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; Hardware stack levels required when called: 3
  2715 ;; This function calls:
  2716 ;;		_ENVIA_CHAR
  2717 ;;		_ENVIA_LCD_CMD
  2718 ;; This function is called by:
  2719 ;;		_lcd_init
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text6
  2724   0029C2                     __ptext6:
  2725                           	callstack 0
  2726   0029C2                     _GENERACARACTER:
  2727                           	callstack 122
  2728                           
  2729                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
  2730                           
  2731                           ;incstack = 0
  2732   0029C2  5005               	movf	GENERACARACTER@pos^(0+1280),w,c
  2733   0029C4  0D08               	mullw	8
  2734   0029C6  50F3               	movf	243,w,c
  2735   0029C8  0F40               	addlw	64
  2736   0029CA  ECC8  F014         	call	_ENVIA_LCD_CMD
  2737                           
  2738                           ;LCD.c: 157:  for(i=0;i<8;i++)
  2739   0029CE  6A07               	clrf	GENERACARACTER@i^(0+1280),c
  2740   0029D0                     l1205:
  2741                           
  2742                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
  2743   0029D0  5004               	movf	GENERACARACTER@vector^(0+1280),w,c
  2744   0029D2  2407               	addwf	GENERACARACTER@i^(0+1280),w,c
  2745   0029D4  6E06               	movwf	??_GENERACARACTER^(0+1280),c
  2746   0029D6  C506  F4F6         	movff	??_GENERACARACTER,tblptrl
  2747   0029DA                     	if	0	;There is only one active tblptr byte
  2748   0029DA                     	endif
  2749   0029DA                     	if	0	;tblptru may be non-zero
  2750   0029DA                     	endif
  2751   0029DA                     	if	0	;tblptru may be non-zero
  2752   0029DA                     	endif
  2753   0029DA  0008               	tblrd		*
  2754   0029DC  50F5               	movf	tablat,w,c
  2755   0029DE  ECAF  F014         	call	_ENVIA_CHAR
  2756                           
  2757                           ;LCD.c: 160:  }
  2758   0029E2  2A07               	incf	GENERACARACTER@i^(0+1280),f,c
  2759   0029E4  0E07               	movlw	7
  2760   0029E6  6407               	cpfsgt	GENERACARACTER@i^(0+1280),c
  2761   0029E8  D7F3               	goto	l1205
  2762                           
  2763                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  2764   0029EA  0E80               	movlw	128
  2765   0029EC  ECC8  F014         	call	_ENVIA_LCD_CMD
  2766   0029F0  0012               	return		;funcret
  2767   0029F2                     __end_of_GENERACARACTER:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function _ENVIA_CHAR *****************
  2771 ;; Defined at:
  2772 ;;		line 50 in file "LCD.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  dato            1    wreg     unsigned char 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  dato            1    1[COMRAM] unsigned char 
  2777 ;;  aux             1    2[COMRAM] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/3
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2788 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2790 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2791 ;;Total ram usage:        2 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 2
  2794 ;; This function calls:
  2795 ;;		_ENVIA_NIBBLE
  2796 ;;		_LEER_LCD
  2797 ;; This function is called by:
  2798 ;;		_splash_screen
  2799 ;;		_main
  2800 ;;		_ESCRIBE_MENSAJE
  2801 ;;		_GENERACARACTER
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           	psect	text7
  2806   00295E                     __ptext7:
  2807                           	callstack 0
  2808   00295E                     _ENVIA_CHAR:
  2809                           	callstack 122
  2810                           
  2811                           ;incstack = 0
  2812                           ;ENVIA_CHAR@dato stored from wreg
  2813   00295E  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2814                           
  2815                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2816   002960  80C1               	bsf	193,0,c	;volatile
  2817                           
  2818                           ;LCD.c: 54:  LEER_LCD();
  2819   002962  EC82  F013         	call	_LEER_LCD	;wreg free
  2820                           
  2821                           ;LCD.c: 55:  TRISD = 0x00;
  2822   002966  6AC9               	clrf	201,c	;volatile
  2823                           
  2824                           ;LCD.c: 56:         _delay(1200);
  2825   002968  0EF0               	movlw	240
  2826   00296A                     u307:
  2827   00296A  D000               	nop2	
  2828   00296C  2EE8               	decfsz	wreg,f,c
  2829   00296E  D7FD               	bra	u307
  2830                           
  2831                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2832   002970  92C1               	bcf	193,1,c	;volatile
  2833                           
  2834                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2835   002972  94C1               	bcf	193,2,c	;volatile
  2836                           
  2837                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2838   002974  80C1               	bsf	193,0,c	;volatile
  2839                           
  2840                           ;LCD.c: 61:  aux = dato & 0xF0;
  2841   002976  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2842   002978  0BF0               	andlw	240
  2843   00297A  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2844                           
  2845                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2846   00297C  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2847   00297E  EC3F  F015         	call	_ENVIA_NIBBLE
  2848                           
  2849                           ;LCD.c: 63:  aux = dato << 4;
  2850   002982  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2851   002984  0BF0               	andlw	240
  2852   002986  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2853                           
  2854                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2855   002988  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2856   00298A  EC3F  F015         	call	_ENVIA_NIBBLE
  2857   00298E  0012               	return		;funcret
  2858   002990                     __end_of_ENVIA_CHAR:
  2859                           	callstack 0
  2860                           
  2861 ;; *************** function _CURSOR_ONOFF *****************
  2862 ;; Defined at:
  2863 ;;		line 35 in file "LCD.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  estado          1    wreg     unsigned char 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  estado          1    3[COMRAM] unsigned char 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      void 
  2870 ;; Registers used:
  2871 ;;		wreg, status,2, status,0, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/4
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2880 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2881 ;;Total ram usage:        1 bytes
  2882 ;; Hardware stack levels used: 1
  2883 ;; Hardware stack levels required when called: 3
  2884 ;; This function calls:
  2885 ;;		_ENVIA_LCD_CMD
  2886 ;; This function is called by:
  2887 ;;		_lcd_init
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text8
  2892   002A62                     __ptext8:
  2893                           	callstack 0
  2894   002A62                     _CURSOR_ONOFF:
  2895                           	callstack 122
  2896                           
  2897                           ;incstack = 0
  2898                           ;CURSOR_ONOFF@estado stored from wreg
  2899   002A62  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  2900                           
  2901                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  2902   002A64  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  2903   002A66  A4D8               	btfss	status,2,c
  2904   002A68  D003               	goto	l995
  2905   002A6A  0E0E               	movlw	14
  2906   002A6C  ECC8  F014         	call	_ENVIA_LCD_CMD
  2907   002A70                     l995:
  2908                           
  2909                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2910   002A70  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  2911   002A72  A4D8               	btfss	status,2,c
  2912   002A74  0012               	return	
  2913   002A76  0E0C               	movlw	12
  2914   002A78  ECC8  F014         	call	_ENVIA_LCD_CMD
  2915   002A7C  0012               	return		;funcret
  2916   002A7E                     __end_of_CURSOR_ONOFF:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _CURSOR_HOME *****************
  2920 ;; Defined at:
  2921 ;;		line 30 in file "LCD.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;		None
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/4
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2939 ;;Total ram usage:        0 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 3
  2942 ;; This function calls:
  2943 ;;		_ENVIA_LCD_CMD
  2944 ;; This function is called by:
  2945 ;;		_lcd_init
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text9
  2950   002AA8                     __ptext9:
  2951                           	callstack 0
  2952   002AA8                     _CURSOR_HOME:
  2953                           	callstack 122
  2954                           
  2955                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  2956                           
  2957                           ;incstack = 0
  2958   002AA8  0E02               	movlw	2
  2959   002AAA  ECC8  F014         	call	_ENVIA_LCD_CMD
  2960   002AAE  0012               	return		;funcret
  2961   002AB0                     __end_of_CURSOR_HOME:
  2962                           	callstack 0
  2963                           
  2964 ;; *************** function _BORRAR_LCD *****************
  2965 ;; Defined at:
  2966 ;;		line 67 in file "LCD.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;		None
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/3
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2984 ;;Total ram usage:        0 bytes
  2985 ;; Hardware stack levels used: 1
  2986 ;; Hardware stack levels required when called: 3
  2987 ;; This function calls:
  2988 ;;		_ENVIA_LCD_CMD
  2989 ;; This function is called by:
  2990 ;;		_lcd_init
  2991 ;;		_splash_screen
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text10
  2996   002AB0                     __ptext10:
  2997                           	callstack 0
  2998   002AB0                     _BORRAR_LCD:
  2999                           	callstack 122
  3000                           
  3001                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  3002                           
  3003                           ;incstack = 0
  3004   002AB0  0E01               	movlw	1
  3005   002AB2  ECC8  F014         	call	_ENVIA_LCD_CMD
  3006   002AB6  0012               	return		;funcret
  3007   002AB8                     __end_of_BORRAR_LCD:
  3008                           	callstack 0
  3009                           
  3010 ;; *************** function _ENVIA_LCD_CMD *****************
  3011 ;; Defined at:
  3012 ;;		line 104 in file "LCD.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  dato            1    wreg     unsigned char 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  dato            1    1[COMRAM] unsigned char 
  3017 ;;  aux             1    2[COMRAM] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/3
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3030 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3031 ;;Total ram usage:        2 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; Hardware stack levels required when called: 2
  3034 ;; This function calls:
  3035 ;;		_ENVIA_NIBBLE
  3036 ;;		_LEER_LCD
  3037 ;; This function is called by:
  3038 ;;		_POS_CURSOR
  3039 ;;		_CURSOR_HOME
  3040 ;;		_CURSOR_ONOFF
  3041 ;;		_BORRAR_LCD
  3042 ;;		_LCD_CONFIG
  3043 ;;		_GENERACARACTER
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text11
  3048   002990                     __ptext11:
  3049                           	callstack 0
  3050   002990                     _ENVIA_LCD_CMD:
  3051                           	callstack 122
  3052                           
  3053                           ;incstack = 0
  3054                           ;ENVIA_LCD_CMD@dato stored from wreg
  3055   002990  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  3056                           
  3057                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  3058   002992  90C1               	bcf	193,0,c	;volatile
  3059                           
  3060                           ;LCD.c: 108:  LEER_LCD();
  3061   002994  EC82  F013         	call	_LEER_LCD	;wreg free
  3062                           
  3063                           ;LCD.c: 109:  TRISD = 0b00000000;
  3064   002998  6AC9               	clrf	201,c	;volatile
  3065                           
  3066                           ;LCD.c: 111:         _delay(1200);
  3067   00299A  0EF0               	movlw	240
  3068   00299C                     u317:
  3069   00299C  D000               	nop2	
  3070   00299E  2EE8               	decfsz	wreg,f,c
  3071   0029A0  D7FD               	bra	u317
  3072                           
  3073                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  3074   0029A2  92C1               	bcf	193,1,c	;volatile
  3075                           
  3076                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  3077   0029A4  94C1               	bcf	193,2,c	;volatile
  3078                           
  3079                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  3080   0029A6  90C1               	bcf	193,0,c	;volatile
  3081                           
  3082                           ;LCD.c: 115:  aux = dato & 0xF0;
  3083   0029A8  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  3084   0029AA  0BF0               	andlw	240
  3085   0029AC  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  3086                           
  3087                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  3088   0029AE  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  3089   0029B0  EC3F  F015         	call	_ENVIA_NIBBLE
  3090                           
  3091                           ;LCD.c: 117:  aux = dato<<4;
  3092   0029B4  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  3093   0029B6  0BF0               	andlw	240
  3094   0029B8  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  3095                           
  3096                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  3097   0029BA  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  3098   0029BC  EC3F  F015         	call	_ENVIA_NIBBLE
  3099   0029C0  0012               	return		;funcret
  3100   0029C2                     __end_of_ENVIA_LCD_CMD:
  3101                           	callstack 0
  3102                           
  3103 ;; *************** function _LEER_LCD *****************
  3104 ;; Defined at:
  3105 ;;		line 121 in file "LCD.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;		None
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  aux             1    0[COMRAM] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/3
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3122 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3123 ;;Total ram usage:        1 bytes
  3124 ;; Hardware stack levels used: 1
  3125 ;; Hardware stack levels required when called: 1
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_ENVIA_CHAR
  3130 ;;		_ENVIA_LCD_CMD
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text12
  3135   002704                     __ptext12:
  3136                           	callstack 0
  3137   002704                     _LEER_LCD:
  3138                           	callstack 122
  3139                           
  3140                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3141                           
  3142                           ;incstack = 0
  3143   002704  0EF8               	movlw	248
  3144   002706  6EC9               	movwf	201,c	;volatile
  3145                           
  3146                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  3147   002708  90C1               	bcf	193,0,c	;volatile
  3148                           
  3149                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  3150   00270A  82C1               	bsf	193,1,c	;volatile
  3151                           
  3152                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  3153   00270C  84C1               	bsf	193,2,c	;volatile
  3154                           
  3155                           ;LCD.c: 128:         _delay(1200);
  3156   00270E  0EF0               	movlw	240
  3157   002710                     u327:
  3158   002710  D000               	nop2	
  3159   002712  2EE8               	decfsz	wreg,f,c
  3160   002714  D7FD               	bra	u327
  3161                           
  3162                           ;LCD.c: 130:  aux = PORTD;
  3163   002716  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  3164                           
  3165                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  3166   00271A  94C1               	bcf	193,2,c	;volatile
  3167                           
  3168                           ;LCD.c: 132:         _delay(1200);
  3169   00271C  0EF0               	movlw	240
  3170   00271E                     u337:
  3171   00271E  D000               	nop2	
  3172   002720  2EE8               	decfsz	wreg,f,c
  3173   002722  D7FD               	bra	u337
  3174                           
  3175                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  3176   002724  84C1               	bsf	193,2,c	;volatile
  3177                           
  3178                           ;LCD.c: 135:         _delay(1200);
  3179   002726  0EF0               	movlw	240
  3180   002728                     u347:
  3181   002728  D000               	nop2	
  3182   00272A  2EE8               	decfsz	wreg,f,c
  3183   00272C  D7FD               	bra	u347
  3184   00272E                     l893:
  3185                           
  3186                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3187   00272E  94C1               	bcf	193,2,c	;volatile
  3188                           
  3189                           ;LCD.c: 138:  aux = aux & 0x80;
  3190   002730  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  3191   002732  0B80               	andlw	128
  3192   002734  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  3193                           
  3194                           ;LCD.c: 139:  while(aux == 0x80)
  3195   002736  D012               	goto	l909
  3196   002738                     l190:
  3197                           
  3198                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3199   002738  84C1               	bsf	193,2,c	;volatile
  3200                           
  3201                           ;LCD.c: 142:             _delay(1200);
  3202   00273A  0EF0               	movlw	240
  3203   00273C                     u357:
  3204   00273C  D000               	nop2	
  3205   00273E  2EE8               	decfsz	wreg,f,c
  3206   002740  D7FD               	bra	u357
  3207                           
  3208                           ;LCD.c: 143:             aux = PORTD;
  3209   002742  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  3210                           
  3211                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3212   002746  94C1               	bcf	193,2,c	;volatile
  3213                           
  3214                           ;LCD.c: 145:             _delay(1200);
  3215   002748  0EF0               	movlw	240
  3216   00274A                     u367:
  3217   00274A  D000               	nop2	
  3218   00274C  2EE8               	decfsz	wreg,f,c
  3219   00274E  D7FD               	bra	u367
  3220                           
  3221                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3222   002750  84C1               	bsf	193,2,c	;volatile
  3223                           
  3224                           ;LCD.c: 147:             _delay(1200);
  3225   002752  0EF0               	movlw	240
  3226   002754                     u377:
  3227   002754  D000               	nop2	
  3228   002756  2EE8               	decfsz	wreg,f,c
  3229   002758  D7FD               	bra	u377
  3230   00275A  D7E9               	goto	l893
  3231   00275C                     l909:
  3232                           
  3233                           ;LCD.c: 139:  while(aux == 0x80)
  3234   00275C  0E80               	movlw	128
  3235   00275E  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  3236   002760  A4D8               	btfss	status,2,c
  3237   002762  0012               	return	
  3238   002764  D7E9               	goto	l190
  3239   002766                     __end_of_LEER_LCD:
  3240                           	callstack 0
  3241                           
  3242 ;; *************** function _ENVIA_NIBBLE *****************
  3243 ;; Defined at:
  3244 ;;		line 93 in file "LCD.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  dato            1    wreg     unsigned char 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  dato            1    0[COMRAM] unsigned char 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, status,2, status,0
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/4
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3262 ;;Total ram usage:        1 bytes
  3263 ;; Hardware stack levels used: 1
  3264 ;; Hardware stack levels required when called: 1
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_ENVIA_CHAR
  3269 ;;		_LCD_CONFIG
  3270 ;;		_ENVIA_LCD_CMD
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text13
  3275   002A7E                     __ptext13:
  3276                           	callstack 0
  3277   002A7E                     _ENVIA_NIBBLE:
  3278                           	callstack 122
  3279                           
  3280                           ;incstack = 0
  3281                           ;ENVIA_NIBBLE@dato stored from wreg
  3282   002A7E  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  3283                           
  3284                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3285   002A80  0E0F               	movlw	15
  3286   002A82  16C1               	andwf	193,f,c	;volatile
  3287                           
  3288                           ;LCD.c: 96:  dato &= 0xF0;
  3289   002A84  0EF0               	movlw	240
  3290   002A86  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  3291                           
  3292                           ;LCD.c: 97:  LATD|= dato;
  3293   002A88  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  3294   002A8A  12C1               	iorwf	193,f,c	;volatile
  3295                           
  3296                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3297   002A8C  84C1               	bsf	193,2,c	;volatile
  3298                           
  3299                           ;LCD.c: 100:         _delay(1200);
  3300   002A8E  0EF0               	movlw	240
  3301   002A90                     u387:
  3302   002A90  D000               	nop2	
  3303   002A92  2EE8               	decfsz	wreg,f,c
  3304   002A94  D7FD               	bra	u387
  3305                           
  3306                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3307   002A96  94C1               	bcf	193,2,c	;volatile
  3308   002A98  0012               	return		;funcret
  3309   002A9A                     __end_of_ENVIA_NIBBLE:
  3310                           	callstack 0
  3311                           
  3312 ;; *************** function _control_backlight *****************
  3313 ;; Defined at:
  3314 ;;		line 75 in file "maincode02.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;		None
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;		None
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		None
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/3
  3325 ;;		On exit  : 3F/3
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3332 ;;Total ram usage:        0 bytes
  3333 ;; Hardware stack levels used: 1
  3334 ;; Hardware stack levels required when called: 1
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text14
  3343   002A9A                     __ptext14:
  3344                           	callstack 0
  3345   002A9A                     _control_backlight:
  3346                           	callstack 125
  3347                           
  3348                           ;maincode02.c: 76:     ADCON0bits.GO_nDONE = 1;
  3349                           
  3350                           ;incstack = 0
  3351   002A9A  0103               	movlb	3	; () banked
  3352   002A9C  81F3               	bsf	243,0,b	;volatile
  3353   002A9E                     l94:
  3354                           
  3355                           ; BSR set to: 3
  3356   002A9E  B1F3               	btfsc	243,0,b	;volatile
  3357   002AA0  D7FE               	goto	l94
  3358                           
  3359                           ; BSR set to: 3
  3360                           ;maincode02.c: 78:     CCPR2H = ADRESH;
  3361   002AA2  C3EB F345          	movff	1003,837	;volatile
  3362                           
  3363                           ; BSR set to: 3
  3364   002AA6  0012               	return		;funcret
  3365   002AA8                     __end_of_control_backlight:
  3366                           	callstack 0
  3367                           
  3368 ;; *************** function _configuro *****************
  3369 ;; Defined at:
  3370 ;;		line 13 in file "maincode02.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;		None
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 3F/3
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3388 ;;Total ram usage:        0 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; Hardware stack levels required when called: 1
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		_main
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           	psect	text15
  3399   0027C6                     __ptext15:
  3400                           	callstack 0
  3401   0027C6                     _configuro:
  3402                           	callstack 125
  3403                           
  3404                           ;maincode02.c: 15:     OSCCON1 = 0x60;
  3405                           
  3406                           ; BSR set to: 3
  3407                           ;incstack = 0
  3408   0027C6  0E60               	movlw	96
  3409   0027C8  0100               	movlb	0	; () banked
  3410   0027CA  6FAD               	movwf	173,b	;volatile
  3411                           
  3412                           ;maincode02.c: 16:     OSCFRQ = 0x06;
  3413   0027CC  0E06               	movlw	6
  3414   0027CE  6FB1               	movwf	177,b	;volatile
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;maincode02.c: 17:     OSCENbits.HFOEN = 1;
  3418   0027D0  8DB3               	bsf	179,6,b	;volatile
  3419                           
  3420                           ;maincode02.c: 20:     RF0PPS = 0x16;
  3421   0027D2  0E16               	movlw	22
  3422   0027D4  0102               	movlb	2	; () banked
  3423   0027D6  6F29               	movwf	41,b	;volatile
  3424                           
  3425                           ;maincode02.c: 21:     T2PR = 98;
  3426   0027D8  0E62               	movlw	98
  3427   0027DA  0103               	movlb	3	; () banked
  3428   0027DC  6F23               	movwf	35,b	;volatile
  3429                           
  3430                           ;maincode02.c: 22:     CCP2CON = 0x9C;
  3431   0027DE  0E9C               	movlw	156
  3432   0027E0  6F46               	movwf	70,b	;volatile
  3433                           
  3434                           ;maincode02.c: 23:     CCPR2H = 49;
  3435   0027E2  0E31               	movlw	49
  3436   0027E4  6F45               	movwf	69,b	;volatile
  3437                           
  3438                           ; BSR set to: 3
  3439                           ;maincode02.c: 24:     CCPR2L = 0;
  3440   0027E6  6B44               	clrf	68,b	;volatile
  3441                           
  3442                           ;maincode02.c: 25:     T2CLKCON = 0x01;
  3443   0027E8  0E01               	movlw	1
  3444   0027EA  6F26               	movwf	38,b	;volatile
  3445                           
  3446                           ;maincode02.c: 26:     T2CON = 0xC0;
  3447   0027EC  0EC0               	movlw	192
  3448   0027EE  6F24               	movwf	36,b	;volatile
  3449                           
  3450                           ; BSR set to: 3
  3451                           ;maincode02.c: 27:     TRISFbits.TRISF0 = 0;
  3452   0027F0  90CB               	bcf	203,0,c	;volatile
  3453                           
  3454                           ; BSR set to: 3
  3455                           ;maincode02.c: 28:     ANSELFbits.ANSELF0 = 0;
  3456   0027F2  0104               	movlb	4	; () banked
  3457   0027F4  9128               	bcf	40,0,b	;volatile
  3458                           
  3459                           ; BSR set to: 4
  3460                           ;maincode02.c: 30:     TRISAbits.TRISA0 = 1;
  3461   0027F6  80C6               	bsf	198,0,c	;volatile
  3462                           
  3463                           ; BSR set to: 4
  3464                           ;maincode02.c: 31:     ANSELAbits.ANSELA0 = 1;
  3465   0027F8  8100               	bsf	0,0,b	;volatile
  3466                           
  3467                           ;maincode02.c: 32:     ADCON0bits.ADFM = 0;
  3468   0027FA  0EF3               	movlw	-13
  3469   0027FC  0103               	movlb	3	; () banked
  3470   0027FE  17F3               	andwf	243,f,b	;volatile
  3471                           
  3472                           ; BSR set to: 3
  3473                           ;maincode02.c: 33:     ADCON0bits.CS = 1;
  3474   002800  89F3               	bsf	243,4,b	;volatile
  3475                           
  3476                           ; BSR set to: 3
  3477                           ;maincode02.c: 34:     ADPCH = 0x00;
  3478   002802  6BEC               	clrf	236,b	;volatile
  3479                           
  3480                           ; BSR set to: 3
  3481                           ;maincode02.c: 35:     ADCON0bits.ADON = 1;
  3482   002804  8FF3               	bsf	243,7,b	;volatile
  3483                           
  3484                           ;maincode02.c: 37:     T1CLK = 0x01;
  3485   002806  0E01               	movlw	1
  3486   002808  6F21               	movwf	33,b	;volatile
  3487                           
  3488                           ;maincode02.c: 38:     T1CON = 0x33;
  3489   00280A  0E33               	movlw	51
  3490   00280C  6F1E               	movwf	30,b	;volatile
  3491                           
  3492                           ;maincode02.c: 40:     CCP1CON = 0x8B;
  3493   00280E  0E8B               	movlw	139
  3494   002810  6F42               	movwf	66,b	;volatile
  3495                           
  3496                           ;maincode02.c: 41:     CCPR1H = 0x27;
  3497   002812  0E27               	movlw	39
  3498   002814  6F41               	movwf	65,b	;volatile
  3499                           
  3500                           ;maincode02.c: 42:     CCPR1L = 0x10;
  3501   002816  0E10               	movlw	16
  3502   002818  6F40               	movwf	64,b	;volatile
  3503                           
  3504                           ; BSR set to: 3
  3505                           ;maincode02.c: 44:     PIE3bits.CCP1IE = 1;
  3506   00281A  8CA1               	bsf	161,6,c	;volatile
  3507                           
  3508                           ; BSR set to: 3
  3509                           ;maincode02.c: 45:     PIR3bits.CCP1IF = 0;
  3510   00281C  9CB1               	bcf	177,6,c	;volatile
  3511                           
  3512                           ; BSR set to: 3
  3513                           ;maincode02.c: 46:     INTCON0bits.GIE = 1;
  3514   00281E  8ED6               	bsf	214,7,c	;volatile
  3515                           
  3516                           ; BSR set to: 3
  3517   002820  0012               	return		;funcret
  3518   002822                     __end_of_configuro:
  3519                           	callstack 0
  3520                           
  3521 ;; *************** function ___lbmod *****************
  3522 ;; Defined at:
  3523 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lbmod.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  dividend        1    wreg     unsigned char 
  3526 ;;  divisor         1    0[COMRAM] unsigned char 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  dividend        1    1[COMRAM] unsigned char 
  3529 ;;  rem             1    3[COMRAM] unsigned char 
  3530 ;;  counter         1    2[COMRAM] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      unsigned char 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/3
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3540 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3541 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3543 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3544 ;;Total ram usage:        4 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; Hardware stack levels required when called: 1
  3547 ;; This function calls:
  3548 ;;		Nothing
  3549 ;; This function is called by:
  3550 ;;		_main
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text16
  3555   0029F2                     __ptext16:
  3556                           	callstack 0
  3557   0029F2                     ___lbmod:
  3558                           	callstack 125
  3559                           
  3560                           ; BSR set to: 3
  3561                           ;incstack = 0
  3562                           ;___lbmod@dividend stored from wreg
  3563   0029F2  6E02               	movwf	___lbmod@dividend^(0+1280),c
  3564   0029F4  0E08               	movlw	8
  3565   0029F6  6E03               	movwf	___lbmod@counter^(0+1280),c
  3566   0029F8  6A04               	clrf	___lbmod@rem^(0+1280),c
  3567   0029FA                     l1287:
  3568   0029FA  90D8               	bcf	status,0,c
  3569   0029FC  3402               	rlcf	___lbmod@dividend^(0+1280),w,c
  3570   0029FE  3404               	rlcf	___lbmod@rem^(0+1280),w,c
  3571   002A00  6E04               	movwf	___lbmod@rem^(0+1280),c
  3572   002A02  90D8               	bcf	status,0,c
  3573   002A04  3602               	rlcf	___lbmod@dividend^(0+1280),f,c
  3574   002A06  5001               	movf	___lbmod@divisor^(0+1280),w,c
  3575   002A08  5C04               	subwf	___lbmod@rem^(0+1280),w,c
  3576   002A0A  A0D8               	btfss	status,0,c
  3577   002A0C  D002               	goto	l1295
  3578   002A0E  5001               	movf	___lbmod@divisor^(0+1280),w,c
  3579   002A10  5E04               	subwf	___lbmod@rem^(0+1280),f,c
  3580   002A12                     l1295:
  3581   002A12  2E03               	decfsz	___lbmod@counter^(0+1280),f,c
  3582   002A14  D7F2               	goto	l1287
  3583   002A16  5004               	movf	___lbmod@rem^(0+1280),w,c
  3584   002A18  0012               	return		;funcret
  3585   002A1A                     __end_of___lbmod:
  3586                           	callstack 0
  3587                           
  3588 ;; *************** function ___lbdiv *****************
  3589 ;; Defined at:
  3590 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lbdiv.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  dividend        1    wreg     unsigned char 
  3593 ;;  divisor         1    0[COMRAM] unsigned char 
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;  dividend        1    1[COMRAM] unsigned char 
  3596 ;;  quotient        1    3[COMRAM] unsigned char 
  3597 ;;  counter         1    2[COMRAM] unsigned char 
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      unsigned char 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2, status,0
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/3
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3607 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3608 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3611 ;;Total ram usage:        4 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; Hardware stack levels required when called: 1
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_main
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text17
  3622   0028F0                     __ptext17:
  3623                           	callstack 0
  3624   0028F0                     ___lbdiv:
  3625                           	callstack 125
  3626                           
  3627                           ;incstack = 0
  3628                           ;___lbdiv@dividend stored from wreg
  3629   0028F0  6E02               	movwf	___lbdiv@dividend^(0+1280),c
  3630   0028F2  6A04               	clrf	___lbdiv@quotient^(0+1280),c
  3631   0028F4  5001               	movf	___lbdiv@divisor^(0+1280),w,c
  3632   0028F6  B4D8               	btfsc	status,2,c
  3633   0028F8  D015               	goto	l1279
  3634   0028FA  0E01               	movlw	1
  3635   0028FC  6E03               	movwf	___lbdiv@counter^(0+1280),c
  3636   0028FE  D003               	goto	l1267
  3637   002900                     l1263:
  3638   002900  90D8               	bcf	status,0,c
  3639   002902  3601               	rlcf	___lbdiv@divisor^(0+1280),f,c
  3640   002904  2A03               	incf	___lbdiv@counter^(0+1280),f,c
  3641   002906                     l1267:
  3642   002906  AE01               	btfss	___lbdiv@divisor^(0+1280),7,c
  3643   002908  D7FB               	goto	l1263
  3644   00290A                     u220:
  3645   00290A  90D8               	bcf	status,0,c
  3646   00290C  3604               	rlcf	___lbdiv@quotient^(0+1280),f,c
  3647   00290E  5001               	movf	___lbdiv@divisor^(0+1280),w,c
  3648   002910  5C02               	subwf	___lbdiv@dividend^(0+1280),w,c
  3649   002912  A0D8               	btfss	status,0,c
  3650   002914  D003               	goto	l1275
  3651   002916  5001               	movf	___lbdiv@divisor^(0+1280),w,c
  3652   002918  5E02               	subwf	___lbdiv@dividend^(0+1280),f,c
  3653   00291A  8004               	bsf	___lbdiv@quotient^(0+1280),0,c
  3654   00291C                     l1275:
  3655   00291C  90D8               	bcf	status,0,c
  3656   00291E  3201               	rrcf	___lbdiv@divisor^(0+1280),f,c
  3657   002920  2E03               	decfsz	___lbdiv@counter^(0+1280),f,c
  3658   002922  D7F3               	goto	u220
  3659   002924                     l1279:
  3660   002924  5004               	movf	___lbdiv@quotient^(0+1280),w,c
  3661   002926  0012               	return		;funcret
  3662   002928                     __end_of___lbdiv:
  3663                           	callstack 0
  3664                           
  3665 ;; *************** function _CCP1_ISR *****************
  3666 ;; Defined at:
  3667 ;;		line 106 in file "maincode02.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3685 ;;Total ram usage:        0 bytes
  3686 ;; Hardware stack levels used: 1
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		Interrupt level 2
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text18
  3695   00287C                     __ptext18:
  3696                           	callstack 0
  3697   00287C                     _CCP1_ISR:
  3698                           	callstack 122
  3699                           
  3700                           ;maincode02.c: 107:     PIR3bits.CCP1IF = 0;
  3701                           
  3702                           ;incstack = 0
  3703   00287C  9CB1               	bcf	177,6,c	;volatile
  3704                           
  3705                           ;maincode02.c: 108:     if(centesimas == 99){
  3706   00287E  0E63               	movlw	99
  3707   002880  180A               	xorwf	_centesimas^(0+1280),w,c
  3708   002882  A4D8               	btfss	status,2,c
  3709   002884  D017               	goto	i2l1195
  3710                           
  3711                           ;maincode02.c: 109:         centesimas = 0;
  3712   002886  6A0A               	clrf	_centesimas^(0+1280),c
  3713                           
  3714                           ;maincode02.c: 110:         if(segundos == 59){
  3715   002888  0E3B               	movlw	59
  3716   00288A  180B               	xorwf	_segundos^(0+1280),w,c
  3717   00288C  A4D8               	btfss	status,2,c
  3718   00288E  D010               	goto	i2l1193
  3719                           
  3720                           ;maincode02.c: 111:             segundos = 0;
  3721   002890  6A0B               	clrf	_segundos^(0+1280),c
  3722                           
  3723                           ;maincode02.c: 112:             if(minutos == 59){
  3724   002892  0E3B               	movlw	59
  3725   002894  180C               	xorwf	_minutos^(0+1280),w,c
  3726   002896  A4D8               	btfss	status,2,c
  3727   002898  D009               	goto	i2l1191
  3728                           
  3729                           ;maincode02.c: 113:                 minutos = 0;
  3730   00289A  6A0C               	clrf	_minutos^(0+1280),c
  3731                           
  3732                           ;maincode02.c: 114:                 if(horas == 23){
  3733   00289C  0E17               	movlw	23
  3734   00289E  180D               	xorwf	_horas^(0+1280),w,c
  3735   0028A0  A4D8               	btfss	status,2,c
  3736   0028A2  D002               	goto	i2l1189
  3737                           
  3738                           ;maincode02.c: 115:                     horas = 0;
  3739   0028A4  6A0D               	clrf	_horas^(0+1280),c
  3740                           
  3741                           ;maincode02.c: 116:                 }
  3742   0028A6  0011               	retfie		f
  3743   0028A8                     i2l1189:
  3744                           
  3745                           ;maincode02.c: 118:                     horas++;
  3746   0028A8  2A0D               	incf	_horas^(0+1280),f,c
  3747   0028AA  0011               	retfie		f
  3748   0028AC                     i2l1191:
  3749                           
  3750                           ;maincode02.c: 122:                 minutos++;
  3751   0028AC  2A0C               	incf	_minutos^(0+1280),f,c
  3752   0028AE  0011               	retfie		f
  3753   0028B0                     i2l1193:
  3754                           
  3755                           ;maincode02.c: 126:             segundos++;
  3756   0028B0  2A0B               	incf	_segundos^(0+1280),f,c
  3757   0028B2  0011               	retfie		f
  3758   0028B4                     i2l1195:
  3759                           
  3760                           ;maincode02.c: 130:         centesimas++;
  3761   0028B4  2A0A               	incf	_centesimas^(0+1280),f,c
  3762   0028B6  0011               	retfie		f
  3763   0028B8                     __end_of_CCP1_ISR:
  3764                           	callstack 0
  3765                           
  3766 ;; *************** function _DEFAULT_ISR *****************
  3767 ;; Defined at:
  3768 ;;		line 134 in file "maincode02.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		None
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3786 ;;Total ram usage:        0 bytes
  3787 ;; Hardware stack levels used: 1
  3788 ;; This function calls:
  3789 ;;		Nothing
  3790 ;; This function is called by:
  3791 ;;		Interrupt level 2
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text19
  3796   002ABC                     __ptext19:
  3797                           	callstack 0
  3798   002ABC                     _DEFAULT_ISR:
  3799                           	callstack 122
  3800                           
  3801                           ;incstack = 0
  3802   002ABC  0011               	retfie		f
  3803   002ABE                     __end_of_DEFAULT_ISR:
  3804                           	callstack 0
  3805                           
  3806                           ;
  3807                           ; H/W Interrupt Vector Table @ 0x8
  3808                           ;
  3809                           
  3810                           	psect	ivt0x8
  3811   000008                     __pivt0x8:
  3812                           	callstack 0
  3813   000008                     ivt0x8_base:
  3814                           	callstack 0
  3815                           
  3816                           ; Vector 0 : SWINT
  3817   000008  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3818                           
  3819                           ; Vector 1 : HLVD
  3820   00000A  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3821                           
  3822                           ; Vector 2 : OSF
  3823   00000C  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3824                           
  3825                           ; Vector 3 : CSW
  3826   00000E  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3827                           
  3828                           ; Vector 4 : Undefined
  3829   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  3830                           
  3831                           ; Vector 5 : CLC1
  3832   000012  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3833                           
  3834                           ; Vector 6 : Undefined
  3835   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  3836                           
  3837                           ; Vector 7 : IOC
  3838   000016  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3839                           
  3840                           ; Vector 8 : INT0
  3841   000018  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3842                           
  3843                           ; Vector 9 : ZCD
  3844   00001A  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3845                           
  3846                           ; Vector 10 : AD
  3847   00001C  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3848                           
  3849                           ; Vector 11 : ACT
  3850   00001E  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3851                           
  3852                           ; Vector 12 : CMP1
  3853   000020  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3854                           
  3855                           ; Vector 13 : SMT1
  3856   000022  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3857                           
  3858                           ; Vector 14 : SMT1PRA
  3859   000024  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3860                           
  3861                           ; Vector 15 : SMT1PRW
  3862   000026  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3863                           
  3864                           ; Vector 16 : ADT
  3865   000028  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3866                           
  3867                           ; Vector 17 : Undefined
  3868   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  3869                           
  3870                           ; Vector 18 : Undefined
  3871   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  3872                           
  3873                           ; Vector 19 : Undefined
  3874   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  3875                           
  3876                           ; Vector 20 : DMA1SCNT
  3877   000030  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3878                           
  3879                           ; Vector 21 : DMA1DCNT
  3880   000032  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3881                           
  3882                           ; Vector 22 : DMA1OR
  3883   000034  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3884                           
  3885                           ; Vector 23 : DMA1A
  3886   000036  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3887                           
  3888                           ; Vector 24 : SPI1RX
  3889   000038  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3890                           
  3891                           ; Vector 25 : SPI1TX
  3892   00003A  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3893                           
  3894                           ; Vector 26 : SPI1
  3895   00003C  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3896                           
  3897                           ; Vector 27 : TMR2
  3898   00003E  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3899                           
  3900                           ; Vector 28 : TMR1
  3901   000040  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3902                           
  3903                           ; Vector 29 : TMR1G
  3904   000042  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3905                           
  3906                           ; Vector 30 : CCP1
  3907   000044  0A1F               	dw	_CCP1_ISR shr (0+2)
  3908                           
  3909                           ; Vector 31 : TMR0
  3910   000046  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3911                           
  3912                           ; Vector 32 : U1RX
  3913   000048  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3914                           
  3915                           ; Vector 33 : U1TX
  3916   00004A  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3917                           
  3918                           ; Vector 34 : U1E
  3919   00004C  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3920                           
  3921                           ; Vector 35 : U1
  3922   00004E  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3923                           
  3924                           ; Vector 36 : Undefined
  3925   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  3926                           
  3927                           ; Vector 37 : Undefined
  3928   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  3929                           
  3930                           ; Vector 38 : PWM1PR
  3931   000054  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3932                           
  3933                           ; Vector 39 : PWM1
  3934   000056  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3935                           
  3936                           ; Vector 40 : SPI2RX
  3937   000058  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3938                           
  3939                           ; Vector 41 : SPI2TX
  3940   00005A  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3941                           
  3942                           ; Vector 42 : SPI2
  3943   00005C  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3944                           
  3945                           ; Vector 43 : Undefined
  3946   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  3947                           
  3948                           ; Vector 44 : TMR3
  3949   000060  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3950                           
  3951                           ; Vector 45 : TMR3G
  3952   000062  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3953                           
  3954                           ; Vector 46 : PWM2PR
  3955   000064  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3956                           
  3957                           ; Vector 47 : PWM2
  3958   000066  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3959                           
  3960                           ; Vector 48 : INT1
  3961   000068  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3962                           
  3963                           ; Vector 49 : CLC2
  3964   00006A  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3965                           
  3966                           ; Vector 50 : CWG1
  3967   00006C  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3968                           
  3969                           ; Vector 51 : NCO1
  3970   00006E  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3971                           
  3972                           ; Vector 52 : DMA2SCNT
  3973   000070  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3974                           
  3975                           ; Vector 53 : DMA2DCNT
  3976   000072  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3977                           
  3978                           ; Vector 54 : DMA2OR
  3979   000074  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3980                           
  3981                           ; Vector 55 : DMA2A
  3982   000076  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3983                           
  3984                           ; Vector 56 : I2C1RX
  3985   000078  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3986                           
  3987                           ; Vector 57 : I2C1TX
  3988   00007A  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3989                           
  3990                           ; Vector 58 : I2C1
  3991   00007C  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3992                           
  3993                           ; Vector 59 : I2C1E
  3994   00007E  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  3995                           
  3996                           ; Vector 60 : Undefined
  3997   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  3998                           
  3999                           ; Vector 61 : CLC3
  4000   000082  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4001                           
  4002                           ; Vector 62 : PWM3PR
  4003   000084  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4004                           
  4005                           ; Vector 63 : PWM3
  4006   000086  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4007                           
  4008                           ; Vector 64 : U2RX
  4009   000088  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4010                           
  4011                           ; Vector 65 : U2TX
  4012   00008A  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4013                           
  4014                           ; Vector 66 : U2E
  4015   00008C  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4016                           
  4017                           ; Vector 67 : U2
  4018   00008E  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4019                           
  4020                           ; Vector 68 : TMR5
  4021   000090  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4022                           
  4023                           ; Vector 69 : TMR5G
  4024   000092  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4025                           
  4026                           ; Vector 70 : CCP2
  4027   000094  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4028                           
  4029                           ; Vector 71 : SCAN
  4030   000096  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4031                           
  4032                           ; Vector 72 : U3RX
  4033   000098  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4034                           
  4035                           ; Vector 73 : U3TX
  4036   00009A  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4037                           
  4038                           ; Vector 74 : U3E
  4039   00009C  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4040                           
  4041                           ; Vector 75 : U3
  4042   00009E  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4043                           
  4044                           ; Vector 76 : Undefined
  4045   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  4046                           
  4047                           ; Vector 77 : CLC4
  4048   0000A2  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4049                           
  4050                           ; Vector 78 : Undefined
  4051   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  4052                           
  4053                           ; Vector 79 : Undefined
  4054   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  4055                           
  4056                           ; Vector 80 : INT2
  4057   0000A8  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4058                           
  4059                           ; Vector 81 : CLC5
  4060   0000AA  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4061                           
  4062                           ; Vector 82 : CWG2
  4063   0000AC  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4064                           
  4065                           ; Vector 83 : NCO2
  4066   0000AE  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4067                           
  4068                           ; Vector 84 : DMA3SCNT
  4069   0000B0  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4070                           
  4071                           ; Vector 85 : DMA3DCNT
  4072   0000B2  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4073                           
  4074                           ; Vector 86 : DMA3OR
  4075   0000B4  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4076                           
  4077                           ; Vector 87 : DMA3A
  4078   0000B6  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4079                           
  4080                           ; Vector 88 : CCP3
  4081   0000B8  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4082                           
  4083                           ; Vector 89 : CLC6
  4084   0000BA  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4085                           
  4086                           ; Vector 90 : CWG3
  4087   0000BC  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4088                           
  4089                           ; Vector 91 : TMR4
  4090   0000BE  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4091                           
  4092                           ; Vector 92 : DMA4SCNT
  4093   0000C0  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4094                           
  4095                           ; Vector 93 : DMA4DCNT
  4096   0000C2  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4097                           
  4098                           ; Vector 94 : DMA4OR
  4099   0000C4  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4100                           
  4101                           ; Vector 95 : DMA4A
  4102   0000C6  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4103                           
  4104                           ; Vector 96 : U4RX
  4105   0000C8  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4106                           
  4107                           ; Vector 97 : U4TX
  4108   0000CA  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4109                           
  4110                           ; Vector 98 : U4E
  4111   0000CC  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4112                           
  4113                           ; Vector 99 : U4
  4114   0000CE  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4115                           
  4116                           ; Vector 100 : DMA5SCNT
  4117   0000D0  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4118                           
  4119                           ; Vector 101 : DMA5DCNT
  4120   0000D2  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4121                           
  4122                           ; Vector 102 : DMA5OR
  4123   0000D4  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4124                           
  4125                           ; Vector 103 : DMA5A
  4126   0000D6  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4127                           
  4128                           ; Vector 104 : U5RX
  4129   0000D8  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4130                           
  4131                           ; Vector 105 : U5TX
  4132   0000DA  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4133                           
  4134                           ; Vector 106 : U5E
  4135   0000DC  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4136                           
  4137                           ; Vector 107 : U5
  4138   0000DE  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4139                           
  4140                           ; Vector 108 : DMA6SCNT
  4141   0000E0  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4142                           
  4143                           ; Vector 109 : DMA6DCNT
  4144   0000E2  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4145                           
  4146                           ; Vector 110 : DMA6OR
  4147   0000E4  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4148                           
  4149                           ; Vector 111 : DMA6A
  4150   0000E6  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4151                           
  4152                           ; Vector 112 : Undefined
  4153   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  4154                           
  4155                           ; Vector 113 : CLC7
  4156   0000EA  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4157                           
  4158                           ; Vector 114 : CMP2
  4159   0000EC  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4160                           
  4161                           ; Vector 115 : NCO3
  4162   0000EE  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4163                           
  4164                           ; Vector 116 : Undefined
  4165   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  4166                           
  4167                           ; Vector 117 : Undefined
  4168   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  4169                           
  4170                           ; Vector 118 : Undefined
  4171   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  4172                           
  4173                           ; Vector 119 : Undefined
  4174   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  4175                           
  4176                           ; Vector 120 : NVM
  4177   0000F8  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4178                           
  4179                           ; Vector 121 : CLC8
  4180   0000FA  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4181                           
  4182                           ; Vector 122 : CRC
  4183   0000FC  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4184                           
  4185                           ; Vector 123 : TMR6
  4186   0000FE  0AAF               	dw	_DEFAULT_ISR shr (0+2)
  4187   000100                     ivt0x8_undefint:
  4188                           	callstack 0
  4189   000100  00FF               	reset	
  4190                           
  4191                           	psect	rparam
  4192   000001                     ___rparam_used  equ	1
  4193   000000                     ___param_bank   equ	0
  4194   000000                     __Lparam        equ	__Lrparam
  4195   000000                     __Hparam        equ	__Hrparam
  4196                           
  4197                           	psect	config
  4198                           
  4199                           ;Config register CONFIG1 @ 0x300000
  4200                           ;	External Oscillator Selection
  4201                           ;	FEXTOSC = OFF, Oscillator not enabled
  4202                           ;	Reset Oscillator Selection
  4203                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  4204   300000                     	org	3145728
  4205   300000  FC                 	db	252
  4206                           
  4207                           ;Config register CONFIG2 @ 0x300001
  4208                           ;	Clock out Enable bit
  4209                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4210                           ;	PRLOCKED One-Way Set Enable bit
  4211                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  4212                           ;	Clock Switch Enable bit
  4213                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4214                           ;	Fail-Safe Clock Monitor Enable bit
  4215                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4216   300001                     	org	3145729
  4217   300001  FF                 	db	255
  4218                           
  4219                           ;Config register CONFIG3 @ 0x300002
  4220                           ;	MCLR Enable bit
  4221                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4222                           ;	Power-up timer selection bits
  4223                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  4224                           ;	Multi-vector enable bit
  4225                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  4226                           ;	IVTLOCK bit One-way set enable bit
  4227                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  4228                           ;	Low Power BOR Enable bit
  4229                           ;	LPBOREN = OFF, Low-Power BOR disabled
  4230                           ;	Brown-out Reset Enable bits
  4231                           ;	BOREN = OFF, Brown-out Reset disabled
  4232   300002                     	org	3145730
  4233   300002  3D                 	db	61
  4234                           
  4235                           ;Config register CONFIG4 @ 0x300003
  4236                           ;	Brown-out Reset Voltage Selection bits
  4237                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  4238                           ;	ZCD Disable bit
  4239                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  4240                           ;	PPSLOCK bit One-Way Set Enable bit
  4241                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  4242                           ;	Stack Full/Underflow Reset Enable bit
  4243                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4244                           ;	Low Voltage Programming Enable bit
  4245                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  4246                           ;	Extended Instruction Set Enable bit
  4247                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4248   300003                     	org	3145731
  4249   300003  DF                 	db	223
  4250                           
  4251                           ;Config register CONFIG5 @ 0x300004
  4252                           ;	WDT Period selection bits
  4253                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4254                           ;	WDT operating mode
  4255                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4256   300004                     	org	3145732
  4257   300004  9F                 	db	159
  4258                           
  4259                           ;Config register CONFIG6 @ 0x300005
  4260                           ;	WDT Window Select bits
  4261                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4262                           ;	WDT input clock selector
  4263                           ;	WDTCCS = SC, Software Control
  4264   300005                     	org	3145733
  4265   300005  FF                 	db	255
  4266                           
  4267                           ;Config register CONFIG7 @ 0x300006
  4268                           ;	Boot Block Size selection bits
  4269                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4270                           ;	Boot Block enable bit
  4271                           ;	BBEN = OFF, Boot block disabled
  4272                           ;	Storage Area Flash enable bit
  4273                           ;	SAFEN = OFF, SAF disabled
  4274                           ;	Background Debugger
  4275                           ;	DEBUG = OFF, Background Debugger disabled
  4276   300006                     	org	3145734
  4277   300006  FF                 	db	255
  4278                           
  4279                           ;Config register CONFIG8 @ 0x300007
  4280                           ;	Boot Block Write Protection bit
  4281                           ;	WRTB = OFF, Boot Block not Write protected
  4282                           ;	Configuration Register Write Protection bit
  4283                           ;	WRTC = OFF, Configuration registers not Write protected
  4284                           ;	Data EEPROM Write Protection bit
  4285                           ;	WRTD = OFF, Data EEPROM not Write protected
  4286                           ;	SAF Write protection bit
  4287                           ;	WRTSAF = OFF, SAF not Write Protected
  4288                           ;	Application Block write protection bit
  4289                           ;	WRTAPP = OFF, Application Block not write protected
  4290   300007                     	org	3145735
  4291   300007  FF                 	db	255
  4292                           
  4293                           ;Config register CONFIG10 @ 0x300009
  4294                           ;	PFM and Data EEPROM Code Protection bit
  4295                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  4296   300009                     	org	3145737
  4297   300009  FF                 	db	255
  4298                           tosu	equ	0x4FF
  4299                           tosh	equ	0x4FE
  4300                           tosl	equ	0x4FD
  4301                           stkptr	equ	0x4FC
  4302                           pclatu	equ	0x4FB
  4303                           pclath	equ	0x4FA
  4304                           pcl	equ	0x4F9
  4305                           tblptru	equ	0x4F8
  4306                           tblptrh	equ	0x4F7
  4307                           tblptrl	equ	0x4F6
  4308                           tablat	equ	0x4F5
  4309                           prodh	equ	0x4F4
  4310                           prodl	equ	0x4F3
  4311                           indf0	equ	0x4EF
  4312                           postinc0	equ	0x4EE
  4313                           postdec0	equ	0x4ED
  4314                           preinc0	equ	0x4EC
  4315                           plusw0	equ	0x4EB
  4316                           fsr0h	equ	0x4EA
  4317                           fsr0l	equ	0x4E9
  4318                           wreg	equ	0x4E8
  4319                           indf1	equ	0x4E7
  4320                           postinc1	equ	0x4E6
  4321                           postdec1	equ	0x4E5
  4322                           preinc1	equ	0x4E4
  4323                           plusw1	equ	0x4E3
  4324                           fsr1h	equ	0x4E2
  4325                           fsr1l	equ	0x4E1
  4326                           bsr	equ	0x4E0
  4327                           indf2	equ	0x4DF
  4328                           postinc2	equ	0x4DE
  4329                           postdec2	equ	0x4DD
  4330                           preinc2	equ	0x4DC
  4331                           plusw2	equ	0x4DB
  4332                           fsr2h	equ	0x4DA
  4333                           fsr2l	equ	0x4D9
  4334                           status	equ	0x4D8

Data Sizes:
    Strings     41
    Constant    8
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      13
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[14]), STR_3(CODE[13]), 

    GENERACARACTER@vector	PTR const unsigned char  size(1) Largest target is 8
		 -> reloj(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_splash_screen
    _splash_screen->_ESCRIBE_MENSAJE
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _lcd_init->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _CCP1_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _CCP1_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _CCP1_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _CCP1_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _CCP1_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _CCP1_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _CCP1_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _CCP1_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _CCP1_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _CCP1_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _CCP1_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _CCP1_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _CCP1_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _CCP1_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _CCP1_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _CCP1_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _CCP1_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _CCP1_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _CCP1_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _CCP1_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _CCP1_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _CCP1_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _CCP1_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _CCP1_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _CCP1_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _CCP1_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _CCP1_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _CCP1_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _CCP1_ISR in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _CCP1_ISR in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _CCP1_ISR in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _CCP1_ISR in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _CCP1_ISR in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2472
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___lbdiv
                            ___lbmod
                          _configuro
                  _control_backlight
                           _lcd_init
                      _splash_screen
 ---------------------------------------------------------------------------------
 (1) _splash_screen                                        2     2      0     684
                                              7 COMRAM     2     2      0
                         _BORRAR_LCD
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     227
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE                                      4     2      2     217
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     879
                                              7 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     2      2     354
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _control_backlight                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     171
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     174
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _DEFAULT_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___lbdiv
   ___lbmod
   _configuro
   _control_backlight
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _splash_screen
     _BORRAR_LCD
     _ENVIA_CHAR
     _ESCRIBE_MENSAJE
     _POS_CURSOR

 _CCP1_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRllh       624      0       0      0.0%
BITBIGSFRh         268      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBIGSFRlh        206      0       0      0.0%
BITBIGSFRllll      173      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95      9      13     13.7%
BITBIGSFRlllh        5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      13      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jun 09 19:43:10 2025

                       l94 2A9E              _splash_screen 2822              ENVIA_CHAR@aux 0503  
                      l190 2738                        l909 275C                        l893 272E  
                      l995 2A70                        u220 290A                        u307 296A  
                      u317 299C                        u327 2710                        u337 271E  
                      u257 2858                        u347 2728                        u267 2938  
                      u357 273C                        u277 2776                        u367 274A  
                      u287 2784                        u377 2754                        u297 2794  
                      u387 2A90                LEER_LCD@aux 0501                        wreg 04E8  
             ?_CURSOR_HOME 0501             ??_ENVIA_NIBBLE 0501             ENVIA_CHAR@dato 0502  
                     l1205 29D0                       l1223 2A44                       l1217 2A2C  
                     l1227 2A58                       l1307 2640                       l1263 2900  
                     l1275 291C                       l1267 2906                       l1279 2924  
                     l1295 2A12                       l1287 29FA                       STR_1 2617  
                     STR_2 2609                       STR_3 2625                       _LATD 04C1  
                     _T2PR 0323                       _main 2634           __end_of_CCP1_ISR 28B8  
                     prodl 04F3                       start 0102              ?_CURSOR_ONOFF 0501  
             ___param_bank 0000            ??_ENVIA_LCD_CMD 0502           __end_of_LEER_LCD 2766  
           ?_splash_screen 0501             _GENERACARACTER 29C2                      ?_main 0501  
                    _ADPCH 03EC            __end_of___lbdiv 2928            __end_of___lbmod 2A1A  
                    _T1CLK 0321                      _T1CON 031E                      _T2CON 0324  
                    _PORTD 04D1                      _TRISD 04C9                      _horas 050D  
                    _reloj 2601                ?_POS_CURSOR 0504                      tablat 04F5  
                    status 04D8            ___lbdiv@divisor 0501            ___lbdiv@counter 0503  
           ??_CURSOR_ONOFF 0504            __initialization 28B8               __end_of_main 2704  
   __end_of_GENERACARACTER 29F2            _ESCRIBE_MENSAJE 2A3E                     ??_main 050A  
            __activetblptr 0001                     _ADRESH 03EB                     _CCPR1H 0341  
                   _CCPR2H 0345                     _CCPR1L 0340                     _CCPR2L 0344  
                   _ANSELD 0418                     _RF0PPS 0229                     i2l1191 28AC  
                   i2l1193 28B0                     i2l1195 28B4                     i2l1189 28A8  
                   _OSCFRQ 00B1           __end_of_lcd_init 295E            ??_splash_screen 0508  
                ??___lbdiv 0502       __end_of_ENVIA_NIBBLE 2A9A                  ??___lbmod 0502  
          ?_GENERACARACTER 0504                     isa$std 0001                  ?_CCP1_ISR 0501  
             __pdataCOMRAM 050C               __mediumconst 2600                     tblptrh 04F7  
                   tblptrl 04F6                     tblptru 04F8               ??_BORRAR_LCD 0504  
         ___lbdiv@dividend 0502            ___lbmod@divisor 0501                  ?_LEER_LCD 0501  
               __accesstop 0560    __end_of__initialization 28E2            ___lbmod@counter 0503  
             ??_LCD_CONFIG 0504              ___rparam_used 0001               ??_ENVIA_CHAR 0502  
  __end_of_ESCRIBE_MENSAJE 2A62             __pcstackCOMRAM 0501             ivt0x8_undefint 0100  
            __end_of_reloj 2609         __end_of_BORRAR_LCD 2AB8           ___lbdiv@quotient 0504  
               ??_CCP1_ISR 0501           ENVIA_LCD_CMD@aux 0503       __end_of_CURSOR_ONOFF 2A7E  
       __end_of_LCD_CONFIG 27C6         __end_of_ENVIA_CHAR 2990                 ??_LEER_LCD 0501  
         ENVIA_NIBBLE@dato 0501                    IVTBASEH 045E                    IVTBASEL 045D  
                  IVTBASEU 045F                 _centesimas 050A                    _CCP1CON 0342  
                  _CCP2CON 0346              ??_DEFAULT_ISR 0501                    _OSCCON1 00AD  
             ??_POS_CURSOR 0505                  ?_lcd_init 0501                    __Hparam 0000  
                  __Lparam 0000           ?_ESCRIBE_MENSAJE 0504          __end_of_configuro 2822  
                  ___lbdiv 28F0                    ___lbmod 29F2               __psmallconst 2600  
    __end_of_ENVIA_LCD_CMD 29C2                    __pcinit 28B8         __end_of_POS_CURSOR 2A3E  
                  __ramtop 2600                    __ptext0 2634                    __ptext1 2822  
                  __ptext2 2A1A                    __ptext3 2A3E                    __ptext4 2928  
                  __ptext5 2766                    __ptext6 29C2                    __ptext7 295E  
                  __ptext8 2A62                    __ptext9 2AA8            GENERACARACTER@i 0507  
                  _minutos 050C                 ??_lcd_init 0508               _ENVIA_NIBBLE 2A7E  
      __end_of_DEFAULT_ISR 2ABE       end_of_initialization 28E2           ??_GENERACARACTER 0506  
                _OSCENbits 00B3       GENERACARACTER@vector 0504           ___lbmod@dividend 0502  
                _TRISAbits 04C6                  _TRISFbits 04CB                ___lbmod@rem 0504  
             _CURSOR_ONOFF 2A62         CURSOR_ONOFF@estado 0504      __end_of_splash_screen 287C  
            __pidataCOMRAM 2AB8                _DEFAULT_ISR 2ABC              ??_CURSOR_HOME 0504  
      start_initialization 28B8                 ivt0x8_base 0008          ENVIA_LCD_CMD@dato 0502  
              __pbssCOMRAM 050A        __end_of_CURSOR_HOME 2AB0          _control_backlight 2A9A  
                 ?___lbdiv 0501                   ?___lbmod 0501         ?_control_backlight 0501  
        GENERACARACTER@pos 0505                  _configuro 27C6                __smallconst 2600  
      ??_control_backlight 0501                   _CCP1_ISR 287C                   _T2CLKCON 0326  
                 _LEER_LCD 2704                   _LATDbits 04C1  __end_of_control_backlight 2AA8  
                 _PIE3bits 04A1                   _PIR3bits 04B1           ESCRIBE_MENSAJE@i 0507  
           POS_CURSOR@fila 0505                 ?_configuro 0501                 _ADCON0bits 03F3  
              _CURSOR_HOME 2AA8                _INTCON0bits 04D6                   __Hrparam 0000  
                 __Lrparam 0000               __Lsmallconst 2600                 _ANSELAbits 0400  
               _ANSELFbits 0428               ?_DEFAULT_ISR 0501                   __pivt0x8 0008  
                 __ptext10 2AB0                   __ptext11 2990                   __ptext12 2704  
                 __ptext13 2A7E                   __ptext14 2A9A                   __ptext15 27C6  
                 __ptext16 29F2                   __ptext17 28F0                   __ptext18 287C  
                 __ptext19 2ABC                 _BORRAR_LCD 2AB0                   _lcd_init 2928  
               _LCD_CONFIG 2766                 _ENVIA_CHAR 295E                   _segundos 050B  
                 isa$xinst 0000              _ENVIA_LCD_CMD 2990                ??_configuro 0501  
        ??_ESCRIBE_MENSAJE 0506                   intlevel2 0000      ESCRIBE_MENSAJE@cadena 0504  
           ?_ENVIA_LCD_CMD 0501                ?_BORRAR_LCD 0501              ?_ENVIA_NIBBLE 0501  
               _POS_CURSOR 2A1A                ?_LCD_CONFIG 0501         ESCRIBE_MENSAJE@tam 0505  
              ?_ENVIA_CHAR 0501          POS_CURSOR@columna 0504  
