

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jun 12 19:23:22 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Generated 04/02/2025 GMT
    30                           ; 
    31                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F57Q43 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   0004E0                     bsr             equ	1248
    64   0004E9                     fsr0            equ	1257
    65   0004EA                     fsr0h           equ	1258
    66   0004E9                     fsr0l           equ	1257
    67   0004E1                     fsr1            equ	1249
    68   0004E2                     fsr1h           equ	1250
    69   0004E1                     fsr1l           equ	1249
    70   0004D9                     fsr2            equ	1241
    71   0004DA                     fsr2h           equ	1242
    72   0004D9                     fsr2l           equ	1241
    73   0004EF                     indf0           equ	1263
    74   0004E7                     indf1           equ	1255
    75   0004DF                     indf2           equ	1247
    76   0004D6                     intcon          equ	1238
    77   000041                     nvmcon          equ	65
    78   0004F9                     pcl             equ	1273
    79   0004FA                     pclath          equ	1274
    80   0004FB                     pclatu          equ	1275
    81   0004EB                     plusw0          equ	1259
    82   0004E3                     plusw1          equ	1251
    83   0004DB                     plusw2          equ	1243
    84   0004ED                     postdec0        equ	1261
    85   0004E5                     postdec1        equ	1253
    86   0004DD                     postdec2        equ	1245
    87   0004EE                     postinc0        equ	1262
    88   0004E6                     postinc1        equ	1254
    89   0004DE                     postinc2        equ	1246
    90   0004EC                     preinc0         equ	1260
    91   0004E4                     preinc1         equ	1252
    92   0004DC                     preinc2         equ	1244
    93   0004F3                     prod            equ	1267
    94   0004F4                     prodh           equ	1268
    95   0004F3                     prodl           equ	1267
    96   0004D8                     status          equ	1240
    97   0004F5                     tablat          equ	1269
    98   0004F6                     tblptr          equ	1270
    99   0004F7                     tblptrh         equ	1271
   100   0004F6                     tblptrl         equ	1270
   101   0004F8                     tblptru         equ	1272
   102   0004FD                     tosl            equ	1277
   103   0004E8                     wreg            equ	1256
   104   000039                     CLKRCON         equ	57	;# 
   105   00003A                     CLKRCLK         equ	58	;# 
   106   000040                     NVMCON0         equ	64	;# 
   107   000041                     NVMCON1         equ	65	;# 
   108   000042                     NVMLOCK         equ	66	;# 
   109   000043                     NVMADR          equ	67	;# 
   110   000043                     NVMADRL         equ	67	;# 
   111   000044                     NVMADRH         equ	68	;# 
   112   000045                     NVMADRU         equ	69	;# 
   113   000046                     NVMDAT          equ	70	;# 
   114   000046                     NVMDATL         equ	70	;# 
   115   000047                     NVMDATH         equ	71	;# 
   116   000048                     VREGCON         equ	72	;# 
   117   000049                     BORCON          equ	73	;# 
   118   00004A                     HLVDCON0        equ	74	;# 
   119   00004B                     HLVDCON1        equ	75	;# 
   120   00004C                     ZCDCON          equ	76	;# 
   121   000060                     PMD0            equ	96	;# 
   122   000061                     PMD1            equ	97	;# 
   123   000063                     PMD3            equ	99	;# 
   124   000064                     PMD4            equ	100	;# 
   125   000065                     PMD5            equ	101	;# 
   126   000066                     PMD6            equ	102	;# 
   127   000067                     PMD7            equ	103	;# 
   128   000068                     PMD8            equ	104	;# 
   129   00006A                     MD1CON0         equ	106	;# 
   130   00006B                     MD1CON1         equ	107	;# 
   131   00006C                     MD1SRC          equ	108	;# 
   132   00006D                     MD1CARL         equ	109	;# 
   133   00006E                     MD1CARH         equ	110	;# 
   134   00006F                     CMOUT           equ	111	;# 
   135   000070                     CM1CON0         equ	112	;# 
   136   000071                     CM1CON1         equ	113	;# 
   137   000072                     CM1NCH          equ	114	;# 
   138   000073                     CM1PCH          equ	115	;# 
   139   000074                     CM2CON0         equ	116	;# 
   140   000075                     CM2CON1         equ	117	;# 
   141   000076                     CM2NCH          equ	118	;# 
   142   000077                     CM2PCH          equ	119	;# 
   143   000078                     WDTCON0         equ	120	;# 
   144   000079                     WDTCON1         equ	121	;# 
   145   00007A                     WDTPS           equ	122	;# 
   146   00007A                     WDTPSL          equ	122	;# 
   147   00007B                     WDTPSH          equ	123	;# 
   148   00007C                     WDTTMR          equ	124	;# 
   149   00007D                     DAC1DAT         equ	125	;# 
   150   00007D                     DAC1DATL        equ	125	;# 
   151   00007F                     DAC1CON         equ	127	;# 
   152   000080                     SPI1RXB         equ	128	;# 
   153   000081                     SPI1TXB         equ	129	;# 
   154   000082                     SPI1TCNT        equ	130	;# 
   155   000082                     SPI1TCNTL       equ	130	;# 
   156   000083                     SPI1TCNTH       equ	131	;# 
   157   000084                     SPI1CON0        equ	132	;# 
   158   000085                     SPI1CON1        equ	133	;# 
   159   000086                     SPI1CON2        equ	134	;# 
   160   000087                     SPI1STATUS      equ	135	;# 
   161   000088                     SPI1TWIDTH      equ	136	;# 
   162   000089                     SPI1BAUD        equ	137	;# 
   163   00008A                     SPI1INTF        equ	138	;# 
   164   00008B                     SPI1INTE        equ	139	;# 
   165   00008C                     SPI1CLK         equ	140	;# 
   166   00008D                     SPI2RXB         equ	141	;# 
   167   00008E                     SPI2TXB         equ	142	;# 
   168   00008F                     SPI2TCNT        equ	143	;# 
   169   00008F                     SPI2TCNTL       equ	143	;# 
   170   000090                     SPI2TCNTH       equ	144	;# 
   171   000091                     SPI2CON0        equ	145	;# 
   172   000092                     SPI2CON1        equ	146	;# 
   173   000093                     SPI2CON2        equ	147	;# 
   174   000094                     SPI2STATUS      equ	148	;# 
   175   000095                     SPI2TWIDTH      equ	149	;# 
   176   000096                     SPI2BAUD        equ	150	;# 
   177   000097                     SPI2INTF        equ	151	;# 
   178   000098                     SPI2INTE        equ	152	;# 
   179   000099                     SPI2CLK         equ	153	;# 
   180   0000AC                     ACTCON          equ	172	;# 
   181   0000AD                     OSCCON1         equ	173	;# 
   182   0000AE                     OSCCON2         equ	174	;# 
   183   0000AF                     OSCCON3         equ	175	;# 
   184   0000B0                     OSCTUNE         equ	176	;# 
   185   0000B1                     OSCFRQ          equ	177	;# 
   186   0000B1                     OSCFREQ         equ	177	;# 
   187   0000B2                     OSCSTAT         equ	178	;# 
   188   0000B2                     OSCSTAT1        equ	178	;# 
   189   0000B3                     OSCEN           equ	179	;# 
   190   0000B4                     PRLOCK          equ	180	;# 
   191   0000B5                     SCANPR          equ	181	;# 
   192   0000B6                     DMA1PR          equ	182	;# 
   193   0000B7                     DMA2PR          equ	183	;# 
   194   0000B8                     DMA3PR          equ	184	;# 
   195   0000B9                     DMA4PR          equ	185	;# 
   196   0000BA                     DMA5PR          equ	186	;# 
   197   0000BB                     DMA6PR          equ	187	;# 
   198   0000BE                     MAINPR          equ	190	;# 
   199   0000BF                     ISRPR           equ	191	;# 
   200   0000D4                     CLCDATA         equ	212	;# 
   201   0000D5                     CLCSELECT       equ	213	;# 
   202   0000D6                     CLCnCON         equ	214	;# 
   203   0000D7                     CLCnPOL         equ	215	;# 
   204   0000D8                     CLCnSEL0        equ	216	;# 
   205   0000D9                     CLCnSEL1        equ	217	;# 
   206   0000DA                     CLCnSEL2        equ	218	;# 
   207   0000DB                     CLCnSEL3        equ	219	;# 
   208   0000DC                     CLCnGLS0        equ	220	;# 
   209   0000DD                     CLCnGLS1        equ	221	;# 
   210   0000DE                     CLCnGLS2        equ	222	;# 
   211   0000DF                     CLCnGLS3        equ	223	;# 
   212   0000E8                     DMASELECT       equ	232	;# 
   213   0000E9                     DMAnBUF         equ	233	;# 
   214   0000EA                     DMAnDCNT        equ	234	;# 
   215   0000EA                     DMAnDCNTL       equ	234	;# 
   216   0000EB                     DMAnDCNTH       equ	235	;# 
   217   0000EC                     DMAnDPTR        equ	236	;# 
   218   0000EC                     DMAnDPTRL       equ	236	;# 
   219   0000ED                     DMAnDPTRH       equ	237	;# 
   220   0000EE                     DMAnDSZ         equ	238	;# 
   221   0000EE                     DMAnDSZL        equ	238	;# 
   222   0000EF                     DMAnDSZH        equ	239	;# 
   223   0000F0                     DMAnDSA         equ	240	;# 
   224   0000F0                     DMAnDSAL        equ	240	;# 
   225   0000F1                     DMAnDSAH        equ	241	;# 
   226   0000F2                     DMAnSCNT        equ	242	;# 
   227   0000F2                     DMAnSCNTL       equ	242	;# 
   228   0000F3                     DMAnSCNTH       equ	243	;# 
   229   0000F4                     DMAnSPTR        equ	244	;# 
   230   0000F4                     DMAnSPTRL       equ	244	;# 
   231   0000F5                     DMAnSPTRH       equ	245	;# 
   232   0000F6                     DMAnSPTRU       equ	246	;# 
   233   0000F7                     DMAnSSZ         equ	247	;# 
   234   0000F7                     DMAnSSZL        equ	247	;# 
   235   0000F8                     DMAnSSZH        equ	248	;# 
   236   0000F9                     DMAnSSA         equ	249	;# 
   237   0000F9                     DMAnSSAL        equ	249	;# 
   238   0000FA                     DMAnSSAH        equ	250	;# 
   239   0000FB                     DMAnSSAU        equ	251	;# 
   240   0000FC                     DMAnCON0        equ	252	;# 
   241   0000FD                     DMAnCON1        equ	253	;# 
   242   0000FE                     DMAnAIRQ        equ	254	;# 
   243   0000FF                     DMAnSIRQ        equ	255	;# 
   244   000200                     PPSLOCK         equ	512	;# 
   245   000201                     RA0PPS          equ	513	;# 
   246   000202                     RA1PPS          equ	514	;# 
   247   000203                     RA2PPS          equ	515	;# 
   248   000204                     RA3PPS          equ	516	;# 
   249   000205                     RA4PPS          equ	517	;# 
   250   000206                     RA5PPS          equ	518	;# 
   251   000207                     RA6PPS          equ	519	;# 
   252   000208                     RA7PPS          equ	520	;# 
   253   000209                     RB0PPS          equ	521	;# 
   254   00020A                     RB1PPS          equ	522	;# 
   255   00020B                     RB2PPS          equ	523	;# 
   256   00020C                     RB3PPS          equ	524	;# 
   257   00020D                     RB4PPS          equ	525	;# 
   258   00020E                     RB5PPS          equ	526	;# 
   259   00020F                     RB6PPS          equ	527	;# 
   260   000210                     RB7PPS          equ	528	;# 
   261   000211                     RC0PPS          equ	529	;# 
   262   000212                     RC1PPS          equ	530	;# 
   263   000213                     RC2PPS          equ	531	;# 
   264   000214                     RC3PPS          equ	532	;# 
   265   000215                     RC4PPS          equ	533	;# 
   266   000216                     RC5PPS          equ	534	;# 
   267   000217                     RC6PPS          equ	535	;# 
   268   000218                     RC7PPS          equ	536	;# 
   269   000219                     RD0PPS          equ	537	;# 
   270   00021A                     RD1PPS          equ	538	;# 
   271   00021B                     RD2PPS          equ	539	;# 
   272   00021C                     RD3PPS          equ	540	;# 
   273   00021D                     RD4PPS          equ	541	;# 
   274   00021E                     RD5PPS          equ	542	;# 
   275   00021F                     RD6PPS          equ	543	;# 
   276   000220                     RD7PPS          equ	544	;# 
   277   000221                     RE0PPS          equ	545	;# 
   278   000222                     RE1PPS          equ	546	;# 
   279   000223                     RE2PPS          equ	547	;# 
   280   000229                     RF0PPS          equ	553	;# 
   281   00022A                     RF1PPS          equ	554	;# 
   282   00022B                     RF2PPS          equ	555	;# 
   283   00022C                     RF3PPS          equ	556	;# 
   284   00022D                     RF4PPS          equ	557	;# 
   285   00022E                     RF5PPS          equ	558	;# 
   286   00022F                     RF6PPS          equ	559	;# 
   287   000230                     RF7PPS          equ	560	;# 
   288   00023E                     INT0PPS         equ	574	;# 
   289   00023F                     INT1PPS         equ	575	;# 
   290   000240                     INT2PPS         equ	576	;# 
   291   000241                     T0CKIPPS        equ	577	;# 
   292   000242                     T1CKIPPS        equ	578	;# 
   293   000243                     T1GPPS          equ	579	;# 
   294   000244                     T3CKIPPS        equ	580	;# 
   295   000245                     T3GPPS          equ	581	;# 
   296   000246                     T5CKIPPS        equ	582	;# 
   297   000247                     T5GPPS          equ	583	;# 
   298   000248                     T2INPPS         equ	584	;# 
   299   000249                     T4INPPS         equ	585	;# 
   300   00024A                     T6INPPS         equ	586	;# 
   301   00024F                     CCP1PPS         equ	591	;# 
   302   000250                     CCP2PPS         equ	592	;# 
   303   000251                     CCP3PPS         equ	593	;# 
   304   000253                     PWM1ERSPPS      equ	595	;# 
   305   000254                     PWM2ERSPPS      equ	596	;# 
   306   000255                     PWM3ERSPPS      equ	597	;# 
   307   000257                     PWMIN0PPS       equ	599	;# 
   308   000258                     PWMIN1PPS       equ	600	;# 
   309   000259                     SMT1WINPPS      equ	601	;# 
   310   00025A                     SMT1SIGPPS      equ	602	;# 
   311   00025B                     CWG1PPS         equ	603	;# 
   312   00025B                     CWG1INPPS       equ	603	;# 
   313   00025C                     CWG2PPS         equ	604	;# 
   314   00025C                     CWG2INPPS       equ	604	;# 
   315   00025D                     CWG3PPS         equ	605	;# 
   316   00025D                     CWG3INPPS       equ	605	;# 
   317   00025E                     MD1CARLPPS      equ	606	;# 
   318   00025E                     MDCARLPPS       equ	606	;# 
   319   00025F                     MD1CARHPPS      equ	607	;# 
   320   00025F                     MDCARHPPS       equ	607	;# 
   321   000260                     MD1SRCPPS       equ	608	;# 
   322   000260                     MDSRCPPS        equ	608	;# 
   323   000261                     CLCIN0PPS       equ	609	;# 
   324   000262                     CLCIN1PPS       equ	610	;# 
   325   000263                     CLCIN2PPS       equ	611	;# 
   326   000264                     CLCIN3PPS       equ	612	;# 
   327   000265                     CLCIN4PPS       equ	613	;# 
   328   000266                     CLCIN5PPS       equ	614	;# 
   329   000267                     CLCIN6PPS       equ	615	;# 
   330   000268                     CLCIN7PPS       equ	616	;# 
   331   000269                     ADACTPPS        equ	617	;# 
   332   00026A                     SPI1SCKPPS      equ	618	;# 
   333   00026B                     SPI1SDIPPS      equ	619	;# 
   334   00026C                     SPI1SSPPS       equ	620	;# 
   335   00026D                     SPI2SCKPPS      equ	621	;# 
   336   00026E                     SPI2SDIPPS      equ	622	;# 
   337   00026F                     SPI2SSPPS       equ	623	;# 
   338   000270                     I2C1SDAPPS      equ	624	;# 
   339   000271                     I2C1SCLPPS      equ	625	;# 
   340   000272                     U1RXPPS         equ	626	;# 
   341   000273                     U1CTSPPS        equ	627	;# 
   342   000274                     U2RXPPS         equ	628	;# 
   343   000275                     U2CTSPPS        equ	629	;# 
   344   000276                     U3RXPPS         equ	630	;# 
   345   000277                     U3CTSPPS        equ	631	;# 
   346   000278                     U4RXPPS         equ	632	;# 
   347   000279                     U4CTSPPS        equ	633	;# 
   348   00027A                     U5RXPPS         equ	634	;# 
   349   00027B                     U5CTSPPS        equ	635	;# 
   350   000286                     RC4I2C          equ	646	;# 
   351   000287                     RC3I2C          equ	647	;# 
   352   000288                     RB2I2C          equ	648	;# 
   353   000289                     RB1I2C          equ	649	;# 
   354   00028B                     I2C1RXB         equ	651	;# 
   355   00028C                     I2C1TXB         equ	652	;# 
   356   00028D                     I2C1CNT         equ	653	;# 
   357   00028E                     I2C1ADB0        equ	654	;# 
   358   00028F                     I2C1ADB1        equ	655	;# 
   359   000290                     I2C1ADR0        equ	656	;# 
   360   000291                     I2C1ADR1        equ	657	;# 
   361   000292                     I2C1ADR2        equ	658	;# 
   362   000293                     I2C1ADR3        equ	659	;# 
   363   000294                     I2C1CON0        equ	660	;# 
   364   000295                     I2C1CON1        equ	661	;# 
   365   000296                     I2C1CON2        equ	662	;# 
   366   000297                     I2C1ERR         equ	663	;# 
   367   000298                     I2C1STAT0       equ	664	;# 
   368   000299                     I2C1STAT1       equ	665	;# 
   369   00029A                     I2C1PIR         equ	666	;# 
   370   00029B                     I2C1PIE         equ	667	;# 
   371   00029C                     I2C1CLK         equ	668	;# 
   372   00029D                     I2C1BTO         equ	669	;# 
   373   0002A1                     U1RXB           equ	673	;# 
   374   0002A1                     U1RXBL          equ	673	;# 
   375   0002A2                     U1RXCHK         equ	674	;# 
   376   0002A3                     U1TXB           equ	675	;# 
   377   0002A3                     U1TXBL          equ	675	;# 
   378   0002A4                     U1TXCHK         equ	676	;# 
   379   0002A5                     U1P1            equ	677	;# 
   380   0002A5                     U1P1L           equ	677	;# 
   381   0002A6                     U1P1H           equ	678	;# 
   382   0002A7                     U1P2            equ	679	;# 
   383   0002A7                     U1P2L           equ	679	;# 
   384   0002A8                     U1P2H           equ	680	;# 
   385   0002A9                     U1P3            equ	681	;# 
   386   0002A9                     U1P3L           equ	681	;# 
   387   0002AA                     U1P3H           equ	682	;# 
   388   0002AB                     U1CON0          equ	683	;# 
   389   0002AC                     U1CON1          equ	684	;# 
   390   0002AD                     U1CON2          equ	685	;# 
   391   0002AE                     U1BRG           equ	686	;# 
   392   0002AE                     U1BRGL          equ	686	;# 
   393   0002AF                     U1BRGH          equ	687	;# 
   394   0002B0                     U1FIFO          equ	688	;# 
   395   0002B1                     U1UIR           equ	689	;# 
   396   0002B2                     U1ERRIR         equ	690	;# 
   397   0002B3                     U1ERRIE         equ	691	;# 
   398   0002B4                     U2RXB           equ	692	;# 
   399   0002B4                     U2RXBL          equ	692	;# 
   400   0002B6                     U2TXB           equ	694	;# 
   401   0002B6                     U2TXBL          equ	694	;# 
   402   0002B8                     U2P1            equ	696	;# 
   403   0002B8                     U2P1L           equ	696	;# 
   404   0002BA                     U2P2            equ	698	;# 
   405   0002BA                     U2P2L           equ	698	;# 
   406   0002BC                     U2P3            equ	700	;# 
   407   0002BC                     U2P3L           equ	700	;# 
   408   0002BE                     U2CON0          equ	702	;# 
   409   0002BF                     U2CON1          equ	703	;# 
   410   0002C0                     U2CON2          equ	704	;# 
   411   0002C1                     U2BRG           equ	705	;# 
   412   0002C1                     U2BRGL          equ	705	;# 
   413   0002C2                     U2BRGH          equ	706	;# 
   414   0002C3                     U2FIFO          equ	707	;# 
   415   0002C4                     U2UIR           equ	708	;# 
   416   0002C5                     U2ERRIR         equ	709	;# 
   417   0002C6                     U2ERRIE         equ	710	;# 
   418   0002C7                     U3RXB           equ	711	;# 
   419   0002C7                     U3RXBL          equ	711	;# 
   420   0002C9                     U3TXB           equ	713	;# 
   421   0002C9                     U3TXBL          equ	713	;# 
   422   0002CB                     U3P1            equ	715	;# 
   423   0002CB                     U3P1L           equ	715	;# 
   424   0002CD                     U3P2            equ	717	;# 
   425   0002CD                     U3P2L           equ	717	;# 
   426   0002CF                     U3P3            equ	719	;# 
   427   0002CF                     U3P3L           equ	719	;# 
   428   0002D1                     U3CON0          equ	721	;# 
   429   0002D2                     U3CON1          equ	722	;# 
   430   0002D3                     U3CON2          equ	723	;# 
   431   0002D4                     U3BRG           equ	724	;# 
   432   0002D4                     U3BRGL          equ	724	;# 
   433   0002D5                     U3BRGH          equ	725	;# 
   434   0002D6                     U3FIFO          equ	726	;# 
   435   0002D7                     U3UIR           equ	727	;# 
   436   0002D8                     U3ERRIR         equ	728	;# 
   437   0002D9                     U3ERRIE         equ	729	;# 
   438   0002DA                     U4RXB           equ	730	;# 
   439   0002DA                     U4RXBL          equ	730	;# 
   440   0002DC                     U4TXB           equ	732	;# 
   441   0002DC                     U4TXBL          equ	732	;# 
   442   0002DE                     U4P1            equ	734	;# 
   443   0002DE                     U4P1L           equ	734	;# 
   444   0002E0                     U4P2            equ	736	;# 
   445   0002E0                     U4P2L           equ	736	;# 
   446   0002E2                     U4P3            equ	738	;# 
   447   0002E2                     U4P3L           equ	738	;# 
   448   0002E4                     U4CON0          equ	740	;# 
   449   0002E5                     U4CON1          equ	741	;# 
   450   0002E6                     U4CON2          equ	742	;# 
   451   0002E7                     U4BRG           equ	743	;# 
   452   0002E7                     U4BRGL          equ	743	;# 
   453   0002E8                     U4BRGH          equ	744	;# 
   454   0002E9                     U4FIFO          equ	745	;# 
   455   0002EA                     U4UIR           equ	746	;# 
   456   0002EB                     U4ERRIR         equ	747	;# 
   457   0002EC                     U4ERRIE         equ	748	;# 
   458   0002ED                     U5RXB           equ	749	;# 
   459   0002ED                     U5RXBL          equ	749	;# 
   460   0002EF                     U5TXB           equ	751	;# 
   461   0002EF                     U5TXBL          equ	751	;# 
   462   0002F1                     U5P1            equ	753	;# 
   463   0002F1                     U5P1L           equ	753	;# 
   464   0002F3                     U5P2            equ	755	;# 
   465   0002F3                     U5P2L           equ	755	;# 
   466   0002F5                     U5P3            equ	757	;# 
   467   0002F5                     U5P3L           equ	757	;# 
   468   0002F7                     U5CON0          equ	759	;# 
   469   0002F8                     U5CON1          equ	760	;# 
   470   0002F9                     U5CON2          equ	761	;# 
   471   0002FA                     U5BRG           equ	762	;# 
   472   0002FA                     U5BRGL          equ	762	;# 
   473   0002FB                     U5BRGH          equ	763	;# 
   474   0002FC                     U5FIFO          equ	764	;# 
   475   0002FD                     U5UIR           equ	765	;# 
   476   0002FE                     U5ERRIR         equ	766	;# 
   477   0002FF                     U5ERRIE         equ	767	;# 
   478   000300                     SMT1TMR         equ	768	;# 
   479   000300                     SMT1TMRL        equ	768	;# 
   480   000301                     SMT1TMRH        equ	769	;# 
   481   000302                     SMT1TMRU        equ	770	;# 
   482   000303                     SMT1CPR         equ	771	;# 
   483   000303                     SMT1CPRL        equ	771	;# 
   484   000304                     SMT1CPRH        equ	772	;# 
   485   000305                     SMT1CPRU        equ	773	;# 
   486   000306                     SMT1CPW         equ	774	;# 
   487   000306                     SMT1CPWL        equ	774	;# 
   488   000307                     SMT1CPWH        equ	775	;# 
   489   000308                     SMT1CPWU        equ	776	;# 
   490   000309                     SMT1PR          equ	777	;# 
   491   000309                     SMT1PRL         equ	777	;# 
   492   00030A                     SMT1PRH         equ	778	;# 
   493   00030B                     SMT1PRU         equ	779	;# 
   494   00030C                     SMT1CON0        equ	780	;# 
   495   00030D                     SMT1CON1        equ	781	;# 
   496   00030E                     SMT1STAT        equ	782	;# 
   497   00030F                     SMT1CLK         equ	783	;# 
   498   000310                     SMT1SIG         equ	784	;# 
   499   000311                     SMT1WIN         equ	785	;# 
   500   000318                     TMR0L           equ	792	;# 
   501   000318                     TMR0            equ	792	;# 
   502   000319                     TMR0H           equ	793	;# 
   503   000319                     PR0             equ	793	;# 
   504   00031A                     T0CON0          equ	794	;# 
   505   00031B                     T0CON1          equ	795	;# 
   506   00031C                     TMR1            equ	796	;# 
   507   00031C                     TMR1L           equ	796	;# 
   508   00031D                     TMR1H           equ	797	;# 
   509   00031E                     T1CON           equ	798	;# 
   510   00031E                     TMR1CON         equ	798	;# 
   511   00031F                     T1GCON          equ	799	;# 
   512   00031F                     TMR1GCON        equ	799	;# 
   513   000320                     T1GATE          equ	800	;# 
   514   000320                     TMR1GATE        equ	800	;# 
   515   000321                     T1CLK           equ	801	;# 
   516   000321                     TMR1CLK         equ	801	;# 
   517   000321                     PR1             equ	801	;# 
   518   000322                     T2TMR           equ	802	;# 
   519   000322                     TMR2            equ	802	;# 
   520   000323                     T2PR            equ	803	;# 
   521   000323                     PR2             equ	803	;# 
   522   000324                     T2CON           equ	804	;# 
   523   000325                     T2HLT           equ	805	;# 
   524   000326                     T2CLKCON        equ	806	;# 
   525   000326                     T2CLK           equ	806	;# 
   526   000327                     T2RST           equ	807	;# 
   527   000328                     TMR3            equ	808	;# 
   528   000328                     TMR3L           equ	808	;# 
   529   000329                     TMR3H           equ	809	;# 
   530   00032A                     T3CON           equ	810	;# 
   531   00032A                     TMR3CON         equ	810	;# 
   532   00032B                     T3GCON          equ	811	;# 
   533   00032B                     TMR3GCON        equ	811	;# 
   534   00032C                     T3GATE          equ	812	;# 
   535   00032C                     TMR3GATE        equ	812	;# 
   536   00032D                     T3CLK           equ	813	;# 
   537   00032D                     TMR3CLK         equ	813	;# 
   538   00032D                     PR3             equ	813	;# 
   539   00032E                     T4TMR           equ	814	;# 
   540   00032E                     TMR4            equ	814	;# 
   541   00032F                     T4PR            equ	815	;# 
   542   00032F                     PR4             equ	815	;# 
   543   000330                     T4CON           equ	816	;# 
   544   000331                     T4HLT           equ	817	;# 
   545   000332                     T4CLKCON        equ	818	;# 
   546   000332                     T4CLK           equ	818	;# 
   547   000333                     T4RST           equ	819	;# 
   548   000334                     TMR5            equ	820	;# 
   549   000334                     TMR5L           equ	820	;# 
   550   000335                     TMR5H           equ	821	;# 
   551   000336                     T5CON           equ	822	;# 
   552   000336                     TMR5CON         equ	822	;# 
   553   000337                     T5GCON          equ	823	;# 
   554   000337                     TMR5GCON        equ	823	;# 
   555   000338                     T5GATE          equ	824	;# 
   556   000338                     TMR5GATE        equ	824	;# 
   557   000339                     T5CLK           equ	825	;# 
   558   000339                     TMR5CLK         equ	825	;# 
   559   000339                     PR5             equ	825	;# 
   560   00033A                     T6TMR           equ	826	;# 
   561   00033A                     TMR6            equ	826	;# 
   562   00033B                     T6PR            equ	827	;# 
   563   00033B                     PR6             equ	827	;# 
   564   00033C                     T6CON           equ	828	;# 
   565   00033D                     T6HLT           equ	829	;# 
   566   00033E                     T6CLKCON        equ	830	;# 
   567   00033E                     T6CLK           equ	830	;# 
   568   00033F                     T6RST           equ	831	;# 
   569   000340                     CCPR1           equ	832	;# 
   570   000340                     CCPR1L          equ	832	;# 
   571   000341                     CCPR1H          equ	833	;# 
   572   000342                     CCP1CON         equ	834	;# 
   573   000343                     CCP1CAP         equ	835	;# 
   574   000344                     CCPR2           equ	836	;# 
   575   000344                     CCPR2L          equ	836	;# 
   576   000345                     CCPR2H          equ	837	;# 
   577   000346                     CCP2CON         equ	838	;# 
   578   000347                     CCP2CAP         equ	839	;# 
   579   000348                     CCPR3           equ	840	;# 
   580   000348                     CCPR3L          equ	840	;# 
   581   000349                     CCPR3H          equ	841	;# 
   582   00034A                     CCP3CON         equ	842	;# 
   583   00034B                     CCP3CAP         equ	843	;# 
   584   00034C                     CCPTMRS0        equ	844	;# 
   585   00034F                     CRCDATA         equ	847	;# 
   586   00034F                     CRCDATL         equ	847	;# 
   587   000350                     CRCDATH         equ	848	;# 
   588   000351                     CRCACC          equ	849	;# 
   589   000351                     CRCACCL         equ	849	;# 
   590   000352                     CRCACCH         equ	850	;# 
   591   000353                     CRCSHFT         equ	851	;# 
   592   000353                     CRCSHIFTL       equ	851	;# 
   593   000354                     CRCSHIFTH       equ	852	;# 
   594   000355                     CRCXOR          equ	853	;# 
   595   000355                     CRCXORL         equ	853	;# 
   596   000356                     CRCXORH         equ	854	;# 
   597   000357                     CRCCON0         equ	855	;# 
   598   000358                     CRCCON1         equ	856	;# 
   599   00035A                     SCANLADR        equ	858	;# 
   600   00035A                     SCANLADRL       equ	858	;# 
   601   00035B                     SCANLADRH       equ	859	;# 
   602   00035C                     SCANLADRU       equ	860	;# 
   603   00035D                     SCANHADR        equ	861	;# 
   604   00035D                     SCANHADRL       equ	861	;# 
   605   00035E                     SCANHADRH       equ	862	;# 
   606   00035F                     SCANHADRU       equ	863	;# 
   607   000360                     SCANCON0        equ	864	;# 
   608   000361                     SCANTRIG        equ	865	;# 
   609   000362                     IPR0            equ	866	;# 
   610   000363                     IPR1            equ	867	;# 
   611   000364                     IPR2            equ	868	;# 
   612   000365                     IPR3            equ	869	;# 
   613   000366                     IPR4            equ	870	;# 
   614   000367                     IPR5            equ	871	;# 
   615   000368                     IPR6            equ	872	;# 
   616   000369                     IPR7            equ	873	;# 
   617   00036A                     IPR8            equ	874	;# 
   618   00036B                     IPR9            equ	875	;# 
   619   00036C                     IPR10           equ	876	;# 
   620   00036D                     IPR11           equ	877	;# 
   621   00036E                     IPR12           equ	878	;# 
   622   00036F                     IPR13           equ	879	;# 
   623   000370                     IPR14           equ	880	;# 
   624   000371                     IPR15           equ	881	;# 
   625   000373                     STATUS_CSHAD    equ	883	;# 
   626   000374                     WREG_CSHAD      equ	884	;# 
   627   000375                     BSR_CSHAD       equ	885	;# 
   628   000376                     SHADCON         equ	886	;# 
   629   000377                     STATUS_SHAD     equ	887	;# 
   630   000378                     WREG_SHAD       equ	888	;# 
   631   000379                     BSR_SHAD        equ	889	;# 
   632   00037A                     PCLATH_SHAD     equ	890	;# 
   633   00037B                     PCLATU_SHAD     equ	891	;# 
   634   00037C                     FSR0SH          equ	892	;# 
   635   00037C                     FSR0L_SHAD      equ	892	;# 
   636   00037D                     FSR0H_SHAD      equ	893	;# 
   637   00037E                     FSR1SH          equ	894	;# 
   638   00037E                     FSR1L_SHAD      equ	894	;# 
   639   00037F                     FSR1H_SHAD      equ	895	;# 
   640   000380                     FSR2SH          equ	896	;# 
   641   000380                     FSR2L_SHAD      equ	896	;# 
   642   000381                     FSR2H_SHAD      equ	897	;# 
   643   000382                     PRODSH          equ	898	;# 
   644   000382                     PRODL_SHAD      equ	898	;# 
   645   000383                     PRODH_SHAD      equ	899	;# 
   646   0003BC                     CWG1CLK         equ	956	;# 
   647   0003BC                     CWG1CLKCON      equ	956	;# 
   648   0003BD                     CWG1ISM         equ	957	;# 
   649   0003BD                     CWG1DAT         equ	957	;# 
   650   0003BE                     CWG1DBR         equ	958	;# 
   651   0003BF                     CWG1DBF         equ	959	;# 
   652   0003C0                     CWG1CON0        equ	960	;# 
   653   0003C1                     CWG1CON1        equ	961	;# 
   654   0003C2                     CWG1AS0         equ	962	;# 
   655   0003C3                     CWG1AS1         equ	963	;# 
   656   0003C4                     CWG1STR         equ	964	;# 
   657   0003C5                     CWG2CLK         equ	965	;# 
   658   0003C5                     CWG2CLKCON      equ	965	;# 
   659   0003C6                     CWG2ISM         equ	966	;# 
   660   0003C6                     CWG2DAT         equ	966	;# 
   661   0003C7                     CWG2DBR         equ	967	;# 
   662   0003C8                     CWG2DBF         equ	968	;# 
   663   0003C9                     CWG2CON0        equ	969	;# 
   664   0003CA                     CWG2CON1        equ	970	;# 
   665   0003CB                     CWG2AS0         equ	971	;# 
   666   0003CC                     CWG2AS1         equ	972	;# 
   667   0003CD                     CWG2STR         equ	973	;# 
   668   0003CE                     CWG3CLK         equ	974	;# 
   669   0003CE                     CWG3CLKCON      equ	974	;# 
   670   0003CF                     CWG3ISM         equ	975	;# 
   671   0003CF                     CWG3DAT         equ	975	;# 
   672   0003D0                     CWG3DBR         equ	976	;# 
   673   0003D1                     CWG3DBF         equ	977	;# 
   674   0003D2                     CWG3CON0        equ	978	;# 
   675   0003D3                     CWG3CON1        equ	979	;# 
   676   0003D4                     CWG3AS0         equ	980	;# 
   677   0003D5                     CWG3AS1         equ	981	;# 
   678   0003D6                     CWG3STR         equ	982	;# 
   679   0003D7                     FVRCON          equ	983	;# 
   680   0003D8                     ADCPCON         equ	984	;# 
   681   0003D8                     ADCP            equ	984	;# 
   682   0003D9                     ADLTH           equ	985	;# 
   683   0003D9                     ADLTHL          equ	985	;# 
   684   0003DA                     ADLTHH          equ	986	;# 
   685   0003DB                     ADUTH           equ	987	;# 
   686   0003DB                     ADUTHL          equ	987	;# 
   687   0003DC                     ADUTHH          equ	988	;# 
   688   0003DD                     ADERR           equ	989	;# 
   689   0003DD                     ADERRL          equ	989	;# 
   690   0003DE                     ADERRH          equ	990	;# 
   691   0003DF                     ADSTPT          equ	991	;# 
   692   0003DF                     ADSTPTL         equ	991	;# 
   693   0003E0                     ADSTPTH         equ	992	;# 
   694   0003E1                     ADFLTR          equ	993	;# 
   695   0003E1                     ADFLTRL         equ	993	;# 
   696   0003E2                     ADFLTRH         equ	994	;# 
   697   0003E3                     ADACC           equ	995	;# 
   698   0003E3                     ADACCL          equ	995	;# 
   699   0003E4                     ADACCH          equ	996	;# 
   700   0003E5                     ADACCU          equ	997	;# 
   701   0003E6                     ADCNT           equ	998	;# 
   702   0003E7                     ADRPT           equ	999	;# 
   703   0003E8                     ADPREV          equ	1000	;# 
   704   0003E8                     ADPREVL         equ	1000	;# 
   705   0003E9                     ADPREVH         equ	1001	;# 
   706   0003EA                     ADRES           equ	1002	;# 
   707   0003EA                     ADRESL          equ	1002	;# 
   708   0003EB                     ADRESH          equ	1003	;# 
   709   0003EC                     ADPCH           equ	1004	;# 
   710   0003EE                     ADACQ           equ	1006	;# 
   711   0003EE                     ADACQL          equ	1006	;# 
   712   0003EF                     ADACQH          equ	1007	;# 
   713   0003F0                     ADCAP           equ	1008	;# 
   714   0003F1                     ADPRE           equ	1009	;# 
   715   0003F1                     ADPREL          equ	1009	;# 
   716   0003F2                     ADPREH          equ	1010	;# 
   717   0003F3                     ADCON0          equ	1011	;# 
   718   0003F4                     ADCON1          equ	1012	;# 
   719   0003F5                     ADCON2          equ	1013	;# 
   720   0003F6                     ADCON3          equ	1014	;# 
   721   0003F7                     ADSTAT          equ	1015	;# 
   722   0003F8                     ADREF           equ	1016	;# 
   723   0003F9                     ADACT           equ	1017	;# 
   724   0003FA                     ADCLK           equ	1018	;# 
   725   000400                     ANSELA          equ	1024	;# 
   726   000401                     WPUA            equ	1025	;# 
   727   000402                     ODCONA          equ	1026	;# 
   728   000403                     SLRCONA         equ	1027	;# 
   729   000404                     INLVLA          equ	1028	;# 
   730   000405                     IOCAP           equ	1029	;# 
   731   000406                     IOCAN           equ	1030	;# 
   732   000407                     IOCAF           equ	1031	;# 
   733   000408                     ANSELB          equ	1032	;# 
   734   000409                     WPUB            equ	1033	;# 
   735   00040A                     ODCONB          equ	1034	;# 
   736   00040B                     SLRCONB         equ	1035	;# 
   737   00040C                     INLVLB          equ	1036	;# 
   738   00040D                     IOCBP           equ	1037	;# 
   739   00040E                     IOCBN           equ	1038	;# 
   740   00040F                     IOCBF           equ	1039	;# 
   741   000410                     ANSELC          equ	1040	;# 
   742   000411                     WPUC            equ	1041	;# 
   743   000412                     ODCONC          equ	1042	;# 
   744   000413                     SLRCONC         equ	1043	;# 
   745   000414                     INLVLC          equ	1044	;# 
   746   000415                     IOCCP           equ	1045	;# 
   747   000416                     IOCCN           equ	1046	;# 
   748   000417                     IOCCF           equ	1047	;# 
   749   000418                     ANSELD          equ	1048	;# 
   750   000419                     WPUD            equ	1049	;# 
   751   00041A                     ODCOND          equ	1050	;# 
   752   00041B                     SLRCOND         equ	1051	;# 
   753   00041C                     INLVLD          equ	1052	;# 
   754   000420                     ANSELE          equ	1056	;# 
   755   000421                     WPUE            equ	1057	;# 
   756   000422                     ODCONE          equ	1058	;# 
   757   000423                     SLRCONE         equ	1059	;# 
   758   000424                     INLVLE          equ	1060	;# 
   759   000425                     IOCEP           equ	1061	;# 
   760   000426                     IOCEN           equ	1062	;# 
   761   000427                     IOCEF           equ	1063	;# 
   762   000428                     ANSELF          equ	1064	;# 
   763   000429                     WPUF            equ	1065	;# 
   764   00042A                     ODCONF          equ	1066	;# 
   765   00042B                     SLRCONF         equ	1067	;# 
   766   00042C                     INLVLF          equ	1068	;# 
   767   000440                     NCO1ACC         equ	1088	;# 
   768   000440                     NCO1ACCL        equ	1088	;# 
   769   000441                     NCO1ACCH        equ	1089	;# 
   770   000442                     NCO1ACCU        equ	1090	;# 
   771   000443                     NCO1INC         equ	1091	;# 
   772   000443                     NCO1INCL        equ	1091	;# 
   773   000444                     NCO1INCH        equ	1092	;# 
   774   000445                     NCO1INCU        equ	1093	;# 
   775   000446                     NCO1CON         equ	1094	;# 
   776   000447                     NCO1CLK         equ	1095	;# 
   777   000448                     NCO2ACC         equ	1096	;# 
   778   000448                     NCO2ACCL        equ	1096	;# 
   779   000449                     NCO2ACCH        equ	1097	;# 
   780   00044A                     NCO2ACCU        equ	1098	;# 
   781   00044B                     NCO2INC         equ	1099	;# 
   782   00044B                     NCO2INCL        equ	1099	;# 
   783   00044C                     NCO2INCH        equ	1100	;# 
   784   00044D                     NCO2INCU        equ	1101	;# 
   785   00044E                     NCO2CON         equ	1102	;# 
   786   00044F                     NCO2CLK         equ	1103	;# 
   787   000450                     NCO3ACC         equ	1104	;# 
   788   000450                     NCO3ACCL        equ	1104	;# 
   789   000451                     NCO3ACCH        equ	1105	;# 
   790   000452                     NCO3ACCU        equ	1106	;# 
   791   000453                     NCO3INC         equ	1107	;# 
   792   000453                     NCO3INCL        equ	1107	;# 
   793   000454                     NCO3INCH        equ	1108	;# 
   794   000455                     NCO3INCU        equ	1109	;# 
   795   000456                     NCO3CON         equ	1110	;# 
   796   000457                     NCO3CLK         equ	1111	;# 
   797   000459                     IVTLOCK         equ	1113	;# 
   798   00045A                     IVTAD           equ	1114	;# 
   799   00045A                     IVTADL          equ	1114	;# 
   800   00045B                     IVTADH          equ	1115	;# 
   801   00045C                     IVTADU          equ	1116	;# 
   802   00045D                     IVTBASE         equ	1117	;# 
   803   00045D                     IVTBASEL        equ	1117	;# 
   804   00045E                     IVTBASEH        equ	1118	;# 
   805   00045F                     IVTBASEU        equ	1119	;# 
   806   000460                     PWM1ERS         equ	1120	;# 
   807   000461                     PWM1CLK         equ	1121	;# 
   808   000462                     PWM1LDS         equ	1122	;# 
   809   000463                     PWM1PR          equ	1123	;# 
   810   000463                     PWM1PRL         equ	1123	;# 
   811   000464                     PWM1PRH         equ	1124	;# 
   812   000465                     PWM1CPRE        equ	1125	;# 
   813   000466                     PWM1PIPOS       equ	1126	;# 
   814   000467                     PWM1GIR         equ	1127	;# 
   815   000468                     PWM1GIE         equ	1128	;# 
   816   000469                     PWM1CON         equ	1129	;# 
   817   00046A                     PWM1S1CFG       equ	1130	;# 
   818   00046B                     PWM1S1P1        equ	1131	;# 
   819   00046B                     PWM1S1P1L       equ	1131	;# 
   820   00046C                     PWM1S1P1H       equ	1132	;# 
   821   00046D                     PWM1S1P2        equ	1133	;# 
   822   00046D                     PWM1S1P2L       equ	1133	;# 
   823   00046E                     PWM1S1P2H       equ	1134	;# 
   824   00046F                     PWM2ERS         equ	1135	;# 
   825   000470                     PWM2CLK         equ	1136	;# 
   826   000471                     PWM2LDS         equ	1137	;# 
   827   000472                     PWM2PR          equ	1138	;# 
   828   000472                     PWM2PRL         equ	1138	;# 
   829   000473                     PWM2PRH         equ	1139	;# 
   830   000474                     PWM2CPRE        equ	1140	;# 
   831   000475                     PWM2PIPOS       equ	1141	;# 
   832   000476                     PWM2GIR         equ	1142	;# 
   833   000477                     PWM2GIE         equ	1143	;# 
   834   000478                     PWM2CON         equ	1144	;# 
   835   000479                     PWM2S1CFG       equ	1145	;# 
   836   00047A                     PWM2S1P1        equ	1146	;# 
   837   00047A                     PWM2S1P1L       equ	1146	;# 
   838   00047B                     PWM2S1P1H       equ	1147	;# 
   839   00047C                     PWM2S1P2        equ	1148	;# 
   840   00047C                     PWM2S1P2L       equ	1148	;# 
   841   00047D                     PWM2S1P2H       equ	1149	;# 
   842   00047E                     PWM3ERS         equ	1150	;# 
   843   00047F                     PWM3CLK         equ	1151	;# 
   844   000480                     PWM3LDS         equ	1152	;# 
   845   000481                     PWM3PR          equ	1153	;# 
   846   000481                     PWM3PRL         equ	1153	;# 
   847   000482                     PWM3PRH         equ	1154	;# 
   848   000483                     PWM3CPRE        equ	1155	;# 
   849   000484                     PWM3PIPOS       equ	1156	;# 
   850   000485                     PWM3GIR         equ	1157	;# 
   851   000486                     PWM3GIE         equ	1158	;# 
   852   000487                     PWM3CON         equ	1159	;# 
   853   000488                     PWM3S1CFG       equ	1160	;# 
   854   000489                     PWM3S1P1        equ	1161	;# 
   855   000489                     PWM3S1P1L       equ	1161	;# 
   856   00048A                     PWM3S1P1H       equ	1162	;# 
   857   00048B                     PWM3S1P2        equ	1163	;# 
   858   00048B                     PWM3S1P2L       equ	1163	;# 
   859   00048C                     PWM3S1P2H       equ	1164	;# 
   860   00049C                     PWMLOAD         equ	1180	;# 
   861   00049D                     PWMEN           equ	1181	;# 
   862   00049E                     PIE0            equ	1182	;# 
   863   00049F                     PIE1            equ	1183	;# 
   864   0004A0                     PIE2            equ	1184	;# 
   865   0004A1                     PIE3            equ	1185	;# 
   866   0004A2                     PIE4            equ	1186	;# 
   867   0004A3                     PIE5            equ	1187	;# 
   868   0004A4                     PIE6            equ	1188	;# 
   869   0004A5                     PIE7            equ	1189	;# 
   870   0004A6                     PIE8            equ	1190	;# 
   871   0004A7                     PIE9            equ	1191	;# 
   872   0004A8                     PIE10           equ	1192	;# 
   873   0004A9                     PIE11           equ	1193	;# 
   874   0004AA                     PIE12           equ	1194	;# 
   875   0004AB                     PIE13           equ	1195	;# 
   876   0004AC                     PIE14           equ	1196	;# 
   877   0004AD                     PIE15           equ	1197	;# 
   878   0004AE                     PIR0            equ	1198	;# 
   879   0004AF                     PIR1            equ	1199	;# 
   880   0004B0                     PIR2            equ	1200	;# 
   881   0004B1                     PIR3            equ	1201	;# 
   882   0004B2                     PIR4            equ	1202	;# 
   883   0004B3                     PIR5            equ	1203	;# 
   884   0004B4                     PIR6            equ	1204	;# 
   885   0004B5                     PIR7            equ	1205	;# 
   886   0004B6                     PIR8            equ	1206	;# 
   887   0004B7                     PIR9            equ	1207	;# 
   888   0004B8                     PIR10           equ	1208	;# 
   889   0004B9                     PIR11           equ	1209	;# 
   890   0004BA                     PIR12           equ	1210	;# 
   891   0004BB                     PIR13           equ	1211	;# 
   892   0004BC                     PIR14           equ	1212	;# 
   893   0004BD                     PIR15           equ	1213	;# 
   894   0004BE                     LATA            equ	1214	;# 
   895   0004BF                     LATB            equ	1215	;# 
   896   0004C0                     LATC            equ	1216	;# 
   897   0004C1                     LATD            equ	1217	;# 
   898   0004C2                     LATE            equ	1218	;# 
   899   0004C3                     LATF            equ	1219	;# 
   900   0004C6                     TRISA           equ	1222	;# 
   901   0004C7                     TRISB           equ	1223	;# 
   902   0004C8                     TRISC           equ	1224	;# 
   903   0004C9                     TRISD           equ	1225	;# 
   904   0004CA                     TRISE           equ	1226	;# 
   905   0004CB                     TRISF           equ	1227	;# 
   906   0004CE                     PORTA           equ	1230	;# 
   907   0004CF                     PORTB           equ	1231	;# 
   908   0004D0                     PORTC           equ	1232	;# 
   909   0004D1                     PORTD           equ	1233	;# 
   910   0004D2                     PORTE           equ	1234	;# 
   911   0004D3                     PORTF           equ	1235	;# 
   912   0004D6                     INTCON0         equ	1238	;# 
   913   0004D7                     INTCON1         equ	1239	;# 
   914   0004D8                     STATUS          equ	1240	;# 
   915   0004D9                     FSR2            equ	1241	;# 
   916   0004D9                     FSR2L           equ	1241	;# 
   917   0004DA                     FSR2H           equ	1242	;# 
   918   0004DB                     PLUSW2          equ	1243	;# 
   919   0004DC                     PREINC2         equ	1244	;# 
   920   0004DD                     POSTDEC2        equ	1245	;# 
   921   0004DE                     POSTINC2        equ	1246	;# 
   922   0004DF                     INDF2           equ	1247	;# 
   923   0004E0                     BSR             equ	1248	;# 
   924   0004E1                     FSR1            equ	1249	;# 
   925   0004E1                     FSR1L           equ	1249	;# 
   926   0004E2                     FSR1H           equ	1250	;# 
   927   0004E3                     PLUSW1          equ	1251	;# 
   928   0004E4                     PREINC1         equ	1252	;# 
   929   0004E5                     POSTDEC1        equ	1253	;# 
   930   0004E6                     POSTINC1        equ	1254	;# 
   931   0004E7                     INDF1           equ	1255	;# 
   932   0004E8                     WREG            equ	1256	;# 
   933   0004E9                     FSR0            equ	1257	;# 
   934   0004E9                     FSR0L           equ	1257	;# 
   935   0004EA                     FSR0H           equ	1258	;# 
   936   0004EB                     PLUSW0          equ	1259	;# 
   937   0004EC                     PREINC0         equ	1260	;# 
   938   0004ED                     POSTDEC0        equ	1261	;# 
   939   0004EE                     POSTINC0        equ	1262	;# 
   940   0004EF                     INDF0           equ	1263	;# 
   941   0004F0                     PCON0           equ	1264	;# 
   942   0004F1                     PCON1           equ	1265	;# 
   943   0004F2                     CPUDOZE         equ	1266	;# 
   944   0004F3                     PROD            equ	1267	;# 
   945   0004F3                     PRODL           equ	1267	;# 
   946   0004F4                     PRODH           equ	1268	;# 
   947   0004F5                     TABLAT          equ	1269	;# 
   948   0004F6                     TBLPTR          equ	1270	;# 
   949   0004F6                     TBLPTRL         equ	1270	;# 
   950   0004F7                     TBLPTRH         equ	1271	;# 
   951   0004F8                     TBLPTRU         equ	1272	;# 
   952   0004F9                     PCLAT           equ	1273	;# 
   953   0004F9                     PCL             equ	1273	;# 
   954   0004FA                     PCLATH          equ	1274	;# 
   955   0004FB                     PCLATU          equ	1275	;# 
   956   0004FC                     STKPTR          equ	1276	;# 
   957   0004FD                     TOS             equ	1277	;# 
   958   0004FD                     TOSL            equ	1277	;# 
   959   0004FE                     TOSH            equ	1278	;# 
   960   0004FF                     TOSU            equ	1279	;# 
   961   000039                     CLKRCON         equ	57	;# 
   962   00003A                     CLKRCLK         equ	58	;# 
   963   000040                     NVMCON0         equ	64	;# 
   964   000041                     NVMCON1         equ	65	;# 
   965   000042                     NVMLOCK         equ	66	;# 
   966   000043                     NVMADR          equ	67	;# 
   967   000043                     NVMADRL         equ	67	;# 
   968   000044                     NVMADRH         equ	68	;# 
   969   000045                     NVMADRU         equ	69	;# 
   970   000046                     NVMDAT          equ	70	;# 
   971   000046                     NVMDATL         equ	70	;# 
   972   000047                     NVMDATH         equ	71	;# 
   973   000048                     VREGCON         equ	72	;# 
   974   000049                     BORCON          equ	73	;# 
   975   00004A                     HLVDCON0        equ	74	;# 
   976   00004B                     HLVDCON1        equ	75	;# 
   977   00004C                     ZCDCON          equ	76	;# 
   978   000060                     PMD0            equ	96	;# 
   979   000061                     PMD1            equ	97	;# 
   980   000063                     PMD3            equ	99	;# 
   981   000064                     PMD4            equ	100	;# 
   982   000065                     PMD5            equ	101	;# 
   983   000066                     PMD6            equ	102	;# 
   984   000067                     PMD7            equ	103	;# 
   985   000068                     PMD8            equ	104	;# 
   986   00006A                     MD1CON0         equ	106	;# 
   987   00006B                     MD1CON1         equ	107	;# 
   988   00006C                     MD1SRC          equ	108	;# 
   989   00006D                     MD1CARL         equ	109	;# 
   990   00006E                     MD1CARH         equ	110	;# 
   991   00006F                     CMOUT           equ	111	;# 
   992   000070                     CM1CON0         equ	112	;# 
   993   000071                     CM1CON1         equ	113	;# 
   994   000072                     CM1NCH          equ	114	;# 
   995   000073                     CM1PCH          equ	115	;# 
   996   000074                     CM2CON0         equ	116	;# 
   997   000075                     CM2CON1         equ	117	;# 
   998   000076                     CM2NCH          equ	118	;# 
   999   000077                     CM2PCH          equ	119	;# 
  1000   000078                     WDTCON0         equ	120	;# 
  1001   000079                     WDTCON1         equ	121	;# 
  1002   00007A                     WDTPS           equ	122	;# 
  1003   00007A                     WDTPSL          equ	122	;# 
  1004   00007B                     WDTPSH          equ	123	;# 
  1005   00007C                     WDTTMR          equ	124	;# 
  1006   00007D                     DAC1DAT         equ	125	;# 
  1007   00007D                     DAC1DATL        equ	125	;# 
  1008   00007F                     DAC1CON         equ	127	;# 
  1009   000080                     SPI1RXB         equ	128	;# 
  1010   000081                     SPI1TXB         equ	129	;# 
  1011   000082                     SPI1TCNT        equ	130	;# 
  1012   000082                     SPI1TCNTL       equ	130	;# 
  1013   000083                     SPI1TCNTH       equ	131	;# 
  1014   000084                     SPI1CON0        equ	132	;# 
  1015   000085                     SPI1CON1        equ	133	;# 
  1016   000086                     SPI1CON2        equ	134	;# 
  1017   000087                     SPI1STATUS      equ	135	;# 
  1018   000088                     SPI1TWIDTH      equ	136	;# 
  1019   000089                     SPI1BAUD        equ	137	;# 
  1020   00008A                     SPI1INTF        equ	138	;# 
  1021   00008B                     SPI1INTE        equ	139	;# 
  1022   00008C                     SPI1CLK         equ	140	;# 
  1023   00008D                     SPI2RXB         equ	141	;# 
  1024   00008E                     SPI2TXB         equ	142	;# 
  1025   00008F                     SPI2TCNT        equ	143	;# 
  1026   00008F                     SPI2TCNTL       equ	143	;# 
  1027   000090                     SPI2TCNTH       equ	144	;# 
  1028   000091                     SPI2CON0        equ	145	;# 
  1029   000092                     SPI2CON1        equ	146	;# 
  1030   000093                     SPI2CON2        equ	147	;# 
  1031   000094                     SPI2STATUS      equ	148	;# 
  1032   000095                     SPI2TWIDTH      equ	149	;# 
  1033   000096                     SPI2BAUD        equ	150	;# 
  1034   000097                     SPI2INTF        equ	151	;# 
  1035   000098                     SPI2INTE        equ	152	;# 
  1036   000099                     SPI2CLK         equ	153	;# 
  1037   0000AC                     ACTCON          equ	172	;# 
  1038   0000AD                     OSCCON1         equ	173	;# 
  1039   0000AE                     OSCCON2         equ	174	;# 
  1040   0000AF                     OSCCON3         equ	175	;# 
  1041   0000B0                     OSCTUNE         equ	176	;# 
  1042   0000B1                     OSCFRQ          equ	177	;# 
  1043   0000B1                     OSCFREQ         equ	177	;# 
  1044   0000B2                     OSCSTAT         equ	178	;# 
  1045   0000B2                     OSCSTAT1        equ	178	;# 
  1046   0000B3                     OSCEN           equ	179	;# 
  1047   0000B4                     PRLOCK          equ	180	;# 
  1048   0000B5                     SCANPR          equ	181	;# 
  1049   0000B6                     DMA1PR          equ	182	;# 
  1050   0000B7                     DMA2PR          equ	183	;# 
  1051   0000B8                     DMA3PR          equ	184	;# 
  1052   0000B9                     DMA4PR          equ	185	;# 
  1053   0000BA                     DMA5PR          equ	186	;# 
  1054   0000BB                     DMA6PR          equ	187	;# 
  1055   0000BE                     MAINPR          equ	190	;# 
  1056   0000BF                     ISRPR           equ	191	;# 
  1057   0000D4                     CLCDATA         equ	212	;# 
  1058   0000D5                     CLCSELECT       equ	213	;# 
  1059   0000D6                     CLCnCON         equ	214	;# 
  1060   0000D7                     CLCnPOL         equ	215	;# 
  1061   0000D8                     CLCnSEL0        equ	216	;# 
  1062   0000D9                     CLCnSEL1        equ	217	;# 
  1063   0000DA                     CLCnSEL2        equ	218	;# 
  1064   0000DB                     CLCnSEL3        equ	219	;# 
  1065   0000DC                     CLCnGLS0        equ	220	;# 
  1066   0000DD                     CLCnGLS1        equ	221	;# 
  1067   0000DE                     CLCnGLS2        equ	222	;# 
  1068   0000DF                     CLCnGLS3        equ	223	;# 
  1069   0000E8                     DMASELECT       equ	232	;# 
  1070   0000E9                     DMAnBUF         equ	233	;# 
  1071   0000EA                     DMAnDCNT        equ	234	;# 
  1072   0000EA                     DMAnDCNTL       equ	234	;# 
  1073   0000EB                     DMAnDCNTH       equ	235	;# 
  1074   0000EC                     DMAnDPTR        equ	236	;# 
  1075   0000EC                     DMAnDPTRL       equ	236	;# 
  1076   0000ED                     DMAnDPTRH       equ	237	;# 
  1077   0000EE                     DMAnDSZ         equ	238	;# 
  1078   0000EE                     DMAnDSZL        equ	238	;# 
  1079   0000EF                     DMAnDSZH        equ	239	;# 
  1080   0000F0                     DMAnDSA         equ	240	;# 
  1081   0000F0                     DMAnDSAL        equ	240	;# 
  1082   0000F1                     DMAnDSAH        equ	241	;# 
  1083   0000F2                     DMAnSCNT        equ	242	;# 
  1084   0000F2                     DMAnSCNTL       equ	242	;# 
  1085   0000F3                     DMAnSCNTH       equ	243	;# 
  1086   0000F4                     DMAnSPTR        equ	244	;# 
  1087   0000F4                     DMAnSPTRL       equ	244	;# 
  1088   0000F5                     DMAnSPTRH       equ	245	;# 
  1089   0000F6                     DMAnSPTRU       equ	246	;# 
  1090   0000F7                     DMAnSSZ         equ	247	;# 
  1091   0000F7                     DMAnSSZL        equ	247	;# 
  1092   0000F8                     DMAnSSZH        equ	248	;# 
  1093   0000F9                     DMAnSSA         equ	249	;# 
  1094   0000F9                     DMAnSSAL        equ	249	;# 
  1095   0000FA                     DMAnSSAH        equ	250	;# 
  1096   0000FB                     DMAnSSAU        equ	251	;# 
  1097   0000FC                     DMAnCON0        equ	252	;# 
  1098   0000FD                     DMAnCON1        equ	253	;# 
  1099   0000FE                     DMAnAIRQ        equ	254	;# 
  1100   0000FF                     DMAnSIRQ        equ	255	;# 
  1101   000200                     PPSLOCK         equ	512	;# 
  1102   000201                     RA0PPS          equ	513	;# 
  1103   000202                     RA1PPS          equ	514	;# 
  1104   000203                     RA2PPS          equ	515	;# 
  1105   000204                     RA3PPS          equ	516	;# 
  1106   000205                     RA4PPS          equ	517	;# 
  1107   000206                     RA5PPS          equ	518	;# 
  1108   000207                     RA6PPS          equ	519	;# 
  1109   000208                     RA7PPS          equ	520	;# 
  1110   000209                     RB0PPS          equ	521	;# 
  1111   00020A                     RB1PPS          equ	522	;# 
  1112   00020B                     RB2PPS          equ	523	;# 
  1113   00020C                     RB3PPS          equ	524	;# 
  1114   00020D                     RB4PPS          equ	525	;# 
  1115   00020E                     RB5PPS          equ	526	;# 
  1116   00020F                     RB6PPS          equ	527	;# 
  1117   000210                     RB7PPS          equ	528	;# 
  1118   000211                     RC0PPS          equ	529	;# 
  1119   000212                     RC1PPS          equ	530	;# 
  1120   000213                     RC2PPS          equ	531	;# 
  1121   000214                     RC3PPS          equ	532	;# 
  1122   000215                     RC4PPS          equ	533	;# 
  1123   000216                     RC5PPS          equ	534	;# 
  1124   000217                     RC6PPS          equ	535	;# 
  1125   000218                     RC7PPS          equ	536	;# 
  1126   000219                     RD0PPS          equ	537	;# 
  1127   00021A                     RD1PPS          equ	538	;# 
  1128   00021B                     RD2PPS          equ	539	;# 
  1129   00021C                     RD3PPS          equ	540	;# 
  1130   00021D                     RD4PPS          equ	541	;# 
  1131   00021E                     RD5PPS          equ	542	;# 
  1132   00021F                     RD6PPS          equ	543	;# 
  1133   000220                     RD7PPS          equ	544	;# 
  1134   000221                     RE0PPS          equ	545	;# 
  1135   000222                     RE1PPS          equ	546	;# 
  1136   000223                     RE2PPS          equ	547	;# 
  1137   000229                     RF0PPS          equ	553	;# 
  1138   00022A                     RF1PPS          equ	554	;# 
  1139   00022B                     RF2PPS          equ	555	;# 
  1140   00022C                     RF3PPS          equ	556	;# 
  1141   00022D                     RF4PPS          equ	557	;# 
  1142   00022E                     RF5PPS          equ	558	;# 
  1143   00022F                     RF6PPS          equ	559	;# 
  1144   000230                     RF7PPS          equ	560	;# 
  1145   00023E                     INT0PPS         equ	574	;# 
  1146   00023F                     INT1PPS         equ	575	;# 
  1147   000240                     INT2PPS         equ	576	;# 
  1148   000241                     T0CKIPPS        equ	577	;# 
  1149   000242                     T1CKIPPS        equ	578	;# 
  1150   000243                     T1GPPS          equ	579	;# 
  1151   000244                     T3CKIPPS        equ	580	;# 
  1152   000245                     T3GPPS          equ	581	;# 
  1153   000246                     T5CKIPPS        equ	582	;# 
  1154   000247                     T5GPPS          equ	583	;# 
  1155   000248                     T2INPPS         equ	584	;# 
  1156   000249                     T4INPPS         equ	585	;# 
  1157   00024A                     T6INPPS         equ	586	;# 
  1158   00024F                     CCP1PPS         equ	591	;# 
  1159   000250                     CCP2PPS         equ	592	;# 
  1160   000251                     CCP3PPS         equ	593	;# 
  1161   000253                     PWM1ERSPPS      equ	595	;# 
  1162   000254                     PWM2ERSPPS      equ	596	;# 
  1163   000255                     PWM3ERSPPS      equ	597	;# 
  1164   000257                     PWMIN0PPS       equ	599	;# 
  1165   000258                     PWMIN1PPS       equ	600	;# 
  1166   000259                     SMT1WINPPS      equ	601	;# 
  1167   00025A                     SMT1SIGPPS      equ	602	;# 
  1168   00025B                     CWG1PPS         equ	603	;# 
  1169   00025B                     CWG1INPPS       equ	603	;# 
  1170   00025C                     CWG2PPS         equ	604	;# 
  1171   00025C                     CWG2INPPS       equ	604	;# 
  1172   00025D                     CWG3PPS         equ	605	;# 
  1173   00025D                     CWG3INPPS       equ	605	;# 
  1174   00025E                     MD1CARLPPS      equ	606	;# 
  1175   00025E                     MDCARLPPS       equ	606	;# 
  1176   00025F                     MD1CARHPPS      equ	607	;# 
  1177   00025F                     MDCARHPPS       equ	607	;# 
  1178   000260                     MD1SRCPPS       equ	608	;# 
  1179   000260                     MDSRCPPS        equ	608	;# 
  1180   000261                     CLCIN0PPS       equ	609	;# 
  1181   000262                     CLCIN1PPS       equ	610	;# 
  1182   000263                     CLCIN2PPS       equ	611	;# 
  1183   000264                     CLCIN3PPS       equ	612	;# 
  1184   000265                     CLCIN4PPS       equ	613	;# 
  1185   000266                     CLCIN5PPS       equ	614	;# 
  1186   000267                     CLCIN6PPS       equ	615	;# 
  1187   000268                     CLCIN7PPS       equ	616	;# 
  1188   000269                     ADACTPPS        equ	617	;# 
  1189   00026A                     SPI1SCKPPS      equ	618	;# 
  1190   00026B                     SPI1SDIPPS      equ	619	;# 
  1191   00026C                     SPI1SSPPS       equ	620	;# 
  1192   00026D                     SPI2SCKPPS      equ	621	;# 
  1193   00026E                     SPI2SDIPPS      equ	622	;# 
  1194   00026F                     SPI2SSPPS       equ	623	;# 
  1195   000270                     I2C1SDAPPS      equ	624	;# 
  1196   000271                     I2C1SCLPPS      equ	625	;# 
  1197   000272                     U1RXPPS         equ	626	;# 
  1198   000273                     U1CTSPPS        equ	627	;# 
  1199   000274                     U2RXPPS         equ	628	;# 
  1200   000275                     U2CTSPPS        equ	629	;# 
  1201   000276                     U3RXPPS         equ	630	;# 
  1202   000277                     U3CTSPPS        equ	631	;# 
  1203   000278                     U4RXPPS         equ	632	;# 
  1204   000279                     U4CTSPPS        equ	633	;# 
  1205   00027A                     U5RXPPS         equ	634	;# 
  1206   00027B                     U5CTSPPS        equ	635	;# 
  1207   000286                     RC4I2C          equ	646	;# 
  1208   000287                     RC3I2C          equ	647	;# 
  1209   000288                     RB2I2C          equ	648	;# 
  1210   000289                     RB1I2C          equ	649	;# 
  1211   00028B                     I2C1RXB         equ	651	;# 
  1212   00028C                     I2C1TXB         equ	652	;# 
  1213   00028D                     I2C1CNT         equ	653	;# 
  1214   00028E                     I2C1ADB0        equ	654	;# 
  1215   00028F                     I2C1ADB1        equ	655	;# 
  1216   000290                     I2C1ADR0        equ	656	;# 
  1217   000291                     I2C1ADR1        equ	657	;# 
  1218   000292                     I2C1ADR2        equ	658	;# 
  1219   000293                     I2C1ADR3        equ	659	;# 
  1220   000294                     I2C1CON0        equ	660	;# 
  1221   000295                     I2C1CON1        equ	661	;# 
  1222   000296                     I2C1CON2        equ	662	;# 
  1223   000297                     I2C1ERR         equ	663	;# 
  1224   000298                     I2C1STAT0       equ	664	;# 
  1225   000299                     I2C1STAT1       equ	665	;# 
  1226   00029A                     I2C1PIR         equ	666	;# 
  1227   00029B                     I2C1PIE         equ	667	;# 
  1228   00029C                     I2C1CLK         equ	668	;# 
  1229   00029D                     I2C1BTO         equ	669	;# 
  1230   0002A1                     U1RXB           equ	673	;# 
  1231   0002A1                     U1RXBL          equ	673	;# 
  1232   0002A2                     U1RXCHK         equ	674	;# 
  1233   0002A3                     U1TXB           equ	675	;# 
  1234   0002A3                     U1TXBL          equ	675	;# 
  1235   0002A4                     U1TXCHK         equ	676	;# 
  1236   0002A5                     U1P1            equ	677	;# 
  1237   0002A5                     U1P1L           equ	677	;# 
  1238   0002A6                     U1P1H           equ	678	;# 
  1239   0002A7                     U1P2            equ	679	;# 
  1240   0002A7                     U1P2L           equ	679	;# 
  1241   0002A8                     U1P2H           equ	680	;# 
  1242   0002A9                     U1P3            equ	681	;# 
  1243   0002A9                     U1P3L           equ	681	;# 
  1244   0002AA                     U1P3H           equ	682	;# 
  1245   0002AB                     U1CON0          equ	683	;# 
  1246   0002AC                     U1CON1          equ	684	;# 
  1247   0002AD                     U1CON2          equ	685	;# 
  1248   0002AE                     U1BRG           equ	686	;# 
  1249   0002AE                     U1BRGL          equ	686	;# 
  1250   0002AF                     U1BRGH          equ	687	;# 
  1251   0002B0                     U1FIFO          equ	688	;# 
  1252   0002B1                     U1UIR           equ	689	;# 
  1253   0002B2                     U1ERRIR         equ	690	;# 
  1254   0002B3                     U1ERRIE         equ	691	;# 
  1255   0002B4                     U2RXB           equ	692	;# 
  1256   0002B4                     U2RXBL          equ	692	;# 
  1257   0002B6                     U2TXB           equ	694	;# 
  1258   0002B6                     U2TXBL          equ	694	;# 
  1259   0002B8                     U2P1            equ	696	;# 
  1260   0002B8                     U2P1L           equ	696	;# 
  1261   0002BA                     U2P2            equ	698	;# 
  1262   0002BA                     U2P2L           equ	698	;# 
  1263   0002BC                     U2P3            equ	700	;# 
  1264   0002BC                     U2P3L           equ	700	;# 
  1265   0002BE                     U2CON0          equ	702	;# 
  1266   0002BF                     U2CON1          equ	703	;# 
  1267   0002C0                     U2CON2          equ	704	;# 
  1268   0002C1                     U2BRG           equ	705	;# 
  1269   0002C1                     U2BRGL          equ	705	;# 
  1270   0002C2                     U2BRGH          equ	706	;# 
  1271   0002C3                     U2FIFO          equ	707	;# 
  1272   0002C4                     U2UIR           equ	708	;# 
  1273   0002C5                     U2ERRIR         equ	709	;# 
  1274   0002C6                     U2ERRIE         equ	710	;# 
  1275   0002C7                     U3RXB           equ	711	;# 
  1276   0002C7                     U3RXBL          equ	711	;# 
  1277   0002C9                     U3TXB           equ	713	;# 
  1278   0002C9                     U3TXBL          equ	713	;# 
  1279   0002CB                     U3P1            equ	715	;# 
  1280   0002CB                     U3P1L           equ	715	;# 
  1281   0002CD                     U3P2            equ	717	;# 
  1282   0002CD                     U3P2L           equ	717	;# 
  1283   0002CF                     U3P3            equ	719	;# 
  1284   0002CF                     U3P3L           equ	719	;# 
  1285   0002D1                     U3CON0          equ	721	;# 
  1286   0002D2                     U3CON1          equ	722	;# 
  1287   0002D3                     U3CON2          equ	723	;# 
  1288   0002D4                     U3BRG           equ	724	;# 
  1289   0002D4                     U3BRGL          equ	724	;# 
  1290   0002D5                     U3BRGH          equ	725	;# 
  1291   0002D6                     U3FIFO          equ	726	;# 
  1292   0002D7                     U3UIR           equ	727	;# 
  1293   0002D8                     U3ERRIR         equ	728	;# 
  1294   0002D9                     U3ERRIE         equ	729	;# 
  1295   0002DA                     U4RXB           equ	730	;# 
  1296   0002DA                     U4RXBL          equ	730	;# 
  1297   0002DC                     U4TXB           equ	732	;# 
  1298   0002DC                     U4TXBL          equ	732	;# 
  1299   0002DE                     U4P1            equ	734	;# 
  1300   0002DE                     U4P1L           equ	734	;# 
  1301   0002E0                     U4P2            equ	736	;# 
  1302   0002E0                     U4P2L           equ	736	;# 
  1303   0002E2                     U4P3            equ	738	;# 
  1304   0002E2                     U4P3L           equ	738	;# 
  1305   0002E4                     U4CON0          equ	740	;# 
  1306   0002E5                     U4CON1          equ	741	;# 
  1307   0002E6                     U4CON2          equ	742	;# 
  1308   0002E7                     U4BRG           equ	743	;# 
  1309   0002E7                     U4BRGL          equ	743	;# 
  1310   0002E8                     U4BRGH          equ	744	;# 
  1311   0002E9                     U4FIFO          equ	745	;# 
  1312   0002EA                     U4UIR           equ	746	;# 
  1313   0002EB                     U4ERRIR         equ	747	;# 
  1314   0002EC                     U4ERRIE         equ	748	;# 
  1315   0002ED                     U5RXB           equ	749	;# 
  1316   0002ED                     U5RXBL          equ	749	;# 
  1317   0002EF                     U5TXB           equ	751	;# 
  1318   0002EF                     U5TXBL          equ	751	;# 
  1319   0002F1                     U5P1            equ	753	;# 
  1320   0002F1                     U5P1L           equ	753	;# 
  1321   0002F3                     U5P2            equ	755	;# 
  1322   0002F3                     U5P2L           equ	755	;# 
  1323   0002F5                     U5P3            equ	757	;# 
  1324   0002F5                     U5P3L           equ	757	;# 
  1325   0002F7                     U5CON0          equ	759	;# 
  1326   0002F8                     U5CON1          equ	760	;# 
  1327   0002F9                     U5CON2          equ	761	;# 
  1328   0002FA                     U5BRG           equ	762	;# 
  1329   0002FA                     U5BRGL          equ	762	;# 
  1330   0002FB                     U5BRGH          equ	763	;# 
  1331   0002FC                     U5FIFO          equ	764	;# 
  1332   0002FD                     U5UIR           equ	765	;# 
  1333   0002FE                     U5ERRIR         equ	766	;# 
  1334   0002FF                     U5ERRIE         equ	767	;# 
  1335   000300                     SMT1TMR         equ	768	;# 
  1336   000300                     SMT1TMRL        equ	768	;# 
  1337   000301                     SMT1TMRH        equ	769	;# 
  1338   000302                     SMT1TMRU        equ	770	;# 
  1339   000303                     SMT1CPR         equ	771	;# 
  1340   000303                     SMT1CPRL        equ	771	;# 
  1341   000304                     SMT1CPRH        equ	772	;# 
  1342   000305                     SMT1CPRU        equ	773	;# 
  1343   000306                     SMT1CPW         equ	774	;# 
  1344   000306                     SMT1CPWL        equ	774	;# 
  1345   000307                     SMT1CPWH        equ	775	;# 
  1346   000308                     SMT1CPWU        equ	776	;# 
  1347   000309                     SMT1PR          equ	777	;# 
  1348   000309                     SMT1PRL         equ	777	;# 
  1349   00030A                     SMT1PRH         equ	778	;# 
  1350   00030B                     SMT1PRU         equ	779	;# 
  1351   00030C                     SMT1CON0        equ	780	;# 
  1352   00030D                     SMT1CON1        equ	781	;# 
  1353   00030E                     SMT1STAT        equ	782	;# 
  1354   00030F                     SMT1CLK         equ	783	;# 
  1355   000310                     SMT1SIG         equ	784	;# 
  1356   000311                     SMT1WIN         equ	785	;# 
  1357   000318                     TMR0L           equ	792	;# 
  1358   000318                     TMR0            equ	792	;# 
  1359   000319                     TMR0H           equ	793	;# 
  1360   000319                     PR0             equ	793	;# 
  1361   00031A                     T0CON0          equ	794	;# 
  1362   00031B                     T0CON1          equ	795	;# 
  1363   00031C                     TMR1            equ	796	;# 
  1364   00031C                     TMR1L           equ	796	;# 
  1365   00031D                     TMR1H           equ	797	;# 
  1366   00031E                     T1CON           equ	798	;# 
  1367   00031E                     TMR1CON         equ	798	;# 
  1368   00031F                     T1GCON          equ	799	;# 
  1369   00031F                     TMR1GCON        equ	799	;# 
  1370   000320                     T1GATE          equ	800	;# 
  1371   000320                     TMR1GATE        equ	800	;# 
  1372   000321                     T1CLK           equ	801	;# 
  1373   000321                     TMR1CLK         equ	801	;# 
  1374   000321                     PR1             equ	801	;# 
  1375   000322                     T2TMR           equ	802	;# 
  1376   000322                     TMR2            equ	802	;# 
  1377   000323                     T2PR            equ	803	;# 
  1378   000323                     PR2             equ	803	;# 
  1379   000324                     T2CON           equ	804	;# 
  1380   000325                     T2HLT           equ	805	;# 
  1381   000326                     T2CLKCON        equ	806	;# 
  1382   000326                     T2CLK           equ	806	;# 
  1383   000327                     T2RST           equ	807	;# 
  1384   000328                     TMR3            equ	808	;# 
  1385   000328                     TMR3L           equ	808	;# 
  1386   000329                     TMR3H           equ	809	;# 
  1387   00032A                     T3CON           equ	810	;# 
  1388   00032A                     TMR3CON         equ	810	;# 
  1389   00032B                     T3GCON          equ	811	;# 
  1390   00032B                     TMR3GCON        equ	811	;# 
  1391   00032C                     T3GATE          equ	812	;# 
  1392   00032C                     TMR3GATE        equ	812	;# 
  1393   00032D                     T3CLK           equ	813	;# 
  1394   00032D                     TMR3CLK         equ	813	;# 
  1395   00032D                     PR3             equ	813	;# 
  1396   00032E                     T4TMR           equ	814	;# 
  1397   00032E                     TMR4            equ	814	;# 
  1398   00032F                     T4PR            equ	815	;# 
  1399   00032F                     PR4             equ	815	;# 
  1400   000330                     T4CON           equ	816	;# 
  1401   000331                     T4HLT           equ	817	;# 
  1402   000332                     T4CLKCON        equ	818	;# 
  1403   000332                     T4CLK           equ	818	;# 
  1404   000333                     T4RST           equ	819	;# 
  1405   000334                     TMR5            equ	820	;# 
  1406   000334                     TMR5L           equ	820	;# 
  1407   000335                     TMR5H           equ	821	;# 
  1408   000336                     T5CON           equ	822	;# 
  1409   000336                     TMR5CON         equ	822	;# 
  1410   000337                     T5GCON          equ	823	;# 
  1411   000337                     TMR5GCON        equ	823	;# 
  1412   000338                     T5GATE          equ	824	;# 
  1413   000338                     TMR5GATE        equ	824	;# 
  1414   000339                     T5CLK           equ	825	;# 
  1415   000339                     TMR5CLK         equ	825	;# 
  1416   000339                     PR5             equ	825	;# 
  1417   00033A                     T6TMR           equ	826	;# 
  1418   00033A                     TMR6            equ	826	;# 
  1419   00033B                     T6PR            equ	827	;# 
  1420   00033B                     PR6             equ	827	;# 
  1421   00033C                     T6CON           equ	828	;# 
  1422   00033D                     T6HLT           equ	829	;# 
  1423   00033E                     T6CLKCON        equ	830	;# 
  1424   00033E                     T6CLK           equ	830	;# 
  1425   00033F                     T6RST           equ	831	;# 
  1426   000340                     CCPR1           equ	832	;# 
  1427   000340                     CCPR1L          equ	832	;# 
  1428   000341                     CCPR1H          equ	833	;# 
  1429   000342                     CCP1CON         equ	834	;# 
  1430   000343                     CCP1CAP         equ	835	;# 
  1431   000344                     CCPR2           equ	836	;# 
  1432   000344                     CCPR2L          equ	836	;# 
  1433   000345                     CCPR2H          equ	837	;# 
  1434   000346                     CCP2CON         equ	838	;# 
  1435   000347                     CCP2CAP         equ	839	;# 
  1436   000348                     CCPR3           equ	840	;# 
  1437   000348                     CCPR3L          equ	840	;# 
  1438   000349                     CCPR3H          equ	841	;# 
  1439   00034A                     CCP3CON         equ	842	;# 
  1440   00034B                     CCP3CAP         equ	843	;# 
  1441   00034C                     CCPTMRS0        equ	844	;# 
  1442   00034F                     CRCDATA         equ	847	;# 
  1443   00034F                     CRCDATL         equ	847	;# 
  1444   000350                     CRCDATH         equ	848	;# 
  1445   000351                     CRCACC          equ	849	;# 
  1446   000351                     CRCACCL         equ	849	;# 
  1447   000352                     CRCACCH         equ	850	;# 
  1448   000353                     CRCSHFT         equ	851	;# 
  1449   000353                     CRCSHIFTL       equ	851	;# 
  1450   000354                     CRCSHIFTH       equ	852	;# 
  1451   000355                     CRCXOR          equ	853	;# 
  1452   000355                     CRCXORL         equ	853	;# 
  1453   000356                     CRCXORH         equ	854	;# 
  1454   000357                     CRCCON0         equ	855	;# 
  1455   000358                     CRCCON1         equ	856	;# 
  1456   00035A                     SCANLADR        equ	858	;# 
  1457   00035A                     SCANLADRL       equ	858	;# 
  1458   00035B                     SCANLADRH       equ	859	;# 
  1459   00035C                     SCANLADRU       equ	860	;# 
  1460   00035D                     SCANHADR        equ	861	;# 
  1461   00035D                     SCANHADRL       equ	861	;# 
  1462   00035E                     SCANHADRH       equ	862	;# 
  1463   00035F                     SCANHADRU       equ	863	;# 
  1464   000360                     SCANCON0        equ	864	;# 
  1465   000361                     SCANTRIG        equ	865	;# 
  1466   000362                     IPR0            equ	866	;# 
  1467   000363                     IPR1            equ	867	;# 
  1468   000364                     IPR2            equ	868	;# 
  1469   000365                     IPR3            equ	869	;# 
  1470   000366                     IPR4            equ	870	;# 
  1471   000367                     IPR5            equ	871	;# 
  1472   000368                     IPR6            equ	872	;# 
  1473   000369                     IPR7            equ	873	;# 
  1474   00036A                     IPR8            equ	874	;# 
  1475   00036B                     IPR9            equ	875	;# 
  1476   00036C                     IPR10           equ	876	;# 
  1477   00036D                     IPR11           equ	877	;# 
  1478   00036E                     IPR12           equ	878	;# 
  1479   00036F                     IPR13           equ	879	;# 
  1480   000370                     IPR14           equ	880	;# 
  1481   000371                     IPR15           equ	881	;# 
  1482   000373                     STATUS_CSHAD    equ	883	;# 
  1483   000374                     WREG_CSHAD      equ	884	;# 
  1484   000375                     BSR_CSHAD       equ	885	;# 
  1485   000376                     SHADCON         equ	886	;# 
  1486   000377                     STATUS_SHAD     equ	887	;# 
  1487   000378                     WREG_SHAD       equ	888	;# 
  1488   000379                     BSR_SHAD        equ	889	;# 
  1489   00037A                     PCLATH_SHAD     equ	890	;# 
  1490   00037B                     PCLATU_SHAD     equ	891	;# 
  1491   00037C                     FSR0SH          equ	892	;# 
  1492   00037C                     FSR0L_SHAD      equ	892	;# 
  1493   00037D                     FSR0H_SHAD      equ	893	;# 
  1494   00037E                     FSR1SH          equ	894	;# 
  1495   00037E                     FSR1L_SHAD      equ	894	;# 
  1496   00037F                     FSR1H_SHAD      equ	895	;# 
  1497   000380                     FSR2SH          equ	896	;# 
  1498   000380                     FSR2L_SHAD      equ	896	;# 
  1499   000381                     FSR2H_SHAD      equ	897	;# 
  1500   000382                     PRODSH          equ	898	;# 
  1501   000382                     PRODL_SHAD      equ	898	;# 
  1502   000383                     PRODH_SHAD      equ	899	;# 
  1503   0003BC                     CWG1CLK         equ	956	;# 
  1504   0003BC                     CWG1CLKCON      equ	956	;# 
  1505   0003BD                     CWG1ISM         equ	957	;# 
  1506   0003BD                     CWG1DAT         equ	957	;# 
  1507   0003BE                     CWG1DBR         equ	958	;# 
  1508   0003BF                     CWG1DBF         equ	959	;# 
  1509   0003C0                     CWG1CON0        equ	960	;# 
  1510   0003C1                     CWG1CON1        equ	961	;# 
  1511   0003C2                     CWG1AS0         equ	962	;# 
  1512   0003C3                     CWG1AS1         equ	963	;# 
  1513   0003C4                     CWG1STR         equ	964	;# 
  1514   0003C5                     CWG2CLK         equ	965	;# 
  1515   0003C5                     CWG2CLKCON      equ	965	;# 
  1516   0003C6                     CWG2ISM         equ	966	;# 
  1517   0003C6                     CWG2DAT         equ	966	;# 
  1518   0003C7                     CWG2DBR         equ	967	;# 
  1519   0003C8                     CWG2DBF         equ	968	;# 
  1520   0003C9                     CWG2CON0        equ	969	;# 
  1521   0003CA                     CWG2CON1        equ	970	;# 
  1522   0003CB                     CWG2AS0         equ	971	;# 
  1523   0003CC                     CWG2AS1         equ	972	;# 
  1524   0003CD                     CWG2STR         equ	973	;# 
  1525   0003CE                     CWG3CLK         equ	974	;# 
  1526   0003CE                     CWG3CLKCON      equ	974	;# 
  1527   0003CF                     CWG3ISM         equ	975	;# 
  1528   0003CF                     CWG3DAT         equ	975	;# 
  1529   0003D0                     CWG3DBR         equ	976	;# 
  1530   0003D1                     CWG3DBF         equ	977	;# 
  1531   0003D2                     CWG3CON0        equ	978	;# 
  1532   0003D3                     CWG3CON1        equ	979	;# 
  1533   0003D4                     CWG3AS0         equ	980	;# 
  1534   0003D5                     CWG3AS1         equ	981	;# 
  1535   0003D6                     CWG3STR         equ	982	;# 
  1536   0003D7                     FVRCON          equ	983	;# 
  1537   0003D8                     ADCPCON         equ	984	;# 
  1538   0003D8                     ADCP            equ	984	;# 
  1539   0003D9                     ADLTH           equ	985	;# 
  1540   0003D9                     ADLTHL          equ	985	;# 
  1541   0003DA                     ADLTHH          equ	986	;# 
  1542   0003DB                     ADUTH           equ	987	;# 
  1543   0003DB                     ADUTHL          equ	987	;# 
  1544   0003DC                     ADUTHH          equ	988	;# 
  1545   0003DD                     ADERR           equ	989	;# 
  1546   0003DD                     ADERRL          equ	989	;# 
  1547   0003DE                     ADERRH          equ	990	;# 
  1548   0003DF                     ADSTPT          equ	991	;# 
  1549   0003DF                     ADSTPTL         equ	991	;# 
  1550   0003E0                     ADSTPTH         equ	992	;# 
  1551   0003E1                     ADFLTR          equ	993	;# 
  1552   0003E1                     ADFLTRL         equ	993	;# 
  1553   0003E2                     ADFLTRH         equ	994	;# 
  1554   0003E3                     ADACC           equ	995	;# 
  1555   0003E3                     ADACCL          equ	995	;# 
  1556   0003E4                     ADACCH          equ	996	;# 
  1557   0003E5                     ADACCU          equ	997	;# 
  1558   0003E6                     ADCNT           equ	998	;# 
  1559   0003E7                     ADRPT           equ	999	;# 
  1560   0003E8                     ADPREV          equ	1000	;# 
  1561   0003E8                     ADPREVL         equ	1000	;# 
  1562   0003E9                     ADPREVH         equ	1001	;# 
  1563   0003EA                     ADRES           equ	1002	;# 
  1564   0003EA                     ADRESL          equ	1002	;# 
  1565   0003EB                     ADRESH          equ	1003	;# 
  1566   0003EC                     ADPCH           equ	1004	;# 
  1567   0003EE                     ADACQ           equ	1006	;# 
  1568   0003EE                     ADACQL          equ	1006	;# 
  1569   0003EF                     ADACQH          equ	1007	;# 
  1570   0003F0                     ADCAP           equ	1008	;# 
  1571   0003F1                     ADPRE           equ	1009	;# 
  1572   0003F1                     ADPREL          equ	1009	;# 
  1573   0003F2                     ADPREH          equ	1010	;# 
  1574   0003F3                     ADCON0          equ	1011	;# 
  1575   0003F4                     ADCON1          equ	1012	;# 
  1576   0003F5                     ADCON2          equ	1013	;# 
  1577   0003F6                     ADCON3          equ	1014	;# 
  1578   0003F7                     ADSTAT          equ	1015	;# 
  1579   0003F8                     ADREF           equ	1016	;# 
  1580   0003F9                     ADACT           equ	1017	;# 
  1581   0003FA                     ADCLK           equ	1018	;# 
  1582   000400                     ANSELA          equ	1024	;# 
  1583   000401                     WPUA            equ	1025	;# 
  1584   000402                     ODCONA          equ	1026	;# 
  1585   000403                     SLRCONA         equ	1027	;# 
  1586   000404                     INLVLA          equ	1028	;# 
  1587   000405                     IOCAP           equ	1029	;# 
  1588   000406                     IOCAN           equ	1030	;# 
  1589   000407                     IOCAF           equ	1031	;# 
  1590   000408                     ANSELB          equ	1032	;# 
  1591   000409                     WPUB            equ	1033	;# 
  1592   00040A                     ODCONB          equ	1034	;# 
  1593   00040B                     SLRCONB         equ	1035	;# 
  1594   00040C                     INLVLB          equ	1036	;# 
  1595   00040D                     IOCBP           equ	1037	;# 
  1596   00040E                     IOCBN           equ	1038	;# 
  1597   00040F                     IOCBF           equ	1039	;# 
  1598   000410                     ANSELC          equ	1040	;# 
  1599   000411                     WPUC            equ	1041	;# 
  1600   000412                     ODCONC          equ	1042	;# 
  1601   000413                     SLRCONC         equ	1043	;# 
  1602   000414                     INLVLC          equ	1044	;# 
  1603   000415                     IOCCP           equ	1045	;# 
  1604   000416                     IOCCN           equ	1046	;# 
  1605   000417                     IOCCF           equ	1047	;# 
  1606   000418                     ANSELD          equ	1048	;# 
  1607   000419                     WPUD            equ	1049	;# 
  1608   00041A                     ODCOND          equ	1050	;# 
  1609   00041B                     SLRCOND         equ	1051	;# 
  1610   00041C                     INLVLD          equ	1052	;# 
  1611   000420                     ANSELE          equ	1056	;# 
  1612   000421                     WPUE            equ	1057	;# 
  1613   000422                     ODCONE          equ	1058	;# 
  1614   000423                     SLRCONE         equ	1059	;# 
  1615   000424                     INLVLE          equ	1060	;# 
  1616   000425                     IOCEP           equ	1061	;# 
  1617   000426                     IOCEN           equ	1062	;# 
  1618   000427                     IOCEF           equ	1063	;# 
  1619   000428                     ANSELF          equ	1064	;# 
  1620   000429                     WPUF            equ	1065	;# 
  1621   00042A                     ODCONF          equ	1066	;# 
  1622   00042B                     SLRCONF         equ	1067	;# 
  1623   00042C                     INLVLF          equ	1068	;# 
  1624   000440                     NCO1ACC         equ	1088	;# 
  1625   000440                     NCO1ACCL        equ	1088	;# 
  1626   000441                     NCO1ACCH        equ	1089	;# 
  1627   000442                     NCO1ACCU        equ	1090	;# 
  1628   000443                     NCO1INC         equ	1091	;# 
  1629   000443                     NCO1INCL        equ	1091	;# 
  1630   000444                     NCO1INCH        equ	1092	;# 
  1631   000445                     NCO1INCU        equ	1093	;# 
  1632   000446                     NCO1CON         equ	1094	;# 
  1633   000447                     NCO1CLK         equ	1095	;# 
  1634   000448                     NCO2ACC         equ	1096	;# 
  1635   000448                     NCO2ACCL        equ	1096	;# 
  1636   000449                     NCO2ACCH        equ	1097	;# 
  1637   00044A                     NCO2ACCU        equ	1098	;# 
  1638   00044B                     NCO2INC         equ	1099	;# 
  1639   00044B                     NCO2INCL        equ	1099	;# 
  1640   00044C                     NCO2INCH        equ	1100	;# 
  1641   00044D                     NCO2INCU        equ	1101	;# 
  1642   00044E                     NCO2CON         equ	1102	;# 
  1643   00044F                     NCO2CLK         equ	1103	;# 
  1644   000450                     NCO3ACC         equ	1104	;# 
  1645   000450                     NCO3ACCL        equ	1104	;# 
  1646   000451                     NCO3ACCH        equ	1105	;# 
  1647   000452                     NCO3ACCU        equ	1106	;# 
  1648   000453                     NCO3INC         equ	1107	;# 
  1649   000453                     NCO3INCL        equ	1107	;# 
  1650   000454                     NCO3INCH        equ	1108	;# 
  1651   000455                     NCO3INCU        equ	1109	;# 
  1652   000456                     NCO3CON         equ	1110	;# 
  1653   000457                     NCO3CLK         equ	1111	;# 
  1654   000459                     IVTLOCK         equ	1113	;# 
  1655   00045A                     IVTAD           equ	1114	;# 
  1656   00045A                     IVTADL          equ	1114	;# 
  1657   00045B                     IVTADH          equ	1115	;# 
  1658   00045C                     IVTADU          equ	1116	;# 
  1659   00045D                     IVTBASE         equ	1117	;# 
  1660   00045D                     IVTBASEL        equ	1117	;# 
  1661   00045E                     IVTBASEH        equ	1118	;# 
  1662   00045F                     IVTBASEU        equ	1119	;# 
  1663   000460                     PWM1ERS         equ	1120	;# 
  1664   000461                     PWM1CLK         equ	1121	;# 
  1665   000462                     PWM1LDS         equ	1122	;# 
  1666   000463                     PWM1PR          equ	1123	;# 
  1667   000463                     PWM1PRL         equ	1123	;# 
  1668   000464                     PWM1PRH         equ	1124	;# 
  1669   000465                     PWM1CPRE        equ	1125	;# 
  1670   000466                     PWM1PIPOS       equ	1126	;# 
  1671   000467                     PWM1GIR         equ	1127	;# 
  1672   000468                     PWM1GIE         equ	1128	;# 
  1673   000469                     PWM1CON         equ	1129	;# 
  1674   00046A                     PWM1S1CFG       equ	1130	;# 
  1675   00046B                     PWM1S1P1        equ	1131	;# 
  1676   00046B                     PWM1S1P1L       equ	1131	;# 
  1677   00046C                     PWM1S1P1H       equ	1132	;# 
  1678   00046D                     PWM1S1P2        equ	1133	;# 
  1679   00046D                     PWM1S1P2L       equ	1133	;# 
  1680   00046E                     PWM1S1P2H       equ	1134	;# 
  1681   00046F                     PWM2ERS         equ	1135	;# 
  1682   000470                     PWM2CLK         equ	1136	;# 
  1683   000471                     PWM2LDS         equ	1137	;# 
  1684   000472                     PWM2PR          equ	1138	;# 
  1685   000472                     PWM2PRL         equ	1138	;# 
  1686   000473                     PWM2PRH         equ	1139	;# 
  1687   000474                     PWM2CPRE        equ	1140	;# 
  1688   000475                     PWM2PIPOS       equ	1141	;# 
  1689   000476                     PWM2GIR         equ	1142	;# 
  1690   000477                     PWM2GIE         equ	1143	;# 
  1691   000478                     PWM2CON         equ	1144	;# 
  1692   000479                     PWM2S1CFG       equ	1145	;# 
  1693   00047A                     PWM2S1P1        equ	1146	;# 
  1694   00047A                     PWM2S1P1L       equ	1146	;# 
  1695   00047B                     PWM2S1P1H       equ	1147	;# 
  1696   00047C                     PWM2S1P2        equ	1148	;# 
  1697   00047C                     PWM2S1P2L       equ	1148	;# 
  1698   00047D                     PWM2S1P2H       equ	1149	;# 
  1699   00047E                     PWM3ERS         equ	1150	;# 
  1700   00047F                     PWM3CLK         equ	1151	;# 
  1701   000480                     PWM3LDS         equ	1152	;# 
  1702   000481                     PWM3PR          equ	1153	;# 
  1703   000481                     PWM3PRL         equ	1153	;# 
  1704   000482                     PWM3PRH         equ	1154	;# 
  1705   000483                     PWM3CPRE        equ	1155	;# 
  1706   000484                     PWM3PIPOS       equ	1156	;# 
  1707   000485                     PWM3GIR         equ	1157	;# 
  1708   000486                     PWM3GIE         equ	1158	;# 
  1709   000487                     PWM3CON         equ	1159	;# 
  1710   000488                     PWM3S1CFG       equ	1160	;# 
  1711   000489                     PWM3S1P1        equ	1161	;# 
  1712   000489                     PWM3S1P1L       equ	1161	;# 
  1713   00048A                     PWM3S1P1H       equ	1162	;# 
  1714   00048B                     PWM3S1P2        equ	1163	;# 
  1715   00048B                     PWM3S1P2L       equ	1163	;# 
  1716   00048C                     PWM3S1P2H       equ	1164	;# 
  1717   00049C                     PWMLOAD         equ	1180	;# 
  1718   00049D                     PWMEN           equ	1181	;# 
  1719   00049E                     PIE0            equ	1182	;# 
  1720   00049F                     PIE1            equ	1183	;# 
  1721   0004A0                     PIE2            equ	1184	;# 
  1722   0004A1                     PIE3            equ	1185	;# 
  1723   0004A2                     PIE4            equ	1186	;# 
  1724   0004A3                     PIE5            equ	1187	;# 
  1725   0004A4                     PIE6            equ	1188	;# 
  1726   0004A5                     PIE7            equ	1189	;# 
  1727   0004A6                     PIE8            equ	1190	;# 
  1728   0004A7                     PIE9            equ	1191	;# 
  1729   0004A8                     PIE10           equ	1192	;# 
  1730   0004A9                     PIE11           equ	1193	;# 
  1731   0004AA                     PIE12           equ	1194	;# 
  1732   0004AB                     PIE13           equ	1195	;# 
  1733   0004AC                     PIE14           equ	1196	;# 
  1734   0004AD                     PIE15           equ	1197	;# 
  1735   0004AE                     PIR0            equ	1198	;# 
  1736   0004AF                     PIR1            equ	1199	;# 
  1737   0004B0                     PIR2            equ	1200	;# 
  1738   0004B1                     PIR3            equ	1201	;# 
  1739   0004B2                     PIR4            equ	1202	;# 
  1740   0004B3                     PIR5            equ	1203	;# 
  1741   0004B4                     PIR6            equ	1204	;# 
  1742   0004B5                     PIR7            equ	1205	;# 
  1743   0004B6                     PIR8            equ	1206	;# 
  1744   0004B7                     PIR9            equ	1207	;# 
  1745   0004B8                     PIR10           equ	1208	;# 
  1746   0004B9                     PIR11           equ	1209	;# 
  1747   0004BA                     PIR12           equ	1210	;# 
  1748   0004BB                     PIR13           equ	1211	;# 
  1749   0004BC                     PIR14           equ	1212	;# 
  1750   0004BD                     PIR15           equ	1213	;# 
  1751   0004BE                     LATA            equ	1214	;# 
  1752   0004BF                     LATB            equ	1215	;# 
  1753   0004C0                     LATC            equ	1216	;# 
  1754   0004C1                     LATD            equ	1217	;# 
  1755   0004C2                     LATE            equ	1218	;# 
  1756   0004C3                     LATF            equ	1219	;# 
  1757   0004C6                     TRISA           equ	1222	;# 
  1758   0004C7                     TRISB           equ	1223	;# 
  1759   0004C8                     TRISC           equ	1224	;# 
  1760   0004C9                     TRISD           equ	1225	;# 
  1761   0004CA                     TRISE           equ	1226	;# 
  1762   0004CB                     TRISF           equ	1227	;# 
  1763   0004CE                     PORTA           equ	1230	;# 
  1764   0004CF                     PORTB           equ	1231	;# 
  1765   0004D0                     PORTC           equ	1232	;# 
  1766   0004D1                     PORTD           equ	1233	;# 
  1767   0004D2                     PORTE           equ	1234	;# 
  1768   0004D3                     PORTF           equ	1235	;# 
  1769   0004D6                     INTCON0         equ	1238	;# 
  1770   0004D7                     INTCON1         equ	1239	;# 
  1771   0004D8                     STATUS          equ	1240	;# 
  1772   0004D9                     FSR2            equ	1241	;# 
  1773   0004D9                     FSR2L           equ	1241	;# 
  1774   0004DA                     FSR2H           equ	1242	;# 
  1775   0004DB                     PLUSW2          equ	1243	;# 
  1776   0004DC                     PREINC2         equ	1244	;# 
  1777   0004DD                     POSTDEC2        equ	1245	;# 
  1778   0004DE                     POSTINC2        equ	1246	;# 
  1779   0004DF                     INDF2           equ	1247	;# 
  1780   0004E0                     BSR             equ	1248	;# 
  1781   0004E1                     FSR1            equ	1249	;# 
  1782   0004E1                     FSR1L           equ	1249	;# 
  1783   0004E2                     FSR1H           equ	1250	;# 
  1784   0004E3                     PLUSW1          equ	1251	;# 
  1785   0004E4                     PREINC1         equ	1252	;# 
  1786   0004E5                     POSTDEC1        equ	1253	;# 
  1787   0004E6                     POSTINC1        equ	1254	;# 
  1788   0004E7                     INDF1           equ	1255	;# 
  1789   0004E8                     WREG            equ	1256	;# 
  1790   0004E9                     FSR0            equ	1257	;# 
  1791   0004E9                     FSR0L           equ	1257	;# 
  1792   0004EA                     FSR0H           equ	1258	;# 
  1793   0004EB                     PLUSW0          equ	1259	;# 
  1794   0004EC                     PREINC0         equ	1260	;# 
  1795   0004ED                     POSTDEC0        equ	1261	;# 
  1796   0004EE                     POSTINC0        equ	1262	;# 
  1797   0004EF                     INDF0           equ	1263	;# 
  1798   0004F0                     PCON0           equ	1264	;# 
  1799   0004F1                     PCON1           equ	1265	;# 
  1800   0004F2                     CPUDOZE         equ	1266	;# 
  1801   0004F3                     PROD            equ	1267	;# 
  1802   0004F3                     PRODL           equ	1267	;# 
  1803   0004F4                     PRODH           equ	1268	;# 
  1804   0004F5                     TABLAT          equ	1269	;# 
  1805   0004F6                     TBLPTR          equ	1270	;# 
  1806   0004F6                     TBLPTRL         equ	1270	;# 
  1807   0004F7                     TBLPTRH         equ	1271	;# 
  1808   0004F8                     TBLPTRU         equ	1272	;# 
  1809   0004F9                     PCLAT           equ	1273	;# 
  1810   0004F9                     PCL             equ	1273	;# 
  1811   0004FA                     PCLATH          equ	1274	;# 
  1812   0004FB                     PCLATU          equ	1275	;# 
  1813   0004FC                     STKPTR          equ	1276	;# 
  1814   0004FD                     TOS             equ	1277	;# 
  1815   0004FD                     TOSL            equ	1277	;# 
  1816   0004FE                     TOSH            equ	1278	;# 
  1817   0004FF                     TOSU            equ	1279	;# 
  1818   0000B3                     _OSCEN          set	179
  1819   0000B1                     _OSCFRQ         set	177
  1820   0000AD                     _OSCCON1        set	173
  1821   0003EA                     _ADRESL         set	1002
  1822   0003EB                     _ADRESH         set	1003
  1823   0003EC                     _ADPCH          set	1004
  1824   0003F3                     _ADCON0bits     set	1011
  1825   000428                     _ANSELFbits     set	1064
  1826   000418                     _ANSELD         set	1048
  1827   000400                     _ANSELAbits     set	1024
  1828   000408                     _ANSELBbits     set	1032
  1829   0004D1                     _PORTD          set	1233
  1830   0004C1                     _LATD           set	1217
  1831   0004C1                     _LATDbits       set	1217
  1832   0004C3                     _LATFbits       set	1219
  1833   0004CB                     _TRISFbits      set	1227
  1834   0004C9                     _TRISD          set	1225
  1835   0004C6                     _TRISAbits      set	1222
  1836   0004C7                     _TRISBbits      set	1223
  1837                           
  1838                           	psect	smallconst
  1839   002600                     __psmallconst:
  1840                           	callstack 0
  1841   002600  00                 	db	0
  1842   002601                     STR_1:
  1843   002601  4E                 	db	78	;'N'
  1844   002602  52                 	db	82	;'R'
  1845   002603  43                 	db	67	;'C'
  1846   002604  39                 	db	57	;'9'
  1847   002605  33                 	db	51	;'3'
  1848   002606  35                 	db	53	;'5'
  1849   002607  34                 	db	52	;'4'
  1850   002608  20                 	db	32
  1851   002609  4A                 	db	74	;'J'
  1852   00260A  75                 	db	117	;'u'
  1853   00260B  65                 	db	101	;'e'
  1854   00260C  20                 	db	32
  1855   00260D  36                 	db	54	;'6'
  1856   00260E  50                 	db	80	;'P'
  1857   00260F  4D                 	db	77	;'M'
  1858   002610  00                 	db	0
  1859   002611                     STR_2:
  1860   002611  4D                 	db	77	;'M'
  1861   002612  49                 	db	73	;'I'
  1862   002613  43                 	db	67	;'C'
  1863   002614  52                 	db	82	;'R'
  1864   002615  4F                 	db	79	;'O'
  1865   002616  20                 	db	32
  1866   002617  43                 	db	67	;'C'
  1867   002618  55                 	db	85	;'U'
  1868   002619  52                 	db	82	;'R'
  1869   00261A  49                 	db	73	;'I'
  1870   00261B  4F                 	db	79	;'O'
  1871   00261C  53                 	db	83	;'S'
  1872   00261D  49                 	db	73	;'I'
  1873   00261E  54                 	db	84	;'T'
  1874   00261F  59                 	db	89	;'Y'
  1875   002620  00                 	db	0
  1876   002621  41                 	db	65	;'A'
  1877   002622  4E                 	db	78	;'N'
  1878   002623  41                 	db	65	;'A'
  1879   002624  30                 	db	48	;'0'
  1880   002625  3A                 	db	58	;':'
  1881   002626  00                 	db	0
  1882   002627  00                 	db	0	; dummy byte at the end
  1883   002600                     __smallconst    set	__psmallconst
  1884   002600                     __mediumconst   set	__psmallconst
  1885   000001                     __activetblptr  equ	1
  1886                           
  1887                           ; #config settings
  1888                           
  1889                           	psect	cinit
  1890   0029AE                     __pcinit:
  1891                           	callstack 0
  1892   0029AE                     start_initialization:
  1893                           	callstack 0
  1894   0029AE                     __initialization:
  1895                           	callstack 0
  1896                           
  1897                           ; Clear objects allocated to COMRAM (2 bytes)
  1898   0029AE  6A0E               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1899   0029B0  6A0D               	clrf	__pbssCOMRAM& (0+255),c
  1900   0029B2                     end_of_initialization:
  1901                           	callstack 0
  1902   0029B2                     __end_of__initialization:
  1903                           	callstack 0
  1904   0029B2  0E00               	movlw	low (__Lsmallconst shr (0+16))
  1905   0029B4  6EF8               	movwf	tblptru,c
  1906   0029B6  0E26               	movlw	high __Lsmallconst
  1907   0029B8  6EF7               	movwf	tblptrh,c
  1908   0029BA  0100               	movlb	0
  1909   0029BC  EFBB  F014         	goto	_main	;jump to C main() function
  1910                           
  1911                           	psect	bssCOMRAM
  1912   00050D                     __pbssCOMRAM:
  1913                           	callstack 0
  1914   00050D                     _lectura_ADC:
  1915                           	callstack 0
  1916   00050D                     	ds	2
  1917                           
  1918                           	psect	cstackCOMRAM
  1919   000501                     __pcstackCOMRAM:
  1920                           	callstack 0
  1921   000501                     ?___lwmod:
  1922                           	callstack 0
  1923   000501                     ENVIA_NIBBLE@dato:
  1924                           	callstack 0
  1925   000501                     LEER_LCD@aux:
  1926                           	callstack 0
  1927   000501                     ___lwmod@dividend:
  1928                           	callstack 0
  1929   000501                     
  1930                           ; 1 bytes @ 0x0
  1931   000501                     	ds	1
  1932   000502                     ENVIA_CHAR@dato:
  1933                           	callstack 0
  1934   000502                     ENVIA_LCD_CMD@dato:
  1935                           	callstack 0
  1936   000502                     
  1937                           ; 1 bytes @ 0x1
  1938   000502                     	ds	1
  1939   000503                     ENVIA_CHAR@aux:
  1940                           	callstack 0
  1941   000503                     ENVIA_LCD_CMD@aux:
  1942                           	callstack 0
  1943   000503                     ___lwmod@divisor:
  1944                           	callstack 0
  1945                           
  1946                           ; 2 bytes @ 0x2
  1947   000503                     	ds	1
  1948   000504                     POS_CURSOR@columna:
  1949                           	callstack 0
  1950   000504                     CURSOR_ONOFF@estado:
  1951                           	callstack 0
  1952   000504                     ESCRIBE_MENSAJE@cadena:
  1953                           	callstack 0
  1954   000504                     ??_LCD_CONFIG:
  1955   000504                     
  1956                           ; 1 bytes @ 0x3
  1957   000504                     	ds	1
  1958   000505                     POS_CURSOR@fila:
  1959                           	callstack 0
  1960   000505                     ESCRIBE_MENSAJE@tam:
  1961                           	callstack 0
  1962   000505                     ___lwmod@counter:
  1963                           	callstack 0
  1964   000505                     ??_lcd_init:
  1965   000505                     
  1966                           ; 1 bytes @ 0x4
  1967   000505                     	ds	1
  1968   000506                     ?___lwdiv:
  1969                           	callstack 0
  1970   000506                     ___lwdiv@dividend:
  1971                           	callstack 0
  1972   000506                     ??_ESCRIBE_MENSAJE:
  1973                           
  1974                           ; 1 bytes @ 0x5
  1975   000506                     	ds	1
  1976   000507                     ESCRIBE_MENSAJE@i:
  1977                           	callstack 0
  1978                           
  1979                           ; 1 bytes @ 0x6
  1980   000507                     	ds	1
  1981   000508                     ___lwdiv@divisor:
  1982                           	callstack 0
  1983   000508                     ??_pantallazo:
  1984                           
  1985                           ; 1 bytes @ 0x7
  1986   000508                     	ds	2
  1987   00050A                     ___lwdiv@quotient:
  1988                           	callstack 0
  1989   00050A                     
  1990                           ; 1 bytes @ 0x9
  1991   00050A                     	ds	2
  1992   00050C                     ___lwdiv@counter:
  1993                           	callstack 0
  1994                           
  1995                           ; 1 bytes @ 0xB
  1996   00050C                     	ds	1
  1997   00050D                     
  1998                           ; 1 bytes @ 0xC
  1999 ;;
  2000 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2001 ;;
  2002 ;; *************** function _main *****************
  2003 ;; Defined at:
  2004 ;;		line 56 in file "maincode01.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;		None
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;		None
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2022 ;;Total ram usage:        0 bytes
  2023 ;; Hardware stack levels required when called: 4
  2024 ;; This function calls:
  2025 ;;		_ENVIA_CHAR
  2026 ;;		_ESCRIBE_MENSAJE
  2027 ;;		_POS_CURSOR
  2028 ;;		___lwdiv
  2029 ;;		___lwmod
  2030 ;;		_configuro
  2031 ;;		_lcd_init
  2032 ;;		_pantallazo
  2033 ;; This function is called by:
  2034 ;;		Startup code after reset
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text0
  2039   002976                     __ptext0:
  2040                           	callstack 0
  2041   002976                     _main:
  2042                           	callstack 123
  2043   002976                     
  2044                           ;maincode01.c: 57:     configuro();
  2045   002976  ECA4  F014         	call	_configuro	;wreg free
  2046   00297A                     
  2047                           ;maincode01.c: 58:     lcd_init();
  2048   00297A  EC74  F014         	call	_lcd_init	;wreg free
  2049   00297E                     
  2050                           ;maincode01.c: 59:     pantallazo();
  2051   00297E  ECE9  F013         	call	_pantallazo	;wreg free
  2052   002982                     
  2053                           ;maincode01.c: 60:     LATFbits.LATF0 = 1;
  2054   002982  80C3               	bsf	195,0,c	;volatile
  2055   002984                     
  2056                           ;maincode01.c: 62:         ADCON0bits.GO_nDONE = 1;
  2057   002984  0103               	movlb	3	; () banked
  2058   002986  81F3               	bsf	243,0,b	;volatile
  2059   002988                     l65:
  2060                           
  2061                           ; BSR set to: 3
  2062   002988  81F3               	bsf	243,0,b	;volatile
  2063   00298A  EFC4  F014         	goto	l65
  2064   00298E  EFFE  F0FF         	goto	start
  2065   002992                     __end_of_main:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _pantallazo *****************
  2069 ;; Defined at:
  2070 ;;		line 45 in file "maincode01.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2086 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2087 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2088 ;;Total ram usage:        2 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; Hardware stack levels required when called: 3
  2091 ;; This function calls:
  2092 ;;		_BORRAR_LCD
  2093 ;;		_ESCRIBE_MENSAJE
  2094 ;;		_POS_CURSOR
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text1
  2101   0027D2                     __ptext1:
  2102                           	callstack 0
  2103   0027D2                     _pantallazo:
  2104                           	callstack 123
  2105   0027D2                     
  2106                           ;maincode01.c: 46:     POS_CURSOR(1,0);
  2107   0027D2  0E00               	movlw	0
  2108   0027D4  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2109   0027D6  0E01               	movlw	1
  2110   0027D8  EC0D  F014         	call	_POS_CURSOR
  2111   0027DC                     
  2112                           ;maincode01.c: 47:     ESCRIBE_MENSAJE("NRC9354 Jue 6PM", 15);
  2113   0027DC  0E01               	movlw	low STR_1
  2114   0027DE  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2115   0027E0  0E0F               	movlw	15
  2116   0027E2  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2117   0027E4  EC5C  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2118   0027E8                     
  2119                           ;maincode01.c: 48:     POS_CURSOR(2,0);
  2120   0027E8  0E00               	movlw	0
  2121   0027EA  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2122   0027EC  0E02               	movlw	2
  2123   0027EE  EC0D  F014         	call	_POS_CURSOR
  2124                           
  2125                           ;maincode01.c: 49:     ESCRIBE_MENSAJE("MICRO CURIOSITY", 15);
  2126   0027F2  0E11               	movlw	low STR_2
  2127   0027F4  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2128   0027F6  0E0F               	movlw	15
  2129   0027F8  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2130   0027FA  EC5C  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2131   0027FE                     
  2132                           ;maincode01.c: 50:     _delay((unsigned long)((3000)*(32000000UL/4000.0)));
  2133   0027FE  0E7A               	movlw	122
  2134   002800  6E09               	movwf	(??_pantallazo+1)^(0+1280),c
  2135   002802  0EC1               	movlw	193
  2136   002804  6E08               	movwf	??_pantallazo^(0+1280),c
  2137   002806  0E82               	movlw	130
  2138   002808                     u277:
  2139   002808  2EE8               	decfsz	wreg,f,c
  2140   00280A  D7FE               	bra	u277
  2141   00280C  2E08               	decfsz	??_pantallazo^(0+1280),f,c
  2142   00280E  D7FC               	bra	u277
  2143   002810  2E09               	decfsz	(??_pantallazo+1)^(0+1280),f,c
  2144   002812  D7FA               	bra	u277
  2145   002814                     
  2146                           ;maincode01.c: 51:     BORRAR_LCD();
  2147   002814  ECE4  F014         	call	_BORRAR_LCD	;wreg free
  2148   002818  0012               	return		;funcret
  2149   00281A                     __end_of_pantallazo:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function _POS_CURSOR *****************
  2153 ;; Defined at:
  2154 ;;		line 6 in file "LCD.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  fila            1    wreg     unsigned char 
  2157 ;;  columna         1    3[COMRAM] unsigned char 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  fila            1    4[COMRAM] unsigned char 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, status,0, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2169 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2173 ;;Total ram usage:        2 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 2
  2176 ;; This function calls:
  2177 ;;		_ENVIA_LCD_CMD
  2178 ;; This function is called by:
  2179 ;;		_pantallazo
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text2
  2185   00281A                     __ptext2:
  2186                           	callstack 0
  2187   00281A                     _POS_CURSOR:
  2188                           	callstack 123
  2189                           
  2190                           ;incstack = 0
  2191                           ;POS_CURSOR@fila stored from wreg
  2192   00281A  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  2193   00281C                     
  2194                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2195   00281C  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  2196   00281E  A4D8               	btfss	status,2,c
  2197   002820  EF14  F014         	goto	u181
  2198   002824  EF16  F014         	goto	u180
  2199   002828                     u181:
  2200   002828  EF1C  F014         	goto	l1106
  2201   00282C                     u180:
  2202   00282C                     
  2203                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2204   00282C  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2205   00282E  0F80               	addlw	128
  2206   002830  EC43  F014         	call	_ENVIA_LCD_CMD
  2207                           
  2208                           ;LCD.c: 11:  }
  2209   002834  EF29  F014         	goto	l94
  2210   002838                     l1106:
  2211   002838  0E02               	movlw	2
  2212   00283A  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2213   00283C  A4D8               	btfss	status,2,c
  2214   00283E  EF23  F014         	goto	u191
  2215   002842  EF25  F014         	goto	u190
  2216   002846                     u191:
  2217   002846  EF29  F014         	goto	l94
  2218   00284A                     u190:
  2219   00284A                     
  2220                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2221   00284A  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2222   00284C  0FC0               	addlw	192
  2223   00284E  EC43  F014         	call	_ENVIA_LCD_CMD
  2224   002852                     l94:
  2225   002852  0012               	return		;funcret
  2226   002854                     __end_of_POS_CURSOR:
  2227                           	callstack 0
  2228                           
  2229 ;; *************** function _ESCRIBE_MENSAJE *****************
  2230 ;; Defined at:
  2231 ;;		line 41 in file "LCD.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2234 ;;		 -> STR_3(6), STR_2(16), STR_1(16), 
  2235 ;;  tam             1    4[COMRAM] unsigned char 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  i               1    6[COMRAM] unsigned char 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2249 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2250 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2251 ;;Total ram usage:        4 bytes
  2252 ;; Hardware stack levels used: 1
  2253 ;; Hardware stack levels required when called: 2
  2254 ;; This function calls:
  2255 ;;		_ENVIA_CHAR
  2256 ;; This function is called by:
  2257 ;;		_pantallazo
  2258 ;;		_main
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text3
  2263   0028B8                     __ptext3:
  2264                           	callstack 0
  2265   0028B8                     _ESCRIBE_MENSAJE:
  2266                           	callstack 123
  2267   0028B8                     
  2268                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2269   0028B8  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2270                           
  2271                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2272   0028BA  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  2273   0028BC  EF6A  F014         	goto	l1116
  2274   0028C0                     l1112:
  2275                           
  2276                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2277   0028C0  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  2278   0028C2  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2279   0028C4  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  2280   0028C6  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2281   0028CA                     	if	0	;There is only one active tblptr byte
  2282   0028CA                     	endif
  2283   0028CA                     	if	0	;tblptru may be non-zero
  2284   0028CA                     	endif
  2285   0028CA                     	if	0	;tblptru may be non-zero
  2286   0028CA                     	endif
  2287   0028CA  0008               	tblrd		*
  2288   0028CC  50F5               	movf	tablat,w,c
  2289   0028CE  EC2A  F014         	call	_ENVIA_CHAR
  2290   0028D2                     
  2291                           ;LCD.c: 47:  }
  2292   0028D2  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  2293   0028D4                     l1116:
  2294   0028D4  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  2295   0028D6  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2296   0028D8  A0D8               	btfss	status,0,c
  2297   0028DA  EF71  F014         	goto	u201
  2298   0028DE  EF73  F014         	goto	u200
  2299   0028E2                     u201:
  2300   0028E2  EF60  F014         	goto	l1112
  2301   0028E6                     u200:
  2302   0028E6  0012               	return		;funcret
  2303   0028E8                     __end_of_ESCRIBE_MENSAJE:
  2304                           	callstack 0
  2305                           
  2306 ;; *************** function _ENVIA_CHAR *****************
  2307 ;; Defined at:
  2308 ;;		line 50 in file "LCD.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  dato            1    wreg     unsigned char 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  dato            1    1[COMRAM] unsigned char 
  2313 ;;  aux             1    2[COMRAM] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, status,2, status,0, cstack
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2324 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2327 ;;Total ram usage:        2 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; Hardware stack levels required when called: 1
  2330 ;; This function calls:
  2331 ;;		_ENVIA_NIBBLE
  2332 ;;		_LEER_LCD
  2333 ;; This function is called by:
  2334 ;;		_main
  2335 ;;		_ESCRIBE_MENSAJE
  2336 ;;		_GENERACARACTER
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text4
  2341   002854                     __ptext4:
  2342                           	callstack 0
  2343   002854                     _ENVIA_CHAR:
  2344                           	callstack 123
  2345                           
  2346                           ;incstack = 0
  2347                           ;ENVIA_CHAR@dato stored from wreg
  2348   002854  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2349   002856                     
  2350                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2351   002856  80C1               	bsf	193,0,c	;volatile
  2352   002858                     
  2353                           ;LCD.c: 54:  LEER_LCD();
  2354   002858  EC4E  F013         	call	_LEER_LCD	;wreg free
  2355   00285C                     
  2356                           ;LCD.c: 55:  TRISD = 0x00;
  2357   00285C  6AC9               	clrf	201,c	;volatile
  2358   00285E                     
  2359                           ;LCD.c: 56:         _delay(1200);
  2360   00285E  0EF0               	movlw	240
  2361   002860                     u287:
  2362   002860  D000               	nop2	
  2363   002862  2EE8               	decfsz	wreg,f,c
  2364   002864  D7FD               	bra	u287
  2365   002866                     
  2366                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2367   002866  92C1               	bcf	193,1,c	;volatile
  2368   002868                     
  2369                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2370   002868  94C1               	bcf	193,2,c	;volatile
  2371   00286A                     
  2372                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2373   00286A  80C1               	bsf	193,0,c	;volatile
  2374   00286C                     
  2375                           ;LCD.c: 61:  aux = dato & 0xF0;
  2376   00286C  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2377   00286E  0BF0               	andlw	240
  2378   002870  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2379   002872                     
  2380                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2381   002872  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2382   002874  ECC9  F014         	call	_ENVIA_NIBBLE
  2383   002878                     
  2384                           ;LCD.c: 63:  aux = dato << 4;
  2385   002878  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2386   00287A  0BF0               	andlw	240
  2387   00287C  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2388   00287E                     
  2389                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2390   00287E  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2391   002880  ECC9  F014         	call	_ENVIA_NIBBLE
  2392   002884  0012               	return		;funcret
  2393   002886                     __end_of_ENVIA_CHAR:
  2394                           	callstack 0
  2395                           
  2396 ;; *************** function _lcd_init *****************
  2397 ;; Defined at:
  2398 ;;		line 33 in file "maincode01.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      void 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2415 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2416 ;;Total ram usage:        1 bytes
  2417 ;; Hardware stack levels used: 1
  2418 ;; Hardware stack levels required when called: 3
  2419 ;; This function calls:
  2420 ;;		_BORRAR_LCD
  2421 ;;		_CURSOR_HOME
  2422 ;;		_CURSOR_ONOFF
  2423 ;;		_LCD_CONFIG
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text5
  2430   0028E8                     __ptext5:
  2431                           	callstack 0
  2432   0028E8                     _lcd_init:
  2433                           	callstack 123
  2434   0028E8                     
  2435                           ;maincode01.c: 34:     TRISD = 0x00;
  2436   0028E8  6AC9               	clrf	201,c	;volatile
  2437                           
  2438                           ;maincode01.c: 35:     ANSELD = 0x00;
  2439   0028EA  0104               	movlb	4	; () banked
  2440   0028EC  6B18               	clrf	24,b	;volatile
  2441   0028EE                     
  2442                           ; BSR set to: 4
  2443                           ;maincode01.c: 36:     LCD_CONFIG();
  2444   0028EE  ECB9  F013         	call	_LCD_CONFIG	;wreg free
  2445   0028F2                     
  2446                           ;maincode01.c: 37:     _delay((unsigned long)((17)*(32000000UL/4000.0)));
  2447   0028F2  0EB1               	movlw	177
  2448   0028F4  6E05               	movwf	??_lcd_init^(0+1280),c
  2449   0028F6  0E9E               	movlw	158
  2450   0028F8                     u297:
  2451   0028F8  2EE8               	decfsz	wreg,f,c
  2452   0028FA  D7FE               	bra	u297
  2453   0028FC  2E05               	decfsz	??_lcd_init^(0+1280),f,c
  2454   0028FE  D7FC               	bra	u297
  2455   002900  D000               	nop2	
  2456   002902                     
  2457                           ;maincode01.c: 38:     BORRAR_LCD();
  2458   002902  ECE4  F014         	call	_BORRAR_LCD	;wreg free
  2459   002906                     
  2460                           ;maincode01.c: 39:     CURSOR_HOME();
  2461   002906  ECE0  F014         	call	_CURSOR_HOME	;wreg free
  2462   00290A                     
  2463                           ;maincode01.c: 40:     CURSOR_ONOFF(1);
  2464   00290A  0E01               	movlw	1
  2465   00290C  EC8C  F014         	call	_CURSOR_ONOFF
  2466   002910                     
  2467                           ;maincode01.c: 41:     TRISFbits.TRISF0 = 0;
  2468   002910  90CB               	bcf	203,0,c	;volatile
  2469   002912                     
  2470                           ;maincode01.c: 42:     ANSELFbits.ANSELF0 = 0;
  2471   002912  0104               	movlb	4	; () banked
  2472   002914  9128               	bcf	40,0,b	;volatile
  2473   002916                     
  2474                           ; BSR set to: 4
  2475   002916  0012               	return		;funcret
  2476   002918                     __end_of_lcd_init:
  2477                           	callstack 0
  2478                           
  2479 ;; *************** function _LCD_CONFIG *****************
  2480 ;; Defined at:
  2481 ;;		line 72 in file "LCD.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, status,0, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2499 ;;Total ram usage:        1 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 2
  2502 ;; This function calls:
  2503 ;;		_ENVIA_LCD_CMD
  2504 ;;		_ENVIA_NIBBLE
  2505 ;; This function is called by:
  2506 ;;		_lcd_init
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text6
  2511   002772                     __ptext6:
  2512                           	callstack 0
  2513   002772                     _LCD_CONFIG:
  2514                           	callstack 123
  2515   002772                     
  2516                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  2517   002772  90C1               	bcf	193,0,c	;volatile
  2518                           
  2519                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  2520   002774  92C1               	bcf	193,1,c	;volatile
  2521   002776                     
  2522                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  2523   002776  0E30               	movlw	48
  2524   002778  ECC9  F014         	call	_ENVIA_NIBBLE
  2525   00277C                     
  2526                           ;LCD.c: 77:         _delay(24000);
  2527   00277C  0E20               	movlw	32
  2528   00277E  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2529   002780  0E2A               	movlw	42
  2530   002782                     u307:
  2531   002782  2EE8               	decfsz	wreg,f,c
  2532   002784  D7FE               	bra	u307
  2533   002786  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2534   002788  D7FC               	bra	u307
  2535   00278A                     
  2536                           ;LCD.c: 78:         _delay(24000);
  2537   00278A  0E20               	movlw	32
  2538   00278C  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2539   00278E  0E2A               	movlw	42
  2540   002790                     u317:
  2541   002790  2EE8               	decfsz	wreg,f,c
  2542   002792  D7FE               	bra	u317
  2543   002794  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2544   002796  D7FC               	bra	u317
  2545                           
  2546                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  2547   002798  0E30               	movlw	48
  2548   00279A  ECC9  F014         	call	_ENVIA_NIBBLE
  2549   00279E                     
  2550                           ;LCD.c: 83:  _delay(1200);
  2551   00279E  0EF0               	movlw	240
  2552   0027A0                     u327:
  2553   0027A0  D000               	nop2	
  2554   0027A2  2EE8               	decfsz	wreg,f,c
  2555   0027A4  D7FD               	bra	u327
  2556   0027A6                     
  2557                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  2558   0027A6  0E30               	movlw	48
  2559   0027A8  ECC9  F014         	call	_ENVIA_NIBBLE
  2560   0027AC                     
  2561                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  2562   0027AC  0E20               	movlw	32
  2563   0027AE  ECC9  F014         	call	_ENVIA_NIBBLE
  2564   0027B2                     
  2565                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  2566   0027B2  0E01               	movlw	1
  2567   0027B4  EC43  F014         	call	_ENVIA_LCD_CMD
  2568   0027B8                     
  2569                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  2570   0027B8  0E28               	movlw	40
  2571   0027BA  EC43  F014         	call	_ENVIA_LCD_CMD
  2572   0027BE                     
  2573                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  2574   0027BE  0E0F               	movlw	15
  2575   0027C0  EC43  F014         	call	_ENVIA_LCD_CMD
  2576   0027C4                     
  2577                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  2578   0027C4  0E06               	movlw	6
  2579   0027C6  EC43  F014         	call	_ENVIA_LCD_CMD
  2580   0027CA                     
  2581                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  2582   0027CA  0E01               	movlw	1
  2583   0027CC  EC43  F014         	call	_ENVIA_LCD_CMD
  2584   0027D0  0012               	return		;funcret
  2585   0027D2                     __end_of_LCD_CONFIG:
  2586                           	callstack 0
  2587                           
  2588 ;; *************** function _CURSOR_ONOFF *****************
  2589 ;; Defined at:
  2590 ;;		line 35 in file "LCD.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  estado          1    wreg     unsigned char 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  estado          1    3[COMRAM] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2607 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2608 ;;Total ram usage:        1 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 2
  2611 ;; This function calls:
  2612 ;;		_ENVIA_LCD_CMD
  2613 ;; This function is called by:
  2614 ;;		_lcd_init
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text7
  2619   002918                     __ptext7:
  2620                           	callstack 0
  2621   002918                     _CURSOR_ONOFF:
  2622                           	callstack 123
  2623                           
  2624                           ;incstack = 0
  2625                           ;CURSOR_ONOFF@estado stored from wreg
  2626   002918  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  2627   00291A                     
  2628                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  2629   00291A  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  2630   00291C  A4D8               	btfss	status,2,c
  2631   00291E  EF93  F014         	goto	u21
  2632   002922  EF95  F014         	goto	u20
  2633   002926                     u21:
  2634   002926  EF98  F014         	goto	l942
  2635   00292A                     u20:
  2636   00292A  0E0E               	movlw	14
  2637   00292C  EC43  F014         	call	_ENVIA_LCD_CMD
  2638   002930                     l942:
  2639                           
  2640                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2641   002930  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  2642   002932  A4D8               	btfss	status,2,c
  2643   002934  EF9E  F014         	goto	u31
  2644   002938  EFA0  F014         	goto	u30
  2645   00293C                     u31:
  2646   00293C  EFA3  F014         	goto	l112
  2647   002940                     u30:
  2648   002940  0E0C               	movlw	12
  2649   002942  EC43  F014         	call	_ENVIA_LCD_CMD
  2650   002946                     l112:
  2651   002946  0012               	return		;funcret
  2652   002948                     __end_of_CURSOR_ONOFF:
  2653                           	callstack 0
  2654                           
  2655 ;; *************** function _CURSOR_HOME *****************
  2656 ;; Defined at:
  2657 ;;		line 30 in file "LCD.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;		None
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;		None
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      void 
  2664 ;; Registers used:
  2665 ;;		wreg, status,2, status,0, cstack
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2675 ;;Total ram usage:        0 bytes
  2676 ;; Hardware stack levels used: 1
  2677 ;; Hardware stack levels required when called: 2
  2678 ;; This function calls:
  2679 ;;		_ENVIA_LCD_CMD
  2680 ;; This function is called by:
  2681 ;;		_lcd_init
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text8
  2686   0029C0                     __ptext8:
  2687                           	callstack 0
  2688   0029C0                     _CURSOR_HOME:
  2689                           	callstack 123
  2690   0029C0                     
  2691                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  2692   0029C0  0E02               	movlw	2
  2693   0029C2  EC43  F014         	call	_ENVIA_LCD_CMD
  2694   0029C6  0012               	return		;funcret
  2695   0029C8                     __end_of_CURSOR_HOME:
  2696                           	callstack 0
  2697                           
  2698 ;; *************** function _BORRAR_LCD *****************
  2699 ;; Defined at:
  2700 ;;		line 67 in file "LCD.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2718 ;;Total ram usage:        0 bytes
  2719 ;; Hardware stack levels used: 1
  2720 ;; Hardware stack levels required when called: 2
  2721 ;; This function calls:
  2722 ;;		_ENVIA_LCD_CMD
  2723 ;; This function is called by:
  2724 ;;		_lcd_init
  2725 ;;		_pantallazo
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text9
  2730   0029C8                     __ptext9:
  2731                           	callstack 0
  2732   0029C8                     _BORRAR_LCD:
  2733                           	callstack 123
  2734   0029C8                     
  2735                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  2736   0029C8  0E01               	movlw	1
  2737   0029CA  EC43  F014         	call	_ENVIA_LCD_CMD
  2738   0029CE  0012               	return		;funcret
  2739   0029D0                     __end_of_BORRAR_LCD:
  2740                           	callstack 0
  2741                           
  2742 ;; *************** function _ENVIA_LCD_CMD *****************
  2743 ;; Defined at:
  2744 ;;		line 104 in file "LCD.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  dato            1    wreg     unsigned char 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  dato            1    1[COMRAM] unsigned char 
  2749 ;;  aux             1    2[COMRAM] unsigned char 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2760 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2763 ;;Total ram usage:        2 bytes
  2764 ;; Hardware stack levels used: 1
  2765 ;; Hardware stack levels required when called: 1
  2766 ;; This function calls:
  2767 ;;		_ENVIA_NIBBLE
  2768 ;;		_LEER_LCD
  2769 ;; This function is called by:
  2770 ;;		_POS_CURSOR
  2771 ;;		_CURSOR_HOME
  2772 ;;		_CURSOR_ONOFF
  2773 ;;		_BORRAR_LCD
  2774 ;;		_LCD_CONFIG
  2775 ;;		_BLINK_CURSOR
  2776 ;;		_DISPLAY_ONOFF
  2777 ;;		_GENERACARACTER
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text10
  2782   002886                     __ptext10:
  2783                           	callstack 0
  2784   002886                     _ENVIA_LCD_CMD:
  2785                           	callstack 123
  2786                           
  2787                           ;incstack = 0
  2788                           ;ENVIA_LCD_CMD@dato stored from wreg
  2789   002886  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  2790   002888                     
  2791                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2792   002888  90C1               	bcf	193,0,c	;volatile
  2793   00288A                     
  2794                           ;LCD.c: 108:  LEER_LCD();
  2795   00288A  EC4E  F013         	call	_LEER_LCD	;wreg free
  2796   00288E                     
  2797                           ;LCD.c: 109:  TRISD = 0b00000000;
  2798   00288E  6AC9               	clrf	201,c	;volatile
  2799   002890                     
  2800                           ;LCD.c: 111:         _delay(1200);
  2801   002890  0EF0               	movlw	240
  2802   002892                     u337:
  2803   002892  D000               	nop2	
  2804   002894  2EE8               	decfsz	wreg,f,c
  2805   002896  D7FD               	bra	u337
  2806   002898                     
  2807                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2808   002898  92C1               	bcf	193,1,c	;volatile
  2809   00289A                     
  2810                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2811   00289A  94C1               	bcf	193,2,c	;volatile
  2812   00289C                     
  2813                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2814   00289C  90C1               	bcf	193,0,c	;volatile
  2815   00289E                     
  2816                           ;LCD.c: 115:  aux = dato & 0xF0;
  2817   00289E  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2818   0028A0  0BF0               	andlw	240
  2819   0028A2  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2820   0028A4                     
  2821                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2822   0028A4  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2823   0028A6  ECC9  F014         	call	_ENVIA_NIBBLE
  2824   0028AA                     
  2825                           ;LCD.c: 117:  aux = dato<<4;
  2826   0028AA  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2827   0028AC  0BF0               	andlw	240
  2828   0028AE  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2829   0028B0                     
  2830                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2831   0028B0  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2832   0028B2  ECC9  F014         	call	_ENVIA_NIBBLE
  2833   0028B6  0012               	return		;funcret
  2834   0028B8                     __end_of_ENVIA_LCD_CMD:
  2835                           	callstack 0
  2836                           
  2837 ;; *************** function _LEER_LCD *****************
  2838 ;; Defined at:
  2839 ;;		line 121 in file "LCD.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;		None
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  aux             1    0[COMRAM] unsigned char 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      void 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2857 ;;Total ram usage:        1 bytes
  2858 ;; Hardware stack levels used: 1
  2859 ;; This function calls:
  2860 ;;		Nothing
  2861 ;; This function is called by:
  2862 ;;		_ENVIA_CHAR
  2863 ;;		_ENVIA_LCD_CMD
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text11
  2868   00269C                     __ptext11:
  2869                           	callstack 0
  2870   00269C                     _LEER_LCD:
  2871                           	callstack 123
  2872   00269C                     
  2873                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  2874   00269C  0EF8               	movlw	248
  2875   00269E  6EC9               	movwf	201,c	;volatile
  2876   0026A0                     
  2877                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  2878   0026A0  90C1               	bcf	193,0,c	;volatile
  2879   0026A2                     
  2880                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  2881   0026A2  82C1               	bsf	193,1,c	;volatile
  2882   0026A4                     
  2883                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  2884   0026A4  84C1               	bsf	193,2,c	;volatile
  2885   0026A6                     
  2886                           ;LCD.c: 128:         _delay(1200);
  2887   0026A6  0EF0               	movlw	240
  2888   0026A8                     u347:
  2889   0026A8  D000               	nop2	
  2890   0026AA  2EE8               	decfsz	wreg,f,c
  2891   0026AC  D7FD               	bra	u347
  2892   0026AE                     
  2893                           ;LCD.c: 130:  aux = PORTD;
  2894   0026AE  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2895   0026B2                     
  2896                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  2897   0026B2  94C1               	bcf	193,2,c	;volatile
  2898   0026B4                     
  2899                           ;LCD.c: 132:         _delay(1200);
  2900   0026B4  0EF0               	movlw	240
  2901   0026B6                     u357:
  2902   0026B6  D000               	nop2	
  2903   0026B8  2EE8               	decfsz	wreg,f,c
  2904   0026BA  D7FD               	bra	u357
  2905   0026BC                     
  2906                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  2907   0026BC  84C1               	bsf	193,2,c	;volatile
  2908   0026BE                     
  2909                           ;LCD.c: 135:         _delay(1200);
  2910   0026BE  0EF0               	movlw	240
  2911   0026C0                     u367:
  2912   0026C0  D000               	nop2	
  2913   0026C2  2EE8               	decfsz	wreg,f,c
  2914   0026C4  D7FD               	bra	u367
  2915   0026C6                     
  2916                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  2917   0026C6  94C1               	bcf	193,2,c	;volatile
  2918   0026C8                     l842:
  2919                           
  2920                           ;LCD.c: 138:  aux = aux & 0x80;
  2921   0026C8  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  2922   0026CA  0B80               	andlw	128
  2923   0026CC  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  2924                           
  2925                           ;LCD.c: 139:  while(aux == 0x80)
  2926   0026CE  EF7D  F013         	goto	l856
  2927   0026D2                     l137:
  2928                           
  2929                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  2930   0026D2  84C1               	bsf	193,2,c	;volatile
  2931   0026D4                     
  2932                           ;LCD.c: 142:             _delay(1200);
  2933   0026D4  0EF0               	movlw	240
  2934   0026D6                     u377:
  2935   0026D6  D000               	nop2	
  2936   0026D8  2EE8               	decfsz	wreg,f,c
  2937   0026DA  D7FD               	bra	u377
  2938   0026DC                     
  2939                           ;LCD.c: 143:             aux = PORTD;
  2940   0026DC  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2941   0026E0                     
  2942                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  2943   0026E0  94C1               	bcf	193,2,c	;volatile
  2944                           
  2945                           ;LCD.c: 145:             _delay(1200);
  2946   0026E2  0EF0               	movlw	240
  2947   0026E4                     u387:
  2948   0026E4  D000               	nop2	
  2949   0026E6  2EE8               	decfsz	wreg,f,c
  2950   0026E8  D7FD               	bra	u387
  2951   0026EA                     
  2952                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  2953   0026EA  84C1               	bsf	193,2,c	;volatile
  2954                           
  2955                           ;LCD.c: 147:             _delay(1200);
  2956   0026EC  0EF0               	movlw	240
  2957   0026EE                     u397:
  2958   0026EE  D000               	nop2	
  2959   0026F0  2EE8               	decfsz	wreg,f,c
  2960   0026F2  D7FD               	bra	u397
  2961   0026F4                     
  2962                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  2963   0026F4  94C1               	bcf	193,2,c	;volatile
  2964   0026F6  EF64  F013         	goto	l842
  2965   0026FA                     l856:
  2966                           
  2967                           ;LCD.c: 139:  while(aux == 0x80)
  2968   0026FA  0E80               	movlw	128
  2969   0026FC  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  2970   0026FE  B4D8               	btfsc	status,2,c
  2971   002700  EF84  F013         	goto	u11
  2972   002704  EF86  F013         	goto	u10
  2973   002708                     u11:
  2974   002708  EF69  F013         	goto	l137
  2975   00270C                     u10:
  2976   00270C  0012               	return		;funcret
  2977   00270E                     __end_of_LEER_LCD:
  2978                           	callstack 0
  2979                           
  2980 ;; *************** function _ENVIA_NIBBLE *****************
  2981 ;; Defined at:
  2982 ;;		line 93 in file "LCD.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  dato            1    wreg     unsigned char 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  dato            1    0[COMRAM] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2, status,0
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2999 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3000 ;;Total ram usage:        1 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_ENVIA_CHAR
  3006 ;;		_LCD_CONFIG
  3007 ;;		_ENVIA_LCD_CMD
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text12
  3012   002992                     __ptext12:
  3013                           	callstack 0
  3014   002992                     _ENVIA_NIBBLE:
  3015                           	callstack 123
  3016                           
  3017                           ;incstack = 0
  3018                           ;ENVIA_NIBBLE@dato stored from wreg
  3019   002992  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  3020   002994                     
  3021                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3022   002994  0E0F               	movlw	15
  3023   002996  16C1               	andwf	193,f,c	;volatile
  3024                           
  3025                           ;LCD.c: 96:  dato &= 0xF0;
  3026   002998  0EF0               	movlw	240
  3027   00299A  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  3028                           
  3029                           ;LCD.c: 97:  LATD|= dato;
  3030   00299C  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  3031   00299E  12C1               	iorwf	193,f,c	;volatile
  3032   0029A0                     
  3033                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3034   0029A0  84C1               	bsf	193,2,c	;volatile
  3035   0029A2                     
  3036                           ;LCD.c: 100:         _delay(1200);
  3037   0029A2  0EF0               	movlw	240
  3038   0029A4                     u407:
  3039   0029A4  D000               	nop2	
  3040   0029A6  2EE8               	decfsz	wreg,f,c
  3041   0029A8  D7FD               	bra	u407
  3042   0029AA                     
  3043                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3044   0029AA  94C1               	bcf	193,2,c	;volatile
  3045   0029AC  0012               	return		;funcret
  3046   0029AE                     __end_of_ENVIA_NIBBLE:
  3047                           	callstack 0
  3048                           
  3049 ;; *************** function _configuro *****************
  3050 ;; Defined at:
  3051 ;;		line 17 in file "maincode01.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;		None
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3069 ;;Total ram usage:        0 bytes
  3070 ;; Hardware stack levels used: 1
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_main
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text13
  3079   002948                     __ptext13:
  3080                           	callstack 0
  3081   002948                     _configuro:
  3082                           	callstack 126
  3083   002948                     
  3084                           ;maincode01.c: 18:     OSCCON1 = 0x60;
  3085   002948  0E60               	movlw	96
  3086   00294A  0100               	movlb	0	; () banked
  3087   00294C  6FAD               	movwf	173,b	;volatile
  3088                           
  3089                           ;maincode01.c: 19:     OSCFRQ = 0x06;
  3090   00294E  0E06               	movlw	6
  3091   002950  6FB1               	movwf	177,b	;volatile
  3092                           
  3093                           ;maincode01.c: 20:     OSCEN = 0x40;
  3094   002952  0E40               	movlw	64
  3095   002954  6FB3               	movwf	179,b	;volatile
  3096   002956                     
  3097                           ; BSR set to: 0
  3098                           ;maincode01.c: 21:     TRISBbits.TRISB0 = 1;
  3099   002956  80C7               	bsf	199,0,c	;volatile
  3100   002958                     
  3101                           ; BSR set to: 0
  3102                           ;maincode01.c: 22:     ANSELBbits.ANSELB0 = 0;
  3103   002958  0104               	movlb	4	; () banked
  3104   00295A  9108               	bcf	8,0,b	;volatile
  3105   00295C                     
  3106                           ; BSR set to: 4
  3107                           ;maincode01.c: 23:     TRISBbits.TRISB1 = 1;
  3108   00295C  82C7               	bsf	199,1,c	;volatile
  3109   00295E                     
  3110                           ; BSR set to: 4
  3111                           ;maincode01.c: 24:     ANSELBbits.ANSELB1 = 0;
  3112   00295E  9308               	bcf	8,1,b	;volatile
  3113   002960                     
  3114                           ; BSR set to: 4
  3115                           ;maincode01.c: 25:     TRISAbits.TRISA0 = 1;
  3116   002960  80C6               	bsf	198,0,c	;volatile
  3117   002962                     
  3118                           ; BSR set to: 4
  3119                           ;maincode01.c: 26:     ANSELAbits.ANSELA0 = 1;
  3120   002962  8100               	bsf	0,0,b	;volatile
  3121   002964                     
  3122                           ; BSR set to: 4
  3123                           ;maincode01.c: 27:     ADCON0bits.CS = 1;
  3124   002964  0103               	movlb	3	; () banked
  3125   002966  89F3               	bsf	243,4,b	;volatile
  3126   002968                     
  3127                           ; BSR set to: 3
  3128                           ;maincode01.c: 28:     ADPCH = 0x00;
  3129   002968  6BEC               	clrf	236,b	;volatile
  3130   00296A                     
  3131                           ; BSR set to: 3
  3132                           ;maincode01.c: 29:     ADCON0bits.ADON = 1;
  3133   00296A  8FF3               	bsf	243,7,b	;volatile
  3134                           
  3135                           ;maincode01.c: 30:     ADCON0bits.ADFM = 1;
  3136   00296C  51F3               	movf	243,w,b	;volatile
  3137   00296E  0BF3               	andlw	-13
  3138   002970  0904               	iorlw	4
  3139   002972  6FF3               	movwf	243,b	;volatile
  3140   002974                     
  3141                           ; BSR set to: 3
  3142   002974  0012               	return		;funcret
  3143   002976                     __end_of_configuro:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function ___lwmod *****************
  3147 ;; Defined at:
  3148 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  dividend        2    0[COMRAM] unsigned int 
  3151 ;;  divisor         2    2[COMRAM] unsigned int 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  counter         1    4[COMRAM] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  2    0[COMRAM] unsigned int 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3163 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3166 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3167 ;;Total ram usage:        5 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text14
  3177   00270E                     __ptext14:
  3178                           	callstack 0
  3179   00270E                     ___lwmod:
  3180                           	callstack 126
  3181   00270E  5003               	movf	___lwmod@divisor^(0+1280),w,c
  3182   002710  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  3183   002712  B4D8               	btfsc	status,2,c
  3184   002714  EF8E  F013         	goto	u241
  3185   002718  EF90  F013         	goto	u240
  3186   00271C                     u241:
  3187   00271C  EFB4  F013         	goto	l648
  3188   002720                     u240:
  3189   002720  0E01               	movlw	1
  3190   002722  6E05               	movwf	___lwmod@counter^(0+1280),c
  3191   002724  EF98  F013         	goto	l1156
  3192   002728                     l1154:
  3193   002728  90D8               	bcf	status,0,c
  3194   00272A  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  3195   00272C  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  3196   00272E  2A05               	incf	___lwmod@counter^(0+1280),f,c
  3197   002730                     l1156:
  3198   002730  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  3199   002732  EF9D  F013         	goto	u251
  3200   002736  EF9F  F013         	goto	u250
  3201   00273A                     u251:
  3202   00273A  EF94  F013         	goto	l1154
  3203   00273E                     u250:
  3204   00273E                     l1158:
  3205   00273E  5003               	movf	___lwmod@divisor^(0+1280),w,c
  3206   002740  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  3207   002742  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  3208   002744  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  3209   002746  A0D8               	btfss	status,0,c
  3210   002748  EFA8  F013         	goto	u261
  3211   00274C  EFAA  F013         	goto	u260
  3212   002750                     u261:
  3213   002750  EFAE  F013         	goto	l1162
  3214   002754                     u260:
  3215   002754  5003               	movf	___lwmod@divisor^(0+1280),w,c
  3216   002756  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  3217   002758  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  3218   00275A  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  3219   00275C                     l1162:
  3220   00275C  90D8               	bcf	status,0,c
  3221   00275E  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  3222   002760  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  3223   002762  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  3224   002764  EF9F  F013         	goto	l1158
  3225   002768                     l648:
  3226   002768  C501  F501         	movff	___lwmod@dividend,?___lwmod
  3227   00276C  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  3228   002770  0012               	return		;funcret
  3229   002772                     __end_of___lwmod:
  3230                           	callstack 0
  3231                           
  3232 ;; *************** function ___lwdiv *****************
  3233 ;; Defined at:
  3234 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  dividend        2    5[COMRAM] unsigned int 
  3237 ;;  divisor         2    7[COMRAM] unsigned int 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;  quotient        2    9[COMRAM] unsigned int 
  3240 ;;  counter         1   11[COMRAM] unsigned char 
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  2    5[COMRAM] unsigned int 
  3243 ;; Registers used:
  3244 ;;		wreg, status,2, status,0
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3250 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3251 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3253 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3254 ;;Total ram usage:        7 bytes
  3255 ;; Hardware stack levels used: 1
  3256 ;; This function calls:
  3257 ;;		Nothing
  3258 ;; This function is called by:
  3259 ;;		_main
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text15
  3264   002628                     __ptext15:
  3265                           	callstack 0
  3266   002628                     ___lwdiv:
  3267                           	callstack 126
  3268   002628  0E00               	movlw	0
  3269   00262A  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  3270   00262C  0E00               	movlw	0
  3271   00262E  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  3272   002630  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  3273   002632  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  3274   002634  B4D8               	btfsc	status,2,c
  3275   002636  EF1F  F013         	goto	u211
  3276   00263A  EF21  F013         	goto	u210
  3277   00263E                     u211:
  3278   00263E  EF49  F013         	goto	l638
  3279   002642                     u210:
  3280   002642  0E01               	movlw	1
  3281   002644  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  3282   002646  EF29  F013         	goto	l1136
  3283   00264A                     l1134:
  3284   00264A  90D8               	bcf	status,0,c
  3285   00264C  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  3286   00264E  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  3287   002650  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  3288   002652                     l1136:
  3289   002652  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  3290   002654  EF2E  F013         	goto	u221
  3291   002658  EF30  F013         	goto	u220
  3292   00265C                     u221:
  3293   00265C  EF25  F013         	goto	l1134
  3294   002660                     u220:
  3295   002660                     l1138:
  3296   002660  90D8               	bcf	status,0,c
  3297   002662  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  3298   002664  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  3299   002666  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  3300   002668  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  3301   00266A  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  3302   00266C  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  3303   00266E  A0D8               	btfss	status,0,c
  3304   002670  EF3C  F013         	goto	u231
  3305   002674  EF3E  F013         	goto	u230
  3306   002678                     u231:
  3307   002678  EF43  F013         	goto	l1146
  3308   00267C                     u230:
  3309   00267C  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  3310   00267E  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  3311   002680  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  3312   002682  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  3313   002684  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  3314   002686                     l1146:
  3315   002686  90D8               	bcf	status,0,c
  3316   002688  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  3317   00268A  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  3318   00268C  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  3319   00268E  EF30  F013         	goto	l1138
  3320   002692                     l638:
  3321   002692  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  3322   002696  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3323   00269A  0012               	return		;funcret
  3324   00269C                     __end_of___lwdiv:
  3325                           	callstack 0
  3326                           
  3327                           	psect	rparam
  3328   000001                     ___rparam_used  equ	1
  3329   000000                     ___param_bank   equ	0
  3330   000000                     __Lparam        equ	__Lrparam
  3331   000000                     __Hparam        equ	__Hrparam
  3332                           
  3333                           	psect	config
  3334                           
  3335                           ;Config register CONFIG1 @ 0x300000
  3336                           ;	External Oscillator Selection
  3337                           ;	FEXTOSC = OFF, Oscillator not enabled
  3338                           ;	Reset Oscillator Selection
  3339                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3340   300000                     	org	3145728
  3341   300000  FC                 	db	252
  3342                           
  3343                           ;Config register CONFIG2 @ 0x300001
  3344                           ;	Clock out Enable bit
  3345                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3346                           ;	PRLOCKED One-Way Set Enable bit
  3347                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3348                           ;	Clock Switch Enable bit
  3349                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3350                           ;	Fail-Safe Clock Monitor Enable bit
  3351                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3352   300001                     	org	3145729
  3353   300001  FF                 	db	255
  3354                           
  3355                           ;Config register CONFIG3 @ 0x300002
  3356                           ;	MCLR Enable bit
  3357                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3358                           ;	Power-up timer selection bits
  3359                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  3360                           ;	Multi-vector enable bit
  3361                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3362                           ;	IVTLOCK bit One-way set enable bit
  3363                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3364                           ;	Low Power BOR Enable bit
  3365                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3366                           ;	Brown-out Reset Enable bits
  3367                           ;	BOREN = OFF, Brown-out Reset disabled
  3368   300002                     	org	3145730
  3369   300002  3D                 	db	61
  3370                           
  3371                           ;Config register CONFIG4 @ 0x300003
  3372                           ;	Brown-out Reset Voltage Selection bits
  3373                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3374                           ;	ZCD Disable bit
  3375                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3376                           ;	PPSLOCK bit One-Way Set Enable bit
  3377                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3378                           ;	Stack Full/Underflow Reset Enable bit
  3379                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3380                           ;	Low Voltage Programming Enable bit
  3381                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3382                           ;	Extended Instruction Set Enable bit
  3383                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3384   300003                     	org	3145731
  3385   300003  DF                 	db	223
  3386                           
  3387                           ;Config register CONFIG5 @ 0x300004
  3388                           ;	WDT Period selection bits
  3389                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3390                           ;	WDT operating mode
  3391                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3392   300004                     	org	3145732
  3393   300004  9F                 	db	159
  3394                           
  3395                           ;Config register CONFIG6 @ 0x300005
  3396                           ;	WDT Window Select bits
  3397                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3398                           ;	WDT input clock selector
  3399                           ;	WDTCCS = SC, Software Control
  3400   300005                     	org	3145733
  3401   300005  FF                 	db	255
  3402                           
  3403                           ;Config register CONFIG7 @ 0x300006
  3404                           ;	Boot Block Size selection bits
  3405                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3406                           ;	Boot Block enable bit
  3407                           ;	BBEN = OFF, Boot block disabled
  3408                           ;	Storage Area Flash enable bit
  3409                           ;	SAFEN = OFF, SAF disabled
  3410                           ;	Background Debugger
  3411                           ;	DEBUG = OFF, Background Debugger disabled
  3412   300006                     	org	3145734
  3413   300006  FF                 	db	255
  3414                           
  3415                           ;Config register CONFIG8 @ 0x300007
  3416                           ;	Boot Block Write Protection bit
  3417                           ;	WRTB = OFF, Boot Block not Write protected
  3418                           ;	Configuration Register Write Protection bit
  3419                           ;	WRTC = OFF, Configuration registers not Write protected
  3420                           ;	Data EEPROM Write Protection bit
  3421                           ;	WRTD = OFF, Data EEPROM not Write protected
  3422                           ;	SAF Write protection bit
  3423                           ;	WRTSAF = OFF, SAF not Write Protected
  3424                           ;	Application Block write protection bit
  3425                           ;	WRTAPP = OFF, Application Block not write protected
  3426   300007                     	org	3145735
  3427   300007  FF                 	db	255
  3428                           
  3429                           ;Config register CONFIG10 @ 0x300009
  3430                           ;	PFM and Data EEPROM Code Protection bit
  3431                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3432   300009                     	org	3145737
  3433   300009  FF                 	db	255
  3434                           tosu	equ	0x4FF
  3435                           tosh	equ	0x4FE
  3436                           tosl	equ	0x4FD
  3437                           stkptr	equ	0x4FC
  3438                           pclatu	equ	0x4FB
  3439                           pclath	equ	0x4FA
  3440                           pcl	equ	0x4F9
  3441                           tblptru	equ	0x4F8
  3442                           tblptrh	equ	0x4F7
  3443                           tblptrl	equ	0x4F6
  3444                           tablat	equ	0x4F5
  3445                           prodh	equ	0x4F4
  3446                           prodl	equ	0x4F3
  3447                           indf0	equ	0x4EF
  3448                           postinc0	equ	0x4EE
  3449                           postdec0	equ	0x4ED
  3450                           preinc0	equ	0x4EC
  3451                           plusw0	equ	0x4EB
  3452                           fsr0h	equ	0x4EA
  3453                           fsr0l	equ	0x4E9
  3454                           wreg	equ	0x4E8
  3455                           indf1	equ	0x4E7
  3456                           postinc1	equ	0x4E6
  3457                           postdec1	equ	0x4E5
  3458                           preinc1	equ	0x4E4
  3459                           plusw1	equ	0x4E3
  3460                           fsr1h	equ	0x4E2
  3461                           fsr1l	equ	0x4E1
  3462                           bsr	equ	0x4E0
  3463                           indf2	equ	0x4DF
  3464                           postinc2	equ	0x4DE
  3465                           postdec2	equ	0x4DD
  3466                           preinc2	equ	0x4DC
  3467                           plusw2	equ	0x4DB
  3468                           fsr2h	equ	0x4DA
  3469                           fsr2l	equ	0x4D9
  3470                           status	equ	0x4D8

Data Sizes:
    Strings     38
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      14
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), STR_2(CODE[16]), STR_3(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    _pantallazo->_ESCRIBE_MENSAJE
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    ___lwdiv->___lwmod

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1982
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___lwdiv
                            ___lwmod
                          _configuro
                           _lcd_init
                         _pantallazo
 ---------------------------------------------------------------------------------
 (1) _pantallazo                                           2     2      0     562
                                              7 COMRAM     2     2      0
                         _BORRAR_LCD
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     225
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE                                      4     2      2     217
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     165
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     168
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _configuro
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _pantallazo
     _BORRAR_LCD
     _ESCRIBE_MENSAJE
     _POS_CURSOR

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh        831      0       0      0.0%
BITBIGSFRh         268      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBIGSFRlll       173      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     12      14     14.7%
BITBIGSFRllh         5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      14      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jun 12 19:23:22 2025

                     l51 2974                       l54 2916                       l57 2818  
                     l65 2988                       l94 2852                       u10 270C  
                     u11 2708                       u20 292A                       u21 2926  
                     u30 2940                       u31 293C            ENVIA_CHAR@aux 0503  
                    l112 2946                      l121 2884                      l130 29AC  
                    l107 29C6                      l124 29CE                      l133 28B6  
                    l118 28E6                      l127 27D0                      l137 26D2  
                    l139 270C                      l820 269C                      l900 289C  
                    l645 269A                      l638 2692                      l830 26AE  
                    l822 26A0                      l902 289E                      l910 2772  
                    l655 2770                      l648 2768                      l840 26C6  
                    l832 26B2                      l824 26A2                      l904 28A4  
                    l920 27A6                      l912 2776                      l850 26EA  
                    l842 26C8                      l834 26B4                      l826 26A4  
                    l906 28AA                      l930 27C4                      l922 27AC  
                    l914 277C                      l860 29A0                      l852 26F4  
                    l844 26D4                      l836 26BC                      l828 26A6  
                    l908 28B0                      l940 292A                      l932 27CA  
                    l924 27B2                      l916 278A                      l862 29A2  
                    l846 26DC                      l838 26BE                      l934 29C8  
                    l942 2930                      l926 27B8                      l918 279E  
                    l870 285C                      l864 29AA                      l848 26E0  
                    l856 26FA                      l936 29C0                      l944 2940  
                    l928 27BE                      l880 286C                      l872 285E  
                    l970 295E                      l962 2948                      l858 2994  
                    l890 288A                      l938 291A                      l882 2872  
                    l874 2866                      l866 2856                      l980 296A  
                    l972 2960                      l964 2956                      l892 288E  
                    l884 2878                      l876 2868                      l868 2858  
                    l974 2962                      l966 2958                      l894 2890  
                    l990 2906                      l982 28E8                      l886 287E  
                    l878 286A                      l976 2964                      l968 295C  
                    l896 2898                      l888 2888                      l992 290A  
                    l984 28EE                      l978 2968                      l898 289A  
                    l994 2910                      l986 28F2                      l996 2912  
                    l988 2902                      u200 28E6                      u201 28E2  
                    u210 2642                      u211 263E                      u220 2660  
                    u221 265C                      u230 267C                      u231 2678  
                    u240 2720                      u241 271C                      u250 273E  
                    u251 273A                      u307 2782                      u260 2754  
                    u180 282C                      u261 2750                      u317 2790  
                    u181 2828                      u190 284A                      u407 29A4  
                    u327 27A0                      u191 2846                      u337 2892  
                    u347 26A8                      u357 26B6                      u277 2808  
                    u367 26C0                      u287 2860                      u377 26D6  
                    u297 28F8                      u387 26E4                      u397 26EE  
            LEER_LCD@aux 0501                      wreg 04E8             ?_CURSOR_HOME 0501  
         ??_ENVIA_NIBBLE 0501           ENVIA_CHAR@dato 0502                     l1110 28B8  
                   l1102 281C                     l1112 28C0                     l1104 282C  
                   l1120 27DC                     l1130 2630                     l1114 28D2  
                   l1106 2838                     l1122 27E8                     l1140 2666  
                   l1132 2642                     l1116 28D4                     l1108 284A  
                   l1124 27FE                     l1142 267C                     l1134 264A  
                   l1150 270E                     l1126 2814                     l1118 27D2  
                   l1144 2684                     l1136 2652                     l1128 2628  
                   l1160 2754                     l1152 2720                     l1146 2686  
                   l1138 2660                     l1162 275C                     l1154 2728  
                   l1170 297E                     l1148 268C                     l1164 2762  
                   l1156 2730                     l1172 2982                     l1158 273E  
                   l1174 2984                     l1166 2976                     l1168 297A  
                   STR_1 2601                     STR_2 2611                     STR_3 2621  
                   _LATD 04C1                     _main 2976                     start FFFC  
          ?_CURSOR_ONOFF 0501             ___param_bank 0000          ??_ENVIA_LCD_CMD 0502  
       __end_of_LEER_LCD 270E                    ?_main 0501                    _ADPCH 03EC  
        __end_of___lwdiv 269C          __end_of___lwmod 2772                    _OSCEN 00B3  
                  _PORTD 04D1                    _TRISD 04C9              ?_POS_CURSOR 0504  
                  tablat 04F5                    status 04D8           ??_CURSOR_ONOFF 0504  
        __initialization 29AE             __end_of_main 2992          _ESCRIBE_MENSAJE 28B8  
                 ??_main 050D            __activetblptr 0001                   _ADRESH 03EB  
                 _ADRESL 03EA                   _ANSELD 0418                   _OSCFRQ 00B1  
       __end_of_lcd_init 2918     __end_of_ENVIA_NIBBLE 29AE                ??___lwdiv 050A  
              ??___lwmod 0505                   isa$std 0001             __mediumconst 2600  
                 tblptrh 04F7                   tblptrl 04F6                   tblptru 04F8  
           ??_BORRAR_LCD 0504                ?_LEER_LCD 0501               __accesstop 0560  
__end_of__initialization 29B2             ??_LCD_CONFIG 0504            ___rparam_used 0001  
           ??_ENVIA_CHAR 0502  __end_of_ESCRIBE_MENSAJE 28E8           __pcstackCOMRAM 0501  
     __end_of_BORRAR_LCD 29D0         ENVIA_LCD_CMD@aux 0503     __end_of_CURSOR_ONOFF 2948  
     __end_of_LCD_CONFIG 27D2       __end_of_ENVIA_CHAR 2886               ??_LEER_LCD 0501  
       ENVIA_NIBBLE@dato 0501                  _OSCCON1 00AD             ??_POS_CURSOR 0505  
              ?_lcd_init 0501                  __Hparam 0000                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 0504        __end_of_configuro 2976                  ___lwdiv 2628  
                ___lwmod 270E             __psmallconst 2600    __end_of_ENVIA_LCD_CMD 28B8  
                __pcinit 29AE       __end_of_POS_CURSOR 2854                  __ramtop 2600  
                __ptext0 2976                  __ptext1 27D2                  __ptext2 281A  
                __ptext3 28B8                  __ptext4 2854                  __ptext5 28E8  
                __ptext6 2772                  __ptext7 2918                  __ptext8 29C0  
                __ptext9 29C8               _pantallazo 27D2               ??_lcd_init 0505  
           _ENVIA_NIBBLE 2992     end_of_initialization 29B2                _TRISAbits 04C6  
              _TRISBbits 04C7                _TRISFbits 04CB             _CURSOR_ONOFF 2918  
     CURSOR_ONOFF@estado 0504            ??_CURSOR_HOME 0504      start_initialization 29AE  
            ?_pantallazo 0501        ENVIA_LCD_CMD@dato 0502              __pbssCOMRAM 050D  
    __end_of_CURSOR_HOME 29C8         ___lwdiv@dividend 0506                 ?___lwdiv 0506  
               ?___lwmod 0501                _configuro 2948              __smallconst 2600  
       ___lwdiv@quotient 050A                 _LEER_LCD 269C                 _LATDbits 04C1  
               _LATFbits 04C3         ESCRIBE_MENSAJE@i 0507           POS_CURSOR@fila 0505  
             ?_configuro 0501               _ADCON0bits 03F3              _CURSOR_HOME 29C0  
            _lectura_ADC 050D                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 2600               _ANSELAbits 0400               _ANSELBbits 0408  
             _ANSELFbits 0428             ??_pantallazo 0508          ___lwdiv@divisor 0508  
        ___lwdiv@counter 050C                 __ptext10 2886                 __ptext11 269C  
               __ptext12 2992                 __ptext13 2948                 __ptext14 270E  
               __ptext15 2628               _BORRAR_LCD 29C8                 _lcd_init 28E8  
             _LCD_CONFIG 2772               _ENVIA_CHAR 2854                 isa$xinst 0000  
     __end_of_pantallazo 281A            _ENVIA_LCD_CMD 2886              ??_configuro 0501  
      ??_ESCRIBE_MENSAJE 0506    ESCRIBE_MENSAJE@cadena 0504         ___lwmod@dividend 0501  
         ?_ENVIA_LCD_CMD 0501          ___lwmod@divisor 0503          ___lwmod@counter 0505  
            ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501               _POS_CURSOR 281A  
            ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 0505              ?_ENVIA_CHAR 0501  
      POS_CURSOR@columna 0504  
