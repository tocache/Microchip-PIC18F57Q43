

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Oct 23 12:24:09 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    24                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Generated 23/02/2024 GMT
    31                           ; 
    32                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F57Q43 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   0004E0                     bsr             equ	1248
    65   0004E9                     fsr0            equ	1257
    66   0004EA                     fsr0h           equ	1258
    67   0004E9                     fsr0l           equ	1257
    68   0004E1                     fsr1            equ	1249
    69   0004E2                     fsr1h           equ	1250
    70   0004E1                     fsr1l           equ	1249
    71   0004D9                     fsr2            equ	1241
    72   0004DA                     fsr2h           equ	1242
    73   0004D9                     fsr2l           equ	1241
    74   0004EF                     indf0           equ	1263
    75   0004E7                     indf1           equ	1255
    76   0004DF                     indf2           equ	1247
    77   0004D6                     intcon          equ	1238
    78   000041                     nvmcon          equ	65
    79   0004F9                     pcl             equ	1273
    80   0004FA                     pclath          equ	1274
    81   0004FB                     pclatu          equ	1275
    82   0004EB                     plusw0          equ	1259
    83   0004E3                     plusw1          equ	1251
    84   0004DB                     plusw2          equ	1243
    85   0004ED                     postdec0        equ	1261
    86   0004E5                     postdec1        equ	1253
    87   0004DD                     postdec2        equ	1245
    88   0004EE                     postinc0        equ	1262
    89   0004E6                     postinc1        equ	1254
    90   0004DE                     postinc2        equ	1246
    91   0004EC                     preinc0         equ	1260
    92   0004E4                     preinc1         equ	1252
    93   0004DC                     preinc2         equ	1244
    94   0004F3                     prod            equ	1267
    95   0004F4                     prodh           equ	1268
    96   0004F3                     prodl           equ	1267
    97   0004D8                     status          equ	1240
    98   0004F5                     tablat          equ	1269
    99   0004F6                     tblptr          equ	1270
   100   0004F7                     tblptrh         equ	1271
   101   0004F6                     tblptrl         equ	1270
   102   0004F8                     tblptru         equ	1272
   103   0004FD                     tosl            equ	1277
   104   0004E8                     wreg            equ	1256
   105   000039                     CLKRCON         equ	57	;# 
   106   00003A                     CLKRCLK         equ	58	;# 
   107   000040                     NVMCON0         equ	64	;# 
   108   000041                     NVMCON1         equ	65	;# 
   109   000042                     NVMLOCK         equ	66	;# 
   110   000043                     NVMADR          equ	67	;# 
   111   000043                     NVMADRL         equ	67	;# 
   112   000044                     NVMADRH         equ	68	;# 
   113   000045                     NVMADRU         equ	69	;# 
   114   000046                     NVMDAT          equ	70	;# 
   115   000046                     NVMDATL         equ	70	;# 
   116   000047                     NVMDATH         equ	71	;# 
   117   000048                     VREGCON         equ	72	;# 
   118   000049                     BORCON          equ	73	;# 
   119   00004A                     HLVDCON0        equ	74	;# 
   120   00004B                     HLVDCON1        equ	75	;# 
   121   00004C                     ZCDCON          equ	76	;# 
   122   000060                     PMD0            equ	96	;# 
   123   000061                     PMD1            equ	97	;# 
   124   000063                     PMD3            equ	99	;# 
   125   000064                     PMD4            equ	100	;# 
   126   000065                     PMD5            equ	101	;# 
   127   000066                     PMD6            equ	102	;# 
   128   000067                     PMD7            equ	103	;# 
   129   000068                     PMD8            equ	104	;# 
   130   00006A                     MD1CON0         equ	106	;# 
   131   00006B                     MD1CON1         equ	107	;# 
   132   00006C                     MD1SRC          equ	108	;# 
   133   00006D                     MD1CARL         equ	109	;# 
   134   00006E                     MD1CARH         equ	110	;# 
   135   00006F                     CMOUT           equ	111	;# 
   136   000070                     CM1CON0         equ	112	;# 
   137   000071                     CM1CON1         equ	113	;# 
   138   000072                     CM1NCH          equ	114	;# 
   139   000073                     CM1PCH          equ	115	;# 
   140   000074                     CM2CON0         equ	116	;# 
   141   000075                     CM2CON1         equ	117	;# 
   142   000076                     CM2NCH          equ	118	;# 
   143   000077                     CM2PCH          equ	119	;# 
   144   000078                     WDTCON0         equ	120	;# 
   145   000079                     WDTCON1         equ	121	;# 
   146   00007A                     WDTPS           equ	122	;# 
   147   00007A                     WDTPSL          equ	122	;# 
   148   00007B                     WDTPSH          equ	123	;# 
   149   00007C                     WDTTMR          equ	124	;# 
   150   00007D                     DAC1DAT         equ	125	;# 
   151   00007D                     DAC1DATL        equ	125	;# 
   152   00007F                     DAC1CON         equ	127	;# 
   153   000080                     SPI1RXB         equ	128	;# 
   154   000081                     SPI1TXB         equ	129	;# 
   155   000082                     SPI1TCNT        equ	130	;# 
   156   000082                     SPI1TCNTL       equ	130	;# 
   157   000083                     SPI1TCNTH       equ	131	;# 
   158   000084                     SPI1CON0        equ	132	;# 
   159   000085                     SPI1CON1        equ	133	;# 
   160   000086                     SPI1CON2        equ	134	;# 
   161   000087                     SPI1STATUS      equ	135	;# 
   162   000088                     SPI1TWIDTH      equ	136	;# 
   163   000089                     SPI1BAUD        equ	137	;# 
   164   00008A                     SPI1INTF        equ	138	;# 
   165   00008B                     SPI1INTE        equ	139	;# 
   166   00008C                     SPI1CLK         equ	140	;# 
   167   00008D                     SPI2RXB         equ	141	;# 
   168   00008E                     SPI2TXB         equ	142	;# 
   169   00008F                     SPI2TCNT        equ	143	;# 
   170   00008F                     SPI2TCNTL       equ	143	;# 
   171   000090                     SPI2TCNTH       equ	144	;# 
   172   000091                     SPI2CON0        equ	145	;# 
   173   000092                     SPI2CON1        equ	146	;# 
   174   000093                     SPI2CON2        equ	147	;# 
   175   000094                     SPI2STATUS      equ	148	;# 
   176   000095                     SPI2TWIDTH      equ	149	;# 
   177   000096                     SPI2BAUD        equ	150	;# 
   178   000097                     SPI2INTF        equ	151	;# 
   179   000098                     SPI2INTE        equ	152	;# 
   180   000099                     SPI2CLK         equ	153	;# 
   181   0000AC                     ACTCON          equ	172	;# 
   182   0000AD                     OSCCON1         equ	173	;# 
   183   0000AE                     OSCCON2         equ	174	;# 
   184   0000AF                     OSCCON3         equ	175	;# 
   185   0000B0                     OSCTUNE         equ	176	;# 
   186   0000B1                     OSCFRQ          equ	177	;# 
   187   0000B1                     OSCFREQ         equ	177	;# 
   188   0000B2                     OSCSTAT         equ	178	;# 
   189   0000B2                     OSCSTAT1        equ	178	;# 
   190   0000B3                     OSCEN           equ	179	;# 
   191   0000B4                     PRLOCK          equ	180	;# 
   192   0000B5                     SCANPR          equ	181	;# 
   193   0000B6                     DMA1PR          equ	182	;# 
   194   0000B7                     DMA2PR          equ	183	;# 
   195   0000B8                     DMA3PR          equ	184	;# 
   196   0000B9                     DMA4PR          equ	185	;# 
   197   0000BA                     DMA5PR          equ	186	;# 
   198   0000BB                     DMA6PR          equ	187	;# 
   199   0000BE                     MAINPR          equ	190	;# 
   200   0000BF                     ISRPR           equ	191	;# 
   201   0000D4                     CLCDATA         equ	212	;# 
   202   0000D5                     CLCSELECT       equ	213	;# 
   203   0000D6                     CLCnCON         equ	214	;# 
   204   0000D7                     CLCnPOL         equ	215	;# 
   205   0000D8                     CLCnSEL0        equ	216	;# 
   206   0000D9                     CLCnSEL1        equ	217	;# 
   207   0000DA                     CLCnSEL2        equ	218	;# 
   208   0000DB                     CLCnSEL3        equ	219	;# 
   209   0000DC                     CLCnGLS0        equ	220	;# 
   210   0000DD                     CLCnGLS1        equ	221	;# 
   211   0000DE                     CLCnGLS2        equ	222	;# 
   212   0000DF                     CLCnGLS3        equ	223	;# 
   213   0000E8                     DMASELECT       equ	232	;# 
   214   0000E9                     DMAnBUF         equ	233	;# 
   215   0000EA                     DMAnDCNT        equ	234	;# 
   216   0000EA                     DMAnDCNTL       equ	234	;# 
   217   0000EB                     DMAnDCNTH       equ	235	;# 
   218   0000EC                     DMAnDPTR        equ	236	;# 
   219   0000EC                     DMAnDPTRL       equ	236	;# 
   220   0000ED                     DMAnDPTRH       equ	237	;# 
   221   0000EE                     DMAnDSZ         equ	238	;# 
   222   0000EE                     DMAnDSZL        equ	238	;# 
   223   0000EF                     DMAnDSZH        equ	239	;# 
   224   0000F0                     DMAnDSA         equ	240	;# 
   225   0000F0                     DMAnDSAL        equ	240	;# 
   226   0000F1                     DMAnDSAH        equ	241	;# 
   227   0000F2                     DMAnSCNT        equ	242	;# 
   228   0000F2                     DMAnSCNTL       equ	242	;# 
   229   0000F3                     DMAnSCNTH       equ	243	;# 
   230   0000F4                     DMAnSPTR        equ	244	;# 
   231   0000F4                     DMAnSPTRL       equ	244	;# 
   232   0000F5                     DMAnSPTRH       equ	245	;# 
   233   0000F6                     DMAnSPTRU       equ	246	;# 
   234   0000F7                     DMAnSSZ         equ	247	;# 
   235   0000F7                     DMAnSSZL        equ	247	;# 
   236   0000F8                     DMAnSSZH        equ	248	;# 
   237   0000F9                     DMAnSSA         equ	249	;# 
   238   0000F9                     DMAnSSAL        equ	249	;# 
   239   0000FA                     DMAnSSAH        equ	250	;# 
   240   0000FB                     DMAnSSAU        equ	251	;# 
   241   0000FC                     DMAnCON0        equ	252	;# 
   242   0000FD                     DMAnCON1        equ	253	;# 
   243   0000FE                     DMAnAIRQ        equ	254	;# 
   244   0000FF                     DMAnSIRQ        equ	255	;# 
   245   000200                     PPSLOCK         equ	512	;# 
   246   000201                     RA0PPS          equ	513	;# 
   247   000202                     RA1PPS          equ	514	;# 
   248   000203                     RA2PPS          equ	515	;# 
   249   000204                     RA3PPS          equ	516	;# 
   250   000205                     RA4PPS          equ	517	;# 
   251   000206                     RA5PPS          equ	518	;# 
   252   000207                     RA6PPS          equ	519	;# 
   253   000208                     RA7PPS          equ	520	;# 
   254   000209                     RB0PPS          equ	521	;# 
   255   00020A                     RB1PPS          equ	522	;# 
   256   00020B                     RB2PPS          equ	523	;# 
   257   00020C                     RB3PPS          equ	524	;# 
   258   00020D                     RB4PPS          equ	525	;# 
   259   00020E                     RB5PPS          equ	526	;# 
   260   00020F                     RB6PPS          equ	527	;# 
   261   000210                     RB7PPS          equ	528	;# 
   262   000211                     RC0PPS          equ	529	;# 
   263   000212                     RC1PPS          equ	530	;# 
   264   000213                     RC2PPS          equ	531	;# 
   265   000214                     RC3PPS          equ	532	;# 
   266   000215                     RC4PPS          equ	533	;# 
   267   000216                     RC5PPS          equ	534	;# 
   268   000217                     RC6PPS          equ	535	;# 
   269   000218                     RC7PPS          equ	536	;# 
   270   000219                     RD0PPS          equ	537	;# 
   271   00021A                     RD1PPS          equ	538	;# 
   272   00021B                     RD2PPS          equ	539	;# 
   273   00021C                     RD3PPS          equ	540	;# 
   274   00021D                     RD4PPS          equ	541	;# 
   275   00021E                     RD5PPS          equ	542	;# 
   276   00021F                     RD6PPS          equ	543	;# 
   277   000220                     RD7PPS          equ	544	;# 
   278   000221                     RE0PPS          equ	545	;# 
   279   000222                     RE1PPS          equ	546	;# 
   280   000223                     RE2PPS          equ	547	;# 
   281   000229                     RF0PPS          equ	553	;# 
   282   00022A                     RF1PPS          equ	554	;# 
   283   00022B                     RF2PPS          equ	555	;# 
   284   00022C                     RF3PPS          equ	556	;# 
   285   00022D                     RF4PPS          equ	557	;# 
   286   00022E                     RF5PPS          equ	558	;# 
   287   00022F                     RF6PPS          equ	559	;# 
   288   000230                     RF7PPS          equ	560	;# 
   289   00023E                     INT0PPS         equ	574	;# 
   290   00023F                     INT1PPS         equ	575	;# 
   291   000240                     INT2PPS         equ	576	;# 
   292   000241                     T0CKIPPS        equ	577	;# 
   293   000242                     T1CKIPPS        equ	578	;# 
   294   000243                     T1GPPS          equ	579	;# 
   295   000244                     T3CKIPPS        equ	580	;# 
   296   000245                     T3GPPS          equ	581	;# 
   297   000246                     T5CKIPPS        equ	582	;# 
   298   000247                     T5GPPS          equ	583	;# 
   299   000248                     T2INPPS         equ	584	;# 
   300   000249                     T4INPPS         equ	585	;# 
   301   00024A                     T6INPPS         equ	586	;# 
   302   00024F                     CCP1PPS         equ	591	;# 
   303   000250                     CCP2PPS         equ	592	;# 
   304   000251                     CCP3PPS         equ	593	;# 
   305   000253                     PWM1ERSPPS      equ	595	;# 
   306   000254                     PWM2ERSPPS      equ	596	;# 
   307   000255                     PWM3ERSPPS      equ	597	;# 
   308   000257                     PWMIN0PPS       equ	599	;# 
   309   000258                     PWMIN1PPS       equ	600	;# 
   310   000259                     SMT1WINPPS      equ	601	;# 
   311   00025A                     SMT1SIGPPS      equ	602	;# 
   312   00025B                     CWG1PPS         equ	603	;# 
   313   00025B                     CWG1INPPS       equ	603	;# 
   314   00025C                     CWG2PPS         equ	604	;# 
   315   00025C                     CWG2INPPS       equ	604	;# 
   316   00025D                     CWG3PPS         equ	605	;# 
   317   00025D                     CWG3INPPS       equ	605	;# 
   318   00025E                     MD1CARLPPS      equ	606	;# 
   319   00025E                     MDCARLPPS       equ	606	;# 
   320   00025F                     MD1CARHPPS      equ	607	;# 
   321   00025F                     MDCARHPPS       equ	607	;# 
   322   000260                     MD1SRCPPS       equ	608	;# 
   323   000260                     MDSRCPPS        equ	608	;# 
   324   000261                     CLCIN0PPS       equ	609	;# 
   325   000262                     CLCIN1PPS       equ	610	;# 
   326   000263                     CLCIN2PPS       equ	611	;# 
   327   000264                     CLCIN3PPS       equ	612	;# 
   328   000265                     CLCIN4PPS       equ	613	;# 
   329   000266                     CLCIN5PPS       equ	614	;# 
   330   000267                     CLCIN6PPS       equ	615	;# 
   331   000268                     CLCIN7PPS       equ	616	;# 
   332   000269                     ADACTPPS        equ	617	;# 
   333   00026A                     SPI1SCKPPS      equ	618	;# 
   334   00026B                     SPI1SDIPPS      equ	619	;# 
   335   00026C                     SPI1SSPPS       equ	620	;# 
   336   00026D                     SPI2SCKPPS      equ	621	;# 
   337   00026E                     SPI2SDIPPS      equ	622	;# 
   338   00026F                     SPI2SSPPS       equ	623	;# 
   339   000270                     I2C1SDAPPS      equ	624	;# 
   340   000271                     I2C1SCLPPS      equ	625	;# 
   341   000272                     U1RXPPS         equ	626	;# 
   342   000273                     U1CTSPPS        equ	627	;# 
   343   000274                     U2RXPPS         equ	628	;# 
   344   000275                     U2CTSPPS        equ	629	;# 
   345   000276                     U3RXPPS         equ	630	;# 
   346   000277                     U3CTSPPS        equ	631	;# 
   347   000278                     U4RXPPS         equ	632	;# 
   348   000279                     U4CTSPPS        equ	633	;# 
   349   00027A                     U5RXPPS         equ	634	;# 
   350   00027B                     U5CTSPPS        equ	635	;# 
   351   000286                     RC4I2C          equ	646	;# 
   352   000287                     RC3I2C          equ	647	;# 
   353   000288                     RB2I2C          equ	648	;# 
   354   000289                     RB1I2C          equ	649	;# 
   355   00028B                     I2C1RXB         equ	651	;# 
   356   00028C                     I2C1TXB         equ	652	;# 
   357   00028D                     I2C1CNT         equ	653	;# 
   358   00028E                     I2C1ADB0        equ	654	;# 
   359   00028F                     I2C1ADB1        equ	655	;# 
   360   000290                     I2C1ADR0        equ	656	;# 
   361   000291                     I2C1ADR1        equ	657	;# 
   362   000292                     I2C1ADR2        equ	658	;# 
   363   000293                     I2C1ADR3        equ	659	;# 
   364   000294                     I2C1CON0        equ	660	;# 
   365   000295                     I2C1CON1        equ	661	;# 
   366   000296                     I2C1CON2        equ	662	;# 
   367   000297                     I2C1ERR         equ	663	;# 
   368   000298                     I2C1STAT0       equ	664	;# 
   369   000299                     I2C1STAT1       equ	665	;# 
   370   00029A                     I2C1PIR         equ	666	;# 
   371   00029B                     I2C1PIE         equ	667	;# 
   372   00029C                     I2C1CLK         equ	668	;# 
   373   00029D                     I2C1BTO         equ	669	;# 
   374   0002A1                     U1RXB           equ	673	;# 
   375   0002A1                     U1RXBL          equ	673	;# 
   376   0002A2                     U1RXCHK         equ	674	;# 
   377   0002A3                     U1TXB           equ	675	;# 
   378   0002A3                     U1TXBL          equ	675	;# 
   379   0002A4                     U1TXCHK         equ	676	;# 
   380   0002A5                     U1P1            equ	677	;# 
   381   0002A5                     U1P1L           equ	677	;# 
   382   0002A6                     U1P1H           equ	678	;# 
   383   0002A7                     U1P2            equ	679	;# 
   384   0002A7                     U1P2L           equ	679	;# 
   385   0002A8                     U1P2H           equ	680	;# 
   386   0002A9                     U1P3            equ	681	;# 
   387   0002A9                     U1P3L           equ	681	;# 
   388   0002AA                     U1P3H           equ	682	;# 
   389   0002AB                     U1CON0          equ	683	;# 
   390   0002AC                     U1CON1          equ	684	;# 
   391   0002AD                     U1CON2          equ	685	;# 
   392   0002AE                     U1BRG           equ	686	;# 
   393   0002AE                     U1BRGL          equ	686	;# 
   394   0002AF                     U1BRGH          equ	687	;# 
   395   0002B0                     U1FIFO          equ	688	;# 
   396   0002B1                     U1UIR           equ	689	;# 
   397   0002B2                     U1ERRIR         equ	690	;# 
   398   0002B3                     U1ERRIE         equ	691	;# 
   399   0002B4                     U2RXB           equ	692	;# 
   400   0002B4                     U2RXBL          equ	692	;# 
   401   0002B6                     U2TXB           equ	694	;# 
   402   0002B6                     U2TXBL          equ	694	;# 
   403   0002B8                     U2P1            equ	696	;# 
   404   0002B8                     U2P1L           equ	696	;# 
   405   0002BA                     U2P2            equ	698	;# 
   406   0002BA                     U2P2L           equ	698	;# 
   407   0002BC                     U2P3            equ	700	;# 
   408   0002BC                     U2P3L           equ	700	;# 
   409   0002BE                     U2CON0          equ	702	;# 
   410   0002BF                     U2CON1          equ	703	;# 
   411   0002C0                     U2CON2          equ	704	;# 
   412   0002C1                     U2BRG           equ	705	;# 
   413   0002C1                     U2BRGL          equ	705	;# 
   414   0002C2                     U2BRGH          equ	706	;# 
   415   0002C3                     U2FIFO          equ	707	;# 
   416   0002C4                     U2UIR           equ	708	;# 
   417   0002C5                     U2ERRIR         equ	709	;# 
   418   0002C6                     U2ERRIE         equ	710	;# 
   419   0002C7                     U3RXB           equ	711	;# 
   420   0002C7                     U3RXBL          equ	711	;# 
   421   0002C9                     U3TXB           equ	713	;# 
   422   0002C9                     U3TXBL          equ	713	;# 
   423   0002CB                     U3P1            equ	715	;# 
   424   0002CB                     U3P1L           equ	715	;# 
   425   0002CD                     U3P2            equ	717	;# 
   426   0002CD                     U3P2L           equ	717	;# 
   427   0002CF                     U3P3            equ	719	;# 
   428   0002CF                     U3P3L           equ	719	;# 
   429   0002D1                     U3CON0          equ	721	;# 
   430   0002D2                     U3CON1          equ	722	;# 
   431   0002D3                     U3CON2          equ	723	;# 
   432   0002D4                     U3BRG           equ	724	;# 
   433   0002D4                     U3BRGL          equ	724	;# 
   434   0002D5                     U3BRGH          equ	725	;# 
   435   0002D6                     U3FIFO          equ	726	;# 
   436   0002D7                     U3UIR           equ	727	;# 
   437   0002D8                     U3ERRIR         equ	728	;# 
   438   0002D9                     U3ERRIE         equ	729	;# 
   439   0002DA                     U4RXB           equ	730	;# 
   440   0002DA                     U4RXBL          equ	730	;# 
   441   0002DC                     U4TXB           equ	732	;# 
   442   0002DC                     U4TXBL          equ	732	;# 
   443   0002DE                     U4P1            equ	734	;# 
   444   0002DE                     U4P1L           equ	734	;# 
   445   0002E0                     U4P2            equ	736	;# 
   446   0002E0                     U4P2L           equ	736	;# 
   447   0002E2                     U4P3            equ	738	;# 
   448   0002E2                     U4P3L           equ	738	;# 
   449   0002E4                     U4CON0          equ	740	;# 
   450   0002E5                     U4CON1          equ	741	;# 
   451   0002E6                     U4CON2          equ	742	;# 
   452   0002E7                     U4BRG           equ	743	;# 
   453   0002E7                     U4BRGL          equ	743	;# 
   454   0002E8                     U4BRGH          equ	744	;# 
   455   0002E9                     U4FIFO          equ	745	;# 
   456   0002EA                     U4UIR           equ	746	;# 
   457   0002EB                     U4ERRIR         equ	747	;# 
   458   0002EC                     U4ERRIE         equ	748	;# 
   459   0002ED                     U5RXB           equ	749	;# 
   460   0002ED                     U5RXBL          equ	749	;# 
   461   0002EF                     U5TXB           equ	751	;# 
   462   0002EF                     U5TXBL          equ	751	;# 
   463   0002F1                     U5P1            equ	753	;# 
   464   0002F1                     U5P1L           equ	753	;# 
   465   0002F3                     U5P2            equ	755	;# 
   466   0002F3                     U5P2L           equ	755	;# 
   467   0002F5                     U5P3            equ	757	;# 
   468   0002F5                     U5P3L           equ	757	;# 
   469   0002F7                     U5CON0          equ	759	;# 
   470   0002F8                     U5CON1          equ	760	;# 
   471   0002F9                     U5CON2          equ	761	;# 
   472   0002FA                     U5BRG           equ	762	;# 
   473   0002FA                     U5BRGL          equ	762	;# 
   474   0002FB                     U5BRGH          equ	763	;# 
   475   0002FC                     U5FIFO          equ	764	;# 
   476   0002FD                     U5UIR           equ	765	;# 
   477   0002FE                     U5ERRIR         equ	766	;# 
   478   0002FF                     U5ERRIE         equ	767	;# 
   479   000300                     SMT1TMR         equ	768	;# 
   480   000300                     SMT1TMRL        equ	768	;# 
   481   000301                     SMT1TMRH        equ	769	;# 
   482   000302                     SMT1TMRU        equ	770	;# 
   483   000303                     SMT1CPR         equ	771	;# 
   484   000303                     SMT1CPRL        equ	771	;# 
   485   000304                     SMT1CPRH        equ	772	;# 
   486   000305                     SMT1CPRU        equ	773	;# 
   487   000306                     SMT1CPW         equ	774	;# 
   488   000306                     SMT1CPWL        equ	774	;# 
   489   000307                     SMT1CPWH        equ	775	;# 
   490   000308                     SMT1CPWU        equ	776	;# 
   491   000309                     SMT1PR          equ	777	;# 
   492   000309                     SMT1PRL         equ	777	;# 
   493   00030A                     SMT1PRH         equ	778	;# 
   494   00030B                     SMT1PRU         equ	779	;# 
   495   00030C                     SMT1CON0        equ	780	;# 
   496   00030D                     SMT1CON1        equ	781	;# 
   497   00030E                     SMT1STAT        equ	782	;# 
   498   00030F                     SMT1CLK         equ	783	;# 
   499   000310                     SMT1SIG         equ	784	;# 
   500   000311                     SMT1WIN         equ	785	;# 
   501   000318                     TMR0L           equ	792	;# 
   502   000318                     TMR0            equ	792	;# 
   503   000319                     TMR0H           equ	793	;# 
   504   000319                     PR0             equ	793	;# 
   505   00031A                     T0CON0          equ	794	;# 
   506   00031B                     T0CON1          equ	795	;# 
   507   00031C                     TMR1            equ	796	;# 
   508   00031C                     TMR1L           equ	796	;# 
   509   00031D                     TMR1H           equ	797	;# 
   510   00031E                     T1CON           equ	798	;# 
   511   00031E                     TMR1CON         equ	798	;# 
   512   00031F                     T1GCON          equ	799	;# 
   513   00031F                     TMR1GCON        equ	799	;# 
   514   000320                     T1GATE          equ	800	;# 
   515   000320                     TMR1GATE        equ	800	;# 
   516   000321                     T1CLK           equ	801	;# 
   517   000321                     TMR1CLK         equ	801	;# 
   518   000321                     PR1             equ	801	;# 
   519   000322                     T2TMR           equ	802	;# 
   520   000322                     TMR2            equ	802	;# 
   521   000323                     T2PR            equ	803	;# 
   522   000323                     PR2             equ	803	;# 
   523   000324                     T2CON           equ	804	;# 
   524   000325                     T2HLT           equ	805	;# 
   525   000326                     T2CLKCON        equ	806	;# 
   526   000326                     T2CLK           equ	806	;# 
   527   000327                     T2RST           equ	807	;# 
   528   000328                     TMR3            equ	808	;# 
   529   000328                     TMR3L           equ	808	;# 
   530   000329                     TMR3H           equ	809	;# 
   531   00032A                     T3CON           equ	810	;# 
   532   00032A                     TMR3CON         equ	810	;# 
   533   00032B                     T3GCON          equ	811	;# 
   534   00032B                     TMR3GCON        equ	811	;# 
   535   00032C                     T3GATE          equ	812	;# 
   536   00032C                     TMR3GATE        equ	812	;# 
   537   00032D                     T3CLK           equ	813	;# 
   538   00032D                     TMR3CLK         equ	813	;# 
   539   00032D                     PR3             equ	813	;# 
   540   00032E                     T4TMR           equ	814	;# 
   541   00032E                     TMR4            equ	814	;# 
   542   00032F                     T4PR            equ	815	;# 
   543   00032F                     PR4             equ	815	;# 
   544   000330                     T4CON           equ	816	;# 
   545   000331                     T4HLT           equ	817	;# 
   546   000332                     T4CLKCON        equ	818	;# 
   547   000332                     T4CLK           equ	818	;# 
   548   000333                     T4RST           equ	819	;# 
   549   000334                     TMR5            equ	820	;# 
   550   000334                     TMR5L           equ	820	;# 
   551   000335                     TMR5H           equ	821	;# 
   552   000336                     T5CON           equ	822	;# 
   553   000336                     TMR5CON         equ	822	;# 
   554   000337                     T5GCON          equ	823	;# 
   555   000337                     TMR5GCON        equ	823	;# 
   556   000338                     T5GATE          equ	824	;# 
   557   000338                     TMR5GATE        equ	824	;# 
   558   000339                     T5CLK           equ	825	;# 
   559   000339                     TMR5CLK         equ	825	;# 
   560   000339                     PR5             equ	825	;# 
   561   00033A                     T6TMR           equ	826	;# 
   562   00033A                     TMR6            equ	826	;# 
   563   00033B                     T6PR            equ	827	;# 
   564   00033B                     PR6             equ	827	;# 
   565   00033C                     T6CON           equ	828	;# 
   566   00033D                     T6HLT           equ	829	;# 
   567   00033E                     T6CLKCON        equ	830	;# 
   568   00033E                     T6CLK           equ	830	;# 
   569   00033F                     T6RST           equ	831	;# 
   570   000340                     CCPR1           equ	832	;# 
   571   000340                     CCPR1L          equ	832	;# 
   572   000341                     CCPR1H          equ	833	;# 
   573   000342                     CCP1CON         equ	834	;# 
   574   000343                     CCP1CAP         equ	835	;# 
   575   000344                     CCPR2           equ	836	;# 
   576   000344                     CCPR2L          equ	836	;# 
   577   000345                     CCPR2H          equ	837	;# 
   578   000346                     CCP2CON         equ	838	;# 
   579   000347                     CCP2CAP         equ	839	;# 
   580   000348                     CCPR3           equ	840	;# 
   581   000348                     CCPR3L          equ	840	;# 
   582   000349                     CCPR3H          equ	841	;# 
   583   00034A                     CCP3CON         equ	842	;# 
   584   00034B                     CCP3CAP         equ	843	;# 
   585   00034C                     CCPTMRS0        equ	844	;# 
   586   00034F                     CRCDATA         equ	847	;# 
   587   00034F                     CRCDATL         equ	847	;# 
   588   000350                     CRCDATH         equ	848	;# 
   589   000351                     CRCACC          equ	849	;# 
   590   000351                     CRCACCL         equ	849	;# 
   591   000352                     CRCACCH         equ	850	;# 
   592   000353                     CRCSHFT         equ	851	;# 
   593   000353                     CRCSHIFTL       equ	851	;# 
   594   000354                     CRCSHIFTH       equ	852	;# 
   595   000355                     CRCXOR          equ	853	;# 
   596   000355                     CRCXORL         equ	853	;# 
   597   000356                     CRCXORH         equ	854	;# 
   598   000357                     CRCCON0         equ	855	;# 
   599   000358                     CRCCON1         equ	856	;# 
   600   00035A                     SCANLADR        equ	858	;# 
   601   00035A                     SCANLADRL       equ	858	;# 
   602   00035B                     SCANLADRH       equ	859	;# 
   603   00035C                     SCANLADRU       equ	860	;# 
   604   00035D                     SCANHADR        equ	861	;# 
   605   00035D                     SCANHADRL       equ	861	;# 
   606   00035E                     SCANHADRH       equ	862	;# 
   607   00035F                     SCANHADRU       equ	863	;# 
   608   000360                     SCANCON0        equ	864	;# 
   609   000361                     SCANTRIG        equ	865	;# 
   610   000362                     IPR0            equ	866	;# 
   611   000363                     IPR1            equ	867	;# 
   612   000364                     IPR2            equ	868	;# 
   613   000365                     IPR3            equ	869	;# 
   614   000366                     IPR4            equ	870	;# 
   615   000367                     IPR5            equ	871	;# 
   616   000368                     IPR6            equ	872	;# 
   617   000369                     IPR7            equ	873	;# 
   618   00036A                     IPR8            equ	874	;# 
   619   00036B                     IPR9            equ	875	;# 
   620   00036C                     IPR10           equ	876	;# 
   621   00036D                     IPR11           equ	877	;# 
   622   00036E                     IPR12           equ	878	;# 
   623   00036F                     IPR13           equ	879	;# 
   624   000370                     IPR14           equ	880	;# 
   625   000371                     IPR15           equ	881	;# 
   626   000373                     STATUS_CSHAD    equ	883	;# 
   627   000374                     WREG_CSHAD      equ	884	;# 
   628   000375                     BSR_CSHAD       equ	885	;# 
   629   000376                     SHADCON         equ	886	;# 
   630   000377                     STATUS_SHAD     equ	887	;# 
   631   000378                     WREG_SHAD       equ	888	;# 
   632   000379                     BSR_SHAD        equ	889	;# 
   633   00037A                     PCLATH_SHAD     equ	890	;# 
   634   00037B                     PCLATU_SHAD     equ	891	;# 
   635   00037C                     FSR0SH          equ	892	;# 
   636   00037C                     FSR0L_SHAD      equ	892	;# 
   637   00037D                     FSR0H_SHAD      equ	893	;# 
   638   00037E                     FSR1SH          equ	894	;# 
   639   00037E                     FSR1L_SHAD      equ	894	;# 
   640   00037F                     FSR1H_SHAD      equ	895	;# 
   641   000380                     FSR2SH          equ	896	;# 
   642   000380                     FSR2L_SHAD      equ	896	;# 
   643   000381                     FSR2H_SHAD      equ	897	;# 
   644   000382                     PRODSH          equ	898	;# 
   645   000382                     PRODL_SHAD      equ	898	;# 
   646   000383                     PRODH_SHAD      equ	899	;# 
   647   0003BC                     CWG1CLK         equ	956	;# 
   648   0003BC                     CWG1CLKCON      equ	956	;# 
   649   0003BD                     CWG1ISM         equ	957	;# 
   650   0003BD                     CWG1DAT         equ	957	;# 
   651   0003BE                     CWG1DBR         equ	958	;# 
   652   0003BF                     CWG1DBF         equ	959	;# 
   653   0003C0                     CWG1CON0        equ	960	;# 
   654   0003C1                     CWG1CON1        equ	961	;# 
   655   0003C2                     CWG1AS0         equ	962	;# 
   656   0003C3                     CWG1AS1         equ	963	;# 
   657   0003C4                     CWG1STR         equ	964	;# 
   658   0003C5                     CWG2CLK         equ	965	;# 
   659   0003C5                     CWG2CLKCON      equ	965	;# 
   660   0003C6                     CWG2ISM         equ	966	;# 
   661   0003C6                     CWG2DAT         equ	966	;# 
   662   0003C7                     CWG2DBR         equ	967	;# 
   663   0003C8                     CWG2DBF         equ	968	;# 
   664   0003C9                     CWG2CON0        equ	969	;# 
   665   0003CA                     CWG2CON1        equ	970	;# 
   666   0003CB                     CWG2AS0         equ	971	;# 
   667   0003CC                     CWG2AS1         equ	972	;# 
   668   0003CD                     CWG2STR         equ	973	;# 
   669   0003CE                     CWG3CLK         equ	974	;# 
   670   0003CE                     CWG3CLKCON      equ	974	;# 
   671   0003CF                     CWG3ISM         equ	975	;# 
   672   0003CF                     CWG3DAT         equ	975	;# 
   673   0003D0                     CWG3DBR         equ	976	;# 
   674   0003D1                     CWG3DBF         equ	977	;# 
   675   0003D2                     CWG3CON0        equ	978	;# 
   676   0003D3                     CWG3CON1        equ	979	;# 
   677   0003D4                     CWG3AS0         equ	980	;# 
   678   0003D5                     CWG3AS1         equ	981	;# 
   679   0003D6                     CWG3STR         equ	982	;# 
   680   0003D7                     FVRCON          equ	983	;# 
   681   0003D8                     ADCPCON         equ	984	;# 
   682   0003D8                     ADCP            equ	984	;# 
   683   0003D9                     ADLTH           equ	985	;# 
   684   0003D9                     ADLTHL          equ	985	;# 
   685   0003DA                     ADLTHH          equ	986	;# 
   686   0003DB                     ADUTH           equ	987	;# 
   687   0003DB                     ADUTHL          equ	987	;# 
   688   0003DC                     ADUTHH          equ	988	;# 
   689   0003DD                     ADERR           equ	989	;# 
   690   0003DD                     ADERRL          equ	989	;# 
   691   0003DE                     ADERRH          equ	990	;# 
   692   0003DF                     ADSTPT          equ	991	;# 
   693   0003DF                     ADSTPTL         equ	991	;# 
   694   0003E0                     ADSTPTH         equ	992	;# 
   695   0003E1                     ADFLTR          equ	993	;# 
   696   0003E1                     ADFLTRL         equ	993	;# 
   697   0003E2                     ADFLTRH         equ	994	;# 
   698   0003E3                     ADACC           equ	995	;# 
   699   0003E3                     ADACCL          equ	995	;# 
   700   0003E4                     ADACCH          equ	996	;# 
   701   0003E5                     ADACCU          equ	997	;# 
   702   0003E6                     ADCNT           equ	998	;# 
   703   0003E7                     ADRPT           equ	999	;# 
   704   0003E8                     ADPREV          equ	1000	;# 
   705   0003E8                     ADPREVL         equ	1000	;# 
   706   0003E9                     ADPREVH         equ	1001	;# 
   707   0003EA                     ADRES           equ	1002	;# 
   708   0003EA                     ADRESL          equ	1002	;# 
   709   0003EB                     ADRESH          equ	1003	;# 
   710   0003EC                     ADPCH           equ	1004	;# 
   711   0003EE                     ADACQ           equ	1006	;# 
   712   0003EE                     ADACQL          equ	1006	;# 
   713   0003EF                     ADACQH          equ	1007	;# 
   714   0003F0                     ADCAP           equ	1008	;# 
   715   0003F1                     ADPRE           equ	1009	;# 
   716   0003F1                     ADPREL          equ	1009	;# 
   717   0003F2                     ADPREH          equ	1010	;# 
   718   0003F3                     ADCON0          equ	1011	;# 
   719   0003F4                     ADCON1          equ	1012	;# 
   720   0003F5                     ADCON2          equ	1013	;# 
   721   0003F6                     ADCON3          equ	1014	;# 
   722   0003F7                     ADSTAT          equ	1015	;# 
   723   0003F8                     ADREF           equ	1016	;# 
   724   0003F9                     ADACT           equ	1017	;# 
   725   0003FA                     ADCLK           equ	1018	;# 
   726   000400                     ANSELA          equ	1024	;# 
   727   000401                     WPUA            equ	1025	;# 
   728   000402                     ODCONA          equ	1026	;# 
   729   000403                     SLRCONA         equ	1027	;# 
   730   000404                     INLVLA          equ	1028	;# 
   731   000405                     IOCAP           equ	1029	;# 
   732   000406                     IOCAN           equ	1030	;# 
   733   000407                     IOCAF           equ	1031	;# 
   734   000408                     ANSELB          equ	1032	;# 
   735   000409                     WPUB            equ	1033	;# 
   736   00040A                     ODCONB          equ	1034	;# 
   737   00040B                     SLRCONB         equ	1035	;# 
   738   00040C                     INLVLB          equ	1036	;# 
   739   00040D                     IOCBP           equ	1037	;# 
   740   00040E                     IOCBN           equ	1038	;# 
   741   00040F                     IOCBF           equ	1039	;# 
   742   000410                     ANSELC          equ	1040	;# 
   743   000411                     WPUC            equ	1041	;# 
   744   000412                     ODCONC          equ	1042	;# 
   745   000413                     SLRCONC         equ	1043	;# 
   746   000414                     INLVLC          equ	1044	;# 
   747   000415                     IOCCP           equ	1045	;# 
   748   000416                     IOCCN           equ	1046	;# 
   749   000417                     IOCCF           equ	1047	;# 
   750   000418                     ANSELD          equ	1048	;# 
   751   000419                     WPUD            equ	1049	;# 
   752   00041A                     ODCOND          equ	1050	;# 
   753   00041B                     SLRCOND         equ	1051	;# 
   754   00041C                     INLVLD          equ	1052	;# 
   755   000420                     ANSELE          equ	1056	;# 
   756   000421                     WPUE            equ	1057	;# 
   757   000422                     ODCONE          equ	1058	;# 
   758   000423                     SLRCONE         equ	1059	;# 
   759   000424                     INLVLE          equ	1060	;# 
   760   000425                     IOCEP           equ	1061	;# 
   761   000426                     IOCEN           equ	1062	;# 
   762   000427                     IOCEF           equ	1063	;# 
   763   000428                     ANSELF          equ	1064	;# 
   764   000429                     WPUF            equ	1065	;# 
   765   00042A                     ODCONF          equ	1066	;# 
   766   00042B                     SLRCONF         equ	1067	;# 
   767   00042C                     INLVLF          equ	1068	;# 
   768   000440                     NCO1ACC         equ	1088	;# 
   769   000440                     NCO1ACCL        equ	1088	;# 
   770   000441                     NCO1ACCH        equ	1089	;# 
   771   000442                     NCO1ACCU        equ	1090	;# 
   772   000443                     NCO1INC         equ	1091	;# 
   773   000443                     NCO1INCL        equ	1091	;# 
   774   000444                     NCO1INCH        equ	1092	;# 
   775   000445                     NCO1INCU        equ	1093	;# 
   776   000446                     NCO1CON         equ	1094	;# 
   777   000447                     NCO1CLK         equ	1095	;# 
   778   000448                     NCO2ACC         equ	1096	;# 
   779   000448                     NCO2ACCL        equ	1096	;# 
   780   000449                     NCO2ACCH        equ	1097	;# 
   781   00044A                     NCO2ACCU        equ	1098	;# 
   782   00044B                     NCO2INC         equ	1099	;# 
   783   00044B                     NCO2INCL        equ	1099	;# 
   784   00044C                     NCO2INCH        equ	1100	;# 
   785   00044D                     NCO2INCU        equ	1101	;# 
   786   00044E                     NCO2CON         equ	1102	;# 
   787   00044F                     NCO2CLK         equ	1103	;# 
   788   000450                     NCO3ACC         equ	1104	;# 
   789   000450                     NCO3ACCL        equ	1104	;# 
   790   000451                     NCO3ACCH        equ	1105	;# 
   791   000452                     NCO3ACCU        equ	1106	;# 
   792   000453                     NCO3INC         equ	1107	;# 
   793   000453                     NCO3INCL        equ	1107	;# 
   794   000454                     NCO3INCH        equ	1108	;# 
   795   000455                     NCO3INCU        equ	1109	;# 
   796   000456                     NCO3CON         equ	1110	;# 
   797   000457                     NCO3CLK         equ	1111	;# 
   798   000459                     IVTLOCK         equ	1113	;# 
   799   00045A                     IVTAD           equ	1114	;# 
   800   00045A                     IVTADL          equ	1114	;# 
   801   00045B                     IVTADH          equ	1115	;# 
   802   00045C                     IVTADU          equ	1116	;# 
   803   00045D                     IVTBASE         equ	1117	;# 
   804   00045D                     IVTBASEL        equ	1117	;# 
   805   00045E                     IVTBASEH        equ	1118	;# 
   806   00045F                     IVTBASEU        equ	1119	;# 
   807   000460                     PWM1ERS         equ	1120	;# 
   808   000461                     PWM1CLK         equ	1121	;# 
   809   000462                     PWM1LDS         equ	1122	;# 
   810   000463                     PWM1PR          equ	1123	;# 
   811   000463                     PWM1PRL         equ	1123	;# 
   812   000464                     PWM1PRH         equ	1124	;# 
   813   000465                     PWM1CPRE        equ	1125	;# 
   814   000466                     PWM1PIPOS       equ	1126	;# 
   815   000467                     PWM1GIR         equ	1127	;# 
   816   000468                     PWM1GIE         equ	1128	;# 
   817   000469                     PWM1CON         equ	1129	;# 
   818   00046A                     PWM1S1CFG       equ	1130	;# 
   819   00046B                     PWM1S1P1        equ	1131	;# 
   820   00046B                     PWM1S1P1L       equ	1131	;# 
   821   00046C                     PWM1S1P1H       equ	1132	;# 
   822   00046D                     PWM1S1P2        equ	1133	;# 
   823   00046D                     PWM1S1P2L       equ	1133	;# 
   824   00046E                     PWM1S1P2H       equ	1134	;# 
   825   00046F                     PWM2ERS         equ	1135	;# 
   826   000470                     PWM2CLK         equ	1136	;# 
   827   000471                     PWM2LDS         equ	1137	;# 
   828   000472                     PWM2PR          equ	1138	;# 
   829   000472                     PWM2PRL         equ	1138	;# 
   830   000473                     PWM2PRH         equ	1139	;# 
   831   000474                     PWM2CPRE        equ	1140	;# 
   832   000475                     PWM2PIPOS       equ	1141	;# 
   833   000476                     PWM2GIR         equ	1142	;# 
   834   000477                     PWM2GIE         equ	1143	;# 
   835   000478                     PWM2CON         equ	1144	;# 
   836   000479                     PWM2S1CFG       equ	1145	;# 
   837   00047A                     PWM2S1P1        equ	1146	;# 
   838   00047A                     PWM2S1P1L       equ	1146	;# 
   839   00047B                     PWM2S1P1H       equ	1147	;# 
   840   00047C                     PWM2S1P2        equ	1148	;# 
   841   00047C                     PWM2S1P2L       equ	1148	;# 
   842   00047D                     PWM2S1P2H       equ	1149	;# 
   843   00047E                     PWM3ERS         equ	1150	;# 
   844   00047F                     PWM3CLK         equ	1151	;# 
   845   000480                     PWM3LDS         equ	1152	;# 
   846   000481                     PWM3PR          equ	1153	;# 
   847   000481                     PWM3PRL         equ	1153	;# 
   848   000482                     PWM3PRH         equ	1154	;# 
   849   000483                     PWM3CPRE        equ	1155	;# 
   850   000484                     PWM3PIPOS       equ	1156	;# 
   851   000485                     PWM3GIR         equ	1157	;# 
   852   000486                     PWM3GIE         equ	1158	;# 
   853   000487                     PWM3CON         equ	1159	;# 
   854   000488                     PWM3S1CFG       equ	1160	;# 
   855   000489                     PWM3S1P1        equ	1161	;# 
   856   000489                     PWM3S1P1L       equ	1161	;# 
   857   00048A                     PWM3S1P1H       equ	1162	;# 
   858   00048B                     PWM3S1P2        equ	1163	;# 
   859   00048B                     PWM3S1P2L       equ	1163	;# 
   860   00048C                     PWM3S1P2H       equ	1164	;# 
   861   00049C                     PWMLOAD         equ	1180	;# 
   862   00049D                     PWMEN           equ	1181	;# 
   863   00049E                     PIE0            equ	1182	;# 
   864   00049F                     PIE1            equ	1183	;# 
   865   0004A0                     PIE2            equ	1184	;# 
   866   0004A1                     PIE3            equ	1185	;# 
   867   0004A2                     PIE4            equ	1186	;# 
   868   0004A3                     PIE5            equ	1187	;# 
   869   0004A4                     PIE6            equ	1188	;# 
   870   0004A5                     PIE7            equ	1189	;# 
   871   0004A6                     PIE8            equ	1190	;# 
   872   0004A7                     PIE9            equ	1191	;# 
   873   0004A8                     PIE10           equ	1192	;# 
   874   0004A9                     PIE11           equ	1193	;# 
   875   0004AA                     PIE12           equ	1194	;# 
   876   0004AB                     PIE13           equ	1195	;# 
   877   0004AC                     PIE14           equ	1196	;# 
   878   0004AD                     PIE15           equ	1197	;# 
   879   0004AE                     PIR0            equ	1198	;# 
   880   0004AF                     PIR1            equ	1199	;# 
   881   0004B0                     PIR2            equ	1200	;# 
   882   0004B1                     PIR3            equ	1201	;# 
   883   0004B2                     PIR4            equ	1202	;# 
   884   0004B3                     PIR5            equ	1203	;# 
   885   0004B4                     PIR6            equ	1204	;# 
   886   0004B5                     PIR7            equ	1205	;# 
   887   0004B6                     PIR8            equ	1206	;# 
   888   0004B7                     PIR9            equ	1207	;# 
   889   0004B8                     PIR10           equ	1208	;# 
   890   0004B9                     PIR11           equ	1209	;# 
   891   0004BA                     PIR12           equ	1210	;# 
   892   0004BB                     PIR13           equ	1211	;# 
   893   0004BC                     PIR14           equ	1212	;# 
   894   0004BD                     PIR15           equ	1213	;# 
   895   0004BE                     LATA            equ	1214	;# 
   896   0004BF                     LATB            equ	1215	;# 
   897   0004C0                     LATC            equ	1216	;# 
   898   0004C1                     LATD            equ	1217	;# 
   899   0004C2                     LATE            equ	1218	;# 
   900   0004C3                     LATF            equ	1219	;# 
   901   0004C6                     TRISA           equ	1222	;# 
   902   0004C7                     TRISB           equ	1223	;# 
   903   0004C8                     TRISC           equ	1224	;# 
   904   0004C9                     TRISD           equ	1225	;# 
   905   0004CA                     TRISE           equ	1226	;# 
   906   0004CB                     TRISF           equ	1227	;# 
   907   0004CE                     PORTA           equ	1230	;# 
   908   0004CF                     PORTB           equ	1231	;# 
   909   0004D0                     PORTC           equ	1232	;# 
   910   0004D1                     PORTD           equ	1233	;# 
   911   0004D2                     PORTE           equ	1234	;# 
   912   0004D3                     PORTF           equ	1235	;# 
   913   0004D6                     INTCON0         equ	1238	;# 
   914   0004D7                     INTCON1         equ	1239	;# 
   915   0004D8                     STATUS          equ	1240	;# 
   916   0004D9                     FSR2            equ	1241	;# 
   917   0004D9                     FSR2L           equ	1241	;# 
   918   0004DA                     FSR2H           equ	1242	;# 
   919   0004DB                     PLUSW2          equ	1243	;# 
   920   0004DC                     PREINC2         equ	1244	;# 
   921   0004DD                     POSTDEC2        equ	1245	;# 
   922   0004DE                     POSTINC2        equ	1246	;# 
   923   0004DF                     INDF2           equ	1247	;# 
   924   0004E0                     BSR             equ	1248	;# 
   925   0004E1                     FSR1            equ	1249	;# 
   926   0004E1                     FSR1L           equ	1249	;# 
   927   0004E2                     FSR1H           equ	1250	;# 
   928   0004E3                     PLUSW1          equ	1251	;# 
   929   0004E4                     PREINC1         equ	1252	;# 
   930   0004E5                     POSTDEC1        equ	1253	;# 
   931   0004E6                     POSTINC1        equ	1254	;# 
   932   0004E7                     INDF1           equ	1255	;# 
   933   0004E8                     WREG            equ	1256	;# 
   934   0004E9                     FSR0            equ	1257	;# 
   935   0004E9                     FSR0L           equ	1257	;# 
   936   0004EA                     FSR0H           equ	1258	;# 
   937   0004EB                     PLUSW0          equ	1259	;# 
   938   0004EC                     PREINC0         equ	1260	;# 
   939   0004ED                     POSTDEC0        equ	1261	;# 
   940   0004EE                     POSTINC0        equ	1262	;# 
   941   0004EF                     INDF0           equ	1263	;# 
   942   0004F0                     PCON0           equ	1264	;# 
   943   0004F1                     PCON1           equ	1265	;# 
   944   0004F2                     CPUDOZE         equ	1266	;# 
   945   0004F3                     PROD            equ	1267	;# 
   946   0004F3                     PRODL           equ	1267	;# 
   947   0004F4                     PRODH           equ	1268	;# 
   948   0004F5                     TABLAT          equ	1269	;# 
   949   0004F6                     TBLPTR          equ	1270	;# 
   950   0004F6                     TBLPTRL         equ	1270	;# 
   951   0004F7                     TBLPTRH         equ	1271	;# 
   952   0004F8                     TBLPTRU         equ	1272	;# 
   953   0004F9                     PCLAT           equ	1273	;# 
   954   0004F9                     PCL             equ	1273	;# 
   955   0004FA                     PCLATH          equ	1274	;# 
   956   0004FB                     PCLATU          equ	1275	;# 
   957   0004FC                     STKPTR          equ	1276	;# 
   958   0004FD                     TOS             equ	1277	;# 
   959   0004FD                     TOSL            equ	1277	;# 
   960   0004FE                     TOSH            equ	1278	;# 
   961   0004FF                     TOSU            equ	1279	;# 
   962   000039                     CLKRCON         equ	57	;# 
   963   00003A                     CLKRCLK         equ	58	;# 
   964   000040                     NVMCON0         equ	64	;# 
   965   000041                     NVMCON1         equ	65	;# 
   966   000042                     NVMLOCK         equ	66	;# 
   967   000043                     NVMADR          equ	67	;# 
   968   000043                     NVMADRL         equ	67	;# 
   969   000044                     NVMADRH         equ	68	;# 
   970   000045                     NVMADRU         equ	69	;# 
   971   000046                     NVMDAT          equ	70	;# 
   972   000046                     NVMDATL         equ	70	;# 
   973   000047                     NVMDATH         equ	71	;# 
   974   000048                     VREGCON         equ	72	;# 
   975   000049                     BORCON          equ	73	;# 
   976   00004A                     HLVDCON0        equ	74	;# 
   977   00004B                     HLVDCON1        equ	75	;# 
   978   00004C                     ZCDCON          equ	76	;# 
   979   000060                     PMD0            equ	96	;# 
   980   000061                     PMD1            equ	97	;# 
   981   000063                     PMD3            equ	99	;# 
   982   000064                     PMD4            equ	100	;# 
   983   000065                     PMD5            equ	101	;# 
   984   000066                     PMD6            equ	102	;# 
   985   000067                     PMD7            equ	103	;# 
   986   000068                     PMD8            equ	104	;# 
   987   00006A                     MD1CON0         equ	106	;# 
   988   00006B                     MD1CON1         equ	107	;# 
   989   00006C                     MD1SRC          equ	108	;# 
   990   00006D                     MD1CARL         equ	109	;# 
   991   00006E                     MD1CARH         equ	110	;# 
   992   00006F                     CMOUT           equ	111	;# 
   993   000070                     CM1CON0         equ	112	;# 
   994   000071                     CM1CON1         equ	113	;# 
   995   000072                     CM1NCH          equ	114	;# 
   996   000073                     CM1PCH          equ	115	;# 
   997   000074                     CM2CON0         equ	116	;# 
   998   000075                     CM2CON1         equ	117	;# 
   999   000076                     CM2NCH          equ	118	;# 
  1000   000077                     CM2PCH          equ	119	;# 
  1001   000078                     WDTCON0         equ	120	;# 
  1002   000079                     WDTCON1         equ	121	;# 
  1003   00007A                     WDTPS           equ	122	;# 
  1004   00007A                     WDTPSL          equ	122	;# 
  1005   00007B                     WDTPSH          equ	123	;# 
  1006   00007C                     WDTTMR          equ	124	;# 
  1007   00007D                     DAC1DAT         equ	125	;# 
  1008   00007D                     DAC1DATL        equ	125	;# 
  1009   00007F                     DAC1CON         equ	127	;# 
  1010   000080                     SPI1RXB         equ	128	;# 
  1011   000081                     SPI1TXB         equ	129	;# 
  1012   000082                     SPI1TCNT        equ	130	;# 
  1013   000082                     SPI1TCNTL       equ	130	;# 
  1014   000083                     SPI1TCNTH       equ	131	;# 
  1015   000084                     SPI1CON0        equ	132	;# 
  1016   000085                     SPI1CON1        equ	133	;# 
  1017   000086                     SPI1CON2        equ	134	;# 
  1018   000087                     SPI1STATUS      equ	135	;# 
  1019   000088                     SPI1TWIDTH      equ	136	;# 
  1020   000089                     SPI1BAUD        equ	137	;# 
  1021   00008A                     SPI1INTF        equ	138	;# 
  1022   00008B                     SPI1INTE        equ	139	;# 
  1023   00008C                     SPI1CLK         equ	140	;# 
  1024   00008D                     SPI2RXB         equ	141	;# 
  1025   00008E                     SPI2TXB         equ	142	;# 
  1026   00008F                     SPI2TCNT        equ	143	;# 
  1027   00008F                     SPI2TCNTL       equ	143	;# 
  1028   000090                     SPI2TCNTH       equ	144	;# 
  1029   000091                     SPI2CON0        equ	145	;# 
  1030   000092                     SPI2CON1        equ	146	;# 
  1031   000093                     SPI2CON2        equ	147	;# 
  1032   000094                     SPI2STATUS      equ	148	;# 
  1033   000095                     SPI2TWIDTH      equ	149	;# 
  1034   000096                     SPI2BAUD        equ	150	;# 
  1035   000097                     SPI2INTF        equ	151	;# 
  1036   000098                     SPI2INTE        equ	152	;# 
  1037   000099                     SPI2CLK         equ	153	;# 
  1038   0000AC                     ACTCON          equ	172	;# 
  1039   0000AD                     OSCCON1         equ	173	;# 
  1040   0000AE                     OSCCON2         equ	174	;# 
  1041   0000AF                     OSCCON3         equ	175	;# 
  1042   0000B0                     OSCTUNE         equ	176	;# 
  1043   0000B1                     OSCFRQ          equ	177	;# 
  1044   0000B1                     OSCFREQ         equ	177	;# 
  1045   0000B2                     OSCSTAT         equ	178	;# 
  1046   0000B2                     OSCSTAT1        equ	178	;# 
  1047   0000B3                     OSCEN           equ	179	;# 
  1048   0000B4                     PRLOCK          equ	180	;# 
  1049   0000B5                     SCANPR          equ	181	;# 
  1050   0000B6                     DMA1PR          equ	182	;# 
  1051   0000B7                     DMA2PR          equ	183	;# 
  1052   0000B8                     DMA3PR          equ	184	;# 
  1053   0000B9                     DMA4PR          equ	185	;# 
  1054   0000BA                     DMA5PR          equ	186	;# 
  1055   0000BB                     DMA6PR          equ	187	;# 
  1056   0000BE                     MAINPR          equ	190	;# 
  1057   0000BF                     ISRPR           equ	191	;# 
  1058   0000D4                     CLCDATA         equ	212	;# 
  1059   0000D5                     CLCSELECT       equ	213	;# 
  1060   0000D6                     CLCnCON         equ	214	;# 
  1061   0000D7                     CLCnPOL         equ	215	;# 
  1062   0000D8                     CLCnSEL0        equ	216	;# 
  1063   0000D9                     CLCnSEL1        equ	217	;# 
  1064   0000DA                     CLCnSEL2        equ	218	;# 
  1065   0000DB                     CLCnSEL3        equ	219	;# 
  1066   0000DC                     CLCnGLS0        equ	220	;# 
  1067   0000DD                     CLCnGLS1        equ	221	;# 
  1068   0000DE                     CLCnGLS2        equ	222	;# 
  1069   0000DF                     CLCnGLS3        equ	223	;# 
  1070   0000E8                     DMASELECT       equ	232	;# 
  1071   0000E9                     DMAnBUF         equ	233	;# 
  1072   0000EA                     DMAnDCNT        equ	234	;# 
  1073   0000EA                     DMAnDCNTL       equ	234	;# 
  1074   0000EB                     DMAnDCNTH       equ	235	;# 
  1075   0000EC                     DMAnDPTR        equ	236	;# 
  1076   0000EC                     DMAnDPTRL       equ	236	;# 
  1077   0000ED                     DMAnDPTRH       equ	237	;# 
  1078   0000EE                     DMAnDSZ         equ	238	;# 
  1079   0000EE                     DMAnDSZL        equ	238	;# 
  1080   0000EF                     DMAnDSZH        equ	239	;# 
  1081   0000F0                     DMAnDSA         equ	240	;# 
  1082   0000F0                     DMAnDSAL        equ	240	;# 
  1083   0000F1                     DMAnDSAH        equ	241	;# 
  1084   0000F2                     DMAnSCNT        equ	242	;# 
  1085   0000F2                     DMAnSCNTL       equ	242	;# 
  1086   0000F3                     DMAnSCNTH       equ	243	;# 
  1087   0000F4                     DMAnSPTR        equ	244	;# 
  1088   0000F4                     DMAnSPTRL       equ	244	;# 
  1089   0000F5                     DMAnSPTRH       equ	245	;# 
  1090   0000F6                     DMAnSPTRU       equ	246	;# 
  1091   0000F7                     DMAnSSZ         equ	247	;# 
  1092   0000F7                     DMAnSSZL        equ	247	;# 
  1093   0000F8                     DMAnSSZH        equ	248	;# 
  1094   0000F9                     DMAnSSA         equ	249	;# 
  1095   0000F9                     DMAnSSAL        equ	249	;# 
  1096   0000FA                     DMAnSSAH        equ	250	;# 
  1097   0000FB                     DMAnSSAU        equ	251	;# 
  1098   0000FC                     DMAnCON0        equ	252	;# 
  1099   0000FD                     DMAnCON1        equ	253	;# 
  1100   0000FE                     DMAnAIRQ        equ	254	;# 
  1101   0000FF                     DMAnSIRQ        equ	255	;# 
  1102   000200                     PPSLOCK         equ	512	;# 
  1103   000201                     RA0PPS          equ	513	;# 
  1104   000202                     RA1PPS          equ	514	;# 
  1105   000203                     RA2PPS          equ	515	;# 
  1106   000204                     RA3PPS          equ	516	;# 
  1107   000205                     RA4PPS          equ	517	;# 
  1108   000206                     RA5PPS          equ	518	;# 
  1109   000207                     RA6PPS          equ	519	;# 
  1110   000208                     RA7PPS          equ	520	;# 
  1111   000209                     RB0PPS          equ	521	;# 
  1112   00020A                     RB1PPS          equ	522	;# 
  1113   00020B                     RB2PPS          equ	523	;# 
  1114   00020C                     RB3PPS          equ	524	;# 
  1115   00020D                     RB4PPS          equ	525	;# 
  1116   00020E                     RB5PPS          equ	526	;# 
  1117   00020F                     RB6PPS          equ	527	;# 
  1118   000210                     RB7PPS          equ	528	;# 
  1119   000211                     RC0PPS          equ	529	;# 
  1120   000212                     RC1PPS          equ	530	;# 
  1121   000213                     RC2PPS          equ	531	;# 
  1122   000214                     RC3PPS          equ	532	;# 
  1123   000215                     RC4PPS          equ	533	;# 
  1124   000216                     RC5PPS          equ	534	;# 
  1125   000217                     RC6PPS          equ	535	;# 
  1126   000218                     RC7PPS          equ	536	;# 
  1127   000219                     RD0PPS          equ	537	;# 
  1128   00021A                     RD1PPS          equ	538	;# 
  1129   00021B                     RD2PPS          equ	539	;# 
  1130   00021C                     RD3PPS          equ	540	;# 
  1131   00021D                     RD4PPS          equ	541	;# 
  1132   00021E                     RD5PPS          equ	542	;# 
  1133   00021F                     RD6PPS          equ	543	;# 
  1134   000220                     RD7PPS          equ	544	;# 
  1135   000221                     RE0PPS          equ	545	;# 
  1136   000222                     RE1PPS          equ	546	;# 
  1137   000223                     RE2PPS          equ	547	;# 
  1138   000229                     RF0PPS          equ	553	;# 
  1139   00022A                     RF1PPS          equ	554	;# 
  1140   00022B                     RF2PPS          equ	555	;# 
  1141   00022C                     RF3PPS          equ	556	;# 
  1142   00022D                     RF4PPS          equ	557	;# 
  1143   00022E                     RF5PPS          equ	558	;# 
  1144   00022F                     RF6PPS          equ	559	;# 
  1145   000230                     RF7PPS          equ	560	;# 
  1146   00023E                     INT0PPS         equ	574	;# 
  1147   00023F                     INT1PPS         equ	575	;# 
  1148   000240                     INT2PPS         equ	576	;# 
  1149   000241                     T0CKIPPS        equ	577	;# 
  1150   000242                     T1CKIPPS        equ	578	;# 
  1151   000243                     T1GPPS          equ	579	;# 
  1152   000244                     T3CKIPPS        equ	580	;# 
  1153   000245                     T3GPPS          equ	581	;# 
  1154   000246                     T5CKIPPS        equ	582	;# 
  1155   000247                     T5GPPS          equ	583	;# 
  1156   000248                     T2INPPS         equ	584	;# 
  1157   000249                     T4INPPS         equ	585	;# 
  1158   00024A                     T6INPPS         equ	586	;# 
  1159   00024F                     CCP1PPS         equ	591	;# 
  1160   000250                     CCP2PPS         equ	592	;# 
  1161   000251                     CCP3PPS         equ	593	;# 
  1162   000253                     PWM1ERSPPS      equ	595	;# 
  1163   000254                     PWM2ERSPPS      equ	596	;# 
  1164   000255                     PWM3ERSPPS      equ	597	;# 
  1165   000257                     PWMIN0PPS       equ	599	;# 
  1166   000258                     PWMIN1PPS       equ	600	;# 
  1167   000259                     SMT1WINPPS      equ	601	;# 
  1168   00025A                     SMT1SIGPPS      equ	602	;# 
  1169   00025B                     CWG1PPS         equ	603	;# 
  1170   00025B                     CWG1INPPS       equ	603	;# 
  1171   00025C                     CWG2PPS         equ	604	;# 
  1172   00025C                     CWG2INPPS       equ	604	;# 
  1173   00025D                     CWG3PPS         equ	605	;# 
  1174   00025D                     CWG3INPPS       equ	605	;# 
  1175   00025E                     MD1CARLPPS      equ	606	;# 
  1176   00025E                     MDCARLPPS       equ	606	;# 
  1177   00025F                     MD1CARHPPS      equ	607	;# 
  1178   00025F                     MDCARHPPS       equ	607	;# 
  1179   000260                     MD1SRCPPS       equ	608	;# 
  1180   000260                     MDSRCPPS        equ	608	;# 
  1181   000261                     CLCIN0PPS       equ	609	;# 
  1182   000262                     CLCIN1PPS       equ	610	;# 
  1183   000263                     CLCIN2PPS       equ	611	;# 
  1184   000264                     CLCIN3PPS       equ	612	;# 
  1185   000265                     CLCIN4PPS       equ	613	;# 
  1186   000266                     CLCIN5PPS       equ	614	;# 
  1187   000267                     CLCIN6PPS       equ	615	;# 
  1188   000268                     CLCIN7PPS       equ	616	;# 
  1189   000269                     ADACTPPS        equ	617	;# 
  1190   00026A                     SPI1SCKPPS      equ	618	;# 
  1191   00026B                     SPI1SDIPPS      equ	619	;# 
  1192   00026C                     SPI1SSPPS       equ	620	;# 
  1193   00026D                     SPI2SCKPPS      equ	621	;# 
  1194   00026E                     SPI2SDIPPS      equ	622	;# 
  1195   00026F                     SPI2SSPPS       equ	623	;# 
  1196   000270                     I2C1SDAPPS      equ	624	;# 
  1197   000271                     I2C1SCLPPS      equ	625	;# 
  1198   000272                     U1RXPPS         equ	626	;# 
  1199   000273                     U1CTSPPS        equ	627	;# 
  1200   000274                     U2RXPPS         equ	628	;# 
  1201   000275                     U2CTSPPS        equ	629	;# 
  1202   000276                     U3RXPPS         equ	630	;# 
  1203   000277                     U3CTSPPS        equ	631	;# 
  1204   000278                     U4RXPPS         equ	632	;# 
  1205   000279                     U4CTSPPS        equ	633	;# 
  1206   00027A                     U5RXPPS         equ	634	;# 
  1207   00027B                     U5CTSPPS        equ	635	;# 
  1208   000286                     RC4I2C          equ	646	;# 
  1209   000287                     RC3I2C          equ	647	;# 
  1210   000288                     RB2I2C          equ	648	;# 
  1211   000289                     RB1I2C          equ	649	;# 
  1212   00028B                     I2C1RXB         equ	651	;# 
  1213   00028C                     I2C1TXB         equ	652	;# 
  1214   00028D                     I2C1CNT         equ	653	;# 
  1215   00028E                     I2C1ADB0        equ	654	;# 
  1216   00028F                     I2C1ADB1        equ	655	;# 
  1217   000290                     I2C1ADR0        equ	656	;# 
  1218   000291                     I2C1ADR1        equ	657	;# 
  1219   000292                     I2C1ADR2        equ	658	;# 
  1220   000293                     I2C1ADR3        equ	659	;# 
  1221   000294                     I2C1CON0        equ	660	;# 
  1222   000295                     I2C1CON1        equ	661	;# 
  1223   000296                     I2C1CON2        equ	662	;# 
  1224   000297                     I2C1ERR         equ	663	;# 
  1225   000298                     I2C1STAT0       equ	664	;# 
  1226   000299                     I2C1STAT1       equ	665	;# 
  1227   00029A                     I2C1PIR         equ	666	;# 
  1228   00029B                     I2C1PIE         equ	667	;# 
  1229   00029C                     I2C1CLK         equ	668	;# 
  1230   00029D                     I2C1BTO         equ	669	;# 
  1231   0002A1                     U1RXB           equ	673	;# 
  1232   0002A1                     U1RXBL          equ	673	;# 
  1233   0002A2                     U1RXCHK         equ	674	;# 
  1234   0002A3                     U1TXB           equ	675	;# 
  1235   0002A3                     U1TXBL          equ	675	;# 
  1236   0002A4                     U1TXCHK         equ	676	;# 
  1237   0002A5                     U1P1            equ	677	;# 
  1238   0002A5                     U1P1L           equ	677	;# 
  1239   0002A6                     U1P1H           equ	678	;# 
  1240   0002A7                     U1P2            equ	679	;# 
  1241   0002A7                     U1P2L           equ	679	;# 
  1242   0002A8                     U1P2H           equ	680	;# 
  1243   0002A9                     U1P3            equ	681	;# 
  1244   0002A9                     U1P3L           equ	681	;# 
  1245   0002AA                     U1P3H           equ	682	;# 
  1246   0002AB                     U1CON0          equ	683	;# 
  1247   0002AC                     U1CON1          equ	684	;# 
  1248   0002AD                     U1CON2          equ	685	;# 
  1249   0002AE                     U1BRG           equ	686	;# 
  1250   0002AE                     U1BRGL          equ	686	;# 
  1251   0002AF                     U1BRGH          equ	687	;# 
  1252   0002B0                     U1FIFO          equ	688	;# 
  1253   0002B1                     U1UIR           equ	689	;# 
  1254   0002B2                     U1ERRIR         equ	690	;# 
  1255   0002B3                     U1ERRIE         equ	691	;# 
  1256   0002B4                     U2RXB           equ	692	;# 
  1257   0002B4                     U2RXBL          equ	692	;# 
  1258   0002B6                     U2TXB           equ	694	;# 
  1259   0002B6                     U2TXBL          equ	694	;# 
  1260   0002B8                     U2P1            equ	696	;# 
  1261   0002B8                     U2P1L           equ	696	;# 
  1262   0002BA                     U2P2            equ	698	;# 
  1263   0002BA                     U2P2L           equ	698	;# 
  1264   0002BC                     U2P3            equ	700	;# 
  1265   0002BC                     U2P3L           equ	700	;# 
  1266   0002BE                     U2CON0          equ	702	;# 
  1267   0002BF                     U2CON1          equ	703	;# 
  1268   0002C0                     U2CON2          equ	704	;# 
  1269   0002C1                     U2BRG           equ	705	;# 
  1270   0002C1                     U2BRGL          equ	705	;# 
  1271   0002C2                     U2BRGH          equ	706	;# 
  1272   0002C3                     U2FIFO          equ	707	;# 
  1273   0002C4                     U2UIR           equ	708	;# 
  1274   0002C5                     U2ERRIR         equ	709	;# 
  1275   0002C6                     U2ERRIE         equ	710	;# 
  1276   0002C7                     U3RXB           equ	711	;# 
  1277   0002C7                     U3RXBL          equ	711	;# 
  1278   0002C9                     U3TXB           equ	713	;# 
  1279   0002C9                     U3TXBL          equ	713	;# 
  1280   0002CB                     U3P1            equ	715	;# 
  1281   0002CB                     U3P1L           equ	715	;# 
  1282   0002CD                     U3P2            equ	717	;# 
  1283   0002CD                     U3P2L           equ	717	;# 
  1284   0002CF                     U3P3            equ	719	;# 
  1285   0002CF                     U3P3L           equ	719	;# 
  1286   0002D1                     U3CON0          equ	721	;# 
  1287   0002D2                     U3CON1          equ	722	;# 
  1288   0002D3                     U3CON2          equ	723	;# 
  1289   0002D4                     U3BRG           equ	724	;# 
  1290   0002D4                     U3BRGL          equ	724	;# 
  1291   0002D5                     U3BRGH          equ	725	;# 
  1292   0002D6                     U3FIFO          equ	726	;# 
  1293   0002D7                     U3UIR           equ	727	;# 
  1294   0002D8                     U3ERRIR         equ	728	;# 
  1295   0002D9                     U3ERRIE         equ	729	;# 
  1296   0002DA                     U4RXB           equ	730	;# 
  1297   0002DA                     U4RXBL          equ	730	;# 
  1298   0002DC                     U4TXB           equ	732	;# 
  1299   0002DC                     U4TXBL          equ	732	;# 
  1300   0002DE                     U4P1            equ	734	;# 
  1301   0002DE                     U4P1L           equ	734	;# 
  1302   0002E0                     U4P2            equ	736	;# 
  1303   0002E0                     U4P2L           equ	736	;# 
  1304   0002E2                     U4P3            equ	738	;# 
  1305   0002E2                     U4P3L           equ	738	;# 
  1306   0002E4                     U4CON0          equ	740	;# 
  1307   0002E5                     U4CON1          equ	741	;# 
  1308   0002E6                     U4CON2          equ	742	;# 
  1309   0002E7                     U4BRG           equ	743	;# 
  1310   0002E7                     U4BRGL          equ	743	;# 
  1311   0002E8                     U4BRGH          equ	744	;# 
  1312   0002E9                     U4FIFO          equ	745	;# 
  1313   0002EA                     U4UIR           equ	746	;# 
  1314   0002EB                     U4ERRIR         equ	747	;# 
  1315   0002EC                     U4ERRIE         equ	748	;# 
  1316   0002ED                     U5RXB           equ	749	;# 
  1317   0002ED                     U5RXBL          equ	749	;# 
  1318   0002EF                     U5TXB           equ	751	;# 
  1319   0002EF                     U5TXBL          equ	751	;# 
  1320   0002F1                     U5P1            equ	753	;# 
  1321   0002F1                     U5P1L           equ	753	;# 
  1322   0002F3                     U5P2            equ	755	;# 
  1323   0002F3                     U5P2L           equ	755	;# 
  1324   0002F5                     U5P3            equ	757	;# 
  1325   0002F5                     U5P3L           equ	757	;# 
  1326   0002F7                     U5CON0          equ	759	;# 
  1327   0002F8                     U5CON1          equ	760	;# 
  1328   0002F9                     U5CON2          equ	761	;# 
  1329   0002FA                     U5BRG           equ	762	;# 
  1330   0002FA                     U5BRGL          equ	762	;# 
  1331   0002FB                     U5BRGH          equ	763	;# 
  1332   0002FC                     U5FIFO          equ	764	;# 
  1333   0002FD                     U5UIR           equ	765	;# 
  1334   0002FE                     U5ERRIR         equ	766	;# 
  1335   0002FF                     U5ERRIE         equ	767	;# 
  1336   000300                     SMT1TMR         equ	768	;# 
  1337   000300                     SMT1TMRL        equ	768	;# 
  1338   000301                     SMT1TMRH        equ	769	;# 
  1339   000302                     SMT1TMRU        equ	770	;# 
  1340   000303                     SMT1CPR         equ	771	;# 
  1341   000303                     SMT1CPRL        equ	771	;# 
  1342   000304                     SMT1CPRH        equ	772	;# 
  1343   000305                     SMT1CPRU        equ	773	;# 
  1344   000306                     SMT1CPW         equ	774	;# 
  1345   000306                     SMT1CPWL        equ	774	;# 
  1346   000307                     SMT1CPWH        equ	775	;# 
  1347   000308                     SMT1CPWU        equ	776	;# 
  1348   000309                     SMT1PR          equ	777	;# 
  1349   000309                     SMT1PRL         equ	777	;# 
  1350   00030A                     SMT1PRH         equ	778	;# 
  1351   00030B                     SMT1PRU         equ	779	;# 
  1352   00030C                     SMT1CON0        equ	780	;# 
  1353   00030D                     SMT1CON1        equ	781	;# 
  1354   00030E                     SMT1STAT        equ	782	;# 
  1355   00030F                     SMT1CLK         equ	783	;# 
  1356   000310                     SMT1SIG         equ	784	;# 
  1357   000311                     SMT1WIN         equ	785	;# 
  1358   000318                     TMR0L           equ	792	;# 
  1359   000318                     TMR0            equ	792	;# 
  1360   000319                     TMR0H           equ	793	;# 
  1361   000319                     PR0             equ	793	;# 
  1362   00031A                     T0CON0          equ	794	;# 
  1363   00031B                     T0CON1          equ	795	;# 
  1364   00031C                     TMR1            equ	796	;# 
  1365   00031C                     TMR1L           equ	796	;# 
  1366   00031D                     TMR1H           equ	797	;# 
  1367   00031E                     T1CON           equ	798	;# 
  1368   00031E                     TMR1CON         equ	798	;# 
  1369   00031F                     T1GCON          equ	799	;# 
  1370   00031F                     TMR1GCON        equ	799	;# 
  1371   000320                     T1GATE          equ	800	;# 
  1372   000320                     TMR1GATE        equ	800	;# 
  1373   000321                     T1CLK           equ	801	;# 
  1374   000321                     TMR1CLK         equ	801	;# 
  1375   000321                     PR1             equ	801	;# 
  1376   000322                     T2TMR           equ	802	;# 
  1377   000322                     TMR2            equ	802	;# 
  1378   000323                     T2PR            equ	803	;# 
  1379   000323                     PR2             equ	803	;# 
  1380   000324                     T2CON           equ	804	;# 
  1381   000325                     T2HLT           equ	805	;# 
  1382   000326                     T2CLKCON        equ	806	;# 
  1383   000326                     T2CLK           equ	806	;# 
  1384   000327                     T2RST           equ	807	;# 
  1385   000328                     TMR3            equ	808	;# 
  1386   000328                     TMR3L           equ	808	;# 
  1387   000329                     TMR3H           equ	809	;# 
  1388   00032A                     T3CON           equ	810	;# 
  1389   00032A                     TMR3CON         equ	810	;# 
  1390   00032B                     T3GCON          equ	811	;# 
  1391   00032B                     TMR3GCON        equ	811	;# 
  1392   00032C                     T3GATE          equ	812	;# 
  1393   00032C                     TMR3GATE        equ	812	;# 
  1394   00032D                     T3CLK           equ	813	;# 
  1395   00032D                     TMR3CLK         equ	813	;# 
  1396   00032D                     PR3             equ	813	;# 
  1397   00032E                     T4TMR           equ	814	;# 
  1398   00032E                     TMR4            equ	814	;# 
  1399   00032F                     T4PR            equ	815	;# 
  1400   00032F                     PR4             equ	815	;# 
  1401   000330                     T4CON           equ	816	;# 
  1402   000331                     T4HLT           equ	817	;# 
  1403   000332                     T4CLKCON        equ	818	;# 
  1404   000332                     T4CLK           equ	818	;# 
  1405   000333                     T4RST           equ	819	;# 
  1406   000334                     TMR5            equ	820	;# 
  1407   000334                     TMR5L           equ	820	;# 
  1408   000335                     TMR5H           equ	821	;# 
  1409   000336                     T5CON           equ	822	;# 
  1410   000336                     TMR5CON         equ	822	;# 
  1411   000337                     T5GCON          equ	823	;# 
  1412   000337                     TMR5GCON        equ	823	;# 
  1413   000338                     T5GATE          equ	824	;# 
  1414   000338                     TMR5GATE        equ	824	;# 
  1415   000339                     T5CLK           equ	825	;# 
  1416   000339                     TMR5CLK         equ	825	;# 
  1417   000339                     PR5             equ	825	;# 
  1418   00033A                     T6TMR           equ	826	;# 
  1419   00033A                     TMR6            equ	826	;# 
  1420   00033B                     T6PR            equ	827	;# 
  1421   00033B                     PR6             equ	827	;# 
  1422   00033C                     T6CON           equ	828	;# 
  1423   00033D                     T6HLT           equ	829	;# 
  1424   00033E                     T6CLKCON        equ	830	;# 
  1425   00033E                     T6CLK           equ	830	;# 
  1426   00033F                     T6RST           equ	831	;# 
  1427   000340                     CCPR1           equ	832	;# 
  1428   000340                     CCPR1L          equ	832	;# 
  1429   000341                     CCPR1H          equ	833	;# 
  1430   000342                     CCP1CON         equ	834	;# 
  1431   000343                     CCP1CAP         equ	835	;# 
  1432   000344                     CCPR2           equ	836	;# 
  1433   000344                     CCPR2L          equ	836	;# 
  1434   000345                     CCPR2H          equ	837	;# 
  1435   000346                     CCP2CON         equ	838	;# 
  1436   000347                     CCP2CAP         equ	839	;# 
  1437   000348                     CCPR3           equ	840	;# 
  1438   000348                     CCPR3L          equ	840	;# 
  1439   000349                     CCPR3H          equ	841	;# 
  1440   00034A                     CCP3CON         equ	842	;# 
  1441   00034B                     CCP3CAP         equ	843	;# 
  1442   00034C                     CCPTMRS0        equ	844	;# 
  1443   00034F                     CRCDATA         equ	847	;# 
  1444   00034F                     CRCDATL         equ	847	;# 
  1445   000350                     CRCDATH         equ	848	;# 
  1446   000351                     CRCACC          equ	849	;# 
  1447   000351                     CRCACCL         equ	849	;# 
  1448   000352                     CRCACCH         equ	850	;# 
  1449   000353                     CRCSHFT         equ	851	;# 
  1450   000353                     CRCSHIFTL       equ	851	;# 
  1451   000354                     CRCSHIFTH       equ	852	;# 
  1452   000355                     CRCXOR          equ	853	;# 
  1453   000355                     CRCXORL         equ	853	;# 
  1454   000356                     CRCXORH         equ	854	;# 
  1455   000357                     CRCCON0         equ	855	;# 
  1456   000358                     CRCCON1         equ	856	;# 
  1457   00035A                     SCANLADR        equ	858	;# 
  1458   00035A                     SCANLADRL       equ	858	;# 
  1459   00035B                     SCANLADRH       equ	859	;# 
  1460   00035C                     SCANLADRU       equ	860	;# 
  1461   00035D                     SCANHADR        equ	861	;# 
  1462   00035D                     SCANHADRL       equ	861	;# 
  1463   00035E                     SCANHADRH       equ	862	;# 
  1464   00035F                     SCANHADRU       equ	863	;# 
  1465   000360                     SCANCON0        equ	864	;# 
  1466   000361                     SCANTRIG        equ	865	;# 
  1467   000362                     IPR0            equ	866	;# 
  1468   000363                     IPR1            equ	867	;# 
  1469   000364                     IPR2            equ	868	;# 
  1470   000365                     IPR3            equ	869	;# 
  1471   000366                     IPR4            equ	870	;# 
  1472   000367                     IPR5            equ	871	;# 
  1473   000368                     IPR6            equ	872	;# 
  1474   000369                     IPR7            equ	873	;# 
  1475   00036A                     IPR8            equ	874	;# 
  1476   00036B                     IPR9            equ	875	;# 
  1477   00036C                     IPR10           equ	876	;# 
  1478   00036D                     IPR11           equ	877	;# 
  1479   00036E                     IPR12           equ	878	;# 
  1480   00036F                     IPR13           equ	879	;# 
  1481   000370                     IPR14           equ	880	;# 
  1482   000371                     IPR15           equ	881	;# 
  1483   000373                     STATUS_CSHAD    equ	883	;# 
  1484   000374                     WREG_CSHAD      equ	884	;# 
  1485   000375                     BSR_CSHAD       equ	885	;# 
  1486   000376                     SHADCON         equ	886	;# 
  1487   000377                     STATUS_SHAD     equ	887	;# 
  1488   000378                     WREG_SHAD       equ	888	;# 
  1489   000379                     BSR_SHAD        equ	889	;# 
  1490   00037A                     PCLATH_SHAD     equ	890	;# 
  1491   00037B                     PCLATU_SHAD     equ	891	;# 
  1492   00037C                     FSR0SH          equ	892	;# 
  1493   00037C                     FSR0L_SHAD      equ	892	;# 
  1494   00037D                     FSR0H_SHAD      equ	893	;# 
  1495   00037E                     FSR1SH          equ	894	;# 
  1496   00037E                     FSR1L_SHAD      equ	894	;# 
  1497   00037F                     FSR1H_SHAD      equ	895	;# 
  1498   000380                     FSR2SH          equ	896	;# 
  1499   000380                     FSR2L_SHAD      equ	896	;# 
  1500   000381                     FSR2H_SHAD      equ	897	;# 
  1501   000382                     PRODSH          equ	898	;# 
  1502   000382                     PRODL_SHAD      equ	898	;# 
  1503   000383                     PRODH_SHAD      equ	899	;# 
  1504   0003BC                     CWG1CLK         equ	956	;# 
  1505   0003BC                     CWG1CLKCON      equ	956	;# 
  1506   0003BD                     CWG1ISM         equ	957	;# 
  1507   0003BD                     CWG1DAT         equ	957	;# 
  1508   0003BE                     CWG1DBR         equ	958	;# 
  1509   0003BF                     CWG1DBF         equ	959	;# 
  1510   0003C0                     CWG1CON0        equ	960	;# 
  1511   0003C1                     CWG1CON1        equ	961	;# 
  1512   0003C2                     CWG1AS0         equ	962	;# 
  1513   0003C3                     CWG1AS1         equ	963	;# 
  1514   0003C4                     CWG1STR         equ	964	;# 
  1515   0003C5                     CWG2CLK         equ	965	;# 
  1516   0003C5                     CWG2CLKCON      equ	965	;# 
  1517   0003C6                     CWG2ISM         equ	966	;# 
  1518   0003C6                     CWG2DAT         equ	966	;# 
  1519   0003C7                     CWG2DBR         equ	967	;# 
  1520   0003C8                     CWG2DBF         equ	968	;# 
  1521   0003C9                     CWG2CON0        equ	969	;# 
  1522   0003CA                     CWG2CON1        equ	970	;# 
  1523   0003CB                     CWG2AS0         equ	971	;# 
  1524   0003CC                     CWG2AS1         equ	972	;# 
  1525   0003CD                     CWG2STR         equ	973	;# 
  1526   0003CE                     CWG3CLK         equ	974	;# 
  1527   0003CE                     CWG3CLKCON      equ	974	;# 
  1528   0003CF                     CWG3ISM         equ	975	;# 
  1529   0003CF                     CWG3DAT         equ	975	;# 
  1530   0003D0                     CWG3DBR         equ	976	;# 
  1531   0003D1                     CWG3DBF         equ	977	;# 
  1532   0003D2                     CWG3CON0        equ	978	;# 
  1533   0003D3                     CWG3CON1        equ	979	;# 
  1534   0003D4                     CWG3AS0         equ	980	;# 
  1535   0003D5                     CWG3AS1         equ	981	;# 
  1536   0003D6                     CWG3STR         equ	982	;# 
  1537   0003D7                     FVRCON          equ	983	;# 
  1538   0003D8                     ADCPCON         equ	984	;# 
  1539   0003D8                     ADCP            equ	984	;# 
  1540   0003D9                     ADLTH           equ	985	;# 
  1541   0003D9                     ADLTHL          equ	985	;# 
  1542   0003DA                     ADLTHH          equ	986	;# 
  1543   0003DB                     ADUTH           equ	987	;# 
  1544   0003DB                     ADUTHL          equ	987	;# 
  1545   0003DC                     ADUTHH          equ	988	;# 
  1546   0003DD                     ADERR           equ	989	;# 
  1547   0003DD                     ADERRL          equ	989	;# 
  1548   0003DE                     ADERRH          equ	990	;# 
  1549   0003DF                     ADSTPT          equ	991	;# 
  1550   0003DF                     ADSTPTL         equ	991	;# 
  1551   0003E0                     ADSTPTH         equ	992	;# 
  1552   0003E1                     ADFLTR          equ	993	;# 
  1553   0003E1                     ADFLTRL         equ	993	;# 
  1554   0003E2                     ADFLTRH         equ	994	;# 
  1555   0003E3                     ADACC           equ	995	;# 
  1556   0003E3                     ADACCL          equ	995	;# 
  1557   0003E4                     ADACCH          equ	996	;# 
  1558   0003E5                     ADACCU          equ	997	;# 
  1559   0003E6                     ADCNT           equ	998	;# 
  1560   0003E7                     ADRPT           equ	999	;# 
  1561   0003E8                     ADPREV          equ	1000	;# 
  1562   0003E8                     ADPREVL         equ	1000	;# 
  1563   0003E9                     ADPREVH         equ	1001	;# 
  1564   0003EA                     ADRES           equ	1002	;# 
  1565   0003EA                     ADRESL          equ	1002	;# 
  1566   0003EB                     ADRESH          equ	1003	;# 
  1567   0003EC                     ADPCH           equ	1004	;# 
  1568   0003EE                     ADACQ           equ	1006	;# 
  1569   0003EE                     ADACQL          equ	1006	;# 
  1570   0003EF                     ADACQH          equ	1007	;# 
  1571   0003F0                     ADCAP           equ	1008	;# 
  1572   0003F1                     ADPRE           equ	1009	;# 
  1573   0003F1                     ADPREL          equ	1009	;# 
  1574   0003F2                     ADPREH          equ	1010	;# 
  1575   0003F3                     ADCON0          equ	1011	;# 
  1576   0003F4                     ADCON1          equ	1012	;# 
  1577   0003F5                     ADCON2          equ	1013	;# 
  1578   0003F6                     ADCON3          equ	1014	;# 
  1579   0003F7                     ADSTAT          equ	1015	;# 
  1580   0003F8                     ADREF           equ	1016	;# 
  1581   0003F9                     ADACT           equ	1017	;# 
  1582   0003FA                     ADCLK           equ	1018	;# 
  1583   000400                     ANSELA          equ	1024	;# 
  1584   000401                     WPUA            equ	1025	;# 
  1585   000402                     ODCONA          equ	1026	;# 
  1586   000403                     SLRCONA         equ	1027	;# 
  1587   000404                     INLVLA          equ	1028	;# 
  1588   000405                     IOCAP           equ	1029	;# 
  1589   000406                     IOCAN           equ	1030	;# 
  1590   000407                     IOCAF           equ	1031	;# 
  1591   000408                     ANSELB          equ	1032	;# 
  1592   000409                     WPUB            equ	1033	;# 
  1593   00040A                     ODCONB          equ	1034	;# 
  1594   00040B                     SLRCONB         equ	1035	;# 
  1595   00040C                     INLVLB          equ	1036	;# 
  1596   00040D                     IOCBP           equ	1037	;# 
  1597   00040E                     IOCBN           equ	1038	;# 
  1598   00040F                     IOCBF           equ	1039	;# 
  1599   000410                     ANSELC          equ	1040	;# 
  1600   000411                     WPUC            equ	1041	;# 
  1601   000412                     ODCONC          equ	1042	;# 
  1602   000413                     SLRCONC         equ	1043	;# 
  1603   000414                     INLVLC          equ	1044	;# 
  1604   000415                     IOCCP           equ	1045	;# 
  1605   000416                     IOCCN           equ	1046	;# 
  1606   000417                     IOCCF           equ	1047	;# 
  1607   000418                     ANSELD          equ	1048	;# 
  1608   000419                     WPUD            equ	1049	;# 
  1609   00041A                     ODCOND          equ	1050	;# 
  1610   00041B                     SLRCOND         equ	1051	;# 
  1611   00041C                     INLVLD          equ	1052	;# 
  1612   000420                     ANSELE          equ	1056	;# 
  1613   000421                     WPUE            equ	1057	;# 
  1614   000422                     ODCONE          equ	1058	;# 
  1615   000423                     SLRCONE         equ	1059	;# 
  1616   000424                     INLVLE          equ	1060	;# 
  1617   000425                     IOCEP           equ	1061	;# 
  1618   000426                     IOCEN           equ	1062	;# 
  1619   000427                     IOCEF           equ	1063	;# 
  1620   000428                     ANSELF          equ	1064	;# 
  1621   000429                     WPUF            equ	1065	;# 
  1622   00042A                     ODCONF          equ	1066	;# 
  1623   00042B                     SLRCONF         equ	1067	;# 
  1624   00042C                     INLVLF          equ	1068	;# 
  1625   000440                     NCO1ACC         equ	1088	;# 
  1626   000440                     NCO1ACCL        equ	1088	;# 
  1627   000441                     NCO1ACCH        equ	1089	;# 
  1628   000442                     NCO1ACCU        equ	1090	;# 
  1629   000443                     NCO1INC         equ	1091	;# 
  1630   000443                     NCO1INCL        equ	1091	;# 
  1631   000444                     NCO1INCH        equ	1092	;# 
  1632   000445                     NCO1INCU        equ	1093	;# 
  1633   000446                     NCO1CON         equ	1094	;# 
  1634   000447                     NCO1CLK         equ	1095	;# 
  1635   000448                     NCO2ACC         equ	1096	;# 
  1636   000448                     NCO2ACCL        equ	1096	;# 
  1637   000449                     NCO2ACCH        equ	1097	;# 
  1638   00044A                     NCO2ACCU        equ	1098	;# 
  1639   00044B                     NCO2INC         equ	1099	;# 
  1640   00044B                     NCO2INCL        equ	1099	;# 
  1641   00044C                     NCO2INCH        equ	1100	;# 
  1642   00044D                     NCO2INCU        equ	1101	;# 
  1643   00044E                     NCO2CON         equ	1102	;# 
  1644   00044F                     NCO2CLK         equ	1103	;# 
  1645   000450                     NCO3ACC         equ	1104	;# 
  1646   000450                     NCO3ACCL        equ	1104	;# 
  1647   000451                     NCO3ACCH        equ	1105	;# 
  1648   000452                     NCO3ACCU        equ	1106	;# 
  1649   000453                     NCO3INC         equ	1107	;# 
  1650   000453                     NCO3INCL        equ	1107	;# 
  1651   000454                     NCO3INCH        equ	1108	;# 
  1652   000455                     NCO3INCU        equ	1109	;# 
  1653   000456                     NCO3CON         equ	1110	;# 
  1654   000457                     NCO3CLK         equ	1111	;# 
  1655   000459                     IVTLOCK         equ	1113	;# 
  1656   00045A                     IVTAD           equ	1114	;# 
  1657   00045A                     IVTADL          equ	1114	;# 
  1658   00045B                     IVTADH          equ	1115	;# 
  1659   00045C                     IVTADU          equ	1116	;# 
  1660   00045D                     IVTBASE         equ	1117	;# 
  1661   00045D                     IVTBASEL        equ	1117	;# 
  1662   00045E                     IVTBASEH        equ	1118	;# 
  1663   00045F                     IVTBASEU        equ	1119	;# 
  1664   000460                     PWM1ERS         equ	1120	;# 
  1665   000461                     PWM1CLK         equ	1121	;# 
  1666   000462                     PWM1LDS         equ	1122	;# 
  1667   000463                     PWM1PR          equ	1123	;# 
  1668   000463                     PWM1PRL         equ	1123	;# 
  1669   000464                     PWM1PRH         equ	1124	;# 
  1670   000465                     PWM1CPRE        equ	1125	;# 
  1671   000466                     PWM1PIPOS       equ	1126	;# 
  1672   000467                     PWM1GIR         equ	1127	;# 
  1673   000468                     PWM1GIE         equ	1128	;# 
  1674   000469                     PWM1CON         equ	1129	;# 
  1675   00046A                     PWM1S1CFG       equ	1130	;# 
  1676   00046B                     PWM1S1P1        equ	1131	;# 
  1677   00046B                     PWM1S1P1L       equ	1131	;# 
  1678   00046C                     PWM1S1P1H       equ	1132	;# 
  1679   00046D                     PWM1S1P2        equ	1133	;# 
  1680   00046D                     PWM1S1P2L       equ	1133	;# 
  1681   00046E                     PWM1S1P2H       equ	1134	;# 
  1682   00046F                     PWM2ERS         equ	1135	;# 
  1683   000470                     PWM2CLK         equ	1136	;# 
  1684   000471                     PWM2LDS         equ	1137	;# 
  1685   000472                     PWM2PR          equ	1138	;# 
  1686   000472                     PWM2PRL         equ	1138	;# 
  1687   000473                     PWM2PRH         equ	1139	;# 
  1688   000474                     PWM2CPRE        equ	1140	;# 
  1689   000475                     PWM2PIPOS       equ	1141	;# 
  1690   000476                     PWM2GIR         equ	1142	;# 
  1691   000477                     PWM2GIE         equ	1143	;# 
  1692   000478                     PWM2CON         equ	1144	;# 
  1693   000479                     PWM2S1CFG       equ	1145	;# 
  1694   00047A                     PWM2S1P1        equ	1146	;# 
  1695   00047A                     PWM2S1P1L       equ	1146	;# 
  1696   00047B                     PWM2S1P1H       equ	1147	;# 
  1697   00047C                     PWM2S1P2        equ	1148	;# 
  1698   00047C                     PWM2S1P2L       equ	1148	;# 
  1699   00047D                     PWM2S1P2H       equ	1149	;# 
  1700   00047E                     PWM3ERS         equ	1150	;# 
  1701   00047F                     PWM3CLK         equ	1151	;# 
  1702   000480                     PWM3LDS         equ	1152	;# 
  1703   000481                     PWM3PR          equ	1153	;# 
  1704   000481                     PWM3PRL         equ	1153	;# 
  1705   000482                     PWM3PRH         equ	1154	;# 
  1706   000483                     PWM3CPRE        equ	1155	;# 
  1707   000484                     PWM3PIPOS       equ	1156	;# 
  1708   000485                     PWM3GIR         equ	1157	;# 
  1709   000486                     PWM3GIE         equ	1158	;# 
  1710   000487                     PWM3CON         equ	1159	;# 
  1711   000488                     PWM3S1CFG       equ	1160	;# 
  1712   000489                     PWM3S1P1        equ	1161	;# 
  1713   000489                     PWM3S1P1L       equ	1161	;# 
  1714   00048A                     PWM3S1P1H       equ	1162	;# 
  1715   00048B                     PWM3S1P2        equ	1163	;# 
  1716   00048B                     PWM3S1P2L       equ	1163	;# 
  1717   00048C                     PWM3S1P2H       equ	1164	;# 
  1718   00049C                     PWMLOAD         equ	1180	;# 
  1719   00049D                     PWMEN           equ	1181	;# 
  1720   00049E                     PIE0            equ	1182	;# 
  1721   00049F                     PIE1            equ	1183	;# 
  1722   0004A0                     PIE2            equ	1184	;# 
  1723   0004A1                     PIE3            equ	1185	;# 
  1724   0004A2                     PIE4            equ	1186	;# 
  1725   0004A3                     PIE5            equ	1187	;# 
  1726   0004A4                     PIE6            equ	1188	;# 
  1727   0004A5                     PIE7            equ	1189	;# 
  1728   0004A6                     PIE8            equ	1190	;# 
  1729   0004A7                     PIE9            equ	1191	;# 
  1730   0004A8                     PIE10           equ	1192	;# 
  1731   0004A9                     PIE11           equ	1193	;# 
  1732   0004AA                     PIE12           equ	1194	;# 
  1733   0004AB                     PIE13           equ	1195	;# 
  1734   0004AC                     PIE14           equ	1196	;# 
  1735   0004AD                     PIE15           equ	1197	;# 
  1736   0004AE                     PIR0            equ	1198	;# 
  1737   0004AF                     PIR1            equ	1199	;# 
  1738   0004B0                     PIR2            equ	1200	;# 
  1739   0004B1                     PIR3            equ	1201	;# 
  1740   0004B2                     PIR4            equ	1202	;# 
  1741   0004B3                     PIR5            equ	1203	;# 
  1742   0004B4                     PIR6            equ	1204	;# 
  1743   0004B5                     PIR7            equ	1205	;# 
  1744   0004B6                     PIR8            equ	1206	;# 
  1745   0004B7                     PIR9            equ	1207	;# 
  1746   0004B8                     PIR10           equ	1208	;# 
  1747   0004B9                     PIR11           equ	1209	;# 
  1748   0004BA                     PIR12           equ	1210	;# 
  1749   0004BB                     PIR13           equ	1211	;# 
  1750   0004BC                     PIR14           equ	1212	;# 
  1751   0004BD                     PIR15           equ	1213	;# 
  1752   0004BE                     LATA            equ	1214	;# 
  1753   0004BF                     LATB            equ	1215	;# 
  1754   0004C0                     LATC            equ	1216	;# 
  1755   0004C1                     LATD            equ	1217	;# 
  1756   0004C2                     LATE            equ	1218	;# 
  1757   0004C3                     LATF            equ	1219	;# 
  1758   0004C6                     TRISA           equ	1222	;# 
  1759   0004C7                     TRISB           equ	1223	;# 
  1760   0004C8                     TRISC           equ	1224	;# 
  1761   0004C9                     TRISD           equ	1225	;# 
  1762   0004CA                     TRISE           equ	1226	;# 
  1763   0004CB                     TRISF           equ	1227	;# 
  1764   0004CE                     PORTA           equ	1230	;# 
  1765   0004CF                     PORTB           equ	1231	;# 
  1766   0004D0                     PORTC           equ	1232	;# 
  1767   0004D1                     PORTD           equ	1233	;# 
  1768   0004D2                     PORTE           equ	1234	;# 
  1769   0004D3                     PORTF           equ	1235	;# 
  1770   0004D6                     INTCON0         equ	1238	;# 
  1771   0004D7                     INTCON1         equ	1239	;# 
  1772   0004D8                     STATUS          equ	1240	;# 
  1773   0004D9                     FSR2            equ	1241	;# 
  1774   0004D9                     FSR2L           equ	1241	;# 
  1775   0004DA                     FSR2H           equ	1242	;# 
  1776   0004DB                     PLUSW2          equ	1243	;# 
  1777   0004DC                     PREINC2         equ	1244	;# 
  1778   0004DD                     POSTDEC2        equ	1245	;# 
  1779   0004DE                     POSTINC2        equ	1246	;# 
  1780   0004DF                     INDF2           equ	1247	;# 
  1781   0004E0                     BSR             equ	1248	;# 
  1782   0004E1                     FSR1            equ	1249	;# 
  1783   0004E1                     FSR1L           equ	1249	;# 
  1784   0004E2                     FSR1H           equ	1250	;# 
  1785   0004E3                     PLUSW1          equ	1251	;# 
  1786   0004E4                     PREINC1         equ	1252	;# 
  1787   0004E5                     POSTDEC1        equ	1253	;# 
  1788   0004E6                     POSTINC1        equ	1254	;# 
  1789   0004E7                     INDF1           equ	1255	;# 
  1790   0004E8                     WREG            equ	1256	;# 
  1791   0004E9                     FSR0            equ	1257	;# 
  1792   0004E9                     FSR0L           equ	1257	;# 
  1793   0004EA                     FSR0H           equ	1258	;# 
  1794   0004EB                     PLUSW0          equ	1259	;# 
  1795   0004EC                     PREINC0         equ	1260	;# 
  1796   0004ED                     POSTDEC0        equ	1261	;# 
  1797   0004EE                     POSTINC0        equ	1262	;# 
  1798   0004EF                     INDF0           equ	1263	;# 
  1799   0004F0                     PCON0           equ	1264	;# 
  1800   0004F1                     PCON1           equ	1265	;# 
  1801   0004F2                     CPUDOZE         equ	1266	;# 
  1802   0004F3                     PROD            equ	1267	;# 
  1803   0004F3                     PRODL           equ	1267	;# 
  1804   0004F4                     PRODH           equ	1268	;# 
  1805   0004F5                     TABLAT          equ	1269	;# 
  1806   0004F6                     TBLPTR          equ	1270	;# 
  1807   0004F6                     TBLPTRL         equ	1270	;# 
  1808   0004F7                     TBLPTRH         equ	1271	;# 
  1809   0004F8                     TBLPTRU         equ	1272	;# 
  1810   0004F9                     PCLAT           equ	1273	;# 
  1811   0004F9                     PCL             equ	1273	;# 
  1812   0004FA                     PCLATH          equ	1274	;# 
  1813   0004FB                     PCLATU          equ	1275	;# 
  1814   0004FC                     STKPTR          equ	1276	;# 
  1815   0004FD                     TOS             equ	1277	;# 
  1816   0004FD                     TOSL            equ	1277	;# 
  1817   0004FE                     TOSH            equ	1278	;# 
  1818   0004FF                     TOSU            equ	1279	;# 
  1819   00007D                     _DAC1DATL       set	125
  1820   00007F                     _DAC1CON        set	127
  1821   0000B3                     _OSCEN          set	179
  1822   0000B1                     _OSCFRQ         set	177
  1823   0000AD                     _OSCCON1        set	173
  1824   0003EB                     _ADRESH         set	1003
  1825   0003EC                     _ADPCH          set	1004
  1826   0003F3                     _ADCON0bits     set	1011
  1827   000418                     _ANSELD         set	1048
  1828   000400                     _ANSELAbits     set	1024
  1829   0004D1                     _PORTD          set	1233
  1830   0004C9                     _TRISD          set	1225
  1831   0004C1                     _LATD           set	1217
  1832   0004C1                     _LATDbits       set	1217
  1833   0004C6                     _TRISAbits      set	1222
  1834                           
  1835                           	psect	smallconst
  1836   002600                     __psmallconst:
  1837                           	callstack 0
  1838   002600  00                 	db	0
  1839   002601                     STR_2:
  1840   002601  63                 	db	99	;'c'
  1841   002602  6F                 	db	111	;'o'
  1842   002603  6E                 	db	110	;'n'
  1843   002604  20                 	db	32
  1844   002605  50                 	db	80	;'P'
  1845   002606  49                 	db	73	;'I'
  1846   002607  43                 	db	67	;'C'
  1847   002608  31                 	db	49	;'1'
  1848   002609  38                 	db	56	;'8'
  1849   00260A  46                 	db	70	;'F'
  1850   00260B  35                 	db	53	;'5'
  1851   00260C  37                 	db	55	;'7'
  1852   00260D  51                 	db	81	;'Q'
  1853   00260E  34                 	db	52	;'4'
  1854   00260F  33                 	db	51	;'3'
  1855   002610  00                 	db	0
  1856   002611                     STR_1:
  1857   002611  50                 	db	80	;'P'
  1858   002612  72                 	db	114	;'r'
  1859   002613  75                 	db	117	;'u'
  1860   002614  65                 	db	101	;'e'
  1861   002615  62                 	db	98	;'b'
  1862   002616  61                 	db	97	;'a'
  1863   002617  20                 	db	32
  1864   002618  41                 	db	65	;'A'
  1865   002619  44                 	db	68	;'D'
  1866   00261A  43                 	db	67	;'C'
  1867   00261B  2D                 	db	45
  1868   00261C  44                 	db	68	;'D'
  1869   00261D  41                 	db	65	;'A'
  1870   00261E  43                 	db	67	;'C'
  1871   00261F  00                 	db	0
  1872   002620                     STR_4:
  1873   002620  44                 	db	68	;'D'
  1874   002621  41                 	db	65	;'A'
  1875   002622  43                 	db	67	;'C'
  1876   002623  31                 	db	49	;'1'
  1877   002624  44                 	db	68	;'D'
  1878   002625  41                 	db	65	;'A'
  1879   002626  54                 	db	84	;'T'
  1880   002627  4C                 	db	76	;'L'
  1881   002628  3A                 	db	58	;':'
  1882   002629  00                 	db	0
  1883   00262A                     STR_3:
  1884   00262A  41                 	db	65	;'A'
  1885   00262B  44                 	db	68	;'D'
  1886   00262C  52                 	db	82	;'R'
  1887   00262D  45                 	db	69	;'E'
  1888   00262E  53                 	db	83	;'S'
  1889   00262F  48                 	db	72	;'H'
  1890   002630  3A                 	db	58	;':'
  1891   002631  00                 	db	0
  1892   002632  00                 	db	0	; dummy byte at the end
  1893   000003                     __activetblptr  equ	3
  1894                           
  1895                           ; #config settings
  1896                           
  1897                           	psect	cinit
  1898   002C24                     __pcinit:
  1899                           	callstack 0
  1900   002C24                     start_initialization:
  1901                           	callstack 0
  1902   002C24                     __initialization:
  1903                           	callstack 0
  1904   002C24                     end_of_initialization:
  1905                           	callstack 0
  1906   002C24                     __end_of__initialization:
  1907                           	callstack 0
  1908   002C24  0100               	movlb	0
  1909   002C26  EF38  F014         	goto	_main	;jump to C main() function
  1910                           
  1911                           	psect	cstackCOMRAM
  1912   000501                     __pcstackCOMRAM:
  1913                           	callstack 0
  1914   000501                     ?_strlen:
  1915                           	callstack 0
  1916   000501                     ?___awmod:
  1917                           	callstack 0
  1918   000501                     ENVIA_NIBBLE@dato:
  1919                           	callstack 0
  1920   000501                     LEER_LCD@aux:
  1921                           	callstack 0
  1922   000501                     strlen@s:
  1923                           	callstack 0
  1924   000501                     ___awmod@dividend:
  1925                           	callstack 0
  1926   000501                     
  1927                           ; 1 bytes @ 0x0
  1928   000501                     	ds	1
  1929   000502                     ENVIA_LCD_CMD@dato:
  1930                           	callstack 0
  1931   000502                     ??_ENVIA_CHAR:
  1932                           
  1933                           ; 1 bytes @ 0x1
  1934   000502                     	ds	1
  1935   000503                     ENVIA_CHAR@dato:
  1936                           	callstack 0
  1937   000503                     ENVIA_LCD_CMD@aux:
  1938                           	callstack 0
  1939   000503                     strlen@a:
  1940                           	callstack 0
  1941   000503                     ___awmod@divisor:
  1942                           	callstack 0
  1943   000503                     
  1944                           ; 1 bytes @ 0x2
  1945   000503                     	ds	1
  1946   000504                     POS_CURSOR@columna:
  1947                           	callstack 0
  1948   000504                     CURSOR_ONOFF@estado:
  1949                           	callstack 0
  1950   000504                     ENVIA_CHAR@aux:
  1951                           	callstack 0
  1952   000504                     ??_LCD_CONFIG:
  1953                           
  1954                           ; 1 bytes @ 0x3
  1955   000504                     	ds	1
  1956   000505                     POS_CURSOR@fila:
  1957                           	callstack 0
  1958   000505                     ESCRIBE_MENSAJE2@cadena:
  1959                           	callstack 0
  1960   000505                     ___awmod@counter:
  1961                           	callstack 0
  1962   000505                     ??_LCD_INIT:
  1963   000505                     
  1964                           ; 1 bytes @ 0x4
  1965   000505                     	ds	1
  1966   000506                     ___awmod@sign:
  1967                           	callstack 0
  1968   000506                     ??_ESCRIBE_MENSAJE2:
  1969                           
  1970                           ; 1 bytes @ 0x5
  1971   000506                     	ds	1
  1972   000507                     ?___awdiv:
  1973                           	callstack 0
  1974   000507                     ESCRIBE_MENSAJE2@tam:
  1975                           	callstack 0
  1976   000507                     ___awdiv@dividend:
  1977                           	callstack 0
  1978   000507                     
  1979                           ; 1 bytes @ 0x6
  1980   000507                     	ds	1
  1981   000508                     ESCRIBE_MENSAJE2@i:
  1982                           	callstack 0
  1983                           
  1984                           ; 1 bytes @ 0x7
  1985   000508                     	ds	1
  1986   000509                     ___awdiv@divisor:
  1987                           	callstack 0
  1988                           
  1989                           ; 2 bytes @ 0x8
  1990   000509                     	ds	2
  1991   00050B                     ___awdiv@counter:
  1992                           	callstack 0
  1993   00050B                     
  1994                           ; 1 bytes @ 0xA
  1995   00050B                     	ds	1
  1996   00050C                     ___awdiv@sign:
  1997                           	callstack 0
  1998                           
  1999                           ; 1 bytes @ 0xB
  2000   00050C                     	ds	1
  2001   00050D                     ___awdiv@quotient:
  2002                           	callstack 0
  2003                           
  2004                           ; 2 bytes @ 0xC
  2005   00050D                     	ds	2
  2006   00050F                     LCD_ESCRIBE_VAR_CHAR@n_digitos:
  2007                           	callstack 0
  2008                           
  2009                           ; 1 bytes @ 0xE
  2010   00050F                     	ds	1
  2011   000510                     LCD_ESCRIBE_VAR_CHAR@centena:
  2012                           	callstack 0
  2013   000510                     
  2014                           ; 1 bytes @ 0xF
  2015   000510                     	ds	1
  2016   000511                     LCD_ESCRIBE_VAR_CHAR@decena:
  2017                           	callstack 0
  2018                           
  2019                           ; 1 bytes @ 0x10
  2020   000511                     	ds	1
  2021   000512                     LCD_ESCRIBE_VAR_CHAR@numero:
  2022                           	callstack 0
  2023                           
  2024                           ; 1 bytes @ 0x11
  2025   000512                     	ds	1
  2026   000513                     LCD_ESCRIBE_VAR_CHAR@unidad:
  2027                           	callstack 0
  2028                           
  2029                           ; 1 bytes @ 0x12
  2030   000513                     	ds	1
  2031   000514                     ??_main:
  2032                           
  2033                           ; 1 bytes @ 0x13
  2034   000514                     	ds	2
  2035                           
  2036 ;;
  2037 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2038 ;;
  2039 ;; *************** function _main *****************
  2040 ;; Defined at:
  2041 ;;		line 43 in file "maincode01.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;		None
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2057 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2058 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2059 ;;Total ram usage:        2 bytes
  2060 ;; Hardware stack levels required when called: 5
  2061 ;; This function calls:
  2062 ;;		_BORRAR_LCD
  2063 ;;		_ESCRIBE_MENSAJE2
  2064 ;;		_LCD_ESCRIBE_VAR_CHAR
  2065 ;;		_POS_CURSOR
  2066 ;;		_configuro
  2067 ;;		_tomamuestra_ADC
  2068 ;; This function is called by:
  2069 ;;		Startup code after reset
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text0
  2074   002870                     __ptext0:
  2075                           	callstack 0
  2076   002870                     _main:
  2077                           	callstack 122
  2078   002870                     
  2079                           ;maincode01.c: 44:     configuro();
  2080   002870  EC8C  F015         	call	_configuro	;wreg free
  2081                           
  2082                           ;maincode01.c: 45:     POS_CURSOR(1,0);
  2083   002874  0E00               	movlw	0
  2084   002876  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2085   002878  0E01               	movlw	1
  2086   00287A  EC7F  F014         	call	_POS_CURSOR
  2087   00287E                     
  2088                           ;maincode01.c: 46:     ESCRIBE_MENSAJE2("Prueba ADC-DAC");
  2089   00287E  0E11               	movlw	low STR_1
  2090   002880  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2091   002882  EC4F  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
  2092   002886                     
  2093                           ;maincode01.c: 47:     POS_CURSOR(2,0);
  2094   002886  0E00               	movlw	0
  2095   002888  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2096   00288A  0E02               	movlw	2
  2097   00288C  EC7F  F014         	call	_POS_CURSOR
  2098                           
  2099                           ;maincode01.c: 48:     ESCRIBE_MENSAJE2("con PIC18F57Q43");
  2100   002890  0E01               	movlw	low STR_2
  2101   002892  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2102   002894  EC4F  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
  2103   002898                     
  2104                           ;maincode01.c: 49:     _delay((unsigned long)((3000)*(32000000UL/4000.0)));
  2105   002898  0E7A               	movlw	122
  2106   00289A  6E15               	movwf	(??_main+1)^(0+1280),c
  2107   00289C  0EC1               	movlw	193
  2108   00289E  6E14               	movwf	??_main^(0+1280),c
  2109   0028A0  0E82               	movlw	130
  2110   0028A2                     u527:
  2111   0028A2  2EE8               	decfsz	wreg,f,c
  2112   0028A4  D7FE               	bra	u527
  2113   0028A6  2E14               	decfsz	??_main^(0+1280),f,c
  2114   0028A8  D7FC               	bra	u527
  2115   0028AA  2E15               	decfsz	(??_main+1)^(0+1280),f,c
  2116   0028AC  D7FA               	bra	u527
  2117   0028AE                     
  2118                           ;maincode01.c: 50:     BORRAR_LCD();
  2119   0028AE  EC0E  F016         	call	_BORRAR_LCD	;wreg free
  2120   0028B2                     l1488:
  2121                           
  2122                           ;maincode01.c: 52:         DAC1DATL = tomamuestra_ADC();
  2123   0028B2  ECFE  F015         	call	_tomamuestra_ADC	;wreg free
  2124   0028B6  0100               	movlb	0	; () banked
  2125   0028B8  6F7D               	movwf	125,b	;volatile
  2126   0028BA                     
  2127                           ; BSR set to: 0
  2128                           ;maincode01.c: 53:         POS_CURSOR(1,0);
  2129   0028BA  0E00               	movlw	0
  2130   0028BC  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2131   0028BE  0E01               	movlw	1
  2132   0028C0  EC7F  F014         	call	_POS_CURSOR
  2133   0028C4                     
  2134                           ;maincode01.c: 54:         ESCRIBE_MENSAJE2("ADRESH:");
  2135   0028C4  0E2A               	movlw	low STR_3
  2136   0028C6  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2137   0028C8  EC4F  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
  2138   0028CC                     
  2139                           ;maincode01.c: 55:         LCD_ESCRIBE_VAR_CHAR(ADRESH, 3);
  2140   0028CC  0E03               	movlw	3
  2141   0028CE  6E0F               	movwf	LCD_ESCRIBE_VAR_CHAR@n_digitos^(0+1280),c
  2142   0028D0  0103               	movlb	3	; () banked
  2143   0028D2  51EB               	movf	235,w,b	;volatile
  2144   0028D4  EC1A  F013         	call	_LCD_ESCRIBE_VAR_CHAR
  2145   0028D8                     
  2146                           ;maincode01.c: 56:         POS_CURSOR(2,0);
  2147   0028D8  0E00               	movlw	0
  2148   0028DA  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2149   0028DC  0E02               	movlw	2
  2150   0028DE  EC7F  F014         	call	_POS_CURSOR
  2151   0028E2                     
  2152                           ;maincode01.c: 57:         ESCRIBE_MENSAJE2("DAC1DATL:");
  2153   0028E2  0E20               	movlw	low STR_4
  2154   0028E4  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2155   0028E6  EC4F  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
  2156   0028EA                     
  2157                           ;maincode01.c: 58:         LCD_ESCRIBE_VAR_CHAR(DAC1DATL, 3);
  2158   0028EA  0E03               	movlw	3
  2159   0028EC  6E0F               	movwf	LCD_ESCRIBE_VAR_CHAR@n_digitos^(0+1280),c
  2160   0028EE  0100               	movlb	0	; () banked
  2161   0028F0  517D               	movf	125,w,b	;volatile
  2162   0028F2  EC1A  F013         	call	_LCD_ESCRIBE_VAR_CHAR
  2163   0028F6  EF59  F014         	goto	l1488
  2164   0028FA  EFFE  F0FF         	goto	start
  2165   0028FE                     __end_of_main:
  2166                           	callstack 0
  2167                           
  2168 ;; *************** function _tomamuestra_ADC *****************
  2169 ;; Defined at:
  2170 ;;		line 36 in file "maincode01.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      unsigned char 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2188 ;;Total ram usage:        0 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_main
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text1
  2198   002BFC                     __ptext1:
  2199                           	callstack 0
  2200   002BFC                     _tomamuestra_ADC:
  2201                           	callstack 126
  2202   002BFC                     
  2203                           ;maincode01.c: 37:     ADPCH = 0;
  2204   002BFC  0103               	movlb	3	; () banked
  2205   002BFE  6BEC               	clrf	236,b	;volatile
  2206                           
  2207                           ;maincode01.c: 38:     ADCON0bits.GO = 1;
  2208   002C00  81F3               	bsf	243,0,b	;volatile
  2209   002C02                     l38:
  2210                           
  2211                           ; BSR set to: 3
  2212   002C02  B1F3               	btfsc	243,0,b	;volatile
  2213   002C04  EF06  F016         	goto	u171
  2214   002C08  EF08  F016         	goto	u170
  2215   002C0C                     u171:
  2216   002C0C  EF01  F016         	goto	l38
  2217   002C10                     u170:
  2218   002C10                     
  2219                           ; BSR set to: 3
  2220                           ;maincode01.c: 40:     return ADRESH;
  2221   002C10  51EB               	movf	235,w,b	;volatile
  2222   002C12                     
  2223                           ; BSR set to: 3
  2224   002C12  0012               	return		;funcret
  2225   002C14                     __end_of_tomamuestra_ADC:
  2226                           	callstack 0
  2227                           
  2228 ;; *************** function _configuro *****************
  2229 ;; Defined at:
  2230 ;;		line 13 in file "maincode01.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; Hardware stack levels required when called: 4
  2251 ;; This function calls:
  2252 ;;		_LCD_INIT
  2253 ;; This function is called by:
  2254 ;;		_main
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text2
  2259   002B18                     __ptext2:
  2260                           	callstack 0
  2261   002B18                     _configuro:
  2262                           	callstack 122
  2263   002B18                     
  2264                           ;maincode01.c: 15:     OSCCON1 = 0x60;
  2265   002B18  0E60               	movlw	96
  2266   002B1A  0100               	movlb	0	; () banked
  2267   002B1C  6FAD               	movwf	173,b	;volatile
  2268                           
  2269                           ;maincode01.c: 16:     OSCFRQ = 0x06;
  2270   002B1E  0E06               	movlw	6
  2271   002B20  6FB1               	movwf	177,b	;volatile
  2272                           
  2273                           ;maincode01.c: 17:     OSCEN = 0x40;
  2274   002B22  0E40               	movlw	64
  2275   002B24  6FB3               	movwf	179,b	;volatile
  2276   002B26                     
  2277                           ; BSR set to: 0
  2278                           ;maincode01.c: 19:     TRISAbits.TRISA0 = 1;
  2279   002B26  80C6               	bsf	198,0,c	;volatile
  2280   002B28                     
  2281                           ; BSR set to: 0
  2282                           ;maincode01.c: 20:     ANSELAbits.ANSELA0 = 1;
  2283   002B28  0104               	movlb	4	; () banked
  2284   002B2A  8100               	bsf	0,0,b	;volatile
  2285   002B2C                     
  2286                           ; BSR set to: 4
  2287                           ;maincode01.c: 21:     TRISAbits.TRISA2 = 0;
  2288   002B2C  94C6               	bcf	198,2,c	;volatile
  2289   002B2E                     
  2290                           ; BSR set to: 4
  2291                           ;maincode01.c: 22:     ANSELAbits.ANSELA2 = 1;
  2292   002B2E  8500               	bsf	0,2,b	;volatile
  2293   002B30                     
  2294                           ; BSR set to: 4
  2295                           ;maincode01.c: 24:     TRISAbits.TRISA0 = 1;
  2296   002B30  80C6               	bsf	198,0,c	;volatile
  2297   002B32                     
  2298                           ; BSR set to: 4
  2299                           ;maincode01.c: 25:     ANSELAbits.ANSELA0 = 1;
  2300   002B32  8100               	bsf	0,0,b	;volatile
  2301                           
  2302                           ;maincode01.c: 26:     ADCON0bits.FM = 0;
  2303   002B34  0EF3               	movlw	-13
  2304   002B36  0103               	movlb	3	; () banked
  2305   002B38  17F3               	andwf	243,f,b	;volatile
  2306   002B3A                     
  2307                           ; BSR set to: 3
  2308                           ;maincode01.c: 27:     ADCON0bits.CS = 1;
  2309   002B3A  89F3               	bsf	243,4,b	;volatile
  2310   002B3C                     
  2311                           ; BSR set to: 3
  2312                           ;maincode01.c: 28:     ADCON0bits.ADON = 1;
  2313   002B3C  8FF3               	bsf	243,7,b	;volatile
  2314                           
  2315                           ;maincode01.c: 30:     DAC1CON = 0xA0;
  2316   002B3E  0EA0               	movlw	160
  2317   002B40  0100               	movlb	0	; () banked
  2318   002B42  6F7F               	movwf	127,b	;volatile
  2319   002B44                     
  2320                           ; BSR set to: 0
  2321                           ;maincode01.c: 31:     DAC1DATL = 0x00;
  2322   002B44  6B7D               	clrf	125,b	;volatile
  2323   002B46                     
  2324                           ; BSR set to: 0
  2325                           ;maincode01.c: 33:     LCD_INIT();
  2326   002B46  ECF5  F014         	call	_LCD_INIT	;wreg free
  2327   002B4A  0012               	return		;funcret
  2328   002B4C                     __end_of_configuro:
  2329                           	callstack 0
  2330                           
  2331 ;; *************** function _LCD_INIT *****************
  2332 ;; Defined at:
  2333 ;;		line 182 in file "LCD.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2349 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2351 ;;Total ram usage:        2 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; Hardware stack levels required when called: 3
  2354 ;; This function calls:
  2355 ;;		_BORRAR_LCD
  2356 ;;		_CURSOR_HOME
  2357 ;;		_CURSOR_ONOFF
  2358 ;;		_LCD_CONFIG
  2359 ;; This function is called by:
  2360 ;;		_configuro
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           	psect	text3
  2365   0029EA                     __ptext3:
  2366                           	callstack 0
  2367   0029EA                     _LCD_INIT:
  2368                           	callstack 122
  2369   0029EA                     
  2370                           ;LCD.c: 183:     _delay((unsigned long)((500)*(32000000UL/4000.0)));
  2371   0029EA  0E15               	movlw	21
  2372   0029EC  6E06               	movwf	(??_LCD_INIT+1)^(0+1280),c
  2373   0029EE  0E4B               	movlw	75
  2374   0029F0  6E05               	movwf	??_LCD_INIT^(0+1280),c
  2375   0029F2  0EBE               	movlw	190
  2376   0029F4                     u537:
  2377   0029F4  2EE8               	decfsz	wreg,f,c
  2378   0029F6  D7FE               	bra	u537
  2379   0029F8  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  2380   0029FA  D7FC               	bra	u537
  2381   0029FC  2E06               	decfsz	(??_LCD_INIT+1)^(0+1280),f,c
  2382   0029FE  D7FA               	bra	u537
  2383   002A00  D000               	nop2	
  2384   002A02                     
  2385                           ;LCD.c: 184:     TRISD = 0x00;
  2386   002A02  6AC9               	clrf	201,c	;volatile
  2387   002A04                     
  2388                           ;LCD.c: 185:     ANSELD = 0x00;
  2389   002A04  0104               	movlb	4	; () banked
  2390   002A06  6B18               	clrf	24,b	;volatile
  2391                           
  2392                           ;LCD.c: 186:     _delay((unsigned long)((30)*(32000000UL/4000.0)));
  2393   002A08  0E02               	movlw	2
  2394   002A0A  6E06               	movwf	(??_LCD_INIT+1)^(0+1280),c
  2395   002A0C  0E38               	movlw	56
  2396   002A0E  6E05               	movwf	??_LCD_INIT^(0+1280),c
  2397   002A10  0EAD               	movlw	173
  2398   002A12                     u547:
  2399   002A12  2EE8               	decfsz	wreg,f,c
  2400   002A14  D7FE               	bra	u547
  2401   002A16  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  2402   002A18  D7FC               	bra	u547
  2403   002A1A  2E06               	decfsz	(??_LCD_INIT+1)^(0+1280),f,c
  2404   002A1C  D7FA               	bra	u547
  2405   002A1E  0000               	nop	
  2406   002A20                     
  2407                           ;LCD.c: 187:     LCD_CONFIG();
  2408   002A20  EC26  F015         	call	_LCD_CONFIG	;wreg free
  2409   002A24                     
  2410                           ;LCD.c: 188:     _delay((unsigned long)((30)*(32000000UL/4000.0)));
  2411   002A24  0E02               	movlw	2
  2412   002A26  6E06               	movwf	(??_LCD_INIT+1)^(0+1280),c
  2413   002A28  0E38               	movlw	56
  2414   002A2A  6E05               	movwf	??_LCD_INIT^(0+1280),c
  2415   002A2C  0EAD               	movlw	173
  2416   002A2E                     u557:
  2417   002A2E  2EE8               	decfsz	wreg,f,c
  2418   002A30  D7FE               	bra	u557
  2419   002A32  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  2420   002A34  D7FC               	bra	u557
  2421   002A36  2E06               	decfsz	(??_LCD_INIT+1)^(0+1280),f,c
  2422   002A38  D7FA               	bra	u557
  2423   002A3A  0000               	nop	
  2424                           
  2425                           ;LCD.c: 189:     BORRAR_LCD();
  2426   002A3C  EC0E  F016         	call	_BORRAR_LCD	;wreg free
  2427                           
  2428                           ;LCD.c: 190:     CURSOR_HOME();
  2429   002A40  EC0A  F016         	call	_CURSOR_HOME	;wreg free
  2430                           
  2431                           ;LCD.c: 191:     CURSOR_ONOFF(1);
  2432   002A44  0E01               	movlw	1
  2433   002A46  ECD8  F015         	call	_CURSOR_ONOFF
  2434   002A4A  0012               	return		;funcret
  2435   002A4C                     __end_of_LCD_INIT:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _LCD_CONFIG *****************
  2439 ;; Defined at:
  2440 ;;		line 94 in file "LCD.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0, cstack
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2456 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2458 ;;Total ram usage:        1 bytes
  2459 ;; Hardware stack levels used: 1
  2460 ;; Hardware stack levels required when called: 2
  2461 ;; This function calls:
  2462 ;;		_ENVIA_LCD_CMD
  2463 ;;		_ENVIA_NIBBLE
  2464 ;; This function is called by:
  2465 ;;		_LCD_INIT
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text4
  2470   002A4C                     __ptext4:
  2471                           	callstack 0
  2472   002A4C                     _LCD_CONFIG:
  2473                           	callstack 122
  2474   002A4C                     
  2475                           ;LCD.c: 96:  LATDbits.LATD0 = 0;
  2476   002A4C  90C1               	bcf	193,0,c	;volatile
  2477                           
  2478                           ;LCD.c: 97:  LATDbits.LATD1 = 0;
  2479   002A4E  92C1               	bcf	193,1,c	;volatile
  2480   002A50                     
  2481                           ;LCD.c: 98:  ENVIA_NIBBLE(0x30);
  2482   002A50  0E30               	movlw	48
  2483   002A52  ECF0  F015         	call	_ENVIA_NIBBLE
  2484   002A56                     
  2485                           ;LCD.c: 99:     _delay((unsigned long)((3)*(32000000UL/4000.0)));
  2486   002A56  0E20               	movlw	32
  2487   002A58  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2488   002A5A  0E2A               	movlw	42
  2489   002A5C                     u567:
  2490   002A5C  2EE8               	decfsz	wreg,f,c
  2491   002A5E  D7FE               	bra	u567
  2492   002A60  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2493   002A62  D7FC               	bra	u567
  2494   002A64                     
  2495                           ;LCD.c: 100:  ENVIA_NIBBLE(0x30);
  2496   002A64  0E30               	movlw	48
  2497   002A66  ECF0  F015         	call	_ENVIA_NIBBLE
  2498                           
  2499                           ;LCD.c: 102:  _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2500   002A6A  0EA0               	movlw	160
  2501   002A6C                     u577:
  2502   002A6C  D000               	nop2	
  2503   002A6E  2EE8               	decfsz	wreg,f,c
  2504   002A70  D7FD               	bra	u577
  2505   002A72                     
  2506                           ;LCD.c: 103:     ENVIA_NIBBLE(0x30);
  2507   002A72  0E30               	movlw	48
  2508   002A74  ECF0  F015         	call	_ENVIA_NIBBLE
  2509   002A78                     
  2510                           ;LCD.c: 104:  ENVIA_NIBBLE(0x20);
  2511   002A78  0E20               	movlw	32
  2512   002A7A  ECF0  F015         	call	_ENVIA_NIBBLE
  2513   002A7E                     
  2514                           ;LCD.c: 105:  ENVIA_LCD_CMD(0x01);
  2515   002A7E  0E01               	movlw	1
  2516   002A80  ECA6  F015         	call	_ENVIA_LCD_CMD
  2517   002A84                     
  2518                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x28);
  2519   002A84  0E28               	movlw	40
  2520   002A86  ECA6  F015         	call	_ENVIA_LCD_CMD
  2521   002A8A                     
  2522                           ;LCD.c: 107:  ENVIA_LCD_CMD(0x0F);
  2523   002A8A  0E0F               	movlw	15
  2524   002A8C  ECA6  F015         	call	_ENVIA_LCD_CMD
  2525   002A90                     
  2526                           ;LCD.c: 108:  ENVIA_LCD_CMD(0x06);
  2527   002A90  0E06               	movlw	6
  2528   002A92  ECA6  F015         	call	_ENVIA_LCD_CMD
  2529   002A96                     
  2530                           ;LCD.c: 109:  ENVIA_LCD_CMD(0x01);
  2531   002A96  0E01               	movlw	1
  2532   002A98  ECA6  F015         	call	_ENVIA_LCD_CMD
  2533   002A9C  0012               	return		;funcret
  2534   002A9E                     __end_of_LCD_CONFIG:
  2535                           	callstack 0
  2536                           
  2537 ;; *************** function _CURSOR_ONOFF *****************
  2538 ;; Defined at:
  2539 ;;		line 54 in file "LCD.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  estado          1    wreg     unsigned char 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  estado          1    3[COMRAM] unsigned char 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2557 ;;Total ram usage:        1 bytes
  2558 ;; Hardware stack levels used: 1
  2559 ;; Hardware stack levels required when called: 2
  2560 ;; This function calls:
  2561 ;;		_ENVIA_LCD_CMD
  2562 ;; This function is called by:
  2563 ;;		_LCD_INIT
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text5
  2568   002BB0                     __ptext5:
  2569                           	callstack 0
  2570   002BB0                     _CURSOR_ONOFF:
  2571                           	callstack 122
  2572                           
  2573                           ;incstack = 0
  2574                           ;CURSOR_ONOFF@estado stored from wreg
  2575   002BB0  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  2576   002BB2                     
  2577                           ;LCD.c: 55:  if(estado == 0) ENVIA_LCD_CMD(0x0E);
  2578   002BB2  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  2579   002BB4  A4D8               	btfss	status,2,c
  2580   002BB6  EFDF  F015         	goto	u21
  2581   002BBA  EFE1  F015         	goto	u20
  2582   002BBE                     u21:
  2583   002BBE  EFE4  F015         	goto	l970
  2584   002BC2                     u20:
  2585   002BC2  0E0E               	movlw	14
  2586   002BC4  ECA6  F015         	call	_ENVIA_LCD_CMD
  2587   002BC8                     l970:
  2588                           
  2589                           ;LCD.c: 56:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2590   002BC8  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  2591   002BCA  A4D8               	btfss	status,2,c
  2592   002BCC  EFEA  F015         	goto	u31
  2593   002BD0  EFEC  F015         	goto	u30
  2594   002BD4                     u31:
  2595   002BD4  EFEF  F015         	goto	l111
  2596   002BD8                     u30:
  2597   002BD8  0E0C               	movlw	12
  2598   002BDA  ECA6  F015         	call	_ENVIA_LCD_CMD
  2599   002BDE                     l111:
  2600   002BDE  0012               	return		;funcret
  2601   002BE0                     __end_of_CURSOR_ONOFF:
  2602                           	callstack 0
  2603                           
  2604 ;; *************** function _CURSOR_HOME *****************
  2605 ;; Defined at:
  2606 ;;		line 34 in file "LCD.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2624 ;;Total ram usage:        0 bytes
  2625 ;; Hardware stack levels used: 1
  2626 ;; Hardware stack levels required when called: 2
  2627 ;; This function calls:
  2628 ;;		_ENVIA_LCD_CMD
  2629 ;; This function is called by:
  2630 ;;		_LCD_INIT
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text6
  2635   002C14                     __ptext6:
  2636                           	callstack 0
  2637   002C14                     _CURSOR_HOME:
  2638                           	callstack 122
  2639   002C14                     
  2640                           ;LCD.c: 35:  ENVIA_LCD_CMD(0x02);
  2641   002C14  0E02               	movlw	2
  2642   002C16  ECA6  F015         	call	_ENVIA_LCD_CMD
  2643   002C1A  0012               	return		;funcret
  2644   002C1C                     __end_of_CURSOR_HOME:
  2645                           	callstack 0
  2646                           
  2647 ;; *************** function _BORRAR_LCD *****************
  2648 ;; Defined at:
  2649 ;;		line 90 in file "LCD.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, status,2, status,0, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2667 ;;Total ram usage:        0 bytes
  2668 ;; Hardware stack levels used: 1
  2669 ;; Hardware stack levels required when called: 2
  2670 ;; This function calls:
  2671 ;;		_ENVIA_LCD_CMD
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;;		_LCD_INIT
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text7
  2679   002C1C                     __ptext7:
  2680                           	callstack 0
  2681   002C1C                     _BORRAR_LCD:
  2682                           	callstack 122
  2683   002C1C                     
  2684                           ;LCD.c: 91:  ENVIA_LCD_CMD(0x01);
  2685   002C1C  0E01               	movlw	1
  2686   002C1E  ECA6  F015         	call	_ENVIA_LCD_CMD
  2687   002C22  0012               	return		;funcret
  2688   002C24                     __end_of_BORRAR_LCD:
  2689                           	callstack 0
  2690                           
  2691 ;; *************** function _POS_CURSOR *****************
  2692 ;; Defined at:
  2693 ;;		line 9 in file "LCD.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  fila            1    wreg     unsigned char 
  2696 ;;  columna         1    3[COMRAM] unsigned char 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  fila            1    4[COMRAM] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2708 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2709 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2711 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2712 ;;Total ram usage:        2 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; Hardware stack levels required when called: 2
  2715 ;; This function calls:
  2716 ;;		_ENVIA_LCD_CMD
  2717 ;; This function is called by:
  2718 ;;		_main
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text8
  2723   0028FE                     __ptext8:
  2724                           	callstack 0
  2725   0028FE                     _POS_CURSOR:
  2726                           	callstack 124
  2727                           
  2728                           ;incstack = 0
  2729                           ;POS_CURSOR@fila stored from wreg
  2730   0028FE  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  2731   002900                     
  2732                           ;LCD.c: 10:  if(fila == 1){
  2733   002900  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  2734   002902  A4D8               	btfss	status,2,c
  2735   002904  EF86  F014         	goto	u471
  2736   002908  EF88  F014         	goto	u470
  2737   00290C                     u471:
  2738   00290C  EF8E  F014         	goto	l1442
  2739   002910                     u470:
  2740   002910                     
  2741                           ;LCD.c: 11:   ENVIA_LCD_CMD(0x80+columna);
  2742   002910  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2743   002912  0F80               	addlw	128
  2744   002914  ECA6  F015         	call	_ENVIA_LCD_CMD
  2745                           
  2746                           ;LCD.c: 12:  }
  2747   002918  EFBB  F014         	goto	l81
  2748   00291C                     l1442:
  2749   00291C  0E02               	movlw	2
  2750   00291E  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2751   002920  A4D8               	btfss	status,2,c
  2752   002922  EF95  F014         	goto	u481
  2753   002926  EF97  F014         	goto	u480
  2754   00292A                     u481:
  2755   00292A  EF9D  F014         	goto	l1446
  2756   00292E                     u480:
  2757   00292E                     
  2758                           ;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2759   00292E  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2760   002930  0FC0               	addlw	192
  2761   002932  ECA6  F015         	call	_ENVIA_LCD_CMD
  2762                           
  2763                           ;LCD.c: 15:  }
  2764   002936  EFBB  F014         	goto	l81
  2765   00293A                     l1446:
  2766   00293A  0E03               	movlw	3
  2767   00293C  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2768   00293E  A4D8               	btfss	status,2,c
  2769   002940  EFA4  F014         	goto	u491
  2770   002944  EFA6  F014         	goto	u490
  2771   002948                     u491:
  2772   002948  EFAC  F014         	goto	l1450
  2773   00294C                     u490:
  2774   00294C                     
  2775                           ;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
  2776   00294C  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2777   00294E  0F94               	addlw	148
  2778   002950  ECA6  F015         	call	_ENVIA_LCD_CMD
  2779                           
  2780                           ;LCD.c: 18:  }
  2781   002954  EFBB  F014         	goto	l81
  2782   002958                     l1450:
  2783   002958  0E04               	movlw	4
  2784   00295A  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2785   00295C  A4D8               	btfss	status,2,c
  2786   00295E  EFB3  F014         	goto	u501
  2787   002962  EFB5  F014         	goto	u500
  2788   002966                     u501:
  2789   002966  EFBB  F014         	goto	l77
  2790   00296A                     u500:
  2791   00296A                     
  2792                           ;LCD.c: 20:   ENVIA_LCD_CMD(0xD4+columna);
  2793   00296A  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2794   00296C  0FD4               	addlw	212
  2795   00296E  ECA6  F015         	call	_ENVIA_LCD_CMD
  2796   002972  EFBB  F014         	goto	l81
  2797   002976                     l77:
  2798   002976                     l81:
  2799   002976  0012               	return		;funcret
  2800   002978                     __end_of_POS_CURSOR:
  2801                           	callstack 0
  2802                           
  2803 ;; *************** function _ENVIA_LCD_CMD *****************
  2804 ;; Defined at:
  2805 ;;		line 123 in file "LCD.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  dato            1    wreg     unsigned char 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  dato            1    1[COMRAM] unsigned char 
  2810 ;;  aux             1    2[COMRAM] unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2824 ;;Total ram usage:        2 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 1
  2827 ;; This function calls:
  2828 ;;		_ENVIA_NIBBLE
  2829 ;;		_LEER_LCD
  2830 ;; This function is called by:
  2831 ;;		_POS_CURSOR
  2832 ;;		_CURSOR_HOME
  2833 ;;		_CURSOR_ONOFF
  2834 ;;		_BORRAR_LCD
  2835 ;;		_LCD_CONFIG
  2836 ;;		_BLINK_CURSOR
  2837 ;;		_DISPLAY_ONOFF
  2838 ;;		_CURSOR_SHIFTLEFT
  2839 ;;		_CURSOR_SHIFTRIGHT
  2840 ;;		_DISPLAY_SHIFTLEFT
  2841 ;;		_DISPLAY_SHIFTRIGHT
  2842 ;;		_GENERACARACTER
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text9
  2847   002B4C                     __ptext9:
  2848                           	callstack 0
  2849   002B4C                     _ENVIA_LCD_CMD:
  2850                           	callstack 122
  2851                           
  2852                           ;incstack = 0
  2853                           ;ENVIA_LCD_CMD@dato stored from wreg
  2854   002B4C  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  2855   002B4E                     
  2856                           ;LCD.c: 123: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 124: {;LCD.c: 125:  unsigned 
      +                          char aux;;LCD.c: 126:  LATDbits.LATD0 = 0;
  2857   002B4E  90C1               	bcf	193,0,c	;volatile
  2858   002B50                     
  2859                           ;LCD.c: 127:  LEER_LCD();
  2860   002B50  ECBC  F014         	call	_LEER_LCD	;wreg free
  2861   002B54                     
  2862                           ;LCD.c: 128:  TRISD = 0b00000000;
  2863   002B54  6AC9               	clrf	201,c	;volatile
  2864   002B56                     
  2865                           ;LCD.c: 130:         _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2866   002B56  0EA0               	movlw	160
  2867   002B58                     u587:
  2868   002B58  D000               	nop2	
  2869   002B5A  2EE8               	decfsz	wreg,f,c
  2870   002B5C  D7FD               	bra	u587
  2871   002B5E                     
  2872                           ;LCD.c: 131:         LATDbits.LATD1 = 0;
  2873   002B5E  92C1               	bcf	193,1,c	;volatile
  2874   002B60                     
  2875                           ;LCD.c: 132:  LATDbits.LATD2 = 0;
  2876   002B60  94C1               	bcf	193,2,c	;volatile
  2877   002B62                     
  2878                           ;LCD.c: 133:  LATDbits.LATD0 = 0;
  2879   002B62  90C1               	bcf	193,0,c	;volatile
  2880   002B64                     
  2881                           ;LCD.c: 134:  aux = dato & 0xF0;
  2882   002B64  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2883   002B66  0BF0               	andlw	240
  2884   002B68  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2885   002B6A                     
  2886                           ;LCD.c: 135:  ENVIA_NIBBLE(aux);
  2887   002B6A  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2888   002B6C  ECF0  F015         	call	_ENVIA_NIBBLE
  2889   002B70                     
  2890                           ;LCD.c: 136:  aux = dato<<4;
  2891   002B70  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2892   002B72  0BF0               	andlw	240
  2893   002B74  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2894   002B76                     
  2895                           ;LCD.c: 137:  ENVIA_NIBBLE(aux);
  2896   002B76  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2897   002B78  ECF0  F015         	call	_ENVIA_NIBBLE
  2898   002B7C  0012               	return		;funcret
  2899   002B7E                     __end_of_ENVIA_LCD_CMD:
  2900                           	callstack 0
  2901                           
  2902 ;; *************** function _LEER_LCD *****************
  2903 ;; Defined at:
  2904 ;;		line 140 in file "LCD.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;		None
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  aux             1    0[COMRAM] unsigned char 
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  1    wreg      void 
  2911 ;; Registers used:
  2912 ;;		wreg, status,2, status,0
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2921 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2922 ;;Total ram usage:        1 bytes
  2923 ;; Hardware stack levels used: 1
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_ENVIA_LCD_CMD
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text10
  2932   002978                     __ptext10:
  2933                           	callstack 0
  2934   002978                     _LEER_LCD:
  2935                           	callstack 122
  2936   002978                     
  2937                           ;LCD.c: 142:  unsigned char aux;;LCD.c: 143:  TRISD = 0xF8;
  2938   002978  0EF8               	movlw	248
  2939   00297A  6EC9               	movwf	201,c	;volatile
  2940   00297C                     
  2941                           ;LCD.c: 144:  LATDbits.LATD0 = 0;
  2942   00297C  90C1               	bcf	193,0,c	;volatile
  2943   00297E                     
  2944                           ;LCD.c: 145:  LATDbits.LATD1 = 1;
  2945   00297E  82C1               	bsf	193,1,c	;volatile
  2946   002980                     
  2947                           ;LCD.c: 146:  LATDbits.LATD2 = 1;
  2948   002980  84C1               	bsf	193,2,c	;volatile
  2949   002982                     
  2950                           ;LCD.c: 147:         _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2951   002982  0EA0               	movlw	160
  2952   002984                     u597:
  2953   002984  D000               	nop2	
  2954   002986  2EE8               	decfsz	wreg,f,c
  2955   002988  D7FD               	bra	u597
  2956   00298A                     
  2957                           ;LCD.c: 149:  aux = PORTD;
  2958   00298A  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2959   00298E                     
  2960                           ;LCD.c: 150:  LATDbits.LATD2 = 0;
  2961   00298E  94C1               	bcf	193,2,c	;volatile
  2962   002990                     
  2963                           ;LCD.c: 151:         _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2964   002990  0EA0               	movlw	160
  2965   002992                     u607:
  2966   002992  D000               	nop2	
  2967   002994  2EE8               	decfsz	wreg,f,c
  2968   002996  D7FD               	bra	u607
  2969   002998                     
  2970                           ;LCD.c: 153:  LATDbits.LATD2 = 1;
  2971   002998  84C1               	bsf	193,2,c	;volatile
  2972   00299A                     
  2973                           ;LCD.c: 154:         _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2974   00299A  0EA0               	movlw	160
  2975   00299C                     u617:
  2976   00299C  D000               	nop2	
  2977   00299E  2EE8               	decfsz	wreg,f,c
  2978   0029A0  D7FD               	bra	u617
  2979   0029A2                     
  2980                           ;LCD.c: 156:  LATDbits.LATD2 = 0;
  2981   0029A2  94C1               	bcf	193,2,c	;volatile
  2982   0029A4                     l924:
  2983                           
  2984                           ;LCD.c: 157:  aux = aux & 0x80;
  2985   0029A4  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  2986   0029A6  0B80               	andlw	128
  2987   0029A8  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  2988                           
  2989                           ;LCD.c: 158:  while(aux == 0x80)
  2990   0029AA  EFEB  F014         	goto	l938
  2991   0029AE                     l142:
  2992                           
  2993                           ;LCD.c: 159:         {;LCD.c: 160:             LATDbits.LATD2 = 1;
  2994   0029AE  84C1               	bsf	193,2,c	;volatile
  2995   0029B0                     
  2996                           ;LCD.c: 161:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2997   0029B0  0EA0               	movlw	160
  2998   0029B2                     u627:
  2999   0029B2  D000               	nop2	
  3000   0029B4  2EE8               	decfsz	wreg,f,c
  3001   0029B6  D7FD               	bra	u627
  3002   0029B8                     
  3003                           ;LCD.c: 162:             aux = PORTD;
  3004   0029B8  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  3005   0029BC                     
  3006                           ;LCD.c: 163:             LATDbits.LATD2 = 0;
  3007   0029BC  94C1               	bcf	193,2,c	;volatile
  3008                           
  3009                           ;LCD.c: 164:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  3010   0029BE  0EA0               	movlw	160
  3011   0029C0                     u637:
  3012   0029C0  D000               	nop2	
  3013   0029C2  2EE8               	decfsz	wreg,f,c
  3014   0029C4  D7FD               	bra	u637
  3015   0029C6                     
  3016                           ;LCD.c: 165:             LATDbits.LATD2 = 1;
  3017   0029C6  84C1               	bsf	193,2,c	;volatile
  3018                           
  3019                           ;LCD.c: 166:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  3020   0029C8  0EA0               	movlw	160
  3021   0029CA                     u647:
  3022   0029CA  D000               	nop2	
  3023   0029CC  2EE8               	decfsz	wreg,f,c
  3024   0029CE  D7FD               	bra	u647
  3025   0029D0                     
  3026                           ;LCD.c: 167:             LATDbits.LATD2 = 0;
  3027   0029D0  94C1               	bcf	193,2,c	;volatile
  3028   0029D2  EFD2  F014         	goto	l924
  3029   0029D6                     l938:
  3030                           
  3031                           ;LCD.c: 158:  while(aux == 0x80)
  3032   0029D6  0E80               	movlw	128
  3033   0029D8  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  3034   0029DA  B4D8               	btfsc	status,2,c
  3035   0029DC  EFF2  F014         	goto	u11
  3036   0029E0  EFF4  F014         	goto	u10
  3037   0029E4                     u11:
  3038   0029E4  EFD7  F014         	goto	l142
  3039   0029E8                     u10:
  3040   0029E8  0012               	return		;funcret
  3041   0029EA                     __end_of_LEER_LCD:
  3042                           	callstack 0
  3043                           
  3044 ;; *************** function _LCD_ESCRIBE_VAR_CHAR *****************
  3045 ;; Defined at:
  3046 ;;		line 195 in file "LCD.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  numero          1    wreg     unsigned char 
  3049 ;;  n_digitos       1   14[COMRAM] unsigned char 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;  numero          1   17[COMRAM] unsigned char 
  3052 ;;  unidad          1   18[COMRAM] unsigned char 
  3053 ;;  decena          1   16[COMRAM] unsigned char 
  3054 ;;  centena         1   15[COMRAM] unsigned char 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3064 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3065 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3067 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3068 ;;Total ram usage:        5 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; Hardware stack levels required when called: 2
  3071 ;; This function calls:
  3072 ;;		_ENVIA_CHAR
  3073 ;;		___awdiv
  3074 ;;		___awmod
  3075 ;; This function is called by:
  3076 ;;		_main
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text11
  3081   002634                     __ptext11:
  3082                           	callstack 0
  3083   002634                     _LCD_ESCRIBE_VAR_CHAR:
  3084                           	callstack 124
  3085                           
  3086                           ;incstack = 0
  3087                           ;LCD_ESCRIBE_VAR_CHAR@numero stored from wreg
  3088   002634  6E12               	movwf	LCD_ESCRIBE_VAR_CHAR@numero^(0+1280),c
  3089   002636                     
  3090                           ;LCD.c: 196:     unsigned char centena, decena, unidad;;LCD.c: 197:     centena = (numer
      +                          o % 1000) / 100;
  3091   002636  0E03               	movlw	3
  3092   002638  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
  3093   00263A  0EE8               	movlw	232
  3094   00263C  6E03               	movwf	___awmod@divisor^(0+1280),c
  3095   00263E  C512  F501         	movff	LCD_ESCRIBE_VAR_CHAR@numero,___awmod@dividend
  3096   002642  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
  3097   002644  ECE1  F013         	call	___awmod	;wreg free
  3098   002648  C501  F507         	movff	?___awmod,___awdiv@dividend
  3099   00264C  C502  F508         	movff	?___awmod+1,___awdiv@dividend+1
  3100   002650  0E00               	movlw	0
  3101   002652  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
  3102   002654  0E64               	movlw	100
  3103   002656  6E09               	movwf	___awdiv@divisor^(0+1280),c
  3104   002658  EC80  F013         	call	___awdiv	;wreg free
  3105   00265C  5007               	movf	?___awdiv^(0+1280),w,c
  3106   00265E  6E10               	movwf	LCD_ESCRIBE_VAR_CHAR@centena^(0+1280),c
  3107                           
  3108                           ;LCD.c: 198:     decena = (numero % 100) / 10;
  3109   002660  0E00               	movlw	0
  3110   002662  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
  3111   002664  0E64               	movlw	100
  3112   002666  6E03               	movwf	___awmod@divisor^(0+1280),c
  3113   002668  C512  F501         	movff	LCD_ESCRIBE_VAR_CHAR@numero,___awmod@dividend
  3114   00266C  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
  3115   00266E  ECE1  F013         	call	___awmod	;wreg free
  3116   002672  C501  F507         	movff	?___awmod,___awdiv@dividend
  3117   002676  C502  F508         	movff	?___awmod+1,___awdiv@dividend+1
  3118   00267A  0E00               	movlw	0
  3119   00267C  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
  3120   00267E  0E0A               	movlw	10
  3121   002680  6E09               	movwf	___awdiv@divisor^(0+1280),c
  3122   002682  EC80  F013         	call	___awdiv	;wreg free
  3123   002686  5007               	movf	?___awdiv^(0+1280),w,c
  3124   002688  6E11               	movwf	LCD_ESCRIBE_VAR_CHAR@decena^(0+1280),c
  3125                           
  3126                           ;LCD.c: 199:     unidad = numero % 10;
  3127   00268A  C512  F501         	movff	LCD_ESCRIBE_VAR_CHAR@numero,___awmod@dividend
  3128   00268E  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
  3129   002690  0E00               	movlw	0
  3130   002692  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
  3131   002694  0E0A               	movlw	10
  3132   002696  6E03               	movwf	___awmod@divisor^(0+1280),c
  3133   002698  ECE1  F013         	call	___awmod	;wreg free
  3134   00269C  5001               	movf	?___awmod^(0+1280),w,c
  3135   00269E  6E13               	movwf	LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),c
  3136                           
  3137                           ;LCD.c: 200:     switch(n_digitos){
  3138   0026A0  EF70  F013         	goto	l1476
  3139   0026A4                     l1468:
  3140                           
  3141                           ;LCD.c: 202:             ENVIA_CHAR(unidad+0x30);
  3142   0026A4  5013               	movf	LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  3143   0026A6  0F30               	addlw	48
  3144   0026A8  ECBF  F015         	call	_ENVIA_CHAR
  3145                           
  3146                           ;LCD.c: 203:             break;
  3147   0026AC  EF7F  F013         	goto	l160
  3148   0026B0                     l1470:
  3149                           
  3150                           ;LCD.c: 205:             ENVIA_CHAR(decena+0x30);
  3151   0026B0  5011               	movf	LCD_ESCRIBE_VAR_CHAR@decena^(0+1280),w,c
  3152   0026B2  0F30               	addlw	48
  3153   0026B4  ECBF  F015         	call	_ENVIA_CHAR
  3154                           
  3155                           ;LCD.c: 206:             ENVIA_CHAR(unidad+0x30);
  3156   0026B8  5013               	movf	LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  3157   0026BA  0F30               	addlw	48
  3158   0026BC  ECBF  F015         	call	_ENVIA_CHAR
  3159                           
  3160                           ;LCD.c: 207:             break;
  3161   0026C0  EF7F  F013         	goto	l160
  3162   0026C4                     l1472:
  3163                           
  3164                           ;LCD.c: 209:             ENVIA_CHAR(centena+0x30);
  3165   0026C4  5010               	movf	LCD_ESCRIBE_VAR_CHAR@centena^(0+1280),w,c
  3166   0026C6  0F30               	addlw	48
  3167   0026C8  ECBF  F015         	call	_ENVIA_CHAR
  3168                           
  3169                           ;LCD.c: 210:             ENVIA_CHAR(decena+0x30);
  3170   0026CC  5011               	movf	LCD_ESCRIBE_VAR_CHAR@decena^(0+1280),w,c
  3171   0026CE  0F30               	addlw	48
  3172   0026D0  ECBF  F015         	call	_ENVIA_CHAR
  3173                           
  3174                           ;LCD.c: 211:             ENVIA_CHAR(unidad+0x30);
  3175   0026D4  5013               	movf	LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  3176   0026D6  0F30               	addlw	48
  3177   0026D8  ECBF  F015         	call	_ENVIA_CHAR
  3178                           
  3179                           ;LCD.c: 212:             break;
  3180   0026DC  EF7F  F013         	goto	l160
  3181   0026E0                     l1476:
  3182   0026E0  500F               	movf	LCD_ESCRIBE_VAR_CHAR@n_digitos^(0+1280),w,c
  3183                           
  3184                           ; Switch size 1, requested type "simple"
  3185                           ; Number of cases is 3, Range of values is 1 to 3
  3186                           ; switch strategies available:
  3187                           ; Name         Instructions Cycles
  3188                           ; simple_byte           10     6 (average)
  3189                           ;	Chosen strategy is simple_byte
  3190   0026E2  0A01               	xorlw	1	; case 1
  3191   0026E4  B4D8               	btfsc	status,2,c
  3192   0026E6  EF52  F013         	goto	l1468
  3193   0026EA  0A03               	xorlw	3	; case 2
  3194   0026EC  B4D8               	btfsc	status,2,c
  3195   0026EE  EF58  F013         	goto	l1470
  3196   0026F2  0A01               	xorlw	1	; case 3
  3197   0026F4  B4D8               	btfsc	status,2,c
  3198   0026F6  EF62  F013         	goto	l1472
  3199   0026FA  EF7F  F013         	goto	l160
  3200   0026FE                     l160:
  3201   0026FE  0012               	return		;funcret
  3202   002700                     __end_of_LCD_ESCRIBE_VAR_CHAR:
  3203                           	callstack 0
  3204                           
  3205 ;; *************** function ___awmod *****************
  3206 ;; Defined at:
  3207 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  dividend        2    0[COMRAM] int 
  3210 ;;  divisor         2    2[COMRAM] int 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  sign            1    5[COMRAM] unsigned char 
  3213 ;;  counter         1    4[COMRAM] unsigned char 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  2    0[COMRAM] int 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3223 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3224 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3226 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3227 ;;Total ram usage:        6 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_LCD_ESCRIBE_VAR_CHAR
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text12
  3237   0027C2                     __ptext12:
  3238                           	callstack 0
  3239   0027C2                     ___awmod:
  3240                           	callstack 125
  3241   0027C2  6A06               	clrf	___awmod@sign^(0+1280),c
  3242   0027C4  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
  3243   0027C6  EFE9  F013         	goto	u410
  3244   0027CA  EFE7  F013         	goto	u411
  3245   0027CE                     u411:
  3246   0027CE  EFEF  F013         	goto	l1410
  3247   0027D2                     u410:
  3248   0027D2  6C01               	negf	___awmod@dividend^(0+1280),c
  3249   0027D4  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
  3250   0027D6  B0D8               	btfsc	status,0,c
  3251   0027D8  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
  3252   0027DA  0E01               	movlw	1
  3253   0027DC  6E06               	movwf	___awmod@sign^(0+1280),c
  3254   0027DE                     l1410:
  3255   0027DE  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
  3256   0027E0  EFF6  F013         	goto	u420
  3257   0027E4  EFF4  F013         	goto	u421
  3258   0027E8                     u421:
  3259   0027E8  EFFA  F013         	goto	l1414
  3260   0027EC                     u420:
  3261   0027EC  6C03               	negf	___awmod@divisor^(0+1280),c
  3262   0027EE  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
  3263   0027F0  B0D8               	btfsc	status,0,c
  3264   0027F2  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
  3265   0027F4                     l1414:
  3266   0027F4  5003               	movf	___awmod@divisor^(0+1280),w,c
  3267   0027F6  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
  3268   0027F8  B4D8               	btfsc	status,2,c
  3269   0027FA  EF01  F014         	goto	u431
  3270   0027FE  EF03  F014         	goto	u430
  3271   002802                     u431:
  3272   002802  EF27  F014         	goto	l1430
  3273   002806                     u430:
  3274   002806  0E01               	movlw	1
  3275   002808  6E05               	movwf	___awmod@counter^(0+1280),c
  3276   00280A  EF0B  F014         	goto	l1420
  3277   00280E                     l1418:
  3278   00280E  90D8               	bcf	status,0,c
  3279   002810  3603               	rlcf	___awmod@divisor^(0+1280),f,c
  3280   002812  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
  3281   002814  2A05               	incf	___awmod@counter^(0+1280),f,c
  3282   002816                     l1420:
  3283   002816  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  3284   002818  EF10  F014         	goto	u441
  3285   00281C  EF12  F014         	goto	u440
  3286   002820                     u441:
  3287   002820  EF07  F014         	goto	l1418
  3288   002824                     u440:
  3289   002824                     l1422:
  3290   002824  5003               	movf	___awmod@divisor^(0+1280),w,c
  3291   002826  5C01               	subwf	___awmod@dividend^(0+1280),w,c
  3292   002828  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
  3293   00282A  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
  3294   00282C  A0D8               	btfss	status,0,c
  3295   00282E  EF1B  F014         	goto	u451
  3296   002832  EF1D  F014         	goto	u450
  3297   002836                     u451:
  3298   002836  EF21  F014         	goto	l1426
  3299   00283A                     u450:
  3300   00283A  5003               	movf	___awmod@divisor^(0+1280),w,c
  3301   00283C  5E01               	subwf	___awmod@dividend^(0+1280),f,c
  3302   00283E  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
  3303   002840  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
  3304   002842                     l1426:
  3305   002842  90D8               	bcf	status,0,c
  3306   002844  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
  3307   002846  3203               	rrcf	___awmod@divisor^(0+1280),f,c
  3308   002848  2E05               	decfsz	___awmod@counter^(0+1280),f,c
  3309   00284A  EF12  F014         	goto	l1422
  3310   00284E                     l1430:
  3311   00284E  5006               	movf	___awmod@sign^(0+1280),w,c
  3312   002850  B4D8               	btfsc	status,2,c
  3313   002852  EF2D  F014         	goto	u461
  3314   002856  EF2F  F014         	goto	u460
  3315   00285A                     u461:
  3316   00285A  EF33  F014         	goto	l1434
  3317   00285E                     u460:
  3318   00285E  6C01               	negf	___awmod@dividend^(0+1280),c
  3319   002860  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
  3320   002862  B0D8               	btfsc	status,0,c
  3321   002864  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
  3322   002866                     l1434:
  3323   002866  C501  F501         	movff	___awmod@dividend,?___awmod
  3324   00286A  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
  3325   00286E  0012               	return		;funcret
  3326   002870                     __end_of___awmod:
  3327                           	callstack 0
  3328                           
  3329 ;; *************** function ___awdiv *****************
  3330 ;; Defined at:
  3331 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  dividend        2    6[COMRAM] int 
  3334 ;;  divisor         2    8[COMRAM] int 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  quotient        2   12[COMRAM] int 
  3337 ;;  sign            1   11[COMRAM] unsigned char 
  3338 ;;  counter         1   10[COMRAM] unsigned char 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  2    6[COMRAM] int 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3348 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3349 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3351 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3352 ;;Total ram usage:        8 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_LCD_ESCRIBE_VAR_CHAR
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text13
  3362   002700                     __ptext13:
  3363                           	callstack 0
  3364   002700                     ___awdiv:
  3365                           	callstack 125
  3366   002700  6A0C               	clrf	___awdiv@sign^(0+1280),c
  3367   002702  BE0A               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
  3368   002704  EF88  F013         	goto	u350
  3369   002708  EF86  F013         	goto	u351
  3370   00270C                     u351:
  3371   00270C  EF8E  F013         	goto	l1366
  3372   002710                     u350:
  3373   002710  6C09               	negf	___awdiv@divisor^(0+1280),c
  3374   002712  1E0A               	comf	(___awdiv@divisor+1)^(0+1280),f,c
  3375   002714  B0D8               	btfsc	status,0,c
  3376   002716  2A0A               	incf	(___awdiv@divisor+1)^(0+1280),f,c
  3377   002718  0E01               	movlw	1
  3378   00271A  6E0C               	movwf	___awdiv@sign^(0+1280),c
  3379   00271C                     l1366:
  3380   00271C  BE08               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
  3381   00271E  EF95  F013         	goto	u360
  3382   002722  EF93  F013         	goto	u361
  3383   002726                     u361:
  3384   002726  EF9B  F013         	goto	l1372
  3385   00272A                     u360:
  3386   00272A  6C07               	negf	___awdiv@dividend^(0+1280),c
  3387   00272C  1E08               	comf	(___awdiv@dividend+1)^(0+1280),f,c
  3388   00272E  B0D8               	btfsc	status,0,c
  3389   002730  2A08               	incf	(___awdiv@dividend+1)^(0+1280),f,c
  3390   002732  0E01               	movlw	1
  3391   002734  1A0C               	xorwf	___awdiv@sign^(0+1280),f,c
  3392   002736                     l1372:
  3393   002736  0E00               	movlw	0
  3394   002738  6E0E               	movwf	(___awdiv@quotient+1)^(0+1280),c
  3395   00273A  0E00               	movlw	0
  3396   00273C  6E0D               	movwf	___awdiv@quotient^(0+1280),c
  3397   00273E  5009               	movf	___awdiv@divisor^(0+1280),w,c
  3398   002740  100A               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
  3399   002742  B4D8               	btfsc	status,2,c
  3400   002744  EFA6  F013         	goto	u371
  3401   002748  EFA8  F013         	goto	u370
  3402   00274C                     u371:
  3403   00274C  EFD0  F013         	goto	l1394
  3404   002750                     u370:
  3405   002750  0E01               	movlw	1
  3406   002752  6E0B               	movwf	___awdiv@counter^(0+1280),c
  3407   002754  EFB0  F013         	goto	l1380
  3408   002758                     l1378:
  3409   002758  90D8               	bcf	status,0,c
  3410   00275A  3609               	rlcf	___awdiv@divisor^(0+1280),f,c
  3411   00275C  360A               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
  3412   00275E  2A0B               	incf	___awdiv@counter^(0+1280),f,c
  3413   002760                     l1380:
  3414   002760  AE0A               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
  3415   002762  EFB5  F013         	goto	u381
  3416   002766  EFB7  F013         	goto	u380
  3417   00276A                     u381:
  3418   00276A  EFAC  F013         	goto	l1378
  3419   00276E                     u380:
  3420   00276E                     l1382:
  3421   00276E  90D8               	bcf	status,0,c
  3422   002770  360D               	rlcf	___awdiv@quotient^(0+1280),f,c
  3423   002772  360E               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
  3424   002774  5009               	movf	___awdiv@divisor^(0+1280),w,c
  3425   002776  5C07               	subwf	___awdiv@dividend^(0+1280),w,c
  3426   002778  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  3427   00277A  5808               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
  3428   00277C  A0D8               	btfss	status,0,c
  3429   00277E  EFC3  F013         	goto	u391
  3430   002782  EFC5  F013         	goto	u390
  3431   002786                     u391:
  3432   002786  EFCA  F013         	goto	l1390
  3433   00278A                     u390:
  3434   00278A  5009               	movf	___awdiv@divisor^(0+1280),w,c
  3435   00278C  5E07               	subwf	___awdiv@dividend^(0+1280),f,c
  3436   00278E  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  3437   002790  5A08               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
  3438   002792  800D               	bsf	___awdiv@quotient^(0+1280),0,c
  3439   002794                     l1390:
  3440   002794  90D8               	bcf	status,0,c
  3441   002796  320A               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
  3442   002798  3209               	rrcf	___awdiv@divisor^(0+1280),f,c
  3443   00279A  2E0B               	decfsz	___awdiv@counter^(0+1280),f,c
  3444   00279C  EFB7  F013         	goto	l1382
  3445   0027A0                     l1394:
  3446   0027A0  500C               	movf	___awdiv@sign^(0+1280),w,c
  3447   0027A2  B4D8               	btfsc	status,2,c
  3448   0027A4  EFD6  F013         	goto	u401
  3449   0027A8  EFD8  F013         	goto	u400
  3450   0027AC                     u401:
  3451   0027AC  EFDC  F013         	goto	l1398
  3452   0027B0                     u400:
  3453   0027B0  6C0D               	negf	___awdiv@quotient^(0+1280),c
  3454   0027B2  1E0E               	comf	(___awdiv@quotient+1)^(0+1280),f,c
  3455   0027B4  B0D8               	btfsc	status,0,c
  3456   0027B6  2A0E               	incf	(___awdiv@quotient+1)^(0+1280),f,c
  3457   0027B8                     l1398:
  3458   0027B8  C50D  F507         	movff	___awdiv@quotient,?___awdiv
  3459   0027BC  C50E  F508         	movff	___awdiv@quotient+1,?___awdiv+1
  3460   0027C0  0012               	return		;funcret
  3461   0027C2                     __end_of___awdiv:
  3462                           	callstack 0
  3463                           
  3464 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  3465 ;; Defined at:
  3466 ;;		line 66 in file "LCD.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  cadena          1    4[COMRAM] PTR const unsigned char 
  3469 ;;		 -> STR_4(10), STR_3(8), STR_2(16), STR_1(15), 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  i               1    7[COMRAM] unsigned char 
  3472 ;;  tam             1    6[COMRAM] unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3482 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3483 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3484 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3485 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3486 ;;Total ram usage:        4 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; Hardware stack levels required when called: 2
  3489 ;; This function calls:
  3490 ;;		_ENVIA_CHAR
  3491 ;;		_strlen
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text14
  3498   002A9E                     __ptext14:
  3499                           	callstack 0
  3500   002A9E                     _ESCRIBE_MENSAJE2:
  3501                           	callstack 124
  3502   002A9E                     
  3503                           ;LCD.c: 67:     unsigned char tam;;LCD.c: 68:     tam = strlen(cadena);
  3504   002A9E  C505  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  3505   002AA2  EC70  F015         	call	_strlen	;wreg free
  3506   002AA6  5001               	movf	?_strlen^(0+1280),w,c
  3507   002AA8  6E07               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  3508   002AAA                     
  3509                           ;LCD.c: 70:  for(i = 0; i<tam; i++) {
  3510   002AAA  6A08               	clrf	ESCRIBE_MENSAJE2@i^(0+1280),c
  3511   002AAC  EF66  F015         	goto	l1464
  3512   002AB0                     l1460:
  3513                           
  3514                           ;LCD.c: 71:   ENVIA_CHAR(cadena[i]);
  3515   002AB0  5005               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  3516   002AB2  2408               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  3517   002AB4  6E06               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  3518   002AB6  C506  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  3519   002ABA                     	if	1	;There is more than 1 active tblptr byte
  3520   002ABA  0E26               	movlw	high __smallconst
  3521   002ABC  6EF7               	movwf	tblptrh,c
  3522   002ABE                     	endif
  3523   002ABE                     	if	0	;tblptru may be non-zero
  3524   002ABE                     	endif
  3525   002ABE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3526   002ABE  0E00               	movlw	low (__smallconst shr (0+16))
  3527   002AC0  6EF8               	movwf	tblptru,c
  3528   002AC2                     	endif
  3529   002AC2  0008               	tblrd		*
  3530   002AC4  50F5               	movf	tablat,w,c
  3531   002AC6  ECBF  F015         	call	_ENVIA_CHAR
  3532   002ACA                     
  3533                           ;LCD.c: 72:  }
  3534   002ACA  2A08               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  3535   002ACC                     l1464:
  3536   002ACC  5007               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  3537   002ACE  5C08               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  3538   002AD0  A0D8               	btfss	status,0,c
  3539   002AD2  EF6D  F015         	goto	u511
  3540   002AD6  EF6F  F015         	goto	u510
  3541   002ADA                     u511:
  3542   002ADA  EF58  F015         	goto	l1460
  3543   002ADE                     u510:
  3544   002ADE  0012               	return		;funcret
  3545   002AE0                     __end_of_ESCRIBE_MENSAJE2:
  3546                           	callstack 0
  3547                           
  3548 ;; *************** function _strlen *****************
  3549 ;; Defined at:
  3550 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  s               1    0[COMRAM] PTR const unsigned char 
  3553 ;;		 -> STR_4(10), STR_3(8), STR_2(16), STR_1(15), 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  a               1    2[COMRAM] PTR const unsigned char 
  3556 ;;		 -> STR_4(10), STR_3(8), STR_2(16), STR_1(15), 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  2    0[COMRAM] unsigned int 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3566 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3569 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3570 ;;Total ram usage:        3 bytes
  3571 ;; Hardware stack levels used: 1
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_ESCRIBE_MENSAJE2
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           	psect	text15
  3580   002AE0                     __ptext15:
  3581                           	callstack 0
  3582   002AE0                     _strlen:
  3583                           	callstack 125
  3584   002AE0  C501  F503         	movff	strlen@s,strlen@a
  3585   002AE4  EF75  F015         	goto	l1352
  3586   002AE8                     l1350:
  3587   002AE8  2A01               	incf	strlen@s^(0+1280),f,c
  3588   002AEA                     l1352:
  3589   002AEA  C501  F4F6         	movff	strlen@s,tblptrl
  3590   002AEE                     	if	1	;There is more than 1 active tblptr byte
  3591   002AEE  0E26               	movlw	high __smallconst
  3592   002AF0  6EF7               	movwf	tblptrh,c
  3593   002AF2                     	endif
  3594   002AF2                     	if	0	;tblptru may be non-zero
  3595   002AF2                     	endif
  3596   002AF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3597   002AF2  0E00               	movlw	low (__smallconst shr (0+16))
  3598   002AF4  6EF8               	movwf	tblptru,c
  3599   002AF6                     	endif
  3600   002AF6  0008               	tblrd		*
  3601   002AF8  50F5               	movf	tablat,w,c
  3602   002AFA  0900               	iorlw	0
  3603   002AFC  A4D8               	btfss	status,2,c
  3604   002AFE  EF83  F015         	goto	u341
  3605   002B02  EF85  F015         	goto	u340
  3606   002B06                     u341:
  3607   002B06  EF74  F015         	goto	l1350
  3608   002B0A                     u340:
  3609   002B0A  5003               	movf	strlen@a^(0+1280),w,c
  3610   002B0C  5C01               	subwf	strlen@s^(0+1280),w,c
  3611   002B0E  6E01               	movwf	?_strlen^(0+1280),c
  3612   002B10  6A02               	clrf	(?_strlen+1)^(0+1280),c
  3613   002B12  BE01               	btfsc	?_strlen^(0+1280),7,c
  3614   002B14  0602               	decf	(?_strlen+1)^(0+1280),f,c
  3615   002B16  0012               	return		;funcret
  3616   002B18                     __end_of_strlen:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function _ENVIA_CHAR *****************
  3620 ;; Defined at:
  3621 ;;		line 75 in file "LCD.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  dato            1    wreg     unsigned char 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;  dato            1    2[COMRAM] unsigned char 
  3626 ;;  aux             1    3[COMRAM] unsigned char 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3638 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3639 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3640 ;;Total ram usage:        3 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; Hardware stack levels required when called: 1
  3643 ;; This function calls:
  3644 ;;		_ENVIA_NIBBLE
  3645 ;; This function is called by:
  3646 ;;		_ESCRIBE_MENSAJE2
  3647 ;;		_LCD_ESCRIBE_VAR_CHAR
  3648 ;;		_ESCRIBE_MENSAJE
  3649 ;;		_GENERACARACTER
  3650 ;;		_LCD_ESCRIBE_VAR_INT
  3651 ;;		_LCD_CHAR_GRADO
  3652 ;;		_LCD_VARCHAR_BITS
  3653 ;;		_LCD_VARCHAR_HEX
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text16
  3658   002B7E                     __ptext16:
  3659                           	callstack 0
  3660   002B7E                     _ENVIA_CHAR:
  3661                           	callstack 124
  3662                           
  3663                           ;incstack = 0
  3664                           ;ENVIA_CHAR@dato stored from wreg
  3665   002B7E  6E03               	movwf	ENVIA_CHAR@dato^(0+1280),c
  3666   002B80                     
  3667                           ;LCD.c: 76:  unsigned char aux;;LCD.c: 77:  LATDbits.LATD0 = 1;
  3668   002B80  80C1               	bsf	193,0,c	;volatile
  3669   002B82                     
  3670                           ;LCD.c: 80:     _delay((unsigned long)((250)*(32000000UL/4000000.0)));
  3671   002B82  0E03               	movlw	3
  3672   002B84  6E02               	movwf	??_ENVIA_CHAR^(0+1280),c
  3673   002B86  0E98               	movlw	152
  3674   002B88                     u657:
  3675   002B88  2EE8               	decfsz	wreg,f,c
  3676   002B8A  D7FE               	bra	u657
  3677   002B8C  2E02               	decfsz	??_ENVIA_CHAR^(0+1280),f,c
  3678   002B8E  D7FC               	bra	u657
  3679   002B90                     
  3680                           ;LCD.c: 81:  LATDbits.LATD1 = 0;
  3681   002B90  92C1               	bcf	193,1,c	;volatile
  3682   002B92                     
  3683                           ;LCD.c: 82:  LATDbits.LATD2 = 0;
  3684   002B92  94C1               	bcf	193,2,c	;volatile
  3685   002B94                     
  3686                           ;LCD.c: 83:  LATDbits.LATD0 = 1;
  3687   002B94  80C1               	bsf	193,0,c	;volatile
  3688   002B96                     
  3689                           ;LCD.c: 84:  aux = dato & 0xF0;
  3690   002B96  5003               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  3691   002B98  0BF0               	andlw	240
  3692   002B9A  6E04               	movwf	ENVIA_CHAR@aux^(0+1280),c
  3693   002B9C                     
  3694                           ;LCD.c: 85:  ENVIA_NIBBLE(aux);
  3695   002B9C  5004               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  3696   002B9E  ECF0  F015         	call	_ENVIA_NIBBLE
  3697   002BA2                     
  3698                           ;LCD.c: 86:  aux = dato << 4;
  3699   002BA2  3803               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  3700   002BA4  0BF0               	andlw	240
  3701   002BA6  6E04               	movwf	ENVIA_CHAR@aux^(0+1280),c
  3702   002BA8                     
  3703                           ;LCD.c: 87:  ENVIA_NIBBLE(aux);
  3704   002BA8  5004               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  3705   002BAA  ECF0  F015         	call	_ENVIA_NIBBLE
  3706   002BAE  0012               	return		;funcret
  3707   002BB0                     __end_of_ENVIA_CHAR:
  3708                           	callstack 0
  3709                           
  3710 ;; *************** function _ENVIA_NIBBLE *****************
  3711 ;; Defined at:
  3712 ;;		line 112 in file "LCD.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  dato            1    wreg     unsigned char 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  dato            1    0[COMRAM] unsigned char 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  1    wreg      void 
  3719 ;; Registers used:
  3720 ;;		wreg, status,2, status,0
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3729 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3730 ;;Total ram usage:        1 bytes
  3731 ;; Hardware stack levels used: 1
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_ENVIA_CHAR
  3736 ;;		_LCD_CONFIG
  3737 ;;		_ENVIA_LCD_CMD
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text17
  3742   002BE0                     __ptext17:
  3743                           	callstack 0
  3744   002BE0                     _ENVIA_NIBBLE:
  3745                           	callstack 123
  3746                           
  3747                           ;incstack = 0
  3748                           ;ENVIA_NIBBLE@dato stored from wreg
  3749   002BE0  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  3750   002BE2                     
  3751                           ;LCD.c: 112: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 113: {;LCD.c: 114:  LATD &= 0x
      +                          0F;
  3752   002BE2  0E0F               	movlw	15
  3753   002BE4  16C1               	andwf	193,f,c	;volatile
  3754                           
  3755                           ;LCD.c: 115:  dato &= 0xF0;
  3756   002BE6  0EF0               	movlw	240
  3757   002BE8  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  3758                           
  3759                           ;LCD.c: 116:  LATD|= dato;
  3760   002BEA  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  3761   002BEC  12C1               	iorwf	193,f,c	;volatile
  3762   002BEE                     
  3763                           ;LCD.c: 117:  LATDbits.LATD2 = 1;
  3764   002BEE  84C1               	bsf	193,2,c	;volatile
  3765   002BF0                     
  3766                           ;LCD.c: 119:         _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  3767   002BF0  0EA0               	movlw	160
  3768   002BF2                     u667:
  3769   002BF2  D000               	nop2	
  3770   002BF4  2EE8               	decfsz	wreg,f,c
  3771   002BF6  D7FD               	bra	u667
  3772   002BF8                     
  3773                           ;LCD.c: 120:  LATDbits.LATD2 = 0;
  3774   002BF8  94C1               	bcf	193,2,c	;volatile
  3775   002BFA  0012               	return		;funcret
  3776   002BFC                     __end_of_ENVIA_NIBBLE:
  3777                           	callstack 0
  3778                           
  3779                           	psect	rparam
  3780   000001                     ___rparam_used  equ	1
  3781   000000                     ___param_bank   equ	0
  3782   000000                     __Lparam        equ	__Lrparam
  3783   000000                     __Hparam        equ	__Hrparam
  3784                           
  3785                           	psect	config
  3786                           
  3787                           ;Config register CONFIG1 @ 0x300000
  3788                           ;	External Oscillator Selection
  3789                           ;	FEXTOSC = OFF, Oscillator not enabled
  3790                           ;	Reset Oscillator Selection
  3791                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3792   300000                     	org	3145728
  3793   300000  FC                 	db	252
  3794                           
  3795                           ;Config register CONFIG2 @ 0x300001
  3796                           ;	Clock out Enable bit
  3797                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3798                           ;	PRLOCKED One-Way Set Enable bit
  3799                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3800                           ;	Clock Switch Enable bit
  3801                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3802                           ;	Fail-Safe Clock Monitor Enable bit
  3803                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3804   300001                     	org	3145729
  3805   300001  FF                 	db	255
  3806                           
  3807                           ;Config register CONFIG3 @ 0x300002
  3808                           ;	MCLR Enable bit
  3809                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3810                           ;	Power-up timer selection bits
  3811                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  3812                           ;	Multi-vector enable bit
  3813                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3814                           ;	IVTLOCK bit One-way set enable bit
  3815                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3816                           ;	Low Power BOR Enable bit
  3817                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3818                           ;	Brown-out Reset Enable bits
  3819                           ;	BOREN = OFF, Brown-out Reset disabled
  3820   300002                     	org	3145730
  3821   300002  3D                 	db	61
  3822                           
  3823                           ;Config register CONFIG4 @ 0x300003
  3824                           ;	Brown-out Reset Voltage Selection bits
  3825                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3826                           ;	ZCD Disable bit
  3827                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3828                           ;	PPSLOCK bit One-Way Set Enable bit
  3829                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3830                           ;	Stack Full/Underflow Reset Enable bit
  3831                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3832                           ;	Low Voltage Programming Enable bit
  3833                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3834                           ;	Extended Instruction Set Enable bit
  3835                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3836   300003                     	org	3145731
  3837   300003  DF                 	db	223
  3838                           
  3839                           ;Config register CONFIG5 @ 0x300004
  3840                           ;	WDT Period selection bits
  3841                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3842                           ;	WDT operating mode
  3843                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3844   300004                     	org	3145732
  3845   300004  9F                 	db	159
  3846                           
  3847                           ;Config register CONFIG6 @ 0x300005
  3848                           ;	WDT Window Select bits
  3849                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3850                           ;	WDT input clock selector
  3851                           ;	WDTCCS = SC, Software Control
  3852   300005                     	org	3145733
  3853   300005  FF                 	db	255
  3854                           
  3855                           ;Config register CONFIG7 @ 0x300006
  3856                           ;	Boot Block Size selection bits
  3857                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3858                           ;	Boot Block enable bit
  3859                           ;	BBEN = OFF, Boot block disabled
  3860                           ;	Storage Area Flash enable bit
  3861                           ;	SAFEN = OFF, SAF disabled
  3862                           ;	Background Debugger
  3863                           ;	DEBUG = OFF, Background Debugger disabled
  3864   300006                     	org	3145734
  3865   300006  FF                 	db	255
  3866                           
  3867                           ;Config register CONFIG8 @ 0x300007
  3868                           ;	Boot Block Write Protection bit
  3869                           ;	WRTB = OFF, Boot Block not Write protected
  3870                           ;	Configuration Register Write Protection bit
  3871                           ;	WRTC = OFF, Configuration registers not Write protected
  3872                           ;	Data EEPROM Write Protection bit
  3873                           ;	WRTD = OFF, Data EEPROM not Write protected
  3874                           ;	SAF Write protection bit
  3875                           ;	WRTSAF = OFF, SAF not Write Protected
  3876                           ;	Application Block write protection bit
  3877                           ;	WRTAPP = OFF, Application Block not write protected
  3878   300007                     	org	3145735
  3879   300007  FF                 	db	255
  3880                           
  3881                           ;Config register CONFIG10 @ 0x300009
  3882                           ;	PFM and Data EEPROM Code Protection bit
  3883                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3884   300009                     	org	3145737
  3885   300009  FF                 	db	255
  3886                           tosu	equ	0x4FF
  3887                           tosh	equ	0x4FE
  3888                           tosl	equ	0x4FD
  3889                           stkptr	equ	0x4FC
  3890                           pclatu	equ	0x4FB
  3891                           pclath	equ	0x4FA
  3892                           pcl	equ	0x4F9
  3893                           tblptru	equ	0x4F8
  3894                           tblptrh	equ	0x4F7
  3895                           tblptrl	equ	0x4F6
  3896                           tablat	equ	0x4F5
  3897                           prodh	equ	0x4F4
  3898                           prodl	equ	0x4F3
  3899                           indf0	equ	0x4EF
  3900                           postinc0	equ	0x4EE
  3901                           postdec0	equ	0x4ED
  3902                           preinc0	equ	0x4EC
  3903                           plusw0	equ	0x4EB
  3904                           fsr0h	equ	0x4EA
  3905                           fsr0l	equ	0x4E9
  3906                           wreg	equ	0x4E8
  3907                           indf1	equ	0x4E7
  3908                           postinc1	equ	0x4E6
  3909                           postdec1	equ	0x4E5
  3910                           preinc1	equ	0x4E4
  3911                           plusw1	equ	0x4E3
  3912                           fsr1h	equ	0x4E2
  3913                           fsr1l	equ	0x4E1
  3914                           bsr	equ	0x4E0
  3915                           indf2	equ	0x4DF
  3916                           postinc2	equ	0x4DE
  3917                           postdec2	equ	0x4DD
  3918                           preinc2	equ	0x4DC
  3919                           plusw2	equ	0x4DB
  3920                           fsr2h	equ	0x4DA
  3921                           fsr2l	equ	0x4D9
  3922                           status	equ	0x4D8

Data Sizes:
    Strings     49
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     21      21
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[15]), STR_2(CODE[16]), STR_3(CODE[8]), STR_4(CODE[10]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[15]), STR_2(CODE[16]), STR_3(CODE[8]), STR_4(CODE[10]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[15]), STR_2(CODE[16]), STR_3(CODE[8]), STR_4(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_LCD_ESCRIBE_VAR_CHAR
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _LCD_ESCRIBE_VAR_CHAR->___awdiv
    ___awdiv->___awmod
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2184
                                             19 COMRAM     2     2      0
                         _BORRAR_LCD
                   _ESCRIBE_MENSAJE2
               _LCD_ESCRIBE_VAR_CHAR
                         _POS_CURSOR
                          _configuro
                    _tomamuestra_ADC
 ---------------------------------------------------------------------------------
 (1) _tomamuestra_ADC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             2     2      0     525
                                              4 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     328
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (5) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_ESCRIBE_VAR_CHAR                                 5     4      1     927
                                             14 COMRAM     5     4      1
                         _ENVIA_CHAR
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     304
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1     284
                                              4 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           3     3      0      75
                                              1 COMRAM     3     3      0
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
     _strlen
   _LCD_ESCRIBE_VAR_CHAR
     _ENVIA_CHAR
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _configuro
     _LCD_INIT
       _BORRAR_LCD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _tomamuestra_ADC

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM           95      0       0      0.0%
BITBANK5           160      0       0      0.0%
BITBANK6           256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BITBIGSFRlh        831      0       0      0.0%
BITBIGSFRh         268      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBIGSFRllll      125      0       0      0.0%
BITBIGSFRllh        51      0       0      0.0%
BITBIGSFRlllh        1      0       0      0.0%
COMRAM              95     21      21     22.1%
BANK5              160      0       0      0.0%
BANK6              256      0       0      0.0%
BANK7              256      0       0      0.0%
BANK8              256      0       0      0.0%
BANK9              256      0       0      0.0%
BANK10             256      0       0      0.0%
BANK11             256      0       0      0.0%
BANK12             256      0       0      0.0%
BANK13             256      0       0      0.0%
BANK14             256      0       0      0.0%
BANK15             256      0       0      0.0%
BANK16             256      0       0      0.0%
BANK17             256      0       0      0.0%
BANK18             256      0       0      0.0%
BANK19             256      0       0      0.0%
BANK20             256      0       0      0.0%
BANK21             256      0       0      0.0%
BANK22             256      0       0      0.0%
BANK23             256      0       0      0.0%
BANK24             256      0       0      0.0%
BANK25             256      0       0      0.0%
BANK26             256      0       0      0.0%
BANK27             256      0       0      0.0%
BANK28             256      0       0      0.0%
BANK29             256      0       0      0.0%
BANK30             256      0       0      0.0%
BANK31             256      0       0      0.0%
BANK32             256      0       0      0.0%
BANK33             256      0       0      0.0%
BANK34             256      0       0      0.0%
BANK35             256      0       0      0.0%
BANK36             256      0       0      0.0%
BIGRAM            8191      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      21      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Oct 23 12:24:09 2024

                           l41 2C12                             l35 2B4A                             l38 2C02  
                           l81 2976                             l77 2976                             l94 2C1A  
                           u10 29E8                             u11 29E4                             u20 2BC2  
                           u21 2BBE                             u30 2BD8                             u31 2BD4  
                 ___awdiv@sign 050C                  ENVIA_CHAR@aux 0504                            l111 2BDE  
                          l123 2ADE                            l132 2A9C                            l126 2BAE  
                          l142 29AE                            l135 2BFA                            l160 26FE  
                          l144 29E8                            l152 2A4A                            l129 2C22  
                          l138 2B7C                            l446 27C0                            l459 286E  
                          l900 2BF8                            l910 2982                            l902 2978  
                          l920 299A                            l912 298A                            l904 297C  
                          l930 29BC                            l922 29A2                            l914 298E  
                          l906 297E                            l932 29C6                            l924 29A4  
                          l916 2990                            l908 2980                            l940 2B4E  
                          l934 29D0                            l926 29B0                            l918 2998  
                          l950 2B60                            l942 2B50                            l928 29B8  
                          l960 2B76                            l952 2B62                            l944 2B54  
                          l938 29D6                            l954 2B64                            l946 2B56  
                          l962 2C1C                            l970 2BC8                            l892 2B16  
                          l956 2B6A                            l948 2B5E                            l964 2C14  
                          l972 2BD8                            l980 2A64                            l894 2BE2  
                          l958 2B70                            l966 2BB2                            l990 2A8A  
                          l982 2A72                            l974 2A4C                            l896 2BEE  
                          l968 2BC2                            l992 2A90                            l984 2A78  
                          l976 2A50                            l898 2BF0                            l994 2A96  
                          l986 2A7E                            l978 2A56                            l988 2A84  
                          l996 29EA                            l998 2A02                            u400 27B0  
                          u401 27AC                            u410 27D2                            u170 2C10  
                          u411 27CE                            u171 2C0C                            u340 2B0A  
                          u420 27EC                            u500 296A                            u341 2B06  
                          u421 27E8                            u501 2966                            u510 2ADE  
                          u350 2710                            u430 2806                            u511 2ADA  
                          u351 270C                            u431 2802                            u360 272A  
                          u440 2824                            u361 2726                            u441 2820  
                          u370 2750                            u450 283A                            u371 274C  
                          u451 2836                            u380 276E                            u460 285E  
                          u381 276A                            u461 285A                            u390 278A  
                          u470 2910                            u391 2786                            u607 2992  
                          u471 290C                            u527 28A2                            u480 292E  
                          u617 299C                            u481 292A                            u537 29F4  
                          u490 294C                            u627 29B2                            u491 2948  
                          u547 2A12                            u637 29C0                            u557 2A2E  
                          u647 29CA                            u567 2A5C                            u657 2B88  
                          u577 2A6C                            u667 2BF2                            u587 2B58  
                          u597 2984                   ___awmod@sign 0506                    LEER_LCD@aux 0501  
                          wreg 04E8                   ?_CURSOR_HOME 0501                 ??_ENVIA_NIBBLE 0501  
               ENVIA_CHAR@dato 0503                           l1000 2A04                           l1010 2B90  
                         l1002 2A20                           l1020 2BA2                           l1012 2B92  
                         l1004 2A24                           l1022 2BA8                           l1014 2B94  
                         l1006 2B80                           l1016 2B96                           l1008 2B82  
                         l1120 2B2C                           l1018 2B9C                           l1130 2B3C  
                         l1122 2B2E                           l1114 2B18                           l1132 2B44  
                         l1124 2B30                           l1116 2B26                           l1134 2B46  
                         l1126 2B32                           l1118 2B28                           l1128 2B3A  
                         l1136 2BFC                           l1410 27DE                           l1402 27C2  
                         l1138 2C10                           l1420 2816                           l1412 27EC  
                         l1404 27C4                           l1500 28EA                           l1350 2AE8  
                         l1422 2824                           l1430 284E                           l1414 27F4  
                         l1406 27D2                           l1352 2AEA                           l1360 2702  
                         l1432 285E                           l1424 283A                           l1416 2806  
                         l1408 27DA                           l1440 2910                           l1354 2B0A  
                         l1370 2732                           l1362 2710                           l1434 2866  
                         l1426 2842                           l1418 280E                           l1450 2958  
                         l1442 291C                           l1348 2AE0                           l1460 2AB0  
                         l1380 2760                           l1372 2736                           l1364 2718  
                         l1428 2848                           l1452 296A                           l1444 292E  
                         l1462 2ACA                           l1454 2A9E                           l1390 2794  
                         l1382 276E                           l1374 273E                           l1366 271C  
                         l1358 2700                           l1470 26B0                           l1446 293A  
                         l1438 2900                           l1464 2ACC                           l1456 2AAA  
                         l1392 279A                           l1384 2774                           l1376 2750  
                         l1368 272A                           l1472 26C4                           l1448 294C  
                         l1480 287E                           l1458 2AAA                           l1386 278A  
                         l1378 2758                           l1394 27A0                           l1466 2636  
                         l1490 28BA                           l1482 2886                           l1396 27B0  
                         l1388 2792                           l1468 26A4                           l1476 26E0  
                         l1492 28C4                           l1484 2898                           l1398 27B8  
                         l1494 28CC                           l1486 28AE                           l1478 2870  
                         l1496 28D8                           l1488 28B2                           l1498 28E2  
                         STR_1 2611                           STR_2 2601                           STR_3 262A  
                         STR_4 2620                           _LATD 04C1                           _main 2870  
                         start FFFC                  ?_CURSOR_ONOFF 0501              ??_tomamuestra_ADC 0501  
                 ___param_bank 0000     LCD_ESCRIBE_VAR_CHAR@decena 0511                ??_ENVIA_LCD_CMD 0502  
             __end_of_LCD_INIT 2A4C               __end_of_LEER_LCD 29EA     LCD_ESCRIBE_VAR_CHAR@numero 0512  
   LCD_ESCRIBE_VAR_CHAR@unidad 0513                          ?_main 0501                          _ADPCH 03EC  
              __end_of___awdiv 27C2                __end_of___awmod 2870                ___awdiv@divisor 0509  
              ___awdiv@counter 050B                          _OSCEN 00B3                          _PORTD 04D1  
                        _TRISD 04C9                    ?_POS_CURSOR 0504                          tablat 04F5  
                        status 04D8                 ??_CURSOR_ONOFF 0504                __initialization 2C24  
                 __end_of_main 28FE    LCD_ESCRIBE_VAR_CHAR@centena 0510                         ??_main 0514  
                __activetblptr 0003                         _ADRESH 03EB               ___awdiv@dividend 0507  
                       _ANSELD 0418                         _OSCFRQ 00B1                      ??___awdiv 050B  
                    ??___awmod 0505           __end_of_ENVIA_NIBBLE 2BFC               ___awdiv@quotient 050D  
              ___awmod@divisor 0503                         isa$std 0001                ___awmod@counter 0505  
                       _strlen 2AE0   __end_of_LCD_ESCRIBE_VAR_CHAR 2700                   __mediumconst 0000  
                       tblptrh 04F7                         tblptrl 04F6                         tblptru 04F8  
                 ??_BORRAR_LCD 0504                      ?_LCD_INIT 0501                      ?_LEER_LCD 0501  
                   __accesstop 0560        __end_of__initialization 2C24                   ??_LCD_CONFIG 0504  
                ___rparam_used 0001                   ??_ENVIA_CHAR 0502                 __pcstackCOMRAM 0501  
           __end_of_BORRAR_LCD 2C24               _ESCRIBE_MENSAJE2 2A9E               ENVIA_LCD_CMD@aux 0503  
         __end_of_CURSOR_ONOFF 2BE0             __end_of_LCD_CONFIG 2A9E             __end_of_ENVIA_CHAR 2BB0  
              _tomamuestra_ADC 2BFC                     ??_LCD_INIT 0505                     ??_LEER_LCD 0501  
             ENVIA_NIBBLE@dato 0501                        _DAC1CON 007F                        ?_strlen 0501  
                      _OSCCON1 00AD                   ??_POS_CURSOR 0505           _LCD_ESCRIBE_VAR_CHAR 2634  
                      __Hparam 0000                        __Lparam 0000              __end_of_configuro 2B4C  
                      ___awdiv 2700                        ___awmod 27C2                   __psmallconst 2600  
        __end_of_ENVIA_LCD_CMD 2B7E                        __pcinit 2C24             __end_of_POS_CURSOR 2978  
                      __ramtop 2600                        __ptext0 2870                        __ptext1 2BFC  
                      __ptext2 2B18                        __ptext3 29EA                        __ptext4 2A4C  
                      __ptext5 2BB0                        __ptext6 2C14                        __ptext7 2C1C  
                      __ptext8 28FE                        __ptext9 2B4C        __end_of_tomamuestra_ADC 2C14  
             ___awmod@dividend 0501                   _ENVIA_NIBBLE 2BE0           end_of_initialization 2C24  
        ?_LCD_ESCRIBE_VAR_CHAR 050F                        strlen@a 0503                        strlen@s 0501  
            ESCRIBE_MENSAJE2@i 0508                      _TRISAbits 04C6       __end_of_ESCRIBE_MENSAJE2 2AE0  
                 _CURSOR_ONOFF 2BB0             CURSOR_ONOFF@estado 0504                 __end_of_strlen 2B18  
                ??_CURSOR_HOME 0504               ?_tomamuestra_ADC 0501            start_initialization 2C24  
       ??_LCD_ESCRIBE_VAR_CHAR 0510              ENVIA_LCD_CMD@dato 0502                       ??_strlen 0503  
          __end_of_CURSOR_HOME 2C1C                       ?___awdiv 0507                       ?___awmod 0501  
                     _DAC1DATL 007D                      _configuro 2B18                    __smallconst 2600  
                     _LCD_INIT 29EA                       _LEER_LCD 2978                       _LATDbits 04C1  
               POS_CURSOR@fila 0505                     ?_configuro 0501                     _ADCON0bits 03F3  
       ESCRIBE_MENSAJE2@cadena 0505                    _CURSOR_HOME 2C14  LCD_ESCRIBE_VAR_CHAR@n_digitos 050F  
                     __Hrparam 0000              ?_ESCRIBE_MENSAJE2 0505                       __Lrparam 0000  
           ??_ESCRIBE_MENSAJE2 0506                     _ANSELAbits 0400                       __ptext10 2978  
                     __ptext11 2634                       __ptext12 27C2                       __ptext13 2700  
                     __ptext14 2A9E                       __ptext15 2AE0                       __ptext16 2B7E  
                     __ptext17 2BE0                     _BORRAR_LCD 2C1C                     _LCD_CONFIG 2A4C  
                   _ENVIA_CHAR 2B7E                       isa$xinst 0000                  _ENVIA_LCD_CMD 2B4C  
                  ??_configuro 0507                 ?_ENVIA_LCD_CMD 0501            ESCRIBE_MENSAJE2@tam 0507  
                  ?_BORRAR_LCD 0501                  ?_ENVIA_NIBBLE 0501                     _POS_CURSOR 28FE  
                  ?_LCD_CONFIG 0501                    ?_ENVIA_CHAR 0501              POS_CURSOR@columna 0504  
