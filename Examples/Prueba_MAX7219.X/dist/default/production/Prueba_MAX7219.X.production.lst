

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Oct 19 22:43:18 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=1
    23                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    25                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 23/02/2024 GMT
    32                           ; 
    33                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F57Q43 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   0004E0                     bsr             equ	1248
    66   0004E9                     fsr0            equ	1257
    67   0004EA                     fsr0h           equ	1258
    68   0004E9                     fsr0l           equ	1257
    69   0004E1                     fsr1            equ	1249
    70   0004E2                     fsr1h           equ	1250
    71   0004E1                     fsr1l           equ	1249
    72   0004D9                     fsr2            equ	1241
    73   0004DA                     fsr2h           equ	1242
    74   0004D9                     fsr2l           equ	1241
    75   0004EF                     indf0           equ	1263
    76   0004E7                     indf1           equ	1255
    77   0004DF                     indf2           equ	1247
    78   0004D6                     intcon          equ	1238
    79   000041                     nvmcon          equ	65
    80   0004F9                     pcl             equ	1273
    81   0004FA                     pclath          equ	1274
    82   0004FB                     pclatu          equ	1275
    83   0004EB                     plusw0          equ	1259
    84   0004E3                     plusw1          equ	1251
    85   0004DB                     plusw2          equ	1243
    86   0004ED                     postdec0        equ	1261
    87   0004E5                     postdec1        equ	1253
    88   0004DD                     postdec2        equ	1245
    89   0004EE                     postinc0        equ	1262
    90   0004E6                     postinc1        equ	1254
    91   0004DE                     postinc2        equ	1246
    92   0004EC                     preinc0         equ	1260
    93   0004E4                     preinc1         equ	1252
    94   0004DC                     preinc2         equ	1244
    95   0004F3                     prod            equ	1267
    96   0004F4                     prodh           equ	1268
    97   0004F3                     prodl           equ	1267
    98   0004D8                     status          equ	1240
    99   0004F5                     tablat          equ	1269
   100   0004F6                     tblptr          equ	1270
   101   0004F7                     tblptrh         equ	1271
   102   0004F6                     tblptrl         equ	1270
   103   0004F8                     tblptru         equ	1272
   104   0004FD                     tosl            equ	1277
   105   0004E8                     wreg            equ	1256
   106   000039                     CLKRCON         equ	57	;# 
   107   00003A                     CLKRCLK         equ	58	;# 
   108   000040                     NVMCON0         equ	64	;# 
   109   000041                     NVMCON1         equ	65	;# 
   110   000042                     NVMLOCK         equ	66	;# 
   111   000043                     NVMADR          equ	67	;# 
   112   000043                     NVMADRL         equ	67	;# 
   113   000044                     NVMADRH         equ	68	;# 
   114   000045                     NVMADRU         equ	69	;# 
   115   000046                     NVMDAT          equ	70	;# 
   116   000046                     NVMDATL         equ	70	;# 
   117   000047                     NVMDATH         equ	71	;# 
   118   000048                     VREGCON         equ	72	;# 
   119   000049                     BORCON          equ	73	;# 
   120   00004A                     HLVDCON0        equ	74	;# 
   121   00004B                     HLVDCON1        equ	75	;# 
   122   00004C                     ZCDCON          equ	76	;# 
   123   000060                     PMD0            equ	96	;# 
   124   000061                     PMD1            equ	97	;# 
   125   000063                     PMD3            equ	99	;# 
   126   000064                     PMD4            equ	100	;# 
   127   000065                     PMD5            equ	101	;# 
   128   000066                     PMD6            equ	102	;# 
   129   000067                     PMD7            equ	103	;# 
   130   000068                     PMD8            equ	104	;# 
   131   00006A                     MD1CON0         equ	106	;# 
   132   00006B                     MD1CON1         equ	107	;# 
   133   00006C                     MD1SRC          equ	108	;# 
   134   00006D                     MD1CARL         equ	109	;# 
   135   00006E                     MD1CARH         equ	110	;# 
   136   00006F                     CMOUT           equ	111	;# 
   137   000070                     CM1CON0         equ	112	;# 
   138   000071                     CM1CON1         equ	113	;# 
   139   000072                     CM1NCH          equ	114	;# 
   140   000073                     CM1PCH          equ	115	;# 
   141   000074                     CM2CON0         equ	116	;# 
   142   000075                     CM2CON1         equ	117	;# 
   143   000076                     CM2NCH          equ	118	;# 
   144   000077                     CM2PCH          equ	119	;# 
   145   000078                     WDTCON0         equ	120	;# 
   146   000079                     WDTCON1         equ	121	;# 
   147   00007A                     WDTPS           equ	122	;# 
   148   00007A                     WDTPSL          equ	122	;# 
   149   00007B                     WDTPSH          equ	123	;# 
   150   00007C                     WDTTMR          equ	124	;# 
   151   00007D                     DAC1DAT         equ	125	;# 
   152   00007D                     DAC1DATL        equ	125	;# 
   153   00007F                     DAC1CON         equ	127	;# 
   154   000080                     SPI1RXB         equ	128	;# 
   155   000081                     SPI1TXB         equ	129	;# 
   156   000082                     SPI1TCNT        equ	130	;# 
   157   000082                     SPI1TCNTL       equ	130	;# 
   158   000083                     SPI1TCNTH       equ	131	;# 
   159   000084                     SPI1CON0        equ	132	;# 
   160   000085                     SPI1CON1        equ	133	;# 
   161   000086                     SPI1CON2        equ	134	;# 
   162   000087                     SPI1STATUS      equ	135	;# 
   163   000088                     SPI1TWIDTH      equ	136	;# 
   164   000089                     SPI1BAUD        equ	137	;# 
   165   00008A                     SPI1INTF        equ	138	;# 
   166   00008B                     SPI1INTE        equ	139	;# 
   167   00008C                     SPI1CLK         equ	140	;# 
   168   00008D                     SPI2RXB         equ	141	;# 
   169   00008E                     SPI2TXB         equ	142	;# 
   170   00008F                     SPI2TCNT        equ	143	;# 
   171   00008F                     SPI2TCNTL       equ	143	;# 
   172   000090                     SPI2TCNTH       equ	144	;# 
   173   000091                     SPI2CON0        equ	145	;# 
   174   000092                     SPI2CON1        equ	146	;# 
   175   000093                     SPI2CON2        equ	147	;# 
   176   000094                     SPI2STATUS      equ	148	;# 
   177   000095                     SPI2TWIDTH      equ	149	;# 
   178   000096                     SPI2BAUD        equ	150	;# 
   179   000097                     SPI2INTF        equ	151	;# 
   180   000098                     SPI2INTE        equ	152	;# 
   181   000099                     SPI2CLK         equ	153	;# 
   182   0000AC                     ACTCON          equ	172	;# 
   183   0000AD                     OSCCON1         equ	173	;# 
   184   0000AE                     OSCCON2         equ	174	;# 
   185   0000AF                     OSCCON3         equ	175	;# 
   186   0000B0                     OSCTUNE         equ	176	;# 
   187   0000B1                     OSCFRQ          equ	177	;# 
   188   0000B1                     OSCFREQ         equ	177	;# 
   189   0000B2                     OSCSTAT         equ	178	;# 
   190   0000B2                     OSCSTAT1        equ	178	;# 
   191   0000B3                     OSCEN           equ	179	;# 
   192   0000B4                     PRLOCK          equ	180	;# 
   193   0000B5                     SCANPR          equ	181	;# 
   194   0000B6                     DMA1PR          equ	182	;# 
   195   0000B7                     DMA2PR          equ	183	;# 
   196   0000B8                     DMA3PR          equ	184	;# 
   197   0000B9                     DMA4PR          equ	185	;# 
   198   0000BA                     DMA5PR          equ	186	;# 
   199   0000BB                     DMA6PR          equ	187	;# 
   200   0000BE                     MAINPR          equ	190	;# 
   201   0000BF                     ISRPR           equ	191	;# 
   202   0000D4                     CLCDATA         equ	212	;# 
   203   0000D5                     CLCSELECT       equ	213	;# 
   204   0000D6                     CLCnCON         equ	214	;# 
   205   0000D7                     CLCnPOL         equ	215	;# 
   206   0000D8                     CLCnSEL0        equ	216	;# 
   207   0000D9                     CLCnSEL1        equ	217	;# 
   208   0000DA                     CLCnSEL2        equ	218	;# 
   209   0000DB                     CLCnSEL3        equ	219	;# 
   210   0000DC                     CLCnGLS0        equ	220	;# 
   211   0000DD                     CLCnGLS1        equ	221	;# 
   212   0000DE                     CLCnGLS2        equ	222	;# 
   213   0000DF                     CLCnGLS3        equ	223	;# 
   214   0000E8                     DMASELECT       equ	232	;# 
   215   0000E9                     DMAnBUF         equ	233	;# 
   216   0000EA                     DMAnDCNT        equ	234	;# 
   217   0000EA                     DMAnDCNTL       equ	234	;# 
   218   0000EB                     DMAnDCNTH       equ	235	;# 
   219   0000EC                     DMAnDPTR        equ	236	;# 
   220   0000EC                     DMAnDPTRL       equ	236	;# 
   221   0000ED                     DMAnDPTRH       equ	237	;# 
   222   0000EE                     DMAnDSZ         equ	238	;# 
   223   0000EE                     DMAnDSZL        equ	238	;# 
   224   0000EF                     DMAnDSZH        equ	239	;# 
   225   0000F0                     DMAnDSA         equ	240	;# 
   226   0000F0                     DMAnDSAL        equ	240	;# 
   227   0000F1                     DMAnDSAH        equ	241	;# 
   228   0000F2                     DMAnSCNT        equ	242	;# 
   229   0000F2                     DMAnSCNTL       equ	242	;# 
   230   0000F3                     DMAnSCNTH       equ	243	;# 
   231   0000F4                     DMAnSPTR        equ	244	;# 
   232   0000F4                     DMAnSPTRL       equ	244	;# 
   233   0000F5                     DMAnSPTRH       equ	245	;# 
   234   0000F6                     DMAnSPTRU       equ	246	;# 
   235   0000F7                     DMAnSSZ         equ	247	;# 
   236   0000F7                     DMAnSSZL        equ	247	;# 
   237   0000F8                     DMAnSSZH        equ	248	;# 
   238   0000F9                     DMAnSSA         equ	249	;# 
   239   0000F9                     DMAnSSAL        equ	249	;# 
   240   0000FA                     DMAnSSAH        equ	250	;# 
   241   0000FB                     DMAnSSAU        equ	251	;# 
   242   0000FC                     DMAnCON0        equ	252	;# 
   243   0000FD                     DMAnCON1        equ	253	;# 
   244   0000FE                     DMAnAIRQ        equ	254	;# 
   245   0000FF                     DMAnSIRQ        equ	255	;# 
   246   000200                     PPSLOCK         equ	512	;# 
   247   000201                     RA0PPS          equ	513	;# 
   248   000202                     RA1PPS          equ	514	;# 
   249   000203                     RA2PPS          equ	515	;# 
   250   000204                     RA3PPS          equ	516	;# 
   251   000205                     RA4PPS          equ	517	;# 
   252   000206                     RA5PPS          equ	518	;# 
   253   000207                     RA6PPS          equ	519	;# 
   254   000208                     RA7PPS          equ	520	;# 
   255   000209                     RB0PPS          equ	521	;# 
   256   00020A                     RB1PPS          equ	522	;# 
   257   00020B                     RB2PPS          equ	523	;# 
   258   00020C                     RB3PPS          equ	524	;# 
   259   00020D                     RB4PPS          equ	525	;# 
   260   00020E                     RB5PPS          equ	526	;# 
   261   00020F                     RB6PPS          equ	527	;# 
   262   000210                     RB7PPS          equ	528	;# 
   263   000211                     RC0PPS          equ	529	;# 
   264   000212                     RC1PPS          equ	530	;# 
   265   000213                     RC2PPS          equ	531	;# 
   266   000214                     RC3PPS          equ	532	;# 
   267   000215                     RC4PPS          equ	533	;# 
   268   000216                     RC5PPS          equ	534	;# 
   269   000217                     RC6PPS          equ	535	;# 
   270   000218                     RC7PPS          equ	536	;# 
   271   000219                     RD0PPS          equ	537	;# 
   272   00021A                     RD1PPS          equ	538	;# 
   273   00021B                     RD2PPS          equ	539	;# 
   274   00021C                     RD3PPS          equ	540	;# 
   275   00021D                     RD4PPS          equ	541	;# 
   276   00021E                     RD5PPS          equ	542	;# 
   277   00021F                     RD6PPS          equ	543	;# 
   278   000220                     RD7PPS          equ	544	;# 
   279   000221                     RE0PPS          equ	545	;# 
   280   000222                     RE1PPS          equ	546	;# 
   281   000223                     RE2PPS          equ	547	;# 
   282   000229                     RF0PPS          equ	553	;# 
   283   00022A                     RF1PPS          equ	554	;# 
   284   00022B                     RF2PPS          equ	555	;# 
   285   00022C                     RF3PPS          equ	556	;# 
   286   00022D                     RF4PPS          equ	557	;# 
   287   00022E                     RF5PPS          equ	558	;# 
   288   00022F                     RF6PPS          equ	559	;# 
   289   000230                     RF7PPS          equ	560	;# 
   290   00023E                     INT0PPS         equ	574	;# 
   291   00023F                     INT1PPS         equ	575	;# 
   292   000240                     INT2PPS         equ	576	;# 
   293   000241                     T0CKIPPS        equ	577	;# 
   294   000242                     T1CKIPPS        equ	578	;# 
   295   000243                     T1GPPS          equ	579	;# 
   296   000244                     T3CKIPPS        equ	580	;# 
   297   000245                     T3GPPS          equ	581	;# 
   298   000246                     T5CKIPPS        equ	582	;# 
   299   000247                     T5GPPS          equ	583	;# 
   300   000248                     T2INPPS         equ	584	;# 
   301   000249                     T4INPPS         equ	585	;# 
   302   00024A                     T6INPPS         equ	586	;# 
   303   00024F                     CCP1PPS         equ	591	;# 
   304   000250                     CCP2PPS         equ	592	;# 
   305   000251                     CCP3PPS         equ	593	;# 
   306   000253                     PWM1ERSPPS      equ	595	;# 
   307   000254                     PWM2ERSPPS      equ	596	;# 
   308   000255                     PWM3ERSPPS      equ	597	;# 
   309   000257                     PWMIN0PPS       equ	599	;# 
   310   000258                     PWMIN1PPS       equ	600	;# 
   311   000259                     SMT1WINPPS      equ	601	;# 
   312   00025A                     SMT1SIGPPS      equ	602	;# 
   313   00025B                     CWG1PPS         equ	603	;# 
   314   00025B                     CWG1INPPS       equ	603	;# 
   315   00025C                     CWG2PPS         equ	604	;# 
   316   00025C                     CWG2INPPS       equ	604	;# 
   317   00025D                     CWG3PPS         equ	605	;# 
   318   00025D                     CWG3INPPS       equ	605	;# 
   319   00025E                     MD1CARLPPS      equ	606	;# 
   320   00025E                     MDCARLPPS       equ	606	;# 
   321   00025F                     MD1CARHPPS      equ	607	;# 
   322   00025F                     MDCARHPPS       equ	607	;# 
   323   000260                     MD1SRCPPS       equ	608	;# 
   324   000260                     MDSRCPPS        equ	608	;# 
   325   000261                     CLCIN0PPS       equ	609	;# 
   326   000262                     CLCIN1PPS       equ	610	;# 
   327   000263                     CLCIN2PPS       equ	611	;# 
   328   000264                     CLCIN3PPS       equ	612	;# 
   329   000265                     CLCIN4PPS       equ	613	;# 
   330   000266                     CLCIN5PPS       equ	614	;# 
   331   000267                     CLCIN6PPS       equ	615	;# 
   332   000268                     CLCIN7PPS       equ	616	;# 
   333   000269                     ADACTPPS        equ	617	;# 
   334   00026A                     SPI1SCKPPS      equ	618	;# 
   335   00026B                     SPI1SDIPPS      equ	619	;# 
   336   00026C                     SPI1SSPPS       equ	620	;# 
   337   00026D                     SPI2SCKPPS      equ	621	;# 
   338   00026E                     SPI2SDIPPS      equ	622	;# 
   339   00026F                     SPI2SSPPS       equ	623	;# 
   340   000270                     I2C1SDAPPS      equ	624	;# 
   341   000271                     I2C1SCLPPS      equ	625	;# 
   342   000272                     U1RXPPS         equ	626	;# 
   343   000273                     U1CTSPPS        equ	627	;# 
   344   000274                     U2RXPPS         equ	628	;# 
   345   000275                     U2CTSPPS        equ	629	;# 
   346   000276                     U3RXPPS         equ	630	;# 
   347   000277                     U3CTSPPS        equ	631	;# 
   348   000278                     U4RXPPS         equ	632	;# 
   349   000279                     U4CTSPPS        equ	633	;# 
   350   00027A                     U5RXPPS         equ	634	;# 
   351   00027B                     U5CTSPPS        equ	635	;# 
   352   000286                     RC4I2C          equ	646	;# 
   353   000287                     RC3I2C          equ	647	;# 
   354   000288                     RB2I2C          equ	648	;# 
   355   000289                     RB1I2C          equ	649	;# 
   356   00028B                     I2C1RXB         equ	651	;# 
   357   00028C                     I2C1TXB         equ	652	;# 
   358   00028D                     I2C1CNT         equ	653	;# 
   359   00028E                     I2C1ADB0        equ	654	;# 
   360   00028F                     I2C1ADB1        equ	655	;# 
   361   000290                     I2C1ADR0        equ	656	;# 
   362   000291                     I2C1ADR1        equ	657	;# 
   363   000292                     I2C1ADR2        equ	658	;# 
   364   000293                     I2C1ADR3        equ	659	;# 
   365   000294                     I2C1CON0        equ	660	;# 
   366   000295                     I2C1CON1        equ	661	;# 
   367   000296                     I2C1CON2        equ	662	;# 
   368   000297                     I2C1ERR         equ	663	;# 
   369   000298                     I2C1STAT0       equ	664	;# 
   370   000299                     I2C1STAT1       equ	665	;# 
   371   00029A                     I2C1PIR         equ	666	;# 
   372   00029B                     I2C1PIE         equ	667	;# 
   373   00029C                     I2C1CLK         equ	668	;# 
   374   00029D                     I2C1BTO         equ	669	;# 
   375   0002A1                     U1RXB           equ	673	;# 
   376   0002A1                     U1RXBL          equ	673	;# 
   377   0002A2                     U1RXCHK         equ	674	;# 
   378   0002A3                     U1TXB           equ	675	;# 
   379   0002A3                     U1TXBL          equ	675	;# 
   380   0002A4                     U1TXCHK         equ	676	;# 
   381   0002A5                     U1P1            equ	677	;# 
   382   0002A5                     U1P1L           equ	677	;# 
   383   0002A6                     U1P1H           equ	678	;# 
   384   0002A7                     U1P2            equ	679	;# 
   385   0002A7                     U1P2L           equ	679	;# 
   386   0002A8                     U1P2H           equ	680	;# 
   387   0002A9                     U1P3            equ	681	;# 
   388   0002A9                     U1P3L           equ	681	;# 
   389   0002AA                     U1P3H           equ	682	;# 
   390   0002AB                     U1CON0          equ	683	;# 
   391   0002AC                     U1CON1          equ	684	;# 
   392   0002AD                     U1CON2          equ	685	;# 
   393   0002AE                     U1BRG           equ	686	;# 
   394   0002AE                     U1BRGL          equ	686	;# 
   395   0002AF                     U1BRGH          equ	687	;# 
   396   0002B0                     U1FIFO          equ	688	;# 
   397   0002B1                     U1UIR           equ	689	;# 
   398   0002B2                     U1ERRIR         equ	690	;# 
   399   0002B3                     U1ERRIE         equ	691	;# 
   400   0002B4                     U2RXB           equ	692	;# 
   401   0002B4                     U2RXBL          equ	692	;# 
   402   0002B6                     U2TXB           equ	694	;# 
   403   0002B6                     U2TXBL          equ	694	;# 
   404   0002B8                     U2P1            equ	696	;# 
   405   0002B8                     U2P1L           equ	696	;# 
   406   0002BA                     U2P2            equ	698	;# 
   407   0002BA                     U2P2L           equ	698	;# 
   408   0002BC                     U2P3            equ	700	;# 
   409   0002BC                     U2P3L           equ	700	;# 
   410   0002BE                     U2CON0          equ	702	;# 
   411   0002BF                     U2CON1          equ	703	;# 
   412   0002C0                     U2CON2          equ	704	;# 
   413   0002C1                     U2BRG           equ	705	;# 
   414   0002C1                     U2BRGL          equ	705	;# 
   415   0002C2                     U2BRGH          equ	706	;# 
   416   0002C3                     U2FIFO          equ	707	;# 
   417   0002C4                     U2UIR           equ	708	;# 
   418   0002C5                     U2ERRIR         equ	709	;# 
   419   0002C6                     U2ERRIE         equ	710	;# 
   420   0002C7                     U3RXB           equ	711	;# 
   421   0002C7                     U3RXBL          equ	711	;# 
   422   0002C9                     U3TXB           equ	713	;# 
   423   0002C9                     U3TXBL          equ	713	;# 
   424   0002CB                     U3P1            equ	715	;# 
   425   0002CB                     U3P1L           equ	715	;# 
   426   0002CD                     U3P2            equ	717	;# 
   427   0002CD                     U3P2L           equ	717	;# 
   428   0002CF                     U3P3            equ	719	;# 
   429   0002CF                     U3P3L           equ	719	;# 
   430   0002D1                     U3CON0          equ	721	;# 
   431   0002D2                     U3CON1          equ	722	;# 
   432   0002D3                     U3CON2          equ	723	;# 
   433   0002D4                     U3BRG           equ	724	;# 
   434   0002D4                     U3BRGL          equ	724	;# 
   435   0002D5                     U3BRGH          equ	725	;# 
   436   0002D6                     U3FIFO          equ	726	;# 
   437   0002D7                     U3UIR           equ	727	;# 
   438   0002D8                     U3ERRIR         equ	728	;# 
   439   0002D9                     U3ERRIE         equ	729	;# 
   440   0002DA                     U4RXB           equ	730	;# 
   441   0002DA                     U4RXBL          equ	730	;# 
   442   0002DC                     U4TXB           equ	732	;# 
   443   0002DC                     U4TXBL          equ	732	;# 
   444   0002DE                     U4P1            equ	734	;# 
   445   0002DE                     U4P1L           equ	734	;# 
   446   0002E0                     U4P2            equ	736	;# 
   447   0002E0                     U4P2L           equ	736	;# 
   448   0002E2                     U4P3            equ	738	;# 
   449   0002E2                     U4P3L           equ	738	;# 
   450   0002E4                     U4CON0          equ	740	;# 
   451   0002E5                     U4CON1          equ	741	;# 
   452   0002E6                     U4CON2          equ	742	;# 
   453   0002E7                     U4BRG           equ	743	;# 
   454   0002E7                     U4BRGL          equ	743	;# 
   455   0002E8                     U4BRGH          equ	744	;# 
   456   0002E9                     U4FIFO          equ	745	;# 
   457   0002EA                     U4UIR           equ	746	;# 
   458   0002EB                     U4ERRIR         equ	747	;# 
   459   0002EC                     U4ERRIE         equ	748	;# 
   460   0002ED                     U5RXB           equ	749	;# 
   461   0002ED                     U5RXBL          equ	749	;# 
   462   0002EF                     U5TXB           equ	751	;# 
   463   0002EF                     U5TXBL          equ	751	;# 
   464   0002F1                     U5P1            equ	753	;# 
   465   0002F1                     U5P1L           equ	753	;# 
   466   0002F3                     U5P2            equ	755	;# 
   467   0002F3                     U5P2L           equ	755	;# 
   468   0002F5                     U5P3            equ	757	;# 
   469   0002F5                     U5P3L           equ	757	;# 
   470   0002F7                     U5CON0          equ	759	;# 
   471   0002F8                     U5CON1          equ	760	;# 
   472   0002F9                     U5CON2          equ	761	;# 
   473   0002FA                     U5BRG           equ	762	;# 
   474   0002FA                     U5BRGL          equ	762	;# 
   475   0002FB                     U5BRGH          equ	763	;# 
   476   0002FC                     U5FIFO          equ	764	;# 
   477   0002FD                     U5UIR           equ	765	;# 
   478   0002FE                     U5ERRIR         equ	766	;# 
   479   0002FF                     U5ERRIE         equ	767	;# 
   480   000300                     SMT1TMR         equ	768	;# 
   481   000300                     SMT1TMRL        equ	768	;# 
   482   000301                     SMT1TMRH        equ	769	;# 
   483   000302                     SMT1TMRU        equ	770	;# 
   484   000303                     SMT1CPR         equ	771	;# 
   485   000303                     SMT1CPRL        equ	771	;# 
   486   000304                     SMT1CPRH        equ	772	;# 
   487   000305                     SMT1CPRU        equ	773	;# 
   488   000306                     SMT1CPW         equ	774	;# 
   489   000306                     SMT1CPWL        equ	774	;# 
   490   000307                     SMT1CPWH        equ	775	;# 
   491   000308                     SMT1CPWU        equ	776	;# 
   492   000309                     SMT1PR          equ	777	;# 
   493   000309                     SMT1PRL         equ	777	;# 
   494   00030A                     SMT1PRH         equ	778	;# 
   495   00030B                     SMT1PRU         equ	779	;# 
   496   00030C                     SMT1CON0        equ	780	;# 
   497   00030D                     SMT1CON1        equ	781	;# 
   498   00030E                     SMT1STAT        equ	782	;# 
   499   00030F                     SMT1CLK         equ	783	;# 
   500   000310                     SMT1SIG         equ	784	;# 
   501   000311                     SMT1WIN         equ	785	;# 
   502   000318                     TMR0L           equ	792	;# 
   503   000318                     TMR0            equ	792	;# 
   504   000319                     TMR0H           equ	793	;# 
   505   000319                     PR0             equ	793	;# 
   506   00031A                     T0CON0          equ	794	;# 
   507   00031B                     T0CON1          equ	795	;# 
   508   00031C                     TMR1            equ	796	;# 
   509   00031C                     TMR1L           equ	796	;# 
   510   00031D                     TMR1H           equ	797	;# 
   511   00031E                     T1CON           equ	798	;# 
   512   00031E                     TMR1CON         equ	798	;# 
   513   00031F                     T1GCON          equ	799	;# 
   514   00031F                     TMR1GCON        equ	799	;# 
   515   000320                     T1GATE          equ	800	;# 
   516   000320                     TMR1GATE        equ	800	;# 
   517   000321                     T1CLK           equ	801	;# 
   518   000321                     TMR1CLK         equ	801	;# 
   519   000321                     PR1             equ	801	;# 
   520   000322                     T2TMR           equ	802	;# 
   521   000322                     TMR2            equ	802	;# 
   522   000323                     T2PR            equ	803	;# 
   523   000323                     PR2             equ	803	;# 
   524   000324                     T2CON           equ	804	;# 
   525   000325                     T2HLT           equ	805	;# 
   526   000326                     T2CLKCON        equ	806	;# 
   527   000326                     T2CLK           equ	806	;# 
   528   000327                     T2RST           equ	807	;# 
   529   000328                     TMR3            equ	808	;# 
   530   000328                     TMR3L           equ	808	;# 
   531   000329                     TMR3H           equ	809	;# 
   532   00032A                     T3CON           equ	810	;# 
   533   00032A                     TMR3CON         equ	810	;# 
   534   00032B                     T3GCON          equ	811	;# 
   535   00032B                     TMR3GCON        equ	811	;# 
   536   00032C                     T3GATE          equ	812	;# 
   537   00032C                     TMR3GATE        equ	812	;# 
   538   00032D                     T3CLK           equ	813	;# 
   539   00032D                     TMR3CLK         equ	813	;# 
   540   00032D                     PR3             equ	813	;# 
   541   00032E                     T4TMR           equ	814	;# 
   542   00032E                     TMR4            equ	814	;# 
   543   00032F                     T4PR            equ	815	;# 
   544   00032F                     PR4             equ	815	;# 
   545   000330                     T4CON           equ	816	;# 
   546   000331                     T4HLT           equ	817	;# 
   547   000332                     T4CLKCON        equ	818	;# 
   548   000332                     T4CLK           equ	818	;# 
   549   000333                     T4RST           equ	819	;# 
   550   000334                     TMR5            equ	820	;# 
   551   000334                     TMR5L           equ	820	;# 
   552   000335                     TMR5H           equ	821	;# 
   553   000336                     T5CON           equ	822	;# 
   554   000336                     TMR5CON         equ	822	;# 
   555   000337                     T5GCON          equ	823	;# 
   556   000337                     TMR5GCON        equ	823	;# 
   557   000338                     T5GATE          equ	824	;# 
   558   000338                     TMR5GATE        equ	824	;# 
   559   000339                     T5CLK           equ	825	;# 
   560   000339                     TMR5CLK         equ	825	;# 
   561   000339                     PR5             equ	825	;# 
   562   00033A                     T6TMR           equ	826	;# 
   563   00033A                     TMR6            equ	826	;# 
   564   00033B                     T6PR            equ	827	;# 
   565   00033B                     PR6             equ	827	;# 
   566   00033C                     T6CON           equ	828	;# 
   567   00033D                     T6HLT           equ	829	;# 
   568   00033E                     T6CLKCON        equ	830	;# 
   569   00033E                     T6CLK           equ	830	;# 
   570   00033F                     T6RST           equ	831	;# 
   571   000340                     CCPR1           equ	832	;# 
   572   000340                     CCPR1L          equ	832	;# 
   573   000341                     CCPR1H          equ	833	;# 
   574   000342                     CCP1CON         equ	834	;# 
   575   000343                     CCP1CAP         equ	835	;# 
   576   000344                     CCPR2           equ	836	;# 
   577   000344                     CCPR2L          equ	836	;# 
   578   000345                     CCPR2H          equ	837	;# 
   579   000346                     CCP2CON         equ	838	;# 
   580   000347                     CCP2CAP         equ	839	;# 
   581   000348                     CCPR3           equ	840	;# 
   582   000348                     CCPR3L          equ	840	;# 
   583   000349                     CCPR3H          equ	841	;# 
   584   00034A                     CCP3CON         equ	842	;# 
   585   00034B                     CCP3CAP         equ	843	;# 
   586   00034C                     CCPTMRS0        equ	844	;# 
   587   00034F                     CRCDATA         equ	847	;# 
   588   00034F                     CRCDATL         equ	847	;# 
   589   000350                     CRCDATH         equ	848	;# 
   590   000351                     CRCACC          equ	849	;# 
   591   000351                     CRCACCL         equ	849	;# 
   592   000352                     CRCACCH         equ	850	;# 
   593   000353                     CRCSHFT         equ	851	;# 
   594   000353                     CRCSHIFTL       equ	851	;# 
   595   000354                     CRCSHIFTH       equ	852	;# 
   596   000355                     CRCXOR          equ	853	;# 
   597   000355                     CRCXORL         equ	853	;# 
   598   000356                     CRCXORH         equ	854	;# 
   599   000357                     CRCCON0         equ	855	;# 
   600   000358                     CRCCON1         equ	856	;# 
   601   00035A                     SCANLADR        equ	858	;# 
   602   00035A                     SCANLADRL       equ	858	;# 
   603   00035B                     SCANLADRH       equ	859	;# 
   604   00035C                     SCANLADRU       equ	860	;# 
   605   00035D                     SCANHADR        equ	861	;# 
   606   00035D                     SCANHADRL       equ	861	;# 
   607   00035E                     SCANHADRH       equ	862	;# 
   608   00035F                     SCANHADRU       equ	863	;# 
   609   000360                     SCANCON0        equ	864	;# 
   610   000361                     SCANTRIG        equ	865	;# 
   611   000362                     IPR0            equ	866	;# 
   612   000363                     IPR1            equ	867	;# 
   613   000364                     IPR2            equ	868	;# 
   614   000365                     IPR3            equ	869	;# 
   615   000366                     IPR4            equ	870	;# 
   616   000367                     IPR5            equ	871	;# 
   617   000368                     IPR6            equ	872	;# 
   618   000369                     IPR7            equ	873	;# 
   619   00036A                     IPR8            equ	874	;# 
   620   00036B                     IPR9            equ	875	;# 
   621   00036C                     IPR10           equ	876	;# 
   622   00036D                     IPR11           equ	877	;# 
   623   00036E                     IPR12           equ	878	;# 
   624   00036F                     IPR13           equ	879	;# 
   625   000370                     IPR14           equ	880	;# 
   626   000371                     IPR15           equ	881	;# 
   627   000373                     STATUS_CSHAD    equ	883	;# 
   628   000374                     WREG_CSHAD      equ	884	;# 
   629   000375                     BSR_CSHAD       equ	885	;# 
   630   000376                     SHADCON         equ	886	;# 
   631   000377                     STATUS_SHAD     equ	887	;# 
   632   000378                     WREG_SHAD       equ	888	;# 
   633   000379                     BSR_SHAD        equ	889	;# 
   634   00037A                     PCLATH_SHAD     equ	890	;# 
   635   00037B                     PCLATU_SHAD     equ	891	;# 
   636   00037C                     FSR0SH          equ	892	;# 
   637   00037C                     FSR0L_SHAD      equ	892	;# 
   638   00037D                     FSR0H_SHAD      equ	893	;# 
   639   00037E                     FSR1SH          equ	894	;# 
   640   00037E                     FSR1L_SHAD      equ	894	;# 
   641   00037F                     FSR1H_SHAD      equ	895	;# 
   642   000380                     FSR2SH          equ	896	;# 
   643   000380                     FSR2L_SHAD      equ	896	;# 
   644   000381                     FSR2H_SHAD      equ	897	;# 
   645   000382                     PRODSH          equ	898	;# 
   646   000382                     PRODL_SHAD      equ	898	;# 
   647   000383                     PRODH_SHAD      equ	899	;# 
   648   0003BC                     CWG1CLK         equ	956	;# 
   649   0003BC                     CWG1CLKCON      equ	956	;# 
   650   0003BD                     CWG1ISM         equ	957	;# 
   651   0003BD                     CWG1DAT         equ	957	;# 
   652   0003BE                     CWG1DBR         equ	958	;# 
   653   0003BF                     CWG1DBF         equ	959	;# 
   654   0003C0                     CWG1CON0        equ	960	;# 
   655   0003C1                     CWG1CON1        equ	961	;# 
   656   0003C2                     CWG1AS0         equ	962	;# 
   657   0003C3                     CWG1AS1         equ	963	;# 
   658   0003C4                     CWG1STR         equ	964	;# 
   659   0003C5                     CWG2CLK         equ	965	;# 
   660   0003C5                     CWG2CLKCON      equ	965	;# 
   661   0003C6                     CWG2ISM         equ	966	;# 
   662   0003C6                     CWG2DAT         equ	966	;# 
   663   0003C7                     CWG2DBR         equ	967	;# 
   664   0003C8                     CWG2DBF         equ	968	;# 
   665   0003C9                     CWG2CON0        equ	969	;# 
   666   0003CA                     CWG2CON1        equ	970	;# 
   667   0003CB                     CWG2AS0         equ	971	;# 
   668   0003CC                     CWG2AS1         equ	972	;# 
   669   0003CD                     CWG2STR         equ	973	;# 
   670   0003CE                     CWG3CLK         equ	974	;# 
   671   0003CE                     CWG3CLKCON      equ	974	;# 
   672   0003CF                     CWG3ISM         equ	975	;# 
   673   0003CF                     CWG3DAT         equ	975	;# 
   674   0003D0                     CWG3DBR         equ	976	;# 
   675   0003D1                     CWG3DBF         equ	977	;# 
   676   0003D2                     CWG3CON0        equ	978	;# 
   677   0003D3                     CWG3CON1        equ	979	;# 
   678   0003D4                     CWG3AS0         equ	980	;# 
   679   0003D5                     CWG3AS1         equ	981	;# 
   680   0003D6                     CWG3STR         equ	982	;# 
   681   0003D7                     FVRCON          equ	983	;# 
   682   0003D8                     ADCPCON         equ	984	;# 
   683   0003D8                     ADCP            equ	984	;# 
   684   0003D9                     ADLTH           equ	985	;# 
   685   0003D9                     ADLTHL          equ	985	;# 
   686   0003DA                     ADLTHH          equ	986	;# 
   687   0003DB                     ADUTH           equ	987	;# 
   688   0003DB                     ADUTHL          equ	987	;# 
   689   0003DC                     ADUTHH          equ	988	;# 
   690   0003DD                     ADERR           equ	989	;# 
   691   0003DD                     ADERRL          equ	989	;# 
   692   0003DE                     ADERRH          equ	990	;# 
   693   0003DF                     ADSTPT          equ	991	;# 
   694   0003DF                     ADSTPTL         equ	991	;# 
   695   0003E0                     ADSTPTH         equ	992	;# 
   696   0003E1                     ADFLTR          equ	993	;# 
   697   0003E1                     ADFLTRL         equ	993	;# 
   698   0003E2                     ADFLTRH         equ	994	;# 
   699   0003E3                     ADACC           equ	995	;# 
   700   0003E3                     ADACCL          equ	995	;# 
   701   0003E4                     ADACCH          equ	996	;# 
   702   0003E5                     ADACCU          equ	997	;# 
   703   0003E6                     ADCNT           equ	998	;# 
   704   0003E7                     ADRPT           equ	999	;# 
   705   0003E8                     ADPREV          equ	1000	;# 
   706   0003E8                     ADPREVL         equ	1000	;# 
   707   0003E9                     ADPREVH         equ	1001	;# 
   708   0003EA                     ADRES           equ	1002	;# 
   709   0003EA                     ADRESL          equ	1002	;# 
   710   0003EB                     ADRESH          equ	1003	;# 
   711   0003EC                     ADPCH           equ	1004	;# 
   712   0003EE                     ADACQ           equ	1006	;# 
   713   0003EE                     ADACQL          equ	1006	;# 
   714   0003EF                     ADACQH          equ	1007	;# 
   715   0003F0                     ADCAP           equ	1008	;# 
   716   0003F1                     ADPRE           equ	1009	;# 
   717   0003F1                     ADPREL          equ	1009	;# 
   718   0003F2                     ADPREH          equ	1010	;# 
   719   0003F3                     ADCON0          equ	1011	;# 
   720   0003F4                     ADCON1          equ	1012	;# 
   721   0003F5                     ADCON2          equ	1013	;# 
   722   0003F6                     ADCON3          equ	1014	;# 
   723   0003F7                     ADSTAT          equ	1015	;# 
   724   0003F8                     ADREF           equ	1016	;# 
   725   0003F9                     ADACT           equ	1017	;# 
   726   0003FA                     ADCLK           equ	1018	;# 
   727   000400                     ANSELA          equ	1024	;# 
   728   000401                     WPUA            equ	1025	;# 
   729   000402                     ODCONA          equ	1026	;# 
   730   000403                     SLRCONA         equ	1027	;# 
   731   000404                     INLVLA          equ	1028	;# 
   732   000405                     IOCAP           equ	1029	;# 
   733   000406                     IOCAN           equ	1030	;# 
   734   000407                     IOCAF           equ	1031	;# 
   735   000408                     ANSELB          equ	1032	;# 
   736   000409                     WPUB            equ	1033	;# 
   737   00040A                     ODCONB          equ	1034	;# 
   738   00040B                     SLRCONB         equ	1035	;# 
   739   00040C                     INLVLB          equ	1036	;# 
   740   00040D                     IOCBP           equ	1037	;# 
   741   00040E                     IOCBN           equ	1038	;# 
   742   00040F                     IOCBF           equ	1039	;# 
   743   000410                     ANSELC          equ	1040	;# 
   744   000411                     WPUC            equ	1041	;# 
   745   000412                     ODCONC          equ	1042	;# 
   746   000413                     SLRCONC         equ	1043	;# 
   747   000414                     INLVLC          equ	1044	;# 
   748   000415                     IOCCP           equ	1045	;# 
   749   000416                     IOCCN           equ	1046	;# 
   750   000417                     IOCCF           equ	1047	;# 
   751   000418                     ANSELD          equ	1048	;# 
   752   000419                     WPUD            equ	1049	;# 
   753   00041A                     ODCOND          equ	1050	;# 
   754   00041B                     SLRCOND         equ	1051	;# 
   755   00041C                     INLVLD          equ	1052	;# 
   756   000420                     ANSELE          equ	1056	;# 
   757   000421                     WPUE            equ	1057	;# 
   758   000422                     ODCONE          equ	1058	;# 
   759   000423                     SLRCONE         equ	1059	;# 
   760   000424                     INLVLE          equ	1060	;# 
   761   000425                     IOCEP           equ	1061	;# 
   762   000426                     IOCEN           equ	1062	;# 
   763   000427                     IOCEF           equ	1063	;# 
   764   000428                     ANSELF          equ	1064	;# 
   765   000429                     WPUF            equ	1065	;# 
   766   00042A                     ODCONF          equ	1066	;# 
   767   00042B                     SLRCONF         equ	1067	;# 
   768   00042C                     INLVLF          equ	1068	;# 
   769   000440                     NCO1ACC         equ	1088	;# 
   770   000440                     NCO1ACCL        equ	1088	;# 
   771   000441                     NCO1ACCH        equ	1089	;# 
   772   000442                     NCO1ACCU        equ	1090	;# 
   773   000443                     NCO1INC         equ	1091	;# 
   774   000443                     NCO1INCL        equ	1091	;# 
   775   000444                     NCO1INCH        equ	1092	;# 
   776   000445                     NCO1INCU        equ	1093	;# 
   777   000446                     NCO1CON         equ	1094	;# 
   778   000447                     NCO1CLK         equ	1095	;# 
   779   000448                     NCO2ACC         equ	1096	;# 
   780   000448                     NCO2ACCL        equ	1096	;# 
   781   000449                     NCO2ACCH        equ	1097	;# 
   782   00044A                     NCO2ACCU        equ	1098	;# 
   783   00044B                     NCO2INC         equ	1099	;# 
   784   00044B                     NCO2INCL        equ	1099	;# 
   785   00044C                     NCO2INCH        equ	1100	;# 
   786   00044D                     NCO2INCU        equ	1101	;# 
   787   00044E                     NCO2CON         equ	1102	;# 
   788   00044F                     NCO2CLK         equ	1103	;# 
   789   000450                     NCO3ACC         equ	1104	;# 
   790   000450                     NCO3ACCL        equ	1104	;# 
   791   000451                     NCO3ACCH        equ	1105	;# 
   792   000452                     NCO3ACCU        equ	1106	;# 
   793   000453                     NCO3INC         equ	1107	;# 
   794   000453                     NCO3INCL        equ	1107	;# 
   795   000454                     NCO3INCH        equ	1108	;# 
   796   000455                     NCO3INCU        equ	1109	;# 
   797   000456                     NCO3CON         equ	1110	;# 
   798   000457                     NCO3CLK         equ	1111	;# 
   799   000459                     IVTLOCK         equ	1113	;# 
   800   00045A                     IVTAD           equ	1114	;# 
   801   00045A                     IVTADL          equ	1114	;# 
   802   00045B                     IVTADH          equ	1115	;# 
   803   00045C                     IVTADU          equ	1116	;# 
   804   00045D                     IVTBASE         equ	1117	;# 
   805   00045D                     IVTBASEL        equ	1117	;# 
   806   00045E                     IVTBASEH        equ	1118	;# 
   807   00045F                     IVTBASEU        equ	1119	;# 
   808   000460                     PWM1ERS         equ	1120	;# 
   809   000461                     PWM1CLK         equ	1121	;# 
   810   000462                     PWM1LDS         equ	1122	;# 
   811   000463                     PWM1PR          equ	1123	;# 
   812   000463                     PWM1PRL         equ	1123	;# 
   813   000464                     PWM1PRH         equ	1124	;# 
   814   000465                     PWM1CPRE        equ	1125	;# 
   815   000466                     PWM1PIPOS       equ	1126	;# 
   816   000467                     PWM1GIR         equ	1127	;# 
   817   000468                     PWM1GIE         equ	1128	;# 
   818   000469                     PWM1CON         equ	1129	;# 
   819   00046A                     PWM1S1CFG       equ	1130	;# 
   820   00046B                     PWM1S1P1        equ	1131	;# 
   821   00046B                     PWM1S1P1L       equ	1131	;# 
   822   00046C                     PWM1S1P1H       equ	1132	;# 
   823   00046D                     PWM1S1P2        equ	1133	;# 
   824   00046D                     PWM1S1P2L       equ	1133	;# 
   825   00046E                     PWM1S1P2H       equ	1134	;# 
   826   00046F                     PWM2ERS         equ	1135	;# 
   827   000470                     PWM2CLK         equ	1136	;# 
   828   000471                     PWM2LDS         equ	1137	;# 
   829   000472                     PWM2PR          equ	1138	;# 
   830   000472                     PWM2PRL         equ	1138	;# 
   831   000473                     PWM2PRH         equ	1139	;# 
   832   000474                     PWM2CPRE        equ	1140	;# 
   833   000475                     PWM2PIPOS       equ	1141	;# 
   834   000476                     PWM2GIR         equ	1142	;# 
   835   000477                     PWM2GIE         equ	1143	;# 
   836   000478                     PWM2CON         equ	1144	;# 
   837   000479                     PWM2S1CFG       equ	1145	;# 
   838   00047A                     PWM2S1P1        equ	1146	;# 
   839   00047A                     PWM2S1P1L       equ	1146	;# 
   840   00047B                     PWM2S1P1H       equ	1147	;# 
   841   00047C                     PWM2S1P2        equ	1148	;# 
   842   00047C                     PWM2S1P2L       equ	1148	;# 
   843   00047D                     PWM2S1P2H       equ	1149	;# 
   844   00047E                     PWM3ERS         equ	1150	;# 
   845   00047F                     PWM3CLK         equ	1151	;# 
   846   000480                     PWM3LDS         equ	1152	;# 
   847   000481                     PWM3PR          equ	1153	;# 
   848   000481                     PWM3PRL         equ	1153	;# 
   849   000482                     PWM3PRH         equ	1154	;# 
   850   000483                     PWM3CPRE        equ	1155	;# 
   851   000484                     PWM3PIPOS       equ	1156	;# 
   852   000485                     PWM3GIR         equ	1157	;# 
   853   000486                     PWM3GIE         equ	1158	;# 
   854   000487                     PWM3CON         equ	1159	;# 
   855   000488                     PWM3S1CFG       equ	1160	;# 
   856   000489                     PWM3S1P1        equ	1161	;# 
   857   000489                     PWM3S1P1L       equ	1161	;# 
   858   00048A                     PWM3S1P1H       equ	1162	;# 
   859   00048B                     PWM3S1P2        equ	1163	;# 
   860   00048B                     PWM3S1P2L       equ	1163	;# 
   861   00048C                     PWM3S1P2H       equ	1164	;# 
   862   00049C                     PWMLOAD         equ	1180	;# 
   863   00049D                     PWMEN           equ	1181	;# 
   864   00049E                     PIE0            equ	1182	;# 
   865   00049F                     PIE1            equ	1183	;# 
   866   0004A0                     PIE2            equ	1184	;# 
   867   0004A1                     PIE3            equ	1185	;# 
   868   0004A2                     PIE4            equ	1186	;# 
   869   0004A3                     PIE5            equ	1187	;# 
   870   0004A4                     PIE6            equ	1188	;# 
   871   0004A5                     PIE7            equ	1189	;# 
   872   0004A6                     PIE8            equ	1190	;# 
   873   0004A7                     PIE9            equ	1191	;# 
   874   0004A8                     PIE10           equ	1192	;# 
   875   0004A9                     PIE11           equ	1193	;# 
   876   0004AA                     PIE12           equ	1194	;# 
   877   0004AB                     PIE13           equ	1195	;# 
   878   0004AC                     PIE14           equ	1196	;# 
   879   0004AD                     PIE15           equ	1197	;# 
   880   0004AE                     PIR0            equ	1198	;# 
   881   0004AF                     PIR1            equ	1199	;# 
   882   0004B0                     PIR2            equ	1200	;# 
   883   0004B1                     PIR3            equ	1201	;# 
   884   0004B2                     PIR4            equ	1202	;# 
   885   0004B3                     PIR5            equ	1203	;# 
   886   0004B4                     PIR6            equ	1204	;# 
   887   0004B5                     PIR7            equ	1205	;# 
   888   0004B6                     PIR8            equ	1206	;# 
   889   0004B7                     PIR9            equ	1207	;# 
   890   0004B8                     PIR10           equ	1208	;# 
   891   0004B9                     PIR11           equ	1209	;# 
   892   0004BA                     PIR12           equ	1210	;# 
   893   0004BB                     PIR13           equ	1211	;# 
   894   0004BC                     PIR14           equ	1212	;# 
   895   0004BD                     PIR15           equ	1213	;# 
   896   0004BE                     LATA            equ	1214	;# 
   897   0004BF                     LATB            equ	1215	;# 
   898   0004C0                     LATC            equ	1216	;# 
   899   0004C1                     LATD            equ	1217	;# 
   900   0004C2                     LATE            equ	1218	;# 
   901   0004C3                     LATF            equ	1219	;# 
   902   0004C6                     TRISA           equ	1222	;# 
   903   0004C7                     TRISB           equ	1223	;# 
   904   0004C8                     TRISC           equ	1224	;# 
   905   0004C9                     TRISD           equ	1225	;# 
   906   0004CA                     TRISE           equ	1226	;# 
   907   0004CB                     TRISF           equ	1227	;# 
   908   0004CE                     PORTA           equ	1230	;# 
   909   0004CF                     PORTB           equ	1231	;# 
   910   0004D0                     PORTC           equ	1232	;# 
   911   0004D1                     PORTD           equ	1233	;# 
   912   0004D2                     PORTE           equ	1234	;# 
   913   0004D3                     PORTF           equ	1235	;# 
   914   0004D6                     INTCON0         equ	1238	;# 
   915   0004D7                     INTCON1         equ	1239	;# 
   916   0004D8                     STATUS          equ	1240	;# 
   917   0004D9                     FSR2            equ	1241	;# 
   918   0004D9                     FSR2L           equ	1241	;# 
   919   0004DA                     FSR2H           equ	1242	;# 
   920   0004DB                     PLUSW2          equ	1243	;# 
   921   0004DC                     PREINC2         equ	1244	;# 
   922   0004DD                     POSTDEC2        equ	1245	;# 
   923   0004DE                     POSTINC2        equ	1246	;# 
   924   0004DF                     INDF2           equ	1247	;# 
   925   0004E0                     BSR             equ	1248	;# 
   926   0004E1                     FSR1            equ	1249	;# 
   927   0004E1                     FSR1L           equ	1249	;# 
   928   0004E2                     FSR1H           equ	1250	;# 
   929   0004E3                     PLUSW1          equ	1251	;# 
   930   0004E4                     PREINC1         equ	1252	;# 
   931   0004E5                     POSTDEC1        equ	1253	;# 
   932   0004E6                     POSTINC1        equ	1254	;# 
   933   0004E7                     INDF1           equ	1255	;# 
   934   0004E8                     WREG            equ	1256	;# 
   935   0004E9                     FSR0            equ	1257	;# 
   936   0004E9                     FSR0L           equ	1257	;# 
   937   0004EA                     FSR0H           equ	1258	;# 
   938   0004EB                     PLUSW0          equ	1259	;# 
   939   0004EC                     PREINC0         equ	1260	;# 
   940   0004ED                     POSTDEC0        equ	1261	;# 
   941   0004EE                     POSTINC0        equ	1262	;# 
   942   0004EF                     INDF0           equ	1263	;# 
   943   0004F0                     PCON0           equ	1264	;# 
   944   0004F1                     PCON1           equ	1265	;# 
   945   0004F2                     CPUDOZE         equ	1266	;# 
   946   0004F3                     PROD            equ	1267	;# 
   947   0004F3                     PRODL           equ	1267	;# 
   948   0004F4                     PRODH           equ	1268	;# 
   949   0004F5                     TABLAT          equ	1269	;# 
   950   0004F6                     TBLPTR          equ	1270	;# 
   951   0004F6                     TBLPTRL         equ	1270	;# 
   952   0004F7                     TBLPTRH         equ	1271	;# 
   953   0004F8                     TBLPTRU         equ	1272	;# 
   954   0004F9                     PCLAT           equ	1273	;# 
   955   0004F9                     PCL             equ	1273	;# 
   956   0004FA                     PCLATH          equ	1274	;# 
   957   0004FB                     PCLATU          equ	1275	;# 
   958   0004FC                     STKPTR          equ	1276	;# 
   959   0004FD                     TOS             equ	1277	;# 
   960   0004FD                     TOSL            equ	1277	;# 
   961   0004FE                     TOSH            equ	1278	;# 
   962   0004FF                     TOSU            equ	1279	;# 
   963   000039                     CLKRCON         equ	57	;# 
   964   00003A                     CLKRCLK         equ	58	;# 
   965   000040                     NVMCON0         equ	64	;# 
   966   000041                     NVMCON1         equ	65	;# 
   967   000042                     NVMLOCK         equ	66	;# 
   968   000043                     NVMADR          equ	67	;# 
   969   000043                     NVMADRL         equ	67	;# 
   970   000044                     NVMADRH         equ	68	;# 
   971   000045                     NVMADRU         equ	69	;# 
   972   000046                     NVMDAT          equ	70	;# 
   973   000046                     NVMDATL         equ	70	;# 
   974   000047                     NVMDATH         equ	71	;# 
   975   000048                     VREGCON         equ	72	;# 
   976   000049                     BORCON          equ	73	;# 
   977   00004A                     HLVDCON0        equ	74	;# 
   978   00004B                     HLVDCON1        equ	75	;# 
   979   00004C                     ZCDCON          equ	76	;# 
   980   000060                     PMD0            equ	96	;# 
   981   000061                     PMD1            equ	97	;# 
   982   000063                     PMD3            equ	99	;# 
   983   000064                     PMD4            equ	100	;# 
   984   000065                     PMD5            equ	101	;# 
   985   000066                     PMD6            equ	102	;# 
   986   000067                     PMD7            equ	103	;# 
   987   000068                     PMD8            equ	104	;# 
   988   00006A                     MD1CON0         equ	106	;# 
   989   00006B                     MD1CON1         equ	107	;# 
   990   00006C                     MD1SRC          equ	108	;# 
   991   00006D                     MD1CARL         equ	109	;# 
   992   00006E                     MD1CARH         equ	110	;# 
   993   00006F                     CMOUT           equ	111	;# 
   994   000070                     CM1CON0         equ	112	;# 
   995   000071                     CM1CON1         equ	113	;# 
   996   000072                     CM1NCH          equ	114	;# 
   997   000073                     CM1PCH          equ	115	;# 
   998   000074                     CM2CON0         equ	116	;# 
   999   000075                     CM2CON1         equ	117	;# 
  1000   000076                     CM2NCH          equ	118	;# 
  1001   000077                     CM2PCH          equ	119	;# 
  1002   000078                     WDTCON0         equ	120	;# 
  1003   000079                     WDTCON1         equ	121	;# 
  1004   00007A                     WDTPS           equ	122	;# 
  1005   00007A                     WDTPSL          equ	122	;# 
  1006   00007B                     WDTPSH          equ	123	;# 
  1007   00007C                     WDTTMR          equ	124	;# 
  1008   00007D                     DAC1DAT         equ	125	;# 
  1009   00007D                     DAC1DATL        equ	125	;# 
  1010   00007F                     DAC1CON         equ	127	;# 
  1011   000080                     SPI1RXB         equ	128	;# 
  1012   000081                     SPI1TXB         equ	129	;# 
  1013   000082                     SPI1TCNT        equ	130	;# 
  1014   000082                     SPI1TCNTL       equ	130	;# 
  1015   000083                     SPI1TCNTH       equ	131	;# 
  1016   000084                     SPI1CON0        equ	132	;# 
  1017   000085                     SPI1CON1        equ	133	;# 
  1018   000086                     SPI1CON2        equ	134	;# 
  1019   000087                     SPI1STATUS      equ	135	;# 
  1020   000088                     SPI1TWIDTH      equ	136	;# 
  1021   000089                     SPI1BAUD        equ	137	;# 
  1022   00008A                     SPI1INTF        equ	138	;# 
  1023   00008B                     SPI1INTE        equ	139	;# 
  1024   00008C                     SPI1CLK         equ	140	;# 
  1025   00008D                     SPI2RXB         equ	141	;# 
  1026   00008E                     SPI2TXB         equ	142	;# 
  1027   00008F                     SPI2TCNT        equ	143	;# 
  1028   00008F                     SPI2TCNTL       equ	143	;# 
  1029   000090                     SPI2TCNTH       equ	144	;# 
  1030   000091                     SPI2CON0        equ	145	;# 
  1031   000092                     SPI2CON1        equ	146	;# 
  1032   000093                     SPI2CON2        equ	147	;# 
  1033   000094                     SPI2STATUS      equ	148	;# 
  1034   000095                     SPI2TWIDTH      equ	149	;# 
  1035   000096                     SPI2BAUD        equ	150	;# 
  1036   000097                     SPI2INTF        equ	151	;# 
  1037   000098                     SPI2INTE        equ	152	;# 
  1038   000099                     SPI2CLK         equ	153	;# 
  1039   0000AC                     ACTCON          equ	172	;# 
  1040   0000AD                     OSCCON1         equ	173	;# 
  1041   0000AE                     OSCCON2         equ	174	;# 
  1042   0000AF                     OSCCON3         equ	175	;# 
  1043   0000B0                     OSCTUNE         equ	176	;# 
  1044   0000B1                     OSCFRQ          equ	177	;# 
  1045   0000B1                     OSCFREQ         equ	177	;# 
  1046   0000B2                     OSCSTAT         equ	178	;# 
  1047   0000B2                     OSCSTAT1        equ	178	;# 
  1048   0000B3                     OSCEN           equ	179	;# 
  1049   0000B4                     PRLOCK          equ	180	;# 
  1050   0000B5                     SCANPR          equ	181	;# 
  1051   0000B6                     DMA1PR          equ	182	;# 
  1052   0000B7                     DMA2PR          equ	183	;# 
  1053   0000B8                     DMA3PR          equ	184	;# 
  1054   0000B9                     DMA4PR          equ	185	;# 
  1055   0000BA                     DMA5PR          equ	186	;# 
  1056   0000BB                     DMA6PR          equ	187	;# 
  1057   0000BE                     MAINPR          equ	190	;# 
  1058   0000BF                     ISRPR           equ	191	;# 
  1059   0000D4                     CLCDATA         equ	212	;# 
  1060   0000D5                     CLCSELECT       equ	213	;# 
  1061   0000D6                     CLCnCON         equ	214	;# 
  1062   0000D7                     CLCnPOL         equ	215	;# 
  1063   0000D8                     CLCnSEL0        equ	216	;# 
  1064   0000D9                     CLCnSEL1        equ	217	;# 
  1065   0000DA                     CLCnSEL2        equ	218	;# 
  1066   0000DB                     CLCnSEL3        equ	219	;# 
  1067   0000DC                     CLCnGLS0        equ	220	;# 
  1068   0000DD                     CLCnGLS1        equ	221	;# 
  1069   0000DE                     CLCnGLS2        equ	222	;# 
  1070   0000DF                     CLCnGLS3        equ	223	;# 
  1071   0000E8                     DMASELECT       equ	232	;# 
  1072   0000E9                     DMAnBUF         equ	233	;# 
  1073   0000EA                     DMAnDCNT        equ	234	;# 
  1074   0000EA                     DMAnDCNTL       equ	234	;# 
  1075   0000EB                     DMAnDCNTH       equ	235	;# 
  1076   0000EC                     DMAnDPTR        equ	236	;# 
  1077   0000EC                     DMAnDPTRL       equ	236	;# 
  1078   0000ED                     DMAnDPTRH       equ	237	;# 
  1079   0000EE                     DMAnDSZ         equ	238	;# 
  1080   0000EE                     DMAnDSZL        equ	238	;# 
  1081   0000EF                     DMAnDSZH        equ	239	;# 
  1082   0000F0                     DMAnDSA         equ	240	;# 
  1083   0000F0                     DMAnDSAL        equ	240	;# 
  1084   0000F1                     DMAnDSAH        equ	241	;# 
  1085   0000F2                     DMAnSCNT        equ	242	;# 
  1086   0000F2                     DMAnSCNTL       equ	242	;# 
  1087   0000F3                     DMAnSCNTH       equ	243	;# 
  1088   0000F4                     DMAnSPTR        equ	244	;# 
  1089   0000F4                     DMAnSPTRL       equ	244	;# 
  1090   0000F5                     DMAnSPTRH       equ	245	;# 
  1091   0000F6                     DMAnSPTRU       equ	246	;# 
  1092   0000F7                     DMAnSSZ         equ	247	;# 
  1093   0000F7                     DMAnSSZL        equ	247	;# 
  1094   0000F8                     DMAnSSZH        equ	248	;# 
  1095   0000F9                     DMAnSSA         equ	249	;# 
  1096   0000F9                     DMAnSSAL        equ	249	;# 
  1097   0000FA                     DMAnSSAH        equ	250	;# 
  1098   0000FB                     DMAnSSAU        equ	251	;# 
  1099   0000FC                     DMAnCON0        equ	252	;# 
  1100   0000FD                     DMAnCON1        equ	253	;# 
  1101   0000FE                     DMAnAIRQ        equ	254	;# 
  1102   0000FF                     DMAnSIRQ        equ	255	;# 
  1103   000200                     PPSLOCK         equ	512	;# 
  1104   000201                     RA0PPS          equ	513	;# 
  1105   000202                     RA1PPS          equ	514	;# 
  1106   000203                     RA2PPS          equ	515	;# 
  1107   000204                     RA3PPS          equ	516	;# 
  1108   000205                     RA4PPS          equ	517	;# 
  1109   000206                     RA5PPS          equ	518	;# 
  1110   000207                     RA6PPS          equ	519	;# 
  1111   000208                     RA7PPS          equ	520	;# 
  1112   000209                     RB0PPS          equ	521	;# 
  1113   00020A                     RB1PPS          equ	522	;# 
  1114   00020B                     RB2PPS          equ	523	;# 
  1115   00020C                     RB3PPS          equ	524	;# 
  1116   00020D                     RB4PPS          equ	525	;# 
  1117   00020E                     RB5PPS          equ	526	;# 
  1118   00020F                     RB6PPS          equ	527	;# 
  1119   000210                     RB7PPS          equ	528	;# 
  1120   000211                     RC0PPS          equ	529	;# 
  1121   000212                     RC1PPS          equ	530	;# 
  1122   000213                     RC2PPS          equ	531	;# 
  1123   000214                     RC3PPS          equ	532	;# 
  1124   000215                     RC4PPS          equ	533	;# 
  1125   000216                     RC5PPS          equ	534	;# 
  1126   000217                     RC6PPS          equ	535	;# 
  1127   000218                     RC7PPS          equ	536	;# 
  1128   000219                     RD0PPS          equ	537	;# 
  1129   00021A                     RD1PPS          equ	538	;# 
  1130   00021B                     RD2PPS          equ	539	;# 
  1131   00021C                     RD3PPS          equ	540	;# 
  1132   00021D                     RD4PPS          equ	541	;# 
  1133   00021E                     RD5PPS          equ	542	;# 
  1134   00021F                     RD6PPS          equ	543	;# 
  1135   000220                     RD7PPS          equ	544	;# 
  1136   000221                     RE0PPS          equ	545	;# 
  1137   000222                     RE1PPS          equ	546	;# 
  1138   000223                     RE2PPS          equ	547	;# 
  1139   000229                     RF0PPS          equ	553	;# 
  1140   00022A                     RF1PPS          equ	554	;# 
  1141   00022B                     RF2PPS          equ	555	;# 
  1142   00022C                     RF3PPS          equ	556	;# 
  1143   00022D                     RF4PPS          equ	557	;# 
  1144   00022E                     RF5PPS          equ	558	;# 
  1145   00022F                     RF6PPS          equ	559	;# 
  1146   000230                     RF7PPS          equ	560	;# 
  1147   00023E                     INT0PPS         equ	574	;# 
  1148   00023F                     INT1PPS         equ	575	;# 
  1149   000240                     INT2PPS         equ	576	;# 
  1150   000241                     T0CKIPPS        equ	577	;# 
  1151   000242                     T1CKIPPS        equ	578	;# 
  1152   000243                     T1GPPS          equ	579	;# 
  1153   000244                     T3CKIPPS        equ	580	;# 
  1154   000245                     T3GPPS          equ	581	;# 
  1155   000246                     T5CKIPPS        equ	582	;# 
  1156   000247                     T5GPPS          equ	583	;# 
  1157   000248                     T2INPPS         equ	584	;# 
  1158   000249                     T4INPPS         equ	585	;# 
  1159   00024A                     T6INPPS         equ	586	;# 
  1160   00024F                     CCP1PPS         equ	591	;# 
  1161   000250                     CCP2PPS         equ	592	;# 
  1162   000251                     CCP3PPS         equ	593	;# 
  1163   000253                     PWM1ERSPPS      equ	595	;# 
  1164   000254                     PWM2ERSPPS      equ	596	;# 
  1165   000255                     PWM3ERSPPS      equ	597	;# 
  1166   000257                     PWMIN0PPS       equ	599	;# 
  1167   000258                     PWMIN1PPS       equ	600	;# 
  1168   000259                     SMT1WINPPS      equ	601	;# 
  1169   00025A                     SMT1SIGPPS      equ	602	;# 
  1170   00025B                     CWG1PPS         equ	603	;# 
  1171   00025B                     CWG1INPPS       equ	603	;# 
  1172   00025C                     CWG2PPS         equ	604	;# 
  1173   00025C                     CWG2INPPS       equ	604	;# 
  1174   00025D                     CWG3PPS         equ	605	;# 
  1175   00025D                     CWG3INPPS       equ	605	;# 
  1176   00025E                     MD1CARLPPS      equ	606	;# 
  1177   00025E                     MDCARLPPS       equ	606	;# 
  1178   00025F                     MD1CARHPPS      equ	607	;# 
  1179   00025F                     MDCARHPPS       equ	607	;# 
  1180   000260                     MD1SRCPPS       equ	608	;# 
  1181   000260                     MDSRCPPS        equ	608	;# 
  1182   000261                     CLCIN0PPS       equ	609	;# 
  1183   000262                     CLCIN1PPS       equ	610	;# 
  1184   000263                     CLCIN2PPS       equ	611	;# 
  1185   000264                     CLCIN3PPS       equ	612	;# 
  1186   000265                     CLCIN4PPS       equ	613	;# 
  1187   000266                     CLCIN5PPS       equ	614	;# 
  1188   000267                     CLCIN6PPS       equ	615	;# 
  1189   000268                     CLCIN7PPS       equ	616	;# 
  1190   000269                     ADACTPPS        equ	617	;# 
  1191   00026A                     SPI1SCKPPS      equ	618	;# 
  1192   00026B                     SPI1SDIPPS      equ	619	;# 
  1193   00026C                     SPI1SSPPS       equ	620	;# 
  1194   00026D                     SPI2SCKPPS      equ	621	;# 
  1195   00026E                     SPI2SDIPPS      equ	622	;# 
  1196   00026F                     SPI2SSPPS       equ	623	;# 
  1197   000270                     I2C1SDAPPS      equ	624	;# 
  1198   000271                     I2C1SCLPPS      equ	625	;# 
  1199   000272                     U1RXPPS         equ	626	;# 
  1200   000273                     U1CTSPPS        equ	627	;# 
  1201   000274                     U2RXPPS         equ	628	;# 
  1202   000275                     U2CTSPPS        equ	629	;# 
  1203   000276                     U3RXPPS         equ	630	;# 
  1204   000277                     U3CTSPPS        equ	631	;# 
  1205   000278                     U4RXPPS         equ	632	;# 
  1206   000279                     U4CTSPPS        equ	633	;# 
  1207   00027A                     U5RXPPS         equ	634	;# 
  1208   00027B                     U5CTSPPS        equ	635	;# 
  1209   000286                     RC4I2C          equ	646	;# 
  1210   000287                     RC3I2C          equ	647	;# 
  1211   000288                     RB2I2C          equ	648	;# 
  1212   000289                     RB1I2C          equ	649	;# 
  1213   00028B                     I2C1RXB         equ	651	;# 
  1214   00028C                     I2C1TXB         equ	652	;# 
  1215   00028D                     I2C1CNT         equ	653	;# 
  1216   00028E                     I2C1ADB0        equ	654	;# 
  1217   00028F                     I2C1ADB1        equ	655	;# 
  1218   000290                     I2C1ADR0        equ	656	;# 
  1219   000291                     I2C1ADR1        equ	657	;# 
  1220   000292                     I2C1ADR2        equ	658	;# 
  1221   000293                     I2C1ADR3        equ	659	;# 
  1222   000294                     I2C1CON0        equ	660	;# 
  1223   000295                     I2C1CON1        equ	661	;# 
  1224   000296                     I2C1CON2        equ	662	;# 
  1225   000297                     I2C1ERR         equ	663	;# 
  1226   000298                     I2C1STAT0       equ	664	;# 
  1227   000299                     I2C1STAT1       equ	665	;# 
  1228   00029A                     I2C1PIR         equ	666	;# 
  1229   00029B                     I2C1PIE         equ	667	;# 
  1230   00029C                     I2C1CLK         equ	668	;# 
  1231   00029D                     I2C1BTO         equ	669	;# 
  1232   0002A1                     U1RXB           equ	673	;# 
  1233   0002A1                     U1RXBL          equ	673	;# 
  1234   0002A2                     U1RXCHK         equ	674	;# 
  1235   0002A3                     U1TXB           equ	675	;# 
  1236   0002A3                     U1TXBL          equ	675	;# 
  1237   0002A4                     U1TXCHK         equ	676	;# 
  1238   0002A5                     U1P1            equ	677	;# 
  1239   0002A5                     U1P1L           equ	677	;# 
  1240   0002A6                     U1P1H           equ	678	;# 
  1241   0002A7                     U1P2            equ	679	;# 
  1242   0002A7                     U1P2L           equ	679	;# 
  1243   0002A8                     U1P2H           equ	680	;# 
  1244   0002A9                     U1P3            equ	681	;# 
  1245   0002A9                     U1P3L           equ	681	;# 
  1246   0002AA                     U1P3H           equ	682	;# 
  1247   0002AB                     U1CON0          equ	683	;# 
  1248   0002AC                     U1CON1          equ	684	;# 
  1249   0002AD                     U1CON2          equ	685	;# 
  1250   0002AE                     U1BRG           equ	686	;# 
  1251   0002AE                     U1BRGL          equ	686	;# 
  1252   0002AF                     U1BRGH          equ	687	;# 
  1253   0002B0                     U1FIFO          equ	688	;# 
  1254   0002B1                     U1UIR           equ	689	;# 
  1255   0002B2                     U1ERRIR         equ	690	;# 
  1256   0002B3                     U1ERRIE         equ	691	;# 
  1257   0002B4                     U2RXB           equ	692	;# 
  1258   0002B4                     U2RXBL          equ	692	;# 
  1259   0002B6                     U2TXB           equ	694	;# 
  1260   0002B6                     U2TXBL          equ	694	;# 
  1261   0002B8                     U2P1            equ	696	;# 
  1262   0002B8                     U2P1L           equ	696	;# 
  1263   0002BA                     U2P2            equ	698	;# 
  1264   0002BA                     U2P2L           equ	698	;# 
  1265   0002BC                     U2P3            equ	700	;# 
  1266   0002BC                     U2P3L           equ	700	;# 
  1267   0002BE                     U2CON0          equ	702	;# 
  1268   0002BF                     U2CON1          equ	703	;# 
  1269   0002C0                     U2CON2          equ	704	;# 
  1270   0002C1                     U2BRG           equ	705	;# 
  1271   0002C1                     U2BRGL          equ	705	;# 
  1272   0002C2                     U2BRGH          equ	706	;# 
  1273   0002C3                     U2FIFO          equ	707	;# 
  1274   0002C4                     U2UIR           equ	708	;# 
  1275   0002C5                     U2ERRIR         equ	709	;# 
  1276   0002C6                     U2ERRIE         equ	710	;# 
  1277   0002C7                     U3RXB           equ	711	;# 
  1278   0002C7                     U3RXBL          equ	711	;# 
  1279   0002C9                     U3TXB           equ	713	;# 
  1280   0002C9                     U3TXBL          equ	713	;# 
  1281   0002CB                     U3P1            equ	715	;# 
  1282   0002CB                     U3P1L           equ	715	;# 
  1283   0002CD                     U3P2            equ	717	;# 
  1284   0002CD                     U3P2L           equ	717	;# 
  1285   0002CF                     U3P3            equ	719	;# 
  1286   0002CF                     U3P3L           equ	719	;# 
  1287   0002D1                     U3CON0          equ	721	;# 
  1288   0002D2                     U3CON1          equ	722	;# 
  1289   0002D3                     U3CON2          equ	723	;# 
  1290   0002D4                     U3BRG           equ	724	;# 
  1291   0002D4                     U3BRGL          equ	724	;# 
  1292   0002D5                     U3BRGH          equ	725	;# 
  1293   0002D6                     U3FIFO          equ	726	;# 
  1294   0002D7                     U3UIR           equ	727	;# 
  1295   0002D8                     U3ERRIR         equ	728	;# 
  1296   0002D9                     U3ERRIE         equ	729	;# 
  1297   0002DA                     U4RXB           equ	730	;# 
  1298   0002DA                     U4RXBL          equ	730	;# 
  1299   0002DC                     U4TXB           equ	732	;# 
  1300   0002DC                     U4TXBL          equ	732	;# 
  1301   0002DE                     U4P1            equ	734	;# 
  1302   0002DE                     U4P1L           equ	734	;# 
  1303   0002E0                     U4P2            equ	736	;# 
  1304   0002E0                     U4P2L           equ	736	;# 
  1305   0002E2                     U4P3            equ	738	;# 
  1306   0002E2                     U4P3L           equ	738	;# 
  1307   0002E4                     U4CON0          equ	740	;# 
  1308   0002E5                     U4CON1          equ	741	;# 
  1309   0002E6                     U4CON2          equ	742	;# 
  1310   0002E7                     U4BRG           equ	743	;# 
  1311   0002E7                     U4BRGL          equ	743	;# 
  1312   0002E8                     U4BRGH          equ	744	;# 
  1313   0002E9                     U4FIFO          equ	745	;# 
  1314   0002EA                     U4UIR           equ	746	;# 
  1315   0002EB                     U4ERRIR         equ	747	;# 
  1316   0002EC                     U4ERRIE         equ	748	;# 
  1317   0002ED                     U5RXB           equ	749	;# 
  1318   0002ED                     U5RXBL          equ	749	;# 
  1319   0002EF                     U5TXB           equ	751	;# 
  1320   0002EF                     U5TXBL          equ	751	;# 
  1321   0002F1                     U5P1            equ	753	;# 
  1322   0002F1                     U5P1L           equ	753	;# 
  1323   0002F3                     U5P2            equ	755	;# 
  1324   0002F3                     U5P2L           equ	755	;# 
  1325   0002F5                     U5P3            equ	757	;# 
  1326   0002F5                     U5P3L           equ	757	;# 
  1327   0002F7                     U5CON0          equ	759	;# 
  1328   0002F8                     U5CON1          equ	760	;# 
  1329   0002F9                     U5CON2          equ	761	;# 
  1330   0002FA                     U5BRG           equ	762	;# 
  1331   0002FA                     U5BRGL          equ	762	;# 
  1332   0002FB                     U5BRGH          equ	763	;# 
  1333   0002FC                     U5FIFO          equ	764	;# 
  1334   0002FD                     U5UIR           equ	765	;# 
  1335   0002FE                     U5ERRIR         equ	766	;# 
  1336   0002FF                     U5ERRIE         equ	767	;# 
  1337   000300                     SMT1TMR         equ	768	;# 
  1338   000300                     SMT1TMRL        equ	768	;# 
  1339   000301                     SMT1TMRH        equ	769	;# 
  1340   000302                     SMT1TMRU        equ	770	;# 
  1341   000303                     SMT1CPR         equ	771	;# 
  1342   000303                     SMT1CPRL        equ	771	;# 
  1343   000304                     SMT1CPRH        equ	772	;# 
  1344   000305                     SMT1CPRU        equ	773	;# 
  1345   000306                     SMT1CPW         equ	774	;# 
  1346   000306                     SMT1CPWL        equ	774	;# 
  1347   000307                     SMT1CPWH        equ	775	;# 
  1348   000308                     SMT1CPWU        equ	776	;# 
  1349   000309                     SMT1PR          equ	777	;# 
  1350   000309                     SMT1PRL         equ	777	;# 
  1351   00030A                     SMT1PRH         equ	778	;# 
  1352   00030B                     SMT1PRU         equ	779	;# 
  1353   00030C                     SMT1CON0        equ	780	;# 
  1354   00030D                     SMT1CON1        equ	781	;# 
  1355   00030E                     SMT1STAT        equ	782	;# 
  1356   00030F                     SMT1CLK         equ	783	;# 
  1357   000310                     SMT1SIG         equ	784	;# 
  1358   000311                     SMT1WIN         equ	785	;# 
  1359   000318                     TMR0L           equ	792	;# 
  1360   000318                     TMR0            equ	792	;# 
  1361   000319                     TMR0H           equ	793	;# 
  1362   000319                     PR0             equ	793	;# 
  1363   00031A                     T0CON0          equ	794	;# 
  1364   00031B                     T0CON1          equ	795	;# 
  1365   00031C                     TMR1            equ	796	;# 
  1366   00031C                     TMR1L           equ	796	;# 
  1367   00031D                     TMR1H           equ	797	;# 
  1368   00031E                     T1CON           equ	798	;# 
  1369   00031E                     TMR1CON         equ	798	;# 
  1370   00031F                     T1GCON          equ	799	;# 
  1371   00031F                     TMR1GCON        equ	799	;# 
  1372   000320                     T1GATE          equ	800	;# 
  1373   000320                     TMR1GATE        equ	800	;# 
  1374   000321                     T1CLK           equ	801	;# 
  1375   000321                     TMR1CLK         equ	801	;# 
  1376   000321                     PR1             equ	801	;# 
  1377   000322                     T2TMR           equ	802	;# 
  1378   000322                     TMR2            equ	802	;# 
  1379   000323                     T2PR            equ	803	;# 
  1380   000323                     PR2             equ	803	;# 
  1381   000324                     T2CON           equ	804	;# 
  1382   000325                     T2HLT           equ	805	;# 
  1383   000326                     T2CLKCON        equ	806	;# 
  1384   000326                     T2CLK           equ	806	;# 
  1385   000327                     T2RST           equ	807	;# 
  1386   000328                     TMR3            equ	808	;# 
  1387   000328                     TMR3L           equ	808	;# 
  1388   000329                     TMR3H           equ	809	;# 
  1389   00032A                     T3CON           equ	810	;# 
  1390   00032A                     TMR3CON         equ	810	;# 
  1391   00032B                     T3GCON          equ	811	;# 
  1392   00032B                     TMR3GCON        equ	811	;# 
  1393   00032C                     T3GATE          equ	812	;# 
  1394   00032C                     TMR3GATE        equ	812	;# 
  1395   00032D                     T3CLK           equ	813	;# 
  1396   00032D                     TMR3CLK         equ	813	;# 
  1397   00032D                     PR3             equ	813	;# 
  1398   00032E                     T4TMR           equ	814	;# 
  1399   00032E                     TMR4            equ	814	;# 
  1400   00032F                     T4PR            equ	815	;# 
  1401   00032F                     PR4             equ	815	;# 
  1402   000330                     T4CON           equ	816	;# 
  1403   000331                     T4HLT           equ	817	;# 
  1404   000332                     T4CLKCON        equ	818	;# 
  1405   000332                     T4CLK           equ	818	;# 
  1406   000333                     T4RST           equ	819	;# 
  1407   000334                     TMR5            equ	820	;# 
  1408   000334                     TMR5L           equ	820	;# 
  1409   000335                     TMR5H           equ	821	;# 
  1410   000336                     T5CON           equ	822	;# 
  1411   000336                     TMR5CON         equ	822	;# 
  1412   000337                     T5GCON          equ	823	;# 
  1413   000337                     TMR5GCON        equ	823	;# 
  1414   000338                     T5GATE          equ	824	;# 
  1415   000338                     TMR5GATE        equ	824	;# 
  1416   000339                     T5CLK           equ	825	;# 
  1417   000339                     TMR5CLK         equ	825	;# 
  1418   000339                     PR5             equ	825	;# 
  1419   00033A                     T6TMR           equ	826	;# 
  1420   00033A                     TMR6            equ	826	;# 
  1421   00033B                     T6PR            equ	827	;# 
  1422   00033B                     PR6             equ	827	;# 
  1423   00033C                     T6CON           equ	828	;# 
  1424   00033D                     T6HLT           equ	829	;# 
  1425   00033E                     T6CLKCON        equ	830	;# 
  1426   00033E                     T6CLK           equ	830	;# 
  1427   00033F                     T6RST           equ	831	;# 
  1428   000340                     CCPR1           equ	832	;# 
  1429   000340                     CCPR1L          equ	832	;# 
  1430   000341                     CCPR1H          equ	833	;# 
  1431   000342                     CCP1CON         equ	834	;# 
  1432   000343                     CCP1CAP         equ	835	;# 
  1433   000344                     CCPR2           equ	836	;# 
  1434   000344                     CCPR2L          equ	836	;# 
  1435   000345                     CCPR2H          equ	837	;# 
  1436   000346                     CCP2CON         equ	838	;# 
  1437   000347                     CCP2CAP         equ	839	;# 
  1438   000348                     CCPR3           equ	840	;# 
  1439   000348                     CCPR3L          equ	840	;# 
  1440   000349                     CCPR3H          equ	841	;# 
  1441   00034A                     CCP3CON         equ	842	;# 
  1442   00034B                     CCP3CAP         equ	843	;# 
  1443   00034C                     CCPTMRS0        equ	844	;# 
  1444   00034F                     CRCDATA         equ	847	;# 
  1445   00034F                     CRCDATL         equ	847	;# 
  1446   000350                     CRCDATH         equ	848	;# 
  1447   000351                     CRCACC          equ	849	;# 
  1448   000351                     CRCACCL         equ	849	;# 
  1449   000352                     CRCACCH         equ	850	;# 
  1450   000353                     CRCSHFT         equ	851	;# 
  1451   000353                     CRCSHIFTL       equ	851	;# 
  1452   000354                     CRCSHIFTH       equ	852	;# 
  1453   000355                     CRCXOR          equ	853	;# 
  1454   000355                     CRCXORL         equ	853	;# 
  1455   000356                     CRCXORH         equ	854	;# 
  1456   000357                     CRCCON0         equ	855	;# 
  1457   000358                     CRCCON1         equ	856	;# 
  1458   00035A                     SCANLADR        equ	858	;# 
  1459   00035A                     SCANLADRL       equ	858	;# 
  1460   00035B                     SCANLADRH       equ	859	;# 
  1461   00035C                     SCANLADRU       equ	860	;# 
  1462   00035D                     SCANHADR        equ	861	;# 
  1463   00035D                     SCANHADRL       equ	861	;# 
  1464   00035E                     SCANHADRH       equ	862	;# 
  1465   00035F                     SCANHADRU       equ	863	;# 
  1466   000360                     SCANCON0        equ	864	;# 
  1467   000361                     SCANTRIG        equ	865	;# 
  1468   000362                     IPR0            equ	866	;# 
  1469   000363                     IPR1            equ	867	;# 
  1470   000364                     IPR2            equ	868	;# 
  1471   000365                     IPR3            equ	869	;# 
  1472   000366                     IPR4            equ	870	;# 
  1473   000367                     IPR5            equ	871	;# 
  1474   000368                     IPR6            equ	872	;# 
  1475   000369                     IPR7            equ	873	;# 
  1476   00036A                     IPR8            equ	874	;# 
  1477   00036B                     IPR9            equ	875	;# 
  1478   00036C                     IPR10           equ	876	;# 
  1479   00036D                     IPR11           equ	877	;# 
  1480   00036E                     IPR12           equ	878	;# 
  1481   00036F                     IPR13           equ	879	;# 
  1482   000370                     IPR14           equ	880	;# 
  1483   000371                     IPR15           equ	881	;# 
  1484   000373                     STATUS_CSHAD    equ	883	;# 
  1485   000374                     WREG_CSHAD      equ	884	;# 
  1486   000375                     BSR_CSHAD       equ	885	;# 
  1487   000376                     SHADCON         equ	886	;# 
  1488   000377                     STATUS_SHAD     equ	887	;# 
  1489   000378                     WREG_SHAD       equ	888	;# 
  1490   000379                     BSR_SHAD        equ	889	;# 
  1491   00037A                     PCLATH_SHAD     equ	890	;# 
  1492   00037B                     PCLATU_SHAD     equ	891	;# 
  1493   00037C                     FSR0SH          equ	892	;# 
  1494   00037C                     FSR0L_SHAD      equ	892	;# 
  1495   00037D                     FSR0H_SHAD      equ	893	;# 
  1496   00037E                     FSR1SH          equ	894	;# 
  1497   00037E                     FSR1L_SHAD      equ	894	;# 
  1498   00037F                     FSR1H_SHAD      equ	895	;# 
  1499   000380                     FSR2SH          equ	896	;# 
  1500   000380                     FSR2L_SHAD      equ	896	;# 
  1501   000381                     FSR2H_SHAD      equ	897	;# 
  1502   000382                     PRODSH          equ	898	;# 
  1503   000382                     PRODL_SHAD      equ	898	;# 
  1504   000383                     PRODH_SHAD      equ	899	;# 
  1505   0003BC                     CWG1CLK         equ	956	;# 
  1506   0003BC                     CWG1CLKCON      equ	956	;# 
  1507   0003BD                     CWG1ISM         equ	957	;# 
  1508   0003BD                     CWG1DAT         equ	957	;# 
  1509   0003BE                     CWG1DBR         equ	958	;# 
  1510   0003BF                     CWG1DBF         equ	959	;# 
  1511   0003C0                     CWG1CON0        equ	960	;# 
  1512   0003C1                     CWG1CON1        equ	961	;# 
  1513   0003C2                     CWG1AS0         equ	962	;# 
  1514   0003C3                     CWG1AS1         equ	963	;# 
  1515   0003C4                     CWG1STR         equ	964	;# 
  1516   0003C5                     CWG2CLK         equ	965	;# 
  1517   0003C5                     CWG2CLKCON      equ	965	;# 
  1518   0003C6                     CWG2ISM         equ	966	;# 
  1519   0003C6                     CWG2DAT         equ	966	;# 
  1520   0003C7                     CWG2DBR         equ	967	;# 
  1521   0003C8                     CWG2DBF         equ	968	;# 
  1522   0003C9                     CWG2CON0        equ	969	;# 
  1523   0003CA                     CWG2CON1        equ	970	;# 
  1524   0003CB                     CWG2AS0         equ	971	;# 
  1525   0003CC                     CWG2AS1         equ	972	;# 
  1526   0003CD                     CWG2STR         equ	973	;# 
  1527   0003CE                     CWG3CLK         equ	974	;# 
  1528   0003CE                     CWG3CLKCON      equ	974	;# 
  1529   0003CF                     CWG3ISM         equ	975	;# 
  1530   0003CF                     CWG3DAT         equ	975	;# 
  1531   0003D0                     CWG3DBR         equ	976	;# 
  1532   0003D1                     CWG3DBF         equ	977	;# 
  1533   0003D2                     CWG3CON0        equ	978	;# 
  1534   0003D3                     CWG3CON1        equ	979	;# 
  1535   0003D4                     CWG3AS0         equ	980	;# 
  1536   0003D5                     CWG3AS1         equ	981	;# 
  1537   0003D6                     CWG3STR         equ	982	;# 
  1538   0003D7                     FVRCON          equ	983	;# 
  1539   0003D8                     ADCPCON         equ	984	;# 
  1540   0003D8                     ADCP            equ	984	;# 
  1541   0003D9                     ADLTH           equ	985	;# 
  1542   0003D9                     ADLTHL          equ	985	;# 
  1543   0003DA                     ADLTHH          equ	986	;# 
  1544   0003DB                     ADUTH           equ	987	;# 
  1545   0003DB                     ADUTHL          equ	987	;# 
  1546   0003DC                     ADUTHH          equ	988	;# 
  1547   0003DD                     ADERR           equ	989	;# 
  1548   0003DD                     ADERRL          equ	989	;# 
  1549   0003DE                     ADERRH          equ	990	;# 
  1550   0003DF                     ADSTPT          equ	991	;# 
  1551   0003DF                     ADSTPTL         equ	991	;# 
  1552   0003E0                     ADSTPTH         equ	992	;# 
  1553   0003E1                     ADFLTR          equ	993	;# 
  1554   0003E1                     ADFLTRL         equ	993	;# 
  1555   0003E2                     ADFLTRH         equ	994	;# 
  1556   0003E3                     ADACC           equ	995	;# 
  1557   0003E3                     ADACCL          equ	995	;# 
  1558   0003E4                     ADACCH          equ	996	;# 
  1559   0003E5                     ADACCU          equ	997	;# 
  1560   0003E6                     ADCNT           equ	998	;# 
  1561   0003E7                     ADRPT           equ	999	;# 
  1562   0003E8                     ADPREV          equ	1000	;# 
  1563   0003E8                     ADPREVL         equ	1000	;# 
  1564   0003E9                     ADPREVH         equ	1001	;# 
  1565   0003EA                     ADRES           equ	1002	;# 
  1566   0003EA                     ADRESL          equ	1002	;# 
  1567   0003EB                     ADRESH          equ	1003	;# 
  1568   0003EC                     ADPCH           equ	1004	;# 
  1569   0003EE                     ADACQ           equ	1006	;# 
  1570   0003EE                     ADACQL          equ	1006	;# 
  1571   0003EF                     ADACQH          equ	1007	;# 
  1572   0003F0                     ADCAP           equ	1008	;# 
  1573   0003F1                     ADPRE           equ	1009	;# 
  1574   0003F1                     ADPREL          equ	1009	;# 
  1575   0003F2                     ADPREH          equ	1010	;# 
  1576   0003F3                     ADCON0          equ	1011	;# 
  1577   0003F4                     ADCON1          equ	1012	;# 
  1578   0003F5                     ADCON2          equ	1013	;# 
  1579   0003F6                     ADCON3          equ	1014	;# 
  1580   0003F7                     ADSTAT          equ	1015	;# 
  1581   0003F8                     ADREF           equ	1016	;# 
  1582   0003F9                     ADACT           equ	1017	;# 
  1583   0003FA                     ADCLK           equ	1018	;# 
  1584   000400                     ANSELA          equ	1024	;# 
  1585   000401                     WPUA            equ	1025	;# 
  1586   000402                     ODCONA          equ	1026	;# 
  1587   000403                     SLRCONA         equ	1027	;# 
  1588   000404                     INLVLA          equ	1028	;# 
  1589   000405                     IOCAP           equ	1029	;# 
  1590   000406                     IOCAN           equ	1030	;# 
  1591   000407                     IOCAF           equ	1031	;# 
  1592   000408                     ANSELB          equ	1032	;# 
  1593   000409                     WPUB            equ	1033	;# 
  1594   00040A                     ODCONB          equ	1034	;# 
  1595   00040B                     SLRCONB         equ	1035	;# 
  1596   00040C                     INLVLB          equ	1036	;# 
  1597   00040D                     IOCBP           equ	1037	;# 
  1598   00040E                     IOCBN           equ	1038	;# 
  1599   00040F                     IOCBF           equ	1039	;# 
  1600   000410                     ANSELC          equ	1040	;# 
  1601   000411                     WPUC            equ	1041	;# 
  1602   000412                     ODCONC          equ	1042	;# 
  1603   000413                     SLRCONC         equ	1043	;# 
  1604   000414                     INLVLC          equ	1044	;# 
  1605   000415                     IOCCP           equ	1045	;# 
  1606   000416                     IOCCN           equ	1046	;# 
  1607   000417                     IOCCF           equ	1047	;# 
  1608   000418                     ANSELD          equ	1048	;# 
  1609   000419                     WPUD            equ	1049	;# 
  1610   00041A                     ODCOND          equ	1050	;# 
  1611   00041B                     SLRCOND         equ	1051	;# 
  1612   00041C                     INLVLD          equ	1052	;# 
  1613   000420                     ANSELE          equ	1056	;# 
  1614   000421                     WPUE            equ	1057	;# 
  1615   000422                     ODCONE          equ	1058	;# 
  1616   000423                     SLRCONE         equ	1059	;# 
  1617   000424                     INLVLE          equ	1060	;# 
  1618   000425                     IOCEP           equ	1061	;# 
  1619   000426                     IOCEN           equ	1062	;# 
  1620   000427                     IOCEF           equ	1063	;# 
  1621   000428                     ANSELF          equ	1064	;# 
  1622   000429                     WPUF            equ	1065	;# 
  1623   00042A                     ODCONF          equ	1066	;# 
  1624   00042B                     SLRCONF         equ	1067	;# 
  1625   00042C                     INLVLF          equ	1068	;# 
  1626   000440                     NCO1ACC         equ	1088	;# 
  1627   000440                     NCO1ACCL        equ	1088	;# 
  1628   000441                     NCO1ACCH        equ	1089	;# 
  1629   000442                     NCO1ACCU        equ	1090	;# 
  1630   000443                     NCO1INC         equ	1091	;# 
  1631   000443                     NCO1INCL        equ	1091	;# 
  1632   000444                     NCO1INCH        equ	1092	;# 
  1633   000445                     NCO1INCU        equ	1093	;# 
  1634   000446                     NCO1CON         equ	1094	;# 
  1635   000447                     NCO1CLK         equ	1095	;# 
  1636   000448                     NCO2ACC         equ	1096	;# 
  1637   000448                     NCO2ACCL        equ	1096	;# 
  1638   000449                     NCO2ACCH        equ	1097	;# 
  1639   00044A                     NCO2ACCU        equ	1098	;# 
  1640   00044B                     NCO2INC         equ	1099	;# 
  1641   00044B                     NCO2INCL        equ	1099	;# 
  1642   00044C                     NCO2INCH        equ	1100	;# 
  1643   00044D                     NCO2INCU        equ	1101	;# 
  1644   00044E                     NCO2CON         equ	1102	;# 
  1645   00044F                     NCO2CLK         equ	1103	;# 
  1646   000450                     NCO3ACC         equ	1104	;# 
  1647   000450                     NCO3ACCL        equ	1104	;# 
  1648   000451                     NCO3ACCH        equ	1105	;# 
  1649   000452                     NCO3ACCU        equ	1106	;# 
  1650   000453                     NCO3INC         equ	1107	;# 
  1651   000453                     NCO3INCL        equ	1107	;# 
  1652   000454                     NCO3INCH        equ	1108	;# 
  1653   000455                     NCO3INCU        equ	1109	;# 
  1654   000456                     NCO3CON         equ	1110	;# 
  1655   000457                     NCO3CLK         equ	1111	;# 
  1656   000459                     IVTLOCK         equ	1113	;# 
  1657   00045A                     IVTAD           equ	1114	;# 
  1658   00045A                     IVTADL          equ	1114	;# 
  1659   00045B                     IVTADH          equ	1115	;# 
  1660   00045C                     IVTADU          equ	1116	;# 
  1661   00045D                     IVTBASE         equ	1117	;# 
  1662   00045D                     IVTBASEL        equ	1117	;# 
  1663   00045E                     IVTBASEH        equ	1118	;# 
  1664   00045F                     IVTBASEU        equ	1119	;# 
  1665   000460                     PWM1ERS         equ	1120	;# 
  1666   000461                     PWM1CLK         equ	1121	;# 
  1667   000462                     PWM1LDS         equ	1122	;# 
  1668   000463                     PWM1PR          equ	1123	;# 
  1669   000463                     PWM1PRL         equ	1123	;# 
  1670   000464                     PWM1PRH         equ	1124	;# 
  1671   000465                     PWM1CPRE        equ	1125	;# 
  1672   000466                     PWM1PIPOS       equ	1126	;# 
  1673   000467                     PWM1GIR         equ	1127	;# 
  1674   000468                     PWM1GIE         equ	1128	;# 
  1675   000469                     PWM1CON         equ	1129	;# 
  1676   00046A                     PWM1S1CFG       equ	1130	;# 
  1677   00046B                     PWM1S1P1        equ	1131	;# 
  1678   00046B                     PWM1S1P1L       equ	1131	;# 
  1679   00046C                     PWM1S1P1H       equ	1132	;# 
  1680   00046D                     PWM1S1P2        equ	1133	;# 
  1681   00046D                     PWM1S1P2L       equ	1133	;# 
  1682   00046E                     PWM1S1P2H       equ	1134	;# 
  1683   00046F                     PWM2ERS         equ	1135	;# 
  1684   000470                     PWM2CLK         equ	1136	;# 
  1685   000471                     PWM2LDS         equ	1137	;# 
  1686   000472                     PWM2PR          equ	1138	;# 
  1687   000472                     PWM2PRL         equ	1138	;# 
  1688   000473                     PWM2PRH         equ	1139	;# 
  1689   000474                     PWM2CPRE        equ	1140	;# 
  1690   000475                     PWM2PIPOS       equ	1141	;# 
  1691   000476                     PWM2GIR         equ	1142	;# 
  1692   000477                     PWM2GIE         equ	1143	;# 
  1693   000478                     PWM2CON         equ	1144	;# 
  1694   000479                     PWM2S1CFG       equ	1145	;# 
  1695   00047A                     PWM2S1P1        equ	1146	;# 
  1696   00047A                     PWM2S1P1L       equ	1146	;# 
  1697   00047B                     PWM2S1P1H       equ	1147	;# 
  1698   00047C                     PWM2S1P2        equ	1148	;# 
  1699   00047C                     PWM2S1P2L       equ	1148	;# 
  1700   00047D                     PWM2S1P2H       equ	1149	;# 
  1701   00047E                     PWM3ERS         equ	1150	;# 
  1702   00047F                     PWM3CLK         equ	1151	;# 
  1703   000480                     PWM3LDS         equ	1152	;# 
  1704   000481                     PWM3PR          equ	1153	;# 
  1705   000481                     PWM3PRL         equ	1153	;# 
  1706   000482                     PWM3PRH         equ	1154	;# 
  1707   000483                     PWM3CPRE        equ	1155	;# 
  1708   000484                     PWM3PIPOS       equ	1156	;# 
  1709   000485                     PWM3GIR         equ	1157	;# 
  1710   000486                     PWM3GIE         equ	1158	;# 
  1711   000487                     PWM3CON         equ	1159	;# 
  1712   000488                     PWM3S1CFG       equ	1160	;# 
  1713   000489                     PWM3S1P1        equ	1161	;# 
  1714   000489                     PWM3S1P1L       equ	1161	;# 
  1715   00048A                     PWM3S1P1H       equ	1162	;# 
  1716   00048B                     PWM3S1P2        equ	1163	;# 
  1717   00048B                     PWM3S1P2L       equ	1163	;# 
  1718   00048C                     PWM3S1P2H       equ	1164	;# 
  1719   00049C                     PWMLOAD         equ	1180	;# 
  1720   00049D                     PWMEN           equ	1181	;# 
  1721   00049E                     PIE0            equ	1182	;# 
  1722   00049F                     PIE1            equ	1183	;# 
  1723   0004A0                     PIE2            equ	1184	;# 
  1724   0004A1                     PIE3            equ	1185	;# 
  1725   0004A2                     PIE4            equ	1186	;# 
  1726   0004A3                     PIE5            equ	1187	;# 
  1727   0004A4                     PIE6            equ	1188	;# 
  1728   0004A5                     PIE7            equ	1189	;# 
  1729   0004A6                     PIE8            equ	1190	;# 
  1730   0004A7                     PIE9            equ	1191	;# 
  1731   0004A8                     PIE10           equ	1192	;# 
  1732   0004A9                     PIE11           equ	1193	;# 
  1733   0004AA                     PIE12           equ	1194	;# 
  1734   0004AB                     PIE13           equ	1195	;# 
  1735   0004AC                     PIE14           equ	1196	;# 
  1736   0004AD                     PIE15           equ	1197	;# 
  1737   0004AE                     PIR0            equ	1198	;# 
  1738   0004AF                     PIR1            equ	1199	;# 
  1739   0004B0                     PIR2            equ	1200	;# 
  1740   0004B1                     PIR3            equ	1201	;# 
  1741   0004B2                     PIR4            equ	1202	;# 
  1742   0004B3                     PIR5            equ	1203	;# 
  1743   0004B4                     PIR6            equ	1204	;# 
  1744   0004B5                     PIR7            equ	1205	;# 
  1745   0004B6                     PIR8            equ	1206	;# 
  1746   0004B7                     PIR9            equ	1207	;# 
  1747   0004B8                     PIR10           equ	1208	;# 
  1748   0004B9                     PIR11           equ	1209	;# 
  1749   0004BA                     PIR12           equ	1210	;# 
  1750   0004BB                     PIR13           equ	1211	;# 
  1751   0004BC                     PIR14           equ	1212	;# 
  1752   0004BD                     PIR15           equ	1213	;# 
  1753   0004BE                     LATA            equ	1214	;# 
  1754   0004BF                     LATB            equ	1215	;# 
  1755   0004C0                     LATC            equ	1216	;# 
  1756   0004C1                     LATD            equ	1217	;# 
  1757   0004C2                     LATE            equ	1218	;# 
  1758   0004C3                     LATF            equ	1219	;# 
  1759   0004C6                     TRISA           equ	1222	;# 
  1760   0004C7                     TRISB           equ	1223	;# 
  1761   0004C8                     TRISC           equ	1224	;# 
  1762   0004C9                     TRISD           equ	1225	;# 
  1763   0004CA                     TRISE           equ	1226	;# 
  1764   0004CB                     TRISF           equ	1227	;# 
  1765   0004CE                     PORTA           equ	1230	;# 
  1766   0004CF                     PORTB           equ	1231	;# 
  1767   0004D0                     PORTC           equ	1232	;# 
  1768   0004D1                     PORTD           equ	1233	;# 
  1769   0004D2                     PORTE           equ	1234	;# 
  1770   0004D3                     PORTF           equ	1235	;# 
  1771   0004D6                     INTCON0         equ	1238	;# 
  1772   0004D7                     INTCON1         equ	1239	;# 
  1773   0004D8                     STATUS          equ	1240	;# 
  1774   0004D9                     FSR2            equ	1241	;# 
  1775   0004D9                     FSR2L           equ	1241	;# 
  1776   0004DA                     FSR2H           equ	1242	;# 
  1777   0004DB                     PLUSW2          equ	1243	;# 
  1778   0004DC                     PREINC2         equ	1244	;# 
  1779   0004DD                     POSTDEC2        equ	1245	;# 
  1780   0004DE                     POSTINC2        equ	1246	;# 
  1781   0004DF                     INDF2           equ	1247	;# 
  1782   0004E0                     BSR             equ	1248	;# 
  1783   0004E1                     FSR1            equ	1249	;# 
  1784   0004E1                     FSR1L           equ	1249	;# 
  1785   0004E2                     FSR1H           equ	1250	;# 
  1786   0004E3                     PLUSW1          equ	1251	;# 
  1787   0004E4                     PREINC1         equ	1252	;# 
  1788   0004E5                     POSTDEC1        equ	1253	;# 
  1789   0004E6                     POSTINC1        equ	1254	;# 
  1790   0004E7                     INDF1           equ	1255	;# 
  1791   0004E8                     WREG            equ	1256	;# 
  1792   0004E9                     FSR0            equ	1257	;# 
  1793   0004E9                     FSR0L           equ	1257	;# 
  1794   0004EA                     FSR0H           equ	1258	;# 
  1795   0004EB                     PLUSW0          equ	1259	;# 
  1796   0004EC                     PREINC0         equ	1260	;# 
  1797   0004ED                     POSTDEC0        equ	1261	;# 
  1798   0004EE                     POSTINC0        equ	1262	;# 
  1799   0004EF                     INDF0           equ	1263	;# 
  1800   0004F0                     PCON0           equ	1264	;# 
  1801   0004F1                     PCON1           equ	1265	;# 
  1802   0004F2                     CPUDOZE         equ	1266	;# 
  1803   0004F3                     PROD            equ	1267	;# 
  1804   0004F3                     PRODL           equ	1267	;# 
  1805   0004F4                     PRODH           equ	1268	;# 
  1806   0004F5                     TABLAT          equ	1269	;# 
  1807   0004F6                     TBLPTR          equ	1270	;# 
  1808   0004F6                     TBLPTRL         equ	1270	;# 
  1809   0004F7                     TBLPTRH         equ	1271	;# 
  1810   0004F8                     TBLPTRU         equ	1272	;# 
  1811   0004F9                     PCLAT           equ	1273	;# 
  1812   0004F9                     PCL             equ	1273	;# 
  1813   0004FA                     PCLATH          equ	1274	;# 
  1814   0004FB                     PCLATU          equ	1275	;# 
  1815   0004FC                     STKPTR          equ	1276	;# 
  1816   0004FD                     TOS             equ	1277	;# 
  1817   0004FD                     TOSL            equ	1277	;# 
  1818   0004FE                     TOSH            equ	1278	;# 
  1819   0004FF                     TOSU            equ	1279	;# 
  1820   000039                     CLKRCON         equ	57	;# 
  1821   00003A                     CLKRCLK         equ	58	;# 
  1822   000040                     NVMCON0         equ	64	;# 
  1823   000041                     NVMCON1         equ	65	;# 
  1824   000042                     NVMLOCK         equ	66	;# 
  1825   000043                     NVMADR          equ	67	;# 
  1826   000043                     NVMADRL         equ	67	;# 
  1827   000044                     NVMADRH         equ	68	;# 
  1828   000045                     NVMADRU         equ	69	;# 
  1829   000046                     NVMDAT          equ	70	;# 
  1830   000046                     NVMDATL         equ	70	;# 
  1831   000047                     NVMDATH         equ	71	;# 
  1832   000048                     VREGCON         equ	72	;# 
  1833   000049                     BORCON          equ	73	;# 
  1834   00004A                     HLVDCON0        equ	74	;# 
  1835   00004B                     HLVDCON1        equ	75	;# 
  1836   00004C                     ZCDCON          equ	76	;# 
  1837   000060                     PMD0            equ	96	;# 
  1838   000061                     PMD1            equ	97	;# 
  1839   000063                     PMD3            equ	99	;# 
  1840   000064                     PMD4            equ	100	;# 
  1841   000065                     PMD5            equ	101	;# 
  1842   000066                     PMD6            equ	102	;# 
  1843   000067                     PMD7            equ	103	;# 
  1844   000068                     PMD8            equ	104	;# 
  1845   00006A                     MD1CON0         equ	106	;# 
  1846   00006B                     MD1CON1         equ	107	;# 
  1847   00006C                     MD1SRC          equ	108	;# 
  1848   00006D                     MD1CARL         equ	109	;# 
  1849   00006E                     MD1CARH         equ	110	;# 
  1850   00006F                     CMOUT           equ	111	;# 
  1851   000070                     CM1CON0         equ	112	;# 
  1852   000071                     CM1CON1         equ	113	;# 
  1853   000072                     CM1NCH          equ	114	;# 
  1854   000073                     CM1PCH          equ	115	;# 
  1855   000074                     CM2CON0         equ	116	;# 
  1856   000075                     CM2CON1         equ	117	;# 
  1857   000076                     CM2NCH          equ	118	;# 
  1858   000077                     CM2PCH          equ	119	;# 
  1859   000078                     WDTCON0         equ	120	;# 
  1860   000079                     WDTCON1         equ	121	;# 
  1861   00007A                     WDTPS           equ	122	;# 
  1862   00007A                     WDTPSL          equ	122	;# 
  1863   00007B                     WDTPSH          equ	123	;# 
  1864   00007C                     WDTTMR          equ	124	;# 
  1865   00007D                     DAC1DAT         equ	125	;# 
  1866   00007D                     DAC1DATL        equ	125	;# 
  1867   00007F                     DAC1CON         equ	127	;# 
  1868   000080                     SPI1RXB         equ	128	;# 
  1869   000081                     SPI1TXB         equ	129	;# 
  1870   000082                     SPI1TCNT        equ	130	;# 
  1871   000082                     SPI1TCNTL       equ	130	;# 
  1872   000083                     SPI1TCNTH       equ	131	;# 
  1873   000084                     SPI1CON0        equ	132	;# 
  1874   000085                     SPI1CON1        equ	133	;# 
  1875   000086                     SPI1CON2        equ	134	;# 
  1876   000087                     SPI1STATUS      equ	135	;# 
  1877   000088                     SPI1TWIDTH      equ	136	;# 
  1878   000089                     SPI1BAUD        equ	137	;# 
  1879   00008A                     SPI1INTF        equ	138	;# 
  1880   00008B                     SPI1INTE        equ	139	;# 
  1881   00008C                     SPI1CLK         equ	140	;# 
  1882   00008D                     SPI2RXB         equ	141	;# 
  1883   00008E                     SPI2TXB         equ	142	;# 
  1884   00008F                     SPI2TCNT        equ	143	;# 
  1885   00008F                     SPI2TCNTL       equ	143	;# 
  1886   000090                     SPI2TCNTH       equ	144	;# 
  1887   000091                     SPI2CON0        equ	145	;# 
  1888   000092                     SPI2CON1        equ	146	;# 
  1889   000093                     SPI2CON2        equ	147	;# 
  1890   000094                     SPI2STATUS      equ	148	;# 
  1891   000095                     SPI2TWIDTH      equ	149	;# 
  1892   000096                     SPI2BAUD        equ	150	;# 
  1893   000097                     SPI2INTF        equ	151	;# 
  1894   000098                     SPI2INTE        equ	152	;# 
  1895   000099                     SPI2CLK         equ	153	;# 
  1896   0000AC                     ACTCON          equ	172	;# 
  1897   0000AD                     OSCCON1         equ	173	;# 
  1898   0000AE                     OSCCON2         equ	174	;# 
  1899   0000AF                     OSCCON3         equ	175	;# 
  1900   0000B0                     OSCTUNE         equ	176	;# 
  1901   0000B1                     OSCFRQ          equ	177	;# 
  1902   0000B1                     OSCFREQ         equ	177	;# 
  1903   0000B2                     OSCSTAT         equ	178	;# 
  1904   0000B2                     OSCSTAT1        equ	178	;# 
  1905   0000B3                     OSCEN           equ	179	;# 
  1906   0000B4                     PRLOCK          equ	180	;# 
  1907   0000B5                     SCANPR          equ	181	;# 
  1908   0000B6                     DMA1PR          equ	182	;# 
  1909   0000B7                     DMA2PR          equ	183	;# 
  1910   0000B8                     DMA3PR          equ	184	;# 
  1911   0000B9                     DMA4PR          equ	185	;# 
  1912   0000BA                     DMA5PR          equ	186	;# 
  1913   0000BB                     DMA6PR          equ	187	;# 
  1914   0000BE                     MAINPR          equ	190	;# 
  1915   0000BF                     ISRPR           equ	191	;# 
  1916   0000D4                     CLCDATA         equ	212	;# 
  1917   0000D5                     CLCSELECT       equ	213	;# 
  1918   0000D6                     CLCnCON         equ	214	;# 
  1919   0000D7                     CLCnPOL         equ	215	;# 
  1920   0000D8                     CLCnSEL0        equ	216	;# 
  1921   0000D9                     CLCnSEL1        equ	217	;# 
  1922   0000DA                     CLCnSEL2        equ	218	;# 
  1923   0000DB                     CLCnSEL3        equ	219	;# 
  1924   0000DC                     CLCnGLS0        equ	220	;# 
  1925   0000DD                     CLCnGLS1        equ	221	;# 
  1926   0000DE                     CLCnGLS2        equ	222	;# 
  1927   0000DF                     CLCnGLS3        equ	223	;# 
  1928   0000E8                     DMASELECT       equ	232	;# 
  1929   0000E9                     DMAnBUF         equ	233	;# 
  1930   0000EA                     DMAnDCNT        equ	234	;# 
  1931   0000EA                     DMAnDCNTL       equ	234	;# 
  1932   0000EB                     DMAnDCNTH       equ	235	;# 
  1933   0000EC                     DMAnDPTR        equ	236	;# 
  1934   0000EC                     DMAnDPTRL       equ	236	;# 
  1935   0000ED                     DMAnDPTRH       equ	237	;# 
  1936   0000EE                     DMAnDSZ         equ	238	;# 
  1937   0000EE                     DMAnDSZL        equ	238	;# 
  1938   0000EF                     DMAnDSZH        equ	239	;# 
  1939   0000F0                     DMAnDSA         equ	240	;# 
  1940   0000F0                     DMAnDSAL        equ	240	;# 
  1941   0000F1                     DMAnDSAH        equ	241	;# 
  1942   0000F2                     DMAnSCNT        equ	242	;# 
  1943   0000F2                     DMAnSCNTL       equ	242	;# 
  1944   0000F3                     DMAnSCNTH       equ	243	;# 
  1945   0000F4                     DMAnSPTR        equ	244	;# 
  1946   0000F4                     DMAnSPTRL       equ	244	;# 
  1947   0000F5                     DMAnSPTRH       equ	245	;# 
  1948   0000F6                     DMAnSPTRU       equ	246	;# 
  1949   0000F7                     DMAnSSZ         equ	247	;# 
  1950   0000F7                     DMAnSSZL        equ	247	;# 
  1951   0000F8                     DMAnSSZH        equ	248	;# 
  1952   0000F9                     DMAnSSA         equ	249	;# 
  1953   0000F9                     DMAnSSAL        equ	249	;# 
  1954   0000FA                     DMAnSSAH        equ	250	;# 
  1955   0000FB                     DMAnSSAU        equ	251	;# 
  1956   0000FC                     DMAnCON0        equ	252	;# 
  1957   0000FD                     DMAnCON1        equ	253	;# 
  1958   0000FE                     DMAnAIRQ        equ	254	;# 
  1959   0000FF                     DMAnSIRQ        equ	255	;# 
  1960   000200                     PPSLOCK         equ	512	;# 
  1961   000201                     RA0PPS          equ	513	;# 
  1962   000202                     RA1PPS          equ	514	;# 
  1963   000203                     RA2PPS          equ	515	;# 
  1964   000204                     RA3PPS          equ	516	;# 
  1965   000205                     RA4PPS          equ	517	;# 
  1966   000206                     RA5PPS          equ	518	;# 
  1967   000207                     RA6PPS          equ	519	;# 
  1968   000208                     RA7PPS          equ	520	;# 
  1969   000209                     RB0PPS          equ	521	;# 
  1970   00020A                     RB1PPS          equ	522	;# 
  1971   00020B                     RB2PPS          equ	523	;# 
  1972   00020C                     RB3PPS          equ	524	;# 
  1973   00020D                     RB4PPS          equ	525	;# 
  1974   00020E                     RB5PPS          equ	526	;# 
  1975   00020F                     RB6PPS          equ	527	;# 
  1976   000210                     RB7PPS          equ	528	;# 
  1977   000211                     RC0PPS          equ	529	;# 
  1978   000212                     RC1PPS          equ	530	;# 
  1979   000213                     RC2PPS          equ	531	;# 
  1980   000214                     RC3PPS          equ	532	;# 
  1981   000215                     RC4PPS          equ	533	;# 
  1982   000216                     RC5PPS          equ	534	;# 
  1983   000217                     RC6PPS          equ	535	;# 
  1984   000218                     RC7PPS          equ	536	;# 
  1985   000219                     RD0PPS          equ	537	;# 
  1986   00021A                     RD1PPS          equ	538	;# 
  1987   00021B                     RD2PPS          equ	539	;# 
  1988   00021C                     RD3PPS          equ	540	;# 
  1989   00021D                     RD4PPS          equ	541	;# 
  1990   00021E                     RD5PPS          equ	542	;# 
  1991   00021F                     RD6PPS          equ	543	;# 
  1992   000220                     RD7PPS          equ	544	;# 
  1993   000221                     RE0PPS          equ	545	;# 
  1994   000222                     RE1PPS          equ	546	;# 
  1995   000223                     RE2PPS          equ	547	;# 
  1996   000229                     RF0PPS          equ	553	;# 
  1997   00022A                     RF1PPS          equ	554	;# 
  1998   00022B                     RF2PPS          equ	555	;# 
  1999   00022C                     RF3PPS          equ	556	;# 
  2000   00022D                     RF4PPS          equ	557	;# 
  2001   00022E                     RF5PPS          equ	558	;# 
  2002   00022F                     RF6PPS          equ	559	;# 
  2003   000230                     RF7PPS          equ	560	;# 
  2004   00023E                     INT0PPS         equ	574	;# 
  2005   00023F                     INT1PPS         equ	575	;# 
  2006   000240                     INT2PPS         equ	576	;# 
  2007   000241                     T0CKIPPS        equ	577	;# 
  2008   000242                     T1CKIPPS        equ	578	;# 
  2009   000243                     T1GPPS          equ	579	;# 
  2010   000244                     T3CKIPPS        equ	580	;# 
  2011   000245                     T3GPPS          equ	581	;# 
  2012   000246                     T5CKIPPS        equ	582	;# 
  2013   000247                     T5GPPS          equ	583	;# 
  2014   000248                     T2INPPS         equ	584	;# 
  2015   000249                     T4INPPS         equ	585	;# 
  2016   00024A                     T6INPPS         equ	586	;# 
  2017   00024F                     CCP1PPS         equ	591	;# 
  2018   000250                     CCP2PPS         equ	592	;# 
  2019   000251                     CCP3PPS         equ	593	;# 
  2020   000253                     PWM1ERSPPS      equ	595	;# 
  2021   000254                     PWM2ERSPPS      equ	596	;# 
  2022   000255                     PWM3ERSPPS      equ	597	;# 
  2023   000257                     PWMIN0PPS       equ	599	;# 
  2024   000258                     PWMIN1PPS       equ	600	;# 
  2025   000259                     SMT1WINPPS      equ	601	;# 
  2026   00025A                     SMT1SIGPPS      equ	602	;# 
  2027   00025B                     CWG1PPS         equ	603	;# 
  2028   00025B                     CWG1INPPS       equ	603	;# 
  2029   00025C                     CWG2PPS         equ	604	;# 
  2030   00025C                     CWG2INPPS       equ	604	;# 
  2031   00025D                     CWG3PPS         equ	605	;# 
  2032   00025D                     CWG3INPPS       equ	605	;# 
  2033   00025E                     MD1CARLPPS      equ	606	;# 
  2034   00025E                     MDCARLPPS       equ	606	;# 
  2035   00025F                     MD1CARHPPS      equ	607	;# 
  2036   00025F                     MDCARHPPS       equ	607	;# 
  2037   000260                     MD1SRCPPS       equ	608	;# 
  2038   000260                     MDSRCPPS        equ	608	;# 
  2039   000261                     CLCIN0PPS       equ	609	;# 
  2040   000262                     CLCIN1PPS       equ	610	;# 
  2041   000263                     CLCIN2PPS       equ	611	;# 
  2042   000264                     CLCIN3PPS       equ	612	;# 
  2043   000265                     CLCIN4PPS       equ	613	;# 
  2044   000266                     CLCIN5PPS       equ	614	;# 
  2045   000267                     CLCIN6PPS       equ	615	;# 
  2046   000268                     CLCIN7PPS       equ	616	;# 
  2047   000269                     ADACTPPS        equ	617	;# 
  2048   00026A                     SPI1SCKPPS      equ	618	;# 
  2049   00026B                     SPI1SDIPPS      equ	619	;# 
  2050   00026C                     SPI1SSPPS       equ	620	;# 
  2051   00026D                     SPI2SCKPPS      equ	621	;# 
  2052   00026E                     SPI2SDIPPS      equ	622	;# 
  2053   00026F                     SPI2SSPPS       equ	623	;# 
  2054   000270                     I2C1SDAPPS      equ	624	;# 
  2055   000271                     I2C1SCLPPS      equ	625	;# 
  2056   000272                     U1RXPPS         equ	626	;# 
  2057   000273                     U1CTSPPS        equ	627	;# 
  2058   000274                     U2RXPPS         equ	628	;# 
  2059   000275                     U2CTSPPS        equ	629	;# 
  2060   000276                     U3RXPPS         equ	630	;# 
  2061   000277                     U3CTSPPS        equ	631	;# 
  2062   000278                     U4RXPPS         equ	632	;# 
  2063   000279                     U4CTSPPS        equ	633	;# 
  2064   00027A                     U5RXPPS         equ	634	;# 
  2065   00027B                     U5CTSPPS        equ	635	;# 
  2066   000286                     RC4I2C          equ	646	;# 
  2067   000287                     RC3I2C          equ	647	;# 
  2068   000288                     RB2I2C          equ	648	;# 
  2069   000289                     RB1I2C          equ	649	;# 
  2070   00028B                     I2C1RXB         equ	651	;# 
  2071   00028C                     I2C1TXB         equ	652	;# 
  2072   00028D                     I2C1CNT         equ	653	;# 
  2073   00028E                     I2C1ADB0        equ	654	;# 
  2074   00028F                     I2C1ADB1        equ	655	;# 
  2075   000290                     I2C1ADR0        equ	656	;# 
  2076   000291                     I2C1ADR1        equ	657	;# 
  2077   000292                     I2C1ADR2        equ	658	;# 
  2078   000293                     I2C1ADR3        equ	659	;# 
  2079   000294                     I2C1CON0        equ	660	;# 
  2080   000295                     I2C1CON1        equ	661	;# 
  2081   000296                     I2C1CON2        equ	662	;# 
  2082   000297                     I2C1ERR         equ	663	;# 
  2083   000298                     I2C1STAT0       equ	664	;# 
  2084   000299                     I2C1STAT1       equ	665	;# 
  2085   00029A                     I2C1PIR         equ	666	;# 
  2086   00029B                     I2C1PIE         equ	667	;# 
  2087   00029C                     I2C1CLK         equ	668	;# 
  2088   00029D                     I2C1BTO         equ	669	;# 
  2089   0002A1                     U1RXB           equ	673	;# 
  2090   0002A1                     U1RXBL          equ	673	;# 
  2091   0002A2                     U1RXCHK         equ	674	;# 
  2092   0002A3                     U1TXB           equ	675	;# 
  2093   0002A3                     U1TXBL          equ	675	;# 
  2094   0002A4                     U1TXCHK         equ	676	;# 
  2095   0002A5                     U1P1            equ	677	;# 
  2096   0002A5                     U1P1L           equ	677	;# 
  2097   0002A6                     U1P1H           equ	678	;# 
  2098   0002A7                     U1P2            equ	679	;# 
  2099   0002A7                     U1P2L           equ	679	;# 
  2100   0002A8                     U1P2H           equ	680	;# 
  2101   0002A9                     U1P3            equ	681	;# 
  2102   0002A9                     U1P3L           equ	681	;# 
  2103   0002AA                     U1P3H           equ	682	;# 
  2104   0002AB                     U1CON0          equ	683	;# 
  2105   0002AC                     U1CON1          equ	684	;# 
  2106   0002AD                     U1CON2          equ	685	;# 
  2107   0002AE                     U1BRG           equ	686	;# 
  2108   0002AE                     U1BRGL          equ	686	;# 
  2109   0002AF                     U1BRGH          equ	687	;# 
  2110   0002B0                     U1FIFO          equ	688	;# 
  2111   0002B1                     U1UIR           equ	689	;# 
  2112   0002B2                     U1ERRIR         equ	690	;# 
  2113   0002B3                     U1ERRIE         equ	691	;# 
  2114   0002B4                     U2RXB           equ	692	;# 
  2115   0002B4                     U2RXBL          equ	692	;# 
  2116   0002B6                     U2TXB           equ	694	;# 
  2117   0002B6                     U2TXBL          equ	694	;# 
  2118   0002B8                     U2P1            equ	696	;# 
  2119   0002B8                     U2P1L           equ	696	;# 
  2120   0002BA                     U2P2            equ	698	;# 
  2121   0002BA                     U2P2L           equ	698	;# 
  2122   0002BC                     U2P3            equ	700	;# 
  2123   0002BC                     U2P3L           equ	700	;# 
  2124   0002BE                     U2CON0          equ	702	;# 
  2125   0002BF                     U2CON1          equ	703	;# 
  2126   0002C0                     U2CON2          equ	704	;# 
  2127   0002C1                     U2BRG           equ	705	;# 
  2128   0002C1                     U2BRGL          equ	705	;# 
  2129   0002C2                     U2BRGH          equ	706	;# 
  2130   0002C3                     U2FIFO          equ	707	;# 
  2131   0002C4                     U2UIR           equ	708	;# 
  2132   0002C5                     U2ERRIR         equ	709	;# 
  2133   0002C6                     U2ERRIE         equ	710	;# 
  2134   0002C7                     U3RXB           equ	711	;# 
  2135   0002C7                     U3RXBL          equ	711	;# 
  2136   0002C9                     U3TXB           equ	713	;# 
  2137   0002C9                     U3TXBL          equ	713	;# 
  2138   0002CB                     U3P1            equ	715	;# 
  2139   0002CB                     U3P1L           equ	715	;# 
  2140   0002CD                     U3P2            equ	717	;# 
  2141   0002CD                     U3P2L           equ	717	;# 
  2142   0002CF                     U3P3            equ	719	;# 
  2143   0002CF                     U3P3L           equ	719	;# 
  2144   0002D1                     U3CON0          equ	721	;# 
  2145   0002D2                     U3CON1          equ	722	;# 
  2146   0002D3                     U3CON2          equ	723	;# 
  2147   0002D4                     U3BRG           equ	724	;# 
  2148   0002D4                     U3BRGL          equ	724	;# 
  2149   0002D5                     U3BRGH          equ	725	;# 
  2150   0002D6                     U3FIFO          equ	726	;# 
  2151   0002D7                     U3UIR           equ	727	;# 
  2152   0002D8                     U3ERRIR         equ	728	;# 
  2153   0002D9                     U3ERRIE         equ	729	;# 
  2154   0002DA                     U4RXB           equ	730	;# 
  2155   0002DA                     U4RXBL          equ	730	;# 
  2156   0002DC                     U4TXB           equ	732	;# 
  2157   0002DC                     U4TXBL          equ	732	;# 
  2158   0002DE                     U4P1            equ	734	;# 
  2159   0002DE                     U4P1L           equ	734	;# 
  2160   0002E0                     U4P2            equ	736	;# 
  2161   0002E0                     U4P2L           equ	736	;# 
  2162   0002E2                     U4P3            equ	738	;# 
  2163   0002E2                     U4P3L           equ	738	;# 
  2164   0002E4                     U4CON0          equ	740	;# 
  2165   0002E5                     U4CON1          equ	741	;# 
  2166   0002E6                     U4CON2          equ	742	;# 
  2167   0002E7                     U4BRG           equ	743	;# 
  2168   0002E7                     U4BRGL          equ	743	;# 
  2169   0002E8                     U4BRGH          equ	744	;# 
  2170   0002E9                     U4FIFO          equ	745	;# 
  2171   0002EA                     U4UIR           equ	746	;# 
  2172   0002EB                     U4ERRIR         equ	747	;# 
  2173   0002EC                     U4ERRIE         equ	748	;# 
  2174   0002ED                     U5RXB           equ	749	;# 
  2175   0002ED                     U5RXBL          equ	749	;# 
  2176   0002EF                     U5TXB           equ	751	;# 
  2177   0002EF                     U5TXBL          equ	751	;# 
  2178   0002F1                     U5P1            equ	753	;# 
  2179   0002F1                     U5P1L           equ	753	;# 
  2180   0002F3                     U5P2            equ	755	;# 
  2181   0002F3                     U5P2L           equ	755	;# 
  2182   0002F5                     U5P3            equ	757	;# 
  2183   0002F5                     U5P3L           equ	757	;# 
  2184   0002F7                     U5CON0          equ	759	;# 
  2185   0002F8                     U5CON1          equ	760	;# 
  2186   0002F9                     U5CON2          equ	761	;# 
  2187   0002FA                     U5BRG           equ	762	;# 
  2188   0002FA                     U5BRGL          equ	762	;# 
  2189   0002FB                     U5BRGH          equ	763	;# 
  2190   0002FC                     U5FIFO          equ	764	;# 
  2191   0002FD                     U5UIR           equ	765	;# 
  2192   0002FE                     U5ERRIR         equ	766	;# 
  2193   0002FF                     U5ERRIE         equ	767	;# 
  2194   000300                     SMT1TMR         equ	768	;# 
  2195   000300                     SMT1TMRL        equ	768	;# 
  2196   000301                     SMT1TMRH        equ	769	;# 
  2197   000302                     SMT1TMRU        equ	770	;# 
  2198   000303                     SMT1CPR         equ	771	;# 
  2199   000303                     SMT1CPRL        equ	771	;# 
  2200   000304                     SMT1CPRH        equ	772	;# 
  2201   000305                     SMT1CPRU        equ	773	;# 
  2202   000306                     SMT1CPW         equ	774	;# 
  2203   000306                     SMT1CPWL        equ	774	;# 
  2204   000307                     SMT1CPWH        equ	775	;# 
  2205   000308                     SMT1CPWU        equ	776	;# 
  2206   000309                     SMT1PR          equ	777	;# 
  2207   000309                     SMT1PRL         equ	777	;# 
  2208   00030A                     SMT1PRH         equ	778	;# 
  2209   00030B                     SMT1PRU         equ	779	;# 
  2210   00030C                     SMT1CON0        equ	780	;# 
  2211   00030D                     SMT1CON1        equ	781	;# 
  2212   00030E                     SMT1STAT        equ	782	;# 
  2213   00030F                     SMT1CLK         equ	783	;# 
  2214   000310                     SMT1SIG         equ	784	;# 
  2215   000311                     SMT1WIN         equ	785	;# 
  2216   000318                     TMR0L           equ	792	;# 
  2217   000318                     TMR0            equ	792	;# 
  2218   000319                     TMR0H           equ	793	;# 
  2219   000319                     PR0             equ	793	;# 
  2220   00031A                     T0CON0          equ	794	;# 
  2221   00031B                     T0CON1          equ	795	;# 
  2222   00031C                     TMR1            equ	796	;# 
  2223   00031C                     TMR1L           equ	796	;# 
  2224   00031D                     TMR1H           equ	797	;# 
  2225   00031E                     T1CON           equ	798	;# 
  2226   00031E                     TMR1CON         equ	798	;# 
  2227   00031F                     T1GCON          equ	799	;# 
  2228   00031F                     TMR1GCON        equ	799	;# 
  2229   000320                     T1GATE          equ	800	;# 
  2230   000320                     TMR1GATE        equ	800	;# 
  2231   000321                     T1CLK           equ	801	;# 
  2232   000321                     TMR1CLK         equ	801	;# 
  2233   000321                     PR1             equ	801	;# 
  2234   000322                     T2TMR           equ	802	;# 
  2235   000322                     TMR2            equ	802	;# 
  2236   000323                     T2PR            equ	803	;# 
  2237   000323                     PR2             equ	803	;# 
  2238   000324                     T2CON           equ	804	;# 
  2239   000325                     T2HLT           equ	805	;# 
  2240   000326                     T2CLKCON        equ	806	;# 
  2241   000326                     T2CLK           equ	806	;# 
  2242   000327                     T2RST           equ	807	;# 
  2243   000328                     TMR3            equ	808	;# 
  2244   000328                     TMR3L           equ	808	;# 
  2245   000329                     TMR3H           equ	809	;# 
  2246   00032A                     T3CON           equ	810	;# 
  2247   00032A                     TMR3CON         equ	810	;# 
  2248   00032B                     T3GCON          equ	811	;# 
  2249   00032B                     TMR3GCON        equ	811	;# 
  2250   00032C                     T3GATE          equ	812	;# 
  2251   00032C                     TMR3GATE        equ	812	;# 
  2252   00032D                     T3CLK           equ	813	;# 
  2253   00032D                     TMR3CLK         equ	813	;# 
  2254   00032D                     PR3             equ	813	;# 
  2255   00032E                     T4TMR           equ	814	;# 
  2256   00032E                     TMR4            equ	814	;# 
  2257   00032F                     T4PR            equ	815	;# 
  2258   00032F                     PR4             equ	815	;# 
  2259   000330                     T4CON           equ	816	;# 
  2260   000331                     T4HLT           equ	817	;# 
  2261   000332                     T4CLKCON        equ	818	;# 
  2262   000332                     T4CLK           equ	818	;# 
  2263   000333                     T4RST           equ	819	;# 
  2264   000334                     TMR5            equ	820	;# 
  2265   000334                     TMR5L           equ	820	;# 
  2266   000335                     TMR5H           equ	821	;# 
  2267   000336                     T5CON           equ	822	;# 
  2268   000336                     TMR5CON         equ	822	;# 
  2269   000337                     T5GCON          equ	823	;# 
  2270   000337                     TMR5GCON        equ	823	;# 
  2271   000338                     T5GATE          equ	824	;# 
  2272   000338                     TMR5GATE        equ	824	;# 
  2273   000339                     T5CLK           equ	825	;# 
  2274   000339                     TMR5CLK         equ	825	;# 
  2275   000339                     PR5             equ	825	;# 
  2276   00033A                     T6TMR           equ	826	;# 
  2277   00033A                     TMR6            equ	826	;# 
  2278   00033B                     T6PR            equ	827	;# 
  2279   00033B                     PR6             equ	827	;# 
  2280   00033C                     T6CON           equ	828	;# 
  2281   00033D                     T6HLT           equ	829	;# 
  2282   00033E                     T6CLKCON        equ	830	;# 
  2283   00033E                     T6CLK           equ	830	;# 
  2284   00033F                     T6RST           equ	831	;# 
  2285   000340                     CCPR1           equ	832	;# 
  2286   000340                     CCPR1L          equ	832	;# 
  2287   000341                     CCPR1H          equ	833	;# 
  2288   000342                     CCP1CON         equ	834	;# 
  2289   000343                     CCP1CAP         equ	835	;# 
  2290   000344                     CCPR2           equ	836	;# 
  2291   000344                     CCPR2L          equ	836	;# 
  2292   000345                     CCPR2H          equ	837	;# 
  2293   000346                     CCP2CON         equ	838	;# 
  2294   000347                     CCP2CAP         equ	839	;# 
  2295   000348                     CCPR3           equ	840	;# 
  2296   000348                     CCPR3L          equ	840	;# 
  2297   000349                     CCPR3H          equ	841	;# 
  2298   00034A                     CCP3CON         equ	842	;# 
  2299   00034B                     CCP3CAP         equ	843	;# 
  2300   00034C                     CCPTMRS0        equ	844	;# 
  2301   00034F                     CRCDATA         equ	847	;# 
  2302   00034F                     CRCDATL         equ	847	;# 
  2303   000350                     CRCDATH         equ	848	;# 
  2304   000351                     CRCACC          equ	849	;# 
  2305   000351                     CRCACCL         equ	849	;# 
  2306   000352                     CRCACCH         equ	850	;# 
  2307   000353                     CRCSHFT         equ	851	;# 
  2308   000353                     CRCSHIFTL       equ	851	;# 
  2309   000354                     CRCSHIFTH       equ	852	;# 
  2310   000355                     CRCXOR          equ	853	;# 
  2311   000355                     CRCXORL         equ	853	;# 
  2312   000356                     CRCXORH         equ	854	;# 
  2313   000357                     CRCCON0         equ	855	;# 
  2314   000358                     CRCCON1         equ	856	;# 
  2315   00035A                     SCANLADR        equ	858	;# 
  2316   00035A                     SCANLADRL       equ	858	;# 
  2317   00035B                     SCANLADRH       equ	859	;# 
  2318   00035C                     SCANLADRU       equ	860	;# 
  2319   00035D                     SCANHADR        equ	861	;# 
  2320   00035D                     SCANHADRL       equ	861	;# 
  2321   00035E                     SCANHADRH       equ	862	;# 
  2322   00035F                     SCANHADRU       equ	863	;# 
  2323   000360                     SCANCON0        equ	864	;# 
  2324   000361                     SCANTRIG        equ	865	;# 
  2325   000362                     IPR0            equ	866	;# 
  2326   000363                     IPR1            equ	867	;# 
  2327   000364                     IPR2            equ	868	;# 
  2328   000365                     IPR3            equ	869	;# 
  2329   000366                     IPR4            equ	870	;# 
  2330   000367                     IPR5            equ	871	;# 
  2331   000368                     IPR6            equ	872	;# 
  2332   000369                     IPR7            equ	873	;# 
  2333   00036A                     IPR8            equ	874	;# 
  2334   00036B                     IPR9            equ	875	;# 
  2335   00036C                     IPR10           equ	876	;# 
  2336   00036D                     IPR11           equ	877	;# 
  2337   00036E                     IPR12           equ	878	;# 
  2338   00036F                     IPR13           equ	879	;# 
  2339   000370                     IPR14           equ	880	;# 
  2340   000371                     IPR15           equ	881	;# 
  2341   000373                     STATUS_CSHAD    equ	883	;# 
  2342   000374                     WREG_CSHAD      equ	884	;# 
  2343   000375                     BSR_CSHAD       equ	885	;# 
  2344   000376                     SHADCON         equ	886	;# 
  2345   000377                     STATUS_SHAD     equ	887	;# 
  2346   000378                     WREG_SHAD       equ	888	;# 
  2347   000379                     BSR_SHAD        equ	889	;# 
  2348   00037A                     PCLATH_SHAD     equ	890	;# 
  2349   00037B                     PCLATU_SHAD     equ	891	;# 
  2350   00037C                     FSR0SH          equ	892	;# 
  2351   00037C                     FSR0L_SHAD      equ	892	;# 
  2352   00037D                     FSR0H_SHAD      equ	893	;# 
  2353   00037E                     FSR1SH          equ	894	;# 
  2354   00037E                     FSR1L_SHAD      equ	894	;# 
  2355   00037F                     FSR1H_SHAD      equ	895	;# 
  2356   000380                     FSR2SH          equ	896	;# 
  2357   000380                     FSR2L_SHAD      equ	896	;# 
  2358   000381                     FSR2H_SHAD      equ	897	;# 
  2359   000382                     PRODSH          equ	898	;# 
  2360   000382                     PRODL_SHAD      equ	898	;# 
  2361   000383                     PRODH_SHAD      equ	899	;# 
  2362   0003BC                     CWG1CLK         equ	956	;# 
  2363   0003BC                     CWG1CLKCON      equ	956	;# 
  2364   0003BD                     CWG1ISM         equ	957	;# 
  2365   0003BD                     CWG1DAT         equ	957	;# 
  2366   0003BE                     CWG1DBR         equ	958	;# 
  2367   0003BF                     CWG1DBF         equ	959	;# 
  2368   0003C0                     CWG1CON0        equ	960	;# 
  2369   0003C1                     CWG1CON1        equ	961	;# 
  2370   0003C2                     CWG1AS0         equ	962	;# 
  2371   0003C3                     CWG1AS1         equ	963	;# 
  2372   0003C4                     CWG1STR         equ	964	;# 
  2373   0003C5                     CWG2CLK         equ	965	;# 
  2374   0003C5                     CWG2CLKCON      equ	965	;# 
  2375   0003C6                     CWG2ISM         equ	966	;# 
  2376   0003C6                     CWG2DAT         equ	966	;# 
  2377   0003C7                     CWG2DBR         equ	967	;# 
  2378   0003C8                     CWG2DBF         equ	968	;# 
  2379   0003C9                     CWG2CON0        equ	969	;# 
  2380   0003CA                     CWG2CON1        equ	970	;# 
  2381   0003CB                     CWG2AS0         equ	971	;# 
  2382   0003CC                     CWG2AS1         equ	972	;# 
  2383   0003CD                     CWG2STR         equ	973	;# 
  2384   0003CE                     CWG3CLK         equ	974	;# 
  2385   0003CE                     CWG3CLKCON      equ	974	;# 
  2386   0003CF                     CWG3ISM         equ	975	;# 
  2387   0003CF                     CWG3DAT         equ	975	;# 
  2388   0003D0                     CWG3DBR         equ	976	;# 
  2389   0003D1                     CWG3DBF         equ	977	;# 
  2390   0003D2                     CWG3CON0        equ	978	;# 
  2391   0003D3                     CWG3CON1        equ	979	;# 
  2392   0003D4                     CWG3AS0         equ	980	;# 
  2393   0003D5                     CWG3AS1         equ	981	;# 
  2394   0003D6                     CWG3STR         equ	982	;# 
  2395   0003D7                     FVRCON          equ	983	;# 
  2396   0003D8                     ADCPCON         equ	984	;# 
  2397   0003D8                     ADCP            equ	984	;# 
  2398   0003D9                     ADLTH           equ	985	;# 
  2399   0003D9                     ADLTHL          equ	985	;# 
  2400   0003DA                     ADLTHH          equ	986	;# 
  2401   0003DB                     ADUTH           equ	987	;# 
  2402   0003DB                     ADUTHL          equ	987	;# 
  2403   0003DC                     ADUTHH          equ	988	;# 
  2404   0003DD                     ADERR           equ	989	;# 
  2405   0003DD                     ADERRL          equ	989	;# 
  2406   0003DE                     ADERRH          equ	990	;# 
  2407   0003DF                     ADSTPT          equ	991	;# 
  2408   0003DF                     ADSTPTL         equ	991	;# 
  2409   0003E0                     ADSTPTH         equ	992	;# 
  2410   0003E1                     ADFLTR          equ	993	;# 
  2411   0003E1                     ADFLTRL         equ	993	;# 
  2412   0003E2                     ADFLTRH         equ	994	;# 
  2413   0003E3                     ADACC           equ	995	;# 
  2414   0003E3                     ADACCL          equ	995	;# 
  2415   0003E4                     ADACCH          equ	996	;# 
  2416   0003E5                     ADACCU          equ	997	;# 
  2417   0003E6                     ADCNT           equ	998	;# 
  2418   0003E7                     ADRPT           equ	999	;# 
  2419   0003E8                     ADPREV          equ	1000	;# 
  2420   0003E8                     ADPREVL         equ	1000	;# 
  2421   0003E9                     ADPREVH         equ	1001	;# 
  2422   0003EA                     ADRES           equ	1002	;# 
  2423   0003EA                     ADRESL          equ	1002	;# 
  2424   0003EB                     ADRESH          equ	1003	;# 
  2425   0003EC                     ADPCH           equ	1004	;# 
  2426   0003EE                     ADACQ           equ	1006	;# 
  2427   0003EE                     ADACQL          equ	1006	;# 
  2428   0003EF                     ADACQH          equ	1007	;# 
  2429   0003F0                     ADCAP           equ	1008	;# 
  2430   0003F1                     ADPRE           equ	1009	;# 
  2431   0003F1                     ADPREL          equ	1009	;# 
  2432   0003F2                     ADPREH          equ	1010	;# 
  2433   0003F3                     ADCON0          equ	1011	;# 
  2434   0003F4                     ADCON1          equ	1012	;# 
  2435   0003F5                     ADCON2          equ	1013	;# 
  2436   0003F6                     ADCON3          equ	1014	;# 
  2437   0003F7                     ADSTAT          equ	1015	;# 
  2438   0003F8                     ADREF           equ	1016	;# 
  2439   0003F9                     ADACT           equ	1017	;# 
  2440   0003FA                     ADCLK           equ	1018	;# 
  2441   000400                     ANSELA          equ	1024	;# 
  2442   000401                     WPUA            equ	1025	;# 
  2443   000402                     ODCONA          equ	1026	;# 
  2444   000403                     SLRCONA         equ	1027	;# 
  2445   000404                     INLVLA          equ	1028	;# 
  2446   000405                     IOCAP           equ	1029	;# 
  2447   000406                     IOCAN           equ	1030	;# 
  2448   000407                     IOCAF           equ	1031	;# 
  2449   000408                     ANSELB          equ	1032	;# 
  2450   000409                     WPUB            equ	1033	;# 
  2451   00040A                     ODCONB          equ	1034	;# 
  2452   00040B                     SLRCONB         equ	1035	;# 
  2453   00040C                     INLVLB          equ	1036	;# 
  2454   00040D                     IOCBP           equ	1037	;# 
  2455   00040E                     IOCBN           equ	1038	;# 
  2456   00040F                     IOCBF           equ	1039	;# 
  2457   000410                     ANSELC          equ	1040	;# 
  2458   000411                     WPUC            equ	1041	;# 
  2459   000412                     ODCONC          equ	1042	;# 
  2460   000413                     SLRCONC         equ	1043	;# 
  2461   000414                     INLVLC          equ	1044	;# 
  2462   000415                     IOCCP           equ	1045	;# 
  2463   000416                     IOCCN           equ	1046	;# 
  2464   000417                     IOCCF           equ	1047	;# 
  2465   000418                     ANSELD          equ	1048	;# 
  2466   000419                     WPUD            equ	1049	;# 
  2467   00041A                     ODCOND          equ	1050	;# 
  2468   00041B                     SLRCOND         equ	1051	;# 
  2469   00041C                     INLVLD          equ	1052	;# 
  2470   000420                     ANSELE          equ	1056	;# 
  2471   000421                     WPUE            equ	1057	;# 
  2472   000422                     ODCONE          equ	1058	;# 
  2473   000423                     SLRCONE         equ	1059	;# 
  2474   000424                     INLVLE          equ	1060	;# 
  2475   000425                     IOCEP           equ	1061	;# 
  2476   000426                     IOCEN           equ	1062	;# 
  2477   000427                     IOCEF           equ	1063	;# 
  2478   000428                     ANSELF          equ	1064	;# 
  2479   000429                     WPUF            equ	1065	;# 
  2480   00042A                     ODCONF          equ	1066	;# 
  2481   00042B                     SLRCONF         equ	1067	;# 
  2482   00042C                     INLVLF          equ	1068	;# 
  2483   000440                     NCO1ACC         equ	1088	;# 
  2484   000440                     NCO1ACCL        equ	1088	;# 
  2485   000441                     NCO1ACCH        equ	1089	;# 
  2486   000442                     NCO1ACCU        equ	1090	;# 
  2487   000443                     NCO1INC         equ	1091	;# 
  2488   000443                     NCO1INCL        equ	1091	;# 
  2489   000444                     NCO1INCH        equ	1092	;# 
  2490   000445                     NCO1INCU        equ	1093	;# 
  2491   000446                     NCO1CON         equ	1094	;# 
  2492   000447                     NCO1CLK         equ	1095	;# 
  2493   000448                     NCO2ACC         equ	1096	;# 
  2494   000448                     NCO2ACCL        equ	1096	;# 
  2495   000449                     NCO2ACCH        equ	1097	;# 
  2496   00044A                     NCO2ACCU        equ	1098	;# 
  2497   00044B                     NCO2INC         equ	1099	;# 
  2498   00044B                     NCO2INCL        equ	1099	;# 
  2499   00044C                     NCO2INCH        equ	1100	;# 
  2500   00044D                     NCO2INCU        equ	1101	;# 
  2501   00044E                     NCO2CON         equ	1102	;# 
  2502   00044F                     NCO2CLK         equ	1103	;# 
  2503   000450                     NCO3ACC         equ	1104	;# 
  2504   000450                     NCO3ACCL        equ	1104	;# 
  2505   000451                     NCO3ACCH        equ	1105	;# 
  2506   000452                     NCO3ACCU        equ	1106	;# 
  2507   000453                     NCO3INC         equ	1107	;# 
  2508   000453                     NCO3INCL        equ	1107	;# 
  2509   000454                     NCO3INCH        equ	1108	;# 
  2510   000455                     NCO3INCU        equ	1109	;# 
  2511   000456                     NCO3CON         equ	1110	;# 
  2512   000457                     NCO3CLK         equ	1111	;# 
  2513   000459                     IVTLOCK         equ	1113	;# 
  2514   00045A                     IVTAD           equ	1114	;# 
  2515   00045A                     IVTADL          equ	1114	;# 
  2516   00045B                     IVTADH          equ	1115	;# 
  2517   00045C                     IVTADU          equ	1116	;# 
  2518   00045D                     IVTBASE         equ	1117	;# 
  2519   00045D                     IVTBASEL        equ	1117	;# 
  2520   00045E                     IVTBASEH        equ	1118	;# 
  2521   00045F                     IVTBASEU        equ	1119	;# 
  2522   000460                     PWM1ERS         equ	1120	;# 
  2523   000461                     PWM1CLK         equ	1121	;# 
  2524   000462                     PWM1LDS         equ	1122	;# 
  2525   000463                     PWM1PR          equ	1123	;# 
  2526   000463                     PWM1PRL         equ	1123	;# 
  2527   000464                     PWM1PRH         equ	1124	;# 
  2528   000465                     PWM1CPRE        equ	1125	;# 
  2529   000466                     PWM1PIPOS       equ	1126	;# 
  2530   000467                     PWM1GIR         equ	1127	;# 
  2531   000468                     PWM1GIE         equ	1128	;# 
  2532   000469                     PWM1CON         equ	1129	;# 
  2533   00046A                     PWM1S1CFG       equ	1130	;# 
  2534   00046B                     PWM1S1P1        equ	1131	;# 
  2535   00046B                     PWM1S1P1L       equ	1131	;# 
  2536   00046C                     PWM1S1P1H       equ	1132	;# 
  2537   00046D                     PWM1S1P2        equ	1133	;# 
  2538   00046D                     PWM1S1P2L       equ	1133	;# 
  2539   00046E                     PWM1S1P2H       equ	1134	;# 
  2540   00046F                     PWM2ERS         equ	1135	;# 
  2541   000470                     PWM2CLK         equ	1136	;# 
  2542   000471                     PWM2LDS         equ	1137	;# 
  2543   000472                     PWM2PR          equ	1138	;# 
  2544   000472                     PWM2PRL         equ	1138	;# 
  2545   000473                     PWM2PRH         equ	1139	;# 
  2546   000474                     PWM2CPRE        equ	1140	;# 
  2547   000475                     PWM2PIPOS       equ	1141	;# 
  2548   000476                     PWM2GIR         equ	1142	;# 
  2549   000477                     PWM2GIE         equ	1143	;# 
  2550   000478                     PWM2CON         equ	1144	;# 
  2551   000479                     PWM2S1CFG       equ	1145	;# 
  2552   00047A                     PWM2S1P1        equ	1146	;# 
  2553   00047A                     PWM2S1P1L       equ	1146	;# 
  2554   00047B                     PWM2S1P1H       equ	1147	;# 
  2555   00047C                     PWM2S1P2        equ	1148	;# 
  2556   00047C                     PWM2S1P2L       equ	1148	;# 
  2557   00047D                     PWM2S1P2H       equ	1149	;# 
  2558   00047E                     PWM3ERS         equ	1150	;# 
  2559   00047F                     PWM3CLK         equ	1151	;# 
  2560   000480                     PWM3LDS         equ	1152	;# 
  2561   000481                     PWM3PR          equ	1153	;# 
  2562   000481                     PWM3PRL         equ	1153	;# 
  2563   000482                     PWM3PRH         equ	1154	;# 
  2564   000483                     PWM3CPRE        equ	1155	;# 
  2565   000484                     PWM3PIPOS       equ	1156	;# 
  2566   000485                     PWM3GIR         equ	1157	;# 
  2567   000486                     PWM3GIE         equ	1158	;# 
  2568   000487                     PWM3CON         equ	1159	;# 
  2569   000488                     PWM3S1CFG       equ	1160	;# 
  2570   000489                     PWM3S1P1        equ	1161	;# 
  2571   000489                     PWM3S1P1L       equ	1161	;# 
  2572   00048A                     PWM3S1P1H       equ	1162	;# 
  2573   00048B                     PWM3S1P2        equ	1163	;# 
  2574   00048B                     PWM3S1P2L       equ	1163	;# 
  2575   00048C                     PWM3S1P2H       equ	1164	;# 
  2576   00049C                     PWMLOAD         equ	1180	;# 
  2577   00049D                     PWMEN           equ	1181	;# 
  2578   00049E                     PIE0            equ	1182	;# 
  2579   00049F                     PIE1            equ	1183	;# 
  2580   0004A0                     PIE2            equ	1184	;# 
  2581   0004A1                     PIE3            equ	1185	;# 
  2582   0004A2                     PIE4            equ	1186	;# 
  2583   0004A3                     PIE5            equ	1187	;# 
  2584   0004A4                     PIE6            equ	1188	;# 
  2585   0004A5                     PIE7            equ	1189	;# 
  2586   0004A6                     PIE8            equ	1190	;# 
  2587   0004A7                     PIE9            equ	1191	;# 
  2588   0004A8                     PIE10           equ	1192	;# 
  2589   0004A9                     PIE11           equ	1193	;# 
  2590   0004AA                     PIE12           equ	1194	;# 
  2591   0004AB                     PIE13           equ	1195	;# 
  2592   0004AC                     PIE14           equ	1196	;# 
  2593   0004AD                     PIE15           equ	1197	;# 
  2594   0004AE                     PIR0            equ	1198	;# 
  2595   0004AF                     PIR1            equ	1199	;# 
  2596   0004B0                     PIR2            equ	1200	;# 
  2597   0004B1                     PIR3            equ	1201	;# 
  2598   0004B2                     PIR4            equ	1202	;# 
  2599   0004B3                     PIR5            equ	1203	;# 
  2600   0004B4                     PIR6            equ	1204	;# 
  2601   0004B5                     PIR7            equ	1205	;# 
  2602   0004B6                     PIR8            equ	1206	;# 
  2603   0004B7                     PIR9            equ	1207	;# 
  2604   0004B8                     PIR10           equ	1208	;# 
  2605   0004B9                     PIR11           equ	1209	;# 
  2606   0004BA                     PIR12           equ	1210	;# 
  2607   0004BB                     PIR13           equ	1211	;# 
  2608   0004BC                     PIR14           equ	1212	;# 
  2609   0004BD                     PIR15           equ	1213	;# 
  2610   0004BE                     LATA            equ	1214	;# 
  2611   0004BF                     LATB            equ	1215	;# 
  2612   0004C0                     LATC            equ	1216	;# 
  2613   0004C1                     LATD            equ	1217	;# 
  2614   0004C2                     LATE            equ	1218	;# 
  2615   0004C3                     LATF            equ	1219	;# 
  2616   0004C6                     TRISA           equ	1222	;# 
  2617   0004C7                     TRISB           equ	1223	;# 
  2618   0004C8                     TRISC           equ	1224	;# 
  2619   0004C9                     TRISD           equ	1225	;# 
  2620   0004CA                     TRISE           equ	1226	;# 
  2621   0004CB                     TRISF           equ	1227	;# 
  2622   0004CE                     PORTA           equ	1230	;# 
  2623   0004CF                     PORTB           equ	1231	;# 
  2624   0004D0                     PORTC           equ	1232	;# 
  2625   0004D1                     PORTD           equ	1233	;# 
  2626   0004D2                     PORTE           equ	1234	;# 
  2627   0004D3                     PORTF           equ	1235	;# 
  2628   0004D6                     INTCON0         equ	1238	;# 
  2629   0004D7                     INTCON1         equ	1239	;# 
  2630   0004D8                     STATUS          equ	1240	;# 
  2631   0004D9                     FSR2            equ	1241	;# 
  2632   0004D9                     FSR2L           equ	1241	;# 
  2633   0004DA                     FSR2H           equ	1242	;# 
  2634   0004DB                     PLUSW2          equ	1243	;# 
  2635   0004DC                     PREINC2         equ	1244	;# 
  2636   0004DD                     POSTDEC2        equ	1245	;# 
  2637   0004DE                     POSTINC2        equ	1246	;# 
  2638   0004DF                     INDF2           equ	1247	;# 
  2639   0004E0                     BSR             equ	1248	;# 
  2640   0004E1                     FSR1            equ	1249	;# 
  2641   0004E1                     FSR1L           equ	1249	;# 
  2642   0004E2                     FSR1H           equ	1250	;# 
  2643   0004E3                     PLUSW1          equ	1251	;# 
  2644   0004E4                     PREINC1         equ	1252	;# 
  2645   0004E5                     POSTDEC1        equ	1253	;# 
  2646   0004E6                     POSTINC1        equ	1254	;# 
  2647   0004E7                     INDF1           equ	1255	;# 
  2648   0004E8                     WREG            equ	1256	;# 
  2649   0004E9                     FSR0            equ	1257	;# 
  2650   0004E9                     FSR0L           equ	1257	;# 
  2651   0004EA                     FSR0H           equ	1258	;# 
  2652   0004EB                     PLUSW0          equ	1259	;# 
  2653   0004EC                     PREINC0         equ	1260	;# 
  2654   0004ED                     POSTDEC0        equ	1261	;# 
  2655   0004EE                     POSTINC0        equ	1262	;# 
  2656   0004EF                     INDF0           equ	1263	;# 
  2657   0004F0                     PCON0           equ	1264	;# 
  2658   0004F1                     PCON1           equ	1265	;# 
  2659   0004F2                     CPUDOZE         equ	1266	;# 
  2660   0004F3                     PROD            equ	1267	;# 
  2661   0004F3                     PRODL           equ	1267	;# 
  2662   0004F4                     PRODH           equ	1268	;# 
  2663   0004F5                     TABLAT          equ	1269	;# 
  2664   0004F6                     TBLPTR          equ	1270	;# 
  2665   0004F6                     TBLPTRL         equ	1270	;# 
  2666   0004F7                     TBLPTRH         equ	1271	;# 
  2667   0004F8                     TBLPTRU         equ	1272	;# 
  2668   0004F9                     PCLAT           equ	1273	;# 
  2669   0004F9                     PCL             equ	1273	;# 
  2670   0004FA                     PCLATH          equ	1274	;# 
  2671   0004FB                     PCLATU          equ	1275	;# 
  2672   0004FC                     STKPTR          equ	1276	;# 
  2673   0004FD                     TOS             equ	1277	;# 
  2674   0004FD                     TOSL            equ	1277	;# 
  2675   0004FE                     TOSH            equ	1278	;# 
  2676   0004FF                     TOSU            equ	1279	;# 
  2677   0000B3                     _OSCEN          set	179
  2678   0000B1                     _OSCFRQ         set	177
  2679   0000AD                     _OSCCON1        set	173
  2680   000420                     _ANSELE         set	1056
  2681   000410                     _ANSELCbits     set	1040
  2682   000418                     _ANSELD         set	1048
  2683   0004C2                     _LATEbits       set	1218
  2684   0004C0                     _LATCbits       set	1216
  2685   0004CA                     _TRISE          set	1226
  2686   0004C8                     _TRISCbits      set	1224
  2687   0004D1                     _PORTD          set	1233
  2688   0004C9                     _TRISD          set	1225
  2689   0004C1                     _LATD           set	1217
  2690   0004C1                     _LATDbits       set	1217
  2691                           
  2692                           	psect	smallconst
  2693   002600                     __psmallconst:
  2694                           	callstack 0
  2695   002600  00                 	db	0
  2696   002601                     STR_3:
  2697   002601  43                 	db	67	;'C'
  2698   002602  4F                 	db	79	;'O'
  2699   002603  4E                 	db	78	;'N'
  2700   002604  54                 	db	84	;'T'
  2701   002605  41                 	db	65	;'A'
  2702   002606  44                 	db	68	;'D'
  2703   002607  4F                 	db	79	;'O'
  2704   002608  52                 	db	82	;'R'
  2705   002609  3A                 	db	58	;':'
  2706   00260A  20                 	db	32
  2707   00260B  20                 	db	32
  2708   00260C  20                 	db	32
  2709   00260D  20                 	db	32
  2710   00260E  20                 	db	32
  2711   00260F  20                 	db	32
  2712   002610  20                 	db	32
  2713   002611  00                 	db	0
  2714   002612                     STR_1:
  2715   002612  50                 	db	80	;'P'
  2716   002613  72                 	db	114	;'r'
  2717   002614  75                 	db	117	;'u'
  2718   002615  65                 	db	101	;'e'
  2719   002616  62                 	db	98	;'b'
  2720   002617  61                 	db	97	;'a'
  2721   002618  20                 	db	32
  2722   002619  4D                 	db	77	;'M'
  2723   00261A  41                 	db	65	;'A'
  2724   00261B  58                 	db	88	;'X'
  2725   00261C  37                 	db	55	;'7'
  2726   00261D  32                 	db	50	;'2'
  2727   00261E  31                 	db	49	;'1'
  2728   00261F  39                 	db	57	;'9'
  2729   002620  00                 	db	0
  2730   002621                     STR_2:
  2731   002621  49                 	db	73	;'I'
  2732   002622  6E                 	db	110	;'n'
  2733   002623  69                 	db	105	;'i'
  2734   002624  63                 	db	99	;'c'
  2735   002625  69                 	db	105	;'i'
  2736   002626  61                 	db	97	;'a'
  2737   002627  6C                 	db	108	;'l'
  2738   002628  69                 	db	105	;'i'
  2739   002629  7A                 	db	122	;'z'
  2740   00262A  61                 	db	97	;'a'
  2741   00262B  63                 	db	99	;'c'
  2742   00262C  69                 	db	105	;'i'
  2743   00262D  6F                 	db	111	;'o'
  2744   00262E  6E                 	db	110	;'n'
  2745   00262F  00                 	db	0
  2746   002630  00                 	db	0	; dummy byte at the end
  2747   000003                     __activetblptr  equ	3
  2748                           
  2749                           ; #config settings
  2750                           
  2751                           	psect	cinit
  2752   003080                     __pcinit:
  2753                           	callstack 0
  2754   003080                     start_initialization:
  2755                           	callstack 0
  2756   003080                     __initialization:
  2757                           	callstack 0
  2758   003080                     end_of_initialization:
  2759                           	callstack 0
  2760   003080                     __end_of__initialization:
  2761                           	callstack 0
  2762   003080  0100               	movlb	0
  2763   003082  EFEE  F014         	goto	_main	;jump to C main() function
  2764                           
  2765                           	psect	cstackCOMRAM
  2766   000501                     __pcstackCOMRAM:
  2767                           	callstack 0
  2768   000501                     ?_strlen:
  2769                           	callstack 0
  2770   000501                     ?___lwmod:
  2771                           	callstack 0
  2772   000501                     MAX7219_WriteData2@dato:
  2773                           	callstack 0
  2774   000501                     strlen@s:
  2775                           	callstack 0
  2776   000501                     ___lwmod@dividend:
  2777                           	callstack 0
  2778   000501                     ??_ENVIA_NIBBLE:
  2779                           
  2780                           ; 1 bytes @ 0x0
  2781   000501                     	ds	1
  2782   000502                     ENVIA_NIBBLE@dato:
  2783                           	callstack 0
  2784   000502                     ??_MAX7219_WriteData2:
  2785                           
  2786                           ; 1 bytes @ 0x1
  2787   000502                     	ds	1
  2788   000503                     strlen@a:
  2789                           	callstack 0
  2790   000503                     ___lwmod@divisor:
  2791                           	callstack 0
  2792   000503                     ??_ENVIA_LCD_CMD:
  2793   000503                     ??_ENVIA_CHAR:
  2794   000503                     
  2795                           ; 1 bytes @ 0x2
  2796   000503                     	ds	1
  2797   000504                     ENVIA_CHAR@dato:
  2798                           	callstack 0
  2799   000504                     ENVIA_LCD_CMD@dato:
  2800                           	callstack 0
  2801   000504                     MAX7219_WriteData2@comando:
  2802                           	callstack 0
  2803                           
  2804                           ; 1 bytes @ 0x3
  2805   000504                     	ds	1
  2806   000505                     ENVIA_CHAR@aux:
  2807                           	callstack 0
  2808   000505                     ENVIA_LCD_CMD@aux:
  2809                           	callstack 0
  2810   000505                     MAX7219_WriteData2@var_x:
  2811                           	callstack 0
  2812   000505                     ___lwmod@counter:
  2813                           	callstack 0
  2814   000505                     
  2815                           ; 1 bytes @ 0x4
  2816   000505                     	ds	1
  2817   000506                     ?___lwdiv:
  2818                           	callstack 0
  2819   000506                     POS_CURSOR@columna:
  2820                           	callstack 0
  2821   000506                     CURSOR_ONOFF@estado:
  2822                           	callstack 0
  2823   000506                     ESCRIBE_MENSAJE2@cadena:
  2824                           	callstack 0
  2825   000506                     ___lwdiv@dividend:
  2826                           	callstack 0
  2827   000506                     ??_LCD_CONFIG:
  2828                           
  2829                           ; 1 bytes @ 0x5
  2830   000506                     	ds	1
  2831   000507                     POS_CURSOR@fila:
  2832                           	callstack 0
  2833   000507                     ??_LCD_INIT:
  2834   000507                     ??_ESCRIBE_MENSAJE2:
  2835                           
  2836                           ; 1 bytes @ 0x6
  2837   000507                     	ds	1
  2838   000508                     ESCRIBE_MENSAJE2@tam:
  2839                           	callstack 0
  2840   000508                     ___lwdiv@divisor:
  2841                           	callstack 0
  2842                           
  2843                           ; 2 bytes @ 0x7
  2844   000508                     	ds	1
  2845   000509                     ESCRIBE_MENSAJE2@i:
  2846                           	callstack 0
  2847   000509                     
  2848                           ; 1 bytes @ 0x8
  2849   000509                     	ds	1
  2850   00050A                     ___lwdiv@quotient:
  2851                           	callstack 0
  2852   00050A                     
  2853                           ; 1 bytes @ 0x9
  2854   00050A                     	ds	2
  2855   00050C                     ___lwdiv@counter:
  2856                           	callstack 0
  2857                           
  2858                           ; 1 bytes @ 0xB
  2859   00050C                     	ds	1
  2860   00050D                     MAX7219_WriteData@dato:
  2861                           	callstack 0
  2862   00050D                     LCD_ESCRIBE_VAR_INT@numero:
  2863                           	callstack 0
  2864                           
  2865                           ; 2 bytes @ 0xC
  2866   00050D                     	ds	1
  2867   00050E                     ??_MAX7219_WriteData:
  2868                           
  2869                           ; 1 bytes @ 0xD
  2870   00050E                     	ds	1
  2871   00050F                     LCD_ESCRIBE_VAR_INT@n_digitos:
  2872                           	callstack 0
  2873                           
  2874                           ; 1 bytes @ 0xE
  2875   00050F                     	ds	1
  2876   000510                     LCD_ESCRIBE_VAR_INT@punto:
  2877                           	callstack 0
  2878                           
  2879                           ; 1 bytes @ 0xF
  2880   000510                     	ds	1
  2881   000511                     LCD_ESCRIBE_VAR_INT@d_millar:
  2882                           	callstack 0
  2883   000511                     MAX7219_WriteData@temporal_data:
  2884                           	callstack 0
  2885   000511                     
  2886                           ; 1 bytes @ 0x10
  2887   000511                     	ds	1
  2888   000512                     LCD_ESCRIBE_VAR_INT@millar:
  2889                           	callstack 0
  2890                           
  2891                           ; 1 bytes @ 0x11
  2892   000512                     	ds	1
  2893   000513                     LCD_ESCRIBE_VAR_INT@centena:
  2894                           	callstack 0
  2895   000513                     MAX7219_WriteData@comando:
  2896                           	callstack 0
  2897                           
  2898                           ; 1 bytes @ 0x12
  2899   000513                     	ds	1
  2900   000514                     LCD_ESCRIBE_VAR_INT@decena:
  2901                           	callstack 0
  2902   000514                     MAX7219_WriteData@tmp_int:
  2903                           	callstack 0
  2904                           
  2905                           ; 2 bytes @ 0x13
  2906   000514                     	ds	1
  2907   000515                     LCD_ESCRIBE_VAR_INT@unidad:
  2908                           	callstack 0
  2909                           
  2910                           ; 1 bytes @ 0x14
  2911   000515                     	ds	1
  2912   000516                     MAX7219_WriteData@var_x:
  2913                           	callstack 0
  2914                           
  2915                           ; 1 bytes @ 0x15
  2916   000516                     	ds	1
  2917   000517                     ??_main:
  2918                           
  2919                           ; 1 bytes @ 0x16
  2920   000517                     	ds	2
  2921   000519                     main@contador:
  2922                           	callstack 0
  2923                           
  2924                           ; 2 bytes @ 0x18
  2925   000519                     	ds	2
  2926                           
  2927 ;;
  2928 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2929 ;;
  2930 ;; *************** function _main *****************
  2931 ;; Defined at:
  2932 ;;		line 22 in file "maincode01.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  contador        2   24[COMRAM] unsigned int 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2948 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2949 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2950 ;;Total ram usage:        4 bytes
  2951 ;; Hardware stack levels required when called: 5
  2952 ;; This function calls:
  2953 ;;		_ESCRIBE_MENSAJE2
  2954 ;;		_LCD_ESCRIBE_VAR_INT
  2955 ;;		_MAX7219_WriteData
  2956 ;;		_POS_CURSOR
  2957 ;;		___lwdiv
  2958 ;;		___lwmod
  2959 ;;		_configuro
  2960 ;; This function is called by:
  2961 ;;		Startup code after reset
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text0
  2966   0029DC                     __ptext0:
  2967                           	callstack 0
  2968   0029DC                     _main:
  2969                           	callstack 122
  2970   0029DC                     
  2971                           ;maincode01.c: 23:     configuro();
  2972   0029DC  EC2C  F018         	call	_configuro	;wreg free
  2973                           
  2974                           ;maincode01.c: 24:     POS_CURSOR(1,0);
  2975   0029E0  0E00               	movlw	0
  2976   0029E2  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
  2977   0029E4  0E01               	movlw	1
  2978   0029E6  EC68  F016         	call	_POS_CURSOR
  2979   0029EA                     
  2980                           ;maincode01.c: 25:     ESCRIBE_MENSAJE2("Prueba MAX7219");
  2981   0029EA  0E12               	movlw	low STR_1
  2982   0029EC  6E06               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2983   0029EE  EC91  F017         	call	_ESCRIBE_MENSAJE2	;wreg free
  2984   0029F2                     
  2985                           ;maincode01.c: 26:     POS_CURSOR(2,0);
  2986   0029F2  0E00               	movlw	0
  2987   0029F4  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
  2988   0029F6  0E02               	movlw	2
  2989   0029F8  EC68  F016         	call	_POS_CURSOR
  2990                           
  2991                           ;maincode01.c: 27:     ESCRIBE_MENSAJE2("Inicializacion");
  2992   0029FC  0E21               	movlw	low STR_2
  2993   0029FE  6E06               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2994   002A00  EC91  F017         	call	_ESCRIBE_MENSAJE2	;wreg free
  2995   002A04                     
  2996                           ;maincode01.c: 28:     MAX7219_WriteData(0x01, 0x00);
  2997   002A04  0E00               	movlw	0
  2998   002A06  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  2999   002A08  0E01               	movlw	1
  3000   002A0A  EC21  F016         	call	_MAX7219_WriteData
  3001   002A0E                     
  3002                           ;maincode01.c: 29:     MAX7219_WriteData(0x02, 0x5B);
  3003   002A0E  0E5B               	movlw	91
  3004   002A10  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3005   002A12  0E02               	movlw	2
  3006   002A14  EC21  F016         	call	_MAX7219_WriteData
  3007   002A18                     
  3008                           ;maincode01.c: 30:     MAX7219_WriteData(0x03, 0x7E);
  3009   002A18  0E7E               	movlw	126
  3010   002A1A  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3011   002A1C  0E03               	movlw	3
  3012   002A1E  EC21  F016         	call	_MAX7219_WriteData
  3013   002A22                     
  3014                           ;maincode01.c: 31:     MAX7219_WriteData(0x04, 0x5B);
  3015   002A22  0E5B               	movlw	91
  3016   002A24  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3017   002A26  0E04               	movlw	4
  3018   002A28  EC21  F016         	call	_MAX7219_WriteData
  3019   002A2C                     
  3020                           ;maincode01.c: 32:     MAX7219_WriteData(0x05, 0x3E);
  3021   002A2C  0E3E               	movlw	62
  3022   002A2E  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3023   002A30  0E05               	movlw	5
  3024   002A32  EC21  F016         	call	_MAX7219_WriteData
  3025   002A36                     
  3026                           ;maincode01.c: 33:     MAX7219_WriteData(0x06, 0x0E);
  3027   002A36  0E0E               	movlw	14
  3028   002A38  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3029   002A3A  0E06               	movlw	6
  3030   002A3C  EC21  F016         	call	_MAX7219_WriteData
  3031   002A40                     
  3032                           ;maincode01.c: 34:     MAX7219_WriteData(0x07, 0x06);
  3033   002A40  0E06               	movlw	6
  3034   002A42  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3035   002A44  0E07               	movlw	7
  3036   002A46  EC21  F016         	call	_MAX7219_WriteData
  3037   002A4A                     
  3038                           ;maincode01.c: 35:     MAX7219_WriteData(0x08, 0x00);
  3039   002A4A  0E00               	movlw	0
  3040   002A4C  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3041   002A4E  0E08               	movlw	8
  3042   002A50  EC21  F016         	call	_MAX7219_WriteData
  3043   002A54                     
  3044                           ;maincode01.c: 36:     _delay((unsigned long)((5000)*(32000000UL/4000.0)));
  3045   002A54  0ECB               	movlw	203
  3046   002A56  6E18               	movwf	(??_main+1)^(0+1280),c
  3047   002A58  0EEC               	movlw	236
  3048   002A5A  6E17               	movwf	??_main^(0+1280),c
  3049   002A5C  0E84               	movlw	132
  3050   002A5E                     u617:
  3051   002A5E  2EE8               	decfsz	wreg,f,c
  3052   002A60  D7FE               	bra	u617
  3053   002A62  2E17               	decfsz	??_main^(0+1280),f,c
  3054   002A64  D7FC               	bra	u617
  3055   002A66  2E18               	decfsz	(??_main+1)^(0+1280),f,c
  3056   002A68  D7FA               	bra	u617
  3057   002A6A  D000               	nop2	
  3058   002A6C                     
  3059                           ;maincode01.c: 37:     POS_CURSOR(2,0);
  3060   002A6C  0E00               	movlw	0
  3061   002A6E  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
  3062   002A70  0E02               	movlw	2
  3063   002A72  EC68  F016         	call	_POS_CURSOR
  3064   002A76                     
  3065                           ;maincode01.c: 38:     ESCRIBE_MENSAJE2("CONTADOR:       ");
  3066   002A76  0E01               	movlw	low STR_3
  3067   002A78  6E06               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
  3068   002A7A  EC91  F017         	call	_ESCRIBE_MENSAJE2	;wreg free
  3069   002A7E                     
  3070                           ;maincode01.c: 39:     MAX7219_WriteData(0x09, 0x0F);
  3071   002A7E  0E0F               	movlw	15
  3072   002A80  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3073   002A82  0E09               	movlw	9
  3074   002A84  EC21  F016         	call	_MAX7219_WriteData
  3075   002A88                     
  3076                           ;maincode01.c: 40:     MAX7219_WriteData(0x08, 0x4E);
  3077   002A88  0E4E               	movlw	78
  3078   002A8A  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3079   002A8C  0E08               	movlw	8
  3080   002A8E  EC21  F016         	call	_MAX7219_WriteData
  3081   002A92                     
  3082                           ;maincode01.c: 41:     MAX7219_WriteData(0x07, 0x1D);
  3083   002A92  0E1D               	movlw	29
  3084   002A94  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3085   002A96  0E07               	movlw	7
  3086   002A98  EC21  F016         	call	_MAX7219_WriteData
  3087   002A9C                     
  3088                           ;maincode01.c: 42:     MAX7219_WriteData(0x06, 0x15);
  3089   002A9C  0E15               	movlw	21
  3090   002A9E  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3091   002AA0  0E06               	movlw	6
  3092   002AA2  EC21  F016         	call	_MAX7219_WriteData
  3093   002AA6                     
  3094                           ;maincode01.c: 43:     MAX7219_WriteData(0x05, 0x0F);
  3095   002AA6  0E0F               	movlw	15
  3096   002AA8  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3097   002AAA  0E05               	movlw	5
  3098   002AAC  EC21  F016         	call	_MAX7219_WriteData
  3099   002AB0                     l1623:
  3100                           
  3101                           ;maincode01.c: 45:         unsigned int contador;;maincode01.c: 46:         for(contador
      +                          =0;contador<8000;contador++){
  3102   002AB0  0E00               	movlw	0
  3103   002AB2  6E1A               	movwf	(main@contador+1)^(0+1280),c
  3104   002AB4  0E00               	movlw	0
  3105   002AB6  6E19               	movwf	main@contador^(0+1280),c
  3106   002AB8                     l1629:
  3107                           
  3108                           ;maincode01.c: 47:             POS_CURSOR(2,9);
  3109   002AB8  0E09               	movlw	9
  3110   002ABA  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
  3111   002ABC  0E02               	movlw	2
  3112   002ABE  EC68  F016         	call	_POS_CURSOR
  3113                           
  3114                           ;maincode01.c: 48:             LCD_ESCRIBE_VAR_INT(contador, 4, 0);
  3115   002AC2  C519  F50D         	movff	main@contador,LCD_ESCRIBE_VAR_INT@numero
  3116   002AC6  C51A  F50E         	movff	main@contador+1,LCD_ESCRIBE_VAR_INT@numero+1
  3117   002ACA  0E04               	movlw	4
  3118   002ACC  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
  3119   002ACE  0E00               	movlw	0
  3120   002AD0  6E10               	movwf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),c
  3121   002AD2  EC19  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
  3122                           
  3123                           ;maincode01.c: 49:             MAX7219_WriteData(0x04, (contador/1000));
  3124   002AD6  C519  F506         	movff	main@contador,___lwdiv@dividend
  3125   002ADA  C51A  F507         	movff	main@contador+1,___lwdiv@dividend+1
  3126   002ADE  0E03               	movlw	3
  3127   002AE0  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  3128   002AE2  0EE8               	movlw	232
  3129   002AE4  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  3130   002AE6  ECA5  F016         	call	___lwdiv	;wreg free
  3131   002AEA  5006               	movf	?___lwdiv^(0+1280),w,c
  3132   002AEC  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3133   002AEE  0E04               	movlw	4
  3134   002AF0  EC21  F016         	call	_MAX7219_WriteData
  3135                           
  3136                           ;maincode01.c: 50:             MAX7219_WriteData(0x03, ((contador%1000)/100));
  3137   002AF4  0E03               	movlw	3
  3138   002AF6  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  3139   002AF8  0EE8               	movlw	232
  3140   002AFA  6E03               	movwf	___lwmod@divisor^(0+1280),c
  3141   002AFC  C519  F501         	movff	main@contador,___lwmod@dividend
  3142   002B00  C51A  F502         	movff	main@contador+1,___lwmod@dividend+1
  3143   002B04  ECDF  F016         	call	___lwmod	;wreg free
  3144   002B08  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  3145   002B0C  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  3146   002B10  0E00               	movlw	0
  3147   002B12  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  3148   002B14  0E64               	movlw	100
  3149   002B16  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  3150   002B18  ECA5  F016         	call	___lwdiv	;wreg free
  3151   002B1C  5006               	movf	?___lwdiv^(0+1280),w,c
  3152   002B1E  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3153   002B20  0E03               	movlw	3
  3154   002B22  EC21  F016         	call	_MAX7219_WriteData
  3155                           
  3156                           ;maincode01.c: 51:             MAX7219_WriteData(0x02, ((contador%100)/10));
  3157   002B26  0E00               	movlw	0
  3158   002B28  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  3159   002B2A  0E64               	movlw	100
  3160   002B2C  6E03               	movwf	___lwmod@divisor^(0+1280),c
  3161   002B2E  C519  F501         	movff	main@contador,___lwmod@dividend
  3162   002B32  C51A  F502         	movff	main@contador+1,___lwmod@dividend+1
  3163   002B36  ECDF  F016         	call	___lwmod	;wreg free
  3164   002B3A  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  3165   002B3E  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  3166   002B42  0E00               	movlw	0
  3167   002B44  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  3168   002B46  0E0A               	movlw	10
  3169   002B48  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  3170   002B4A  ECA5  F016         	call	___lwdiv	;wreg free
  3171   002B4E  5006               	movf	?___lwdiv^(0+1280),w,c
  3172   002B50  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3173   002B52  0E02               	movlw	2
  3174   002B54  EC21  F016         	call	_MAX7219_WriteData
  3175                           
  3176                           ;maincode01.c: 52:             MAX7219_WriteData(0x01, (contador%10));
  3177   002B58  C519  F501         	movff	main@contador,___lwmod@dividend
  3178   002B5C  C51A  F502         	movff	main@contador+1,___lwmod@dividend+1
  3179   002B60  0E00               	movlw	0
  3180   002B62  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  3181   002B64  0E0A               	movlw	10
  3182   002B66  6E03               	movwf	___lwmod@divisor^(0+1280),c
  3183   002B68  ECDF  F016         	call	___lwmod	;wreg free
  3184   002B6C  5001               	movf	?___lwmod^(0+1280),w,c
  3185   002B6E  6E0D               	movwf	MAX7219_WriteData@dato^(0+1280),c
  3186   002B70  0E01               	movlw	1
  3187   002B72  EC21  F016         	call	_MAX7219_WriteData
  3188   002B76                     
  3189                           ;maincode01.c: 54:         }
  3190   002B76  4A19               	infsnz	main@contador^(0+1280),f,c
  3191   002B78  2A1A               	incf	(main@contador+1)^(0+1280),f,c
  3192   002B7A  0E40               	movlw	64
  3193   002B7C  5C19               	subwf	main@contador^(0+1280),w,c
  3194   002B7E  0E1F               	movlw	31
  3195   002B80  581A               	subwfb	(main@contador+1)^(0+1280),w,c
  3196   002B82  A0D8               	btfss	status,0,c
  3197   002B84  EFC6  F015         	goto	u601
  3198   002B88  EFC8  F015         	goto	u600
  3199   002B8C                     u601:
  3200   002B8C  EF5C  F015         	goto	l1629
  3201   002B90                     u600:
  3202   002B90  EF58  F015         	goto	l1623
  3203   002B94  EFFE  F0FF         	goto	start
  3204   002B98                     __end_of_main:
  3205                           	callstack 0
  3206                           
  3207 ;; *************** function _configuro *****************
  3208 ;; Defined at:
  3209 ;;		line 14 in file "maincode01.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3227 ;;Total ram usage:        0 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; Hardware stack levels required when called: 4
  3230 ;; This function calls:
  3231 ;;		_LCD_INIT
  3232 ;;		_MAX7219_Init
  3233 ;; This function is called by:
  3234 ;;		_main
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           	psect	text1
  3239   003058                     __ptext1:
  3240                           	callstack 0
  3241   003058                     _configuro:
  3242                           	callstack 122
  3243   003058                     
  3244                           ;maincode01.c: 15:     OSCCON1 = 0x60;
  3245   003058  0E60               	movlw	96
  3246   00305A  0100               	movlb	0	; () banked
  3247   00305C  6FAD               	movwf	173,b	;volatile
  3248                           
  3249                           ;maincode01.c: 16:     OSCFRQ = 0x06;
  3250   00305E  0E06               	movlw	6
  3251   003060  6FB1               	movwf	177,b	;volatile
  3252                           
  3253                           ;maincode01.c: 17:     OSCEN = 0x40;
  3254   003062  0E40               	movlw	64
  3255   003064  6FB3               	movwf	179,b	;volatile
  3256   003066                     
  3257                           ; BSR set to: 0
  3258                           ;maincode01.c: 18:     MAX7219_Init();
  3259   003066  EC6B  F017         	call	_MAX7219_Init	;wreg free
  3260   00306A                     
  3261                           ;maincode01.c: 19:     LCD_INIT();
  3262   00306A  EC11  F017         	call	_LCD_INIT	;wreg free
  3263   00306E  0012               	return		;funcret
  3264   003070                     __end_of_configuro:
  3265                           	callstack 0
  3266                           
  3267 ;; *************** function _MAX7219_Init *****************
  3268 ;; Defined at:
  3269 ;;		line 11 in file "MAX7219.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      void 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3287 ;;Total ram usage:        0 bytes
  3288 ;; Hardware stack levels used: 1
  3289 ;; Hardware stack levels required when called: 1
  3290 ;; This function calls:
  3291 ;;		_MAX7219_WriteData2
  3292 ;; This function is called by:
  3293 ;;		_configuro
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text2
  3298   002ED6                     __ptext2:
  3299                           	callstack 0
  3300   002ED6                     _MAX7219_Init:
  3301                           	callstack 124
  3302   002ED6                     
  3303                           ;MAX7219.c: 12:     TRISCbits.TRISC0 = 0;
  3304   002ED6  90C8               	bcf	200,0,c	;volatile
  3305                           
  3306                           ;MAX7219.c: 13:     ANSELCbits.ANSELC0 = 0;
  3307   002ED8  0104               	movlb	4	; () banked
  3308   002EDA  9110               	bcf	16,0,b	;volatile
  3309   002EDC                     
  3310                           ; BSR set to: 4
  3311                           ;MAX7219.c: 14:     TRISE = 0xFC;
  3312   002EDC  0EFC               	movlw	252
  3313   002EDE  6ECA               	movwf	202,c	;volatile
  3314                           
  3315                           ;MAX7219.c: 15:     ANSELE = 0xFC;
  3316   002EE0  0EFC               	movlw	252
  3317   002EE2  6F20               	movwf	32,b	;volatile
  3318   002EE4                     
  3319                           ; BSR set to: 4
  3320                           ;MAX7219.c: 16:     MAX7219_WriteData2(0x0C, 0x00);
  3321   002EE4  0E00               	movlw	0
  3322   002EE6  6E01               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3323   002EE8  0E0C               	movlw	12
  3324   002EEA  ECCC  F015         	call	_MAX7219_WriteData2
  3325   002EEE                     
  3326                           ;MAX7219.c: 17:     MAX7219_WriteData2(0x0F, 0x00);
  3327   002EEE  0E00               	movlw	0
  3328   002EF0  6E01               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3329   002EF2  0E0F               	movlw	15
  3330   002EF4  ECCC  F015         	call	_MAX7219_WriteData2
  3331   002EF8                     
  3332                           ;MAX7219.c: 18:     MAX7219_WriteData2(0x0A, 0x03);
  3333   002EF8  0E03               	movlw	3
  3334   002EFA  6E01               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3335   002EFC  0E0A               	movlw	10
  3336   002EFE  ECCC  F015         	call	_MAX7219_WriteData2
  3337   002F02                     
  3338                           ;MAX7219.c: 19:     MAX7219_WriteData2(0x0B, 0x07);
  3339   002F02  0E07               	movlw	7
  3340   002F04  6E01               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3341   002F06  0E0B               	movlw	11
  3342   002F08  ECCC  F015         	call	_MAX7219_WriteData2
  3343   002F0C                     
  3344                           ;MAX7219.c: 20:     MAX7219_WriteData2(0x0C, 0x01);
  3345   002F0C  0E01               	movlw	1
  3346   002F0E  6E01               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3347   002F10  0E0C               	movlw	12
  3348   002F12  ECCC  F015         	call	_MAX7219_WriteData2
  3349   002F16                     
  3350                           ;MAX7219.c: 21:     MAX7219_WriteData2(0x09, 0x00);
  3351   002F16  0E00               	movlw	0
  3352   002F18  6E01               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3353   002F1A  0E09               	movlw	9
  3354   002F1C  ECCC  F015         	call	_MAX7219_WriteData2
  3355   002F20  0012               	return		;funcret
  3356   002F22                     __end_of_MAX7219_Init:
  3357                           	callstack 0
  3358                           
  3359 ;; *************** function _MAX7219_WriteData2 *****************
  3360 ;; Defined at:
  3361 ;;		line 58 in file "MAX7219.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  comando         1    wreg     unsigned char 
  3364 ;;  dato            1    0[COMRAM] unsigned char 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  comando         1    3[COMRAM] unsigned char 
  3367 ;;  var_x           1    4[COMRAM] unsigned char 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2, status,0
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3377 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3378 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3379 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3380 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3381 ;;Total ram usage:        5 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_MAX7219_Init
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text3
  3391   002B98                     __ptext3:
  3392                           	callstack 0
  3393   002B98                     _MAX7219_WriteData2:
  3394                           	callstack 124
  3395                           
  3396                           ;incstack = 0
  3397                           ;MAX7219_WriteData2@comando stored from wreg
  3398   002B98  6E04               	movwf	MAX7219_WriteData2@comando^(0+1280),c
  3399   002B9A                     
  3400                           ;MAX7219.c: 60:  unsigned char var_x;;MAX7219.c: 61:  LATCbits.LATC0 = 1;
  3401   002B9A  80C0               	bsf	192,0,c	;volatile
  3402                           
  3403                           ;MAX7219.c: 62:  LATEbits.LATE0 = 0;
  3404   002B9C  90C2               	bcf	194,0,c	;volatile
  3405                           
  3406                           ;MAX7219.c: 63:  LATEbits.LATE1 = 0;
  3407   002B9E  92C2               	bcf	194,1,c	;volatile
  3408                           
  3409                           ;MAX7219.c: 65:  LATCbits.LATC0 = 0;
  3410   002BA0  90C0               	bcf	192,0,c	;volatile
  3411                           
  3412                           ;MAX7219.c: 67:  for(var_x=0;var_x<8;var_x++){
  3413   002BA2  6A05               	clrf	MAX7219_WriteData2@var_x^(0+1280),c
  3414   002BA4                     l221:
  3415                           
  3416                           ;MAX7219.c: 68:         LATEbits.LATE0 = 0;
  3417   002BA4  90C2               	bcf	194,0,c	;volatile
  3418   002BA6                     
  3419                           ;MAX7219.c: 69:   if(comando & (1<<(7-var_x))){
  3420   002BA6  5005               	movf	MAX7219_WriteData2@var_x^(0+1280),w,c
  3421   002BA8  0807               	sublw	7
  3422   002BAA  6E02               	movwf	??_MAX7219_WriteData2^(0+1280),c
  3423   002BAC  0E01               	movlw	1
  3424   002BAE  6E03               	movwf	(??_MAX7219_WriteData2+1)^(0+1280),c
  3425   002BB0  2A02               	incf	??_MAX7219_WriteData2^(0+1280),f,c
  3426   002BB2  EFDD  F015         	goto	u374
  3427   002BB6                     u375:
  3428   002BB6  90D8               	bcf	status,0,c
  3429   002BB8  3603               	rlcf	(??_MAX7219_WriteData2+1)^(0+1280),f,c
  3430   002BBA                     u374:
  3431   002BBA  2E02               	decfsz	??_MAX7219_WriteData2^(0+1280),f,c
  3432   002BBC  EFDB  F015         	goto	u375
  3433   002BC0  5003               	movf	(??_MAX7219_WriteData2+1)^(0+1280),w,c
  3434   002BC2  1404               	andwf	MAX7219_WriteData2@comando^(0+1280),w,c
  3435   002BC4  0900               	iorlw	0
  3436   002BC6  B4D8               	btfsc	status,2,c
  3437   002BC8  EFE8  F015         	goto	u381
  3438   002BCC  EFEA  F015         	goto	u380
  3439   002BD0                     u381:
  3440   002BD0  EFED  F015         	goto	l223
  3441   002BD4                     u380:
  3442   002BD4                     
  3443                           ;MAX7219.c: 70:    LATEbits.LATE1 = 1;
  3444   002BD4  82C2               	bsf	194,1,c	;volatile
  3445                           
  3446                           ;MAX7219.c: 71:   }
  3447   002BD6  EFEE  F015         	goto	l224
  3448   002BDA                     l223:
  3449                           
  3450                           ;MAX7219.c: 73:    LATEbits.LATE1 = 0;
  3451   002BDA  92C2               	bcf	194,1,c	;volatile
  3452   002BDC                     l224:
  3453                           
  3454                           ;MAX7219.c: 75:   LATEbits.LATE0 = 1;
  3455   002BDC  80C2               	bsf	194,0,c	;volatile
  3456   002BDE                     
  3457                           ;MAX7219.c: 76:  }
  3458   002BDE  2A05               	incf	MAX7219_WriteData2@var_x^(0+1280),f,c
  3459   002BE0  0E07               	movlw	7
  3460   002BE2  6405               	cpfsgt	MAX7219_WriteData2@var_x^(0+1280),c
  3461   002BE4  EFF6  F015         	goto	u391
  3462   002BE8  EFF8  F015         	goto	u390
  3463   002BEC                     u391:
  3464   002BEC  EFD2  F015         	goto	l221
  3465   002BF0                     u390:
  3466   002BF0                     
  3467                           ;MAX7219.c: 79:  for(var_x=0;var_x<8;var_x++){
  3468   002BF0  6A05               	clrf	MAX7219_WriteData2@var_x^(0+1280),c
  3469   002BF2                     l225:
  3470                           
  3471                           ;MAX7219.c: 80:   LATEbits.LATE0 = 0;
  3472   002BF2  90C2               	bcf	194,0,c	;volatile
  3473   002BF4                     
  3474                           ;MAX7219.c: 81:   if(dato & (1<<(7-var_x))){
  3475   002BF4  5005               	movf	MAX7219_WriteData2@var_x^(0+1280),w,c
  3476   002BF6  0807               	sublw	7
  3477   002BF8  6E02               	movwf	??_MAX7219_WriteData2^(0+1280),c
  3478   002BFA  0E01               	movlw	1
  3479   002BFC  6E03               	movwf	(??_MAX7219_WriteData2+1)^(0+1280),c
  3480   002BFE  2A02               	incf	??_MAX7219_WriteData2^(0+1280),f,c
  3481   002C00  EF04  F016         	goto	u404
  3482   002C04                     u405:
  3483   002C04  90D8               	bcf	status,0,c
  3484   002C06  3603               	rlcf	(??_MAX7219_WriteData2+1)^(0+1280),f,c
  3485   002C08                     u404:
  3486   002C08  2E02               	decfsz	??_MAX7219_WriteData2^(0+1280),f,c
  3487   002C0A  EF02  F016         	goto	u405
  3488   002C0E  5003               	movf	(??_MAX7219_WriteData2+1)^(0+1280),w,c
  3489   002C10  1401               	andwf	MAX7219_WriteData2@dato^(0+1280),w,c
  3490   002C12  0900               	iorlw	0
  3491   002C14  B4D8               	btfsc	status,2,c
  3492   002C16  EF0F  F016         	goto	u411
  3493   002C1A  EF11  F016         	goto	u410
  3494   002C1E                     u411:
  3495   002C1E  EF14  F016         	goto	l227
  3496   002C22                     u410:
  3497   002C22                     
  3498                           ;MAX7219.c: 82:    LATEbits.LATE1 = 1;
  3499   002C22  82C2               	bsf	194,1,c	;volatile
  3500                           
  3501                           ;MAX7219.c: 83:   }
  3502   002C24  EF15  F016         	goto	l228
  3503   002C28                     l227:
  3504                           
  3505                           ;MAX7219.c: 85:    LATEbits.LATE1 = 0;
  3506   002C28  92C2               	bcf	194,1,c	;volatile
  3507   002C2A                     l228:
  3508                           
  3509                           ;MAX7219.c: 87:   LATEbits.LATE0 = 1;
  3510   002C2A  80C2               	bsf	194,0,c	;volatile
  3511   002C2C                     
  3512                           ;MAX7219.c: 88:  }
  3513   002C2C  2A05               	incf	MAX7219_WriteData2@var_x^(0+1280),f,c
  3514   002C2E  0E07               	movlw	7
  3515   002C30  6405               	cpfsgt	MAX7219_WriteData2@var_x^(0+1280),c
  3516   002C32  EF1D  F016         	goto	u421
  3517   002C36  EF1F  F016         	goto	u420
  3518   002C3A                     u421:
  3519   002C3A  EFF9  F015         	goto	l225
  3520   002C3E                     u420:
  3521   002C3E                     
  3522                           ;MAX7219.c: 89:  LATCbits.LATC0 = 1;
  3523   002C3E  80C0               	bsf	192,0,c	;volatile
  3524   002C40  0012               	return		;funcret
  3525   002C42                     __end_of_MAX7219_WriteData2:
  3526                           	callstack 0
  3527                           
  3528 ;; *************** function _LCD_INIT *****************
  3529 ;; Defined at:
  3530 ;;		line 171 in file "LCD.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      void 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0, cstack
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3548 ;;Total ram usage:        2 bytes
  3549 ;; Hardware stack levels used: 1
  3550 ;; Hardware stack levels required when called: 3
  3551 ;; This function calls:
  3552 ;;		_BORRAR_LCD
  3553 ;;		_CURSOR_HOME
  3554 ;;		_CURSOR_ONOFF
  3555 ;;		_LCD_CONFIG
  3556 ;; This function is called by:
  3557 ;;		_configuro
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text4
  3562   002E22                     __ptext4:
  3563                           	callstack 0
  3564   002E22                     _LCD_INIT:
  3565                           	callstack 122
  3566   002E22                     
  3567                           ;LCD.c: 172:     _delay((unsigned long)((500)*(32000000UL/4000.0)));
  3568   002E22  0E15               	movlw	21
  3569   002E24  6E08               	movwf	(??_LCD_INIT+1)^(0+1280),c
  3570   002E26  0E4B               	movlw	75
  3571   002E28  6E07               	movwf	??_LCD_INIT^(0+1280),c
  3572   002E2A  0EBE               	movlw	190
  3573   002E2C                     u627:
  3574   002E2C  2EE8               	decfsz	wreg,f,c
  3575   002E2E  D7FE               	bra	u627
  3576   002E30  2E07               	decfsz	??_LCD_INIT^(0+1280),f,c
  3577   002E32  D7FC               	bra	u627
  3578   002E34  2E08               	decfsz	(??_LCD_INIT+1)^(0+1280),f,c
  3579   002E36  D7FA               	bra	u627
  3580   002E38  D000               	nop2	
  3581   002E3A                     
  3582                           ;LCD.c: 173:     TRISD = 0x00;
  3583   002E3A  6AC9               	clrf	201,c	;volatile
  3584   002E3C                     
  3585                           ;LCD.c: 174:     ANSELD = 0x00;
  3586   002E3C  0104               	movlb	4	; () banked
  3587   002E3E  6B18               	clrf	24,b	;volatile
  3588                           
  3589                           ;LCD.c: 175:     _delay((unsigned long)((30)*(32000000UL/4000.0)));
  3590   002E40  0E02               	movlw	2
  3591   002E42  6E08               	movwf	(??_LCD_INIT+1)^(0+1280),c
  3592   002E44  0E38               	movlw	56
  3593   002E46  6E07               	movwf	??_LCD_INIT^(0+1280),c
  3594   002E48  0EAD               	movlw	173
  3595   002E4A                     u637:
  3596   002E4A  2EE8               	decfsz	wreg,f,c
  3597   002E4C  D7FE               	bra	u637
  3598   002E4E  2E07               	decfsz	??_LCD_INIT^(0+1280),f,c
  3599   002E50  D7FC               	bra	u637
  3600   002E52  2E08               	decfsz	(??_LCD_INIT+1)^(0+1280),f,c
  3601   002E54  D7FA               	bra	u637
  3602   002E56  0000               	nop	
  3603   002E58                     
  3604                           ;LCD.c: 176:     LCD_CONFIG();
  3605   002E58  EC42  F017         	call	_LCD_CONFIG	;wreg free
  3606   002E5C                     
  3607                           ;LCD.c: 177:     _delay((unsigned long)((30)*(32000000UL/4000.0)));
  3608   002E5C  0E02               	movlw	2
  3609   002E5E  6E08               	movwf	(??_LCD_INIT+1)^(0+1280),c
  3610   002E60  0E38               	movlw	56
  3611   002E62  6E07               	movwf	??_LCD_INIT^(0+1280),c
  3612   002E64  0EAD               	movlw	173
  3613   002E66                     u647:
  3614   002E66  2EE8               	decfsz	wreg,f,c
  3615   002E68  D7FE               	bra	u647
  3616   002E6A  2E07               	decfsz	??_LCD_INIT^(0+1280),f,c
  3617   002E6C  D7FC               	bra	u647
  3618   002E6E  2E08               	decfsz	(??_LCD_INIT+1)^(0+1280),f,c
  3619   002E70  D7FA               	bra	u647
  3620   002E72  0000               	nop	
  3621                           
  3622                           ;LCD.c: 178:     BORRAR_LCD();
  3623   002E74  EC3C  F018         	call	_BORRAR_LCD	;wreg free
  3624                           
  3625                           ;LCD.c: 179:     CURSOR_HOME();
  3626   002E78  EC38  F018         	call	_CURSOR_HOME	;wreg free
  3627                           
  3628                           ;LCD.c: 180:     CURSOR_ONOFF(1);
  3629   002E7C  0E01               	movlw	1
  3630   002E7E  EC02  F018         	call	_CURSOR_ONOFF
  3631   002E82  0012               	return		;funcret
  3632   002E84                     __end_of_LCD_INIT:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function _LCD_CONFIG *****************
  3636 ;; Defined at:
  3637 ;;		line 94 in file "LCD.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3653 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3654 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3655 ;;Total ram usage:        1 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 2
  3658 ;; This function calls:
  3659 ;;		_ENVIA_LCD_CMD
  3660 ;;		_ENVIA_NIBBLE
  3661 ;; This function is called by:
  3662 ;;		_LCD_INIT
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text5
  3667   002E84                     __ptext5:
  3668                           	callstack 0
  3669   002E84                     _LCD_CONFIG:
  3670                           	callstack 122
  3671   002E84                     
  3672                           ;LCD.c: 95:  LATDbits.LATD0 = 0;
  3673   002E84  90C1               	bcf	193,0,c	;volatile
  3674                           
  3675                           ;LCD.c: 96:  LATDbits.LATD1 = 0;
  3676   002E86  92C1               	bcf	193,1,c	;volatile
  3677   002E88                     
  3678                           ;LCD.c: 97:  ENVIA_NIBBLE(0x30);
  3679   002E88  0E30               	movlw	48
  3680   002E8A  EC1A  F018         	call	_ENVIA_NIBBLE
  3681   002E8E                     
  3682                           ;LCD.c: 98:     _delay((unsigned long)((4)*(32000000UL/4000.0)));
  3683   002E8E  0E2A               	movlw	42
  3684   002E90  6E06               	movwf	??_LCD_CONFIG^(0+1280),c
  3685   002E92  0E8E               	movlw	142
  3686   002E94                     u657:
  3687   002E94  2EE8               	decfsz	wreg,f,c
  3688   002E96  D7FE               	bra	u657
  3689   002E98  2E06               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  3690   002E9A  D7FC               	bra	u657
  3691   002E9C                     
  3692                           ;LCD.c: 99:  ENVIA_NIBBLE(0x30);
  3693   002E9C  0E30               	movlw	48
  3694   002E9E  EC1A  F018         	call	_ENVIA_NIBBLE
  3695                           
  3696                           ;LCD.c: 100:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  3697   002EA2  0EA0               	movlw	160
  3698   002EA4                     u667:
  3699   002EA4  D000               	nop2	
  3700   002EA6  2EE8               	decfsz	wreg,f,c
  3701   002EA8  D7FD               	bra	u667
  3702   002EAA                     
  3703                           ;LCD.c: 101:     ENVIA_NIBBLE(0x30);
  3704   002EAA  0E30               	movlw	48
  3705   002EAC  EC1A  F018         	call	_ENVIA_NIBBLE
  3706   002EB0                     
  3707                           ;LCD.c: 102:  ENVIA_NIBBLE(0x20);
  3708   002EB0  0E20               	movlw	32
  3709   002EB2  EC1A  F018         	call	_ENVIA_NIBBLE
  3710   002EB6                     
  3711                           ;LCD.c: 103:  ENVIA_LCD_CMD(0x01);
  3712   002EB6  0E01               	movlw	1
  3713   002EB8  ECCE  F017         	call	_ENVIA_LCD_CMD
  3714   002EBC                     
  3715                           ;LCD.c: 104:  ENVIA_LCD_CMD(0x28);
  3716   002EBC  0E28               	movlw	40
  3717   002EBE  ECCE  F017         	call	_ENVIA_LCD_CMD
  3718   002EC2                     
  3719                           ;LCD.c: 105:  ENVIA_LCD_CMD(0x0F);
  3720   002EC2  0E0F               	movlw	15
  3721   002EC4  ECCE  F017         	call	_ENVIA_LCD_CMD
  3722   002EC8                     
  3723                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x06);
  3724   002EC8  0E06               	movlw	6
  3725   002ECA  ECCE  F017         	call	_ENVIA_LCD_CMD
  3726   002ECE                     
  3727                           ;LCD.c: 107:  ENVIA_LCD_CMD(0x01);
  3728   002ECE  0E01               	movlw	1
  3729   002ED0  ECCE  F017         	call	_ENVIA_LCD_CMD
  3730   002ED4  0012               	return		;funcret
  3731   002ED6                     __end_of_LCD_CONFIG:
  3732                           	callstack 0
  3733                           
  3734 ;; *************** function _CURSOR_ONOFF *****************
  3735 ;; Defined at:
  3736 ;;		line 54 in file "LCD.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;  estado          1    wreg     unsigned char 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  estado          1    5[COMRAM] unsigned char 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      void 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3754 ;;Total ram usage:        1 bytes
  3755 ;; Hardware stack levels used: 1
  3756 ;; Hardware stack levels required when called: 2
  3757 ;; This function calls:
  3758 ;;		_ENVIA_LCD_CMD
  3759 ;; This function is called by:
  3760 ;;		_LCD_INIT
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text6
  3765   003004                     __ptext6:
  3766                           	callstack 0
  3767   003004                     _CURSOR_ONOFF:
  3768                           	callstack 122
  3769                           
  3770                           ;incstack = 0
  3771                           ;CURSOR_ONOFF@estado stored from wreg
  3772   003004  6E06               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  3773   003006                     
  3774                           ;LCD.c: 55:  if(estado == 0) ENVIA_LCD_CMD(0x0E);
  3775   003006  5006               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  3776   003008  A4D8               	btfss	status,2,c
  3777   00300A  EF09  F018         	goto	u11
  3778   00300E  EF0B  F018         	goto	u10
  3779   003012                     u11:
  3780   003012  EF0E  F018         	goto	l943
  3781   003016                     u10:
  3782   003016  0E0E               	movlw	14
  3783   003018  ECCE  F017         	call	_ENVIA_LCD_CMD
  3784   00301C                     l943:
  3785                           
  3786                           ;LCD.c: 56:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  3787   00301C  0406               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  3788   00301E  A4D8               	btfss	status,2,c
  3789   003020  EF14  F018         	goto	u21
  3790   003024  EF16  F018         	goto	u20
  3791   003028                     u21:
  3792   003028  EF19  F018         	goto	l93
  3793   00302C                     u20:
  3794   00302C  0E0C               	movlw	12
  3795   00302E  ECCE  F017         	call	_ENVIA_LCD_CMD
  3796   003032                     l93:
  3797   003032  0012               	return		;funcret
  3798   003034                     __end_of_CURSOR_ONOFF:
  3799                           	callstack 0
  3800                           
  3801 ;; *************** function _CURSOR_HOME *****************
  3802 ;; Defined at:
  3803 ;;		line 34 in file "LCD.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used: 1
  3823 ;; Hardware stack levels required when called: 2
  3824 ;; This function calls:
  3825 ;;		_ENVIA_LCD_CMD
  3826 ;; This function is called by:
  3827 ;;		_LCD_INIT
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text7
  3832   003070                     __ptext7:
  3833                           	callstack 0
  3834   003070                     _CURSOR_HOME:
  3835                           	callstack 122
  3836   003070                     
  3837                           ;LCD.c: 35:  ENVIA_LCD_CMD(0x02);
  3838   003070  0E02               	movlw	2
  3839   003072  ECCE  F017         	call	_ENVIA_LCD_CMD
  3840   003076  0012               	return		;funcret
  3841   003078                     __end_of_CURSOR_HOME:
  3842                           	callstack 0
  3843                           
  3844 ;; *************** function _BORRAR_LCD *****************
  3845 ;; Defined at:
  3846 ;;		line 90 in file "LCD.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;		None
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      void 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0, cstack
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3864 ;;Total ram usage:        0 bytes
  3865 ;; Hardware stack levels used: 1
  3866 ;; Hardware stack levels required when called: 2
  3867 ;; This function calls:
  3868 ;;		_ENVIA_LCD_CMD
  3869 ;; This function is called by:
  3870 ;;		_LCD_INIT
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text8
  3875   003078                     __ptext8:
  3876                           	callstack 0
  3877   003078                     _BORRAR_LCD:
  3878                           	callstack 122
  3879   003078                     
  3880                           ;LCD.c: 91:  ENVIA_LCD_CMD(0x01);
  3881   003078  0E01               	movlw	1
  3882   00307A  ECCE  F017         	call	_ENVIA_LCD_CMD
  3883   00307E  0012               	return		;funcret
  3884   003080                     __end_of_BORRAR_LCD:
  3885                           	callstack 0
  3886                           
  3887 ;; *************** function _POS_CURSOR *****************
  3888 ;; Defined at:
  3889 ;;		line 9 in file "LCD.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  fila            1    wreg     unsigned char 
  3892 ;;  columna         1    5[COMRAM] unsigned char 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  fila            1    6[COMRAM] unsigned char 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      void 
  3897 ;; Registers used:
  3898 ;;		wreg, status,2, status,0, cstack
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3904 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3908 ;;Total ram usage:        2 bytes
  3909 ;; Hardware stack levels used: 1
  3910 ;; Hardware stack levels required when called: 2
  3911 ;; This function calls:
  3912 ;;		_ENVIA_LCD_CMD
  3913 ;; This function is called by:
  3914 ;;		_main
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text9
  3919   002CD0                     __ptext9:
  3920                           	callstack 0
  3921   002CD0                     _POS_CURSOR:
  3922                           	callstack 124
  3923                           
  3924                           ;incstack = 0
  3925                           ;POS_CURSOR@fila stored from wreg
  3926   002CD0  6E07               	movwf	POS_CURSOR@fila^(0+1280),c
  3927   002CD2                     
  3928                           ;LCD.c: 10:  if(fila == 1){
  3929   002CD2  0407               	decf	POS_CURSOR@fila^(0+1280),w,c
  3930   002CD4  A4D8               	btfss	status,2,c
  3931   002CD6  EF6F  F016         	goto	u501
  3932   002CDA  EF71  F016         	goto	u500
  3933   002CDE                     u501:
  3934   002CDE  EF77  F016         	goto	l1487
  3935   002CE2                     u500:
  3936   002CE2                     
  3937                           ;LCD.c: 11:   ENVIA_LCD_CMD(0x80+columna);
  3938   002CE2  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
  3939   002CE4  0F80               	addlw	128
  3940   002CE6  ECCE  F017         	call	_ENVIA_LCD_CMD
  3941                           
  3942                           ;LCD.c: 12:  }
  3943   002CEA  EFA4  F016         	goto	l63
  3944   002CEE                     l1487:
  3945   002CEE  0E02               	movlw	2
  3946   002CF0  1807               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  3947   002CF2  A4D8               	btfss	status,2,c
  3948   002CF4  EF7E  F016         	goto	u511
  3949   002CF8  EF80  F016         	goto	u510
  3950   002CFC                     u511:
  3951   002CFC  EF86  F016         	goto	l1491
  3952   002D00                     u510:
  3953   002D00                     
  3954                           ;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  3955   002D00  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
  3956   002D02  0FC0               	addlw	192
  3957   002D04  ECCE  F017         	call	_ENVIA_LCD_CMD
  3958                           
  3959                           ;LCD.c: 15:  }
  3960   002D08  EFA4  F016         	goto	l63
  3961   002D0C                     l1491:
  3962   002D0C  0E03               	movlw	3
  3963   002D0E  1807               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  3964   002D10  A4D8               	btfss	status,2,c
  3965   002D12  EF8D  F016         	goto	u521
  3966   002D16  EF8F  F016         	goto	u520
  3967   002D1A                     u521:
  3968   002D1A  EF95  F016         	goto	l1495
  3969   002D1E                     u520:
  3970   002D1E                     
  3971                           ;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
  3972   002D1E  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
  3973   002D20  0F94               	addlw	148
  3974   002D22  ECCE  F017         	call	_ENVIA_LCD_CMD
  3975                           
  3976                           ;LCD.c: 18:  }
  3977   002D26  EFA4  F016         	goto	l63
  3978   002D2A                     l1495:
  3979   002D2A  0E04               	movlw	4
  3980   002D2C  1807               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  3981   002D2E  A4D8               	btfss	status,2,c
  3982   002D30  EF9C  F016         	goto	u531
  3983   002D34  EF9E  F016         	goto	u530
  3984   002D38                     u531:
  3985   002D38  EFA4  F016         	goto	l59
  3986   002D3C                     u530:
  3987   002D3C                     
  3988                           ;LCD.c: 20:   ENVIA_LCD_CMD(0xD4+columna);
  3989   002D3C  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
  3990   002D3E  0FD4               	addlw	212
  3991   002D40  ECCE  F017         	call	_ENVIA_LCD_CMD
  3992   002D44  EFA4  F016         	goto	l63
  3993   002D48                     l59:
  3994   002D48                     l63:
  3995   002D48  0012               	return		;funcret
  3996   002D4A                     __end_of_POS_CURSOR:
  3997                           	callstack 0
  3998                           
  3999 ;; *************** function _ENVIA_LCD_CMD *****************
  4000 ;; Defined at:
  4001 ;;		line 119 in file "LCD.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  dato            1    wreg     unsigned char 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  dato            1    3[COMRAM] unsigned char 
  4006 ;;  aux             1    4[COMRAM] unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2, status,0, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4019 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4020 ;;Total ram usage:        3 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 1
  4023 ;; This function calls:
  4024 ;;		_ENVIA_NIBBLE
  4025 ;; This function is called by:
  4026 ;;		_POS_CURSOR
  4027 ;;		_CURSOR_HOME
  4028 ;;		_CURSOR_ONOFF
  4029 ;;		_BORRAR_LCD
  4030 ;;		_LCD_CONFIG
  4031 ;;		_BLINK_CURSOR
  4032 ;;		_DISPLAY_ONOFF
  4033 ;;		_CURSOR_SHIFTLEFT
  4034 ;;		_CURSOR_SHIFTRIGHT
  4035 ;;		_DISPLAY_SHIFTLEFT
  4036 ;;		_DISPLAY_SHIFTRIGHT
  4037 ;;		_GENERACARACTER
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text10
  4042   002F9C                     __ptext10:
  4043                           	callstack 0
  4044   002F9C                     _ENVIA_LCD_CMD:
  4045                           	callstack 122
  4046                           
  4047                           ;incstack = 0
  4048                           ;ENVIA_LCD_CMD@dato stored from wreg
  4049   002F9C  6E04               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  4050   002F9E                     
  4051                           ;LCD.c: 120:     unsigned char aux;;LCD.c: 121:   LATDbits.LATD0 = 0;
  4052   002F9E  90C1               	bcf	193,0,c	;volatile
  4053   002FA0                     
  4054                           ;LCD.c: 124:     _delay((unsigned long)((300)*(32000000UL/4000000.0)));
  4055   002FA0  0E04               	movlw	4
  4056   002FA2  6E03               	movwf	??_ENVIA_LCD_CMD^(0+1280),c
  4057   002FA4  0E1C               	movlw	28
  4058   002FA6                     u677:
  4059   002FA6  2EE8               	decfsz	wreg,f,c
  4060   002FA8  D7FE               	bra	u677
  4061   002FAA  2E03               	decfsz	??_ENVIA_LCD_CMD^(0+1280),f,c
  4062   002FAC  D7FC               	bra	u677
  4063   002FAE  D000               	nop2	
  4064   002FB0                     
  4065                           ;LCD.c: 125:     LATDbits.LATD1 = 0;
  4066   002FB0  92C1               	bcf	193,1,c	;volatile
  4067   002FB2                     
  4068                           ;LCD.c: 126:  LATDbits.LATD2 = 0;
  4069   002FB2  94C1               	bcf	193,2,c	;volatile
  4070   002FB4                     
  4071                           ;LCD.c: 127:  LATDbits.LATD0 = 0;
  4072   002FB4  90C1               	bcf	193,0,c	;volatile
  4073   002FB6                     
  4074                           ;LCD.c: 128:  aux = dato & 0xF0;
  4075   002FB6  5004               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  4076   002FB8  0BF0               	andlw	240
  4077   002FBA  6E05               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  4078   002FBC                     
  4079                           ;LCD.c: 129:  ENVIA_NIBBLE(aux);
  4080   002FBC  5005               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  4081   002FBE  EC1A  F018         	call	_ENVIA_NIBBLE
  4082   002FC2                     
  4083                           ;LCD.c: 130:  aux = dato<<4;
  4084   002FC2  3804               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  4085   002FC4  0BF0               	andlw	240
  4086   002FC6  6E05               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  4087   002FC8                     
  4088                           ;LCD.c: 131:  ENVIA_NIBBLE(aux);
  4089   002FC8  5005               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  4090   002FCA  EC1A  F018         	call	_ENVIA_NIBBLE
  4091   002FCE  0012               	return		;funcret
  4092   002FD0                     __end_of_ENVIA_LCD_CMD:
  4093                           	callstack 0
  4094                           
  4095 ;; *************** function _MAX7219_WriteData *****************
  4096 ;; Defined at:
  4097 ;;		line 29 in file "MAX7219.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  comando         1    wreg     unsigned char 
  4100 ;;  dato            1   12[COMRAM] unsigned char 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  comando         1   18[COMRAM] unsigned char 
  4103 ;;  tmp_int         2   19[COMRAM] unsigned int 
  4104 ;;  temporal_dat    2   16[COMRAM] unsigned int 
  4105 ;;  var_x           1   21[COMRAM] unsigned char 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      void 
  4108 ;; Registers used:
  4109 ;;		wreg, status,2, status,0
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4115 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4116 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4117 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4118 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4119 ;;Total ram usage:       10 bytes
  4120 ;; Hardware stack levels used: 1
  4121 ;; This function calls:
  4122 ;;		Nothing
  4123 ;; This function is called by:
  4124 ;;		_main
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text11
  4129   002C42                     __ptext11:
  4130                           	callstack 0
  4131   002C42                     _MAX7219_WriteData:
  4132                           	callstack 126
  4133                           
  4134                           ;incstack = 0
  4135                           ;MAX7219_WriteData@comando stored from wreg
  4136   002C42  6E13               	movwf	MAX7219_WriteData@comando^(0+1280),c
  4137   002C44                     
  4138                           ;MAX7219.c: 31:     unsigned int temporal_data, tmp_int;;MAX7219.c: 32:  unsigned char v
      +                          ar_x;;MAX7219.c: 33:  LATCbits.LATC0 = 1;
  4139   002C44  80C0               	bsf	192,0,c	;volatile
  4140                           
  4141                           ;MAX7219.c: 34:  LATEbits.LATE0 = 0;
  4142   002C46  90C2               	bcf	194,0,c	;volatile
  4143                           
  4144                           ;MAX7219.c: 35:  LATEbits.LATE1 = 0;
  4145   002C48  92C2               	bcf	194,1,c	;volatile
  4146   002C4A                     
  4147                           ;MAX7219.c: 36:     temporal_data = (comando << 8) + dato;
  4148   002C4A  5013               	movf	MAX7219_WriteData@comando^(0+1280),w,c
  4149   002C4C  6E0F               	movwf	(??_MAX7219_WriteData+1)^(0+1280),c
  4150   002C4E  6A0E               	clrf	??_MAX7219_WriteData^(0+1280),c
  4151   002C50  500D               	movf	MAX7219_WriteData@dato^(0+1280),w,c
  4152   002C52  240E               	addwf	??_MAX7219_WriteData^(0+1280),w,c
  4153   002C54  6E11               	movwf	MAX7219_WriteData@temporal_data^(0+1280),c
  4154   002C56  0E00               	movlw	0
  4155   002C58  200F               	addwfc	(??_MAX7219_WriteData+1)^(0+1280),w,c
  4156   002C5A  6E12               	movwf	(MAX7219_WriteData@temporal_data+1)^(0+1280),c
  4157   002C5C                     
  4158                           ;MAX7219.c: 38:  LATCbits.LATC0 = 0;
  4159   002C5C  90C0               	bcf	192,0,c	;volatile
  4160   002C5E                     
  4161                           ;MAX7219.c: 39:  for(var_x=0;var_x<16;var_x++){
  4162   002C5E  6A16               	clrf	MAX7219_WriteData@var_x^(0+1280),c
  4163   002C60                     l1521:
  4164                           
  4165                           ;MAX7219.c: 40:   tmp_int = 1;
  4166   002C60  0E00               	movlw	0
  4167   002C62  6E15               	movwf	(MAX7219_WriteData@tmp_int+1)^(0+1280),c
  4168   002C64  0E01               	movlw	1
  4169   002C66  6E14               	movwf	MAX7219_WriteData@tmp_int^(0+1280),c
  4170   002C68                     
  4171                           ;MAX7219.c: 41:         tmp_int = (tmp_int << (15 - var_x));
  4172   002C68  5016               	movf	MAX7219_WriteData@var_x^(0+1280),w,c
  4173   002C6A  080F               	sublw	15
  4174   002C6C  6E0E               	movwf	??_MAX7219_WriteData^(0+1280),c
  4175   002C6E  C514  F50F         	movff	MAX7219_WriteData@tmp_int,??_MAX7219_WriteData+1
  4176   002C72  C515  F510         	movff	MAX7219_WriteData@tmp_int+1,??_MAX7219_WriteData+2
  4177   002C76  2A0E               	incf	??_MAX7219_WriteData^(0+1280),f,c
  4178   002C78  EF41  F016         	goto	u554
  4179   002C7C                     u555:
  4180   002C7C  90D8               	bcf	status,0,c
  4181   002C7E  360F               	rlcf	(??_MAX7219_WriteData+1)^(0+1280),f,c
  4182   002C80  3610               	rlcf	(??_MAX7219_WriteData+2)^(0+1280),f,c
  4183   002C82                     u554:
  4184   002C82  2E0E               	decfsz	??_MAX7219_WriteData^(0+1280),f,c
  4185   002C84  EF3E  F016         	goto	u555
  4186   002C88  C50F  F514         	movff	??_MAX7219_WriteData+1,MAX7219_WriteData@tmp_int
  4187   002C8C  C510  F515         	movff	??_MAX7219_WriteData+2,MAX7219_WriteData@tmp_int+1
  4188   002C90                     
  4189                           ;MAX7219.c: 42:         if((tmp_int & temporal_data) != 0){
  4190   002C90  5011               	movf	MAX7219_WriteData@temporal_data^(0+1280),w,c
  4191   002C92  1414               	andwf	MAX7219_WriteData@tmp_int^(0+1280),w,c
  4192   002C94  6E0E               	movwf	??_MAX7219_WriteData^(0+1280),c
  4193   002C96  5012               	movf	(MAX7219_WriteData@temporal_data+1)^(0+1280),w,c
  4194   002C98  1415               	andwf	(MAX7219_WriteData@tmp_int+1)^(0+1280),w,c
  4195   002C9A  6E0F               	movwf	(??_MAX7219_WriteData+1)^(0+1280),c
  4196   002C9C  500E               	movf	??_MAX7219_WriteData^(0+1280),w,c
  4197   002C9E  100F               	iorwf	(??_MAX7219_WriteData+1)^(0+1280),w,c
  4198   002CA0  B4D8               	btfsc	status,2,c
  4199   002CA2  EF55  F016         	goto	u561
  4200   002CA6  EF57  F016         	goto	u560
  4201   002CAA                     u561:
  4202   002CAA  EF5A  F016         	goto	l216
  4203   002CAE                     u560:
  4204   002CAE                     
  4205                           ;MAX7219.c: 43:    LATEbits.LATE1 = 1;
  4206   002CAE  82C2               	bsf	194,1,c	;volatile
  4207                           
  4208                           ;MAX7219.c: 44:   }
  4209   002CB0  EF5B  F016         	goto	l217
  4210   002CB4                     l216:
  4211                           
  4212                           ;MAX7219.c: 46:    LATEbits.LATE1 = 0;
  4213   002CB4  92C2               	bcf	194,1,c	;volatile
  4214   002CB6                     l217:
  4215                           
  4216                           ;MAX7219.c: 48:   LATEbits.LATE0 = 1;
  4217   002CB6  80C2               	bsf	194,0,c	;volatile
  4218                           
  4219                           ;MAX7219.c: 50:   LATEbits.LATE0 = 0;
  4220   002CB8  90C2               	bcf	194,0,c	;volatile
  4221   002CBA                     
  4222                           ;MAX7219.c: 51:  }
  4223   002CBA  2A16               	incf	MAX7219_WriteData@var_x^(0+1280),f,c
  4224   002CBC  0E0F               	movlw	15
  4225   002CBE  6416               	cpfsgt	MAX7219_WriteData@var_x^(0+1280),c
  4226   002CC0  EF64  F016         	goto	u571
  4227   002CC4  EF66  F016         	goto	u570
  4228   002CC8                     u571:
  4229   002CC8  EF30  F016         	goto	l1521
  4230   002CCC                     u570:
  4231   002CCC                     
  4232                           ;MAX7219.c: 52:  LATCbits.LATC0 = 1;
  4233   002CCC  80C0               	bsf	192,0,c	;volatile
  4234   002CCE  0012               	return		;funcret
  4235   002CD0                     __end_of_MAX7219_WriteData:
  4236                           	callstack 0
  4237                           
  4238 ;; *************** function _LCD_ESCRIBE_VAR_INT *****************
  4239 ;; Defined at:
  4240 ;;		line 205 in file "LCD.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  numero          2   12[COMRAM] unsigned int 
  4243 ;;  n_digitos       1   14[COMRAM] unsigned char 
  4244 ;;  punto           1   15[COMRAM] unsigned char 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  unidad          1   20[COMRAM] unsigned char 
  4247 ;;  decena          1   19[COMRAM] unsigned char 
  4248 ;;  centena         1   18[COMRAM] unsigned char 
  4249 ;;  millar          1   17[COMRAM] unsigned char 
  4250 ;;  d_millar        1   16[COMRAM] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4261 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4263 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4264 ;;Total ram usage:        9 bytes
  4265 ;; Hardware stack levels used: 1
  4266 ;; Hardware stack levels required when called: 2
  4267 ;; This function calls:
  4268 ;;		_ENVIA_CHAR
  4269 ;;		___lwdiv
  4270 ;;		___lwmod
  4271 ;; This function is called by:
  4272 ;;		_main
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text12
  4277   002632                     __ptext12:
  4278                           	callstack 0
  4279   002632                     _LCD_ESCRIBE_VAR_INT:
  4280                           	callstack 124
  4281   002632                     
  4282                           ;LCD.c: 206:     unsigned char d_millar, millar, centena, decena, unidad;;LCD.c: 207:   
      +                            d_millar = numero / 10000;
  4283   002632  C50D  F506         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  4284   002636  C50E  F507         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  4285   00263A  0E27               	movlw	39
  4286   00263C  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4287   00263E  0E10               	movlw	16
  4288   002640  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4289   002642  ECA5  F016         	call	___lwdiv	;wreg free
  4290   002646  5006               	movf	?___lwdiv^(0+1280),w,c
  4291   002648  6E11               	movwf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  4292                           
  4293                           ;LCD.c: 208:     millar = (numero % 10000) / 1000;
  4294   00264A  0E27               	movlw	39
  4295   00264C  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  4296   00264E  0E10               	movlw	16
  4297   002650  6E03               	movwf	___lwmod@divisor^(0+1280),c
  4298   002652  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  4299   002656  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  4300   00265A  ECDF  F016         	call	___lwmod	;wreg free
  4301   00265E  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  4302   002662  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  4303   002666  0E03               	movlw	3
  4304   002668  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4305   00266A  0EE8               	movlw	232
  4306   00266C  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4307   00266E  ECA5  F016         	call	___lwdiv	;wreg free
  4308   002672  5006               	movf	?___lwdiv^(0+1280),w,c
  4309   002674  6E12               	movwf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),c
  4310                           
  4311                           ;LCD.c: 209:     centena = (numero % 1000) / 100;
  4312   002676  0E03               	movlw	3
  4313   002678  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  4314   00267A  0EE8               	movlw	232
  4315   00267C  6E03               	movwf	___lwmod@divisor^(0+1280),c
  4316   00267E  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  4317   002682  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  4318   002686  ECDF  F016         	call	___lwmod	;wreg free
  4319   00268A  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  4320   00268E  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  4321   002692  0E00               	movlw	0
  4322   002694  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4323   002696  0E64               	movlw	100
  4324   002698  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4325   00269A  ECA5  F016         	call	___lwdiv	;wreg free
  4326   00269E  5006               	movf	?___lwdiv^(0+1280),w,c
  4327   0026A0  6E13               	movwf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),c
  4328                           
  4329                           ;LCD.c: 210:     decena = (numero % 100) / 10;
  4330   0026A2  0E00               	movlw	0
  4331   0026A4  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  4332   0026A6  0E64               	movlw	100
  4333   0026A8  6E03               	movwf	___lwmod@divisor^(0+1280),c
  4334   0026AA  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  4335   0026AE  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  4336   0026B2  ECDF  F016         	call	___lwmod	;wreg free
  4337   0026B6  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  4338   0026BA  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  4339   0026BE  0E00               	movlw	0
  4340   0026C0  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4341   0026C2  0E0A               	movlw	10
  4342   0026C4  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4343   0026C6  ECA5  F016         	call	___lwdiv	;wreg free
  4344   0026CA  5006               	movf	?___lwdiv^(0+1280),w,c
  4345   0026CC  6E14               	movwf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),c
  4346                           
  4347                           ;LCD.c: 211:     unidad = numero % 10;
  4348   0026CE  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  4349   0026D2  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  4350   0026D6  0E00               	movlw	0
  4351   0026D8  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  4352   0026DA  0E0A               	movlw	10
  4353   0026DC  6E03               	movwf	___lwmod@divisor^(0+1280),c
  4354   0026DE  ECDF  F016         	call	___lwmod	;wreg free
  4355   0026E2  5001               	movf	?___lwmod^(0+1280),w,c
  4356   0026E4  6E15               	movwf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),c
  4357                           
  4358                           ;LCD.c: 212:     switch(n_digitos){
  4359   0026E6  EFD6  F014         	goto	l1583
  4360   0026EA                     l1535:
  4361                           
  4362                           ;LCD.c: 214:             ENVIA_CHAR(unidad+0x30);
  4363   0026EA  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4364   0026EC  0F30               	addlw	48
  4365   0026EE  ECE8  F017         	call	_ENVIA_CHAR
  4366                           
  4367                           ;LCD.c: 215:             break;
  4368   0026F2  EFED  F014         	goto	l173
  4369   0026F6                     l1537:
  4370                           
  4371                           ;LCD.c: 217:             if(punto == 0){
  4372   0026F6  5010               	movf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  4373   0026F8  A4D8               	btfss	status,2,c
  4374   0026FA  EF81  F013         	goto	u581
  4375   0026FE  EF83  F013         	goto	u580
  4376   002702                     u581:
  4377   002702  EF8D  F013         	goto	l1541
  4378   002706                     u580:
  4379   002706                     
  4380                           ;LCD.c: 218:                 ENVIA_CHAR(decena+0x30);
  4381   002706  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4382   002708  0F30               	addlw	48
  4383   00270A  ECE8  F017         	call	_ENVIA_CHAR
  4384                           
  4385                           ;LCD.c: 219:                 ENVIA_CHAR(unidad+0x30);
  4386   00270E  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4387   002710  0F30               	addlw	48
  4388   002712  ECE8  F017         	call	_ENVIA_CHAR
  4389                           
  4390                           ;LCD.c: 220:             }
  4391   002716  EFED  F014         	goto	l173
  4392   00271A                     l1541:
  4393   00271A  0410               	decf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  4394   00271C  A4D8               	btfss	status,2,c
  4395   00271E  EF93  F013         	goto	u591
  4396   002722  EF95  F013         	goto	u590
  4397   002726                     u591:
  4398   002726  EFED  F014         	goto	l173
  4399   00272A                     u590:
  4400   00272A                     
  4401                           ;LCD.c: 222:                 ENVIA_CHAR(decena+0x30);
  4402   00272A  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4403   00272C  0F30               	addlw	48
  4404   00272E  ECE8  F017         	call	_ENVIA_CHAR
  4405                           
  4406                           ;LCD.c: 223:                 ENVIA_CHAR('.');
  4407   002732  0E2E               	movlw	46
  4408   002734  ECE8  F017         	call	_ENVIA_CHAR
  4409                           
  4410                           ;LCD.c: 224:                 ENVIA_CHAR(unidad+0x30);
  4411   002738  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4412   00273A  0F30               	addlw	48
  4413   00273C  ECE8  F017         	call	_ENVIA_CHAR
  4414   002740  EFED  F014         	goto	l173
  4415   002744                     l1545:
  4416                           
  4417                           ;LCD.c: 230:                     ENVIA_CHAR(centena+0x30);
  4418   002744  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4419   002746  0F30               	addlw	48
  4420   002748  ECE8  F017         	call	_ENVIA_CHAR
  4421                           
  4422                           ;LCD.c: 231:                     ENVIA_CHAR(decena+0x30);
  4423   00274C  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4424   00274E  0F30               	addlw	48
  4425   002750  ECE8  F017         	call	_ENVIA_CHAR
  4426                           
  4427                           ;LCD.c: 232:                     ENVIA_CHAR(unidad+0x30);
  4428   002754  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4429   002756  0F30               	addlw	48
  4430   002758  ECE8  F017         	call	_ENVIA_CHAR
  4431                           
  4432                           ;LCD.c: 233:                     break;
  4433   00275C  EFED  F014         	goto	l173
  4434   002760                     l1547:
  4435                           
  4436                           ;LCD.c: 235:                     ENVIA_CHAR(centena+0x30);
  4437   002760  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4438   002762  0F30               	addlw	48
  4439   002764  ECE8  F017         	call	_ENVIA_CHAR
  4440                           
  4441                           ;LCD.c: 236:                     ENVIA_CHAR(decena+0x30);
  4442   002768  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4443   00276A  0F30               	addlw	48
  4444   00276C  ECE8  F017         	call	_ENVIA_CHAR
  4445                           
  4446                           ;LCD.c: 237:                     ENVIA_CHAR('.');
  4447   002770  0E2E               	movlw	46
  4448   002772  ECE8  F017         	call	_ENVIA_CHAR
  4449                           
  4450                           ;LCD.c: 238:                     ENVIA_CHAR(unidad+0x30);
  4451   002776  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4452   002778  0F30               	addlw	48
  4453   00277A  ECE8  F017         	call	_ENVIA_CHAR
  4454                           
  4455                           ;LCD.c: 239:                     break;
  4456   00277E  EFED  F014         	goto	l173
  4457   002782                     l1549:
  4458                           
  4459                           ;LCD.c: 241:                     ENVIA_CHAR(centena+0x30);
  4460   002782  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4461   002784  0F30               	addlw	48
  4462   002786  ECE8  F017         	call	_ENVIA_CHAR
  4463                           
  4464                           ;LCD.c: 242:                     ENVIA_CHAR('.');
  4465   00278A  0E2E               	movlw	46
  4466   00278C  ECE8  F017         	call	_ENVIA_CHAR
  4467                           
  4468                           ;LCD.c: 243:                     ENVIA_CHAR(decena+0x30);
  4469   002790  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4470   002792  0F30               	addlw	48
  4471   002794  ECE8  F017         	call	_ENVIA_CHAR
  4472                           
  4473                           ;LCD.c: 244:                     ENVIA_CHAR(unidad+0x30);
  4474   002798  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4475   00279A  0F30               	addlw	48
  4476   00279C  ECE8  F017         	call	_ENVIA_CHAR
  4477                           
  4478                           ;LCD.c: 245:                     break;
  4479   0027A0  EFED  F014         	goto	l173
  4480   0027A4                     l1553:
  4481   0027A4  5010               	movf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  4482                           
  4483                           ; Switch size 1, requested type "simple"
  4484                           ; Number of cases is 3, Range of values is 0 to 2
  4485                           ; switch strategies available:
  4486                           ; Name         Instructions Cycles
  4487                           ; simple_byte           10     6 (average)
  4488                           ;	Chosen strategy is simple_byte
  4489   0027A6  0A00               	xorlw	0	; case 0
  4490   0027A8  B4D8               	btfsc	status,2,c
  4491   0027AA  EFA2  F013         	goto	l1545
  4492   0027AE  0A01               	xorlw	1	; case 1
  4493   0027B0  B4D8               	btfsc	status,2,c
  4494   0027B2  EFB0  F013         	goto	l1547
  4495   0027B6  0A03               	xorlw	3	; case 2
  4496   0027B8  B4D8               	btfsc	status,2,c
  4497   0027BA  EFC1  F013         	goto	l1549
  4498   0027BE  EFED  F014         	goto	l173
  4499   0027C2                     l1555:
  4500                           
  4501                           ;LCD.c: 251:                     ENVIA_CHAR(millar+0x30);
  4502   0027C2  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4503   0027C4  0F30               	addlw	48
  4504   0027C6  ECE8  F017         	call	_ENVIA_CHAR
  4505                           
  4506                           ;LCD.c: 252:                     ENVIA_CHAR(centena+0x30);
  4507   0027CA  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4508   0027CC  0F30               	addlw	48
  4509   0027CE  ECE8  F017         	call	_ENVIA_CHAR
  4510                           
  4511                           ;LCD.c: 253:                     ENVIA_CHAR(decena+0x30);
  4512   0027D2  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4513   0027D4  0F30               	addlw	48
  4514   0027D6  ECE8  F017         	call	_ENVIA_CHAR
  4515                           
  4516                           ;LCD.c: 254:                     ENVIA_CHAR(unidad+0x30);
  4517   0027DA  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4518   0027DC  0F30               	addlw	48
  4519   0027DE  ECE8  F017         	call	_ENVIA_CHAR
  4520                           
  4521                           ;LCD.c: 255:                     break;
  4522   0027E2  EFED  F014         	goto	l173
  4523   0027E6                     l1557:
  4524                           
  4525                           ;LCD.c: 257:                     ENVIA_CHAR(millar+0x30);
  4526   0027E6  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4527   0027E8  0F30               	addlw	48
  4528   0027EA  ECE8  F017         	call	_ENVIA_CHAR
  4529                           
  4530                           ;LCD.c: 258:                     ENVIA_CHAR(centena+0x30);
  4531   0027EE  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4532   0027F0  0F30               	addlw	48
  4533   0027F2  ECE8  F017         	call	_ENVIA_CHAR
  4534                           
  4535                           ;LCD.c: 259:                     ENVIA_CHAR(decena+0x30);
  4536   0027F6  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4537   0027F8  0F30               	addlw	48
  4538   0027FA  ECE8  F017         	call	_ENVIA_CHAR
  4539                           
  4540                           ;LCD.c: 260:                     ENVIA_CHAR('.');
  4541   0027FE  0E2E               	movlw	46
  4542   002800  ECE8  F017         	call	_ENVIA_CHAR
  4543                           
  4544                           ;LCD.c: 261:                     ENVIA_CHAR(unidad+0x30);
  4545   002804  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4546   002806  0F30               	addlw	48
  4547   002808  ECE8  F017         	call	_ENVIA_CHAR
  4548                           
  4549                           ;LCD.c: 262:                     break;
  4550   00280C  EFED  F014         	goto	l173
  4551   002810                     l1559:
  4552                           
  4553                           ;LCD.c: 264:                     ENVIA_CHAR(millar+0x30);
  4554   002810  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4555   002812  0F30               	addlw	48
  4556   002814  ECE8  F017         	call	_ENVIA_CHAR
  4557                           
  4558                           ;LCD.c: 265:                     ENVIA_CHAR(centena+0x30);
  4559   002818  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4560   00281A  0F30               	addlw	48
  4561   00281C  ECE8  F017         	call	_ENVIA_CHAR
  4562                           
  4563                           ;LCD.c: 266:                     ENVIA_CHAR('.');
  4564   002820  0E2E               	movlw	46
  4565   002822  ECE8  F017         	call	_ENVIA_CHAR
  4566                           
  4567                           ;LCD.c: 267:                     ENVIA_CHAR(decena+0x30);
  4568   002826  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4569   002828  0F30               	addlw	48
  4570   00282A  ECE8  F017         	call	_ENVIA_CHAR
  4571                           
  4572                           ;LCD.c: 268:                     ENVIA_CHAR(unidad+0x30);
  4573   00282E  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4574   002830  0F30               	addlw	48
  4575   002832  ECE8  F017         	call	_ENVIA_CHAR
  4576                           
  4577                           ;LCD.c: 269:                     break;
  4578   002836  EFED  F014         	goto	l173
  4579   00283A                     l1561:
  4580                           
  4581                           ;LCD.c: 271:                     ENVIA_CHAR(millar+0x30);
  4582   00283A  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4583   00283C  0F30               	addlw	48
  4584   00283E  ECE8  F017         	call	_ENVIA_CHAR
  4585                           
  4586                           ;LCD.c: 272:                     ENVIA_CHAR('.');
  4587   002842  0E2E               	movlw	46
  4588   002844  ECE8  F017         	call	_ENVIA_CHAR
  4589                           
  4590                           ;LCD.c: 273:                     ENVIA_CHAR(centena+0x30);
  4591   002848  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4592   00284A  0F30               	addlw	48
  4593   00284C  ECE8  F017         	call	_ENVIA_CHAR
  4594                           
  4595                           ;LCD.c: 274:                     ENVIA_CHAR(decena+0x30);
  4596   002850  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4597   002852  0F30               	addlw	48
  4598   002854  ECE8  F017         	call	_ENVIA_CHAR
  4599                           
  4600                           ;LCD.c: 275:                     ENVIA_CHAR(unidad+0x30);
  4601   002858  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4602   00285A  0F30               	addlw	48
  4603   00285C  ECE8  F017         	call	_ENVIA_CHAR
  4604                           
  4605                           ;LCD.c: 276:                     break;
  4606   002860  EFED  F014         	goto	l173
  4607   002864                     l1565:
  4608   002864  5010               	movf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  4609                           
  4610                           ; Switch size 1, requested type "simple"
  4611                           ; Number of cases is 4, Range of values is 0 to 3
  4612                           ; switch strategies available:
  4613                           ; Name         Instructions Cycles
  4614                           ; simple_byte           13     7 (average)
  4615                           ;	Chosen strategy is simple_byte
  4616   002866  0A00               	xorlw	0	; case 0
  4617   002868  B4D8               	btfsc	status,2,c
  4618   00286A  EFE1  F013         	goto	l1555
  4619   00286E  0A01               	xorlw	1	; case 1
  4620   002870  B4D8               	btfsc	status,2,c
  4621   002872  EFF3  F013         	goto	l1557
  4622   002876  0A03               	xorlw	3	; case 2
  4623   002878  B4D8               	btfsc	status,2,c
  4624   00287A  EF08  F014         	goto	l1559
  4625   00287E  0A01               	xorlw	1	; case 3
  4626   002880  B4D8               	btfsc	status,2,c
  4627   002882  EF1D  F014         	goto	l1561
  4628   002886  EFED  F014         	goto	l173
  4629   00288A                     l1567:
  4630                           
  4631                           ;LCD.c: 282:                     ENVIA_CHAR(d_millar+0x30);
  4632   00288A  5011               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  4633   00288C  0F30               	addlw	48
  4634   00288E  ECE8  F017         	call	_ENVIA_CHAR
  4635                           
  4636                           ;LCD.c: 283:                     ENVIA_CHAR(millar+0x30);
  4637   002892  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4638   002894  0F30               	addlw	48
  4639   002896  ECE8  F017         	call	_ENVIA_CHAR
  4640                           
  4641                           ;LCD.c: 284:                     ENVIA_CHAR(centena+0x30);
  4642   00289A  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4643   00289C  0F30               	addlw	48
  4644   00289E  ECE8  F017         	call	_ENVIA_CHAR
  4645                           
  4646                           ;LCD.c: 285:                     ENVIA_CHAR(decena+0x30);
  4647   0028A2  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4648   0028A4  0F30               	addlw	48
  4649   0028A6  ECE8  F017         	call	_ENVIA_CHAR
  4650                           
  4651                           ;LCD.c: 286:                     ENVIA_CHAR(unidad+0x30);
  4652   0028AA  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4653   0028AC  0F30               	addlw	48
  4654   0028AE  ECE8  F017         	call	_ENVIA_CHAR
  4655                           
  4656                           ;LCD.c: 287:                     break;
  4657   0028B2  EFED  F014         	goto	l173
  4658   0028B6                     l1569:
  4659                           
  4660                           ;LCD.c: 289:                     ENVIA_CHAR(d_millar+0x30);
  4661   0028B6  5011               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  4662   0028B8  0F30               	addlw	48
  4663   0028BA  ECE8  F017         	call	_ENVIA_CHAR
  4664                           
  4665                           ;LCD.c: 290:                     ENVIA_CHAR(millar+0x30);
  4666   0028BE  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4667   0028C0  0F30               	addlw	48
  4668   0028C2  ECE8  F017         	call	_ENVIA_CHAR
  4669                           
  4670                           ;LCD.c: 291:                     ENVIA_CHAR(centena+0x30);
  4671   0028C6  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4672   0028C8  0F30               	addlw	48
  4673   0028CA  ECE8  F017         	call	_ENVIA_CHAR
  4674                           
  4675                           ;LCD.c: 292:                     ENVIA_CHAR(decena+0x30);
  4676   0028CE  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4677   0028D0  0F30               	addlw	48
  4678   0028D2  ECE8  F017         	call	_ENVIA_CHAR
  4679                           
  4680                           ;LCD.c: 293:                     ENVIA_CHAR('.');
  4681   0028D6  0E2E               	movlw	46
  4682   0028D8  ECE8  F017         	call	_ENVIA_CHAR
  4683                           
  4684                           ;LCD.c: 294:                     ENVIA_CHAR(unidad+0x30);
  4685   0028DC  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4686   0028DE  0F30               	addlw	48
  4687   0028E0  ECE8  F017         	call	_ENVIA_CHAR
  4688                           
  4689                           ;LCD.c: 295:                     break;
  4690   0028E4  EFED  F014         	goto	l173
  4691   0028E8                     l1571:
  4692                           
  4693                           ;LCD.c: 297:                     ENVIA_CHAR(d_millar+0x30);
  4694   0028E8  5011               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  4695   0028EA  0F30               	addlw	48
  4696   0028EC  ECE8  F017         	call	_ENVIA_CHAR
  4697                           
  4698                           ;LCD.c: 298:                     ENVIA_CHAR(millar+0x30);
  4699   0028F0  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4700   0028F2  0F30               	addlw	48
  4701   0028F4  ECE8  F017         	call	_ENVIA_CHAR
  4702                           
  4703                           ;LCD.c: 299:                     ENVIA_CHAR(centena+0x30);
  4704   0028F8  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4705   0028FA  0F30               	addlw	48
  4706   0028FC  ECE8  F017         	call	_ENVIA_CHAR
  4707                           
  4708                           ;LCD.c: 300:                     ENVIA_CHAR('.');
  4709   002900  0E2E               	movlw	46
  4710   002902  ECE8  F017         	call	_ENVIA_CHAR
  4711                           
  4712                           ;LCD.c: 301:                     ENVIA_CHAR(decena+0x30);
  4713   002906  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4714   002908  0F30               	addlw	48
  4715   00290A  ECE8  F017         	call	_ENVIA_CHAR
  4716                           
  4717                           ;LCD.c: 302:                     ENVIA_CHAR(unidad+0x30);
  4718   00290E  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4719   002910  0F30               	addlw	48
  4720   002912  ECE8  F017         	call	_ENVIA_CHAR
  4721                           
  4722                           ;LCD.c: 303:                     break;
  4723   002916  EFED  F014         	goto	l173
  4724   00291A                     l1573:
  4725                           
  4726                           ;LCD.c: 305:                     ENVIA_CHAR(d_millar+0x30);
  4727   00291A  5011               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  4728   00291C  0F30               	addlw	48
  4729   00291E  ECE8  F017         	call	_ENVIA_CHAR
  4730                           
  4731                           ;LCD.c: 306:                     ENVIA_CHAR(millar+0x30);
  4732   002922  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4733   002924  0F30               	addlw	48
  4734   002926  ECE8  F017         	call	_ENVIA_CHAR
  4735                           
  4736                           ;LCD.c: 307:                     ENVIA_CHAR('.');
  4737   00292A  0E2E               	movlw	46
  4738   00292C  ECE8  F017         	call	_ENVIA_CHAR
  4739                           
  4740                           ;LCD.c: 308:                     ENVIA_CHAR(centena+0x30);
  4741   002930  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4742   002932  0F30               	addlw	48
  4743   002934  ECE8  F017         	call	_ENVIA_CHAR
  4744                           
  4745                           ;LCD.c: 309:                     ENVIA_CHAR(decena+0x30);
  4746   002938  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4747   00293A  0F30               	addlw	48
  4748   00293C  ECE8  F017         	call	_ENVIA_CHAR
  4749                           
  4750                           ;LCD.c: 310:                     ENVIA_CHAR(unidad+0x30);
  4751   002940  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4752   002942  0F30               	addlw	48
  4753   002944  ECE8  F017         	call	_ENVIA_CHAR
  4754                           
  4755                           ;LCD.c: 311:                     break;
  4756   002948  EFED  F014         	goto	l173
  4757   00294C                     l1575:
  4758                           
  4759                           ;LCD.c: 313:                     ENVIA_CHAR(d_millar+0x30);
  4760   00294C  5011               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  4761   00294E  0F30               	addlw	48
  4762   002950  ECE8  F017         	call	_ENVIA_CHAR
  4763                           
  4764                           ;LCD.c: 314:                     ENVIA_CHAR('.');
  4765   002954  0E2E               	movlw	46
  4766   002956  ECE8  F017         	call	_ENVIA_CHAR
  4767                           
  4768                           ;LCD.c: 315:                     ENVIA_CHAR(millar+0x30);
  4769   00295A  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4770   00295C  0F30               	addlw	48
  4771   00295E  ECE8  F017         	call	_ENVIA_CHAR
  4772                           
  4773                           ;LCD.c: 316:                     ENVIA_CHAR(centena+0x30);
  4774   002962  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4775   002964  0F30               	addlw	48
  4776   002966  ECE8  F017         	call	_ENVIA_CHAR
  4777                           
  4778                           ;LCD.c: 317:                     ENVIA_CHAR(decena+0x30);
  4779   00296A  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4780   00296C  0F30               	addlw	48
  4781   00296E  ECE8  F017         	call	_ENVIA_CHAR
  4782                           
  4783                           ;LCD.c: 318:                     ENVIA_CHAR(unidad+0x30);
  4784   002972  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4785   002974  0F30               	addlw	48
  4786   002976  ECE8  F017         	call	_ENVIA_CHAR
  4787                           
  4788                           ;LCD.c: 319:                     break;
  4789   00297A  EFED  F014         	goto	l173
  4790   00297E                     l1579:
  4791   00297E  5010               	movf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  4792                           
  4793                           ; Switch size 1, requested type "simple"
  4794                           ; Number of cases is 5, Range of values is 0 to 4
  4795                           ; switch strategies available:
  4796                           ; Name         Instructions Cycles
  4797                           ; simple_byte           16     9 (average)
  4798                           ;	Chosen strategy is simple_byte
  4799   002980  0A00               	xorlw	0	; case 0
  4800   002982  B4D8               	btfsc	status,2,c
  4801   002984  EF45  F014         	goto	l1567
  4802   002988  0A01               	xorlw	1	; case 1
  4803   00298A  B4D8               	btfsc	status,2,c
  4804   00298C  EF5B  F014         	goto	l1569
  4805   002990  0A03               	xorlw	3	; case 2
  4806   002992  B4D8               	btfsc	status,2,c
  4807   002994  EF74  F014         	goto	l1571
  4808   002998  0A01               	xorlw	1	; case 3
  4809   00299A  B4D8               	btfsc	status,2,c
  4810   00299C  EF8D  F014         	goto	l1573
  4811   0029A0  0A07               	xorlw	7	; case 4
  4812   0029A2  B4D8               	btfsc	status,2,c
  4813   0029A4  EFA6  F014         	goto	l1575
  4814   0029A8  EFED  F014         	goto	l173
  4815   0029AC                     l1583:
  4816   0029AC  500F               	movf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  4817                           
  4818                           ; Switch size 1, requested type "simple"
  4819                           ; Number of cases is 5, Range of values is 1 to 5
  4820                           ; switch strategies available:
  4821                           ; Name         Instructions Cycles
  4822                           ; simple_byte           16     9 (average)
  4823                           ;	Chosen strategy is simple_byte
  4824   0029AE  0A01               	xorlw	1	; case 1
  4825   0029B0  B4D8               	btfsc	status,2,c
  4826   0029B2  EF75  F013         	goto	l1535
  4827   0029B6  0A03               	xorlw	3	; case 2
  4828   0029B8  B4D8               	btfsc	status,2,c
  4829   0029BA  EF7B  F013         	goto	l1537
  4830   0029BE  0A01               	xorlw	1	; case 3
  4831   0029C0  B4D8               	btfsc	status,2,c
  4832   0029C2  EFD2  F013         	goto	l1553
  4833   0029C6  0A07               	xorlw	7	; case 4
  4834   0029C8  B4D8               	btfsc	status,2,c
  4835   0029CA  EF32  F014         	goto	l1565
  4836   0029CE  0A01               	xorlw	1	; case 5
  4837   0029D0  B4D8               	btfsc	status,2,c
  4838   0029D2  EFBF  F014         	goto	l1579
  4839   0029D6  EFED  F014         	goto	l173
  4840   0029DA                     l173:
  4841   0029DA  0012               	return		;funcret
  4842   0029DC                     __end_of_LCD_ESCRIBE_VAR_INT:
  4843                           	callstack 0
  4844                           
  4845 ;; *************** function ___lwmod *****************
  4846 ;; Defined at:
  4847 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;  dividend        2    0[COMRAM] unsigned int 
  4850 ;;  divisor         2    2[COMRAM] unsigned int 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  counter         1    4[COMRAM] unsigned char 
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  2    0[COMRAM] unsigned int 
  4855 ;; Registers used:
  4856 ;;		wreg, status,2, status,0
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4862 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4865 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4866 ;;Total ram usage:        5 bytes
  4867 ;; Hardware stack levels used: 1
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_main
  4872 ;;		_LCD_ESCRIBE_VAR_INT
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text13
  4877   002DBE                     __ptext13:
  4878                           	callstack 0
  4879   002DBE                     ___lwmod:
  4880                           	callstack 126
  4881   002DBE  5003               	movf	___lwmod@divisor^(0+1280),w,c
  4882   002DC0  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  4883   002DC2  B4D8               	btfsc	status,2,c
  4884   002DC4  EFE6  F016         	goto	u471
  4885   002DC8  EFE8  F016         	goto	u470
  4886   002DCC                     u471:
  4887   002DCC  EF0C  F017         	goto	l733
  4888   002DD0                     u470:
  4889   002DD0  0E01               	movlw	1
  4890   002DD2  6E05               	movwf	___lwmod@counter^(0+1280),c
  4891   002DD4  EFF0  F016         	goto	l1467
  4892   002DD8                     l1465:
  4893   002DD8  90D8               	bcf	status,0,c
  4894   002DDA  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  4895   002DDC  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  4896   002DDE  2A05               	incf	___lwmod@counter^(0+1280),f,c
  4897   002DE0                     l1467:
  4898   002DE0  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  4899   002DE2  EFF5  F016         	goto	u481
  4900   002DE6  EFF7  F016         	goto	u480
  4901   002DEA                     u481:
  4902   002DEA  EFEC  F016         	goto	l1465
  4903   002DEE                     u480:
  4904   002DEE                     l1469:
  4905   002DEE  5003               	movf	___lwmod@divisor^(0+1280),w,c
  4906   002DF0  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  4907   002DF2  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  4908   002DF4  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  4909   002DF6  A0D8               	btfss	status,0,c
  4910   002DF8  EF00  F017         	goto	u491
  4911   002DFC  EF02  F017         	goto	u490
  4912   002E00                     u491:
  4913   002E00  EF06  F017         	goto	l1473
  4914   002E04                     u490:
  4915   002E04  5003               	movf	___lwmod@divisor^(0+1280),w,c
  4916   002E06  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  4917   002E08  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  4918   002E0A  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  4919   002E0C                     l1473:
  4920   002E0C  90D8               	bcf	status,0,c
  4921   002E0E  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  4922   002E10  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  4923   002E12  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  4924   002E14  EFF7  F016         	goto	l1469
  4925   002E18                     l733:
  4926   002E18  C501  F501         	movff	___lwmod@dividend,?___lwmod
  4927   002E1C  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  4928   002E20  0012               	return		;funcret
  4929   002E22                     __end_of___lwmod:
  4930                           	callstack 0
  4931                           
  4932 ;; *************** function ___lwdiv *****************
  4933 ;; Defined at:
  4934 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  dividend        2    5[COMRAM] unsigned int 
  4937 ;;  divisor         2    7[COMRAM] unsigned int 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  quotient        2    9[COMRAM] unsigned int 
  4940 ;;  counter         1   11[COMRAM] unsigned char 
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  2    5[COMRAM] unsigned int 
  4943 ;; Registers used:
  4944 ;;		wreg, status,2, status,0
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4951 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4953 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4954 ;;Total ram usage:        7 bytes
  4955 ;; Hardware stack levels used: 1
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_main
  4960 ;;		_LCD_ESCRIBE_VAR_INT
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text14
  4965   002D4A                     __ptext14:
  4966                           	callstack 0
  4967   002D4A                     ___lwdiv:
  4968                           	callstack 126
  4969   002D4A  0E00               	movlw	0
  4970   002D4C  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  4971   002D4E  0E00               	movlw	0
  4972   002D50  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  4973   002D52  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  4974   002D54  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  4975   002D56  B4D8               	btfsc	status,2,c
  4976   002D58  EFB0  F016         	goto	u441
  4977   002D5C  EFB2  F016         	goto	u440
  4978   002D60                     u441:
  4979   002D60  EFDA  F016         	goto	l723
  4980   002D64                     u440:
  4981   002D64  0E01               	movlw	1
  4982   002D66  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  4983   002D68  EFBA  F016         	goto	l1447
  4984   002D6C                     l1445:
  4985   002D6C  90D8               	bcf	status,0,c
  4986   002D6E  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  4987   002D70  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  4988   002D72  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  4989   002D74                     l1447:
  4990   002D74  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  4991   002D76  EFBF  F016         	goto	u451
  4992   002D7A  EFC1  F016         	goto	u450
  4993   002D7E                     u451:
  4994   002D7E  EFB6  F016         	goto	l1445
  4995   002D82                     u450:
  4996   002D82                     l1449:
  4997   002D82  90D8               	bcf	status,0,c
  4998   002D84  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  4999   002D86  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  5000   002D88  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  5001   002D8A  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  5002   002D8C  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  5003   002D8E  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  5004   002D90  A0D8               	btfss	status,0,c
  5005   002D92  EFCD  F016         	goto	u461
  5006   002D96  EFCF  F016         	goto	u460
  5007   002D9A                     u461:
  5008   002D9A  EFD4  F016         	goto	l1457
  5009   002D9E                     u460:
  5010   002D9E  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  5011   002DA0  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  5012   002DA2  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  5013   002DA4  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  5014   002DA6  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  5015   002DA8                     l1457:
  5016   002DA8  90D8               	bcf	status,0,c
  5017   002DAA  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  5018   002DAC  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  5019   002DAE  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  5020   002DB0  EFC1  F016         	goto	l1449
  5021   002DB4                     l723:
  5022   002DB4  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  5023   002DB8  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5024   002DBC  0012               	return		;funcret
  5025   002DBE                     __end_of___lwdiv:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  5029 ;; Defined at:
  5030 ;;		line 66 in file "LCD.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  cadena          1    5[COMRAM] PTR const unsigned char 
  5033 ;;		 -> STR_3(17), STR_2(15), STR_1(15), 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  i               1    8[COMRAM] unsigned char 
  5036 ;;  tam             1    7[COMRAM] unsigned char 
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5046 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5047 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5048 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5049 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5050 ;;Total ram usage:        4 bytes
  5051 ;; Hardware stack levels used: 1
  5052 ;; Hardware stack levels required when called: 2
  5053 ;; This function calls:
  5054 ;;		_ENVIA_CHAR
  5055 ;;		_strlen
  5056 ;; This function is called by:
  5057 ;;		_main
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text15
  5062   002F22                     __ptext15:
  5063                           	callstack 0
  5064   002F22                     _ESCRIBE_MENSAJE2:
  5065                           	callstack 124
  5066   002F22                     
  5067                           ;LCD.c: 67:     unsigned char tam;;LCD.c: 68:     tam = strlen(cadena);
  5068   002F22  C506  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  5069   002F26  ECB2  F017         	call	_strlen	;wreg free
  5070   002F2A  5001               	movf	?_strlen^(0+1280),w,c
  5071   002F2C  6E08               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  5072   002F2E                     
  5073                           ;LCD.c: 70:  for(i = 0; i<tam; i++) {
  5074   002F2E  6A09               	clrf	ESCRIBE_MENSAJE2@i^(0+1280),c
  5075   002F30  EFA8  F017         	goto	l1509
  5076   002F34                     l1505:
  5077                           
  5078                           ;LCD.c: 71:   ENVIA_CHAR(cadena[i]);
  5079   002F34  5006               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  5080   002F36  2409               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  5081   002F38  6E07               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  5082   002F3A  C507  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  5083   002F3E                     	if	1	;There is more than 1 active tblptr byte
  5084   002F3E  0E26               	movlw	high __smallconst
  5085   002F40  6EF7               	movwf	tblptrh,c
  5086   002F42                     	endif
  5087   002F42                     	if	0	;tblptru may be non-zero
  5088   002F42                     	endif
  5089   002F42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5090   002F42  0E00               	movlw	low (__smallconst shr (0+16))
  5091   002F44  6EF8               	movwf	tblptru,c
  5092   002F46                     	endif
  5093   002F46  0008               	tblrd		*
  5094   002F48  50F5               	movf	tablat,w,c
  5095   002F4A  ECE8  F017         	call	_ENVIA_CHAR
  5096   002F4E                     
  5097                           ;LCD.c: 72:  }
  5098   002F4E  2A09               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  5099   002F50                     l1509:
  5100   002F50  5008               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  5101   002F52  5C09               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  5102   002F54  A0D8               	btfss	status,0,c
  5103   002F56  EFAF  F017         	goto	u541
  5104   002F5A  EFB1  F017         	goto	u540
  5105   002F5E                     u541:
  5106   002F5E  EF9A  F017         	goto	l1505
  5107   002F62                     u540:
  5108   002F62  0012               	return		;funcret
  5109   002F64                     __end_of_ESCRIBE_MENSAJE2:
  5110                           	callstack 0
  5111                           
  5112 ;; *************** function _strlen *****************
  5113 ;; Defined at:
  5114 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;  s               1    0[COMRAM] PTR const unsigned char 
  5117 ;;		 -> STR_3(17), STR_2(15), STR_1(15), 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  a               1    2[COMRAM] PTR const unsigned char 
  5120 ;;		 -> STR_3(17), STR_2(15), STR_1(15), 
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  2    0[COMRAM] unsigned int 
  5123 ;; Registers used:
  5124 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5133 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5134 ;;Total ram usage:        3 bytes
  5135 ;; Hardware stack levels used: 1
  5136 ;; This function calls:
  5137 ;;		Nothing
  5138 ;; This function is called by:
  5139 ;;		_ESCRIBE_MENSAJE2
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           	psect	text16
  5144   002F64                     __ptext16:
  5145                           	callstack 0
  5146   002F64                     _strlen:
  5147                           	callstack 125
  5148   002F64  C501  F503         	movff	strlen@s,strlen@a
  5149   002F68  EFB7  F017         	goto	l1433
  5150   002F6C                     l1431:
  5151   002F6C  2A01               	incf	strlen@s^(0+1280),f,c
  5152   002F6E                     l1433:
  5153   002F6E  C501  F4F6         	movff	strlen@s,tblptrl
  5154   002F72                     	if	1	;There is more than 1 active tblptr byte
  5155   002F72  0E26               	movlw	high __smallconst
  5156   002F74  6EF7               	movwf	tblptrh,c
  5157   002F76                     	endif
  5158   002F76                     	if	0	;tblptru may be non-zero
  5159   002F76                     	endif
  5160   002F76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5161   002F76  0E00               	movlw	low (__smallconst shr (0+16))
  5162   002F78  6EF8               	movwf	tblptru,c
  5163   002F7A                     	endif
  5164   002F7A  0008               	tblrd		*
  5165   002F7C  50F5               	movf	tablat,w,c
  5166   002F7E  0900               	iorlw	0
  5167   002F80  A4D8               	btfss	status,2,c
  5168   002F82  EFC5  F017         	goto	u431
  5169   002F86  EFC7  F017         	goto	u430
  5170   002F8A                     u431:
  5171   002F8A  EFB6  F017         	goto	l1431
  5172   002F8E                     u430:
  5173   002F8E  5003               	movf	strlen@a^(0+1280),w,c
  5174   002F90  5C01               	subwf	strlen@s^(0+1280),w,c
  5175   002F92  6E01               	movwf	?_strlen^(0+1280),c
  5176   002F94  6A02               	clrf	(?_strlen+1)^(0+1280),c
  5177   002F96  BE01               	btfsc	?_strlen^(0+1280),7,c
  5178   002F98  0602               	decf	(?_strlen+1)^(0+1280),f,c
  5179   002F9A  0012               	return		;funcret
  5180   002F9C                     __end_of_strlen:
  5181                           	callstack 0
  5182                           
  5183 ;; *************** function _ENVIA_CHAR *****************
  5184 ;; Defined at:
  5185 ;;		line 75 in file "LCD.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;  dato            1    wreg     unsigned char 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  dato            1    3[COMRAM] unsigned char 
  5190 ;;  aux             1    4[COMRAM] unsigned char 
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg, status,2, status,0, cstack
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5201 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5203 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5204 ;;Total ram usage:        3 bytes
  5205 ;; Hardware stack levels used: 1
  5206 ;; Hardware stack levels required when called: 1
  5207 ;; This function calls:
  5208 ;;		_ENVIA_NIBBLE
  5209 ;; This function is called by:
  5210 ;;		_ESCRIBE_MENSAJE2
  5211 ;;		_LCD_ESCRIBE_VAR_INT
  5212 ;;		_ESCRIBE_MENSAJE
  5213 ;;		_GENERACARACTER
  5214 ;;		_LCD_ESCRIBE_VAR_CHAR
  5215 ;;		_LCD_CHAR_GRADO
  5216 ;;		_LCD_VARCHAR_BITS
  5217 ;;		_LCD_VARCHAR_HEX
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text17
  5222   002FD0                     __ptext17:
  5223                           	callstack 0
  5224   002FD0                     _ENVIA_CHAR:
  5225                           	callstack 124
  5226                           
  5227                           ;incstack = 0
  5228                           ;ENVIA_CHAR@dato stored from wreg
  5229   002FD0  6E04               	movwf	ENVIA_CHAR@dato^(0+1280),c
  5230   002FD2                     
  5231                           ;LCD.c: 76:  unsigned char aux;;LCD.c: 77:  LATDbits.LATD0 = 1;
  5232   002FD2  80C1               	bsf	193,0,c	;volatile
  5233   002FD4                     
  5234                           ;LCD.c: 80:     _delay((unsigned long)((300)*(32000000UL/4000000.0)));
  5235   002FD4  0E04               	movlw	4
  5236   002FD6  6E03               	movwf	??_ENVIA_CHAR^(0+1280),c
  5237   002FD8  0E1C               	movlw	28
  5238   002FDA                     u687:
  5239   002FDA  2EE8               	decfsz	wreg,f,c
  5240   002FDC  D7FE               	bra	u687
  5241   002FDE  2E03               	decfsz	??_ENVIA_CHAR^(0+1280),f,c
  5242   002FE0  D7FC               	bra	u687
  5243   002FE2  D000               	nop2	
  5244   002FE4                     
  5245                           ;LCD.c: 81:  LATDbits.LATD1 = 0;
  5246   002FE4  92C1               	bcf	193,1,c	;volatile
  5247   002FE6                     
  5248                           ;LCD.c: 82:  LATDbits.LATD2 = 0;
  5249   002FE6  94C1               	bcf	193,2,c	;volatile
  5250   002FE8                     
  5251                           ;LCD.c: 83:  LATDbits.LATD0 = 1;
  5252   002FE8  80C1               	bsf	193,0,c	;volatile
  5253   002FEA                     
  5254                           ;LCD.c: 84:  aux = dato & 0xF0;
  5255   002FEA  5004               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  5256   002FEC  0BF0               	andlw	240
  5257   002FEE  6E05               	movwf	ENVIA_CHAR@aux^(0+1280),c
  5258   002FF0                     
  5259                           ;LCD.c: 85:  ENVIA_NIBBLE(aux);
  5260   002FF0  5005               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  5261   002FF2  EC1A  F018         	call	_ENVIA_NIBBLE
  5262   002FF6                     
  5263                           ;LCD.c: 86:  aux = dato << 4;
  5264   002FF6  3804               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  5265   002FF8  0BF0               	andlw	240
  5266   002FFA  6E05               	movwf	ENVIA_CHAR@aux^(0+1280),c
  5267   002FFC                     
  5268                           ;LCD.c: 87:  ENVIA_NIBBLE(aux);
  5269   002FFC  5005               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  5270   002FFE  EC1A  F018         	call	_ENVIA_NIBBLE
  5271   003002  0012               	return		;funcret
  5272   003004                     __end_of_ENVIA_CHAR:
  5273                           	callstack 0
  5274                           
  5275 ;; *************** function _ENVIA_NIBBLE *****************
  5276 ;; Defined at:
  5277 ;;		line 110 in file "LCD.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;  dato            1    wreg     unsigned char 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  dato            1    1[COMRAM] unsigned char 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      void 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5295 ;;Total ram usage:        2 bytes
  5296 ;; Hardware stack levels used: 1
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_ENVIA_CHAR
  5301 ;;		_LCD_CONFIG
  5302 ;;		_ENVIA_LCD_CMD
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text18
  5307   003034                     __ptext18:
  5308                           	callstack 0
  5309   003034                     _ENVIA_NIBBLE:
  5310                           	callstack 123
  5311                           
  5312                           ;incstack = 0
  5313                           ;ENVIA_NIBBLE@dato stored from wreg
  5314   003034  6E02               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  5315   003036                     
  5316                           ;LCD.c: 111:  LATD &= 0x0F;
  5317   003036  0E0F               	movlw	15
  5318   003038  16C1               	andwf	193,f,c	;volatile
  5319                           
  5320                           ;LCD.c: 112:  dato &= 0xF0;
  5321   00303A  0EF0               	movlw	240
  5322   00303C  1602               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  5323                           
  5324                           ;LCD.c: 113:  LATD|= dato;
  5325   00303E  5002               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  5326   003040  12C1               	iorwf	193,f,c	;volatile
  5327   003042                     
  5328                           ;LCD.c: 114:  LATDbits.LATD2 = 1;
  5329   003042  84C1               	bsf	193,2,c	;volatile
  5330   003044                     
  5331                           ;LCD.c: 115:     _delay((unsigned long)((300)*(32000000UL/4000000.0)));
  5332   003044  0E04               	movlw	4
  5333   003046  6E01               	movwf	??_ENVIA_NIBBLE^(0+1280),c
  5334   003048  0E1C               	movlw	28
  5335   00304A                     u697:
  5336   00304A  2EE8               	decfsz	wreg,f,c
  5337   00304C  D7FE               	bra	u697
  5338   00304E  2E01               	decfsz	??_ENVIA_NIBBLE^(0+1280),f,c
  5339   003050  D7FC               	bra	u697
  5340   003052  D000               	nop2	
  5341   003054                     
  5342                           ;LCD.c: 116:  LATDbits.LATD2 = 0;
  5343   003054  94C1               	bcf	193,2,c	;volatile
  5344   003056  0012               	return		;funcret
  5345   003058                     __end_of_ENVIA_NIBBLE:
  5346                           	callstack 0
  5347                           
  5348                           	psect	rparam
  5349   000001                     ___rparam_used  equ	1
  5350   000000                     ___param_bank   equ	0
  5351   000000                     __Lparam        equ	__Lrparam
  5352   000000                     __Hparam        equ	__Hrparam
  5353                           
  5354                           	psect	config
  5355                           
  5356                           ;Config register CONFIG1 @ 0x300000
  5357                           ;	External Oscillator Selection
  5358                           ;	FEXTOSC = OFF, Oscillator not enabled
  5359                           ;	Reset Oscillator Selection
  5360                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  5361   300000                     	org	3145728
  5362   300000  FC                 	db	252
  5363                           
  5364                           ;Config register CONFIG2 @ 0x300001
  5365                           ;	Clock out Enable bit
  5366                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  5367                           ;	PRLOCKED One-Way Set Enable bit
  5368                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  5369                           ;	Clock Switch Enable bit
  5370                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5371                           ;	Fail-Safe Clock Monitor Enable bit
  5372                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  5373   300001                     	org	3145729
  5374   300001  FF                 	db	255
  5375                           
  5376                           ;Config register CONFIG3 @ 0x300002
  5377                           ;	MCLR Enable bit
  5378                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  5379                           ;	Power-up timer selection bits
  5380                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  5381                           ;	Multi-vector enable bit
  5382                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  5383                           ;	IVTLOCK bit One-way set enable bit
  5384                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  5385                           ;	Low Power BOR Enable bit
  5386                           ;	LPBOREN = OFF, Low-Power BOR disabled
  5387                           ;	Brown-out Reset Enable bits
  5388                           ;	BOREN = OFF, Brown-out Reset disabled
  5389   300002                     	org	3145730
  5390   300002  3D                 	db	61
  5391                           
  5392                           ;Config register CONFIG4 @ 0x300003
  5393                           ;	Brown-out Reset Voltage Selection bits
  5394                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  5395                           ;	ZCD Disable bit
  5396                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  5397                           ;	PPSLOCK bit One-Way Set Enable bit
  5398                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  5399                           ;	Stack Full/Underflow Reset Enable bit
  5400                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5401                           ;	Low Voltage Programming Enable bit
  5402                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  5403                           ;	Extended Instruction Set Enable bit
  5404                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  5405   300003                     	org	3145731
  5406   300003  DF                 	db	223
  5407                           
  5408                           ;Config register CONFIG5 @ 0x300004
  5409                           ;	WDT Period selection bits
  5410                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5411                           ;	WDT operating mode
  5412                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  5413   300004                     	org	3145732
  5414   300004  9F                 	db	159
  5415                           
  5416                           ;Config register CONFIG6 @ 0x300005
  5417                           ;	WDT Window Select bits
  5418                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5419                           ;	WDT input clock selector
  5420                           ;	WDTCCS = SC, Software Control
  5421   300005                     	org	3145733
  5422   300005  FF                 	db	255
  5423                           
  5424                           ;Config register CONFIG7 @ 0x300006
  5425                           ;	Boot Block Size selection bits
  5426                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  5427                           ;	Boot Block enable bit
  5428                           ;	BBEN = OFF, Boot block disabled
  5429                           ;	Storage Area Flash enable bit
  5430                           ;	SAFEN = OFF, SAF disabled
  5431                           ;	Background Debugger
  5432                           ;	DEBUG = OFF, Background Debugger disabled
  5433   300006                     	org	3145734
  5434   300006  FF                 	db	255
  5435                           
  5436                           ;Config register CONFIG8 @ 0x300007
  5437                           ;	Boot Block Write Protection bit
  5438                           ;	WRTB = OFF, Boot Block not Write protected
  5439                           ;	Configuration Register Write Protection bit
  5440                           ;	WRTC = OFF, Configuration registers not Write protected
  5441                           ;	Data EEPROM Write Protection bit
  5442                           ;	WRTD = OFF, Data EEPROM not Write protected
  5443                           ;	SAF Write protection bit
  5444                           ;	WRTSAF = OFF, SAF not Write Protected
  5445                           ;	Application Block write protection bit
  5446                           ;	WRTAPP = OFF, Application Block not write protected
  5447   300007                     	org	3145735
  5448   300007  FF                 	db	255
  5449                           
  5450                           ;Config register CONFIG10 @ 0x300009
  5451                           ;	PFM and Data EEPROM Code Protection bit
  5452                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  5453   300009                     	org	3145737
  5454   300009  FF                 	db	255
  5455                           tosu	equ	0x4FF
  5456                           tosh	equ	0x4FE
  5457                           tosl	equ	0x4FD
  5458                           stkptr	equ	0x4FC
  5459                           pclatu	equ	0x4FB
  5460                           pclath	equ	0x4FA
  5461                           pcl	equ	0x4F9
  5462                           tblptru	equ	0x4F8
  5463                           tblptrh	equ	0x4F7
  5464                           tblptrl	equ	0x4F6
  5465                           tablat	equ	0x4F5
  5466                           prodh	equ	0x4F4
  5467                           prodl	equ	0x4F3
  5468                           indf0	equ	0x4EF
  5469                           postinc0	equ	0x4EE
  5470                           postdec0	equ	0x4ED
  5471                           preinc0	equ	0x4EC
  5472                           plusw0	equ	0x4EB
  5473                           fsr0h	equ	0x4EA
  5474                           fsr0l	equ	0x4E9
  5475                           wreg	equ	0x4E8
  5476                           indf1	equ	0x4E7
  5477                           postinc1	equ	0x4E6
  5478                           postdec1	equ	0x4E5
  5479                           preinc1	equ	0x4E4
  5480                           plusw1	equ	0x4E3
  5481                           fsr1h	equ	0x4E2
  5482                           fsr1l	equ	0x4E1
  5483                           bsr	equ	0x4E0
  5484                           indf2	equ	0x4DF
  5485                           postinc2	equ	0x4DE
  5486                           postdec2	equ	0x4DD
  5487                           preinc2	equ	0x4DC
  5488                           plusw2	equ	0x4DB
  5489                           fsr2h	equ	0x4DA
  5490                           fsr2l	equ	0x4D9
  5491                           status	equ	0x4D8

Data Sizes:
    Strings     47
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      26
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[15]), STR_2(CODE[15]), STR_3(CODE[17]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[15]), STR_2(CODE[15]), STR_3(CODE[17]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[15]), STR_2(CODE[15]), STR_3(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_MAX7219_WriteData
    _configuro->_LCD_INIT
    _MAX7219_Init->_MAX7219_WriteData2
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _MAX7219_WriteData->___lwdiv
    _LCD_ESCRIBE_VAR_INT->___lwdiv
    ___lwdiv->___lwmod
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3698
                                             22 COMRAM     4     4      0
                   _ESCRIBE_MENSAJE2
                _LCD_ESCRIBE_VAR_INT
                  _MAX7219_WriteData
                         _POS_CURSOR
                            ___lwdiv
                            ___lwmod
                          _configuro
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     538
                           _LCD_INIT
                       _MAX7219_Init
 ---------------------------------------------------------------------------------
 (2) _MAX7219_Init                                         0     0      0     193
                 _MAX7219_WriteData2
 ---------------------------------------------------------------------------------
 (3) _MAX7219_WriteData2                                   5     4      1     193
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             2     2      0     345
                                              6 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0      90
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     105
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0      75
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _BORRAR_LCD                                           0     0      0      75
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     283
                                              5 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _ENVIA_LCD_CMD                                        3     3      0      75
                                              2 COMRAM     3     3      0
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (1) _MAX7219_WriteData                                   10     9      1     205
                                             12 COMRAM    10     9      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_ESCRIBE_VAR_INT                                  9     5      4    1884
                                             12 COMRAM     9     5      4
                         _ENVIA_CHAR
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     173
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     176
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1     283
                                              5 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           3     3      0      75
                                              2 COMRAM     3     3      0
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
     _strlen
   _LCD_ESCRIBE_VAR_INT
     _ENVIA_CHAR
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _MAX7219_WriteData
     ___lwdiv (ARG)
     ___lwmod (ARG)
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   ___lwdiv
   ___lwmod
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
     _MAX7219_Init
       _MAX7219_WriteData2

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM           95      0       0      0.0%
BITBANK5           160      0       0      0.0%
BITBANK6           256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BITBIGSFRh        1100      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBIGSFRll        173      0       0      0.0%
BITBIGSFRlh          5      0       0      0.0%
COMRAM              95     26      26     27.4%
BANK5              160      0       0      0.0%
BANK6              256      0       0      0.0%
BANK7              256      0       0      0.0%
BANK8              256      0       0      0.0%
BANK9              256      0       0      0.0%
BANK10             256      0       0      0.0%
BANK11             256      0       0      0.0%
BANK12             256      0       0      0.0%
BANK13             256      0       0      0.0%
BANK14             256      0       0      0.0%
BANK15             256      0       0      0.0%
BANK16             256      0       0      0.0%
BANK17             256      0       0      0.0%
BANK18             256      0       0      0.0%
BANK19             256      0       0      0.0%
BANK20             256      0       0      0.0%
BANK21             256      0       0      0.0%
BANK22             256      0       0      0.0%
BANK23             256      0       0      0.0%
BANK24             256      0       0      0.0%
BANK25             256      0       0      0.0%
BANK26             256      0       0      0.0%
BANK27             256      0       0      0.0%
BANK28             256      0       0      0.0%
BANK29             256      0       0      0.0%
BANK30             256      0       0      0.0%
BANK31             256      0       0      0.0%
BANK32             256      0       0      0.0%
BANK33             256      0       0      0.0%
BANK34             256      0       0      0.0%
BANK35             256      0       0      0.0%
BANK36             256      0       0      0.0%
BIGRAM            8191      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      26      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Oct 19 22:43:18 2024

                            l23 306E                              l63 2D48                              l59 2D48  
                            l76 3076                              l93 3032                              u10 3016  
                            u11 3012                              u20 302C                              u21 3028  
                 ENVIA_CHAR@aux 0505        MAX7219_WriteData@comando 0513                             l111 307E  
                           l120 2FCE                             l105 2F62                             l114 2ED4  
                           l211 2F20                             l108 3002                             l117 3056  
                           l221 2BA4                             l134 2E82                             l222 2BF0  
                           l215 2CCC                             l223 2BDA                             l216 2CB4  
                           l224 2BDC                             l217 2CB6                             l225 2BF2  
                           l218 2CCE                             l226 2C3E                             l227 2C28  
                           l228 2C2A                             l173 29DA                             l229 2C40  
                           l730 2DBC                             l723 2DB4                             l740 2E20  
                           l733 2E18                             l911 3036                             l913 3042  
                           l921 2FA0                             l915 3044                             l931 2FBC  
                           l923 2FB0                             l917 3054                             l909 2F9A  
                           l933 2FC2                             l925 2FB2                             l941 3016  
                           l935 2FC8                             l927 2FB4                             l919 2F9E  
                           l943 301C                             l951 2E88                             l929 2FB6  
                           l937 3070                             l945 302C                             l961 2EB6  
                           l953 2E8E                             l947 3078                             l939 3006  
                           l963 2EBC                             l955 2E9C                             l965 2EC2  
                           l957 2EAA                             l949 2E84                             l967 2EC8  
                           l959 2EB0                             l969 2ECE                             u410 2C22  
                           u411 2C1E                             u500 2CE2                             u420 2C3E  
                           u404 2C08                             u501 2CDE                             u421 2C3A  
                           u405 2C04                             u430 2F8E                             u510 2D00  
                           u431 2F8A                             u511 2CFC                             u440 2D64  
                           u520 2D1E                             u600 2B90                             u441 2D60  
                           u521 2D1A                             u601 2B8C                             u450 2D82  
                           u530 2D3C                             u451 2D7E                             u531 2D38  
                           u540 2F62                             u460 2D9E                             u380 2BD4  
                           u541 2F5E                             u461 2D9A                             u381 2BD0  
                           u470 2DD0                             u390 2BF0                             u374 2BBA  
                           u471 2DCC                             u391 2BEC                             u375 2BB6  
                           u480 2DEE                             u560 2CAE                             u481 2DEA  
                           u561 2CAA                             u617 2A5E                             u490 2E04  
                           u570 2CCC                             u554 2C82                             u491 2E00  
                           u571 2CC8                             u555 2C7C                             u627 2E2C  
                           u580 2706                             u581 2702                             u637 2E4A  
                           u590 272A                             u591 2726                             u647 2E66  
                           u657 2E94                             u667 2EA4                             u677 2FA6  
                           u687 2FDA                             u697 304A                             wreg 04E8  
                  ?_CURSOR_HOME 0501                  ??_ENVIA_NIBBLE 0501        MAX7219_WriteData@tmp_int 0514  
                ENVIA_CHAR@dato 0504                            l1021 2E5C                            l1013 2E22  
                          l1031 2FE8                            l1023 2FD2                            l1015 2E3A  
                          l1033 2FEA                            l1025 2FD4                            l1017 2E3C  
                          l1035 2FF0                            l1027 2FE4                            l1019 2E58  
                          l1037 2FF6                            l1029 2FE6                            l1039 2FFC  
                          l1411 2C2E                            l1501 2F2E                            l1405 2BF4  
                          l1421 2EF8                            l1413 2ED6                            l1431 2F6C  
                          l1503 2F2E                            l1511 2C44                            l1407 2C22  
                          l1423 2F02                            l1415 2EDC                            l1433 2F6E  
                          l1505 2F34                            l1441 2D52                            l1521 2C60  
                          l1513 2C4A                            l1409 2C2C                            l1425 2F0C  
                          l1417 2EE4                            l1601 2A36                            l1435 2F8E  
                          l1507 2F4E                            l1451 2D88                            l1443 2D64  
                          l1531 2CBC                            l1523 2C68                            l1515 2C5C  
                          l1427 2F16                            l1419 2EEE                            l1611 2A76  
                          l1603 2A40                            l1429 2F64                            l1509 2F50  
                          l1453 2D9E                            l1445 2D6C                            l1461 2DBE  
                          l1541 271A                            l1533 2632                            l1525 2C90  
                          l1517 2C5E                            l1621 2AA6                            l1613 2A7E  
                          l1605 2A4A                            l1455 2DA6                            l1447 2D74  
                          l1439 2D4A                            l1471 2E04                            l1463 2DD0  
                          l1543 272A                            l1535 26EA                            l1527 2CAE  
                          l1631 2B76                            l1623 2AB0                            l1615 2A88  
                          l1607 2A54                            l1457 2DA8                            l1449 2D82  
                          l1473 2E0C                            l1465 2DD8                            l1561 283A  
                          l1553 27A4                            l1545 2744                            l1537 26F6  
                          l1529 2CBA                            l1393 2BA6                            l1481 306A  
                          l1633 2B7A                            l1617 2A92                            l1609 2A6C  
                          l1459 2DAE                            l1475 2E12                            l1467 2DE0  
                          l1571 28E8                            l1555 27C2                            l1547 2760  
                          l1539 2706                            l1491 2D0C                            l1483 2CD2  
                          l1395 2BD4                            l1387 2B9A                            l1619 2A9C  
                          l1469 2DEE                            l1573 291A                            l1565 2864  
                          l1557 27E6                            l1549 2782                            l1493 2D1E  
                          l1485 2CE2                            l1397 2BDE                            l1477 3058  
                          l1629 2AB8                            l1575 294C                            l1567 288A  
                          l1559 2810                            l1583 29AC                            l1495 2D2A  
                          l1487 2CEE                            l1399 2BE0                            l1479 3066  
                          l1591 2A04                            l1569 28B6                            l1497 2D3C  
                          l1489 2D00                            l1593 2A0E                            l1585 29DC  
                          l1499 2F22                            l1579 297E                            l1595 2A18  
                          l1587 29EA                            l1597 2A22                            l1589 29F2  
                          l1599 2A2C                            STR_1 2612                            STR_2 2621  
                          STR_3 2601                            _LATD 04C1                            _main 29DC  
                          start FFFC                   ?_CURSOR_ONOFF 0501                    ___param_bank 0000  
               ??_ENVIA_LCD_CMD 0503                __end_of_LCD_INIT 2E84                    main@contador 0519  
                         ?_main 0501                 __end_of___lwdiv 2DBE                 __end_of___lwmod 2E22  
                         _OSCEN 00B3                           _PORTD 04D1                           _TRISD 04C9  
                         _TRISE 04CA                     ?_POS_CURSOR 0506     __end_of_LCD_ESCRIBE_VAR_INT 29DC  
                         tablat 04F5            __end_of_MAX7219_Init 2F22                           status 04D8  
                ??_CURSOR_ONOFF 0506                 __initialization 3080                    __end_of_main 2B98  
     LCD_ESCRIBE_VAR_INT@decena 0514                          ??_main 0517                   __activetblptr 0003  
     LCD_ESCRIBE_VAR_INT@millar 0512       LCD_ESCRIBE_VAR_INT@numero 050D       LCD_ESCRIBE_VAR_INT@unidad 0515  
                        _ANSELD 0418                          _ANSELE 0420                          _OSCFRQ 00B1  
          __end_of_ENVIA_NIBBLE 3058                       ??___lwdiv 050A                       ??___lwmod 0505  
                        isa$std 0001                          _strlen 2F64                    __mediumconst 0000  
                        tblptrh 04F7                          tblptrl 04F6                          tblptru 04F8  
                  ??_BORRAR_LCD 0506                       ?_LCD_INIT 0501                      __accesstop 0560  
       __end_of__initialization 3080                    ??_LCD_CONFIG 0506                   ___rparam_used 0001  
                  ??_ENVIA_CHAR 0503                  __pcstackCOMRAM 0501              __end_of_BORRAR_LCD 3080  
              _ESCRIBE_MENSAJE2 2F22                ENVIA_LCD_CMD@aux 0505            __end_of_CURSOR_ONOFF 3034  
            __end_of_LCD_CONFIG 2ED6              __end_of_ENVIA_CHAR 3004      LCD_ESCRIBE_VAR_INT@centena 0513  
                    ??_LCD_INIT 0507                ENVIA_NIBBLE@dato 0502                    _MAX7219_Init 2ED6  
                       ?_strlen 0501                         _OSCCON1 00AD                    ??_POS_CURSOR 0507  
             _MAX7219_WriteData 2C42                         __Hparam 0000                         __Lparam 0000  
            ?_MAX7219_WriteData 050D               __end_of_configuro 3070                         ___lwdiv 2D4A  
                       ___lwmod 2DBE                    __psmallconst 2600           __end_of_ENVIA_LCD_CMD 2FD0  
                       __pcinit 3080              __end_of_POS_CURSOR 2D4A                         __ramtop 2600  
           ??_MAX7219_WriteData 050E                         __ptext0 29DC                         __ptext1 3058  
                       __ptext2 2ED6                         __ptext3 2B98                         __ptext4 2E22  
                       __ptext5 2E84                         __ptext6 3004                         __ptext7 3070  
                       __ptext8 3078                         __ptext9 2CD0                    _ENVIA_NIBBLE 3034  
          end_of_initialization 3080       __end_of_MAX7219_WriteData 2CD0                         strlen@a 0503  
                       strlen@s 0501          MAX7219_WriteData2@dato 0501       MAX7219_WriteData2@comando 0504  
             ESCRIBE_MENSAJE2@i 0509      __end_of_MAX7219_WriteData2 2C42                       _TRISCbits 04C8  
        MAX7219_WriteData@var_x 0516        __end_of_ESCRIBE_MENSAJE2 2F64                    _CURSOR_ONOFF 3004  
            CURSOR_ONOFF@estado 0506                  __end_of_strlen 2F9C                   ??_CURSOR_HOME 0506  
           start_initialization 3080               ENVIA_LCD_CMD@dato 0504  MAX7219_WriteData@temporal_data 0511  
   LCD_ESCRIBE_VAR_INT@d_millar 0511                        ??_strlen 0503             __end_of_CURSOR_HOME 3078  
              ___lwdiv@dividend 0506                        ?___lwdiv 0506                        ?___lwmod 0501  
                     _configuro 3058                     __smallconst 2600             _LCD_ESCRIBE_VAR_INT 2632  
              ___lwdiv@quotient 050A                        _LCD_INIT 2E22                        _LATCbits 04C0  
                      _LATDbits 04C1                        _LATEbits 04C2            ?_LCD_ESCRIBE_VAR_INT 050D  
                POS_CURSOR@fila 0507                      ?_configuro 0501           MAX7219_WriteData@dato 050D  
        ESCRIBE_MENSAJE2@cadena 0506                     _CURSOR_HOME 3070        LCD_ESCRIBE_VAR_INT@punto 0510  
            _MAX7219_WriteData2 2B98           ??_LCD_ESCRIBE_VAR_INT 0511                        __Hrparam 0000  
             ?_ESCRIBE_MENSAJE2 0506                        __Lrparam 0000             ?_MAX7219_WriteData2 0501  
            ??_ESCRIBE_MENSAJE2 0507                      _ANSELCbits 0410                 ___lwdiv@divisor 0508  
          ??_MAX7219_WriteData2 0502                 ___lwdiv@counter 050C                        __ptext10 2F9C  
                      __ptext11 2C42                        __ptext12 2632                        __ptext13 2DBE  
                      __ptext14 2D4A                        __ptext15 2F22                        __ptext16 2F64  
                      __ptext17 2FD0                        __ptext18 3034    LCD_ESCRIBE_VAR_INT@n_digitos 050F  
                    _BORRAR_LCD 3078                      _LCD_CONFIG 2E84                      _ENVIA_CHAR 2FD0  
                      isa$xinst 0000                   _ENVIA_LCD_CMD 2F9C                     ??_configuro 0509  
                 ?_MAX7219_Init 0501                ___lwmod@dividend 0501                  ?_ENVIA_LCD_CMD 0501  
                ??_MAX7219_Init 0506                 ___lwmod@divisor 0503                 ___lwmod@counter 0505  
           ESCRIBE_MENSAJE2@tam 0508                     ?_BORRAR_LCD 0501                   ?_ENVIA_NIBBLE 0501  
                    _POS_CURSOR 2CD0         MAX7219_WriteData2@var_x 0505                     ?_LCD_CONFIG 0501  
                   ?_ENVIA_CHAR 0501               POS_CURSOR@columna 0506  
