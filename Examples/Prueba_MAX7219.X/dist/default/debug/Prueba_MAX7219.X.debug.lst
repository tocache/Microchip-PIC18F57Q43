

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Oct 19 22:41:19 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    24                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Generated 23/02/2024 GMT
    31                           ; 
    32                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F57Q43 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   0004E0                     bsr             equ	1248
    65   0004E9                     fsr0            equ	1257
    66   0004EA                     fsr0h           equ	1258
    67   0004E9                     fsr0l           equ	1257
    68   0004E1                     fsr1            equ	1249
    69   0004E2                     fsr1h           equ	1250
    70   0004E1                     fsr1l           equ	1249
    71   0004D9                     fsr2            equ	1241
    72   0004DA                     fsr2h           equ	1242
    73   0004D9                     fsr2l           equ	1241
    74   0004EF                     indf0           equ	1263
    75   0004E7                     indf1           equ	1255
    76   0004DF                     indf2           equ	1247
    77   0004D6                     intcon          equ	1238
    78   000041                     nvmcon          equ	65
    79   0004F9                     pcl             equ	1273
    80   0004FA                     pclath          equ	1274
    81   0004FB                     pclatu          equ	1275
    82   0004EB                     plusw0          equ	1259
    83   0004E3                     plusw1          equ	1251
    84   0004DB                     plusw2          equ	1243
    85   0004ED                     postdec0        equ	1261
    86   0004E5                     postdec1        equ	1253
    87   0004DD                     postdec2        equ	1245
    88   0004EE                     postinc0        equ	1262
    89   0004E6                     postinc1        equ	1254
    90   0004DE                     postinc2        equ	1246
    91   0004EC                     preinc0         equ	1260
    92   0004E4                     preinc1         equ	1252
    93   0004DC                     preinc2         equ	1244
    94   0004F3                     prod            equ	1267
    95   0004F4                     prodh           equ	1268
    96   0004F3                     prodl           equ	1267
    97   0004D8                     status          equ	1240
    98   0004F5                     tablat          equ	1269
    99   0004F6                     tblptr          equ	1270
   100   0004F7                     tblptrh         equ	1271
   101   0004F6                     tblptrl         equ	1270
   102   0004F8                     tblptru         equ	1272
   103   0004FD                     tosl            equ	1277
   104   0004E8                     wreg            equ	1256
   105   000039                     CLKRCON         equ	57	;# 
   106   00003A                     CLKRCLK         equ	58	;# 
   107   000040                     NVMCON0         equ	64	;# 
   108   000041                     NVMCON1         equ	65	;# 
   109   000042                     NVMLOCK         equ	66	;# 
   110   000043                     NVMADR          equ	67	;# 
   111   000043                     NVMADRL         equ	67	;# 
   112   000044                     NVMADRH         equ	68	;# 
   113   000045                     NVMADRU         equ	69	;# 
   114   000046                     NVMDAT          equ	70	;# 
   115   000046                     NVMDATL         equ	70	;# 
   116   000047                     NVMDATH         equ	71	;# 
   117   000048                     VREGCON         equ	72	;# 
   118   000049                     BORCON          equ	73	;# 
   119   00004A                     HLVDCON0        equ	74	;# 
   120   00004B                     HLVDCON1        equ	75	;# 
   121   00004C                     ZCDCON          equ	76	;# 
   122   000060                     PMD0            equ	96	;# 
   123   000061                     PMD1            equ	97	;# 
   124   000063                     PMD3            equ	99	;# 
   125   000064                     PMD4            equ	100	;# 
   126   000065                     PMD5            equ	101	;# 
   127   000066                     PMD6            equ	102	;# 
   128   000067                     PMD7            equ	103	;# 
   129   000068                     PMD8            equ	104	;# 
   130   00006A                     MD1CON0         equ	106	;# 
   131   00006B                     MD1CON1         equ	107	;# 
   132   00006C                     MD1SRC          equ	108	;# 
   133   00006D                     MD1CARL         equ	109	;# 
   134   00006E                     MD1CARH         equ	110	;# 
   135   00006F                     CMOUT           equ	111	;# 
   136   000070                     CM1CON0         equ	112	;# 
   137   000071                     CM1CON1         equ	113	;# 
   138   000072                     CM1NCH          equ	114	;# 
   139   000073                     CM1PCH          equ	115	;# 
   140   000074                     CM2CON0         equ	116	;# 
   141   000075                     CM2CON1         equ	117	;# 
   142   000076                     CM2NCH          equ	118	;# 
   143   000077                     CM2PCH          equ	119	;# 
   144   000078                     WDTCON0         equ	120	;# 
   145   000079                     WDTCON1         equ	121	;# 
   146   00007A                     WDTPS           equ	122	;# 
   147   00007A                     WDTPSL          equ	122	;# 
   148   00007B                     WDTPSH          equ	123	;# 
   149   00007C                     WDTTMR          equ	124	;# 
   150   00007D                     DAC1DAT         equ	125	;# 
   151   00007D                     DAC1DATL        equ	125	;# 
   152   00007F                     DAC1CON         equ	127	;# 
   153   000080                     SPI1RXB         equ	128	;# 
   154   000081                     SPI1TXB         equ	129	;# 
   155   000082                     SPI1TCNT        equ	130	;# 
   156   000082                     SPI1TCNTL       equ	130	;# 
   157   000083                     SPI1TCNTH       equ	131	;# 
   158   000084                     SPI1CON0        equ	132	;# 
   159   000085                     SPI1CON1        equ	133	;# 
   160   000086                     SPI1CON2        equ	134	;# 
   161   000087                     SPI1STATUS      equ	135	;# 
   162   000088                     SPI1TWIDTH      equ	136	;# 
   163   000089                     SPI1BAUD        equ	137	;# 
   164   00008A                     SPI1INTF        equ	138	;# 
   165   00008B                     SPI1INTE        equ	139	;# 
   166   00008C                     SPI1CLK         equ	140	;# 
   167   00008D                     SPI2RXB         equ	141	;# 
   168   00008E                     SPI2TXB         equ	142	;# 
   169   00008F                     SPI2TCNT        equ	143	;# 
   170   00008F                     SPI2TCNTL       equ	143	;# 
   171   000090                     SPI2TCNTH       equ	144	;# 
   172   000091                     SPI2CON0        equ	145	;# 
   173   000092                     SPI2CON1        equ	146	;# 
   174   000093                     SPI2CON2        equ	147	;# 
   175   000094                     SPI2STATUS      equ	148	;# 
   176   000095                     SPI2TWIDTH      equ	149	;# 
   177   000096                     SPI2BAUD        equ	150	;# 
   178   000097                     SPI2INTF        equ	151	;# 
   179   000098                     SPI2INTE        equ	152	;# 
   180   000099                     SPI2CLK         equ	153	;# 
   181   0000AC                     ACTCON          equ	172	;# 
   182   0000AD                     OSCCON1         equ	173	;# 
   183   0000AE                     OSCCON2         equ	174	;# 
   184   0000AF                     OSCCON3         equ	175	;# 
   185   0000B0                     OSCTUNE         equ	176	;# 
   186   0000B1                     OSCFRQ          equ	177	;# 
   187   0000B1                     OSCFREQ         equ	177	;# 
   188   0000B2                     OSCSTAT         equ	178	;# 
   189   0000B2                     OSCSTAT1        equ	178	;# 
   190   0000B3                     OSCEN           equ	179	;# 
   191   0000B4                     PRLOCK          equ	180	;# 
   192   0000B5                     SCANPR          equ	181	;# 
   193   0000B6                     DMA1PR          equ	182	;# 
   194   0000B7                     DMA2PR          equ	183	;# 
   195   0000B8                     DMA3PR          equ	184	;# 
   196   0000B9                     DMA4PR          equ	185	;# 
   197   0000BA                     DMA5PR          equ	186	;# 
   198   0000BB                     DMA6PR          equ	187	;# 
   199   0000BE                     MAINPR          equ	190	;# 
   200   0000BF                     ISRPR           equ	191	;# 
   201   0000D4                     CLCDATA         equ	212	;# 
   202   0000D5                     CLCSELECT       equ	213	;# 
   203   0000D6                     CLCnCON         equ	214	;# 
   204   0000D7                     CLCnPOL         equ	215	;# 
   205   0000D8                     CLCnSEL0        equ	216	;# 
   206   0000D9                     CLCnSEL1        equ	217	;# 
   207   0000DA                     CLCnSEL2        equ	218	;# 
   208   0000DB                     CLCnSEL3        equ	219	;# 
   209   0000DC                     CLCnGLS0        equ	220	;# 
   210   0000DD                     CLCnGLS1        equ	221	;# 
   211   0000DE                     CLCnGLS2        equ	222	;# 
   212   0000DF                     CLCnGLS3        equ	223	;# 
   213   0000E8                     DMASELECT       equ	232	;# 
   214   0000E9                     DMAnBUF         equ	233	;# 
   215   0000EA                     DMAnDCNT        equ	234	;# 
   216   0000EA                     DMAnDCNTL       equ	234	;# 
   217   0000EB                     DMAnDCNTH       equ	235	;# 
   218   0000EC                     DMAnDPTR        equ	236	;# 
   219   0000EC                     DMAnDPTRL       equ	236	;# 
   220   0000ED                     DMAnDPTRH       equ	237	;# 
   221   0000EE                     DMAnDSZ         equ	238	;# 
   222   0000EE                     DMAnDSZL        equ	238	;# 
   223   0000EF                     DMAnDSZH        equ	239	;# 
   224   0000F0                     DMAnDSA         equ	240	;# 
   225   0000F0                     DMAnDSAL        equ	240	;# 
   226   0000F1                     DMAnDSAH        equ	241	;# 
   227   0000F2                     DMAnSCNT        equ	242	;# 
   228   0000F2                     DMAnSCNTL       equ	242	;# 
   229   0000F3                     DMAnSCNTH       equ	243	;# 
   230   0000F4                     DMAnSPTR        equ	244	;# 
   231   0000F4                     DMAnSPTRL       equ	244	;# 
   232   0000F5                     DMAnSPTRH       equ	245	;# 
   233   0000F6                     DMAnSPTRU       equ	246	;# 
   234   0000F7                     DMAnSSZ         equ	247	;# 
   235   0000F7                     DMAnSSZL        equ	247	;# 
   236   0000F8                     DMAnSSZH        equ	248	;# 
   237   0000F9                     DMAnSSA         equ	249	;# 
   238   0000F9                     DMAnSSAL        equ	249	;# 
   239   0000FA                     DMAnSSAH        equ	250	;# 
   240   0000FB                     DMAnSSAU        equ	251	;# 
   241   0000FC                     DMAnCON0        equ	252	;# 
   242   0000FD                     DMAnCON1        equ	253	;# 
   243   0000FE                     DMAnAIRQ        equ	254	;# 
   244   0000FF                     DMAnSIRQ        equ	255	;# 
   245   000200                     PPSLOCK         equ	512	;# 
   246   000201                     RA0PPS          equ	513	;# 
   247   000202                     RA1PPS          equ	514	;# 
   248   000203                     RA2PPS          equ	515	;# 
   249   000204                     RA3PPS          equ	516	;# 
   250   000205                     RA4PPS          equ	517	;# 
   251   000206                     RA5PPS          equ	518	;# 
   252   000207                     RA6PPS          equ	519	;# 
   253   000208                     RA7PPS          equ	520	;# 
   254   000209                     RB0PPS          equ	521	;# 
   255   00020A                     RB1PPS          equ	522	;# 
   256   00020B                     RB2PPS          equ	523	;# 
   257   00020C                     RB3PPS          equ	524	;# 
   258   00020D                     RB4PPS          equ	525	;# 
   259   00020E                     RB5PPS          equ	526	;# 
   260   00020F                     RB6PPS          equ	527	;# 
   261   000210                     RB7PPS          equ	528	;# 
   262   000211                     RC0PPS          equ	529	;# 
   263   000212                     RC1PPS          equ	530	;# 
   264   000213                     RC2PPS          equ	531	;# 
   265   000214                     RC3PPS          equ	532	;# 
   266   000215                     RC4PPS          equ	533	;# 
   267   000216                     RC5PPS          equ	534	;# 
   268   000217                     RC6PPS          equ	535	;# 
   269   000218                     RC7PPS          equ	536	;# 
   270   000219                     RD0PPS          equ	537	;# 
   271   00021A                     RD1PPS          equ	538	;# 
   272   00021B                     RD2PPS          equ	539	;# 
   273   00021C                     RD3PPS          equ	540	;# 
   274   00021D                     RD4PPS          equ	541	;# 
   275   00021E                     RD5PPS          equ	542	;# 
   276   00021F                     RD6PPS          equ	543	;# 
   277   000220                     RD7PPS          equ	544	;# 
   278   000221                     RE0PPS          equ	545	;# 
   279   000222                     RE1PPS          equ	546	;# 
   280   000223                     RE2PPS          equ	547	;# 
   281   000229                     RF0PPS          equ	553	;# 
   282   00022A                     RF1PPS          equ	554	;# 
   283   00022B                     RF2PPS          equ	555	;# 
   284   00022C                     RF3PPS          equ	556	;# 
   285   00022D                     RF4PPS          equ	557	;# 
   286   00022E                     RF5PPS          equ	558	;# 
   287   00022F                     RF6PPS          equ	559	;# 
   288   000230                     RF7PPS          equ	560	;# 
   289   00023E                     INT0PPS         equ	574	;# 
   290   00023F                     INT1PPS         equ	575	;# 
   291   000240                     INT2PPS         equ	576	;# 
   292   000241                     T0CKIPPS        equ	577	;# 
   293   000242                     T1CKIPPS        equ	578	;# 
   294   000243                     T1GPPS          equ	579	;# 
   295   000244                     T3CKIPPS        equ	580	;# 
   296   000245                     T3GPPS          equ	581	;# 
   297   000246                     T5CKIPPS        equ	582	;# 
   298   000247                     T5GPPS          equ	583	;# 
   299   000248                     T2INPPS         equ	584	;# 
   300   000249                     T4INPPS         equ	585	;# 
   301   00024A                     T6INPPS         equ	586	;# 
   302   00024F                     CCP1PPS         equ	591	;# 
   303   000250                     CCP2PPS         equ	592	;# 
   304   000251                     CCP3PPS         equ	593	;# 
   305   000253                     PWM1ERSPPS      equ	595	;# 
   306   000254                     PWM2ERSPPS      equ	596	;# 
   307   000255                     PWM3ERSPPS      equ	597	;# 
   308   000257                     PWMIN0PPS       equ	599	;# 
   309   000258                     PWMIN1PPS       equ	600	;# 
   310   000259                     SMT1WINPPS      equ	601	;# 
   311   00025A                     SMT1SIGPPS      equ	602	;# 
   312   00025B                     CWG1PPS         equ	603	;# 
   313   00025B                     CWG1INPPS       equ	603	;# 
   314   00025C                     CWG2PPS         equ	604	;# 
   315   00025C                     CWG2INPPS       equ	604	;# 
   316   00025D                     CWG3PPS         equ	605	;# 
   317   00025D                     CWG3INPPS       equ	605	;# 
   318   00025E                     MD1CARLPPS      equ	606	;# 
   319   00025E                     MDCARLPPS       equ	606	;# 
   320   00025F                     MD1CARHPPS      equ	607	;# 
   321   00025F                     MDCARHPPS       equ	607	;# 
   322   000260                     MD1SRCPPS       equ	608	;# 
   323   000260                     MDSRCPPS        equ	608	;# 
   324   000261                     CLCIN0PPS       equ	609	;# 
   325   000262                     CLCIN1PPS       equ	610	;# 
   326   000263                     CLCIN2PPS       equ	611	;# 
   327   000264                     CLCIN3PPS       equ	612	;# 
   328   000265                     CLCIN4PPS       equ	613	;# 
   329   000266                     CLCIN5PPS       equ	614	;# 
   330   000267                     CLCIN6PPS       equ	615	;# 
   331   000268                     CLCIN7PPS       equ	616	;# 
   332   000269                     ADACTPPS        equ	617	;# 
   333   00026A                     SPI1SCKPPS      equ	618	;# 
   334   00026B                     SPI1SDIPPS      equ	619	;# 
   335   00026C                     SPI1SSPPS       equ	620	;# 
   336   00026D                     SPI2SCKPPS      equ	621	;# 
   337   00026E                     SPI2SDIPPS      equ	622	;# 
   338   00026F                     SPI2SSPPS       equ	623	;# 
   339   000270                     I2C1SDAPPS      equ	624	;# 
   340   000271                     I2C1SCLPPS      equ	625	;# 
   341   000272                     U1RXPPS         equ	626	;# 
   342   000273                     U1CTSPPS        equ	627	;# 
   343   000274                     U2RXPPS         equ	628	;# 
   344   000275                     U2CTSPPS        equ	629	;# 
   345   000276                     U3RXPPS         equ	630	;# 
   346   000277                     U3CTSPPS        equ	631	;# 
   347   000278                     U4RXPPS         equ	632	;# 
   348   000279                     U4CTSPPS        equ	633	;# 
   349   00027A                     U5RXPPS         equ	634	;# 
   350   00027B                     U5CTSPPS        equ	635	;# 
   351   000286                     RC4I2C          equ	646	;# 
   352   000287                     RC3I2C          equ	647	;# 
   353   000288                     RB2I2C          equ	648	;# 
   354   000289                     RB1I2C          equ	649	;# 
   355   00028B                     I2C1RXB         equ	651	;# 
   356   00028C                     I2C1TXB         equ	652	;# 
   357   00028D                     I2C1CNT         equ	653	;# 
   358   00028E                     I2C1ADB0        equ	654	;# 
   359   00028F                     I2C1ADB1        equ	655	;# 
   360   000290                     I2C1ADR0        equ	656	;# 
   361   000291                     I2C1ADR1        equ	657	;# 
   362   000292                     I2C1ADR2        equ	658	;# 
   363   000293                     I2C1ADR3        equ	659	;# 
   364   000294                     I2C1CON0        equ	660	;# 
   365   000295                     I2C1CON1        equ	661	;# 
   366   000296                     I2C1CON2        equ	662	;# 
   367   000297                     I2C1ERR         equ	663	;# 
   368   000298                     I2C1STAT0       equ	664	;# 
   369   000299                     I2C1STAT1       equ	665	;# 
   370   00029A                     I2C1PIR         equ	666	;# 
   371   00029B                     I2C1PIE         equ	667	;# 
   372   00029C                     I2C1CLK         equ	668	;# 
   373   00029D                     I2C1BTO         equ	669	;# 
   374   0002A1                     U1RXB           equ	673	;# 
   375   0002A1                     U1RXBL          equ	673	;# 
   376   0002A2                     U1RXCHK         equ	674	;# 
   377   0002A3                     U1TXB           equ	675	;# 
   378   0002A3                     U1TXBL          equ	675	;# 
   379   0002A4                     U1TXCHK         equ	676	;# 
   380   0002A5                     U1P1            equ	677	;# 
   381   0002A5                     U1P1L           equ	677	;# 
   382   0002A6                     U1P1H           equ	678	;# 
   383   0002A7                     U1P2            equ	679	;# 
   384   0002A7                     U1P2L           equ	679	;# 
   385   0002A8                     U1P2H           equ	680	;# 
   386   0002A9                     U1P3            equ	681	;# 
   387   0002A9                     U1P3L           equ	681	;# 
   388   0002AA                     U1P3H           equ	682	;# 
   389   0002AB                     U1CON0          equ	683	;# 
   390   0002AC                     U1CON1          equ	684	;# 
   391   0002AD                     U1CON2          equ	685	;# 
   392   0002AE                     U1BRG           equ	686	;# 
   393   0002AE                     U1BRGL          equ	686	;# 
   394   0002AF                     U1BRGH          equ	687	;# 
   395   0002B0                     U1FIFO          equ	688	;# 
   396   0002B1                     U1UIR           equ	689	;# 
   397   0002B2                     U1ERRIR         equ	690	;# 
   398   0002B3                     U1ERRIE         equ	691	;# 
   399   0002B4                     U2RXB           equ	692	;# 
   400   0002B4                     U2RXBL          equ	692	;# 
   401   0002B6                     U2TXB           equ	694	;# 
   402   0002B6                     U2TXBL          equ	694	;# 
   403   0002B8                     U2P1            equ	696	;# 
   404   0002B8                     U2P1L           equ	696	;# 
   405   0002BA                     U2P2            equ	698	;# 
   406   0002BA                     U2P2L           equ	698	;# 
   407   0002BC                     U2P3            equ	700	;# 
   408   0002BC                     U2P3L           equ	700	;# 
   409   0002BE                     U2CON0          equ	702	;# 
   410   0002BF                     U2CON1          equ	703	;# 
   411   0002C0                     U2CON2          equ	704	;# 
   412   0002C1                     U2BRG           equ	705	;# 
   413   0002C1                     U2BRGL          equ	705	;# 
   414   0002C2                     U2BRGH          equ	706	;# 
   415   0002C3                     U2FIFO          equ	707	;# 
   416   0002C4                     U2UIR           equ	708	;# 
   417   0002C5                     U2ERRIR         equ	709	;# 
   418   0002C6                     U2ERRIE         equ	710	;# 
   419   0002C7                     U3RXB           equ	711	;# 
   420   0002C7                     U3RXBL          equ	711	;# 
   421   0002C9                     U3TXB           equ	713	;# 
   422   0002C9                     U3TXBL          equ	713	;# 
   423   0002CB                     U3P1            equ	715	;# 
   424   0002CB                     U3P1L           equ	715	;# 
   425   0002CD                     U3P2            equ	717	;# 
   426   0002CD                     U3P2L           equ	717	;# 
   427   0002CF                     U3P3            equ	719	;# 
   428   0002CF                     U3P3L           equ	719	;# 
   429   0002D1                     U3CON0          equ	721	;# 
   430   0002D2                     U3CON1          equ	722	;# 
   431   0002D3                     U3CON2          equ	723	;# 
   432   0002D4                     U3BRG           equ	724	;# 
   433   0002D4                     U3BRGL          equ	724	;# 
   434   0002D5                     U3BRGH          equ	725	;# 
   435   0002D6                     U3FIFO          equ	726	;# 
   436   0002D7                     U3UIR           equ	727	;# 
   437   0002D8                     U3ERRIR         equ	728	;# 
   438   0002D9                     U3ERRIE         equ	729	;# 
   439   0002DA                     U4RXB           equ	730	;# 
   440   0002DA                     U4RXBL          equ	730	;# 
   441   0002DC                     U4TXB           equ	732	;# 
   442   0002DC                     U4TXBL          equ	732	;# 
   443   0002DE                     U4P1            equ	734	;# 
   444   0002DE                     U4P1L           equ	734	;# 
   445   0002E0                     U4P2            equ	736	;# 
   446   0002E0                     U4P2L           equ	736	;# 
   447   0002E2                     U4P3            equ	738	;# 
   448   0002E2                     U4P3L           equ	738	;# 
   449   0002E4                     U4CON0          equ	740	;# 
   450   0002E5                     U4CON1          equ	741	;# 
   451   0002E6                     U4CON2          equ	742	;# 
   452   0002E7                     U4BRG           equ	743	;# 
   453   0002E7                     U4BRGL          equ	743	;# 
   454   0002E8                     U4BRGH          equ	744	;# 
   455   0002E9                     U4FIFO          equ	745	;# 
   456   0002EA                     U4UIR           equ	746	;# 
   457   0002EB                     U4ERRIR         equ	747	;# 
   458   0002EC                     U4ERRIE         equ	748	;# 
   459   0002ED                     U5RXB           equ	749	;# 
   460   0002ED                     U5RXBL          equ	749	;# 
   461   0002EF                     U5TXB           equ	751	;# 
   462   0002EF                     U5TXBL          equ	751	;# 
   463   0002F1                     U5P1            equ	753	;# 
   464   0002F1                     U5P1L           equ	753	;# 
   465   0002F3                     U5P2            equ	755	;# 
   466   0002F3                     U5P2L           equ	755	;# 
   467   0002F5                     U5P3            equ	757	;# 
   468   0002F5                     U5P3L           equ	757	;# 
   469   0002F7                     U5CON0          equ	759	;# 
   470   0002F8                     U5CON1          equ	760	;# 
   471   0002F9                     U5CON2          equ	761	;# 
   472   0002FA                     U5BRG           equ	762	;# 
   473   0002FA                     U5BRGL          equ	762	;# 
   474   0002FB                     U5BRGH          equ	763	;# 
   475   0002FC                     U5FIFO          equ	764	;# 
   476   0002FD                     U5UIR           equ	765	;# 
   477   0002FE                     U5ERRIR         equ	766	;# 
   478   0002FF                     U5ERRIE         equ	767	;# 
   479   000300                     SMT1TMR         equ	768	;# 
   480   000300                     SMT1TMRL        equ	768	;# 
   481   000301                     SMT1TMRH        equ	769	;# 
   482   000302                     SMT1TMRU        equ	770	;# 
   483   000303                     SMT1CPR         equ	771	;# 
   484   000303                     SMT1CPRL        equ	771	;# 
   485   000304                     SMT1CPRH        equ	772	;# 
   486   000305                     SMT1CPRU        equ	773	;# 
   487   000306                     SMT1CPW         equ	774	;# 
   488   000306                     SMT1CPWL        equ	774	;# 
   489   000307                     SMT1CPWH        equ	775	;# 
   490   000308                     SMT1CPWU        equ	776	;# 
   491   000309                     SMT1PR          equ	777	;# 
   492   000309                     SMT1PRL         equ	777	;# 
   493   00030A                     SMT1PRH         equ	778	;# 
   494   00030B                     SMT1PRU         equ	779	;# 
   495   00030C                     SMT1CON0        equ	780	;# 
   496   00030D                     SMT1CON1        equ	781	;# 
   497   00030E                     SMT1STAT        equ	782	;# 
   498   00030F                     SMT1CLK         equ	783	;# 
   499   000310                     SMT1SIG         equ	784	;# 
   500   000311                     SMT1WIN         equ	785	;# 
   501   000318                     TMR0L           equ	792	;# 
   502   000318                     TMR0            equ	792	;# 
   503   000319                     TMR0H           equ	793	;# 
   504   000319                     PR0             equ	793	;# 
   505   00031A                     T0CON0          equ	794	;# 
   506   00031B                     T0CON1          equ	795	;# 
   507   00031C                     TMR1            equ	796	;# 
   508   00031C                     TMR1L           equ	796	;# 
   509   00031D                     TMR1H           equ	797	;# 
   510   00031E                     T1CON           equ	798	;# 
   511   00031E                     TMR1CON         equ	798	;# 
   512   00031F                     T1GCON          equ	799	;# 
   513   00031F                     TMR1GCON        equ	799	;# 
   514   000320                     T1GATE          equ	800	;# 
   515   000320                     TMR1GATE        equ	800	;# 
   516   000321                     T1CLK           equ	801	;# 
   517   000321                     TMR1CLK         equ	801	;# 
   518   000321                     PR1             equ	801	;# 
   519   000322                     T2TMR           equ	802	;# 
   520   000322                     TMR2            equ	802	;# 
   521   000323                     T2PR            equ	803	;# 
   522   000323                     PR2             equ	803	;# 
   523   000324                     T2CON           equ	804	;# 
   524   000325                     T2HLT           equ	805	;# 
   525   000326                     T2CLKCON        equ	806	;# 
   526   000326                     T2CLK           equ	806	;# 
   527   000327                     T2RST           equ	807	;# 
   528   000328                     TMR3            equ	808	;# 
   529   000328                     TMR3L           equ	808	;# 
   530   000329                     TMR3H           equ	809	;# 
   531   00032A                     T3CON           equ	810	;# 
   532   00032A                     TMR3CON         equ	810	;# 
   533   00032B                     T3GCON          equ	811	;# 
   534   00032B                     TMR3GCON        equ	811	;# 
   535   00032C                     T3GATE          equ	812	;# 
   536   00032C                     TMR3GATE        equ	812	;# 
   537   00032D                     T3CLK           equ	813	;# 
   538   00032D                     TMR3CLK         equ	813	;# 
   539   00032D                     PR3             equ	813	;# 
   540   00032E                     T4TMR           equ	814	;# 
   541   00032E                     TMR4            equ	814	;# 
   542   00032F                     T4PR            equ	815	;# 
   543   00032F                     PR4             equ	815	;# 
   544   000330                     T4CON           equ	816	;# 
   545   000331                     T4HLT           equ	817	;# 
   546   000332                     T4CLKCON        equ	818	;# 
   547   000332                     T4CLK           equ	818	;# 
   548   000333                     T4RST           equ	819	;# 
   549   000334                     TMR5            equ	820	;# 
   550   000334                     TMR5L           equ	820	;# 
   551   000335                     TMR5H           equ	821	;# 
   552   000336                     T5CON           equ	822	;# 
   553   000336                     TMR5CON         equ	822	;# 
   554   000337                     T5GCON          equ	823	;# 
   555   000337                     TMR5GCON        equ	823	;# 
   556   000338                     T5GATE          equ	824	;# 
   557   000338                     TMR5GATE        equ	824	;# 
   558   000339                     T5CLK           equ	825	;# 
   559   000339                     TMR5CLK         equ	825	;# 
   560   000339                     PR5             equ	825	;# 
   561   00033A                     T6TMR           equ	826	;# 
   562   00033A                     TMR6            equ	826	;# 
   563   00033B                     T6PR            equ	827	;# 
   564   00033B                     PR6             equ	827	;# 
   565   00033C                     T6CON           equ	828	;# 
   566   00033D                     T6HLT           equ	829	;# 
   567   00033E                     T6CLKCON        equ	830	;# 
   568   00033E                     T6CLK           equ	830	;# 
   569   00033F                     T6RST           equ	831	;# 
   570   000340                     CCPR1           equ	832	;# 
   571   000340                     CCPR1L          equ	832	;# 
   572   000341                     CCPR1H          equ	833	;# 
   573   000342                     CCP1CON         equ	834	;# 
   574   000343                     CCP1CAP         equ	835	;# 
   575   000344                     CCPR2           equ	836	;# 
   576   000344                     CCPR2L          equ	836	;# 
   577   000345                     CCPR2H          equ	837	;# 
   578   000346                     CCP2CON         equ	838	;# 
   579   000347                     CCP2CAP         equ	839	;# 
   580   000348                     CCPR3           equ	840	;# 
   581   000348                     CCPR3L          equ	840	;# 
   582   000349                     CCPR3H          equ	841	;# 
   583   00034A                     CCP3CON         equ	842	;# 
   584   00034B                     CCP3CAP         equ	843	;# 
   585   00034C                     CCPTMRS0        equ	844	;# 
   586   00034F                     CRCDATA         equ	847	;# 
   587   00034F                     CRCDATL         equ	847	;# 
   588   000350                     CRCDATH         equ	848	;# 
   589   000351                     CRCACC          equ	849	;# 
   590   000351                     CRCACCL         equ	849	;# 
   591   000352                     CRCACCH         equ	850	;# 
   592   000353                     CRCSHFT         equ	851	;# 
   593   000353                     CRCSHIFTL       equ	851	;# 
   594   000354                     CRCSHIFTH       equ	852	;# 
   595   000355                     CRCXOR          equ	853	;# 
   596   000355                     CRCXORL         equ	853	;# 
   597   000356                     CRCXORH         equ	854	;# 
   598   000357                     CRCCON0         equ	855	;# 
   599   000358                     CRCCON1         equ	856	;# 
   600   00035A                     SCANLADR        equ	858	;# 
   601   00035A                     SCANLADRL       equ	858	;# 
   602   00035B                     SCANLADRH       equ	859	;# 
   603   00035C                     SCANLADRU       equ	860	;# 
   604   00035D                     SCANHADR        equ	861	;# 
   605   00035D                     SCANHADRL       equ	861	;# 
   606   00035E                     SCANHADRH       equ	862	;# 
   607   00035F                     SCANHADRU       equ	863	;# 
   608   000360                     SCANCON0        equ	864	;# 
   609   000361                     SCANTRIG        equ	865	;# 
   610   000362                     IPR0            equ	866	;# 
   611   000363                     IPR1            equ	867	;# 
   612   000364                     IPR2            equ	868	;# 
   613   000365                     IPR3            equ	869	;# 
   614   000366                     IPR4            equ	870	;# 
   615   000367                     IPR5            equ	871	;# 
   616   000368                     IPR6            equ	872	;# 
   617   000369                     IPR7            equ	873	;# 
   618   00036A                     IPR8            equ	874	;# 
   619   00036B                     IPR9            equ	875	;# 
   620   00036C                     IPR10           equ	876	;# 
   621   00036D                     IPR11           equ	877	;# 
   622   00036E                     IPR12           equ	878	;# 
   623   00036F                     IPR13           equ	879	;# 
   624   000370                     IPR14           equ	880	;# 
   625   000371                     IPR15           equ	881	;# 
   626   000373                     STATUS_CSHAD    equ	883	;# 
   627   000374                     WREG_CSHAD      equ	884	;# 
   628   000375                     BSR_CSHAD       equ	885	;# 
   629   000376                     SHADCON         equ	886	;# 
   630   000377                     STATUS_SHAD     equ	887	;# 
   631   000378                     WREG_SHAD       equ	888	;# 
   632   000379                     BSR_SHAD        equ	889	;# 
   633   00037A                     PCLATH_SHAD     equ	890	;# 
   634   00037B                     PCLATU_SHAD     equ	891	;# 
   635   00037C                     FSR0SH          equ	892	;# 
   636   00037C                     FSR0L_SHAD      equ	892	;# 
   637   00037D                     FSR0H_SHAD      equ	893	;# 
   638   00037E                     FSR1SH          equ	894	;# 
   639   00037E                     FSR1L_SHAD      equ	894	;# 
   640   00037F                     FSR1H_SHAD      equ	895	;# 
   641   000380                     FSR2SH          equ	896	;# 
   642   000380                     FSR2L_SHAD      equ	896	;# 
   643   000381                     FSR2H_SHAD      equ	897	;# 
   644   000382                     PRODSH          equ	898	;# 
   645   000382                     PRODL_SHAD      equ	898	;# 
   646   000383                     PRODH_SHAD      equ	899	;# 
   647   0003BC                     CWG1CLK         equ	956	;# 
   648   0003BC                     CWG1CLKCON      equ	956	;# 
   649   0003BD                     CWG1ISM         equ	957	;# 
   650   0003BD                     CWG1DAT         equ	957	;# 
   651   0003BE                     CWG1DBR         equ	958	;# 
   652   0003BF                     CWG1DBF         equ	959	;# 
   653   0003C0                     CWG1CON0        equ	960	;# 
   654   0003C1                     CWG1CON1        equ	961	;# 
   655   0003C2                     CWG1AS0         equ	962	;# 
   656   0003C3                     CWG1AS1         equ	963	;# 
   657   0003C4                     CWG1STR         equ	964	;# 
   658   0003C5                     CWG2CLK         equ	965	;# 
   659   0003C5                     CWG2CLKCON      equ	965	;# 
   660   0003C6                     CWG2ISM         equ	966	;# 
   661   0003C6                     CWG2DAT         equ	966	;# 
   662   0003C7                     CWG2DBR         equ	967	;# 
   663   0003C8                     CWG2DBF         equ	968	;# 
   664   0003C9                     CWG2CON0        equ	969	;# 
   665   0003CA                     CWG2CON1        equ	970	;# 
   666   0003CB                     CWG2AS0         equ	971	;# 
   667   0003CC                     CWG2AS1         equ	972	;# 
   668   0003CD                     CWG2STR         equ	973	;# 
   669   0003CE                     CWG3CLK         equ	974	;# 
   670   0003CE                     CWG3CLKCON      equ	974	;# 
   671   0003CF                     CWG3ISM         equ	975	;# 
   672   0003CF                     CWG3DAT         equ	975	;# 
   673   0003D0                     CWG3DBR         equ	976	;# 
   674   0003D1                     CWG3DBF         equ	977	;# 
   675   0003D2                     CWG3CON0        equ	978	;# 
   676   0003D3                     CWG3CON1        equ	979	;# 
   677   0003D4                     CWG3AS0         equ	980	;# 
   678   0003D5                     CWG3AS1         equ	981	;# 
   679   0003D6                     CWG3STR         equ	982	;# 
   680   0003D7                     FVRCON          equ	983	;# 
   681   0003D8                     ADCPCON         equ	984	;# 
   682   0003D8                     ADCP            equ	984	;# 
   683   0003D9                     ADLTH           equ	985	;# 
   684   0003D9                     ADLTHL          equ	985	;# 
   685   0003DA                     ADLTHH          equ	986	;# 
   686   0003DB                     ADUTH           equ	987	;# 
   687   0003DB                     ADUTHL          equ	987	;# 
   688   0003DC                     ADUTHH          equ	988	;# 
   689   0003DD                     ADERR           equ	989	;# 
   690   0003DD                     ADERRL          equ	989	;# 
   691   0003DE                     ADERRH          equ	990	;# 
   692   0003DF                     ADSTPT          equ	991	;# 
   693   0003DF                     ADSTPTL         equ	991	;# 
   694   0003E0                     ADSTPTH         equ	992	;# 
   695   0003E1                     ADFLTR          equ	993	;# 
   696   0003E1                     ADFLTRL         equ	993	;# 
   697   0003E2                     ADFLTRH         equ	994	;# 
   698   0003E3                     ADACC           equ	995	;# 
   699   0003E3                     ADACCL          equ	995	;# 
   700   0003E4                     ADACCH          equ	996	;# 
   701   0003E5                     ADACCU          equ	997	;# 
   702   0003E6                     ADCNT           equ	998	;# 
   703   0003E7                     ADRPT           equ	999	;# 
   704   0003E8                     ADPREV          equ	1000	;# 
   705   0003E8                     ADPREVL         equ	1000	;# 
   706   0003E9                     ADPREVH         equ	1001	;# 
   707   0003EA                     ADRES           equ	1002	;# 
   708   0003EA                     ADRESL          equ	1002	;# 
   709   0003EB                     ADRESH          equ	1003	;# 
   710   0003EC                     ADPCH           equ	1004	;# 
   711   0003EE                     ADACQ           equ	1006	;# 
   712   0003EE                     ADACQL          equ	1006	;# 
   713   0003EF                     ADACQH          equ	1007	;# 
   714   0003F0                     ADCAP           equ	1008	;# 
   715   0003F1                     ADPRE           equ	1009	;# 
   716   0003F1                     ADPREL          equ	1009	;# 
   717   0003F2                     ADPREH          equ	1010	;# 
   718   0003F3                     ADCON0          equ	1011	;# 
   719   0003F4                     ADCON1          equ	1012	;# 
   720   0003F5                     ADCON2          equ	1013	;# 
   721   0003F6                     ADCON3          equ	1014	;# 
   722   0003F7                     ADSTAT          equ	1015	;# 
   723   0003F8                     ADREF           equ	1016	;# 
   724   0003F9                     ADACT           equ	1017	;# 
   725   0003FA                     ADCLK           equ	1018	;# 
   726   000400                     ANSELA          equ	1024	;# 
   727   000401                     WPUA            equ	1025	;# 
   728   000402                     ODCONA          equ	1026	;# 
   729   000403                     SLRCONA         equ	1027	;# 
   730   000404                     INLVLA          equ	1028	;# 
   731   000405                     IOCAP           equ	1029	;# 
   732   000406                     IOCAN           equ	1030	;# 
   733   000407                     IOCAF           equ	1031	;# 
   734   000408                     ANSELB          equ	1032	;# 
   735   000409                     WPUB            equ	1033	;# 
   736   00040A                     ODCONB          equ	1034	;# 
   737   00040B                     SLRCONB         equ	1035	;# 
   738   00040C                     INLVLB          equ	1036	;# 
   739   00040D                     IOCBP           equ	1037	;# 
   740   00040E                     IOCBN           equ	1038	;# 
   741   00040F                     IOCBF           equ	1039	;# 
   742   000410                     ANSELC          equ	1040	;# 
   743   000411                     WPUC            equ	1041	;# 
   744   000412                     ODCONC          equ	1042	;# 
   745   000413                     SLRCONC         equ	1043	;# 
   746   000414                     INLVLC          equ	1044	;# 
   747   000415                     IOCCP           equ	1045	;# 
   748   000416                     IOCCN           equ	1046	;# 
   749   000417                     IOCCF           equ	1047	;# 
   750   000418                     ANSELD          equ	1048	;# 
   751   000419                     WPUD            equ	1049	;# 
   752   00041A                     ODCOND          equ	1050	;# 
   753   00041B                     SLRCOND         equ	1051	;# 
   754   00041C                     INLVLD          equ	1052	;# 
   755   000420                     ANSELE          equ	1056	;# 
   756   000421                     WPUE            equ	1057	;# 
   757   000422                     ODCONE          equ	1058	;# 
   758   000423                     SLRCONE         equ	1059	;# 
   759   000424                     INLVLE          equ	1060	;# 
   760   000425                     IOCEP           equ	1061	;# 
   761   000426                     IOCEN           equ	1062	;# 
   762   000427                     IOCEF           equ	1063	;# 
   763   000428                     ANSELF          equ	1064	;# 
   764   000429                     WPUF            equ	1065	;# 
   765   00042A                     ODCONF          equ	1066	;# 
   766   00042B                     SLRCONF         equ	1067	;# 
   767   00042C                     INLVLF          equ	1068	;# 
   768   000440                     NCO1ACC         equ	1088	;# 
   769   000440                     NCO1ACCL        equ	1088	;# 
   770   000441                     NCO1ACCH        equ	1089	;# 
   771   000442                     NCO1ACCU        equ	1090	;# 
   772   000443                     NCO1INC         equ	1091	;# 
   773   000443                     NCO1INCL        equ	1091	;# 
   774   000444                     NCO1INCH        equ	1092	;# 
   775   000445                     NCO1INCU        equ	1093	;# 
   776   000446                     NCO1CON         equ	1094	;# 
   777   000447                     NCO1CLK         equ	1095	;# 
   778   000448                     NCO2ACC         equ	1096	;# 
   779   000448                     NCO2ACCL        equ	1096	;# 
   780   000449                     NCO2ACCH        equ	1097	;# 
   781   00044A                     NCO2ACCU        equ	1098	;# 
   782   00044B                     NCO2INC         equ	1099	;# 
   783   00044B                     NCO2INCL        equ	1099	;# 
   784   00044C                     NCO2INCH        equ	1100	;# 
   785   00044D                     NCO2INCU        equ	1101	;# 
   786   00044E                     NCO2CON         equ	1102	;# 
   787   00044F                     NCO2CLK         equ	1103	;# 
   788   000450                     NCO3ACC         equ	1104	;# 
   789   000450                     NCO3ACCL        equ	1104	;# 
   790   000451                     NCO3ACCH        equ	1105	;# 
   791   000452                     NCO3ACCU        equ	1106	;# 
   792   000453                     NCO3INC         equ	1107	;# 
   793   000453                     NCO3INCL        equ	1107	;# 
   794   000454                     NCO3INCH        equ	1108	;# 
   795   000455                     NCO3INCU        equ	1109	;# 
   796   000456                     NCO3CON         equ	1110	;# 
   797   000457                     NCO3CLK         equ	1111	;# 
   798   000459                     IVTLOCK         equ	1113	;# 
   799   00045A                     IVTAD           equ	1114	;# 
   800   00045A                     IVTADL          equ	1114	;# 
   801   00045B                     IVTADH          equ	1115	;# 
   802   00045C                     IVTADU          equ	1116	;# 
   803   00045D                     IVTBASE         equ	1117	;# 
   804   00045D                     IVTBASEL        equ	1117	;# 
   805   00045E                     IVTBASEH        equ	1118	;# 
   806   00045F                     IVTBASEU        equ	1119	;# 
   807   000460                     PWM1ERS         equ	1120	;# 
   808   000461                     PWM1CLK         equ	1121	;# 
   809   000462                     PWM1LDS         equ	1122	;# 
   810   000463                     PWM1PR          equ	1123	;# 
   811   000463                     PWM1PRL         equ	1123	;# 
   812   000464                     PWM1PRH         equ	1124	;# 
   813   000465                     PWM1CPRE        equ	1125	;# 
   814   000466                     PWM1PIPOS       equ	1126	;# 
   815   000467                     PWM1GIR         equ	1127	;# 
   816   000468                     PWM1GIE         equ	1128	;# 
   817   000469                     PWM1CON         equ	1129	;# 
   818   00046A                     PWM1S1CFG       equ	1130	;# 
   819   00046B                     PWM1S1P1        equ	1131	;# 
   820   00046B                     PWM1S1P1L       equ	1131	;# 
   821   00046C                     PWM1S1P1H       equ	1132	;# 
   822   00046D                     PWM1S1P2        equ	1133	;# 
   823   00046D                     PWM1S1P2L       equ	1133	;# 
   824   00046E                     PWM1S1P2H       equ	1134	;# 
   825   00046F                     PWM2ERS         equ	1135	;# 
   826   000470                     PWM2CLK         equ	1136	;# 
   827   000471                     PWM2LDS         equ	1137	;# 
   828   000472                     PWM2PR          equ	1138	;# 
   829   000472                     PWM2PRL         equ	1138	;# 
   830   000473                     PWM2PRH         equ	1139	;# 
   831   000474                     PWM2CPRE        equ	1140	;# 
   832   000475                     PWM2PIPOS       equ	1141	;# 
   833   000476                     PWM2GIR         equ	1142	;# 
   834   000477                     PWM2GIE         equ	1143	;# 
   835   000478                     PWM2CON         equ	1144	;# 
   836   000479                     PWM2S1CFG       equ	1145	;# 
   837   00047A                     PWM2S1P1        equ	1146	;# 
   838   00047A                     PWM2S1P1L       equ	1146	;# 
   839   00047B                     PWM2S1P1H       equ	1147	;# 
   840   00047C                     PWM2S1P2        equ	1148	;# 
   841   00047C                     PWM2S1P2L       equ	1148	;# 
   842   00047D                     PWM2S1P2H       equ	1149	;# 
   843   00047E                     PWM3ERS         equ	1150	;# 
   844   00047F                     PWM3CLK         equ	1151	;# 
   845   000480                     PWM3LDS         equ	1152	;# 
   846   000481                     PWM3PR          equ	1153	;# 
   847   000481                     PWM3PRL         equ	1153	;# 
   848   000482                     PWM3PRH         equ	1154	;# 
   849   000483                     PWM3CPRE        equ	1155	;# 
   850   000484                     PWM3PIPOS       equ	1156	;# 
   851   000485                     PWM3GIR         equ	1157	;# 
   852   000486                     PWM3GIE         equ	1158	;# 
   853   000487                     PWM3CON         equ	1159	;# 
   854   000488                     PWM3S1CFG       equ	1160	;# 
   855   000489                     PWM3S1P1        equ	1161	;# 
   856   000489                     PWM3S1P1L       equ	1161	;# 
   857   00048A                     PWM3S1P1H       equ	1162	;# 
   858   00048B                     PWM3S1P2        equ	1163	;# 
   859   00048B                     PWM3S1P2L       equ	1163	;# 
   860   00048C                     PWM3S1P2H       equ	1164	;# 
   861   00049C                     PWMLOAD         equ	1180	;# 
   862   00049D                     PWMEN           equ	1181	;# 
   863   00049E                     PIE0            equ	1182	;# 
   864   00049F                     PIE1            equ	1183	;# 
   865   0004A0                     PIE2            equ	1184	;# 
   866   0004A1                     PIE3            equ	1185	;# 
   867   0004A2                     PIE4            equ	1186	;# 
   868   0004A3                     PIE5            equ	1187	;# 
   869   0004A4                     PIE6            equ	1188	;# 
   870   0004A5                     PIE7            equ	1189	;# 
   871   0004A6                     PIE8            equ	1190	;# 
   872   0004A7                     PIE9            equ	1191	;# 
   873   0004A8                     PIE10           equ	1192	;# 
   874   0004A9                     PIE11           equ	1193	;# 
   875   0004AA                     PIE12           equ	1194	;# 
   876   0004AB                     PIE13           equ	1195	;# 
   877   0004AC                     PIE14           equ	1196	;# 
   878   0004AD                     PIE15           equ	1197	;# 
   879   0004AE                     PIR0            equ	1198	;# 
   880   0004AF                     PIR1            equ	1199	;# 
   881   0004B0                     PIR2            equ	1200	;# 
   882   0004B1                     PIR3            equ	1201	;# 
   883   0004B2                     PIR4            equ	1202	;# 
   884   0004B3                     PIR5            equ	1203	;# 
   885   0004B4                     PIR6            equ	1204	;# 
   886   0004B5                     PIR7            equ	1205	;# 
   887   0004B6                     PIR8            equ	1206	;# 
   888   0004B7                     PIR9            equ	1207	;# 
   889   0004B8                     PIR10           equ	1208	;# 
   890   0004B9                     PIR11           equ	1209	;# 
   891   0004BA                     PIR12           equ	1210	;# 
   892   0004BB                     PIR13           equ	1211	;# 
   893   0004BC                     PIR14           equ	1212	;# 
   894   0004BD                     PIR15           equ	1213	;# 
   895   0004BE                     LATA            equ	1214	;# 
   896   0004BF                     LATB            equ	1215	;# 
   897   0004C0                     LATC            equ	1216	;# 
   898   0004C1                     LATD            equ	1217	;# 
   899   0004C2                     LATE            equ	1218	;# 
   900   0004C3                     LATF            equ	1219	;# 
   901   0004C6                     TRISA           equ	1222	;# 
   902   0004C7                     TRISB           equ	1223	;# 
   903   0004C8                     TRISC           equ	1224	;# 
   904   0004C9                     TRISD           equ	1225	;# 
   905   0004CA                     TRISE           equ	1226	;# 
   906   0004CB                     TRISF           equ	1227	;# 
   907   0004CE                     PORTA           equ	1230	;# 
   908   0004CF                     PORTB           equ	1231	;# 
   909   0004D0                     PORTC           equ	1232	;# 
   910   0004D1                     PORTD           equ	1233	;# 
   911   0004D2                     PORTE           equ	1234	;# 
   912   0004D3                     PORTF           equ	1235	;# 
   913   0004D6                     INTCON0         equ	1238	;# 
   914   0004D7                     INTCON1         equ	1239	;# 
   915   0004D8                     STATUS          equ	1240	;# 
   916   0004D9                     FSR2            equ	1241	;# 
   917   0004D9                     FSR2L           equ	1241	;# 
   918   0004DA                     FSR2H           equ	1242	;# 
   919   0004DB                     PLUSW2          equ	1243	;# 
   920   0004DC                     PREINC2         equ	1244	;# 
   921   0004DD                     POSTDEC2        equ	1245	;# 
   922   0004DE                     POSTINC2        equ	1246	;# 
   923   0004DF                     INDF2           equ	1247	;# 
   924   0004E0                     BSR             equ	1248	;# 
   925   0004E1                     FSR1            equ	1249	;# 
   926   0004E1                     FSR1L           equ	1249	;# 
   927   0004E2                     FSR1H           equ	1250	;# 
   928   0004E3                     PLUSW1          equ	1251	;# 
   929   0004E4                     PREINC1         equ	1252	;# 
   930   0004E5                     POSTDEC1        equ	1253	;# 
   931   0004E6                     POSTINC1        equ	1254	;# 
   932   0004E7                     INDF1           equ	1255	;# 
   933   0004E8                     WREG            equ	1256	;# 
   934   0004E9                     FSR0            equ	1257	;# 
   935   0004E9                     FSR0L           equ	1257	;# 
   936   0004EA                     FSR0H           equ	1258	;# 
   937   0004EB                     PLUSW0          equ	1259	;# 
   938   0004EC                     PREINC0         equ	1260	;# 
   939   0004ED                     POSTDEC0        equ	1261	;# 
   940   0004EE                     POSTINC0        equ	1262	;# 
   941   0004EF                     INDF0           equ	1263	;# 
   942   0004F0                     PCON0           equ	1264	;# 
   943   0004F1                     PCON1           equ	1265	;# 
   944   0004F2                     CPUDOZE         equ	1266	;# 
   945   0004F3                     PROD            equ	1267	;# 
   946   0004F3                     PRODL           equ	1267	;# 
   947   0004F4                     PRODH           equ	1268	;# 
   948   0004F5                     TABLAT          equ	1269	;# 
   949   0004F6                     TBLPTR          equ	1270	;# 
   950   0004F6                     TBLPTRL         equ	1270	;# 
   951   0004F7                     TBLPTRH         equ	1271	;# 
   952   0004F8                     TBLPTRU         equ	1272	;# 
   953   0004F9                     PCLAT           equ	1273	;# 
   954   0004F9                     PCL             equ	1273	;# 
   955   0004FA                     PCLATH          equ	1274	;# 
   956   0004FB                     PCLATU          equ	1275	;# 
   957   0004FC                     STKPTR          equ	1276	;# 
   958   0004FD                     TOS             equ	1277	;# 
   959   0004FD                     TOSL            equ	1277	;# 
   960   0004FE                     TOSH            equ	1278	;# 
   961   0004FF                     TOSU            equ	1279	;# 
   962   000039                     CLKRCON         equ	57	;# 
   963   00003A                     CLKRCLK         equ	58	;# 
   964   000040                     NVMCON0         equ	64	;# 
   965   000041                     NVMCON1         equ	65	;# 
   966   000042                     NVMLOCK         equ	66	;# 
   967   000043                     NVMADR          equ	67	;# 
   968   000043                     NVMADRL         equ	67	;# 
   969   000044                     NVMADRH         equ	68	;# 
   970   000045                     NVMADRU         equ	69	;# 
   971   000046                     NVMDAT          equ	70	;# 
   972   000046                     NVMDATL         equ	70	;# 
   973   000047                     NVMDATH         equ	71	;# 
   974   000048                     VREGCON         equ	72	;# 
   975   000049                     BORCON          equ	73	;# 
   976   00004A                     HLVDCON0        equ	74	;# 
   977   00004B                     HLVDCON1        equ	75	;# 
   978   00004C                     ZCDCON          equ	76	;# 
   979   000060                     PMD0            equ	96	;# 
   980   000061                     PMD1            equ	97	;# 
   981   000063                     PMD3            equ	99	;# 
   982   000064                     PMD4            equ	100	;# 
   983   000065                     PMD5            equ	101	;# 
   984   000066                     PMD6            equ	102	;# 
   985   000067                     PMD7            equ	103	;# 
   986   000068                     PMD8            equ	104	;# 
   987   00006A                     MD1CON0         equ	106	;# 
   988   00006B                     MD1CON1         equ	107	;# 
   989   00006C                     MD1SRC          equ	108	;# 
   990   00006D                     MD1CARL         equ	109	;# 
   991   00006E                     MD1CARH         equ	110	;# 
   992   00006F                     CMOUT           equ	111	;# 
   993   000070                     CM1CON0         equ	112	;# 
   994   000071                     CM1CON1         equ	113	;# 
   995   000072                     CM1NCH          equ	114	;# 
   996   000073                     CM1PCH          equ	115	;# 
   997   000074                     CM2CON0         equ	116	;# 
   998   000075                     CM2CON1         equ	117	;# 
   999   000076                     CM2NCH          equ	118	;# 
  1000   000077                     CM2PCH          equ	119	;# 
  1001   000078                     WDTCON0         equ	120	;# 
  1002   000079                     WDTCON1         equ	121	;# 
  1003   00007A                     WDTPS           equ	122	;# 
  1004   00007A                     WDTPSL          equ	122	;# 
  1005   00007B                     WDTPSH          equ	123	;# 
  1006   00007C                     WDTTMR          equ	124	;# 
  1007   00007D                     DAC1DAT         equ	125	;# 
  1008   00007D                     DAC1DATL        equ	125	;# 
  1009   00007F                     DAC1CON         equ	127	;# 
  1010   000080                     SPI1RXB         equ	128	;# 
  1011   000081                     SPI1TXB         equ	129	;# 
  1012   000082                     SPI1TCNT        equ	130	;# 
  1013   000082                     SPI1TCNTL       equ	130	;# 
  1014   000083                     SPI1TCNTH       equ	131	;# 
  1015   000084                     SPI1CON0        equ	132	;# 
  1016   000085                     SPI1CON1        equ	133	;# 
  1017   000086                     SPI1CON2        equ	134	;# 
  1018   000087                     SPI1STATUS      equ	135	;# 
  1019   000088                     SPI1TWIDTH      equ	136	;# 
  1020   000089                     SPI1BAUD        equ	137	;# 
  1021   00008A                     SPI1INTF        equ	138	;# 
  1022   00008B                     SPI1INTE        equ	139	;# 
  1023   00008C                     SPI1CLK         equ	140	;# 
  1024   00008D                     SPI2RXB         equ	141	;# 
  1025   00008E                     SPI2TXB         equ	142	;# 
  1026   00008F                     SPI2TCNT        equ	143	;# 
  1027   00008F                     SPI2TCNTL       equ	143	;# 
  1028   000090                     SPI2TCNTH       equ	144	;# 
  1029   000091                     SPI2CON0        equ	145	;# 
  1030   000092                     SPI2CON1        equ	146	;# 
  1031   000093                     SPI2CON2        equ	147	;# 
  1032   000094                     SPI2STATUS      equ	148	;# 
  1033   000095                     SPI2TWIDTH      equ	149	;# 
  1034   000096                     SPI2BAUD        equ	150	;# 
  1035   000097                     SPI2INTF        equ	151	;# 
  1036   000098                     SPI2INTE        equ	152	;# 
  1037   000099                     SPI2CLK         equ	153	;# 
  1038   0000AC                     ACTCON          equ	172	;# 
  1039   0000AD                     OSCCON1         equ	173	;# 
  1040   0000AE                     OSCCON2         equ	174	;# 
  1041   0000AF                     OSCCON3         equ	175	;# 
  1042   0000B0                     OSCTUNE         equ	176	;# 
  1043   0000B1                     OSCFRQ          equ	177	;# 
  1044   0000B1                     OSCFREQ         equ	177	;# 
  1045   0000B2                     OSCSTAT         equ	178	;# 
  1046   0000B2                     OSCSTAT1        equ	178	;# 
  1047   0000B3                     OSCEN           equ	179	;# 
  1048   0000B4                     PRLOCK          equ	180	;# 
  1049   0000B5                     SCANPR          equ	181	;# 
  1050   0000B6                     DMA1PR          equ	182	;# 
  1051   0000B7                     DMA2PR          equ	183	;# 
  1052   0000B8                     DMA3PR          equ	184	;# 
  1053   0000B9                     DMA4PR          equ	185	;# 
  1054   0000BA                     DMA5PR          equ	186	;# 
  1055   0000BB                     DMA6PR          equ	187	;# 
  1056   0000BE                     MAINPR          equ	190	;# 
  1057   0000BF                     ISRPR           equ	191	;# 
  1058   0000D4                     CLCDATA         equ	212	;# 
  1059   0000D5                     CLCSELECT       equ	213	;# 
  1060   0000D6                     CLCnCON         equ	214	;# 
  1061   0000D7                     CLCnPOL         equ	215	;# 
  1062   0000D8                     CLCnSEL0        equ	216	;# 
  1063   0000D9                     CLCnSEL1        equ	217	;# 
  1064   0000DA                     CLCnSEL2        equ	218	;# 
  1065   0000DB                     CLCnSEL3        equ	219	;# 
  1066   0000DC                     CLCnGLS0        equ	220	;# 
  1067   0000DD                     CLCnGLS1        equ	221	;# 
  1068   0000DE                     CLCnGLS2        equ	222	;# 
  1069   0000DF                     CLCnGLS3        equ	223	;# 
  1070   0000E8                     DMASELECT       equ	232	;# 
  1071   0000E9                     DMAnBUF         equ	233	;# 
  1072   0000EA                     DMAnDCNT        equ	234	;# 
  1073   0000EA                     DMAnDCNTL       equ	234	;# 
  1074   0000EB                     DMAnDCNTH       equ	235	;# 
  1075   0000EC                     DMAnDPTR        equ	236	;# 
  1076   0000EC                     DMAnDPTRL       equ	236	;# 
  1077   0000ED                     DMAnDPTRH       equ	237	;# 
  1078   0000EE                     DMAnDSZ         equ	238	;# 
  1079   0000EE                     DMAnDSZL        equ	238	;# 
  1080   0000EF                     DMAnDSZH        equ	239	;# 
  1081   0000F0                     DMAnDSA         equ	240	;# 
  1082   0000F0                     DMAnDSAL        equ	240	;# 
  1083   0000F1                     DMAnDSAH        equ	241	;# 
  1084   0000F2                     DMAnSCNT        equ	242	;# 
  1085   0000F2                     DMAnSCNTL       equ	242	;# 
  1086   0000F3                     DMAnSCNTH       equ	243	;# 
  1087   0000F4                     DMAnSPTR        equ	244	;# 
  1088   0000F4                     DMAnSPTRL       equ	244	;# 
  1089   0000F5                     DMAnSPTRH       equ	245	;# 
  1090   0000F6                     DMAnSPTRU       equ	246	;# 
  1091   0000F7                     DMAnSSZ         equ	247	;# 
  1092   0000F7                     DMAnSSZL        equ	247	;# 
  1093   0000F8                     DMAnSSZH        equ	248	;# 
  1094   0000F9                     DMAnSSA         equ	249	;# 
  1095   0000F9                     DMAnSSAL        equ	249	;# 
  1096   0000FA                     DMAnSSAH        equ	250	;# 
  1097   0000FB                     DMAnSSAU        equ	251	;# 
  1098   0000FC                     DMAnCON0        equ	252	;# 
  1099   0000FD                     DMAnCON1        equ	253	;# 
  1100   0000FE                     DMAnAIRQ        equ	254	;# 
  1101   0000FF                     DMAnSIRQ        equ	255	;# 
  1102   000200                     PPSLOCK         equ	512	;# 
  1103   000201                     RA0PPS          equ	513	;# 
  1104   000202                     RA1PPS          equ	514	;# 
  1105   000203                     RA2PPS          equ	515	;# 
  1106   000204                     RA3PPS          equ	516	;# 
  1107   000205                     RA4PPS          equ	517	;# 
  1108   000206                     RA5PPS          equ	518	;# 
  1109   000207                     RA6PPS          equ	519	;# 
  1110   000208                     RA7PPS          equ	520	;# 
  1111   000209                     RB0PPS          equ	521	;# 
  1112   00020A                     RB1PPS          equ	522	;# 
  1113   00020B                     RB2PPS          equ	523	;# 
  1114   00020C                     RB3PPS          equ	524	;# 
  1115   00020D                     RB4PPS          equ	525	;# 
  1116   00020E                     RB5PPS          equ	526	;# 
  1117   00020F                     RB6PPS          equ	527	;# 
  1118   000210                     RB7PPS          equ	528	;# 
  1119   000211                     RC0PPS          equ	529	;# 
  1120   000212                     RC1PPS          equ	530	;# 
  1121   000213                     RC2PPS          equ	531	;# 
  1122   000214                     RC3PPS          equ	532	;# 
  1123   000215                     RC4PPS          equ	533	;# 
  1124   000216                     RC5PPS          equ	534	;# 
  1125   000217                     RC6PPS          equ	535	;# 
  1126   000218                     RC7PPS          equ	536	;# 
  1127   000219                     RD0PPS          equ	537	;# 
  1128   00021A                     RD1PPS          equ	538	;# 
  1129   00021B                     RD2PPS          equ	539	;# 
  1130   00021C                     RD3PPS          equ	540	;# 
  1131   00021D                     RD4PPS          equ	541	;# 
  1132   00021E                     RD5PPS          equ	542	;# 
  1133   00021F                     RD6PPS          equ	543	;# 
  1134   000220                     RD7PPS          equ	544	;# 
  1135   000221                     RE0PPS          equ	545	;# 
  1136   000222                     RE1PPS          equ	546	;# 
  1137   000223                     RE2PPS          equ	547	;# 
  1138   000229                     RF0PPS          equ	553	;# 
  1139   00022A                     RF1PPS          equ	554	;# 
  1140   00022B                     RF2PPS          equ	555	;# 
  1141   00022C                     RF3PPS          equ	556	;# 
  1142   00022D                     RF4PPS          equ	557	;# 
  1143   00022E                     RF5PPS          equ	558	;# 
  1144   00022F                     RF6PPS          equ	559	;# 
  1145   000230                     RF7PPS          equ	560	;# 
  1146   00023E                     INT0PPS         equ	574	;# 
  1147   00023F                     INT1PPS         equ	575	;# 
  1148   000240                     INT2PPS         equ	576	;# 
  1149   000241                     T0CKIPPS        equ	577	;# 
  1150   000242                     T1CKIPPS        equ	578	;# 
  1151   000243                     T1GPPS          equ	579	;# 
  1152   000244                     T3CKIPPS        equ	580	;# 
  1153   000245                     T3GPPS          equ	581	;# 
  1154   000246                     T5CKIPPS        equ	582	;# 
  1155   000247                     T5GPPS          equ	583	;# 
  1156   000248                     T2INPPS         equ	584	;# 
  1157   000249                     T4INPPS         equ	585	;# 
  1158   00024A                     T6INPPS         equ	586	;# 
  1159   00024F                     CCP1PPS         equ	591	;# 
  1160   000250                     CCP2PPS         equ	592	;# 
  1161   000251                     CCP3PPS         equ	593	;# 
  1162   000253                     PWM1ERSPPS      equ	595	;# 
  1163   000254                     PWM2ERSPPS      equ	596	;# 
  1164   000255                     PWM3ERSPPS      equ	597	;# 
  1165   000257                     PWMIN0PPS       equ	599	;# 
  1166   000258                     PWMIN1PPS       equ	600	;# 
  1167   000259                     SMT1WINPPS      equ	601	;# 
  1168   00025A                     SMT1SIGPPS      equ	602	;# 
  1169   00025B                     CWG1PPS         equ	603	;# 
  1170   00025B                     CWG1INPPS       equ	603	;# 
  1171   00025C                     CWG2PPS         equ	604	;# 
  1172   00025C                     CWG2INPPS       equ	604	;# 
  1173   00025D                     CWG3PPS         equ	605	;# 
  1174   00025D                     CWG3INPPS       equ	605	;# 
  1175   00025E                     MD1CARLPPS      equ	606	;# 
  1176   00025E                     MDCARLPPS       equ	606	;# 
  1177   00025F                     MD1CARHPPS      equ	607	;# 
  1178   00025F                     MDCARHPPS       equ	607	;# 
  1179   000260                     MD1SRCPPS       equ	608	;# 
  1180   000260                     MDSRCPPS        equ	608	;# 
  1181   000261                     CLCIN0PPS       equ	609	;# 
  1182   000262                     CLCIN1PPS       equ	610	;# 
  1183   000263                     CLCIN2PPS       equ	611	;# 
  1184   000264                     CLCIN3PPS       equ	612	;# 
  1185   000265                     CLCIN4PPS       equ	613	;# 
  1186   000266                     CLCIN5PPS       equ	614	;# 
  1187   000267                     CLCIN6PPS       equ	615	;# 
  1188   000268                     CLCIN7PPS       equ	616	;# 
  1189   000269                     ADACTPPS        equ	617	;# 
  1190   00026A                     SPI1SCKPPS      equ	618	;# 
  1191   00026B                     SPI1SDIPPS      equ	619	;# 
  1192   00026C                     SPI1SSPPS       equ	620	;# 
  1193   00026D                     SPI2SCKPPS      equ	621	;# 
  1194   00026E                     SPI2SDIPPS      equ	622	;# 
  1195   00026F                     SPI2SSPPS       equ	623	;# 
  1196   000270                     I2C1SDAPPS      equ	624	;# 
  1197   000271                     I2C1SCLPPS      equ	625	;# 
  1198   000272                     U1RXPPS         equ	626	;# 
  1199   000273                     U1CTSPPS        equ	627	;# 
  1200   000274                     U2RXPPS         equ	628	;# 
  1201   000275                     U2CTSPPS        equ	629	;# 
  1202   000276                     U3RXPPS         equ	630	;# 
  1203   000277                     U3CTSPPS        equ	631	;# 
  1204   000278                     U4RXPPS         equ	632	;# 
  1205   000279                     U4CTSPPS        equ	633	;# 
  1206   00027A                     U5RXPPS         equ	634	;# 
  1207   00027B                     U5CTSPPS        equ	635	;# 
  1208   000286                     RC4I2C          equ	646	;# 
  1209   000287                     RC3I2C          equ	647	;# 
  1210   000288                     RB2I2C          equ	648	;# 
  1211   000289                     RB1I2C          equ	649	;# 
  1212   00028B                     I2C1RXB         equ	651	;# 
  1213   00028C                     I2C1TXB         equ	652	;# 
  1214   00028D                     I2C1CNT         equ	653	;# 
  1215   00028E                     I2C1ADB0        equ	654	;# 
  1216   00028F                     I2C1ADB1        equ	655	;# 
  1217   000290                     I2C1ADR0        equ	656	;# 
  1218   000291                     I2C1ADR1        equ	657	;# 
  1219   000292                     I2C1ADR2        equ	658	;# 
  1220   000293                     I2C1ADR3        equ	659	;# 
  1221   000294                     I2C1CON0        equ	660	;# 
  1222   000295                     I2C1CON1        equ	661	;# 
  1223   000296                     I2C1CON2        equ	662	;# 
  1224   000297                     I2C1ERR         equ	663	;# 
  1225   000298                     I2C1STAT0       equ	664	;# 
  1226   000299                     I2C1STAT1       equ	665	;# 
  1227   00029A                     I2C1PIR         equ	666	;# 
  1228   00029B                     I2C1PIE         equ	667	;# 
  1229   00029C                     I2C1CLK         equ	668	;# 
  1230   00029D                     I2C1BTO         equ	669	;# 
  1231   0002A1                     U1RXB           equ	673	;# 
  1232   0002A1                     U1RXBL          equ	673	;# 
  1233   0002A2                     U1RXCHK         equ	674	;# 
  1234   0002A3                     U1TXB           equ	675	;# 
  1235   0002A3                     U1TXBL          equ	675	;# 
  1236   0002A4                     U1TXCHK         equ	676	;# 
  1237   0002A5                     U1P1            equ	677	;# 
  1238   0002A5                     U1P1L           equ	677	;# 
  1239   0002A6                     U1P1H           equ	678	;# 
  1240   0002A7                     U1P2            equ	679	;# 
  1241   0002A7                     U1P2L           equ	679	;# 
  1242   0002A8                     U1P2H           equ	680	;# 
  1243   0002A9                     U1P3            equ	681	;# 
  1244   0002A9                     U1P3L           equ	681	;# 
  1245   0002AA                     U1P3H           equ	682	;# 
  1246   0002AB                     U1CON0          equ	683	;# 
  1247   0002AC                     U1CON1          equ	684	;# 
  1248   0002AD                     U1CON2          equ	685	;# 
  1249   0002AE                     U1BRG           equ	686	;# 
  1250   0002AE                     U1BRGL          equ	686	;# 
  1251   0002AF                     U1BRGH          equ	687	;# 
  1252   0002B0                     U1FIFO          equ	688	;# 
  1253   0002B1                     U1UIR           equ	689	;# 
  1254   0002B2                     U1ERRIR         equ	690	;# 
  1255   0002B3                     U1ERRIE         equ	691	;# 
  1256   0002B4                     U2RXB           equ	692	;# 
  1257   0002B4                     U2RXBL          equ	692	;# 
  1258   0002B6                     U2TXB           equ	694	;# 
  1259   0002B6                     U2TXBL          equ	694	;# 
  1260   0002B8                     U2P1            equ	696	;# 
  1261   0002B8                     U2P1L           equ	696	;# 
  1262   0002BA                     U2P2            equ	698	;# 
  1263   0002BA                     U2P2L           equ	698	;# 
  1264   0002BC                     U2P3            equ	700	;# 
  1265   0002BC                     U2P3L           equ	700	;# 
  1266   0002BE                     U2CON0          equ	702	;# 
  1267   0002BF                     U2CON1          equ	703	;# 
  1268   0002C0                     U2CON2          equ	704	;# 
  1269   0002C1                     U2BRG           equ	705	;# 
  1270   0002C1                     U2BRGL          equ	705	;# 
  1271   0002C2                     U2BRGH          equ	706	;# 
  1272   0002C3                     U2FIFO          equ	707	;# 
  1273   0002C4                     U2UIR           equ	708	;# 
  1274   0002C5                     U2ERRIR         equ	709	;# 
  1275   0002C6                     U2ERRIE         equ	710	;# 
  1276   0002C7                     U3RXB           equ	711	;# 
  1277   0002C7                     U3RXBL          equ	711	;# 
  1278   0002C9                     U3TXB           equ	713	;# 
  1279   0002C9                     U3TXBL          equ	713	;# 
  1280   0002CB                     U3P1            equ	715	;# 
  1281   0002CB                     U3P1L           equ	715	;# 
  1282   0002CD                     U3P2            equ	717	;# 
  1283   0002CD                     U3P2L           equ	717	;# 
  1284   0002CF                     U3P3            equ	719	;# 
  1285   0002CF                     U3P3L           equ	719	;# 
  1286   0002D1                     U3CON0          equ	721	;# 
  1287   0002D2                     U3CON1          equ	722	;# 
  1288   0002D3                     U3CON2          equ	723	;# 
  1289   0002D4                     U3BRG           equ	724	;# 
  1290   0002D4                     U3BRGL          equ	724	;# 
  1291   0002D5                     U3BRGH          equ	725	;# 
  1292   0002D6                     U3FIFO          equ	726	;# 
  1293   0002D7                     U3UIR           equ	727	;# 
  1294   0002D8                     U3ERRIR         equ	728	;# 
  1295   0002D9                     U3ERRIE         equ	729	;# 
  1296   0002DA                     U4RXB           equ	730	;# 
  1297   0002DA                     U4RXBL          equ	730	;# 
  1298   0002DC                     U4TXB           equ	732	;# 
  1299   0002DC                     U4TXBL          equ	732	;# 
  1300   0002DE                     U4P1            equ	734	;# 
  1301   0002DE                     U4P1L           equ	734	;# 
  1302   0002E0                     U4P2            equ	736	;# 
  1303   0002E0                     U4P2L           equ	736	;# 
  1304   0002E2                     U4P3            equ	738	;# 
  1305   0002E2                     U4P3L           equ	738	;# 
  1306   0002E4                     U4CON0          equ	740	;# 
  1307   0002E5                     U4CON1          equ	741	;# 
  1308   0002E6                     U4CON2          equ	742	;# 
  1309   0002E7                     U4BRG           equ	743	;# 
  1310   0002E7                     U4BRGL          equ	743	;# 
  1311   0002E8                     U4BRGH          equ	744	;# 
  1312   0002E9                     U4FIFO          equ	745	;# 
  1313   0002EA                     U4UIR           equ	746	;# 
  1314   0002EB                     U4ERRIR         equ	747	;# 
  1315   0002EC                     U4ERRIE         equ	748	;# 
  1316   0002ED                     U5RXB           equ	749	;# 
  1317   0002ED                     U5RXBL          equ	749	;# 
  1318   0002EF                     U5TXB           equ	751	;# 
  1319   0002EF                     U5TXBL          equ	751	;# 
  1320   0002F1                     U5P1            equ	753	;# 
  1321   0002F1                     U5P1L           equ	753	;# 
  1322   0002F3                     U5P2            equ	755	;# 
  1323   0002F3                     U5P2L           equ	755	;# 
  1324   0002F5                     U5P3            equ	757	;# 
  1325   0002F5                     U5P3L           equ	757	;# 
  1326   0002F7                     U5CON0          equ	759	;# 
  1327   0002F8                     U5CON1          equ	760	;# 
  1328   0002F9                     U5CON2          equ	761	;# 
  1329   0002FA                     U5BRG           equ	762	;# 
  1330   0002FA                     U5BRGL          equ	762	;# 
  1331   0002FB                     U5BRGH          equ	763	;# 
  1332   0002FC                     U5FIFO          equ	764	;# 
  1333   0002FD                     U5UIR           equ	765	;# 
  1334   0002FE                     U5ERRIR         equ	766	;# 
  1335   0002FF                     U5ERRIE         equ	767	;# 
  1336   000300                     SMT1TMR         equ	768	;# 
  1337   000300                     SMT1TMRL        equ	768	;# 
  1338   000301                     SMT1TMRH        equ	769	;# 
  1339   000302                     SMT1TMRU        equ	770	;# 
  1340   000303                     SMT1CPR         equ	771	;# 
  1341   000303                     SMT1CPRL        equ	771	;# 
  1342   000304                     SMT1CPRH        equ	772	;# 
  1343   000305                     SMT1CPRU        equ	773	;# 
  1344   000306                     SMT1CPW         equ	774	;# 
  1345   000306                     SMT1CPWL        equ	774	;# 
  1346   000307                     SMT1CPWH        equ	775	;# 
  1347   000308                     SMT1CPWU        equ	776	;# 
  1348   000309                     SMT1PR          equ	777	;# 
  1349   000309                     SMT1PRL         equ	777	;# 
  1350   00030A                     SMT1PRH         equ	778	;# 
  1351   00030B                     SMT1PRU         equ	779	;# 
  1352   00030C                     SMT1CON0        equ	780	;# 
  1353   00030D                     SMT1CON1        equ	781	;# 
  1354   00030E                     SMT1STAT        equ	782	;# 
  1355   00030F                     SMT1CLK         equ	783	;# 
  1356   000310                     SMT1SIG         equ	784	;# 
  1357   000311                     SMT1WIN         equ	785	;# 
  1358   000318                     TMR0L           equ	792	;# 
  1359   000318                     TMR0            equ	792	;# 
  1360   000319                     TMR0H           equ	793	;# 
  1361   000319                     PR0             equ	793	;# 
  1362   00031A                     T0CON0          equ	794	;# 
  1363   00031B                     T0CON1          equ	795	;# 
  1364   00031C                     TMR1            equ	796	;# 
  1365   00031C                     TMR1L           equ	796	;# 
  1366   00031D                     TMR1H           equ	797	;# 
  1367   00031E                     T1CON           equ	798	;# 
  1368   00031E                     TMR1CON         equ	798	;# 
  1369   00031F                     T1GCON          equ	799	;# 
  1370   00031F                     TMR1GCON        equ	799	;# 
  1371   000320                     T1GATE          equ	800	;# 
  1372   000320                     TMR1GATE        equ	800	;# 
  1373   000321                     T1CLK           equ	801	;# 
  1374   000321                     TMR1CLK         equ	801	;# 
  1375   000321                     PR1             equ	801	;# 
  1376   000322                     T2TMR           equ	802	;# 
  1377   000322                     TMR2            equ	802	;# 
  1378   000323                     T2PR            equ	803	;# 
  1379   000323                     PR2             equ	803	;# 
  1380   000324                     T2CON           equ	804	;# 
  1381   000325                     T2HLT           equ	805	;# 
  1382   000326                     T2CLKCON        equ	806	;# 
  1383   000326                     T2CLK           equ	806	;# 
  1384   000327                     T2RST           equ	807	;# 
  1385   000328                     TMR3            equ	808	;# 
  1386   000328                     TMR3L           equ	808	;# 
  1387   000329                     TMR3H           equ	809	;# 
  1388   00032A                     T3CON           equ	810	;# 
  1389   00032A                     TMR3CON         equ	810	;# 
  1390   00032B                     T3GCON          equ	811	;# 
  1391   00032B                     TMR3GCON        equ	811	;# 
  1392   00032C                     T3GATE          equ	812	;# 
  1393   00032C                     TMR3GATE        equ	812	;# 
  1394   00032D                     T3CLK           equ	813	;# 
  1395   00032D                     TMR3CLK         equ	813	;# 
  1396   00032D                     PR3             equ	813	;# 
  1397   00032E                     T4TMR           equ	814	;# 
  1398   00032E                     TMR4            equ	814	;# 
  1399   00032F                     T4PR            equ	815	;# 
  1400   00032F                     PR4             equ	815	;# 
  1401   000330                     T4CON           equ	816	;# 
  1402   000331                     T4HLT           equ	817	;# 
  1403   000332                     T4CLKCON        equ	818	;# 
  1404   000332                     T4CLK           equ	818	;# 
  1405   000333                     T4RST           equ	819	;# 
  1406   000334                     TMR5            equ	820	;# 
  1407   000334                     TMR5L           equ	820	;# 
  1408   000335                     TMR5H           equ	821	;# 
  1409   000336                     T5CON           equ	822	;# 
  1410   000336                     TMR5CON         equ	822	;# 
  1411   000337                     T5GCON          equ	823	;# 
  1412   000337                     TMR5GCON        equ	823	;# 
  1413   000338                     T5GATE          equ	824	;# 
  1414   000338                     TMR5GATE        equ	824	;# 
  1415   000339                     T5CLK           equ	825	;# 
  1416   000339                     TMR5CLK         equ	825	;# 
  1417   000339                     PR5             equ	825	;# 
  1418   00033A                     T6TMR           equ	826	;# 
  1419   00033A                     TMR6            equ	826	;# 
  1420   00033B                     T6PR            equ	827	;# 
  1421   00033B                     PR6             equ	827	;# 
  1422   00033C                     T6CON           equ	828	;# 
  1423   00033D                     T6HLT           equ	829	;# 
  1424   00033E                     T6CLKCON        equ	830	;# 
  1425   00033E                     T6CLK           equ	830	;# 
  1426   00033F                     T6RST           equ	831	;# 
  1427   000340                     CCPR1           equ	832	;# 
  1428   000340                     CCPR1L          equ	832	;# 
  1429   000341                     CCPR1H          equ	833	;# 
  1430   000342                     CCP1CON         equ	834	;# 
  1431   000343                     CCP1CAP         equ	835	;# 
  1432   000344                     CCPR2           equ	836	;# 
  1433   000344                     CCPR2L          equ	836	;# 
  1434   000345                     CCPR2H          equ	837	;# 
  1435   000346                     CCP2CON         equ	838	;# 
  1436   000347                     CCP2CAP         equ	839	;# 
  1437   000348                     CCPR3           equ	840	;# 
  1438   000348                     CCPR3L          equ	840	;# 
  1439   000349                     CCPR3H          equ	841	;# 
  1440   00034A                     CCP3CON         equ	842	;# 
  1441   00034B                     CCP3CAP         equ	843	;# 
  1442   00034C                     CCPTMRS0        equ	844	;# 
  1443   00034F                     CRCDATA         equ	847	;# 
  1444   00034F                     CRCDATL         equ	847	;# 
  1445   000350                     CRCDATH         equ	848	;# 
  1446   000351                     CRCACC          equ	849	;# 
  1447   000351                     CRCACCL         equ	849	;# 
  1448   000352                     CRCACCH         equ	850	;# 
  1449   000353                     CRCSHFT         equ	851	;# 
  1450   000353                     CRCSHIFTL       equ	851	;# 
  1451   000354                     CRCSHIFTH       equ	852	;# 
  1452   000355                     CRCXOR          equ	853	;# 
  1453   000355                     CRCXORL         equ	853	;# 
  1454   000356                     CRCXORH         equ	854	;# 
  1455   000357                     CRCCON0         equ	855	;# 
  1456   000358                     CRCCON1         equ	856	;# 
  1457   00035A                     SCANLADR        equ	858	;# 
  1458   00035A                     SCANLADRL       equ	858	;# 
  1459   00035B                     SCANLADRH       equ	859	;# 
  1460   00035C                     SCANLADRU       equ	860	;# 
  1461   00035D                     SCANHADR        equ	861	;# 
  1462   00035D                     SCANHADRL       equ	861	;# 
  1463   00035E                     SCANHADRH       equ	862	;# 
  1464   00035F                     SCANHADRU       equ	863	;# 
  1465   000360                     SCANCON0        equ	864	;# 
  1466   000361                     SCANTRIG        equ	865	;# 
  1467   000362                     IPR0            equ	866	;# 
  1468   000363                     IPR1            equ	867	;# 
  1469   000364                     IPR2            equ	868	;# 
  1470   000365                     IPR3            equ	869	;# 
  1471   000366                     IPR4            equ	870	;# 
  1472   000367                     IPR5            equ	871	;# 
  1473   000368                     IPR6            equ	872	;# 
  1474   000369                     IPR7            equ	873	;# 
  1475   00036A                     IPR8            equ	874	;# 
  1476   00036B                     IPR9            equ	875	;# 
  1477   00036C                     IPR10           equ	876	;# 
  1478   00036D                     IPR11           equ	877	;# 
  1479   00036E                     IPR12           equ	878	;# 
  1480   00036F                     IPR13           equ	879	;# 
  1481   000370                     IPR14           equ	880	;# 
  1482   000371                     IPR15           equ	881	;# 
  1483   000373                     STATUS_CSHAD    equ	883	;# 
  1484   000374                     WREG_CSHAD      equ	884	;# 
  1485   000375                     BSR_CSHAD       equ	885	;# 
  1486   000376                     SHADCON         equ	886	;# 
  1487   000377                     STATUS_SHAD     equ	887	;# 
  1488   000378                     WREG_SHAD       equ	888	;# 
  1489   000379                     BSR_SHAD        equ	889	;# 
  1490   00037A                     PCLATH_SHAD     equ	890	;# 
  1491   00037B                     PCLATU_SHAD     equ	891	;# 
  1492   00037C                     FSR0SH          equ	892	;# 
  1493   00037C                     FSR0L_SHAD      equ	892	;# 
  1494   00037D                     FSR0H_SHAD      equ	893	;# 
  1495   00037E                     FSR1SH          equ	894	;# 
  1496   00037E                     FSR1L_SHAD      equ	894	;# 
  1497   00037F                     FSR1H_SHAD      equ	895	;# 
  1498   000380                     FSR2SH          equ	896	;# 
  1499   000380                     FSR2L_SHAD      equ	896	;# 
  1500   000381                     FSR2H_SHAD      equ	897	;# 
  1501   000382                     PRODSH          equ	898	;# 
  1502   000382                     PRODL_SHAD      equ	898	;# 
  1503   000383                     PRODH_SHAD      equ	899	;# 
  1504   0003BC                     CWG1CLK         equ	956	;# 
  1505   0003BC                     CWG1CLKCON      equ	956	;# 
  1506   0003BD                     CWG1ISM         equ	957	;# 
  1507   0003BD                     CWG1DAT         equ	957	;# 
  1508   0003BE                     CWG1DBR         equ	958	;# 
  1509   0003BF                     CWG1DBF         equ	959	;# 
  1510   0003C0                     CWG1CON0        equ	960	;# 
  1511   0003C1                     CWG1CON1        equ	961	;# 
  1512   0003C2                     CWG1AS0         equ	962	;# 
  1513   0003C3                     CWG1AS1         equ	963	;# 
  1514   0003C4                     CWG1STR         equ	964	;# 
  1515   0003C5                     CWG2CLK         equ	965	;# 
  1516   0003C5                     CWG2CLKCON      equ	965	;# 
  1517   0003C6                     CWG2ISM         equ	966	;# 
  1518   0003C6                     CWG2DAT         equ	966	;# 
  1519   0003C7                     CWG2DBR         equ	967	;# 
  1520   0003C8                     CWG2DBF         equ	968	;# 
  1521   0003C9                     CWG2CON0        equ	969	;# 
  1522   0003CA                     CWG2CON1        equ	970	;# 
  1523   0003CB                     CWG2AS0         equ	971	;# 
  1524   0003CC                     CWG2AS1         equ	972	;# 
  1525   0003CD                     CWG2STR         equ	973	;# 
  1526   0003CE                     CWG3CLK         equ	974	;# 
  1527   0003CE                     CWG3CLKCON      equ	974	;# 
  1528   0003CF                     CWG3ISM         equ	975	;# 
  1529   0003CF                     CWG3DAT         equ	975	;# 
  1530   0003D0                     CWG3DBR         equ	976	;# 
  1531   0003D1                     CWG3DBF         equ	977	;# 
  1532   0003D2                     CWG3CON0        equ	978	;# 
  1533   0003D3                     CWG3CON1        equ	979	;# 
  1534   0003D4                     CWG3AS0         equ	980	;# 
  1535   0003D5                     CWG3AS1         equ	981	;# 
  1536   0003D6                     CWG3STR         equ	982	;# 
  1537   0003D7                     FVRCON          equ	983	;# 
  1538   0003D8                     ADCPCON         equ	984	;# 
  1539   0003D8                     ADCP            equ	984	;# 
  1540   0003D9                     ADLTH           equ	985	;# 
  1541   0003D9                     ADLTHL          equ	985	;# 
  1542   0003DA                     ADLTHH          equ	986	;# 
  1543   0003DB                     ADUTH           equ	987	;# 
  1544   0003DB                     ADUTHL          equ	987	;# 
  1545   0003DC                     ADUTHH          equ	988	;# 
  1546   0003DD                     ADERR           equ	989	;# 
  1547   0003DD                     ADERRL          equ	989	;# 
  1548   0003DE                     ADERRH          equ	990	;# 
  1549   0003DF                     ADSTPT          equ	991	;# 
  1550   0003DF                     ADSTPTL         equ	991	;# 
  1551   0003E0                     ADSTPTH         equ	992	;# 
  1552   0003E1                     ADFLTR          equ	993	;# 
  1553   0003E1                     ADFLTRL         equ	993	;# 
  1554   0003E2                     ADFLTRH         equ	994	;# 
  1555   0003E3                     ADACC           equ	995	;# 
  1556   0003E3                     ADACCL          equ	995	;# 
  1557   0003E4                     ADACCH          equ	996	;# 
  1558   0003E5                     ADACCU          equ	997	;# 
  1559   0003E6                     ADCNT           equ	998	;# 
  1560   0003E7                     ADRPT           equ	999	;# 
  1561   0003E8                     ADPREV          equ	1000	;# 
  1562   0003E8                     ADPREVL         equ	1000	;# 
  1563   0003E9                     ADPREVH         equ	1001	;# 
  1564   0003EA                     ADRES           equ	1002	;# 
  1565   0003EA                     ADRESL          equ	1002	;# 
  1566   0003EB                     ADRESH          equ	1003	;# 
  1567   0003EC                     ADPCH           equ	1004	;# 
  1568   0003EE                     ADACQ           equ	1006	;# 
  1569   0003EE                     ADACQL          equ	1006	;# 
  1570   0003EF                     ADACQH          equ	1007	;# 
  1571   0003F0                     ADCAP           equ	1008	;# 
  1572   0003F1                     ADPRE           equ	1009	;# 
  1573   0003F1                     ADPREL          equ	1009	;# 
  1574   0003F2                     ADPREH          equ	1010	;# 
  1575   0003F3                     ADCON0          equ	1011	;# 
  1576   0003F4                     ADCON1          equ	1012	;# 
  1577   0003F5                     ADCON2          equ	1013	;# 
  1578   0003F6                     ADCON3          equ	1014	;# 
  1579   0003F7                     ADSTAT          equ	1015	;# 
  1580   0003F8                     ADREF           equ	1016	;# 
  1581   0003F9                     ADACT           equ	1017	;# 
  1582   0003FA                     ADCLK           equ	1018	;# 
  1583   000400                     ANSELA          equ	1024	;# 
  1584   000401                     WPUA            equ	1025	;# 
  1585   000402                     ODCONA          equ	1026	;# 
  1586   000403                     SLRCONA         equ	1027	;# 
  1587   000404                     INLVLA          equ	1028	;# 
  1588   000405                     IOCAP           equ	1029	;# 
  1589   000406                     IOCAN           equ	1030	;# 
  1590   000407                     IOCAF           equ	1031	;# 
  1591   000408                     ANSELB          equ	1032	;# 
  1592   000409                     WPUB            equ	1033	;# 
  1593   00040A                     ODCONB          equ	1034	;# 
  1594   00040B                     SLRCONB         equ	1035	;# 
  1595   00040C                     INLVLB          equ	1036	;# 
  1596   00040D                     IOCBP           equ	1037	;# 
  1597   00040E                     IOCBN           equ	1038	;# 
  1598   00040F                     IOCBF           equ	1039	;# 
  1599   000410                     ANSELC          equ	1040	;# 
  1600   000411                     WPUC            equ	1041	;# 
  1601   000412                     ODCONC          equ	1042	;# 
  1602   000413                     SLRCONC         equ	1043	;# 
  1603   000414                     INLVLC          equ	1044	;# 
  1604   000415                     IOCCP           equ	1045	;# 
  1605   000416                     IOCCN           equ	1046	;# 
  1606   000417                     IOCCF           equ	1047	;# 
  1607   000418                     ANSELD          equ	1048	;# 
  1608   000419                     WPUD            equ	1049	;# 
  1609   00041A                     ODCOND          equ	1050	;# 
  1610   00041B                     SLRCOND         equ	1051	;# 
  1611   00041C                     INLVLD          equ	1052	;# 
  1612   000420                     ANSELE          equ	1056	;# 
  1613   000421                     WPUE            equ	1057	;# 
  1614   000422                     ODCONE          equ	1058	;# 
  1615   000423                     SLRCONE         equ	1059	;# 
  1616   000424                     INLVLE          equ	1060	;# 
  1617   000425                     IOCEP           equ	1061	;# 
  1618   000426                     IOCEN           equ	1062	;# 
  1619   000427                     IOCEF           equ	1063	;# 
  1620   000428                     ANSELF          equ	1064	;# 
  1621   000429                     WPUF            equ	1065	;# 
  1622   00042A                     ODCONF          equ	1066	;# 
  1623   00042B                     SLRCONF         equ	1067	;# 
  1624   00042C                     INLVLF          equ	1068	;# 
  1625   000440                     NCO1ACC         equ	1088	;# 
  1626   000440                     NCO1ACCL        equ	1088	;# 
  1627   000441                     NCO1ACCH        equ	1089	;# 
  1628   000442                     NCO1ACCU        equ	1090	;# 
  1629   000443                     NCO1INC         equ	1091	;# 
  1630   000443                     NCO1INCL        equ	1091	;# 
  1631   000444                     NCO1INCH        equ	1092	;# 
  1632   000445                     NCO1INCU        equ	1093	;# 
  1633   000446                     NCO1CON         equ	1094	;# 
  1634   000447                     NCO1CLK         equ	1095	;# 
  1635   000448                     NCO2ACC         equ	1096	;# 
  1636   000448                     NCO2ACCL        equ	1096	;# 
  1637   000449                     NCO2ACCH        equ	1097	;# 
  1638   00044A                     NCO2ACCU        equ	1098	;# 
  1639   00044B                     NCO2INC         equ	1099	;# 
  1640   00044B                     NCO2INCL        equ	1099	;# 
  1641   00044C                     NCO2INCH        equ	1100	;# 
  1642   00044D                     NCO2INCU        equ	1101	;# 
  1643   00044E                     NCO2CON         equ	1102	;# 
  1644   00044F                     NCO2CLK         equ	1103	;# 
  1645   000450                     NCO3ACC         equ	1104	;# 
  1646   000450                     NCO3ACCL        equ	1104	;# 
  1647   000451                     NCO3ACCH        equ	1105	;# 
  1648   000452                     NCO3ACCU        equ	1106	;# 
  1649   000453                     NCO3INC         equ	1107	;# 
  1650   000453                     NCO3INCL        equ	1107	;# 
  1651   000454                     NCO3INCH        equ	1108	;# 
  1652   000455                     NCO3INCU        equ	1109	;# 
  1653   000456                     NCO3CON         equ	1110	;# 
  1654   000457                     NCO3CLK         equ	1111	;# 
  1655   000459                     IVTLOCK         equ	1113	;# 
  1656   00045A                     IVTAD           equ	1114	;# 
  1657   00045A                     IVTADL          equ	1114	;# 
  1658   00045B                     IVTADH          equ	1115	;# 
  1659   00045C                     IVTADU          equ	1116	;# 
  1660   00045D                     IVTBASE         equ	1117	;# 
  1661   00045D                     IVTBASEL        equ	1117	;# 
  1662   00045E                     IVTBASEH        equ	1118	;# 
  1663   00045F                     IVTBASEU        equ	1119	;# 
  1664   000460                     PWM1ERS         equ	1120	;# 
  1665   000461                     PWM1CLK         equ	1121	;# 
  1666   000462                     PWM1LDS         equ	1122	;# 
  1667   000463                     PWM1PR          equ	1123	;# 
  1668   000463                     PWM1PRL         equ	1123	;# 
  1669   000464                     PWM1PRH         equ	1124	;# 
  1670   000465                     PWM1CPRE        equ	1125	;# 
  1671   000466                     PWM1PIPOS       equ	1126	;# 
  1672   000467                     PWM1GIR         equ	1127	;# 
  1673   000468                     PWM1GIE         equ	1128	;# 
  1674   000469                     PWM1CON         equ	1129	;# 
  1675   00046A                     PWM1S1CFG       equ	1130	;# 
  1676   00046B                     PWM1S1P1        equ	1131	;# 
  1677   00046B                     PWM1S1P1L       equ	1131	;# 
  1678   00046C                     PWM1S1P1H       equ	1132	;# 
  1679   00046D                     PWM1S1P2        equ	1133	;# 
  1680   00046D                     PWM1S1P2L       equ	1133	;# 
  1681   00046E                     PWM1S1P2H       equ	1134	;# 
  1682   00046F                     PWM2ERS         equ	1135	;# 
  1683   000470                     PWM2CLK         equ	1136	;# 
  1684   000471                     PWM2LDS         equ	1137	;# 
  1685   000472                     PWM2PR          equ	1138	;# 
  1686   000472                     PWM2PRL         equ	1138	;# 
  1687   000473                     PWM2PRH         equ	1139	;# 
  1688   000474                     PWM2CPRE        equ	1140	;# 
  1689   000475                     PWM2PIPOS       equ	1141	;# 
  1690   000476                     PWM2GIR         equ	1142	;# 
  1691   000477                     PWM2GIE         equ	1143	;# 
  1692   000478                     PWM2CON         equ	1144	;# 
  1693   000479                     PWM2S1CFG       equ	1145	;# 
  1694   00047A                     PWM2S1P1        equ	1146	;# 
  1695   00047A                     PWM2S1P1L       equ	1146	;# 
  1696   00047B                     PWM2S1P1H       equ	1147	;# 
  1697   00047C                     PWM2S1P2        equ	1148	;# 
  1698   00047C                     PWM2S1P2L       equ	1148	;# 
  1699   00047D                     PWM2S1P2H       equ	1149	;# 
  1700   00047E                     PWM3ERS         equ	1150	;# 
  1701   00047F                     PWM3CLK         equ	1151	;# 
  1702   000480                     PWM3LDS         equ	1152	;# 
  1703   000481                     PWM3PR          equ	1153	;# 
  1704   000481                     PWM3PRL         equ	1153	;# 
  1705   000482                     PWM3PRH         equ	1154	;# 
  1706   000483                     PWM3CPRE        equ	1155	;# 
  1707   000484                     PWM3PIPOS       equ	1156	;# 
  1708   000485                     PWM3GIR         equ	1157	;# 
  1709   000486                     PWM3GIE         equ	1158	;# 
  1710   000487                     PWM3CON         equ	1159	;# 
  1711   000488                     PWM3S1CFG       equ	1160	;# 
  1712   000489                     PWM3S1P1        equ	1161	;# 
  1713   000489                     PWM3S1P1L       equ	1161	;# 
  1714   00048A                     PWM3S1P1H       equ	1162	;# 
  1715   00048B                     PWM3S1P2        equ	1163	;# 
  1716   00048B                     PWM3S1P2L       equ	1163	;# 
  1717   00048C                     PWM3S1P2H       equ	1164	;# 
  1718   00049C                     PWMLOAD         equ	1180	;# 
  1719   00049D                     PWMEN           equ	1181	;# 
  1720   00049E                     PIE0            equ	1182	;# 
  1721   00049F                     PIE1            equ	1183	;# 
  1722   0004A0                     PIE2            equ	1184	;# 
  1723   0004A1                     PIE3            equ	1185	;# 
  1724   0004A2                     PIE4            equ	1186	;# 
  1725   0004A3                     PIE5            equ	1187	;# 
  1726   0004A4                     PIE6            equ	1188	;# 
  1727   0004A5                     PIE7            equ	1189	;# 
  1728   0004A6                     PIE8            equ	1190	;# 
  1729   0004A7                     PIE9            equ	1191	;# 
  1730   0004A8                     PIE10           equ	1192	;# 
  1731   0004A9                     PIE11           equ	1193	;# 
  1732   0004AA                     PIE12           equ	1194	;# 
  1733   0004AB                     PIE13           equ	1195	;# 
  1734   0004AC                     PIE14           equ	1196	;# 
  1735   0004AD                     PIE15           equ	1197	;# 
  1736   0004AE                     PIR0            equ	1198	;# 
  1737   0004AF                     PIR1            equ	1199	;# 
  1738   0004B0                     PIR2            equ	1200	;# 
  1739   0004B1                     PIR3            equ	1201	;# 
  1740   0004B2                     PIR4            equ	1202	;# 
  1741   0004B3                     PIR5            equ	1203	;# 
  1742   0004B4                     PIR6            equ	1204	;# 
  1743   0004B5                     PIR7            equ	1205	;# 
  1744   0004B6                     PIR8            equ	1206	;# 
  1745   0004B7                     PIR9            equ	1207	;# 
  1746   0004B8                     PIR10           equ	1208	;# 
  1747   0004B9                     PIR11           equ	1209	;# 
  1748   0004BA                     PIR12           equ	1210	;# 
  1749   0004BB                     PIR13           equ	1211	;# 
  1750   0004BC                     PIR14           equ	1212	;# 
  1751   0004BD                     PIR15           equ	1213	;# 
  1752   0004BE                     LATA            equ	1214	;# 
  1753   0004BF                     LATB            equ	1215	;# 
  1754   0004C0                     LATC            equ	1216	;# 
  1755   0004C1                     LATD            equ	1217	;# 
  1756   0004C2                     LATE            equ	1218	;# 
  1757   0004C3                     LATF            equ	1219	;# 
  1758   0004C6                     TRISA           equ	1222	;# 
  1759   0004C7                     TRISB           equ	1223	;# 
  1760   0004C8                     TRISC           equ	1224	;# 
  1761   0004C9                     TRISD           equ	1225	;# 
  1762   0004CA                     TRISE           equ	1226	;# 
  1763   0004CB                     TRISF           equ	1227	;# 
  1764   0004CE                     PORTA           equ	1230	;# 
  1765   0004CF                     PORTB           equ	1231	;# 
  1766   0004D0                     PORTC           equ	1232	;# 
  1767   0004D1                     PORTD           equ	1233	;# 
  1768   0004D2                     PORTE           equ	1234	;# 
  1769   0004D3                     PORTF           equ	1235	;# 
  1770   0004D6                     INTCON0         equ	1238	;# 
  1771   0004D7                     INTCON1         equ	1239	;# 
  1772   0004D8                     STATUS          equ	1240	;# 
  1773   0004D9                     FSR2            equ	1241	;# 
  1774   0004D9                     FSR2L           equ	1241	;# 
  1775   0004DA                     FSR2H           equ	1242	;# 
  1776   0004DB                     PLUSW2          equ	1243	;# 
  1777   0004DC                     PREINC2         equ	1244	;# 
  1778   0004DD                     POSTDEC2        equ	1245	;# 
  1779   0004DE                     POSTINC2        equ	1246	;# 
  1780   0004DF                     INDF2           equ	1247	;# 
  1781   0004E0                     BSR             equ	1248	;# 
  1782   0004E1                     FSR1            equ	1249	;# 
  1783   0004E1                     FSR1L           equ	1249	;# 
  1784   0004E2                     FSR1H           equ	1250	;# 
  1785   0004E3                     PLUSW1          equ	1251	;# 
  1786   0004E4                     PREINC1         equ	1252	;# 
  1787   0004E5                     POSTDEC1        equ	1253	;# 
  1788   0004E6                     POSTINC1        equ	1254	;# 
  1789   0004E7                     INDF1           equ	1255	;# 
  1790   0004E8                     WREG            equ	1256	;# 
  1791   0004E9                     FSR0            equ	1257	;# 
  1792   0004E9                     FSR0L           equ	1257	;# 
  1793   0004EA                     FSR0H           equ	1258	;# 
  1794   0004EB                     PLUSW0          equ	1259	;# 
  1795   0004EC                     PREINC0         equ	1260	;# 
  1796   0004ED                     POSTDEC0        equ	1261	;# 
  1797   0004EE                     POSTINC0        equ	1262	;# 
  1798   0004EF                     INDF0           equ	1263	;# 
  1799   0004F0                     PCON0           equ	1264	;# 
  1800   0004F1                     PCON1           equ	1265	;# 
  1801   0004F2                     CPUDOZE         equ	1266	;# 
  1802   0004F3                     PROD            equ	1267	;# 
  1803   0004F3                     PRODL           equ	1267	;# 
  1804   0004F4                     PRODH           equ	1268	;# 
  1805   0004F5                     TABLAT          equ	1269	;# 
  1806   0004F6                     TBLPTR          equ	1270	;# 
  1807   0004F6                     TBLPTRL         equ	1270	;# 
  1808   0004F7                     TBLPTRH         equ	1271	;# 
  1809   0004F8                     TBLPTRU         equ	1272	;# 
  1810   0004F9                     PCLAT           equ	1273	;# 
  1811   0004F9                     PCL             equ	1273	;# 
  1812   0004FA                     PCLATH          equ	1274	;# 
  1813   0004FB                     PCLATU          equ	1275	;# 
  1814   0004FC                     STKPTR          equ	1276	;# 
  1815   0004FD                     TOS             equ	1277	;# 
  1816   0004FD                     TOSL            equ	1277	;# 
  1817   0004FE                     TOSH            equ	1278	;# 
  1818   0004FF                     TOSU            equ	1279	;# 
  1819   000039                     CLKRCON         equ	57	;# 
  1820   00003A                     CLKRCLK         equ	58	;# 
  1821   000040                     NVMCON0         equ	64	;# 
  1822   000041                     NVMCON1         equ	65	;# 
  1823   000042                     NVMLOCK         equ	66	;# 
  1824   000043                     NVMADR          equ	67	;# 
  1825   000043                     NVMADRL         equ	67	;# 
  1826   000044                     NVMADRH         equ	68	;# 
  1827   000045                     NVMADRU         equ	69	;# 
  1828   000046                     NVMDAT          equ	70	;# 
  1829   000046                     NVMDATL         equ	70	;# 
  1830   000047                     NVMDATH         equ	71	;# 
  1831   000048                     VREGCON         equ	72	;# 
  1832   000049                     BORCON          equ	73	;# 
  1833   00004A                     HLVDCON0        equ	74	;# 
  1834   00004B                     HLVDCON1        equ	75	;# 
  1835   00004C                     ZCDCON          equ	76	;# 
  1836   000060                     PMD0            equ	96	;# 
  1837   000061                     PMD1            equ	97	;# 
  1838   000063                     PMD3            equ	99	;# 
  1839   000064                     PMD4            equ	100	;# 
  1840   000065                     PMD5            equ	101	;# 
  1841   000066                     PMD6            equ	102	;# 
  1842   000067                     PMD7            equ	103	;# 
  1843   000068                     PMD8            equ	104	;# 
  1844   00006A                     MD1CON0         equ	106	;# 
  1845   00006B                     MD1CON1         equ	107	;# 
  1846   00006C                     MD1SRC          equ	108	;# 
  1847   00006D                     MD1CARL         equ	109	;# 
  1848   00006E                     MD1CARH         equ	110	;# 
  1849   00006F                     CMOUT           equ	111	;# 
  1850   000070                     CM1CON0         equ	112	;# 
  1851   000071                     CM1CON1         equ	113	;# 
  1852   000072                     CM1NCH          equ	114	;# 
  1853   000073                     CM1PCH          equ	115	;# 
  1854   000074                     CM2CON0         equ	116	;# 
  1855   000075                     CM2CON1         equ	117	;# 
  1856   000076                     CM2NCH          equ	118	;# 
  1857   000077                     CM2PCH          equ	119	;# 
  1858   000078                     WDTCON0         equ	120	;# 
  1859   000079                     WDTCON1         equ	121	;# 
  1860   00007A                     WDTPS           equ	122	;# 
  1861   00007A                     WDTPSL          equ	122	;# 
  1862   00007B                     WDTPSH          equ	123	;# 
  1863   00007C                     WDTTMR          equ	124	;# 
  1864   00007D                     DAC1DAT         equ	125	;# 
  1865   00007D                     DAC1DATL        equ	125	;# 
  1866   00007F                     DAC1CON         equ	127	;# 
  1867   000080                     SPI1RXB         equ	128	;# 
  1868   000081                     SPI1TXB         equ	129	;# 
  1869   000082                     SPI1TCNT        equ	130	;# 
  1870   000082                     SPI1TCNTL       equ	130	;# 
  1871   000083                     SPI1TCNTH       equ	131	;# 
  1872   000084                     SPI1CON0        equ	132	;# 
  1873   000085                     SPI1CON1        equ	133	;# 
  1874   000086                     SPI1CON2        equ	134	;# 
  1875   000087                     SPI1STATUS      equ	135	;# 
  1876   000088                     SPI1TWIDTH      equ	136	;# 
  1877   000089                     SPI1BAUD        equ	137	;# 
  1878   00008A                     SPI1INTF        equ	138	;# 
  1879   00008B                     SPI1INTE        equ	139	;# 
  1880   00008C                     SPI1CLK         equ	140	;# 
  1881   00008D                     SPI2RXB         equ	141	;# 
  1882   00008E                     SPI2TXB         equ	142	;# 
  1883   00008F                     SPI2TCNT        equ	143	;# 
  1884   00008F                     SPI2TCNTL       equ	143	;# 
  1885   000090                     SPI2TCNTH       equ	144	;# 
  1886   000091                     SPI2CON0        equ	145	;# 
  1887   000092                     SPI2CON1        equ	146	;# 
  1888   000093                     SPI2CON2        equ	147	;# 
  1889   000094                     SPI2STATUS      equ	148	;# 
  1890   000095                     SPI2TWIDTH      equ	149	;# 
  1891   000096                     SPI2BAUD        equ	150	;# 
  1892   000097                     SPI2INTF        equ	151	;# 
  1893   000098                     SPI2INTE        equ	152	;# 
  1894   000099                     SPI2CLK         equ	153	;# 
  1895   0000AC                     ACTCON          equ	172	;# 
  1896   0000AD                     OSCCON1         equ	173	;# 
  1897   0000AE                     OSCCON2         equ	174	;# 
  1898   0000AF                     OSCCON3         equ	175	;# 
  1899   0000B0                     OSCTUNE         equ	176	;# 
  1900   0000B1                     OSCFRQ          equ	177	;# 
  1901   0000B1                     OSCFREQ         equ	177	;# 
  1902   0000B2                     OSCSTAT         equ	178	;# 
  1903   0000B2                     OSCSTAT1        equ	178	;# 
  1904   0000B3                     OSCEN           equ	179	;# 
  1905   0000B4                     PRLOCK          equ	180	;# 
  1906   0000B5                     SCANPR          equ	181	;# 
  1907   0000B6                     DMA1PR          equ	182	;# 
  1908   0000B7                     DMA2PR          equ	183	;# 
  1909   0000B8                     DMA3PR          equ	184	;# 
  1910   0000B9                     DMA4PR          equ	185	;# 
  1911   0000BA                     DMA5PR          equ	186	;# 
  1912   0000BB                     DMA6PR          equ	187	;# 
  1913   0000BE                     MAINPR          equ	190	;# 
  1914   0000BF                     ISRPR           equ	191	;# 
  1915   0000D4                     CLCDATA         equ	212	;# 
  1916   0000D5                     CLCSELECT       equ	213	;# 
  1917   0000D6                     CLCnCON         equ	214	;# 
  1918   0000D7                     CLCnPOL         equ	215	;# 
  1919   0000D8                     CLCnSEL0        equ	216	;# 
  1920   0000D9                     CLCnSEL1        equ	217	;# 
  1921   0000DA                     CLCnSEL2        equ	218	;# 
  1922   0000DB                     CLCnSEL3        equ	219	;# 
  1923   0000DC                     CLCnGLS0        equ	220	;# 
  1924   0000DD                     CLCnGLS1        equ	221	;# 
  1925   0000DE                     CLCnGLS2        equ	222	;# 
  1926   0000DF                     CLCnGLS3        equ	223	;# 
  1927   0000E8                     DMASELECT       equ	232	;# 
  1928   0000E9                     DMAnBUF         equ	233	;# 
  1929   0000EA                     DMAnDCNT        equ	234	;# 
  1930   0000EA                     DMAnDCNTL       equ	234	;# 
  1931   0000EB                     DMAnDCNTH       equ	235	;# 
  1932   0000EC                     DMAnDPTR        equ	236	;# 
  1933   0000EC                     DMAnDPTRL       equ	236	;# 
  1934   0000ED                     DMAnDPTRH       equ	237	;# 
  1935   0000EE                     DMAnDSZ         equ	238	;# 
  1936   0000EE                     DMAnDSZL        equ	238	;# 
  1937   0000EF                     DMAnDSZH        equ	239	;# 
  1938   0000F0                     DMAnDSA         equ	240	;# 
  1939   0000F0                     DMAnDSAL        equ	240	;# 
  1940   0000F1                     DMAnDSAH        equ	241	;# 
  1941   0000F2                     DMAnSCNT        equ	242	;# 
  1942   0000F2                     DMAnSCNTL       equ	242	;# 
  1943   0000F3                     DMAnSCNTH       equ	243	;# 
  1944   0000F4                     DMAnSPTR        equ	244	;# 
  1945   0000F4                     DMAnSPTRL       equ	244	;# 
  1946   0000F5                     DMAnSPTRH       equ	245	;# 
  1947   0000F6                     DMAnSPTRU       equ	246	;# 
  1948   0000F7                     DMAnSSZ         equ	247	;# 
  1949   0000F7                     DMAnSSZL        equ	247	;# 
  1950   0000F8                     DMAnSSZH        equ	248	;# 
  1951   0000F9                     DMAnSSA         equ	249	;# 
  1952   0000F9                     DMAnSSAL        equ	249	;# 
  1953   0000FA                     DMAnSSAH        equ	250	;# 
  1954   0000FB                     DMAnSSAU        equ	251	;# 
  1955   0000FC                     DMAnCON0        equ	252	;# 
  1956   0000FD                     DMAnCON1        equ	253	;# 
  1957   0000FE                     DMAnAIRQ        equ	254	;# 
  1958   0000FF                     DMAnSIRQ        equ	255	;# 
  1959   000200                     PPSLOCK         equ	512	;# 
  1960   000201                     RA0PPS          equ	513	;# 
  1961   000202                     RA1PPS          equ	514	;# 
  1962   000203                     RA2PPS          equ	515	;# 
  1963   000204                     RA3PPS          equ	516	;# 
  1964   000205                     RA4PPS          equ	517	;# 
  1965   000206                     RA5PPS          equ	518	;# 
  1966   000207                     RA6PPS          equ	519	;# 
  1967   000208                     RA7PPS          equ	520	;# 
  1968   000209                     RB0PPS          equ	521	;# 
  1969   00020A                     RB1PPS          equ	522	;# 
  1970   00020B                     RB2PPS          equ	523	;# 
  1971   00020C                     RB3PPS          equ	524	;# 
  1972   00020D                     RB4PPS          equ	525	;# 
  1973   00020E                     RB5PPS          equ	526	;# 
  1974   00020F                     RB6PPS          equ	527	;# 
  1975   000210                     RB7PPS          equ	528	;# 
  1976   000211                     RC0PPS          equ	529	;# 
  1977   000212                     RC1PPS          equ	530	;# 
  1978   000213                     RC2PPS          equ	531	;# 
  1979   000214                     RC3PPS          equ	532	;# 
  1980   000215                     RC4PPS          equ	533	;# 
  1981   000216                     RC5PPS          equ	534	;# 
  1982   000217                     RC6PPS          equ	535	;# 
  1983   000218                     RC7PPS          equ	536	;# 
  1984   000219                     RD0PPS          equ	537	;# 
  1985   00021A                     RD1PPS          equ	538	;# 
  1986   00021B                     RD2PPS          equ	539	;# 
  1987   00021C                     RD3PPS          equ	540	;# 
  1988   00021D                     RD4PPS          equ	541	;# 
  1989   00021E                     RD5PPS          equ	542	;# 
  1990   00021F                     RD6PPS          equ	543	;# 
  1991   000220                     RD7PPS          equ	544	;# 
  1992   000221                     RE0PPS          equ	545	;# 
  1993   000222                     RE1PPS          equ	546	;# 
  1994   000223                     RE2PPS          equ	547	;# 
  1995   000229                     RF0PPS          equ	553	;# 
  1996   00022A                     RF1PPS          equ	554	;# 
  1997   00022B                     RF2PPS          equ	555	;# 
  1998   00022C                     RF3PPS          equ	556	;# 
  1999   00022D                     RF4PPS          equ	557	;# 
  2000   00022E                     RF5PPS          equ	558	;# 
  2001   00022F                     RF6PPS          equ	559	;# 
  2002   000230                     RF7PPS          equ	560	;# 
  2003   00023E                     INT0PPS         equ	574	;# 
  2004   00023F                     INT1PPS         equ	575	;# 
  2005   000240                     INT2PPS         equ	576	;# 
  2006   000241                     T0CKIPPS        equ	577	;# 
  2007   000242                     T1CKIPPS        equ	578	;# 
  2008   000243                     T1GPPS          equ	579	;# 
  2009   000244                     T3CKIPPS        equ	580	;# 
  2010   000245                     T3GPPS          equ	581	;# 
  2011   000246                     T5CKIPPS        equ	582	;# 
  2012   000247                     T5GPPS          equ	583	;# 
  2013   000248                     T2INPPS         equ	584	;# 
  2014   000249                     T4INPPS         equ	585	;# 
  2015   00024A                     T6INPPS         equ	586	;# 
  2016   00024F                     CCP1PPS         equ	591	;# 
  2017   000250                     CCP2PPS         equ	592	;# 
  2018   000251                     CCP3PPS         equ	593	;# 
  2019   000253                     PWM1ERSPPS      equ	595	;# 
  2020   000254                     PWM2ERSPPS      equ	596	;# 
  2021   000255                     PWM3ERSPPS      equ	597	;# 
  2022   000257                     PWMIN0PPS       equ	599	;# 
  2023   000258                     PWMIN1PPS       equ	600	;# 
  2024   000259                     SMT1WINPPS      equ	601	;# 
  2025   00025A                     SMT1SIGPPS      equ	602	;# 
  2026   00025B                     CWG1PPS         equ	603	;# 
  2027   00025B                     CWG1INPPS       equ	603	;# 
  2028   00025C                     CWG2PPS         equ	604	;# 
  2029   00025C                     CWG2INPPS       equ	604	;# 
  2030   00025D                     CWG3PPS         equ	605	;# 
  2031   00025D                     CWG3INPPS       equ	605	;# 
  2032   00025E                     MD1CARLPPS      equ	606	;# 
  2033   00025E                     MDCARLPPS       equ	606	;# 
  2034   00025F                     MD1CARHPPS      equ	607	;# 
  2035   00025F                     MDCARHPPS       equ	607	;# 
  2036   000260                     MD1SRCPPS       equ	608	;# 
  2037   000260                     MDSRCPPS        equ	608	;# 
  2038   000261                     CLCIN0PPS       equ	609	;# 
  2039   000262                     CLCIN1PPS       equ	610	;# 
  2040   000263                     CLCIN2PPS       equ	611	;# 
  2041   000264                     CLCIN3PPS       equ	612	;# 
  2042   000265                     CLCIN4PPS       equ	613	;# 
  2043   000266                     CLCIN5PPS       equ	614	;# 
  2044   000267                     CLCIN6PPS       equ	615	;# 
  2045   000268                     CLCIN7PPS       equ	616	;# 
  2046   000269                     ADACTPPS        equ	617	;# 
  2047   00026A                     SPI1SCKPPS      equ	618	;# 
  2048   00026B                     SPI1SDIPPS      equ	619	;# 
  2049   00026C                     SPI1SSPPS       equ	620	;# 
  2050   00026D                     SPI2SCKPPS      equ	621	;# 
  2051   00026E                     SPI2SDIPPS      equ	622	;# 
  2052   00026F                     SPI2SSPPS       equ	623	;# 
  2053   000270                     I2C1SDAPPS      equ	624	;# 
  2054   000271                     I2C1SCLPPS      equ	625	;# 
  2055   000272                     U1RXPPS         equ	626	;# 
  2056   000273                     U1CTSPPS        equ	627	;# 
  2057   000274                     U2RXPPS         equ	628	;# 
  2058   000275                     U2CTSPPS        equ	629	;# 
  2059   000276                     U3RXPPS         equ	630	;# 
  2060   000277                     U3CTSPPS        equ	631	;# 
  2061   000278                     U4RXPPS         equ	632	;# 
  2062   000279                     U4CTSPPS        equ	633	;# 
  2063   00027A                     U5RXPPS         equ	634	;# 
  2064   00027B                     U5CTSPPS        equ	635	;# 
  2065   000286                     RC4I2C          equ	646	;# 
  2066   000287                     RC3I2C          equ	647	;# 
  2067   000288                     RB2I2C          equ	648	;# 
  2068   000289                     RB1I2C          equ	649	;# 
  2069   00028B                     I2C1RXB         equ	651	;# 
  2070   00028C                     I2C1TXB         equ	652	;# 
  2071   00028D                     I2C1CNT         equ	653	;# 
  2072   00028E                     I2C1ADB0        equ	654	;# 
  2073   00028F                     I2C1ADB1        equ	655	;# 
  2074   000290                     I2C1ADR0        equ	656	;# 
  2075   000291                     I2C1ADR1        equ	657	;# 
  2076   000292                     I2C1ADR2        equ	658	;# 
  2077   000293                     I2C1ADR3        equ	659	;# 
  2078   000294                     I2C1CON0        equ	660	;# 
  2079   000295                     I2C1CON1        equ	661	;# 
  2080   000296                     I2C1CON2        equ	662	;# 
  2081   000297                     I2C1ERR         equ	663	;# 
  2082   000298                     I2C1STAT0       equ	664	;# 
  2083   000299                     I2C1STAT1       equ	665	;# 
  2084   00029A                     I2C1PIR         equ	666	;# 
  2085   00029B                     I2C1PIE         equ	667	;# 
  2086   00029C                     I2C1CLK         equ	668	;# 
  2087   00029D                     I2C1BTO         equ	669	;# 
  2088   0002A1                     U1RXB           equ	673	;# 
  2089   0002A1                     U1RXBL          equ	673	;# 
  2090   0002A2                     U1RXCHK         equ	674	;# 
  2091   0002A3                     U1TXB           equ	675	;# 
  2092   0002A3                     U1TXBL          equ	675	;# 
  2093   0002A4                     U1TXCHK         equ	676	;# 
  2094   0002A5                     U1P1            equ	677	;# 
  2095   0002A5                     U1P1L           equ	677	;# 
  2096   0002A6                     U1P1H           equ	678	;# 
  2097   0002A7                     U1P2            equ	679	;# 
  2098   0002A7                     U1P2L           equ	679	;# 
  2099   0002A8                     U1P2H           equ	680	;# 
  2100   0002A9                     U1P3            equ	681	;# 
  2101   0002A9                     U1P3L           equ	681	;# 
  2102   0002AA                     U1P3H           equ	682	;# 
  2103   0002AB                     U1CON0          equ	683	;# 
  2104   0002AC                     U1CON1          equ	684	;# 
  2105   0002AD                     U1CON2          equ	685	;# 
  2106   0002AE                     U1BRG           equ	686	;# 
  2107   0002AE                     U1BRGL          equ	686	;# 
  2108   0002AF                     U1BRGH          equ	687	;# 
  2109   0002B0                     U1FIFO          equ	688	;# 
  2110   0002B1                     U1UIR           equ	689	;# 
  2111   0002B2                     U1ERRIR         equ	690	;# 
  2112   0002B3                     U1ERRIE         equ	691	;# 
  2113   0002B4                     U2RXB           equ	692	;# 
  2114   0002B4                     U2RXBL          equ	692	;# 
  2115   0002B6                     U2TXB           equ	694	;# 
  2116   0002B6                     U2TXBL          equ	694	;# 
  2117   0002B8                     U2P1            equ	696	;# 
  2118   0002B8                     U2P1L           equ	696	;# 
  2119   0002BA                     U2P2            equ	698	;# 
  2120   0002BA                     U2P2L           equ	698	;# 
  2121   0002BC                     U2P3            equ	700	;# 
  2122   0002BC                     U2P3L           equ	700	;# 
  2123   0002BE                     U2CON0          equ	702	;# 
  2124   0002BF                     U2CON1          equ	703	;# 
  2125   0002C0                     U2CON2          equ	704	;# 
  2126   0002C1                     U2BRG           equ	705	;# 
  2127   0002C1                     U2BRGL          equ	705	;# 
  2128   0002C2                     U2BRGH          equ	706	;# 
  2129   0002C3                     U2FIFO          equ	707	;# 
  2130   0002C4                     U2UIR           equ	708	;# 
  2131   0002C5                     U2ERRIR         equ	709	;# 
  2132   0002C6                     U2ERRIE         equ	710	;# 
  2133   0002C7                     U3RXB           equ	711	;# 
  2134   0002C7                     U3RXBL          equ	711	;# 
  2135   0002C9                     U3TXB           equ	713	;# 
  2136   0002C9                     U3TXBL          equ	713	;# 
  2137   0002CB                     U3P1            equ	715	;# 
  2138   0002CB                     U3P1L           equ	715	;# 
  2139   0002CD                     U3P2            equ	717	;# 
  2140   0002CD                     U3P2L           equ	717	;# 
  2141   0002CF                     U3P3            equ	719	;# 
  2142   0002CF                     U3P3L           equ	719	;# 
  2143   0002D1                     U3CON0          equ	721	;# 
  2144   0002D2                     U3CON1          equ	722	;# 
  2145   0002D3                     U3CON2          equ	723	;# 
  2146   0002D4                     U3BRG           equ	724	;# 
  2147   0002D4                     U3BRGL          equ	724	;# 
  2148   0002D5                     U3BRGH          equ	725	;# 
  2149   0002D6                     U3FIFO          equ	726	;# 
  2150   0002D7                     U3UIR           equ	727	;# 
  2151   0002D8                     U3ERRIR         equ	728	;# 
  2152   0002D9                     U3ERRIE         equ	729	;# 
  2153   0002DA                     U4RXB           equ	730	;# 
  2154   0002DA                     U4RXBL          equ	730	;# 
  2155   0002DC                     U4TXB           equ	732	;# 
  2156   0002DC                     U4TXBL          equ	732	;# 
  2157   0002DE                     U4P1            equ	734	;# 
  2158   0002DE                     U4P1L           equ	734	;# 
  2159   0002E0                     U4P2            equ	736	;# 
  2160   0002E0                     U4P2L           equ	736	;# 
  2161   0002E2                     U4P3            equ	738	;# 
  2162   0002E2                     U4P3L           equ	738	;# 
  2163   0002E4                     U4CON0          equ	740	;# 
  2164   0002E5                     U4CON1          equ	741	;# 
  2165   0002E6                     U4CON2          equ	742	;# 
  2166   0002E7                     U4BRG           equ	743	;# 
  2167   0002E7                     U4BRGL          equ	743	;# 
  2168   0002E8                     U4BRGH          equ	744	;# 
  2169   0002E9                     U4FIFO          equ	745	;# 
  2170   0002EA                     U4UIR           equ	746	;# 
  2171   0002EB                     U4ERRIR         equ	747	;# 
  2172   0002EC                     U4ERRIE         equ	748	;# 
  2173   0002ED                     U5RXB           equ	749	;# 
  2174   0002ED                     U5RXBL          equ	749	;# 
  2175   0002EF                     U5TXB           equ	751	;# 
  2176   0002EF                     U5TXBL          equ	751	;# 
  2177   0002F1                     U5P1            equ	753	;# 
  2178   0002F1                     U5P1L           equ	753	;# 
  2179   0002F3                     U5P2            equ	755	;# 
  2180   0002F3                     U5P2L           equ	755	;# 
  2181   0002F5                     U5P3            equ	757	;# 
  2182   0002F5                     U5P3L           equ	757	;# 
  2183   0002F7                     U5CON0          equ	759	;# 
  2184   0002F8                     U5CON1          equ	760	;# 
  2185   0002F9                     U5CON2          equ	761	;# 
  2186   0002FA                     U5BRG           equ	762	;# 
  2187   0002FA                     U5BRGL          equ	762	;# 
  2188   0002FB                     U5BRGH          equ	763	;# 
  2189   0002FC                     U5FIFO          equ	764	;# 
  2190   0002FD                     U5UIR           equ	765	;# 
  2191   0002FE                     U5ERRIR         equ	766	;# 
  2192   0002FF                     U5ERRIE         equ	767	;# 
  2193   000300                     SMT1TMR         equ	768	;# 
  2194   000300                     SMT1TMRL        equ	768	;# 
  2195   000301                     SMT1TMRH        equ	769	;# 
  2196   000302                     SMT1TMRU        equ	770	;# 
  2197   000303                     SMT1CPR         equ	771	;# 
  2198   000303                     SMT1CPRL        equ	771	;# 
  2199   000304                     SMT1CPRH        equ	772	;# 
  2200   000305                     SMT1CPRU        equ	773	;# 
  2201   000306                     SMT1CPW         equ	774	;# 
  2202   000306                     SMT1CPWL        equ	774	;# 
  2203   000307                     SMT1CPWH        equ	775	;# 
  2204   000308                     SMT1CPWU        equ	776	;# 
  2205   000309                     SMT1PR          equ	777	;# 
  2206   000309                     SMT1PRL         equ	777	;# 
  2207   00030A                     SMT1PRH         equ	778	;# 
  2208   00030B                     SMT1PRU         equ	779	;# 
  2209   00030C                     SMT1CON0        equ	780	;# 
  2210   00030D                     SMT1CON1        equ	781	;# 
  2211   00030E                     SMT1STAT        equ	782	;# 
  2212   00030F                     SMT1CLK         equ	783	;# 
  2213   000310                     SMT1SIG         equ	784	;# 
  2214   000311                     SMT1WIN         equ	785	;# 
  2215   000318                     TMR0L           equ	792	;# 
  2216   000318                     TMR0            equ	792	;# 
  2217   000319                     TMR0H           equ	793	;# 
  2218   000319                     PR0             equ	793	;# 
  2219   00031A                     T0CON0          equ	794	;# 
  2220   00031B                     T0CON1          equ	795	;# 
  2221   00031C                     TMR1            equ	796	;# 
  2222   00031C                     TMR1L           equ	796	;# 
  2223   00031D                     TMR1H           equ	797	;# 
  2224   00031E                     T1CON           equ	798	;# 
  2225   00031E                     TMR1CON         equ	798	;# 
  2226   00031F                     T1GCON          equ	799	;# 
  2227   00031F                     TMR1GCON        equ	799	;# 
  2228   000320                     T1GATE          equ	800	;# 
  2229   000320                     TMR1GATE        equ	800	;# 
  2230   000321                     T1CLK           equ	801	;# 
  2231   000321                     TMR1CLK         equ	801	;# 
  2232   000321                     PR1             equ	801	;# 
  2233   000322                     T2TMR           equ	802	;# 
  2234   000322                     TMR2            equ	802	;# 
  2235   000323                     T2PR            equ	803	;# 
  2236   000323                     PR2             equ	803	;# 
  2237   000324                     T2CON           equ	804	;# 
  2238   000325                     T2HLT           equ	805	;# 
  2239   000326                     T2CLKCON        equ	806	;# 
  2240   000326                     T2CLK           equ	806	;# 
  2241   000327                     T2RST           equ	807	;# 
  2242   000328                     TMR3            equ	808	;# 
  2243   000328                     TMR3L           equ	808	;# 
  2244   000329                     TMR3H           equ	809	;# 
  2245   00032A                     T3CON           equ	810	;# 
  2246   00032A                     TMR3CON         equ	810	;# 
  2247   00032B                     T3GCON          equ	811	;# 
  2248   00032B                     TMR3GCON        equ	811	;# 
  2249   00032C                     T3GATE          equ	812	;# 
  2250   00032C                     TMR3GATE        equ	812	;# 
  2251   00032D                     T3CLK           equ	813	;# 
  2252   00032D                     TMR3CLK         equ	813	;# 
  2253   00032D                     PR3             equ	813	;# 
  2254   00032E                     T4TMR           equ	814	;# 
  2255   00032E                     TMR4            equ	814	;# 
  2256   00032F                     T4PR            equ	815	;# 
  2257   00032F                     PR4             equ	815	;# 
  2258   000330                     T4CON           equ	816	;# 
  2259   000331                     T4HLT           equ	817	;# 
  2260   000332                     T4CLKCON        equ	818	;# 
  2261   000332                     T4CLK           equ	818	;# 
  2262   000333                     T4RST           equ	819	;# 
  2263   000334                     TMR5            equ	820	;# 
  2264   000334                     TMR5L           equ	820	;# 
  2265   000335                     TMR5H           equ	821	;# 
  2266   000336                     T5CON           equ	822	;# 
  2267   000336                     TMR5CON         equ	822	;# 
  2268   000337                     T5GCON          equ	823	;# 
  2269   000337                     TMR5GCON        equ	823	;# 
  2270   000338                     T5GATE          equ	824	;# 
  2271   000338                     TMR5GATE        equ	824	;# 
  2272   000339                     T5CLK           equ	825	;# 
  2273   000339                     TMR5CLK         equ	825	;# 
  2274   000339                     PR5             equ	825	;# 
  2275   00033A                     T6TMR           equ	826	;# 
  2276   00033A                     TMR6            equ	826	;# 
  2277   00033B                     T6PR            equ	827	;# 
  2278   00033B                     PR6             equ	827	;# 
  2279   00033C                     T6CON           equ	828	;# 
  2280   00033D                     T6HLT           equ	829	;# 
  2281   00033E                     T6CLKCON        equ	830	;# 
  2282   00033E                     T6CLK           equ	830	;# 
  2283   00033F                     T6RST           equ	831	;# 
  2284   000340                     CCPR1           equ	832	;# 
  2285   000340                     CCPR1L          equ	832	;# 
  2286   000341                     CCPR1H          equ	833	;# 
  2287   000342                     CCP1CON         equ	834	;# 
  2288   000343                     CCP1CAP         equ	835	;# 
  2289   000344                     CCPR2           equ	836	;# 
  2290   000344                     CCPR2L          equ	836	;# 
  2291   000345                     CCPR2H          equ	837	;# 
  2292   000346                     CCP2CON         equ	838	;# 
  2293   000347                     CCP2CAP         equ	839	;# 
  2294   000348                     CCPR3           equ	840	;# 
  2295   000348                     CCPR3L          equ	840	;# 
  2296   000349                     CCPR3H          equ	841	;# 
  2297   00034A                     CCP3CON         equ	842	;# 
  2298   00034B                     CCP3CAP         equ	843	;# 
  2299   00034C                     CCPTMRS0        equ	844	;# 
  2300   00034F                     CRCDATA         equ	847	;# 
  2301   00034F                     CRCDATL         equ	847	;# 
  2302   000350                     CRCDATH         equ	848	;# 
  2303   000351                     CRCACC          equ	849	;# 
  2304   000351                     CRCACCL         equ	849	;# 
  2305   000352                     CRCACCH         equ	850	;# 
  2306   000353                     CRCSHFT         equ	851	;# 
  2307   000353                     CRCSHIFTL       equ	851	;# 
  2308   000354                     CRCSHIFTH       equ	852	;# 
  2309   000355                     CRCXOR          equ	853	;# 
  2310   000355                     CRCXORL         equ	853	;# 
  2311   000356                     CRCXORH         equ	854	;# 
  2312   000357                     CRCCON0         equ	855	;# 
  2313   000358                     CRCCON1         equ	856	;# 
  2314   00035A                     SCANLADR        equ	858	;# 
  2315   00035A                     SCANLADRL       equ	858	;# 
  2316   00035B                     SCANLADRH       equ	859	;# 
  2317   00035C                     SCANLADRU       equ	860	;# 
  2318   00035D                     SCANHADR        equ	861	;# 
  2319   00035D                     SCANHADRL       equ	861	;# 
  2320   00035E                     SCANHADRH       equ	862	;# 
  2321   00035F                     SCANHADRU       equ	863	;# 
  2322   000360                     SCANCON0        equ	864	;# 
  2323   000361                     SCANTRIG        equ	865	;# 
  2324   000362                     IPR0            equ	866	;# 
  2325   000363                     IPR1            equ	867	;# 
  2326   000364                     IPR2            equ	868	;# 
  2327   000365                     IPR3            equ	869	;# 
  2328   000366                     IPR4            equ	870	;# 
  2329   000367                     IPR5            equ	871	;# 
  2330   000368                     IPR6            equ	872	;# 
  2331   000369                     IPR7            equ	873	;# 
  2332   00036A                     IPR8            equ	874	;# 
  2333   00036B                     IPR9            equ	875	;# 
  2334   00036C                     IPR10           equ	876	;# 
  2335   00036D                     IPR11           equ	877	;# 
  2336   00036E                     IPR12           equ	878	;# 
  2337   00036F                     IPR13           equ	879	;# 
  2338   000370                     IPR14           equ	880	;# 
  2339   000371                     IPR15           equ	881	;# 
  2340   000373                     STATUS_CSHAD    equ	883	;# 
  2341   000374                     WREG_CSHAD      equ	884	;# 
  2342   000375                     BSR_CSHAD       equ	885	;# 
  2343   000376                     SHADCON         equ	886	;# 
  2344   000377                     STATUS_SHAD     equ	887	;# 
  2345   000378                     WREG_SHAD       equ	888	;# 
  2346   000379                     BSR_SHAD        equ	889	;# 
  2347   00037A                     PCLATH_SHAD     equ	890	;# 
  2348   00037B                     PCLATU_SHAD     equ	891	;# 
  2349   00037C                     FSR0SH          equ	892	;# 
  2350   00037C                     FSR0L_SHAD      equ	892	;# 
  2351   00037D                     FSR0H_SHAD      equ	893	;# 
  2352   00037E                     FSR1SH          equ	894	;# 
  2353   00037E                     FSR1L_SHAD      equ	894	;# 
  2354   00037F                     FSR1H_SHAD      equ	895	;# 
  2355   000380                     FSR2SH          equ	896	;# 
  2356   000380                     FSR2L_SHAD      equ	896	;# 
  2357   000381                     FSR2H_SHAD      equ	897	;# 
  2358   000382                     PRODSH          equ	898	;# 
  2359   000382                     PRODL_SHAD      equ	898	;# 
  2360   000383                     PRODH_SHAD      equ	899	;# 
  2361   0003BC                     CWG1CLK         equ	956	;# 
  2362   0003BC                     CWG1CLKCON      equ	956	;# 
  2363   0003BD                     CWG1ISM         equ	957	;# 
  2364   0003BD                     CWG1DAT         equ	957	;# 
  2365   0003BE                     CWG1DBR         equ	958	;# 
  2366   0003BF                     CWG1DBF         equ	959	;# 
  2367   0003C0                     CWG1CON0        equ	960	;# 
  2368   0003C1                     CWG1CON1        equ	961	;# 
  2369   0003C2                     CWG1AS0         equ	962	;# 
  2370   0003C3                     CWG1AS1         equ	963	;# 
  2371   0003C4                     CWG1STR         equ	964	;# 
  2372   0003C5                     CWG2CLK         equ	965	;# 
  2373   0003C5                     CWG2CLKCON      equ	965	;# 
  2374   0003C6                     CWG2ISM         equ	966	;# 
  2375   0003C6                     CWG2DAT         equ	966	;# 
  2376   0003C7                     CWG2DBR         equ	967	;# 
  2377   0003C8                     CWG2DBF         equ	968	;# 
  2378   0003C9                     CWG2CON0        equ	969	;# 
  2379   0003CA                     CWG2CON1        equ	970	;# 
  2380   0003CB                     CWG2AS0         equ	971	;# 
  2381   0003CC                     CWG2AS1         equ	972	;# 
  2382   0003CD                     CWG2STR         equ	973	;# 
  2383   0003CE                     CWG3CLK         equ	974	;# 
  2384   0003CE                     CWG3CLKCON      equ	974	;# 
  2385   0003CF                     CWG3ISM         equ	975	;# 
  2386   0003CF                     CWG3DAT         equ	975	;# 
  2387   0003D0                     CWG3DBR         equ	976	;# 
  2388   0003D1                     CWG3DBF         equ	977	;# 
  2389   0003D2                     CWG3CON0        equ	978	;# 
  2390   0003D3                     CWG3CON1        equ	979	;# 
  2391   0003D4                     CWG3AS0         equ	980	;# 
  2392   0003D5                     CWG3AS1         equ	981	;# 
  2393   0003D6                     CWG3STR         equ	982	;# 
  2394   0003D7                     FVRCON          equ	983	;# 
  2395   0003D8                     ADCPCON         equ	984	;# 
  2396   0003D8                     ADCP            equ	984	;# 
  2397   0003D9                     ADLTH           equ	985	;# 
  2398   0003D9                     ADLTHL          equ	985	;# 
  2399   0003DA                     ADLTHH          equ	986	;# 
  2400   0003DB                     ADUTH           equ	987	;# 
  2401   0003DB                     ADUTHL          equ	987	;# 
  2402   0003DC                     ADUTHH          equ	988	;# 
  2403   0003DD                     ADERR           equ	989	;# 
  2404   0003DD                     ADERRL          equ	989	;# 
  2405   0003DE                     ADERRH          equ	990	;# 
  2406   0003DF                     ADSTPT          equ	991	;# 
  2407   0003DF                     ADSTPTL         equ	991	;# 
  2408   0003E0                     ADSTPTH         equ	992	;# 
  2409   0003E1                     ADFLTR          equ	993	;# 
  2410   0003E1                     ADFLTRL         equ	993	;# 
  2411   0003E2                     ADFLTRH         equ	994	;# 
  2412   0003E3                     ADACC           equ	995	;# 
  2413   0003E3                     ADACCL          equ	995	;# 
  2414   0003E4                     ADACCH          equ	996	;# 
  2415   0003E5                     ADACCU          equ	997	;# 
  2416   0003E6                     ADCNT           equ	998	;# 
  2417   0003E7                     ADRPT           equ	999	;# 
  2418   0003E8                     ADPREV          equ	1000	;# 
  2419   0003E8                     ADPREVL         equ	1000	;# 
  2420   0003E9                     ADPREVH         equ	1001	;# 
  2421   0003EA                     ADRES           equ	1002	;# 
  2422   0003EA                     ADRESL          equ	1002	;# 
  2423   0003EB                     ADRESH          equ	1003	;# 
  2424   0003EC                     ADPCH           equ	1004	;# 
  2425   0003EE                     ADACQ           equ	1006	;# 
  2426   0003EE                     ADACQL          equ	1006	;# 
  2427   0003EF                     ADACQH          equ	1007	;# 
  2428   0003F0                     ADCAP           equ	1008	;# 
  2429   0003F1                     ADPRE           equ	1009	;# 
  2430   0003F1                     ADPREL          equ	1009	;# 
  2431   0003F2                     ADPREH          equ	1010	;# 
  2432   0003F3                     ADCON0          equ	1011	;# 
  2433   0003F4                     ADCON1          equ	1012	;# 
  2434   0003F5                     ADCON2          equ	1013	;# 
  2435   0003F6                     ADCON3          equ	1014	;# 
  2436   0003F7                     ADSTAT          equ	1015	;# 
  2437   0003F8                     ADREF           equ	1016	;# 
  2438   0003F9                     ADACT           equ	1017	;# 
  2439   0003FA                     ADCLK           equ	1018	;# 
  2440   000400                     ANSELA          equ	1024	;# 
  2441   000401                     WPUA            equ	1025	;# 
  2442   000402                     ODCONA          equ	1026	;# 
  2443   000403                     SLRCONA         equ	1027	;# 
  2444   000404                     INLVLA          equ	1028	;# 
  2445   000405                     IOCAP           equ	1029	;# 
  2446   000406                     IOCAN           equ	1030	;# 
  2447   000407                     IOCAF           equ	1031	;# 
  2448   000408                     ANSELB          equ	1032	;# 
  2449   000409                     WPUB            equ	1033	;# 
  2450   00040A                     ODCONB          equ	1034	;# 
  2451   00040B                     SLRCONB         equ	1035	;# 
  2452   00040C                     INLVLB          equ	1036	;# 
  2453   00040D                     IOCBP           equ	1037	;# 
  2454   00040E                     IOCBN           equ	1038	;# 
  2455   00040F                     IOCBF           equ	1039	;# 
  2456   000410                     ANSELC          equ	1040	;# 
  2457   000411                     WPUC            equ	1041	;# 
  2458   000412                     ODCONC          equ	1042	;# 
  2459   000413                     SLRCONC         equ	1043	;# 
  2460   000414                     INLVLC          equ	1044	;# 
  2461   000415                     IOCCP           equ	1045	;# 
  2462   000416                     IOCCN           equ	1046	;# 
  2463   000417                     IOCCF           equ	1047	;# 
  2464   000418                     ANSELD          equ	1048	;# 
  2465   000419                     WPUD            equ	1049	;# 
  2466   00041A                     ODCOND          equ	1050	;# 
  2467   00041B                     SLRCOND         equ	1051	;# 
  2468   00041C                     INLVLD          equ	1052	;# 
  2469   000420                     ANSELE          equ	1056	;# 
  2470   000421                     WPUE            equ	1057	;# 
  2471   000422                     ODCONE          equ	1058	;# 
  2472   000423                     SLRCONE         equ	1059	;# 
  2473   000424                     INLVLE          equ	1060	;# 
  2474   000425                     IOCEP           equ	1061	;# 
  2475   000426                     IOCEN           equ	1062	;# 
  2476   000427                     IOCEF           equ	1063	;# 
  2477   000428                     ANSELF          equ	1064	;# 
  2478   000429                     WPUF            equ	1065	;# 
  2479   00042A                     ODCONF          equ	1066	;# 
  2480   00042B                     SLRCONF         equ	1067	;# 
  2481   00042C                     INLVLF          equ	1068	;# 
  2482   000440                     NCO1ACC         equ	1088	;# 
  2483   000440                     NCO1ACCL        equ	1088	;# 
  2484   000441                     NCO1ACCH        equ	1089	;# 
  2485   000442                     NCO1ACCU        equ	1090	;# 
  2486   000443                     NCO1INC         equ	1091	;# 
  2487   000443                     NCO1INCL        equ	1091	;# 
  2488   000444                     NCO1INCH        equ	1092	;# 
  2489   000445                     NCO1INCU        equ	1093	;# 
  2490   000446                     NCO1CON         equ	1094	;# 
  2491   000447                     NCO1CLK         equ	1095	;# 
  2492   000448                     NCO2ACC         equ	1096	;# 
  2493   000448                     NCO2ACCL        equ	1096	;# 
  2494   000449                     NCO2ACCH        equ	1097	;# 
  2495   00044A                     NCO2ACCU        equ	1098	;# 
  2496   00044B                     NCO2INC         equ	1099	;# 
  2497   00044B                     NCO2INCL        equ	1099	;# 
  2498   00044C                     NCO2INCH        equ	1100	;# 
  2499   00044D                     NCO2INCU        equ	1101	;# 
  2500   00044E                     NCO2CON         equ	1102	;# 
  2501   00044F                     NCO2CLK         equ	1103	;# 
  2502   000450                     NCO3ACC         equ	1104	;# 
  2503   000450                     NCO3ACCL        equ	1104	;# 
  2504   000451                     NCO3ACCH        equ	1105	;# 
  2505   000452                     NCO3ACCU        equ	1106	;# 
  2506   000453                     NCO3INC         equ	1107	;# 
  2507   000453                     NCO3INCL        equ	1107	;# 
  2508   000454                     NCO3INCH        equ	1108	;# 
  2509   000455                     NCO3INCU        equ	1109	;# 
  2510   000456                     NCO3CON         equ	1110	;# 
  2511   000457                     NCO3CLK         equ	1111	;# 
  2512   000459                     IVTLOCK         equ	1113	;# 
  2513   00045A                     IVTAD           equ	1114	;# 
  2514   00045A                     IVTADL          equ	1114	;# 
  2515   00045B                     IVTADH          equ	1115	;# 
  2516   00045C                     IVTADU          equ	1116	;# 
  2517   00045D                     IVTBASE         equ	1117	;# 
  2518   00045D                     IVTBASEL        equ	1117	;# 
  2519   00045E                     IVTBASEH        equ	1118	;# 
  2520   00045F                     IVTBASEU        equ	1119	;# 
  2521   000460                     PWM1ERS         equ	1120	;# 
  2522   000461                     PWM1CLK         equ	1121	;# 
  2523   000462                     PWM1LDS         equ	1122	;# 
  2524   000463                     PWM1PR          equ	1123	;# 
  2525   000463                     PWM1PRL         equ	1123	;# 
  2526   000464                     PWM1PRH         equ	1124	;# 
  2527   000465                     PWM1CPRE        equ	1125	;# 
  2528   000466                     PWM1PIPOS       equ	1126	;# 
  2529   000467                     PWM1GIR         equ	1127	;# 
  2530   000468                     PWM1GIE         equ	1128	;# 
  2531   000469                     PWM1CON         equ	1129	;# 
  2532   00046A                     PWM1S1CFG       equ	1130	;# 
  2533   00046B                     PWM1S1P1        equ	1131	;# 
  2534   00046B                     PWM1S1P1L       equ	1131	;# 
  2535   00046C                     PWM1S1P1H       equ	1132	;# 
  2536   00046D                     PWM1S1P2        equ	1133	;# 
  2537   00046D                     PWM1S1P2L       equ	1133	;# 
  2538   00046E                     PWM1S1P2H       equ	1134	;# 
  2539   00046F                     PWM2ERS         equ	1135	;# 
  2540   000470                     PWM2CLK         equ	1136	;# 
  2541   000471                     PWM2LDS         equ	1137	;# 
  2542   000472                     PWM2PR          equ	1138	;# 
  2543   000472                     PWM2PRL         equ	1138	;# 
  2544   000473                     PWM2PRH         equ	1139	;# 
  2545   000474                     PWM2CPRE        equ	1140	;# 
  2546   000475                     PWM2PIPOS       equ	1141	;# 
  2547   000476                     PWM2GIR         equ	1142	;# 
  2548   000477                     PWM2GIE         equ	1143	;# 
  2549   000478                     PWM2CON         equ	1144	;# 
  2550   000479                     PWM2S1CFG       equ	1145	;# 
  2551   00047A                     PWM2S1P1        equ	1146	;# 
  2552   00047A                     PWM2S1P1L       equ	1146	;# 
  2553   00047B                     PWM2S1P1H       equ	1147	;# 
  2554   00047C                     PWM2S1P2        equ	1148	;# 
  2555   00047C                     PWM2S1P2L       equ	1148	;# 
  2556   00047D                     PWM2S1P2H       equ	1149	;# 
  2557   00047E                     PWM3ERS         equ	1150	;# 
  2558   00047F                     PWM3CLK         equ	1151	;# 
  2559   000480                     PWM3LDS         equ	1152	;# 
  2560   000481                     PWM3PR          equ	1153	;# 
  2561   000481                     PWM3PRL         equ	1153	;# 
  2562   000482                     PWM3PRH         equ	1154	;# 
  2563   000483                     PWM3CPRE        equ	1155	;# 
  2564   000484                     PWM3PIPOS       equ	1156	;# 
  2565   000485                     PWM3GIR         equ	1157	;# 
  2566   000486                     PWM3GIE         equ	1158	;# 
  2567   000487                     PWM3CON         equ	1159	;# 
  2568   000488                     PWM3S1CFG       equ	1160	;# 
  2569   000489                     PWM3S1P1        equ	1161	;# 
  2570   000489                     PWM3S1P1L       equ	1161	;# 
  2571   00048A                     PWM3S1P1H       equ	1162	;# 
  2572   00048B                     PWM3S1P2        equ	1163	;# 
  2573   00048B                     PWM3S1P2L       equ	1163	;# 
  2574   00048C                     PWM3S1P2H       equ	1164	;# 
  2575   00049C                     PWMLOAD         equ	1180	;# 
  2576   00049D                     PWMEN           equ	1181	;# 
  2577   00049E                     PIE0            equ	1182	;# 
  2578   00049F                     PIE1            equ	1183	;# 
  2579   0004A0                     PIE2            equ	1184	;# 
  2580   0004A1                     PIE3            equ	1185	;# 
  2581   0004A2                     PIE4            equ	1186	;# 
  2582   0004A3                     PIE5            equ	1187	;# 
  2583   0004A4                     PIE6            equ	1188	;# 
  2584   0004A5                     PIE7            equ	1189	;# 
  2585   0004A6                     PIE8            equ	1190	;# 
  2586   0004A7                     PIE9            equ	1191	;# 
  2587   0004A8                     PIE10           equ	1192	;# 
  2588   0004A9                     PIE11           equ	1193	;# 
  2589   0004AA                     PIE12           equ	1194	;# 
  2590   0004AB                     PIE13           equ	1195	;# 
  2591   0004AC                     PIE14           equ	1196	;# 
  2592   0004AD                     PIE15           equ	1197	;# 
  2593   0004AE                     PIR0            equ	1198	;# 
  2594   0004AF                     PIR1            equ	1199	;# 
  2595   0004B0                     PIR2            equ	1200	;# 
  2596   0004B1                     PIR3            equ	1201	;# 
  2597   0004B2                     PIR4            equ	1202	;# 
  2598   0004B3                     PIR5            equ	1203	;# 
  2599   0004B4                     PIR6            equ	1204	;# 
  2600   0004B5                     PIR7            equ	1205	;# 
  2601   0004B6                     PIR8            equ	1206	;# 
  2602   0004B7                     PIR9            equ	1207	;# 
  2603   0004B8                     PIR10           equ	1208	;# 
  2604   0004B9                     PIR11           equ	1209	;# 
  2605   0004BA                     PIR12           equ	1210	;# 
  2606   0004BB                     PIR13           equ	1211	;# 
  2607   0004BC                     PIR14           equ	1212	;# 
  2608   0004BD                     PIR15           equ	1213	;# 
  2609   0004BE                     LATA            equ	1214	;# 
  2610   0004BF                     LATB            equ	1215	;# 
  2611   0004C0                     LATC            equ	1216	;# 
  2612   0004C1                     LATD            equ	1217	;# 
  2613   0004C2                     LATE            equ	1218	;# 
  2614   0004C3                     LATF            equ	1219	;# 
  2615   0004C6                     TRISA           equ	1222	;# 
  2616   0004C7                     TRISB           equ	1223	;# 
  2617   0004C8                     TRISC           equ	1224	;# 
  2618   0004C9                     TRISD           equ	1225	;# 
  2619   0004CA                     TRISE           equ	1226	;# 
  2620   0004CB                     TRISF           equ	1227	;# 
  2621   0004CE                     PORTA           equ	1230	;# 
  2622   0004CF                     PORTB           equ	1231	;# 
  2623   0004D0                     PORTC           equ	1232	;# 
  2624   0004D1                     PORTD           equ	1233	;# 
  2625   0004D2                     PORTE           equ	1234	;# 
  2626   0004D3                     PORTF           equ	1235	;# 
  2627   0004D6                     INTCON0         equ	1238	;# 
  2628   0004D7                     INTCON1         equ	1239	;# 
  2629   0004D8                     STATUS          equ	1240	;# 
  2630   0004D9                     FSR2            equ	1241	;# 
  2631   0004D9                     FSR2L           equ	1241	;# 
  2632   0004DA                     FSR2H           equ	1242	;# 
  2633   0004DB                     PLUSW2          equ	1243	;# 
  2634   0004DC                     PREINC2         equ	1244	;# 
  2635   0004DD                     POSTDEC2        equ	1245	;# 
  2636   0004DE                     POSTINC2        equ	1246	;# 
  2637   0004DF                     INDF2           equ	1247	;# 
  2638   0004E0                     BSR             equ	1248	;# 
  2639   0004E1                     FSR1            equ	1249	;# 
  2640   0004E1                     FSR1L           equ	1249	;# 
  2641   0004E2                     FSR1H           equ	1250	;# 
  2642   0004E3                     PLUSW1          equ	1251	;# 
  2643   0004E4                     PREINC1         equ	1252	;# 
  2644   0004E5                     POSTDEC1        equ	1253	;# 
  2645   0004E6                     POSTINC1        equ	1254	;# 
  2646   0004E7                     INDF1           equ	1255	;# 
  2647   0004E8                     WREG            equ	1256	;# 
  2648   0004E9                     FSR0            equ	1257	;# 
  2649   0004E9                     FSR0L           equ	1257	;# 
  2650   0004EA                     FSR0H           equ	1258	;# 
  2651   0004EB                     PLUSW0          equ	1259	;# 
  2652   0004EC                     PREINC0         equ	1260	;# 
  2653   0004ED                     POSTDEC0        equ	1261	;# 
  2654   0004EE                     POSTINC0        equ	1262	;# 
  2655   0004EF                     INDF0           equ	1263	;# 
  2656   0004F0                     PCON0           equ	1264	;# 
  2657   0004F1                     PCON1           equ	1265	;# 
  2658   0004F2                     CPUDOZE         equ	1266	;# 
  2659   0004F3                     PROD            equ	1267	;# 
  2660   0004F3                     PRODL           equ	1267	;# 
  2661   0004F4                     PRODH           equ	1268	;# 
  2662   0004F5                     TABLAT          equ	1269	;# 
  2663   0004F6                     TBLPTR          equ	1270	;# 
  2664   0004F6                     TBLPTRL         equ	1270	;# 
  2665   0004F7                     TBLPTRH         equ	1271	;# 
  2666   0004F8                     TBLPTRU         equ	1272	;# 
  2667   0004F9                     PCLAT           equ	1273	;# 
  2668   0004F9                     PCL             equ	1273	;# 
  2669   0004FA                     PCLATH          equ	1274	;# 
  2670   0004FB                     PCLATU          equ	1275	;# 
  2671   0004FC                     STKPTR          equ	1276	;# 
  2672   0004FD                     TOS             equ	1277	;# 
  2673   0004FD                     TOSL            equ	1277	;# 
  2674   0004FE                     TOSH            equ	1278	;# 
  2675   0004FF                     TOSU            equ	1279	;# 
  2676   0000B3                     _OSCEN          set	179
  2677   0000B1                     _OSCFRQ         set	177
  2678   0000AD                     _OSCCON1        set	173
  2679   000420                     _ANSELE         set	1056
  2680   000410                     _ANSELCbits     set	1040
  2681   000418                     _ANSELD         set	1048
  2682   0004C2                     _LATEbits       set	1218
  2683   0004C0                     _LATCbits       set	1216
  2684   0004CA                     _TRISE          set	1226
  2685   0004C8                     _TRISCbits      set	1224
  2686   0004D1                     _PORTD          set	1233
  2687   0004C9                     _TRISD          set	1225
  2688   0004C1                     _LATD           set	1217
  2689   0004C1                     _LATDbits       set	1217
  2690                           
  2691                           	psect	smallconst
  2692   002600                     __psmallconst:
  2693                           	callstack 0
  2694   002600  00                 	db	0
  2695   002601                     STR_3:
  2696   002601  43                 	db	67	;'C'
  2697   002602  4F                 	db	79	;'O'
  2698   002603  4E                 	db	78	;'N'
  2699   002604  54                 	db	84	;'T'
  2700   002605  41                 	db	65	;'A'
  2701   002606  44                 	db	68	;'D'
  2702   002607  4F                 	db	79	;'O'
  2703   002608  52                 	db	82	;'R'
  2704   002609  3A                 	db	58	;':'
  2705   00260A  20                 	db	32
  2706   00260B  20                 	db	32
  2707   00260C  20                 	db	32
  2708   00260D  20                 	db	32
  2709   00260E  20                 	db	32
  2710   00260F  20                 	db	32
  2711   002610  20                 	db	32
  2712   002611  00                 	db	0
  2713   002612                     STR_1:
  2714   002612  50                 	db	80	;'P'
  2715   002613  72                 	db	114	;'r'
  2716   002614  75                 	db	117	;'u'
  2717   002615  65                 	db	101	;'e'
  2718   002616  62                 	db	98	;'b'
  2719   002617  61                 	db	97	;'a'
  2720   002618  20                 	db	32
  2721   002619  4D                 	db	77	;'M'
  2722   00261A  41                 	db	65	;'A'
  2723   00261B  58                 	db	88	;'X'
  2724   00261C  37                 	db	55	;'7'
  2725   00261D  32                 	db	50	;'2'
  2726   00261E  31                 	db	49	;'1'
  2727   00261F  39                 	db	57	;'9'
  2728   002620  00                 	db	0
  2729   002621                     STR_2:
  2730   002621  49                 	db	73	;'I'
  2731   002622  6E                 	db	110	;'n'
  2732   002623  69                 	db	105	;'i'
  2733   002624  63                 	db	99	;'c'
  2734   002625  69                 	db	105	;'i'
  2735   002626  61                 	db	97	;'a'
  2736   002627  6C                 	db	108	;'l'
  2737   002628  69                 	db	105	;'i'
  2738   002629  7A                 	db	122	;'z'
  2739   00262A  61                 	db	97	;'a'
  2740   00262B  63                 	db	99	;'c'
  2741   00262C  69                 	db	105	;'i'
  2742   00262D  6F                 	db	111	;'o'
  2743   00262E  6E                 	db	110	;'n'
  2744   00262F  00                 	db	0
  2745   002630  00                 	db	0	; dummy byte at the end
  2746   000003                     __activetblptr  equ	3
  2747                           
  2748                           ; #config settings
  2749                           
  2750                           	psect	cinit
  2751   00302E                     __pcinit:
  2752                           	callstack 0
  2753   00302E                     start_initialization:
  2754                           	callstack 0
  2755   00302E                     __initialization:
  2756                           	callstack 0
  2757   00302E                     end_of_initialization:
  2758                           	callstack 0
  2759   00302E                     __end_of__initialization:
  2760                           	callstack 0
  2761   00302E  0100               	movlb	0
  2762   003030  EFEE  F014         	goto	_main	;jump to C main() function
  2763                           
  2764                           	psect	cstackCOMRAM
  2765   000501                     __pcstackCOMRAM:
  2766                           	callstack 0
  2767   000501                     ?_strlen:
  2768                           	callstack 0
  2769   000501                     ?___lwmod:
  2770                           	callstack 0
  2771   000501                     strlen@s:
  2772                           	callstack 0
  2773   000501                     ___lwmod@dividend:
  2774                           	callstack 0
  2775   000501                     ??_ENVIA_NIBBLE:
  2776                           
  2777                           ; 1 bytes @ 0x0
  2778   000501                     	ds	1
  2779   000502                     ENVIA_NIBBLE@dato:
  2780                           	callstack 0
  2781                           
  2782                           ; 1 bytes @ 0x1
  2783   000502                     	ds	1
  2784   000503                     strlen@a:
  2785                           	callstack 0
  2786   000503                     ___lwmod@divisor:
  2787                           	callstack 0
  2788   000503                     ??_ENVIA_LCD_CMD:
  2789   000503                     ??_ENVIA_CHAR:
  2790   000503                     
  2791                           ; 1 bytes @ 0x2
  2792   000503                     	ds	1
  2793   000504                     ENVIA_CHAR@dato:
  2794                           	callstack 0
  2795   000504                     ENVIA_LCD_CMD@dato:
  2796                           	callstack 0
  2797                           
  2798                           ; 1 bytes @ 0x3
  2799   000504                     	ds	1
  2800   000505                     ENVIA_CHAR@aux:
  2801                           	callstack 0
  2802   000505                     ENVIA_LCD_CMD@aux:
  2803                           	callstack 0
  2804   000505                     ___lwmod@counter:
  2805                           	callstack 0
  2806   000505                     
  2807                           ; 1 bytes @ 0x4
  2808   000505                     	ds	1
  2809   000506                     ?___lwdiv:
  2810                           	callstack 0
  2811   000506                     POS_CURSOR@columna:
  2812                           	callstack 0
  2813   000506                     CURSOR_ONOFF@estado:
  2814                           	callstack 0
  2815   000506                     ESCRIBE_MENSAJE2@cadena:
  2816                           	callstack 0
  2817   000506                     ___lwdiv@dividend:
  2818                           	callstack 0
  2819   000506                     ??_LCD_CONFIG:
  2820                           
  2821                           ; 1 bytes @ 0x5
  2822   000506                     	ds	1
  2823   000507                     POS_CURSOR@fila:
  2824                           	callstack 0
  2825   000507                     ??_LCD_INIT:
  2826   000507                     ??_ESCRIBE_MENSAJE2:
  2827                           
  2828                           ; 1 bytes @ 0x6
  2829   000507                     	ds	1
  2830   000508                     ESCRIBE_MENSAJE2@tam:
  2831                           	callstack 0
  2832   000508                     ___lwdiv@divisor:
  2833                           	callstack 0
  2834                           
  2835                           ; 2 bytes @ 0x7
  2836   000508                     	ds	1
  2837   000509                     ESCRIBE_MENSAJE2@i:
  2838                           	callstack 0
  2839                           
  2840                           ; 1 bytes @ 0x8
  2841   000509                     	ds	1
  2842   00050A                     ___lwdiv@quotient:
  2843                           	callstack 0
  2844   00050A                     
  2845                           ; 1 bytes @ 0x9
  2846   00050A                     	ds	2
  2847   00050C                     ___lwdiv@counter:
  2848                           	callstack 0
  2849                           
  2850                           ; 1 bytes @ 0xB
  2851   00050C                     	ds	1
  2852   00050D                     MAX7219_WriteData2@dato:
  2853                           	callstack 0
  2854   00050D                     LCD_ESCRIBE_VAR_INT@numero:
  2855                           	callstack 0
  2856                           
  2857                           ; 2 bytes @ 0xC
  2858   00050D                     	ds	1
  2859   00050E                     ??_MAX7219_WriteData2:
  2860                           
  2861                           ; 1 bytes @ 0xD
  2862   00050E                     	ds	1
  2863   00050F                     LCD_ESCRIBE_VAR_INT@n_digitos:
  2864                           	callstack 0
  2865                           
  2866                           ; 1 bytes @ 0xE
  2867   00050F                     	ds	1
  2868   000510                     LCD_ESCRIBE_VAR_INT@punto:
  2869                           	callstack 0
  2870   000510                     MAX7219_WriteData2@comando:
  2871                           	callstack 0
  2872                           
  2873                           ; 1 bytes @ 0xF
  2874   000510                     	ds	1
  2875   000511                     LCD_ESCRIBE_VAR_INT@d_millar:
  2876                           	callstack 0
  2877   000511                     MAX7219_WriteData2@var_x:
  2878                           	callstack 0
  2879   000511                     
  2880                           ; 1 bytes @ 0x10
  2881   000511                     	ds	1
  2882   000512                     LCD_ESCRIBE_VAR_INT@millar:
  2883                           	callstack 0
  2884   000512                     
  2885                           ; 1 bytes @ 0x11
  2886   000512                     	ds	1
  2887   000513                     LCD_ESCRIBE_VAR_INT@centena:
  2888                           	callstack 0
  2889                           
  2890                           ; 1 bytes @ 0x12
  2891   000513                     	ds	1
  2892   000514                     LCD_ESCRIBE_VAR_INT@decena:
  2893                           	callstack 0
  2894                           
  2895                           ; 1 bytes @ 0x13
  2896   000514                     	ds	1
  2897   000515                     LCD_ESCRIBE_VAR_INT@unidad:
  2898                           	callstack 0
  2899                           
  2900                           ; 1 bytes @ 0x14
  2901   000515                     	ds	1
  2902   000516                     ??_main:
  2903                           
  2904                           ; 1 bytes @ 0x15
  2905   000516                     	ds	2
  2906   000518                     main@contador:
  2907                           	callstack 0
  2908                           
  2909                           ; 2 bytes @ 0x17
  2910   000518                     	ds	2
  2911                           
  2912 ;;
  2913 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2914 ;;
  2915 ;; *************** function _main *****************
  2916 ;; Defined at:
  2917 ;;		line 25 in file "maincode01.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;		None
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  contador        2   23[COMRAM] unsigned int 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2932 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2933 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2934 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2935 ;;Total ram usage:        4 bytes
  2936 ;; Hardware stack levels required when called: 5
  2937 ;; This function calls:
  2938 ;;		_ESCRIBE_MENSAJE2
  2939 ;;		_LCD_ESCRIBE_VAR_INT
  2940 ;;		_MAX7219_WriteData2
  2941 ;;		_POS_CURSOR
  2942 ;;		___lwdiv
  2943 ;;		___lwmod
  2944 ;;		_configuro
  2945 ;; This function is called by:
  2946 ;;		Startup code after reset
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text0
  2951   0029DC                     __ptext0:
  2952                           	callstack 0
  2953   0029DC                     _main:
  2954                           	callstack 122
  2955   0029DC                     
  2956                           ;maincode01.c: 26:     configuro();
  2957   0029DC  EC03  F018         	call	_configuro	;wreg free
  2958                           
  2959                           ;maincode01.c: 27:     POS_CURSOR(1,0);
  2960   0029E0  0E00               	movlw	0
  2961   0029E2  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
  2962   0029E4  0E01               	movlw	1
  2963   0029E6  EC3F  F016         	call	_POS_CURSOR
  2964   0029EA                     
  2965                           ;maincode01.c: 28:     ESCRIBE_MENSAJE2("Prueba MAX7219");
  2966   0029EA  0E12               	movlw	low STR_1
  2967   0029EC  6E06               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2968   0029EE  EC68  F017         	call	_ESCRIBE_MENSAJE2	;wreg free
  2969   0029F2                     
  2970                           ;maincode01.c: 29:     POS_CURSOR(2,0);
  2971   0029F2  0E00               	movlw	0
  2972   0029F4  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
  2973   0029F6  0E02               	movlw	2
  2974   0029F8  EC3F  F016         	call	_POS_CURSOR
  2975                           
  2976                           ;maincode01.c: 30:     ESCRIBE_MENSAJE2("Inicializacion");
  2977   0029FC  0E21               	movlw	low STR_2
  2978   0029FE  6E06               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2979   002A00  EC68  F017         	call	_ESCRIBE_MENSAJE2	;wreg free
  2980   002A04                     
  2981                           ;maincode01.c: 31:     MAX7219_WriteData2(0x0C, 0x00);
  2982   002A04  0E00               	movlw	0
  2983   002A06  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  2984   002A08  0E0C               	movlw	12
  2985   002A0A  ECEA  F015         	call	_MAX7219_WriteData2
  2986   002A0E                     
  2987                           ;maincode01.c: 32:     MAX7219_WriteData2(0x0F, 0x00);
  2988   002A0E  0E00               	movlw	0
  2989   002A10  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  2990   002A12  0E0F               	movlw	15
  2991   002A14  ECEA  F015         	call	_MAX7219_WriteData2
  2992   002A18                     
  2993                           ;maincode01.c: 33:     MAX7219_WriteData2(0x0A, 0x03);
  2994   002A18  0E03               	movlw	3
  2995   002A1A  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  2996   002A1C  0E0A               	movlw	10
  2997   002A1E  ECEA  F015         	call	_MAX7219_WriteData2
  2998   002A22                     
  2999                           ;maincode01.c: 34:     MAX7219_WriteData2(0x0B, 0x07);
  3000   002A22  0E07               	movlw	7
  3001   002A24  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3002   002A26  0E0B               	movlw	11
  3003   002A28  ECEA  F015         	call	_MAX7219_WriteData2
  3004   002A2C                     
  3005                           ;maincode01.c: 35:     MAX7219_WriteData2(0x0C, 0x01);
  3006   002A2C  0E01               	movlw	1
  3007   002A2E  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3008   002A30  0E0C               	movlw	12
  3009   002A32  ECEA  F015         	call	_MAX7219_WriteData2
  3010   002A36                     
  3011                           ;maincode01.c: 36:     MAX7219_WriteData2(0x09, 0x00);
  3012   002A36  0E00               	movlw	0
  3013   002A38  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3014   002A3A  0E09               	movlw	9
  3015   002A3C  ECEA  F015         	call	_MAX7219_WriteData2
  3016   002A40                     
  3017                           ;maincode01.c: 38:     MAX7219_WriteData2(0x01, 0x00);
  3018   002A40  0E00               	movlw	0
  3019   002A42  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3020   002A44  0E01               	movlw	1
  3021   002A46  ECEA  F015         	call	_MAX7219_WriteData2
  3022   002A4A                     
  3023                           ;maincode01.c: 39:     MAX7219_WriteData2(0x02, 0x5B);
  3024   002A4A  0E5B               	movlw	91
  3025   002A4C  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3026   002A4E  0E02               	movlw	2
  3027   002A50  ECEA  F015         	call	_MAX7219_WriteData2
  3028   002A54                     
  3029                           ;maincode01.c: 40:     MAX7219_WriteData2(0x03, 0x7E);
  3030   002A54  0E7E               	movlw	126
  3031   002A56  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3032   002A58  0E03               	movlw	3
  3033   002A5A  ECEA  F015         	call	_MAX7219_WriteData2
  3034   002A5E                     
  3035                           ;maincode01.c: 41:     MAX7219_WriteData2(0x04, 0x5B);
  3036   002A5E  0E5B               	movlw	91
  3037   002A60  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3038   002A62  0E04               	movlw	4
  3039   002A64  ECEA  F015         	call	_MAX7219_WriteData2
  3040   002A68                     
  3041                           ;maincode01.c: 42:     MAX7219_WriteData2(0x05, 0x3E);
  3042   002A68  0E3E               	movlw	62
  3043   002A6A  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3044   002A6C  0E05               	movlw	5
  3045   002A6E  ECEA  F015         	call	_MAX7219_WriteData2
  3046   002A72                     
  3047                           ;maincode01.c: 43:     MAX7219_WriteData2(0x06, 0x0E);
  3048   002A72  0E0E               	movlw	14
  3049   002A74  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3050   002A76  0E06               	movlw	6
  3051   002A78  ECEA  F015         	call	_MAX7219_WriteData2
  3052   002A7C                     
  3053                           ;maincode01.c: 44:     MAX7219_WriteData2(0x07, 0x06);
  3054   002A7C  0E06               	movlw	6
  3055   002A7E  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3056   002A80  0E07               	movlw	7
  3057   002A82  ECEA  F015         	call	_MAX7219_WriteData2
  3058   002A86                     
  3059                           ;maincode01.c: 45:     MAX7219_WriteData2(0x08, 0x00);
  3060   002A86  0E00               	movlw	0
  3061   002A88  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3062   002A8A  0E08               	movlw	8
  3063   002A8C  ECEA  F015         	call	_MAX7219_WriteData2
  3064   002A90                     
  3065                           ;maincode01.c: 46:     _delay((unsigned long)((5000)*(32000000UL/4000.0)));
  3066   002A90  0ECB               	movlw	203
  3067   002A92  6E17               	movwf	(??_main+1)^(0+1280),c
  3068   002A94  0EEC               	movlw	236
  3069   002A96  6E16               	movwf	??_main^(0+1280),c
  3070   002A98  0E84               	movlw	132
  3071   002A9A                     u587:
  3072   002A9A  2EE8               	decfsz	wreg,f,c
  3073   002A9C  D7FE               	bra	u587
  3074   002A9E  2E16               	decfsz	??_main^(0+1280),f,c
  3075   002AA0  D7FC               	bra	u587
  3076   002AA2  2E17               	decfsz	(??_main+1)^(0+1280),f,c
  3077   002AA4  D7FA               	bra	u587
  3078   002AA6  D000               	nop2	
  3079   002AA8                     
  3080                           ;maincode01.c: 47:     POS_CURSOR(2,0);
  3081   002AA8  0E00               	movlw	0
  3082   002AAA  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
  3083   002AAC  0E02               	movlw	2
  3084   002AAE  EC3F  F016         	call	_POS_CURSOR
  3085   002AB2                     
  3086                           ;maincode01.c: 48:     ESCRIBE_MENSAJE2("CONTADOR:       ");
  3087   002AB2  0E01               	movlw	low STR_3
  3088   002AB4  6E06               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
  3089   002AB6  EC68  F017         	call	_ESCRIBE_MENSAJE2	;wreg free
  3090   002ABA                     
  3091                           ;maincode01.c: 49:     MAX7219_WriteData2(0x09, 0x0F);
  3092   002ABA  0E0F               	movlw	15
  3093   002ABC  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3094   002ABE  0E09               	movlw	9
  3095   002AC0  ECEA  F015         	call	_MAX7219_WriteData2
  3096   002AC4                     
  3097                           ;maincode01.c: 50:     MAX7219_WriteData2(0x08, 0x4E);
  3098   002AC4  0E4E               	movlw	78
  3099   002AC6  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3100   002AC8  0E08               	movlw	8
  3101   002ACA  ECEA  F015         	call	_MAX7219_WriteData2
  3102   002ACE                     
  3103                           ;maincode01.c: 51:     MAX7219_WriteData2(0x07, 0x1D);
  3104   002ACE  0E1D               	movlw	29
  3105   002AD0  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3106   002AD2  0E07               	movlw	7
  3107   002AD4  ECEA  F015         	call	_MAX7219_WriteData2
  3108   002AD8                     
  3109                           ;maincode01.c: 52:     MAX7219_WriteData2(0x06, 0x15);
  3110   002AD8  0E15               	movlw	21
  3111   002ADA  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3112   002ADC  0E06               	movlw	6
  3113   002ADE  ECEA  F015         	call	_MAX7219_WriteData2
  3114   002AE2                     
  3115                           ;maincode01.c: 53:     MAX7219_WriteData2(0x05, 0x0F);
  3116   002AE2  0E0F               	movlw	15
  3117   002AE4  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3118   002AE6  0E05               	movlw	5
  3119   002AE8  ECEA  F015         	call	_MAX7219_WriteData2
  3120   002AEC                     l1625:
  3121                           
  3122                           ;maincode01.c: 55:         unsigned int contador;;maincode01.c: 56:         for(contador
      +                          =0;contador<8000;contador++){
  3123   002AEC  0E00               	movlw	0
  3124   002AEE  6E19               	movwf	(main@contador+1)^(0+1280),c
  3125   002AF0  0E00               	movlw	0
  3126   002AF2  6E18               	movwf	main@contador^(0+1280),c
  3127   002AF4                     l1631:
  3128                           
  3129                           ;maincode01.c: 57:             POS_CURSOR(2,9);
  3130   002AF4  0E09               	movlw	9
  3131   002AF6  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
  3132   002AF8  0E02               	movlw	2
  3133   002AFA  EC3F  F016         	call	_POS_CURSOR
  3134                           
  3135                           ;maincode01.c: 58:             LCD_ESCRIBE_VAR_INT(contador, 4, 0);
  3136   002AFE  C518  F50D         	movff	main@contador,LCD_ESCRIBE_VAR_INT@numero
  3137   002B02  C519  F50E         	movff	main@contador+1,LCD_ESCRIBE_VAR_INT@numero+1
  3138   002B06  0E04               	movlw	4
  3139   002B08  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
  3140   002B0A  0E00               	movlw	0
  3141   002B0C  6E10               	movwf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),c
  3142   002B0E  EC19  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
  3143                           
  3144                           ;maincode01.c: 59:             MAX7219_WriteData2(0x04, (contador/1000));
  3145   002B12  C518  F506         	movff	main@contador,___lwdiv@dividend
  3146   002B16  C519  F507         	movff	main@contador+1,___lwdiv@dividend+1
  3147   002B1A  0E03               	movlw	3
  3148   002B1C  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  3149   002B1E  0EE8               	movlw	232
  3150   002B20  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  3151   002B22  EC7C  F016         	call	___lwdiv	;wreg free
  3152   002B26  5006               	movf	?___lwdiv^(0+1280),w,c
  3153   002B28  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3154   002B2A  0E04               	movlw	4
  3155   002B2C  ECEA  F015         	call	_MAX7219_WriteData2
  3156                           
  3157                           ;maincode01.c: 60:             MAX7219_WriteData2(0x03, ((contador%1000)/100));
  3158   002B30  0E03               	movlw	3
  3159   002B32  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  3160   002B34  0EE8               	movlw	232
  3161   002B36  6E03               	movwf	___lwmod@divisor^(0+1280),c
  3162   002B38  C518  F501         	movff	main@contador,___lwmod@dividend
  3163   002B3C  C519  F502         	movff	main@contador+1,___lwmod@dividend+1
  3164   002B40  ECB6  F016         	call	___lwmod	;wreg free
  3165   002B44  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  3166   002B48  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  3167   002B4C  0E00               	movlw	0
  3168   002B4E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  3169   002B50  0E64               	movlw	100
  3170   002B52  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  3171   002B54  EC7C  F016         	call	___lwdiv	;wreg free
  3172   002B58  5006               	movf	?___lwdiv^(0+1280),w,c
  3173   002B5A  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3174   002B5C  0E03               	movlw	3
  3175   002B5E  ECEA  F015         	call	_MAX7219_WriteData2
  3176                           
  3177                           ;maincode01.c: 61:             MAX7219_WriteData2(0x02, ((contador%100)/10));
  3178   002B62  0E00               	movlw	0
  3179   002B64  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  3180   002B66  0E64               	movlw	100
  3181   002B68  6E03               	movwf	___lwmod@divisor^(0+1280),c
  3182   002B6A  C518  F501         	movff	main@contador,___lwmod@dividend
  3183   002B6E  C519  F502         	movff	main@contador+1,___lwmod@dividend+1
  3184   002B72  ECB6  F016         	call	___lwmod	;wreg free
  3185   002B76  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  3186   002B7A  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  3187   002B7E  0E00               	movlw	0
  3188   002B80  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  3189   002B82  0E0A               	movlw	10
  3190   002B84  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  3191   002B86  EC7C  F016         	call	___lwdiv	;wreg free
  3192   002B8A  5006               	movf	?___lwdiv^(0+1280),w,c
  3193   002B8C  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3194   002B8E  0E02               	movlw	2
  3195   002B90  ECEA  F015         	call	_MAX7219_WriteData2
  3196                           
  3197                           ;maincode01.c: 62:             MAX7219_WriteData2(0x01, (contador%10));
  3198   002B94  C518  F501         	movff	main@contador,___lwmod@dividend
  3199   002B98  C519  F502         	movff	main@contador+1,___lwmod@dividend+1
  3200   002B9C  0E00               	movlw	0
  3201   002B9E  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  3202   002BA0  0E0A               	movlw	10
  3203   002BA2  6E03               	movwf	___lwmod@divisor^(0+1280),c
  3204   002BA4  ECB6  F016         	call	___lwmod	;wreg free
  3205   002BA8  5001               	movf	?___lwmod^(0+1280),w,c
  3206   002BAA  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3207   002BAC  0E01               	movlw	1
  3208   002BAE  ECEA  F015         	call	_MAX7219_WriteData2
  3209   002BB2                     
  3210                           ;maincode01.c: 64:         }
  3211   002BB2  4A18               	infsnz	main@contador^(0+1280),f,c
  3212   002BB4  2A19               	incf	(main@contador+1)^(0+1280),f,c
  3213   002BB6  0E40               	movlw	64
  3214   002BB8  5C18               	subwf	main@contador^(0+1280),w,c
  3215   002BBA  0E1F               	movlw	31
  3216   002BBC  5819               	subwfb	(main@contador+1)^(0+1280),w,c
  3217   002BBE  A0D8               	btfss	status,0,c
  3218   002BC0  EFE4  F015         	goto	u571
  3219   002BC4  EFE6  F015         	goto	u570
  3220   002BC8                     u571:
  3221   002BC8  EF7A  F015         	goto	l1631
  3222   002BCC                     u570:
  3223   002BCC  EF76  F015         	goto	l1625
  3224   002BD0  EFFE  F0FF         	goto	start
  3225   002BD4                     __end_of_main:
  3226                           	callstack 0
  3227                           
  3228 ;; *************** function _configuro *****************
  3229 ;; Defined at:
  3230 ;;		line 17 in file "maincode01.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3248 ;;Total ram usage:        0 bytes
  3249 ;; Hardware stack levels used: 1
  3250 ;; Hardware stack levels required when called: 4
  3251 ;; This function calls:
  3252 ;;		_LCD_INIT
  3253 ;;		_MAX7219_Init
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text1
  3260   003006                     __ptext1:
  3261                           	callstack 0
  3262   003006                     _configuro:
  3263                           	callstack 122
  3264   003006                     
  3265                           ;maincode01.c: 18:     OSCCON1 = 0x60;
  3266   003006  0E60               	movlw	96
  3267   003008  0100               	movlb	0	; () banked
  3268   00300A  6FAD               	movwf	173,b	;volatile
  3269                           
  3270                           ;maincode01.c: 19:     OSCFRQ = 0x06;
  3271   00300C  0E06               	movlw	6
  3272   00300E  6FB1               	movwf	177,b	;volatile
  3273                           
  3274                           ;maincode01.c: 20:     OSCEN = 0x40;
  3275   003010  0E40               	movlw	64
  3276   003012  6FB3               	movwf	179,b	;volatile
  3277   003014                     
  3278                           ; BSR set to: 0
  3279                           ;maincode01.c: 21:     MAX7219_Init();
  3280   003014  EC42  F017         	call	_MAX7219_Init	;wreg free
  3281   003018                     
  3282                           ;maincode01.c: 22:     LCD_INIT();
  3283   003018  ECE8  F016         	call	_LCD_INIT	;wreg free
  3284   00301C  0012               	return		;funcret
  3285   00301E                     __end_of_configuro:
  3286                           	callstack 0
  3287                           
  3288 ;; *************** function _MAX7219_Init *****************
  3289 ;; Defined at:
  3290 ;;		line 11 in file "MAX7219.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3308 ;;Total ram usage:        0 bytes
  3309 ;; Hardware stack levels used: 1
  3310 ;; Hardware stack levels required when called: 1
  3311 ;; This function calls:
  3312 ;;		_MAX7219_WriteData2
  3313 ;; This function is called by:
  3314 ;;		_configuro
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text2
  3319   002E84                     __ptext2:
  3320                           	callstack 0
  3321   002E84                     _MAX7219_Init:
  3322                           	callstack 124
  3323   002E84                     
  3324                           ;MAX7219.c: 12:     TRISCbits.TRISC0 = 0;
  3325   002E84  90C8               	bcf	200,0,c	;volatile
  3326                           
  3327                           ;MAX7219.c: 13:     ANSELCbits.ANSELC0 = 0;
  3328   002E86  0104               	movlb	4	; () banked
  3329   002E88  9110               	bcf	16,0,b	;volatile
  3330   002E8A                     
  3331                           ; BSR set to: 4
  3332                           ;MAX7219.c: 14:     TRISE = 0xFC;
  3333   002E8A  0EFC               	movlw	252
  3334   002E8C  6ECA               	movwf	202,c	;volatile
  3335                           
  3336                           ;MAX7219.c: 15:     ANSELE = 0xFC;
  3337   002E8E  0EFC               	movlw	252
  3338   002E90  6F20               	movwf	32,b	;volatile
  3339   002E92                     
  3340                           ; BSR set to: 4
  3341                           ;MAX7219.c: 16:     MAX7219_WriteData2(0x0C, 0x00);
  3342   002E92  0E00               	movlw	0
  3343   002E94  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3344   002E96  0E0C               	movlw	12
  3345   002E98  ECEA  F015         	call	_MAX7219_WriteData2
  3346   002E9C                     
  3347                           ;MAX7219.c: 17:     MAX7219_WriteData2(0x0F, 0x00);
  3348   002E9C  0E00               	movlw	0
  3349   002E9E  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3350   002EA0  0E0F               	movlw	15
  3351   002EA2  ECEA  F015         	call	_MAX7219_WriteData2
  3352   002EA6                     
  3353                           ;MAX7219.c: 18:     MAX7219_WriteData2(0x0A, 0x03);
  3354   002EA6  0E03               	movlw	3
  3355   002EA8  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3356   002EAA  0E0A               	movlw	10
  3357   002EAC  ECEA  F015         	call	_MAX7219_WriteData2
  3358   002EB0                     
  3359                           ;MAX7219.c: 19:     MAX7219_WriteData2(0x0B, 0x07);
  3360   002EB0  0E07               	movlw	7
  3361   002EB2  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3362   002EB4  0E0B               	movlw	11
  3363   002EB6  ECEA  F015         	call	_MAX7219_WriteData2
  3364   002EBA                     
  3365                           ;MAX7219.c: 20:     MAX7219_WriteData2(0x0C, 0x01);
  3366   002EBA  0E01               	movlw	1
  3367   002EBC  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3368   002EBE  0E0C               	movlw	12
  3369   002EC0  ECEA  F015         	call	_MAX7219_WriteData2
  3370   002EC4                     
  3371                           ;MAX7219.c: 21:     MAX7219_WriteData2(0x09, 0x00);
  3372   002EC4  0E00               	movlw	0
  3373   002EC6  6E0D               	movwf	MAX7219_WriteData2@dato^(0+1280),c
  3374   002EC8  0E09               	movlw	9
  3375   002ECA  ECEA  F015         	call	_MAX7219_WriteData2
  3376   002ECE  0012               	return		;funcret
  3377   002ED0                     __end_of_MAX7219_Init:
  3378                           	callstack 0
  3379                           
  3380 ;; *************** function _MAX7219_WriteData2 *****************
  3381 ;; Defined at:
  3382 ;;		line 58 in file "MAX7219.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  comando         1    wreg     unsigned char 
  3385 ;;  dato            1   12[COMRAM] unsigned char 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  comando         1   15[COMRAM] unsigned char 
  3388 ;;  var_x           1   16[COMRAM] unsigned char 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3398 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3399 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3400 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3401 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3402 ;;Total ram usage:        5 bytes
  3403 ;; Hardware stack levels used: 1
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_main
  3408 ;;		_MAX7219_Init
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text3
  3413   002BD4                     __ptext3:
  3414                           	callstack 0
  3415   002BD4                     _MAX7219_WriteData2:
  3416                           	callstack 124
  3417                           
  3418                           ;incstack = 0
  3419                           ;MAX7219_WriteData2@comando stored from wreg
  3420   002BD4  6E10               	movwf	MAX7219_WriteData2@comando^(0+1280),c
  3421   002BD6                     
  3422                           ;MAX7219.c: 60:  unsigned char var_x;;MAX7219.c: 61:  LATCbits.LATC0 = 1;
  3423   002BD6  80C0               	bsf	192,0,c	;volatile
  3424                           
  3425                           ;MAX7219.c: 62:  LATEbits.LATE0 = 0;
  3426   002BD8  90C2               	bcf	194,0,c	;volatile
  3427                           
  3428                           ;MAX7219.c: 63:  LATEbits.LATE1 = 0;
  3429   002BDA  92C2               	bcf	194,1,c	;volatile
  3430                           
  3431                           ;MAX7219.c: 65:  LATCbits.LATC0 = 0;
  3432   002BDC  90C0               	bcf	192,0,c	;volatile
  3433                           
  3434                           ;MAX7219.c: 67:  for(var_x=0;var_x<8;var_x++){
  3435   002BDE  6A11               	clrf	MAX7219_WriteData2@var_x^(0+1280),c
  3436   002BE0                     l221:
  3437                           
  3438                           ;MAX7219.c: 68:         LATEbits.LATE0 = 0;
  3439   002BE0  90C2               	bcf	194,0,c	;volatile
  3440   002BE2                     
  3441                           ;MAX7219.c: 69:   if(comando & (1<<(7-var_x))){
  3442   002BE2  5011               	movf	MAX7219_WriteData2@var_x^(0+1280),w,c
  3443   002BE4  0807               	sublw	7
  3444   002BE6  6E0E               	movwf	??_MAX7219_WriteData2^(0+1280),c
  3445   002BE8  0E01               	movlw	1
  3446   002BEA  6E0F               	movwf	(??_MAX7219_WriteData2+1)^(0+1280),c
  3447   002BEC  2A0E               	incf	??_MAX7219_WriteData2^(0+1280),f,c
  3448   002BEE  EFFB  F015         	goto	u374
  3449   002BF2                     u375:
  3450   002BF2  90D8               	bcf	status,0,c
  3451   002BF4  360F               	rlcf	(??_MAX7219_WriteData2+1)^(0+1280),f,c
  3452   002BF6                     u374:
  3453   002BF6  2E0E               	decfsz	??_MAX7219_WriteData2^(0+1280),f,c
  3454   002BF8  EFF9  F015         	goto	u375
  3455   002BFC  500F               	movf	(??_MAX7219_WriteData2+1)^(0+1280),w,c
  3456   002BFE  1410               	andwf	MAX7219_WriteData2@comando^(0+1280),w,c
  3457   002C00  0900               	iorlw	0
  3458   002C02  B4D8               	btfsc	status,2,c
  3459   002C04  EF06  F016         	goto	u381
  3460   002C08  EF08  F016         	goto	u380
  3461   002C0C                     u381:
  3462   002C0C  EF0B  F016         	goto	l223
  3463   002C10                     u380:
  3464   002C10                     
  3465                           ;MAX7219.c: 70:    LATEbits.LATE1 = 1;
  3466   002C10  82C2               	bsf	194,1,c	;volatile
  3467                           
  3468                           ;MAX7219.c: 71:   }
  3469   002C12  EF0C  F016         	goto	l224
  3470   002C16                     l223:
  3471                           
  3472                           ;MAX7219.c: 73:    LATEbits.LATE1 = 0;
  3473   002C16  92C2               	bcf	194,1,c	;volatile
  3474   002C18                     l224:
  3475                           
  3476                           ;MAX7219.c: 75:   LATEbits.LATE0 = 1;
  3477   002C18  80C2               	bsf	194,0,c	;volatile
  3478   002C1A                     
  3479                           ;MAX7219.c: 76:  }
  3480   002C1A  2A11               	incf	MAX7219_WriteData2@var_x^(0+1280),f,c
  3481   002C1C  0E07               	movlw	7
  3482   002C1E  6411               	cpfsgt	MAX7219_WriteData2@var_x^(0+1280),c
  3483   002C20  EF14  F016         	goto	u391
  3484   002C24  EF16  F016         	goto	u390
  3485   002C28                     u391:
  3486   002C28  EFF0  F015         	goto	l221
  3487   002C2C                     u390:
  3488   002C2C                     
  3489                           ;MAX7219.c: 79:  for(var_x=0;var_x<8;var_x++){
  3490   002C2C  6A11               	clrf	MAX7219_WriteData2@var_x^(0+1280),c
  3491   002C2E                     l225:
  3492                           
  3493                           ;MAX7219.c: 80:   LATEbits.LATE0 = 0;
  3494   002C2E  90C2               	bcf	194,0,c	;volatile
  3495   002C30                     
  3496                           ;MAX7219.c: 81:   if(dato & (1<<(7-var_x))){
  3497   002C30  5011               	movf	MAX7219_WriteData2@var_x^(0+1280),w,c
  3498   002C32  0807               	sublw	7
  3499   002C34  6E0E               	movwf	??_MAX7219_WriteData2^(0+1280),c
  3500   002C36  0E01               	movlw	1
  3501   002C38  6E0F               	movwf	(??_MAX7219_WriteData2+1)^(0+1280),c
  3502   002C3A  2A0E               	incf	??_MAX7219_WriteData2^(0+1280),f,c
  3503   002C3C  EF22  F016         	goto	u404
  3504   002C40                     u405:
  3505   002C40  90D8               	bcf	status,0,c
  3506   002C42  360F               	rlcf	(??_MAX7219_WriteData2+1)^(0+1280),f,c
  3507   002C44                     u404:
  3508   002C44  2E0E               	decfsz	??_MAX7219_WriteData2^(0+1280),f,c
  3509   002C46  EF20  F016         	goto	u405
  3510   002C4A  500F               	movf	(??_MAX7219_WriteData2+1)^(0+1280),w,c
  3511   002C4C  140D               	andwf	MAX7219_WriteData2@dato^(0+1280),w,c
  3512   002C4E  0900               	iorlw	0
  3513   002C50  B4D8               	btfsc	status,2,c
  3514   002C52  EF2D  F016         	goto	u411
  3515   002C56  EF2F  F016         	goto	u410
  3516   002C5A                     u411:
  3517   002C5A  EF32  F016         	goto	l227
  3518   002C5E                     u410:
  3519   002C5E                     
  3520                           ;MAX7219.c: 82:    LATEbits.LATE1 = 1;
  3521   002C5E  82C2               	bsf	194,1,c	;volatile
  3522                           
  3523                           ;MAX7219.c: 83:   }
  3524   002C60  EF33  F016         	goto	l228
  3525   002C64                     l227:
  3526                           
  3527                           ;MAX7219.c: 85:    LATEbits.LATE1 = 0;
  3528   002C64  92C2               	bcf	194,1,c	;volatile
  3529   002C66                     l228:
  3530                           
  3531                           ;MAX7219.c: 87:   LATEbits.LATE0 = 1;
  3532   002C66  80C2               	bsf	194,0,c	;volatile
  3533   002C68                     
  3534                           ;MAX7219.c: 88:  }
  3535   002C68  2A11               	incf	MAX7219_WriteData2@var_x^(0+1280),f,c
  3536   002C6A  0E07               	movlw	7
  3537   002C6C  6411               	cpfsgt	MAX7219_WriteData2@var_x^(0+1280),c
  3538   002C6E  EF3B  F016         	goto	u421
  3539   002C72  EF3D  F016         	goto	u420
  3540   002C76                     u421:
  3541   002C76  EF17  F016         	goto	l225
  3542   002C7A                     u420:
  3543   002C7A                     
  3544                           ;MAX7219.c: 89:  LATCbits.LATC0 = 1;
  3545   002C7A  80C0               	bsf	192,0,c	;volatile
  3546   002C7C  0012               	return		;funcret
  3547   002C7E                     __end_of_MAX7219_WriteData2:
  3548                           	callstack 0
  3549                           
  3550 ;; *************** function _LCD_INIT *****************
  3551 ;; Defined at:
  3552 ;;		line 171 in file "LCD.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3568 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3569 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3570 ;;Total ram usage:        2 bytes
  3571 ;; Hardware stack levels used: 1
  3572 ;; Hardware stack levels required when called: 3
  3573 ;; This function calls:
  3574 ;;		_BORRAR_LCD
  3575 ;;		_CURSOR_HOME
  3576 ;;		_CURSOR_ONOFF
  3577 ;;		_LCD_CONFIG
  3578 ;; This function is called by:
  3579 ;;		_configuro
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           	psect	text4
  3584   002DD0                     __ptext4:
  3585                           	callstack 0
  3586   002DD0                     _LCD_INIT:
  3587                           	callstack 122
  3588   002DD0                     
  3589                           ;LCD.c: 172:     _delay((unsigned long)((500)*(32000000UL/4000.0)));
  3590   002DD0  0E15               	movlw	21
  3591   002DD2  6E08               	movwf	(??_LCD_INIT+1)^(0+1280),c
  3592   002DD4  0E4B               	movlw	75
  3593   002DD6  6E07               	movwf	??_LCD_INIT^(0+1280),c
  3594   002DD8  0EBE               	movlw	190
  3595   002DDA                     u597:
  3596   002DDA  2EE8               	decfsz	wreg,f,c
  3597   002DDC  D7FE               	bra	u597
  3598   002DDE  2E07               	decfsz	??_LCD_INIT^(0+1280),f,c
  3599   002DE0  D7FC               	bra	u597
  3600   002DE2  2E08               	decfsz	(??_LCD_INIT+1)^(0+1280),f,c
  3601   002DE4  D7FA               	bra	u597
  3602   002DE6  D000               	nop2	
  3603   002DE8                     
  3604                           ;LCD.c: 173:     TRISD = 0x00;
  3605   002DE8  6AC9               	clrf	201,c	;volatile
  3606   002DEA                     
  3607                           ;LCD.c: 174:     ANSELD = 0x00;
  3608   002DEA  0104               	movlb	4	; () banked
  3609   002DEC  6B18               	clrf	24,b	;volatile
  3610                           
  3611                           ;LCD.c: 175:     _delay((unsigned long)((30)*(32000000UL/4000.0)));
  3612   002DEE  0E02               	movlw	2
  3613   002DF0  6E08               	movwf	(??_LCD_INIT+1)^(0+1280),c
  3614   002DF2  0E38               	movlw	56
  3615   002DF4  6E07               	movwf	??_LCD_INIT^(0+1280),c
  3616   002DF6  0EAD               	movlw	173
  3617   002DF8                     u607:
  3618   002DF8  2EE8               	decfsz	wreg,f,c
  3619   002DFA  D7FE               	bra	u607
  3620   002DFC  2E07               	decfsz	??_LCD_INIT^(0+1280),f,c
  3621   002DFE  D7FC               	bra	u607
  3622   002E00  2E08               	decfsz	(??_LCD_INIT+1)^(0+1280),f,c
  3623   002E02  D7FA               	bra	u607
  3624   002E04  0000               	nop	
  3625   002E06                     
  3626                           ;LCD.c: 176:     LCD_CONFIG();
  3627   002E06  EC19  F017         	call	_LCD_CONFIG	;wreg free
  3628   002E0A                     
  3629                           ;LCD.c: 177:     _delay((unsigned long)((30)*(32000000UL/4000.0)));
  3630   002E0A  0E02               	movlw	2
  3631   002E0C  6E08               	movwf	(??_LCD_INIT+1)^(0+1280),c
  3632   002E0E  0E38               	movlw	56
  3633   002E10  6E07               	movwf	??_LCD_INIT^(0+1280),c
  3634   002E12  0EAD               	movlw	173
  3635   002E14                     u617:
  3636   002E14  2EE8               	decfsz	wreg,f,c
  3637   002E16  D7FE               	bra	u617
  3638   002E18  2E07               	decfsz	??_LCD_INIT^(0+1280),f,c
  3639   002E1A  D7FC               	bra	u617
  3640   002E1C  2E08               	decfsz	(??_LCD_INIT+1)^(0+1280),f,c
  3641   002E1E  D7FA               	bra	u617
  3642   002E20  0000               	nop	
  3643                           
  3644                           ;LCD.c: 178:     BORRAR_LCD();
  3645   002E22  EC13  F018         	call	_BORRAR_LCD	;wreg free
  3646                           
  3647                           ;LCD.c: 179:     CURSOR_HOME();
  3648   002E26  EC0F  F018         	call	_CURSOR_HOME	;wreg free
  3649                           
  3650                           ;LCD.c: 180:     CURSOR_ONOFF(1);
  3651   002E2A  0E01               	movlw	1
  3652   002E2C  ECD9  F017         	call	_CURSOR_ONOFF
  3653   002E30  0012               	return		;funcret
  3654   002E32                     __end_of_LCD_INIT:
  3655                           	callstack 0
  3656                           
  3657 ;; *************** function _LCD_CONFIG *****************
  3658 ;; Defined at:
  3659 ;;		line 94 in file "LCD.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		wreg, status,2, status,0, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3675 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3676 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3677 ;;Total ram usage:        1 bytes
  3678 ;; Hardware stack levels used: 1
  3679 ;; Hardware stack levels required when called: 2
  3680 ;; This function calls:
  3681 ;;		_ENVIA_LCD_CMD
  3682 ;;		_ENVIA_NIBBLE
  3683 ;; This function is called by:
  3684 ;;		_LCD_INIT
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text5
  3689   002E32                     __ptext5:
  3690                           	callstack 0
  3691   002E32                     _LCD_CONFIG:
  3692                           	callstack 122
  3693   002E32                     
  3694                           ;LCD.c: 95:  LATDbits.LATD0 = 0;
  3695   002E32  90C1               	bcf	193,0,c	;volatile
  3696                           
  3697                           ;LCD.c: 96:  LATDbits.LATD1 = 0;
  3698   002E34  92C1               	bcf	193,1,c	;volatile
  3699   002E36                     
  3700                           ;LCD.c: 97:  ENVIA_NIBBLE(0x30);
  3701   002E36  0E30               	movlw	48
  3702   002E38  ECF1  F017         	call	_ENVIA_NIBBLE
  3703   002E3C                     
  3704                           ;LCD.c: 98:     _delay((unsigned long)((4)*(32000000UL/4000.0)));
  3705   002E3C  0E2A               	movlw	42
  3706   002E3E  6E06               	movwf	??_LCD_CONFIG^(0+1280),c
  3707   002E40  0E8E               	movlw	142
  3708   002E42                     u627:
  3709   002E42  2EE8               	decfsz	wreg,f,c
  3710   002E44  D7FE               	bra	u627
  3711   002E46  2E06               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  3712   002E48  D7FC               	bra	u627
  3713   002E4A                     
  3714                           ;LCD.c: 99:  ENVIA_NIBBLE(0x30);
  3715   002E4A  0E30               	movlw	48
  3716   002E4C  ECF1  F017         	call	_ENVIA_NIBBLE
  3717                           
  3718                           ;LCD.c: 100:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  3719   002E50  0EA0               	movlw	160
  3720   002E52                     u637:
  3721   002E52  D000               	nop2	
  3722   002E54  2EE8               	decfsz	wreg,f,c
  3723   002E56  D7FD               	bra	u637
  3724   002E58                     
  3725                           ;LCD.c: 101:     ENVIA_NIBBLE(0x30);
  3726   002E58  0E30               	movlw	48
  3727   002E5A  ECF1  F017         	call	_ENVIA_NIBBLE
  3728   002E5E                     
  3729                           ;LCD.c: 102:  ENVIA_NIBBLE(0x20);
  3730   002E5E  0E20               	movlw	32
  3731   002E60  ECF1  F017         	call	_ENVIA_NIBBLE
  3732   002E64                     
  3733                           ;LCD.c: 103:  ENVIA_LCD_CMD(0x01);
  3734   002E64  0E01               	movlw	1
  3735   002E66  ECA5  F017         	call	_ENVIA_LCD_CMD
  3736   002E6A                     
  3737                           ;LCD.c: 104:  ENVIA_LCD_CMD(0x28);
  3738   002E6A  0E28               	movlw	40
  3739   002E6C  ECA5  F017         	call	_ENVIA_LCD_CMD
  3740   002E70                     
  3741                           ;LCD.c: 105:  ENVIA_LCD_CMD(0x0F);
  3742   002E70  0E0F               	movlw	15
  3743   002E72  ECA5  F017         	call	_ENVIA_LCD_CMD
  3744   002E76                     
  3745                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x06);
  3746   002E76  0E06               	movlw	6
  3747   002E78  ECA5  F017         	call	_ENVIA_LCD_CMD
  3748   002E7C                     
  3749                           ;LCD.c: 107:  ENVIA_LCD_CMD(0x01);
  3750   002E7C  0E01               	movlw	1
  3751   002E7E  ECA5  F017         	call	_ENVIA_LCD_CMD
  3752   002E82  0012               	return		;funcret
  3753   002E84                     __end_of_LCD_CONFIG:
  3754                           	callstack 0
  3755                           
  3756 ;; *************** function _CURSOR_ONOFF *****************
  3757 ;; Defined at:
  3758 ;;		line 54 in file "LCD.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  estado          1    wreg     unsigned char 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  estado          1    5[COMRAM] unsigned char 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3776 ;;Total ram usage:        1 bytes
  3777 ;; Hardware stack levels used: 1
  3778 ;; Hardware stack levels required when called: 2
  3779 ;; This function calls:
  3780 ;;		_ENVIA_LCD_CMD
  3781 ;; This function is called by:
  3782 ;;		_LCD_INIT
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text6
  3787   002FB2                     __ptext6:
  3788                           	callstack 0
  3789   002FB2                     _CURSOR_ONOFF:
  3790                           	callstack 122
  3791                           
  3792                           ;incstack = 0
  3793                           ;CURSOR_ONOFF@estado stored from wreg
  3794   002FB2  6E06               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  3795   002FB4                     
  3796                           ;LCD.c: 55:  if(estado == 0) ENVIA_LCD_CMD(0x0E);
  3797   002FB4  5006               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  3798   002FB6  A4D8               	btfss	status,2,c
  3799   002FB8  EFE0  F017         	goto	u71
  3800   002FBC  EFE2  F017         	goto	u70
  3801   002FC0                     u71:
  3802   002FC0  EFE5  F017         	goto	l969
  3803   002FC4                     u70:
  3804   002FC4  0E0E               	movlw	14
  3805   002FC6  ECA5  F017         	call	_ENVIA_LCD_CMD
  3806   002FCA                     l969:
  3807                           
  3808                           ;LCD.c: 56:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  3809   002FCA  0406               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  3810   002FCC  A4D8               	btfss	status,2,c
  3811   002FCE  EFEB  F017         	goto	u81
  3812   002FD2  EFED  F017         	goto	u80
  3813   002FD6                     u81:
  3814   002FD6  EFF0  F017         	goto	l93
  3815   002FDA                     u80:
  3816   002FDA  0E0C               	movlw	12
  3817   002FDC  ECA5  F017         	call	_ENVIA_LCD_CMD
  3818   002FE0                     l93:
  3819   002FE0  0012               	return		;funcret
  3820   002FE2                     __end_of_CURSOR_ONOFF:
  3821                           	callstack 0
  3822                           
  3823 ;; *************** function _CURSOR_HOME *****************
  3824 ;; Defined at:
  3825 ;;		line 34 in file "LCD.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3843 ;;Total ram usage:        0 bytes
  3844 ;; Hardware stack levels used: 1
  3845 ;; Hardware stack levels required when called: 2
  3846 ;; This function calls:
  3847 ;;		_ENVIA_LCD_CMD
  3848 ;; This function is called by:
  3849 ;;		_LCD_INIT
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text7
  3854   00301E                     __ptext7:
  3855                           	callstack 0
  3856   00301E                     _CURSOR_HOME:
  3857                           	callstack 122
  3858   00301E                     
  3859                           ;LCD.c: 35:  ENVIA_LCD_CMD(0x02);
  3860   00301E  0E02               	movlw	2
  3861   003020  ECA5  F017         	call	_ENVIA_LCD_CMD
  3862   003024  0012               	return		;funcret
  3863   003026                     __end_of_CURSOR_HOME:
  3864                           	callstack 0
  3865                           
  3866 ;; *************** function _BORRAR_LCD *****************
  3867 ;; Defined at:
  3868 ;;		line 90 in file "LCD.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0, cstack
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3886 ;;Total ram usage:        0 bytes
  3887 ;; Hardware stack levels used: 1
  3888 ;; Hardware stack levels required when called: 2
  3889 ;; This function calls:
  3890 ;;		_ENVIA_LCD_CMD
  3891 ;; This function is called by:
  3892 ;;		_LCD_INIT
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text8
  3897   003026                     __ptext8:
  3898                           	callstack 0
  3899   003026                     _BORRAR_LCD:
  3900                           	callstack 122
  3901   003026                     
  3902                           ;LCD.c: 91:  ENVIA_LCD_CMD(0x01);
  3903   003026  0E01               	movlw	1
  3904   003028  ECA5  F017         	call	_ENVIA_LCD_CMD
  3905   00302C  0012               	return		;funcret
  3906   00302E                     __end_of_BORRAR_LCD:
  3907                           	callstack 0
  3908                           
  3909 ;; *************** function _POS_CURSOR *****************
  3910 ;; Defined at:
  3911 ;;		line 9 in file "LCD.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  fila            1    wreg     unsigned char 
  3914 ;;  columna         1    5[COMRAM] unsigned char 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  fila            1    6[COMRAM] unsigned char 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3926 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3930 ;;Total ram usage:        2 bytes
  3931 ;; Hardware stack levels used: 1
  3932 ;; Hardware stack levels required when called: 2
  3933 ;; This function calls:
  3934 ;;		_ENVIA_LCD_CMD
  3935 ;; This function is called by:
  3936 ;;		_main
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text9
  3941   002C7E                     __ptext9:
  3942                           	callstack 0
  3943   002C7E                     _POS_CURSOR:
  3944                           	callstack 124
  3945                           
  3946                           ;incstack = 0
  3947                           ;POS_CURSOR@fila stored from wreg
  3948   002C7E  6E07               	movwf	POS_CURSOR@fila^(0+1280),c
  3949   002C80                     
  3950                           ;LCD.c: 10:  if(fila == 1){
  3951   002C80  0407               	decf	POS_CURSOR@fila^(0+1280),w,c
  3952   002C82  A4D8               	btfss	status,2,c
  3953   002C84  EF46  F016         	goto	u501
  3954   002C88  EF48  F016         	goto	u500
  3955   002C8C                     u501:
  3956   002C8C  EF4E  F016         	goto	l1499
  3957   002C90                     u500:
  3958   002C90                     
  3959                           ;LCD.c: 11:   ENVIA_LCD_CMD(0x80+columna);
  3960   002C90  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
  3961   002C92  0F80               	addlw	128
  3962   002C94  ECA5  F017         	call	_ENVIA_LCD_CMD
  3963                           
  3964                           ;LCD.c: 12:  }
  3965   002C98  EF7B  F016         	goto	l63
  3966   002C9C                     l1499:
  3967   002C9C  0E02               	movlw	2
  3968   002C9E  1807               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  3969   002CA0  A4D8               	btfss	status,2,c
  3970   002CA2  EF55  F016         	goto	u511
  3971   002CA6  EF57  F016         	goto	u510
  3972   002CAA                     u511:
  3973   002CAA  EF5D  F016         	goto	l1503
  3974   002CAE                     u510:
  3975   002CAE                     
  3976                           ;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  3977   002CAE  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
  3978   002CB0  0FC0               	addlw	192
  3979   002CB2  ECA5  F017         	call	_ENVIA_LCD_CMD
  3980                           
  3981                           ;LCD.c: 15:  }
  3982   002CB6  EF7B  F016         	goto	l63
  3983   002CBA                     l1503:
  3984   002CBA  0E03               	movlw	3
  3985   002CBC  1807               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  3986   002CBE  A4D8               	btfss	status,2,c
  3987   002CC0  EF64  F016         	goto	u521
  3988   002CC4  EF66  F016         	goto	u520
  3989   002CC8                     u521:
  3990   002CC8  EF6C  F016         	goto	l1507
  3991   002CCC                     u520:
  3992   002CCC                     
  3993                           ;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
  3994   002CCC  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
  3995   002CCE  0F94               	addlw	148
  3996   002CD0  ECA5  F017         	call	_ENVIA_LCD_CMD
  3997                           
  3998                           ;LCD.c: 18:  }
  3999   002CD4  EF7B  F016         	goto	l63
  4000   002CD8                     l1507:
  4001   002CD8  0E04               	movlw	4
  4002   002CDA  1807               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  4003   002CDC  A4D8               	btfss	status,2,c
  4004   002CDE  EF73  F016         	goto	u531
  4005   002CE2  EF75  F016         	goto	u530
  4006   002CE6                     u531:
  4007   002CE6  EF7B  F016         	goto	l59
  4008   002CEA                     u530:
  4009   002CEA                     
  4010                           ;LCD.c: 20:   ENVIA_LCD_CMD(0xD4+columna);
  4011   002CEA  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
  4012   002CEC  0FD4               	addlw	212
  4013   002CEE  ECA5  F017         	call	_ENVIA_LCD_CMD
  4014   002CF2  EF7B  F016         	goto	l63
  4015   002CF6                     l59:
  4016   002CF6                     l63:
  4017   002CF6  0012               	return		;funcret
  4018   002CF8                     __end_of_POS_CURSOR:
  4019                           	callstack 0
  4020                           
  4021 ;; *************** function _ENVIA_LCD_CMD *****************
  4022 ;; Defined at:
  4023 ;;		line 119 in file "LCD.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  dato            1    wreg     unsigned char 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  dato            1    3[COMRAM] unsigned char 
  4028 ;;  aux             1    4[COMRAM] unsigned char 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4040 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4041 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4042 ;;Total ram usage:        3 bytes
  4043 ;; Hardware stack levels used: 1
  4044 ;; Hardware stack levels required when called: 1
  4045 ;; This function calls:
  4046 ;;		_ENVIA_NIBBLE
  4047 ;; This function is called by:
  4048 ;;		_POS_CURSOR
  4049 ;;		_CURSOR_HOME
  4050 ;;		_CURSOR_ONOFF
  4051 ;;		_BORRAR_LCD
  4052 ;;		_LCD_CONFIG
  4053 ;;		_BLINK_CURSOR
  4054 ;;		_DISPLAY_ONOFF
  4055 ;;		_CURSOR_SHIFTLEFT
  4056 ;;		_CURSOR_SHIFTRIGHT
  4057 ;;		_DISPLAY_SHIFTLEFT
  4058 ;;		_DISPLAY_SHIFTRIGHT
  4059 ;;		_GENERACARACTER
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text10
  4064   002F4A                     __ptext10:
  4065                           	callstack 0
  4066   002F4A                     _ENVIA_LCD_CMD:
  4067                           	callstack 122
  4068                           
  4069                           ;incstack = 0
  4070                           ;ENVIA_LCD_CMD@dato stored from wreg
  4071   002F4A  6E04               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  4072   002F4C                     
  4073                           ;LCD.c: 120:     unsigned char aux;;LCD.c: 121:   LATDbits.LATD0 = 0;
  4074   002F4C  90C1               	bcf	193,0,c	;volatile
  4075   002F4E                     
  4076                           ;LCD.c: 124:     _delay((unsigned long)((300)*(32000000UL/4000000.0)));
  4077   002F4E  0E04               	movlw	4
  4078   002F50  6E03               	movwf	??_ENVIA_LCD_CMD^(0+1280),c
  4079   002F52  0E1C               	movlw	28
  4080   002F54                     u647:
  4081   002F54  2EE8               	decfsz	wreg,f,c
  4082   002F56  D7FE               	bra	u647
  4083   002F58  2E03               	decfsz	??_ENVIA_LCD_CMD^(0+1280),f,c
  4084   002F5A  D7FC               	bra	u647
  4085   002F5C  D000               	nop2	
  4086   002F5E                     
  4087                           ;LCD.c: 125:     LATDbits.LATD1 = 0;
  4088   002F5E  92C1               	bcf	193,1,c	;volatile
  4089   002F60                     
  4090                           ;LCD.c: 126:  LATDbits.LATD2 = 0;
  4091   002F60  94C1               	bcf	193,2,c	;volatile
  4092   002F62                     
  4093                           ;LCD.c: 127:  LATDbits.LATD0 = 0;
  4094   002F62  90C1               	bcf	193,0,c	;volatile
  4095   002F64                     
  4096                           ;LCD.c: 128:  aux = dato & 0xF0;
  4097   002F64  5004               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  4098   002F66  0BF0               	andlw	240
  4099   002F68  6E05               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  4100   002F6A                     
  4101                           ;LCD.c: 129:  ENVIA_NIBBLE(aux);
  4102   002F6A  5005               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  4103   002F6C  ECF1  F017         	call	_ENVIA_NIBBLE
  4104   002F70                     
  4105                           ;LCD.c: 130:  aux = dato<<4;
  4106   002F70  3804               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  4107   002F72  0BF0               	andlw	240
  4108   002F74  6E05               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  4109   002F76                     
  4110                           ;LCD.c: 131:  ENVIA_NIBBLE(aux);
  4111   002F76  5005               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  4112   002F78  ECF1  F017         	call	_ENVIA_NIBBLE
  4113   002F7C  0012               	return		;funcret
  4114   002F7E                     __end_of_ENVIA_LCD_CMD:
  4115                           	callstack 0
  4116                           
  4117 ;; *************** function _LCD_ESCRIBE_VAR_INT *****************
  4118 ;; Defined at:
  4119 ;;		line 205 in file "LCD.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  numero          2   12[COMRAM] unsigned int 
  4122 ;;  n_digitos       1   14[COMRAM] unsigned char 
  4123 ;;  punto           1   15[COMRAM] unsigned char 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  unidad          1   20[COMRAM] unsigned char 
  4126 ;;  decena          1   19[COMRAM] unsigned char 
  4127 ;;  centena         1   18[COMRAM] unsigned char 
  4128 ;;  millar          1   17[COMRAM] unsigned char 
  4129 ;;  d_millar        1   16[COMRAM] unsigned char 
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      void 
  4132 ;; Registers used:
  4133 ;;		wreg, status,2, status,0, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4139 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4140 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4142 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4143 ;;Total ram usage:        9 bytes
  4144 ;; Hardware stack levels used: 1
  4145 ;; Hardware stack levels required when called: 2
  4146 ;; This function calls:
  4147 ;;		_ENVIA_CHAR
  4148 ;;		___lwdiv
  4149 ;;		___lwmod
  4150 ;; This function is called by:
  4151 ;;		_main
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text11
  4156   002632                     __ptext11:
  4157                           	callstack 0
  4158   002632                     _LCD_ESCRIBE_VAR_INT:
  4159                           	callstack 124
  4160   002632                     
  4161                           ;LCD.c: 206:     unsigned char d_millar, millar, centena, decena, unidad;;LCD.c: 207:   
      +                            d_millar = numero / 10000;
  4162   002632  C50D  F506         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  4163   002636  C50E  F507         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  4164   00263A  0E27               	movlw	39
  4165   00263C  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4166   00263E  0E10               	movlw	16
  4167   002640  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4168   002642  EC7C  F016         	call	___lwdiv	;wreg free
  4169   002646  5006               	movf	?___lwdiv^(0+1280),w,c
  4170   002648  6E11               	movwf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  4171                           
  4172                           ;LCD.c: 208:     millar = (numero % 10000) / 1000;
  4173   00264A  0E27               	movlw	39
  4174   00264C  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  4175   00264E  0E10               	movlw	16
  4176   002650  6E03               	movwf	___lwmod@divisor^(0+1280),c
  4177   002652  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  4178   002656  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  4179   00265A  ECB6  F016         	call	___lwmod	;wreg free
  4180   00265E  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  4181   002662  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  4182   002666  0E03               	movlw	3
  4183   002668  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4184   00266A  0EE8               	movlw	232
  4185   00266C  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4186   00266E  EC7C  F016         	call	___lwdiv	;wreg free
  4187   002672  5006               	movf	?___lwdiv^(0+1280),w,c
  4188   002674  6E12               	movwf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),c
  4189                           
  4190                           ;LCD.c: 209:     centena = (numero % 1000) / 100;
  4191   002676  0E03               	movlw	3
  4192   002678  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  4193   00267A  0EE8               	movlw	232
  4194   00267C  6E03               	movwf	___lwmod@divisor^(0+1280),c
  4195   00267E  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  4196   002682  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  4197   002686  ECB6  F016         	call	___lwmod	;wreg free
  4198   00268A  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  4199   00268E  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  4200   002692  0E00               	movlw	0
  4201   002694  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4202   002696  0E64               	movlw	100
  4203   002698  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4204   00269A  EC7C  F016         	call	___lwdiv	;wreg free
  4205   00269E  5006               	movf	?___lwdiv^(0+1280),w,c
  4206   0026A0  6E13               	movwf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),c
  4207                           
  4208                           ;LCD.c: 210:     decena = (numero % 100) / 10;
  4209   0026A2  0E00               	movlw	0
  4210   0026A4  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  4211   0026A6  0E64               	movlw	100
  4212   0026A8  6E03               	movwf	___lwmod@divisor^(0+1280),c
  4213   0026AA  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  4214   0026AE  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  4215   0026B2  ECB6  F016         	call	___lwmod	;wreg free
  4216   0026B6  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  4217   0026BA  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  4218   0026BE  0E00               	movlw	0
  4219   0026C0  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  4220   0026C2  0E0A               	movlw	10
  4221   0026C4  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  4222   0026C6  EC7C  F016         	call	___lwdiv	;wreg free
  4223   0026CA  5006               	movf	?___lwdiv^(0+1280),w,c
  4224   0026CC  6E14               	movwf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),c
  4225                           
  4226                           ;LCD.c: 211:     unidad = numero % 10;
  4227   0026CE  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  4228   0026D2  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  4229   0026D6  0E00               	movlw	0
  4230   0026D8  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  4231   0026DA  0E0A               	movlw	10
  4232   0026DC  6E03               	movwf	___lwmod@divisor^(0+1280),c
  4233   0026DE  ECB6  F016         	call	___lwmod	;wreg free
  4234   0026E2  5001               	movf	?___lwmod^(0+1280),w,c
  4235   0026E4  6E15               	movwf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),c
  4236                           
  4237                           ;LCD.c: 212:     switch(n_digitos){
  4238   0026E6  EFD6  F014         	goto	l1573
  4239   0026EA                     l1525:
  4240                           
  4241                           ;LCD.c: 214:             ENVIA_CHAR(unidad+0x30);
  4242   0026EA  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4243   0026EC  0F30               	addlw	48
  4244   0026EE  ECBF  F017         	call	_ENVIA_CHAR
  4245                           
  4246                           ;LCD.c: 215:             break;
  4247   0026F2  EFED  F014         	goto	l173
  4248   0026F6                     l1527:
  4249                           
  4250                           ;LCD.c: 217:             if(punto == 0){
  4251   0026F6  5010               	movf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  4252   0026F8  A4D8               	btfss	status,2,c
  4253   0026FA  EF81  F013         	goto	u551
  4254   0026FE  EF83  F013         	goto	u550
  4255   002702                     u551:
  4256   002702  EF8D  F013         	goto	l1531
  4257   002706                     u550:
  4258   002706                     
  4259                           ;LCD.c: 218:                 ENVIA_CHAR(decena+0x30);
  4260   002706  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4261   002708  0F30               	addlw	48
  4262   00270A  ECBF  F017         	call	_ENVIA_CHAR
  4263                           
  4264                           ;LCD.c: 219:                 ENVIA_CHAR(unidad+0x30);
  4265   00270E  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4266   002710  0F30               	addlw	48
  4267   002712  ECBF  F017         	call	_ENVIA_CHAR
  4268                           
  4269                           ;LCD.c: 220:             }
  4270   002716  EFED  F014         	goto	l173
  4271   00271A                     l1531:
  4272   00271A  0410               	decf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  4273   00271C  A4D8               	btfss	status,2,c
  4274   00271E  EF93  F013         	goto	u561
  4275   002722  EF95  F013         	goto	u560
  4276   002726                     u561:
  4277   002726  EFED  F014         	goto	l173
  4278   00272A                     u560:
  4279   00272A                     
  4280                           ;LCD.c: 222:                 ENVIA_CHAR(decena+0x30);
  4281   00272A  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4282   00272C  0F30               	addlw	48
  4283   00272E  ECBF  F017         	call	_ENVIA_CHAR
  4284                           
  4285                           ;LCD.c: 223:                 ENVIA_CHAR('.');
  4286   002732  0E2E               	movlw	46
  4287   002734  ECBF  F017         	call	_ENVIA_CHAR
  4288                           
  4289                           ;LCD.c: 224:                 ENVIA_CHAR(unidad+0x30);
  4290   002738  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4291   00273A  0F30               	addlw	48
  4292   00273C  ECBF  F017         	call	_ENVIA_CHAR
  4293   002740  EFED  F014         	goto	l173
  4294   002744                     l1535:
  4295                           
  4296                           ;LCD.c: 230:                     ENVIA_CHAR(centena+0x30);
  4297   002744  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4298   002746  0F30               	addlw	48
  4299   002748  ECBF  F017         	call	_ENVIA_CHAR
  4300                           
  4301                           ;LCD.c: 231:                     ENVIA_CHAR(decena+0x30);
  4302   00274C  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4303   00274E  0F30               	addlw	48
  4304   002750  ECBF  F017         	call	_ENVIA_CHAR
  4305                           
  4306                           ;LCD.c: 232:                     ENVIA_CHAR(unidad+0x30);
  4307   002754  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4308   002756  0F30               	addlw	48
  4309   002758  ECBF  F017         	call	_ENVIA_CHAR
  4310                           
  4311                           ;LCD.c: 233:                     break;
  4312   00275C  EFED  F014         	goto	l173
  4313   002760                     l1537:
  4314                           
  4315                           ;LCD.c: 235:                     ENVIA_CHAR(centena+0x30);
  4316   002760  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4317   002762  0F30               	addlw	48
  4318   002764  ECBF  F017         	call	_ENVIA_CHAR
  4319                           
  4320                           ;LCD.c: 236:                     ENVIA_CHAR(decena+0x30);
  4321   002768  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4322   00276A  0F30               	addlw	48
  4323   00276C  ECBF  F017         	call	_ENVIA_CHAR
  4324                           
  4325                           ;LCD.c: 237:                     ENVIA_CHAR('.');
  4326   002770  0E2E               	movlw	46
  4327   002772  ECBF  F017         	call	_ENVIA_CHAR
  4328                           
  4329                           ;LCD.c: 238:                     ENVIA_CHAR(unidad+0x30);
  4330   002776  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4331   002778  0F30               	addlw	48
  4332   00277A  ECBF  F017         	call	_ENVIA_CHAR
  4333                           
  4334                           ;LCD.c: 239:                     break;
  4335   00277E  EFED  F014         	goto	l173
  4336   002782                     l1539:
  4337                           
  4338                           ;LCD.c: 241:                     ENVIA_CHAR(centena+0x30);
  4339   002782  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4340   002784  0F30               	addlw	48
  4341   002786  ECBF  F017         	call	_ENVIA_CHAR
  4342                           
  4343                           ;LCD.c: 242:                     ENVIA_CHAR('.');
  4344   00278A  0E2E               	movlw	46
  4345   00278C  ECBF  F017         	call	_ENVIA_CHAR
  4346                           
  4347                           ;LCD.c: 243:                     ENVIA_CHAR(decena+0x30);
  4348   002790  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4349   002792  0F30               	addlw	48
  4350   002794  ECBF  F017         	call	_ENVIA_CHAR
  4351                           
  4352                           ;LCD.c: 244:                     ENVIA_CHAR(unidad+0x30);
  4353   002798  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4354   00279A  0F30               	addlw	48
  4355   00279C  ECBF  F017         	call	_ENVIA_CHAR
  4356                           
  4357                           ;LCD.c: 245:                     break;
  4358   0027A0  EFED  F014         	goto	l173
  4359   0027A4                     l1543:
  4360   0027A4  5010               	movf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  4361                           
  4362                           ; Switch size 1, requested type "simple"
  4363                           ; Number of cases is 3, Range of values is 0 to 2
  4364                           ; switch strategies available:
  4365                           ; Name         Instructions Cycles
  4366                           ; simple_byte           10     6 (average)
  4367                           ;	Chosen strategy is simple_byte
  4368   0027A6  0A00               	xorlw	0	; case 0
  4369   0027A8  B4D8               	btfsc	status,2,c
  4370   0027AA  EFA2  F013         	goto	l1535
  4371   0027AE  0A01               	xorlw	1	; case 1
  4372   0027B0  B4D8               	btfsc	status,2,c
  4373   0027B2  EFB0  F013         	goto	l1537
  4374   0027B6  0A03               	xorlw	3	; case 2
  4375   0027B8  B4D8               	btfsc	status,2,c
  4376   0027BA  EFC1  F013         	goto	l1539
  4377   0027BE  EFED  F014         	goto	l173
  4378   0027C2                     l1545:
  4379                           
  4380                           ;LCD.c: 251:                     ENVIA_CHAR(millar+0x30);
  4381   0027C2  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4382   0027C4  0F30               	addlw	48
  4383   0027C6  ECBF  F017         	call	_ENVIA_CHAR
  4384                           
  4385                           ;LCD.c: 252:                     ENVIA_CHAR(centena+0x30);
  4386   0027CA  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4387   0027CC  0F30               	addlw	48
  4388   0027CE  ECBF  F017         	call	_ENVIA_CHAR
  4389                           
  4390                           ;LCD.c: 253:                     ENVIA_CHAR(decena+0x30);
  4391   0027D2  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4392   0027D4  0F30               	addlw	48
  4393   0027D6  ECBF  F017         	call	_ENVIA_CHAR
  4394                           
  4395                           ;LCD.c: 254:                     ENVIA_CHAR(unidad+0x30);
  4396   0027DA  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4397   0027DC  0F30               	addlw	48
  4398   0027DE  ECBF  F017         	call	_ENVIA_CHAR
  4399                           
  4400                           ;LCD.c: 255:                     break;
  4401   0027E2  EFED  F014         	goto	l173
  4402   0027E6                     l1547:
  4403                           
  4404                           ;LCD.c: 257:                     ENVIA_CHAR(millar+0x30);
  4405   0027E6  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4406   0027E8  0F30               	addlw	48
  4407   0027EA  ECBF  F017         	call	_ENVIA_CHAR
  4408                           
  4409                           ;LCD.c: 258:                     ENVIA_CHAR(centena+0x30);
  4410   0027EE  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4411   0027F0  0F30               	addlw	48
  4412   0027F2  ECBF  F017         	call	_ENVIA_CHAR
  4413                           
  4414                           ;LCD.c: 259:                     ENVIA_CHAR(decena+0x30);
  4415   0027F6  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4416   0027F8  0F30               	addlw	48
  4417   0027FA  ECBF  F017         	call	_ENVIA_CHAR
  4418                           
  4419                           ;LCD.c: 260:                     ENVIA_CHAR('.');
  4420   0027FE  0E2E               	movlw	46
  4421   002800  ECBF  F017         	call	_ENVIA_CHAR
  4422                           
  4423                           ;LCD.c: 261:                     ENVIA_CHAR(unidad+0x30);
  4424   002804  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4425   002806  0F30               	addlw	48
  4426   002808  ECBF  F017         	call	_ENVIA_CHAR
  4427                           
  4428                           ;LCD.c: 262:                     break;
  4429   00280C  EFED  F014         	goto	l173
  4430   002810                     l1549:
  4431                           
  4432                           ;LCD.c: 264:                     ENVIA_CHAR(millar+0x30);
  4433   002810  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4434   002812  0F30               	addlw	48
  4435   002814  ECBF  F017         	call	_ENVIA_CHAR
  4436                           
  4437                           ;LCD.c: 265:                     ENVIA_CHAR(centena+0x30);
  4438   002818  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4439   00281A  0F30               	addlw	48
  4440   00281C  ECBF  F017         	call	_ENVIA_CHAR
  4441                           
  4442                           ;LCD.c: 266:                     ENVIA_CHAR('.');
  4443   002820  0E2E               	movlw	46
  4444   002822  ECBF  F017         	call	_ENVIA_CHAR
  4445                           
  4446                           ;LCD.c: 267:                     ENVIA_CHAR(decena+0x30);
  4447   002826  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4448   002828  0F30               	addlw	48
  4449   00282A  ECBF  F017         	call	_ENVIA_CHAR
  4450                           
  4451                           ;LCD.c: 268:                     ENVIA_CHAR(unidad+0x30);
  4452   00282E  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4453   002830  0F30               	addlw	48
  4454   002832  ECBF  F017         	call	_ENVIA_CHAR
  4455                           
  4456                           ;LCD.c: 269:                     break;
  4457   002836  EFED  F014         	goto	l173
  4458   00283A                     l1551:
  4459                           
  4460                           ;LCD.c: 271:                     ENVIA_CHAR(millar+0x30);
  4461   00283A  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4462   00283C  0F30               	addlw	48
  4463   00283E  ECBF  F017         	call	_ENVIA_CHAR
  4464                           
  4465                           ;LCD.c: 272:                     ENVIA_CHAR('.');
  4466   002842  0E2E               	movlw	46
  4467   002844  ECBF  F017         	call	_ENVIA_CHAR
  4468                           
  4469                           ;LCD.c: 273:                     ENVIA_CHAR(centena+0x30);
  4470   002848  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4471   00284A  0F30               	addlw	48
  4472   00284C  ECBF  F017         	call	_ENVIA_CHAR
  4473                           
  4474                           ;LCD.c: 274:                     ENVIA_CHAR(decena+0x30);
  4475   002850  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4476   002852  0F30               	addlw	48
  4477   002854  ECBF  F017         	call	_ENVIA_CHAR
  4478                           
  4479                           ;LCD.c: 275:                     ENVIA_CHAR(unidad+0x30);
  4480   002858  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4481   00285A  0F30               	addlw	48
  4482   00285C  ECBF  F017         	call	_ENVIA_CHAR
  4483                           
  4484                           ;LCD.c: 276:                     break;
  4485   002860  EFED  F014         	goto	l173
  4486   002864                     l1555:
  4487   002864  5010               	movf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  4488                           
  4489                           ; Switch size 1, requested type "simple"
  4490                           ; Number of cases is 4, Range of values is 0 to 3
  4491                           ; switch strategies available:
  4492                           ; Name         Instructions Cycles
  4493                           ; simple_byte           13     7 (average)
  4494                           ;	Chosen strategy is simple_byte
  4495   002866  0A00               	xorlw	0	; case 0
  4496   002868  B4D8               	btfsc	status,2,c
  4497   00286A  EFE1  F013         	goto	l1545
  4498   00286E  0A01               	xorlw	1	; case 1
  4499   002870  B4D8               	btfsc	status,2,c
  4500   002872  EFF3  F013         	goto	l1547
  4501   002876  0A03               	xorlw	3	; case 2
  4502   002878  B4D8               	btfsc	status,2,c
  4503   00287A  EF08  F014         	goto	l1549
  4504   00287E  0A01               	xorlw	1	; case 3
  4505   002880  B4D8               	btfsc	status,2,c
  4506   002882  EF1D  F014         	goto	l1551
  4507   002886  EFED  F014         	goto	l173
  4508   00288A                     l1557:
  4509                           
  4510                           ;LCD.c: 282:                     ENVIA_CHAR(d_millar+0x30);
  4511   00288A  5011               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  4512   00288C  0F30               	addlw	48
  4513   00288E  ECBF  F017         	call	_ENVIA_CHAR
  4514                           
  4515                           ;LCD.c: 283:                     ENVIA_CHAR(millar+0x30);
  4516   002892  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4517   002894  0F30               	addlw	48
  4518   002896  ECBF  F017         	call	_ENVIA_CHAR
  4519                           
  4520                           ;LCD.c: 284:                     ENVIA_CHAR(centena+0x30);
  4521   00289A  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4522   00289C  0F30               	addlw	48
  4523   00289E  ECBF  F017         	call	_ENVIA_CHAR
  4524                           
  4525                           ;LCD.c: 285:                     ENVIA_CHAR(decena+0x30);
  4526   0028A2  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4527   0028A4  0F30               	addlw	48
  4528   0028A6  ECBF  F017         	call	_ENVIA_CHAR
  4529                           
  4530                           ;LCD.c: 286:                     ENVIA_CHAR(unidad+0x30);
  4531   0028AA  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4532   0028AC  0F30               	addlw	48
  4533   0028AE  ECBF  F017         	call	_ENVIA_CHAR
  4534                           
  4535                           ;LCD.c: 287:                     break;
  4536   0028B2  EFED  F014         	goto	l173
  4537   0028B6                     l1559:
  4538                           
  4539                           ;LCD.c: 289:                     ENVIA_CHAR(d_millar+0x30);
  4540   0028B6  5011               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  4541   0028B8  0F30               	addlw	48
  4542   0028BA  ECBF  F017         	call	_ENVIA_CHAR
  4543                           
  4544                           ;LCD.c: 290:                     ENVIA_CHAR(millar+0x30);
  4545   0028BE  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4546   0028C0  0F30               	addlw	48
  4547   0028C2  ECBF  F017         	call	_ENVIA_CHAR
  4548                           
  4549                           ;LCD.c: 291:                     ENVIA_CHAR(centena+0x30);
  4550   0028C6  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4551   0028C8  0F30               	addlw	48
  4552   0028CA  ECBF  F017         	call	_ENVIA_CHAR
  4553                           
  4554                           ;LCD.c: 292:                     ENVIA_CHAR(decena+0x30);
  4555   0028CE  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4556   0028D0  0F30               	addlw	48
  4557   0028D2  ECBF  F017         	call	_ENVIA_CHAR
  4558                           
  4559                           ;LCD.c: 293:                     ENVIA_CHAR('.');
  4560   0028D6  0E2E               	movlw	46
  4561   0028D8  ECBF  F017         	call	_ENVIA_CHAR
  4562                           
  4563                           ;LCD.c: 294:                     ENVIA_CHAR(unidad+0x30);
  4564   0028DC  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4565   0028DE  0F30               	addlw	48
  4566   0028E0  ECBF  F017         	call	_ENVIA_CHAR
  4567                           
  4568                           ;LCD.c: 295:                     break;
  4569   0028E4  EFED  F014         	goto	l173
  4570   0028E8                     l1561:
  4571                           
  4572                           ;LCD.c: 297:                     ENVIA_CHAR(d_millar+0x30);
  4573   0028E8  5011               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  4574   0028EA  0F30               	addlw	48
  4575   0028EC  ECBF  F017         	call	_ENVIA_CHAR
  4576                           
  4577                           ;LCD.c: 298:                     ENVIA_CHAR(millar+0x30);
  4578   0028F0  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4579   0028F2  0F30               	addlw	48
  4580   0028F4  ECBF  F017         	call	_ENVIA_CHAR
  4581                           
  4582                           ;LCD.c: 299:                     ENVIA_CHAR(centena+0x30);
  4583   0028F8  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4584   0028FA  0F30               	addlw	48
  4585   0028FC  ECBF  F017         	call	_ENVIA_CHAR
  4586                           
  4587                           ;LCD.c: 300:                     ENVIA_CHAR('.');
  4588   002900  0E2E               	movlw	46
  4589   002902  ECBF  F017         	call	_ENVIA_CHAR
  4590                           
  4591                           ;LCD.c: 301:                     ENVIA_CHAR(decena+0x30);
  4592   002906  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4593   002908  0F30               	addlw	48
  4594   00290A  ECBF  F017         	call	_ENVIA_CHAR
  4595                           
  4596                           ;LCD.c: 302:                     ENVIA_CHAR(unidad+0x30);
  4597   00290E  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4598   002910  0F30               	addlw	48
  4599   002912  ECBF  F017         	call	_ENVIA_CHAR
  4600                           
  4601                           ;LCD.c: 303:                     break;
  4602   002916  EFED  F014         	goto	l173
  4603   00291A                     l1563:
  4604                           
  4605                           ;LCD.c: 305:                     ENVIA_CHAR(d_millar+0x30);
  4606   00291A  5011               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  4607   00291C  0F30               	addlw	48
  4608   00291E  ECBF  F017         	call	_ENVIA_CHAR
  4609                           
  4610                           ;LCD.c: 306:                     ENVIA_CHAR(millar+0x30);
  4611   002922  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4612   002924  0F30               	addlw	48
  4613   002926  ECBF  F017         	call	_ENVIA_CHAR
  4614                           
  4615                           ;LCD.c: 307:                     ENVIA_CHAR('.');
  4616   00292A  0E2E               	movlw	46
  4617   00292C  ECBF  F017         	call	_ENVIA_CHAR
  4618                           
  4619                           ;LCD.c: 308:                     ENVIA_CHAR(centena+0x30);
  4620   002930  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4621   002932  0F30               	addlw	48
  4622   002934  ECBF  F017         	call	_ENVIA_CHAR
  4623                           
  4624                           ;LCD.c: 309:                     ENVIA_CHAR(decena+0x30);
  4625   002938  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4626   00293A  0F30               	addlw	48
  4627   00293C  ECBF  F017         	call	_ENVIA_CHAR
  4628                           
  4629                           ;LCD.c: 310:                     ENVIA_CHAR(unidad+0x30);
  4630   002940  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4631   002942  0F30               	addlw	48
  4632   002944  ECBF  F017         	call	_ENVIA_CHAR
  4633                           
  4634                           ;LCD.c: 311:                     break;
  4635   002948  EFED  F014         	goto	l173
  4636   00294C                     l1565:
  4637                           
  4638                           ;LCD.c: 313:                     ENVIA_CHAR(d_millar+0x30);
  4639   00294C  5011               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  4640   00294E  0F30               	addlw	48
  4641   002950  ECBF  F017         	call	_ENVIA_CHAR
  4642                           
  4643                           ;LCD.c: 314:                     ENVIA_CHAR('.');
  4644   002954  0E2E               	movlw	46
  4645   002956  ECBF  F017         	call	_ENVIA_CHAR
  4646                           
  4647                           ;LCD.c: 315:                     ENVIA_CHAR(millar+0x30);
  4648   00295A  5012               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  4649   00295C  0F30               	addlw	48
  4650   00295E  ECBF  F017         	call	_ENVIA_CHAR
  4651                           
  4652                           ;LCD.c: 316:                     ENVIA_CHAR(centena+0x30);
  4653   002962  5013               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  4654   002964  0F30               	addlw	48
  4655   002966  ECBF  F017         	call	_ENVIA_CHAR
  4656                           
  4657                           ;LCD.c: 317:                     ENVIA_CHAR(decena+0x30);
  4658   00296A  5014               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  4659   00296C  0F30               	addlw	48
  4660   00296E  ECBF  F017         	call	_ENVIA_CHAR
  4661                           
  4662                           ;LCD.c: 318:                     ENVIA_CHAR(unidad+0x30);
  4663   002972  5015               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  4664   002974  0F30               	addlw	48
  4665   002976  ECBF  F017         	call	_ENVIA_CHAR
  4666                           
  4667                           ;LCD.c: 319:                     break;
  4668   00297A  EFED  F014         	goto	l173
  4669   00297E                     l1569:
  4670   00297E  5010               	movf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  4671                           
  4672                           ; Switch size 1, requested type "simple"
  4673                           ; Number of cases is 5, Range of values is 0 to 4
  4674                           ; switch strategies available:
  4675                           ; Name         Instructions Cycles
  4676                           ; simple_byte           16     9 (average)
  4677                           ;	Chosen strategy is simple_byte
  4678   002980  0A00               	xorlw	0	; case 0
  4679   002982  B4D8               	btfsc	status,2,c
  4680   002984  EF45  F014         	goto	l1557
  4681   002988  0A01               	xorlw	1	; case 1
  4682   00298A  B4D8               	btfsc	status,2,c
  4683   00298C  EF5B  F014         	goto	l1559
  4684   002990  0A03               	xorlw	3	; case 2
  4685   002992  B4D8               	btfsc	status,2,c
  4686   002994  EF74  F014         	goto	l1561
  4687   002998  0A01               	xorlw	1	; case 3
  4688   00299A  B4D8               	btfsc	status,2,c
  4689   00299C  EF8D  F014         	goto	l1563
  4690   0029A0  0A07               	xorlw	7	; case 4
  4691   0029A2  B4D8               	btfsc	status,2,c
  4692   0029A4  EFA6  F014         	goto	l1565
  4693   0029A8  EFED  F014         	goto	l173
  4694   0029AC                     l1573:
  4695   0029AC  500F               	movf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  4696                           
  4697                           ; Switch size 1, requested type "simple"
  4698                           ; Number of cases is 5, Range of values is 1 to 5
  4699                           ; switch strategies available:
  4700                           ; Name         Instructions Cycles
  4701                           ; simple_byte           16     9 (average)
  4702                           ;	Chosen strategy is simple_byte
  4703   0029AE  0A01               	xorlw	1	; case 1
  4704   0029B0  B4D8               	btfsc	status,2,c
  4705   0029B2  EF75  F013         	goto	l1525
  4706   0029B6  0A03               	xorlw	3	; case 2
  4707   0029B8  B4D8               	btfsc	status,2,c
  4708   0029BA  EF7B  F013         	goto	l1527
  4709   0029BE  0A01               	xorlw	1	; case 3
  4710   0029C0  B4D8               	btfsc	status,2,c
  4711   0029C2  EFD2  F013         	goto	l1543
  4712   0029C6  0A07               	xorlw	7	; case 4
  4713   0029C8  B4D8               	btfsc	status,2,c
  4714   0029CA  EF32  F014         	goto	l1555
  4715   0029CE  0A01               	xorlw	1	; case 5
  4716   0029D0  B4D8               	btfsc	status,2,c
  4717   0029D2  EFBF  F014         	goto	l1569
  4718   0029D6  EFED  F014         	goto	l173
  4719   0029DA                     l173:
  4720   0029DA  0012               	return		;funcret
  4721   0029DC                     __end_of_LCD_ESCRIBE_VAR_INT:
  4722                           	callstack 0
  4723                           
  4724 ;; *************** function ___lwmod *****************
  4725 ;; Defined at:
  4726 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  dividend        2    0[COMRAM] unsigned int 
  4729 ;;  divisor         2    2[COMRAM] unsigned int 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  counter         1    4[COMRAM] unsigned char 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  2    0[COMRAM] unsigned int 
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4744 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4745 ;;Total ram usage:        5 bytes
  4746 ;; Hardware stack levels used: 1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_main
  4751 ;;		_LCD_ESCRIBE_VAR_INT
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text12
  4756   002D6C                     __ptext12:
  4757                           	callstack 0
  4758   002D6C                     ___lwmod:
  4759                           	callstack 126
  4760   002D6C  5003               	movf	___lwmod@divisor^(0+1280),w,c
  4761   002D6E  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  4762   002D70  B4D8               	btfsc	status,2,c
  4763   002D72  EFBD  F016         	goto	u471
  4764   002D76  EFBF  F016         	goto	u470
  4765   002D7A                     u471:
  4766   002D7A  EFE3  F016         	goto	l733
  4767   002D7E                     u470:
  4768   002D7E  0E01               	movlw	1
  4769   002D80  6E05               	movwf	___lwmod@counter^(0+1280),c
  4770   002D82  EFC7  F016         	goto	l1479
  4771   002D86                     l1477:
  4772   002D86  90D8               	bcf	status,0,c
  4773   002D88  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  4774   002D8A  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  4775   002D8C  2A05               	incf	___lwmod@counter^(0+1280),f,c
  4776   002D8E                     l1479:
  4777   002D8E  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  4778   002D90  EFCC  F016         	goto	u481
  4779   002D94  EFCE  F016         	goto	u480
  4780   002D98                     u481:
  4781   002D98  EFC3  F016         	goto	l1477
  4782   002D9C                     u480:
  4783   002D9C                     l1481:
  4784   002D9C  5003               	movf	___lwmod@divisor^(0+1280),w,c
  4785   002D9E  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  4786   002DA0  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  4787   002DA2  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  4788   002DA4  A0D8               	btfss	status,0,c
  4789   002DA6  EFD7  F016         	goto	u491
  4790   002DAA  EFD9  F016         	goto	u490
  4791   002DAE                     u491:
  4792   002DAE  EFDD  F016         	goto	l1485
  4793   002DB2                     u490:
  4794   002DB2  5003               	movf	___lwmod@divisor^(0+1280),w,c
  4795   002DB4  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  4796   002DB6  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  4797   002DB8  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  4798   002DBA                     l1485:
  4799   002DBA  90D8               	bcf	status,0,c
  4800   002DBC  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  4801   002DBE  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  4802   002DC0  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  4803   002DC2  EFCE  F016         	goto	l1481
  4804   002DC6                     l733:
  4805   002DC6  C501  F501         	movff	___lwmod@dividend,?___lwmod
  4806   002DCA  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  4807   002DCE  0012               	return		;funcret
  4808   002DD0                     __end_of___lwmod:
  4809                           	callstack 0
  4810                           
  4811 ;; *************** function ___lwdiv *****************
  4812 ;; Defined at:
  4813 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  dividend        2    5[COMRAM] unsigned int 
  4816 ;;  divisor         2    7[COMRAM] unsigned int 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  quotient        2    9[COMRAM] unsigned int 
  4819 ;;  counter         1   11[COMRAM] unsigned char 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  2    5[COMRAM] unsigned int 
  4822 ;; Registers used:
  4823 ;;		wreg, status,2, status,0
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4829 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4830 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4832 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4833 ;;Total ram usage:        7 bytes
  4834 ;; Hardware stack levels used: 1
  4835 ;; This function calls:
  4836 ;;		Nothing
  4837 ;; This function is called by:
  4838 ;;		_main
  4839 ;;		_LCD_ESCRIBE_VAR_INT
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           	psect	text13
  4844   002CF8                     __ptext13:
  4845                           	callstack 0
  4846   002CF8                     ___lwdiv:
  4847                           	callstack 126
  4848   002CF8  0E00               	movlw	0
  4849   002CFA  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  4850   002CFC  0E00               	movlw	0
  4851   002CFE  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  4852   002D00  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  4853   002D02  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  4854   002D04  B4D8               	btfsc	status,2,c
  4855   002D06  EF87  F016         	goto	u441
  4856   002D0A  EF89  F016         	goto	u440
  4857   002D0E                     u441:
  4858   002D0E  EFB1  F016         	goto	l723
  4859   002D12                     u440:
  4860   002D12  0E01               	movlw	1
  4861   002D14  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  4862   002D16  EF91  F016         	goto	l1459
  4863   002D1A                     l1457:
  4864   002D1A  90D8               	bcf	status,0,c
  4865   002D1C  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  4866   002D1E  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  4867   002D20  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  4868   002D22                     l1459:
  4869   002D22  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  4870   002D24  EF96  F016         	goto	u451
  4871   002D28  EF98  F016         	goto	u450
  4872   002D2C                     u451:
  4873   002D2C  EF8D  F016         	goto	l1457
  4874   002D30                     u450:
  4875   002D30                     l1461:
  4876   002D30  90D8               	bcf	status,0,c
  4877   002D32  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  4878   002D34  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  4879   002D36  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  4880   002D38  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  4881   002D3A  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  4882   002D3C  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  4883   002D3E  A0D8               	btfss	status,0,c
  4884   002D40  EFA4  F016         	goto	u461
  4885   002D44  EFA6  F016         	goto	u460
  4886   002D48                     u461:
  4887   002D48  EFAB  F016         	goto	l1469
  4888   002D4C                     u460:
  4889   002D4C  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  4890   002D4E  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  4891   002D50  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  4892   002D52  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  4893   002D54  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  4894   002D56                     l1469:
  4895   002D56  90D8               	bcf	status,0,c
  4896   002D58  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  4897   002D5A  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  4898   002D5C  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  4899   002D5E  EF98  F016         	goto	l1461
  4900   002D62                     l723:
  4901   002D62  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  4902   002D66  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4903   002D6A  0012               	return		;funcret
  4904   002D6C                     __end_of___lwdiv:
  4905                           	callstack 0
  4906                           
  4907 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  4908 ;; Defined at:
  4909 ;;		line 66 in file "LCD.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  cadena          1    5[COMRAM] PTR const unsigned char 
  4912 ;;		 -> STR_3(17), STR_2(15), STR_1(15), 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;  i               1    8[COMRAM] unsigned char 
  4915 ;;  tam             1    7[COMRAM] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4925 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4926 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4928 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4929 ;;Total ram usage:        4 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; Hardware stack levels required when called: 2
  4932 ;; This function calls:
  4933 ;;		_ENVIA_CHAR
  4934 ;;		_strlen
  4935 ;; This function is called by:
  4936 ;;		_main
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text14
  4941   002ED0                     __ptext14:
  4942                           	callstack 0
  4943   002ED0                     _ESCRIBE_MENSAJE2:
  4944                           	callstack 124
  4945   002ED0                     
  4946                           ;LCD.c: 67:     unsigned char tam;;LCD.c: 68:     tam = strlen(cadena);
  4947   002ED0  C506  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  4948   002ED4  EC89  F017         	call	_strlen	;wreg free
  4949   002ED8  5001               	movf	?_strlen^(0+1280),w,c
  4950   002EDA  6E08               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  4951   002EDC                     
  4952                           ;LCD.c: 70:  for(i = 0; i<tam; i++) {
  4953   002EDC  6A09               	clrf	ESCRIBE_MENSAJE2@i^(0+1280),c
  4954   002EDE  EF7F  F017         	goto	l1521
  4955   002EE2                     l1517:
  4956                           
  4957                           ;LCD.c: 71:   ENVIA_CHAR(cadena[i]);
  4958   002EE2  5006               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  4959   002EE4  2409               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  4960   002EE6  6E07               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  4961   002EE8  C507  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  4962   002EEC                     	if	1	;There is more than 1 active tblptr byte
  4963   002EEC  0E26               	movlw	high __smallconst
  4964   002EEE  6EF7               	movwf	tblptrh,c
  4965   002EF0                     	endif
  4966   002EF0                     	if	0	;tblptru may be non-zero
  4967   002EF0                     	endif
  4968   002EF0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4969   002EF0  0E00               	movlw	low (__smallconst shr (0+16))
  4970   002EF2  6EF8               	movwf	tblptru,c
  4971   002EF4                     	endif
  4972   002EF4  0008               	tblrd		*
  4973   002EF6  50F5               	movf	tablat,w,c
  4974   002EF8  ECBF  F017         	call	_ENVIA_CHAR
  4975   002EFC                     
  4976                           ;LCD.c: 72:  }
  4977   002EFC  2A09               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  4978   002EFE                     l1521:
  4979   002EFE  5008               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  4980   002F00  5C09               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  4981   002F02  A0D8               	btfss	status,0,c
  4982   002F04  EF86  F017         	goto	u541
  4983   002F08  EF88  F017         	goto	u540
  4984   002F0C                     u541:
  4985   002F0C  EF71  F017         	goto	l1517
  4986   002F10                     u540:
  4987   002F10  0012               	return		;funcret
  4988   002F12                     __end_of_ESCRIBE_MENSAJE2:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function _strlen *****************
  4992 ;; Defined at:
  4993 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  s               1    0[COMRAM] PTR const unsigned char 
  4996 ;;		 -> STR_3(17), STR_2(15), STR_1(15), 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  a               1    2[COMRAM] PTR const unsigned char 
  4999 ;;		 -> STR_3(17), STR_2(15), STR_1(15), 
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  2    0[COMRAM] unsigned int 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5012 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5013 ;;Total ram usage:        3 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_ESCRIBE_MENSAJE2
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text15
  5023   002F12                     __ptext15:
  5024                           	callstack 0
  5025   002F12                     _strlen:
  5026                           	callstack 125
  5027   002F12  C501  F503         	movff	strlen@s,strlen@a
  5028   002F16  EF8E  F017         	goto	l1445
  5029   002F1A                     l1443:
  5030   002F1A  2A01               	incf	strlen@s^(0+1280),f,c
  5031   002F1C                     l1445:
  5032   002F1C  C501  F4F6         	movff	strlen@s,tblptrl
  5033   002F20                     	if	1	;There is more than 1 active tblptr byte
  5034   002F20  0E26               	movlw	high __smallconst
  5035   002F22  6EF7               	movwf	tblptrh,c
  5036   002F24                     	endif
  5037   002F24                     	if	0	;tblptru may be non-zero
  5038   002F24                     	endif
  5039   002F24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5040   002F24  0E00               	movlw	low (__smallconst shr (0+16))
  5041   002F26  6EF8               	movwf	tblptru,c
  5042   002F28                     	endif
  5043   002F28  0008               	tblrd		*
  5044   002F2A  50F5               	movf	tablat,w,c
  5045   002F2C  0900               	iorlw	0
  5046   002F2E  A4D8               	btfss	status,2,c
  5047   002F30  EF9C  F017         	goto	u431
  5048   002F34  EF9E  F017         	goto	u430
  5049   002F38                     u431:
  5050   002F38  EF8D  F017         	goto	l1443
  5051   002F3C                     u430:
  5052   002F3C  5003               	movf	strlen@a^(0+1280),w,c
  5053   002F3E  5C01               	subwf	strlen@s^(0+1280),w,c
  5054   002F40  6E01               	movwf	?_strlen^(0+1280),c
  5055   002F42  6A02               	clrf	(?_strlen+1)^(0+1280),c
  5056   002F44  BE01               	btfsc	?_strlen^(0+1280),7,c
  5057   002F46  0602               	decf	(?_strlen+1)^(0+1280),f,c
  5058   002F48  0012               	return		;funcret
  5059   002F4A                     __end_of_strlen:
  5060                           	callstack 0
  5061                           
  5062 ;; *************** function _ENVIA_CHAR *****************
  5063 ;; Defined at:
  5064 ;;		line 75 in file "LCD.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;  dato            1    wreg     unsigned char 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;  dato            1    3[COMRAM] unsigned char 
  5069 ;;  aux             1    4[COMRAM] unsigned char 
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  1    wreg      void 
  5072 ;; Registers used:
  5073 ;;		wreg, status,2, status,0, cstack
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5080 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5082 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5083 ;;Total ram usage:        3 bytes
  5084 ;; Hardware stack levels used: 1
  5085 ;; Hardware stack levels required when called: 1
  5086 ;; This function calls:
  5087 ;;		_ENVIA_NIBBLE
  5088 ;; This function is called by:
  5089 ;;		_ESCRIBE_MENSAJE2
  5090 ;;		_LCD_ESCRIBE_VAR_INT
  5091 ;;		_ESCRIBE_MENSAJE
  5092 ;;		_GENERACARACTER
  5093 ;;		_LCD_ESCRIBE_VAR_CHAR
  5094 ;;		_LCD_CHAR_GRADO
  5095 ;;		_LCD_VARCHAR_BITS
  5096 ;;		_LCD_VARCHAR_HEX
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           	psect	text16
  5101   002F7E                     __ptext16:
  5102                           	callstack 0
  5103   002F7E                     _ENVIA_CHAR:
  5104                           	callstack 124
  5105                           
  5106                           ;incstack = 0
  5107                           ;ENVIA_CHAR@dato stored from wreg
  5108   002F7E  6E04               	movwf	ENVIA_CHAR@dato^(0+1280),c
  5109   002F80                     
  5110                           ;LCD.c: 76:  unsigned char aux;;LCD.c: 77:  LATDbits.LATD0 = 1;
  5111   002F80  80C1               	bsf	193,0,c	;volatile
  5112   002F82                     
  5113                           ;LCD.c: 80:     _delay((unsigned long)((300)*(32000000UL/4000000.0)));
  5114   002F82  0E04               	movlw	4
  5115   002F84  6E03               	movwf	??_ENVIA_CHAR^(0+1280),c
  5116   002F86  0E1C               	movlw	28
  5117   002F88                     u657:
  5118   002F88  2EE8               	decfsz	wreg,f,c
  5119   002F8A  D7FE               	bra	u657
  5120   002F8C  2E03               	decfsz	??_ENVIA_CHAR^(0+1280),f,c
  5121   002F8E  D7FC               	bra	u657
  5122   002F90  D000               	nop2	
  5123   002F92                     
  5124                           ;LCD.c: 81:  LATDbits.LATD1 = 0;
  5125   002F92  92C1               	bcf	193,1,c	;volatile
  5126   002F94                     
  5127                           ;LCD.c: 82:  LATDbits.LATD2 = 0;
  5128   002F94  94C1               	bcf	193,2,c	;volatile
  5129   002F96                     
  5130                           ;LCD.c: 83:  LATDbits.LATD0 = 1;
  5131   002F96  80C1               	bsf	193,0,c	;volatile
  5132   002F98                     
  5133                           ;LCD.c: 84:  aux = dato & 0xF0;
  5134   002F98  5004               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  5135   002F9A  0BF0               	andlw	240
  5136   002F9C  6E05               	movwf	ENVIA_CHAR@aux^(0+1280),c
  5137   002F9E                     
  5138                           ;LCD.c: 85:  ENVIA_NIBBLE(aux);
  5139   002F9E  5005               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  5140   002FA0  ECF1  F017         	call	_ENVIA_NIBBLE
  5141   002FA4                     
  5142                           ;LCD.c: 86:  aux = dato << 4;
  5143   002FA4  3804               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  5144   002FA6  0BF0               	andlw	240
  5145   002FA8  6E05               	movwf	ENVIA_CHAR@aux^(0+1280),c
  5146   002FAA                     
  5147                           ;LCD.c: 87:  ENVIA_NIBBLE(aux);
  5148   002FAA  5005               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  5149   002FAC  ECF1  F017         	call	_ENVIA_NIBBLE
  5150   002FB0  0012               	return		;funcret
  5151   002FB2                     __end_of_ENVIA_CHAR:
  5152                           	callstack 0
  5153                           
  5154 ;; *************** function _ENVIA_NIBBLE *****************
  5155 ;; Defined at:
  5156 ;;		line 110 in file "LCD.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;  dato            1    wreg     unsigned char 
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  dato            1    1[COMRAM] unsigned char 
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  1    wreg      void 
  5163 ;; Registers used:
  5164 ;;		wreg, status,2, status,0
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5172 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5174 ;;Total ram usage:        2 bytes
  5175 ;; Hardware stack levels used: 1
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_ENVIA_CHAR
  5180 ;;		_LCD_CONFIG
  5181 ;;		_ENVIA_LCD_CMD
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text17
  5186   002FE2                     __ptext17:
  5187                           	callstack 0
  5188   002FE2                     _ENVIA_NIBBLE:
  5189                           	callstack 123
  5190                           
  5191                           ;incstack = 0
  5192                           ;ENVIA_NIBBLE@dato stored from wreg
  5193   002FE2  6E02               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  5194   002FE4                     
  5195                           ;LCD.c: 111:  LATD &= 0x0F;
  5196   002FE4  0E0F               	movlw	15
  5197   002FE6  16C1               	andwf	193,f,c	;volatile
  5198                           
  5199                           ;LCD.c: 112:  dato &= 0xF0;
  5200   002FE8  0EF0               	movlw	240
  5201   002FEA  1602               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  5202                           
  5203                           ;LCD.c: 113:  LATD|= dato;
  5204   002FEC  5002               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  5205   002FEE  12C1               	iorwf	193,f,c	;volatile
  5206   002FF0                     
  5207                           ;LCD.c: 114:  LATDbits.LATD2 = 1;
  5208   002FF0  84C1               	bsf	193,2,c	;volatile
  5209   002FF2                     
  5210                           ;LCD.c: 115:     _delay((unsigned long)((300)*(32000000UL/4000000.0)));
  5211   002FF2  0E04               	movlw	4
  5212   002FF4  6E01               	movwf	??_ENVIA_NIBBLE^(0+1280),c
  5213   002FF6  0E1C               	movlw	28
  5214   002FF8                     u667:
  5215   002FF8  2EE8               	decfsz	wreg,f,c
  5216   002FFA  D7FE               	bra	u667
  5217   002FFC  2E01               	decfsz	??_ENVIA_NIBBLE^(0+1280),f,c
  5218   002FFE  D7FC               	bra	u667
  5219   003000  D000               	nop2	
  5220   003002                     
  5221                           ;LCD.c: 116:  LATDbits.LATD2 = 0;
  5222   003002  94C1               	bcf	193,2,c	;volatile
  5223   003004  0012               	return		;funcret
  5224   003006                     __end_of_ENVIA_NIBBLE:
  5225                           	callstack 0
  5226                           
  5227                           	psect	rparam
  5228   000001                     ___rparam_used  equ	1
  5229   000000                     ___param_bank   equ	0
  5230   000000                     __Lparam        equ	__Lrparam
  5231   000000                     __Hparam        equ	__Hrparam
  5232                           
  5233                           	psect	config
  5234                           
  5235                           ;Config register CONFIG1 @ 0x300000
  5236                           ;	External Oscillator Selection
  5237                           ;	FEXTOSC = OFF, Oscillator not enabled
  5238                           ;	Reset Oscillator Selection
  5239                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  5240   300000                     	org	3145728
  5241   300000  FC                 	db	252
  5242                           
  5243                           ;Config register CONFIG2 @ 0x300001
  5244                           ;	Clock out Enable bit
  5245                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  5246                           ;	PRLOCKED One-Way Set Enable bit
  5247                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  5248                           ;	Clock Switch Enable bit
  5249                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5250                           ;	Fail-Safe Clock Monitor Enable bit
  5251                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  5252   300001                     	org	3145729
  5253   300001  FF                 	db	255
  5254                           
  5255                           ;Config register CONFIG3 @ 0x300002
  5256                           ;	MCLR Enable bit
  5257                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  5258                           ;	Power-up timer selection bits
  5259                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  5260                           ;	Multi-vector enable bit
  5261                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  5262                           ;	IVTLOCK bit One-way set enable bit
  5263                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  5264                           ;	Low Power BOR Enable bit
  5265                           ;	LPBOREN = OFF, Low-Power BOR disabled
  5266                           ;	Brown-out Reset Enable bits
  5267                           ;	BOREN = OFF, Brown-out Reset disabled
  5268   300002                     	org	3145730
  5269   300002  3D                 	db	61
  5270                           
  5271                           ;Config register CONFIG4 @ 0x300003
  5272                           ;	Brown-out Reset Voltage Selection bits
  5273                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  5274                           ;	ZCD Disable bit
  5275                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  5276                           ;	PPSLOCK bit One-Way Set Enable bit
  5277                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  5278                           ;	Stack Full/Underflow Reset Enable bit
  5279                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5280                           ;	Low Voltage Programming Enable bit
  5281                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  5282                           ;	Extended Instruction Set Enable bit
  5283                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  5284   300003                     	org	3145731
  5285   300003  DF                 	db	223
  5286                           
  5287                           ;Config register CONFIG5 @ 0x300004
  5288                           ;	WDT Period selection bits
  5289                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5290                           ;	WDT operating mode
  5291                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  5292   300004                     	org	3145732
  5293   300004  9F                 	db	159
  5294                           
  5295                           ;Config register CONFIG6 @ 0x300005
  5296                           ;	WDT Window Select bits
  5297                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5298                           ;	WDT input clock selector
  5299                           ;	WDTCCS = SC, Software Control
  5300   300005                     	org	3145733
  5301   300005  FF                 	db	255
  5302                           
  5303                           ;Config register CONFIG7 @ 0x300006
  5304                           ;	Boot Block Size selection bits
  5305                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  5306                           ;	Boot Block enable bit
  5307                           ;	BBEN = OFF, Boot block disabled
  5308                           ;	Storage Area Flash enable bit
  5309                           ;	SAFEN = OFF, SAF disabled
  5310                           ;	Background Debugger
  5311                           ;	DEBUG = OFF, Background Debugger disabled
  5312   300006                     	org	3145734
  5313   300006  FF                 	db	255
  5314                           
  5315                           ;Config register CONFIG8 @ 0x300007
  5316                           ;	Boot Block Write Protection bit
  5317                           ;	WRTB = OFF, Boot Block not Write protected
  5318                           ;	Configuration Register Write Protection bit
  5319                           ;	WRTC = OFF, Configuration registers not Write protected
  5320                           ;	Data EEPROM Write Protection bit
  5321                           ;	WRTD = OFF, Data EEPROM not Write protected
  5322                           ;	SAF Write protection bit
  5323                           ;	WRTSAF = OFF, SAF not Write Protected
  5324                           ;	Application Block write protection bit
  5325                           ;	WRTAPP = OFF, Application Block not write protected
  5326   300007                     	org	3145735
  5327   300007  FF                 	db	255
  5328                           
  5329                           ;Config register CONFIG10 @ 0x300009
  5330                           ;	PFM and Data EEPROM Code Protection bit
  5331                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  5332   300009                     	org	3145737
  5333   300009  FF                 	db	255
  5334                           tosu	equ	0x4FF
  5335                           tosh	equ	0x4FE
  5336                           tosl	equ	0x4FD
  5337                           stkptr	equ	0x4FC
  5338                           pclatu	equ	0x4FB
  5339                           pclath	equ	0x4FA
  5340                           pcl	equ	0x4F9
  5341                           tblptru	equ	0x4F8
  5342                           tblptrh	equ	0x4F7
  5343                           tblptrl	equ	0x4F6
  5344                           tablat	equ	0x4F5
  5345                           prodh	equ	0x4F4
  5346                           prodl	equ	0x4F3
  5347                           indf0	equ	0x4EF
  5348                           postinc0	equ	0x4EE
  5349                           postdec0	equ	0x4ED
  5350                           preinc0	equ	0x4EC
  5351                           plusw0	equ	0x4EB
  5352                           fsr0h	equ	0x4EA
  5353                           fsr0l	equ	0x4E9
  5354                           wreg	equ	0x4E8
  5355                           indf1	equ	0x4E7
  5356                           postinc1	equ	0x4E6
  5357                           postdec1	equ	0x4E5
  5358                           preinc1	equ	0x4E4
  5359                           plusw1	equ	0x4E3
  5360                           fsr1h	equ	0x4E2
  5361                           fsr1l	equ	0x4E1
  5362                           bsr	equ	0x4E0
  5363                           indf2	equ	0x4DF
  5364                           postinc2	equ	0x4DE
  5365                           postdec2	equ	0x4DD
  5366                           preinc2	equ	0x4DC
  5367                           plusw2	equ	0x4DB
  5368                           fsr2h	equ	0x4DA
  5369                           fsr2l	equ	0x4D9
  5370                           status	equ	0x4D8

Data Sizes:
    Strings     47
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      25
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[15]), STR_2(CODE[15]), STR_3(CODE[17]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[15]), STR_2(CODE[15]), STR_3(CODE[17]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[15]), STR_2(CODE[15]), STR_3(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_LCD_ESCRIBE_VAR_INT
    _MAX7219_Init->_MAX7219_WriteData2
    _MAX7219_WriteData2->___lwdiv
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _LCD_ESCRIBE_VAR_INT->___lwdiv
    ___lwdiv->___lwmod
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3732
                                             21 COMRAM     4     4      0
                   _ESCRIBE_MENSAJE2
                _LCD_ESCRIBE_VAR_INT
                 _MAX7219_WriteData2
                         _POS_CURSOR
                            ___lwdiv
                            ___lwmod
                          _configuro
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     561
                           _LCD_INIT
                       _MAX7219_Init
 ---------------------------------------------------------------------------------
 (2) _MAX7219_Init                                         0     0      0     216
                 _MAX7219_WriteData2
 ---------------------------------------------------------------------------------
 (3) _MAX7219_WriteData2                                   5     4      1     216
                                             12 COMRAM     5     4      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             2     2      0     345
                                              6 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0      90
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     105
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0      75
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _BORRAR_LCD                                           0     0      0      75
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     283
                                              5 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _ENVIA_LCD_CMD                                        3     3      0      75
                                              2 COMRAM     3     3      0
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (1) _LCD_ESCRIBE_VAR_INT                                  9     5      4    1884
                                             12 COMRAM     9     5      4
                         _ENVIA_CHAR
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     173
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     176
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1     283
                                              5 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           3     3      0      75
                                              2 COMRAM     3     3      0
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
     _strlen
   _LCD_ESCRIBE_VAR_INT
     _ENVIA_CHAR
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _MAX7219_WriteData2
     ___lwdiv (ARG)
     ___lwmod (ARG)
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   ___lwdiv
   ___lwmod
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
     _MAX7219_Init
       _MAX7219_WriteData2

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM           95      0       0      0.0%
BITBANK5           160      0       0      0.0%
BITBANK6           256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BITBIGSFRh        1100      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBIGSFRll        173      0       0      0.0%
BITBIGSFRlh          5      0       0      0.0%
COMRAM              95     25      25     26.3%
BANK5              160      0       0      0.0%
BANK6              256      0       0      0.0%
BANK7              256      0       0      0.0%
BANK8              256      0       0      0.0%
BANK9              256      0       0      0.0%
BANK10             256      0       0      0.0%
BANK11             256      0       0      0.0%
BANK12             256      0       0      0.0%
BANK13             256      0       0      0.0%
BANK14             256      0       0      0.0%
BANK15             256      0       0      0.0%
BANK16             256      0       0      0.0%
BANK17             256      0       0      0.0%
BANK18             256      0       0      0.0%
BANK19             256      0       0      0.0%
BANK20             256      0       0      0.0%
BANK21             256      0       0      0.0%
BANK22             256      0       0      0.0%
BANK23             256      0       0      0.0%
BANK24             256      0       0      0.0%
BANK25             256      0       0      0.0%
BANK26             256      0       0      0.0%
BANK27             256      0       0      0.0%
BANK28             256      0       0      0.0%
BANK29             256      0       0      0.0%
BANK30             256      0       0      0.0%
BANK31             256      0       0      0.0%
BANK32             256      0       0      0.0%
BANK33             256      0       0      0.0%
BANK34             256      0       0      0.0%
BANK35             256      0       0      0.0%
BANK36             256      0       0      0.0%
BIGRAM            8191      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      25      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Oct 19 22:41:19 2024

                          l23 301C                            l63 2CF6                            l59 2CF6  
                          l76 3024                            l93 2FE0                            u70 2FC4  
                          u71 2FC0                            u80 2FDA                            u81 2FD6  
               ENVIA_CHAR@aux 0505                           l111 302C                           l120 2F7C  
                         l105 2F10                           l114 2E82                           l211 2ECE  
                         l108 2FB0                           l117 3004                           l221 2BE0  
                         l134 2E30                           l222 2C2C                           l223 2C16  
                         l224 2C18                           l225 2C2E                           l226 2C7A  
                         l227 2C64                           l228 2C66                           l173 29DA  
                         l229 2C7C                           l730 2D6A                           l723 2D62  
                         l740 2DCE                           l733 2DC6                           l911 2FE4  
                         l913 2FF0                           l921 2F4E                           l915 2FF2  
                         l931 2F6A                           l923 2F5E                           l917 3002  
                         l909 2F48                           l933 2F70                           l925 2F60  
                         l935 2F76                           l927 2F62                           l919 2F4C  
                         l929 2F64                           l963 301E                           l971 2FDA  
                         l973 3026                           l965 2FB4                           l981 2E4A  
                         l967 2FC4                           l991 2E70                           l983 2E58  
                         l975 2E32                           l969 2FCA                           l993 2E76  
                         l985 2E5E                           l977 2E36                           l995 2E7C  
                         l987 2E64                           l979 2E3C                           l989 2E6A  
                         u410 2C5E                           u411 2C5A                           u500 2C90  
                         u420 2C7A                           u404 2C44                           u501 2C8C  
                         u421 2C76                           u405 2C40                           u430 2F3C  
                         u510 2CAE                           u431 2F38                           u511 2CAA  
                         u440 2D12                           u520 2CCC                           u441 2D0E  
                         u521 2CC8                           u450 2D30                           u530 2CEA  
                         u451 2D2C                           u531 2CE6                           u540 2F10  
                         u460 2D4C                           u380 2C10                           u541 2F0C  
                         u461 2D48                           u381 2C0C                           u470 2D7E  
                         u550 2706                           u390 2C2C                           u374 2BF6  
                         u471 2D7A                           u551 2702                           u607 2DF8  
                         u391 2C28                           u375 2BF2                           u480 2D9C  
                         u560 272A                           u481 2D98                           u561 2726  
                         u617 2E14                           u490 2DB2                           u570 2BCC  
                         u491 2DAE                           u627 2E42                           u571 2BC8  
                         u637 2E52                           u647 2F54                           u657 2F88  
                         u667 2FF8                           u587 2A9A                           u597 2DDA  
                         wreg 04E8                  ?_CURSOR_HOME 0501                ??_ENVIA_NIBBLE 0501  
              ENVIA_CHAR@dato 0504                          l1021 2E0A                          l1013 2DD0  
                        l1031 2F96                          l1023 2F80                          l1015 2DE8  
                        l1033 2F98                          l1025 2F82                          l1017 2DEA  
                        l1035 2F9E                          l1027 2F92                          l1019 2E06  
                        l1037 2FA4                          l1029 2F94                          l1039 2FAA  
                        l1411 2C1C                          l1501 2CAE                          l1421 2C68  
                        l1405 2BE2                          l1511 2ED0                          l1503 2CBA  
                        l1423 2C6A                          l1407 2C10                          l1431 2E9C  
                        l1441 2F12                          l1521 2EFE                          l1513 2EDC  
                        l1505 2CCC                          l1417 2C30                          l1409 2C1A  
                        l1433 2EA6                          l1425 2E84                          l1601 2A68  
                        l1443 2F1A                          l1515 2EDC                          l1451 2CF8  
                        l1531 271A                          l1523 2632                          l1507 2CD8  
                        l1419 2C5E                          l1435 2EB0                          l1427 2E8A  
                        l1611 2AA8                          l1603 2A72                          l1445 2F1C  
                        l1517 2EE2                          l1461 2D30                          l1453 2D00  
                        l1533 272A                          l1525 26EA                          l1509 2CEA  
                        l1437 2EBA                          l1429 2E92                          l1621 2AD8  
                        l1613 2AB2                          l1605 2A7C                          l1447 2F3C  
                        l1519 2EFC                          l1471 2D5C                          l1463 2D36  
                        l1455 2D12                          l1551 283A                          l1543 27A4  
                        l1535 2744                          l1527 26F6                          l1439 2EC4  
                        l1631 2AF4                          l1623 2AE2                          l1615 2ABA  
                        l1607 2A86                          l1465 2D4C                          l1457 2D1A  
                        l1481 2D9C                          l1473 2D6C                          l1561 28E8  
                        l1545 27C2                          l1537 2760                          l1529 2706  
                        l1633 2BB2                          l1625 2AEC                          l1617 2AC4  
                        l1609 2A90                          l1467 2D54                          l1459 2D22  
                        l1483 2DB2                          l1475 2D7E                          l1563 291A  
                        l1555 2864                          l1547 27E6                          l1539 2782  
                        l1491 3014                          l1635 2BB6                          l1619 2ACE  
                        l1469 2D56                          l1485 2DBA                          l1477 2D86  
                        l1565 294C                          l1557 288A                          l1549 2810  
                        l1573 29AC                          l1493 3018                          l1581 2A04  
                        l1487 2DC0                          l1479 2D8E                          l1559 28B6  
                        l1495 2C80                          l1399 2BD6                          l1591 2A36  
                        l1583 2A0E                          l1575 29DC                          l1569 297E  
                        l1497 2C90                          l1489 3006                          l1593 2A40  
                        l1585 2A18                          l1577 29EA                          l1499 2C9C  
                        l1595 2A4A                          l1587 2A22                          l1579 29F2  
                        l1597 2A54                          l1589 2A2C                          l1599 2A5E  
                        STR_1 2612                          STR_2 2621                          STR_3 2601  
                        _LATD 04C1                          _main 29DC                          start FFFC  
               ?_CURSOR_ONOFF 0501                  ___param_bank 0000               ??_ENVIA_LCD_CMD 0503  
            __end_of_LCD_INIT 2E32                  main@contador 0518                         ?_main 0501  
             __end_of___lwdiv 2D6C               __end_of___lwmod 2DD0                         _OSCEN 00B3  
                       _PORTD 04D1                         _TRISD 04C9                         _TRISE 04CA  
                 ?_POS_CURSOR 0506   __end_of_LCD_ESCRIBE_VAR_INT 29DC                         tablat 04F5  
        __end_of_MAX7219_Init 2ED0                         status 04D8                ??_CURSOR_ONOFF 0506  
             __initialization 302E                  __end_of_main 2BD4     LCD_ESCRIBE_VAR_INT@decena 0514  
                      ??_main 0516                 __activetblptr 0003     LCD_ESCRIBE_VAR_INT@millar 0512  
   LCD_ESCRIBE_VAR_INT@numero 050D     LCD_ESCRIBE_VAR_INT@unidad 0515                        _ANSELD 0418  
                      _ANSELE 0420                        _OSCFRQ 00B1          __end_of_ENVIA_NIBBLE 3006  
                   ??___lwdiv 050A                     ??___lwmod 0505                        isa$std 0001  
                      _strlen 2F12                  __mediumconst 0000                        tblptrh 04F7  
                      tblptrl 04F6                        tblptru 04F8                  ??_BORRAR_LCD 0506  
                   ?_LCD_INIT 0501                    __accesstop 0560       __end_of__initialization 302E  
                ??_LCD_CONFIG 0506                 ___rparam_used 0001                  ??_ENVIA_CHAR 0503  
              __pcstackCOMRAM 0501            __end_of_BORRAR_LCD 302E              _ESCRIBE_MENSAJE2 2ED0  
            ENVIA_LCD_CMD@aux 0505          __end_of_CURSOR_ONOFF 2FE2            __end_of_LCD_CONFIG 2E84  
          __end_of_ENVIA_CHAR 2FB2    LCD_ESCRIBE_VAR_INT@centena 0513                    ??_LCD_INIT 0507  
            ENVIA_NIBBLE@dato 0502                  _MAX7219_Init 2E84                       ?_strlen 0501  
                     _OSCCON1 00AD                  ??_POS_CURSOR 0507                       __Hparam 0000  
                     __Lparam 0000             __end_of_configuro 301E                       ___lwdiv 2CF8  
                     ___lwmod 2D6C                  __psmallconst 2600         __end_of_ENVIA_LCD_CMD 2F7E  
                     __pcinit 302E            __end_of_POS_CURSOR 2CF8                       __ramtop 2600  
                     __ptext0 29DC                       __ptext1 3006                       __ptext2 2E84  
                     __ptext3 2BD4                       __ptext4 2DD0                       __ptext5 2E32  
                     __ptext6 2FB2                       __ptext7 301E                       __ptext8 3026  
                     __ptext9 2C7E                  _ENVIA_NIBBLE 2FE2          end_of_initialization 302E  
                     strlen@a 0503                       strlen@s 0501        MAX7219_WriteData2@dato 050D  
   MAX7219_WriteData2@comando 0510             ESCRIBE_MENSAJE2@i 0509    __end_of_MAX7219_WriteData2 2C7E  
                   _TRISCbits 04C8      __end_of_ESCRIBE_MENSAJE2 2F12                  _CURSOR_ONOFF 2FB2  
          CURSOR_ONOFF@estado 0506                __end_of_strlen 2F4A                 ??_CURSOR_HOME 0506  
         start_initialization 302E             ENVIA_LCD_CMD@dato 0504   LCD_ESCRIBE_VAR_INT@d_millar 0511  
                    ??_strlen 0503           __end_of_CURSOR_HOME 3026              ___lwdiv@dividend 0506  
                    ?___lwdiv 0506                      ?___lwmod 0501                     _configuro 3006  
                 __smallconst 2600           _LCD_ESCRIBE_VAR_INT 2632              ___lwdiv@quotient 050A  
                    _LCD_INIT 2DD0                      _LATCbits 04C0                      _LATDbits 04C1  
                    _LATEbits 04C2          ?_LCD_ESCRIBE_VAR_INT 050D                POS_CURSOR@fila 0507  
                  ?_configuro 0501        ESCRIBE_MENSAJE2@cadena 0506                   _CURSOR_HOME 301E  
    LCD_ESCRIBE_VAR_INT@punto 0510            _MAX7219_WriteData2 2BD4         ??_LCD_ESCRIBE_VAR_INT 0511  
                    __Hrparam 0000             ?_ESCRIBE_MENSAJE2 0506                      __Lrparam 0000  
         ?_MAX7219_WriteData2 050D            ??_ESCRIBE_MENSAJE2 0507                    _ANSELCbits 0410  
             ___lwdiv@divisor 0508          ??_MAX7219_WriteData2 050E               ___lwdiv@counter 050C  
                    __ptext10 2F4A                      __ptext11 2632                      __ptext12 2D6C  
                    __ptext13 2CF8                      __ptext14 2ED0                      __ptext15 2F12  
                    __ptext16 2F7E                      __ptext17 2FE2  LCD_ESCRIBE_VAR_INT@n_digitos 050F  
                  _BORRAR_LCD 3026                    _LCD_CONFIG 2E32                    _ENVIA_CHAR 2F7E  
                    isa$xinst 0000                 _ENVIA_LCD_CMD 2F4A                   ??_configuro 0512  
               ?_MAX7219_Init 0501              ___lwmod@dividend 0501                ?_ENVIA_LCD_CMD 0501  
              ??_MAX7219_Init 0512               ___lwmod@divisor 0503               ___lwmod@counter 0505  
         ESCRIBE_MENSAJE2@tam 0508                   ?_BORRAR_LCD 0501                 ?_ENVIA_NIBBLE 0501  
                  _POS_CURSOR 2C7E       MAX7219_WriteData2@var_x 0511                   ?_LCD_CONFIG 0501  
                 ?_ENVIA_CHAR 0501             POS_CURSOR@columna 0506  
