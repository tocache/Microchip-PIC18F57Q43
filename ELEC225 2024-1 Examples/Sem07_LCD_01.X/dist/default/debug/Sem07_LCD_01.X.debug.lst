

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon May 06 11:57:17 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=4,class=CODE,delta=1
    28                           	psect	text19,global,reloc=4,class=CODE,delta=1
    29                           	psect	text20,global,reloc=4,class=CODE,delta=1
    30                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 18/12/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F57Q43 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     _TRISB	set	1223
    70   000000                     _LATD	set	1217
    71   000000                     _OSCCON1	set	173
    72   000000                     _ANSELD	set	1048
    73   000000                     _LATDbits	set	1217
    74   000000                     _TRISAbits	set	1222
    75   000000                     _TRISCbits	set	1224
    76   000000                     _TRISD	set	1225
    77   000000                     _PORTD	set	1233
    78   000000                     _INTCON0bits	set	1238
    79   000000                     _PIE1bits	set	1183
    80   000000                     _LATCbits	set	1216
    81   000000                     _OSCFRQ	set	177
    82   000000                     _OSCEN	set	179
    83   000000                     _ADRESL	set	1002
    84   000000                     _ADRESH	set	1003
    85   000000                     _ADPCH	set	1004
    86   000000                     _ADCON0bits	set	1011
    87   000000                     _ANSELAbits	set	1024
    88   000000                     _ANSELCbits	set	1040
    89   000000                     _ANSELB	set	1032
    90   000000                     _WPUB	set	1033
    91   000000                     _PIE6bits	set	1188
    92   000000                     _PIE10bits	set	1192
    93   000000                     _PIR1bits	set	1199
    94   000000                     _PIR6bits	set	1204
    95   000000                     _PIR10bits	set	1208
    96                           
    97                           	psect	smallconst
    98   002500                     __psmallconst:
    99                           	callstack 0
   100   002500  00                 	db	0
   101   002501                     STR_1:
   102   002501  48                 	db	72	;'H'
   103   002502  4F                 	db	79	;'O'
   104   002503  4C                 	db	76	;'L'
   105   002504  41                 	db	65	;'A'
   106   002505  20                 	db	32
   107   002506  4D                 	db	77	;'M'
   108   002507  55                 	db	85	;'U'
   109   002508  4E                 	db	78	;'N'
   110   002509  44                 	db	68	;'D'
   111   00250A  4F                 	db	79	;'O'
   112   00250B  21                 	db	33
   113   00250C  00                 	db	0
   114   00250D                     STR_3:
   115   00250D  50                 	db	80	;'P'
   116   00250E  6F                 	db	111	;'o'
   117   00250F  74                 	db	116	;'t'
   118   002510  20                 	db	32
   119   002511  76                 	db	118	;'v'
   120   002512  61                 	db	97	;'a'
   121   002513  6C                 	db	108	;'l'
   122   002514  75                 	db	117	;'u'
   123   002515  65                 	db	101	;'e'
   124   002516  3A                 	db	58	;':'
   125   002517  00                 	db	0
   126   002518                     STR_2:
   127   002518  41                 	db	65	;'A'
   128   002519  2F                 	db	47
   129   00251A  44                 	db	68	;'D'
   130   00251B  20                 	db	32
   131   00251C  43                 	db	67	;'C'
   132   00251D  68                 	db	104	;'h'
   133   00251E  30                 	db	48	;'0'
   134   00251F  3A                 	db	58	;':'
   135   002520  00                 	db	0
   136   002521                     STR_4:
   137   002521  56                 	db	86	;'V'
   138   002522  6F                 	db	111	;'o'
   139   002523  6C                 	db	108	;'l'
   140   002524  74                 	db	116	;'t'
   141   002525  61                 	db	97	;'a'
   142   002526  67                 	db	103	;'g'
   143   002527  65                 	db	101	;'e'
   144   002528  3A                 	db	58	;':'
   145   002529  00                 	db	0
   146   00252A  00                 	db	0	; dummy byte at the end
   147   000000                     
   148                           ; #config settings
   149                           
   150                           	psect	cinit
   151   002B88                     __pcinit:
   152                           	callstack 0
   153   002B88                     start_initialization:
   154                           	callstack 0
   155   002B88                     __initialization:
   156                           	callstack 0
   157                           
   158                           ; Clear objects allocated to COMRAM (1 bytes)
   159   002B88  6A17               	clrf	__pbssCOMRAM& (0+255),c
   160                           
   161                           ;
   162                           ; Setup IVTBASE
   163                           ;
   164   002B8A  0104               	movlb	4
   165   002B8C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   166   002B8E  6F5D               	movwf	93,b
   167   002B90  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   168   002B92  6F5E               	movwf	94,b
   169   002B94  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   170   002B96  6F5F               	movwf	95,b
   171   002B98                     end_of_initialization:
   172                           	callstack 0
   173   002B98                     __end_of__initialization:
   174                           	callstack 0
   175   002B98  0100               	movlb	0
   176   002B9A  EF50  F013         	goto	_main	;jump to C main() function
   177                           
   178                           	psect	bssCOMRAM
   179   000517                     __pbssCOMRAM:
   180                           	callstack 0
   181   000517                     _pantalla:
   182                           	callstack 0
   183   000517                     	ds	1
   184                           
   185                           	psect	cstackCOMRAM
   186   000501                     __pcstackCOMRAM:
   187                           	callstack 0
   188   000501                     ?_strlen:
   189                           	callstack 0
   190   000501                     ?_tomamuestra_ADC:
   191                           	callstack 0
   192   000501                     ?___lwmod:
   193                           	callstack 0
   194   000501                     ENVIA_NIBBLE@dato:
   195                           	callstack 0
   196   000501                     LEER_LCD@aux:
   197                           	callstack 0
   198   000501                     strlen@s:
   199                           	callstack 0
   200   000501                     ___lwmod@dividend:
   201                           	callstack 0
   202                           
   203                           ; 2 bytes @ 0x0
   204   000501                     	ds	1
   205   000502                     ENVIA_CHAR@dato:
   206                           	callstack 0
   207   000502                     ENVIA_LCD_CMD@dato:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0x1
   211   000502                     	ds	1
   212   000503                     ??_tomamuestra_ADC:
   213   000503                     ENVIA_CHAR@aux:
   214                           	callstack 0
   215   000503                     ENVIA_LCD_CMD@aux:
   216                           	callstack 0
   217   000503                     strlen@a:
   218                           	callstack 0
   219   000503                     ___lwmod@divisor:
   220                           	callstack 0
   221                           
   222                           ; 2 bytes @ 0x2
   223   000503                     	ds	1
   224   000504                     ??_LCD_CONFIG:
   225   000504                     POS_CURSOR@columna:
   226                           	callstack 0
   227   000504                     CURSOR_ONOFF@estado:
   228                           	callstack 0
   229   000504                     ESCRIBE_MENSAJE2@cadena:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0x3
   233   000504                     	ds	1
   234   000505                     ??_ESCRIBE_MENSAJE2:
   235   000505                     ??_LCD_INIT:
   236   000505                     POS_CURSOR@fila:
   237                           	callstack 0
   238   000505                     ___lwmod@counter:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x4
   242   000505                     	ds	1
   243   000506                     ?___lwdiv:
   244                           	callstack 0
   245   000506                     ESCRIBE_MENSAJE2@tam:
   246                           	callstack 0
   247   000506                     ___lwdiv@dividend:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x5
   251   000506                     	ds	1
   252   000507                     ESCRIBE_MENSAJE2@i:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x6
   256   000507                     	ds	1
   257   000508                     ___lwdiv@divisor:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x7
   261   000508                     	ds	2
   262   00050A                     ___lwdiv@quotient:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x9
   266   00050A                     	ds	2
   267   00050C                     ___lwdiv@counter:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0xB
   271   00050C                     	ds	1
   272   00050D                     LCD_ESCRIBE_VAR_INT@numero:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0xC
   276   00050D                     	ds	2
   277   00050F                     LCD_ESCRIBE_VAR_INT@n_digitos:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0xE
   281   00050F                     	ds	1
   282   000510                     LCD_ESCRIBE_VAR_INT@d_millar:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0xF
   286   000510                     	ds	1
   287   000511                     LCD_ESCRIBE_VAR_INT@millar:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x10
   291   000511                     	ds	1
   292   000512                     LCD_ESCRIBE_VAR_INT@centena:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x11
   296   000512                     	ds	1
   297   000513                     LCD_ESCRIBE_VAR_INT@decena:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x12
   301   000513                     	ds	1
   302   000514                     LCD_ESCRIBE_VAR_INT@unidad:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x13
   306   000514                     	ds	1
   307   000515                     _main$1291:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x14
   311   000515                     	ds	2
   312                           
   313 ;;
   314 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   315 ;;
   316 ;; *************** function _main *****************
   317 ;; Defined at:
   318 ;;		line 41 in file "maincode3.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   336 ;;Total ram usage:        2 bytes
   337 ;; Hardware stack levels required when called: 5
   338 ;; This function calls:
   339 ;;		_ENVIA_CHAR
   340 ;;		_ESCRIBE_MENSAJE2
   341 ;;		_LCD_ESCRIBE_VAR_INT
   342 ;;		_LCD_INIT
   343 ;;		_POS_CURSOR
   344 ;;		___lwdiv
   345 ;;		_configuro
   346 ;;		_tomamuestra_ADC
   347 ;; This function is called by:
   348 ;;		Startup code after reset
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           	psect	text0
   353   0026A0                     __ptext0:
   354                           	callstack 0
   355   0026A0                     _main:
   356                           	callstack 122
   357   0026A0                     
   358                           ;maincode3.c: 42:     configuro();
   359   0026A0  ECD6  F014         	call	_configuro	;wreg free
   360   0026A4                     
   361                           ;maincode3.c: 43:     LCD_INIT();
   362   0026A4  EC1C  F015         	call	_LCD_INIT	;wreg free
   363   0026A8                     
   364                           ;maincode3.c: 44:     POS_CURSOR(1,0);
   365   0026A8  0E00               	movlw	0
   366   0026AA  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   367   0026AC  0E01               	movlw	1
   368   0026AE  ECCA  F013         	call	_POS_CURSOR
   369   0026B2                     
   370                           ;maincode3.c: 45:     ESCRIBE_MENSAJE2("HOLA MUNDO!");
   371   0026B2  0E01               	movlw	low STR_1
   372   0026B4  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   373   0026B6  ECFA  F014         	call	_ESCRIBE_MENSAJE2	;wreg free
   374   0026BA                     l1654:
   375                           
   376                           ;maincode3.c: 47:         POS_CURSOR(2,0);
   377   0026BA  0E00               	movlw	0
   378   0026BC  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   379   0026BE  0E02               	movlw	2
   380   0026C0  ECCA  F013         	call	_POS_CURSOR
   381                           
   382                           ;maincode3.c: 48:         switch(pantalla){
   383   0026C4  EFB9  F013         	goto	l1680
   384   0026C8                     l1656:
   385                           
   386                           ;maincode3.c: 50:                 ESCRIBE_MENSAJE2("A/D Ch0:");
   387   0026C8  0E18               	movlw	low STR_2
   388   0026CA  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   389   0026CC  ECFA  F014         	call	_ESCRIBE_MENSAJE2	;wreg free
   390   0026D0                     
   391                           ;maincode3.c: 51:                 LCD_ESCRIBE_VAR_INT(tomamuestra_ADC(),4);
   392   0026D0  ECA3  F015         	call	_tomamuestra_ADC	;wreg free
   393   0026D4  C501  F50D         	movff	?_tomamuestra_ADC,LCD_ESCRIBE_VAR_INT@numero
   394   0026D8  C502  F50E         	movff	?_tomamuestra_ADC+1,LCD_ESCRIBE_VAR_INT@numero+1
   395   0026DC  0E04               	movlw	4
   396   0026DE  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   397   0026E0  EC96  F012         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   398                           
   399                           ;maincode3.c: 52:                 break;
   400   0026E4  EF5D  F013         	goto	l1654
   401   0026E8                     l1660:
   402                           
   403                           ;maincode3.c: 54:                 ESCRIBE_MENSAJE2("Pot value:");
   404   0026E8  0E0D               	movlw	low STR_3
   405   0026EA  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   406   0026EC  ECFA  F014         	call	_ESCRIBE_MENSAJE2	;wreg free
   407   0026F0                     
   408                           ;maincode3.c: 55:                 LCD_ESCRIBE_VAR_INT((tomamuestra_ADC()/410),2);
   409   0026F0  ECA3  F015         	call	_tomamuestra_ADC	;wreg free
   410   0026F4  C501  F506         	movff	?_tomamuestra_ADC,___lwdiv@dividend
   411   0026F8  C502  F507         	movff	?_tomamuestra_ADC+1,___lwdiv@dividend+1
   412   0026FC  0E01               	movlw	1
   413   0026FE  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   414   002700  0E9A               	movlw	154
   415   002702  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   416   002704  EC07  F014         	call	___lwdiv	;wreg free
   417   002708  C506  F515         	movff	?___lwdiv,_main$1291
   418   00270C  C507  F516         	movff	?___lwdiv+1,_main$1291+1
   419   002710                     
   420                           ;maincode3.c: 55:                 LCD_ESCRIBE_VAR_INT((tomamuestra_ADC()/410),2);
   421   002710  C515  F50D         	movff	_main$1291,LCD_ESCRIBE_VAR_INT@numero
   422   002714  C516  F50E         	movff	_main$1291+1,LCD_ESCRIBE_VAR_INT@numero+1
   423   002718  0E02               	movlw	2
   424   00271A  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   425   00271C  EC96  F012         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   426   002720                     
   427                           ;maincode3.c: 56:                 ENVIA_CHAR('K');
   428   002720  0E4B               	movlw	75
   429   002722  EC71  F015         	call	_ENVIA_CHAR
   430   002726                     
   431                           ;maincode3.c: 57:                 ENVIA_CHAR(0xF4);
   432   002726  0EF4               	movlw	244
   433   002728  EC71  F015         	call	_ENVIA_CHAR
   434                           
   435                           ;maincode3.c: 58:                 break;
   436   00272C  EF5D  F013         	goto	l1654
   437   002730                     l1670:
   438                           
   439                           ;maincode3.c: 60:                 ESCRIBE_MENSAJE2("Voltage:");
   440   002730  0E21               	movlw	low STR_4
   441   002732  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   442   002734  ECFA  F014         	call	_ESCRIBE_MENSAJE2	;wreg free
   443   002738                     
   444                           ;maincode3.c: 61:                 LCD_ESCRIBE_VAR_INT((tomamuestra_ADC()/820),1);
   445   002738  ECA3  F015         	call	_tomamuestra_ADC	;wreg free
   446   00273C  C501  F506         	movff	?_tomamuestra_ADC,___lwdiv@dividend
   447   002740  C502  F507         	movff	?_tomamuestra_ADC+1,___lwdiv@dividend+1
   448   002744  0E03               	movlw	3
   449   002746  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   450   002748  0E34               	movlw	52
   451   00274A  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   452   00274C  EC07  F014         	call	___lwdiv	;wreg free
   453   002750  C506  F515         	movff	?___lwdiv,_main$1291
   454   002754  C507  F516         	movff	?___lwdiv+1,_main$1291+1
   455   002758                     
   456                           ;maincode3.c: 61:                 LCD_ESCRIBE_VAR_INT((tomamuestra_ADC()/820),1);
   457   002758  C515  F50D         	movff	_main$1291,LCD_ESCRIBE_VAR_INT@numero
   458   00275C  C516  F50E         	movff	_main$1291+1,LCD_ESCRIBE_VAR_INT@numero+1
   459   002760  0E01               	movlw	1
   460   002762  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   461   002764  EC96  F012         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   462   002768                     
   463                           ;maincode3.c: 62:                 ENVIA_CHAR('V');
   464   002768  0E56               	movlw	86
   465   00276A  EC71  F015         	call	_ENVIA_CHAR
   466                           
   467                           ;maincode3.c: 63:                 break;
   468   00276E  EF5D  F013         	goto	l1654
   469   002772                     l1680:
   470   002772  5017               	movf	_pantalla^(0+1280),w,c
   471                           
   472                           ; Switch size 1, requested type "simple"
   473                           ; Number of cases is 3, Range of values is 0 to 2
   474                           ; switch strategies available:
   475                           ; Name         Instructions Cycles
   476                           ; simple_byte           10     6 (average)
   477                           ;	Chosen strategy is simple_byte
   478   002774  0A00               	xorlw	0	; case 0
   479   002776  B4D8               	btfsc	status,2,c
   480   002778  EF64  F013         	goto	l1656
   481   00277C  0A01               	xorlw	1	; case 1
   482   00277E  B4D8               	btfsc	status,2,c
   483   002780  EF74  F013         	goto	l1660
   484   002784  0A03               	xorlw	3	; case 2
   485   002786  B4D8               	btfsc	status,2,c
   486   002788  EF98  F013         	goto	l1670
   487   00278C  EF5D  F013         	goto	l1654
   488   002790  EF81  F000         	goto	start
   489   002794                     __end_of_main:
   490                           	callstack 0
   491                           
   492 ;; *************** function _tomamuestra_ADC *****************
   493 ;; Defined at:
   494 ;;		line 35 in file "maincode3.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  2    0[COMRAM] unsigned int 
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   508 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   510 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   511 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   512 ;;Total ram usage:        4 bytes
   513 ;; Hardware stack levels used: 1
   514 ;; Hardware stack levels required when called: 1
   515 ;; This function calls:
   516 ;;		Nothing
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text1
   523   002B46                     __ptext1:
   524                           	callstack 0
   525   002B46                     _tomamuestra_ADC:
   526                           	callstack 125
   527   002B46                     
   528                           ;maincode3.c: 36:     ADCON0bits.GO = 1;
   529   002B46  0103               	movlb	3	; () banked
   530   002B48  81F3               	bsf	243,0,b	;volatile
   531   002B4A                     l193:
   532                           
   533                           ; BSR set to: 3
   534   002B4A  B1F3               	btfsc	243,0,b	;volatile
   535   002B4C  EFAA  F015         	goto	u411
   536   002B50  EFAC  F015         	goto	u410
   537   002B54                     u411:
   538   002B54  EFA5  F015         	goto	l193
   539   002B58                     u410:
   540   002B58                     
   541                           ; BSR set to: 3
   542                           ;maincode3.c: 38:     return ((ADRESH << 8) + ADRESL);
   543   002B58  51EB               	movf	235,w,b	;volatile
   544   002B5A  6E04               	movwf	(??_tomamuestra_ADC+1)^(0+1280),c
   545   002B5C  6A03               	clrf	??_tomamuestra_ADC^(0+1280),c
   546   002B5E  51EA               	movf	234,w,b	;volatile
   547   002B60  2403               	addwf	??_tomamuestra_ADC^(0+1280),w,c
   548   002B62  6E01               	movwf	?_tomamuestra_ADC^(0+1280),c
   549   002B64  0E00               	movlw	0
   550   002B66  2004               	addwfc	(??_tomamuestra_ADC+1)^(0+1280),w,c
   551   002B68  6E02               	movwf	(?_tomamuestra_ADC+1)^(0+1280),c
   552   002B6A                     
   553                           ; BSR set to: 3
   554   002B6A  0012               	return		;funcret
   555   002B6C                     __end_of_tomamuestra_ADC:
   556                           	callstack 0
   557                           
   558 ;; *************** function _configuro *****************
   559 ;; Defined at:
   560 ;;		line 8 in file "maincode3.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels used: 1
   580 ;; Hardware stack levels required when called: 1
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text2
   589   0029AC                     __ptext2:
   590                           	callstack 0
   591   0029AC                     _configuro:
   592                           	callstack 125
   593   0029AC                     
   594                           ;maincode3.c: 9:     OSCCON1 = 0x60;
   595   0029AC  0E60               	movlw	96
   596   0029AE  0100               	movlb	0	; () banked
   597   0029B0  6FAD               	movwf	173,b	;volatile
   598                           
   599                           ;maincode3.c: 10:     OSCFRQ = 0x05;
   600   0029B2  0E05               	movlw	5
   601   0029B4  6FB1               	movwf	177,b	;volatile
   602                           
   603                           ;maincode3.c: 11:     OSCEN = 0x40;
   604   0029B6  0E40               	movlw	64
   605   0029B8  6FB3               	movwf	179,b	;volatile
   606   0029BA                     
   607                           ; BSR set to: 0
   608                           ;maincode3.c: 12:     TRISCbits.TRISC0 = 0;
   609   0029BA  90C8               	bcf	200,0,c	;volatile
   610   0029BC                     
   611                           ; BSR set to: 0
   612                           ;maincode3.c: 13:     ANSELCbits.ANSELC0 = 0;
   613   0029BC  0104               	movlb	4	; () banked
   614   0029BE  9110               	bcf	16,0,b	;volatile
   615   0029C0                     
   616                           ; BSR set to: 4
   617                           ;maincode3.c: 14:     LATCbits.LATC0 = 1;
   618   0029C0  80C0               	bsf	192,0,c	;volatile
   619   0029C2                     
   620                           ; BSR set to: 4
   621                           ;maincode3.c: 16:     TRISAbits.TRISA0 = 1;
   622   0029C2  80C6               	bsf	198,0,c	;volatile
   623   0029C4                     
   624                           ; BSR set to: 4
   625                           ;maincode3.c: 17:     ANSELAbits.ANSELA0 = 1;
   626   0029C4  8100               	bsf	0,0,b	;volatile
   627                           
   628                           ;maincode3.c: 18:     ADCON0bits.ADFM = 1;
   629   0029C6  0103               	movlb	3	; () banked
   630   0029C8  51F3               	movf	243,w,b	;volatile
   631   0029CA  0BF3               	andlw	-13
   632   0029CC  0904               	iorlw	4
   633   0029CE  6FF3               	movwf	243,b	;volatile
   634   0029D0                     
   635                           ; BSR set to: 3
   636                           ;maincode3.c: 19:     ADCON0bits.CS = 1;
   637   0029D0  89F3               	bsf	243,4,b	;volatile
   638                           
   639                           ;maincode3.c: 20:     ADPCH = 0x00;
   640   0029D2  0E00               	movlw	0
   641   0029D4  6FEC               	movwf	236,b	;volatile
   642   0029D6                     
   643                           ; BSR set to: 3
   644                           ;maincode3.c: 21:     ADCON0bits.ADON = 1;
   645   0029D6  8FF3               	bsf	243,7,b	;volatile
   646   0029D8                     
   647                           ; BSR set to: 3
   648                           ;maincode3.c: 23:     TRISB = 0xFF;
   649   0029D8  68C7               	setf	199,c	;volatile
   650                           
   651                           ;maincode3.c: 24:     ANSELB = 0xF0;
   652   0029DA  0EF0               	movlw	240
   653   0029DC  0104               	movlb	4	; () banked
   654   0029DE  6F08               	movwf	8,b	;volatile
   655                           
   656                           ;maincode3.c: 25:     WPUB = 0x07;
   657   0029E0  0E07               	movlw	7
   658   0029E2  6F09               	movwf	9,b	;volatile
   659   0029E4                     
   660                           ; BSR set to: 4
   661                           ;maincode3.c: 26:     INTCON0bits.INT0EDG = 0;
   662   0029E4  90D6               	bcf	214,0,c	;volatile
   663   0029E6                     
   664                           ; BSR set to: 4
   665                           ;maincode3.c: 27:     INTCON0bits.INT1EDG = 0;
   666   0029E6  92D6               	bcf	214,1,c	;volatile
   667   0029E8                     
   668                           ; BSR set to: 4
   669                           ;maincode3.c: 28:     INTCON0bits.INT2EDG = 0;
   670   0029E8  94D6               	bcf	214,2,c	;volatile
   671   0029EA                     
   672                           ; BSR set to: 4
   673                           ;maincode3.c: 29:     PIE1bits.INT0IE = 1;
   674   0029EA  809F               	bsf	159,0,c	;volatile
   675   0029EC                     
   676                           ; BSR set to: 4
   677                           ;maincode3.c: 30:     PIE6bits.INT1IE = 1;
   678   0029EC  80A4               	bsf	164,0,c	;volatile
   679   0029EE                     
   680                           ; BSR set to: 4
   681                           ;maincode3.c: 31:     PIE10bits.INT2IE = 1;
   682   0029EE  80A8               	bsf	168,0,c	;volatile
   683   0029F0                     
   684                           ; BSR set to: 4
   685                           ;maincode3.c: 32:     INTCON0bits.GIE = 1;
   686   0029F0  8ED6               	bsf	214,7,c	;volatile
   687   0029F2                     
   688                           ; BSR set to: 4
   689   0029F2  0012               	return		;funcret
   690   0029F4                     __end_of_configuro:
   691                           	callstack 0
   692                           
   693 ;; *************** function _POS_CURSOR *****************
   694 ;; Defined at:
   695 ;;		line 5 in file "LCD.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;  fila            1    wreg     unsigned char 
   698 ;;  columna         1    3[COMRAM] unsigned char 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  fila            1    4[COMRAM] unsigned char 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   710 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   711 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   714 ;;Total ram usage:        2 bytes
   715 ;; Hardware stack levels used: 1
   716 ;; Hardware stack levels required when called: 3
   717 ;; This function calls:
   718 ;;		_ENVIA_LCD_CMD
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text3
   725   002794                     __ptext3:
   726                           	callstack 0
   727   002794                     _POS_CURSOR:
   728                           	callstack 123
   729                           
   730                           ; BSR set to: 4
   731                           ;incstack = 0
   732                           ;POS_CURSOR@fila stored from wreg
   733   002794  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
   734   002796                     
   735                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
   736   002796  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
   737   002798  A4D8               	btfss	status,2,c
   738   00279A  EFD1  F013         	goto	u361
   739   00279E  EFD3  F013         	goto	u360
   740   0027A2                     u361:
   741   0027A2  EFD9  F013         	goto	l1476
   742   0027A6                     u360:
   743   0027A6                     
   744                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
   745   0027A6  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   746   0027A8  0F80               	addlw	128
   747   0027AA  EC57  F015         	call	_ENVIA_LCD_CMD
   748                           
   749                           ;LCD.c: 10:  }
   750   0027AE  EF06  F014         	goto	l32
   751   0027B2                     l1476:
   752   0027B2  0E02               	movlw	2
   753   0027B4  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   754   0027B6  A4D8               	btfss	status,2,c
   755   0027B8  EFE0  F013         	goto	u371
   756   0027BC  EFE2  F013         	goto	u370
   757   0027C0                     u371:
   758   0027C0  EFE8  F013         	goto	l1480
   759   0027C4                     u370:
   760   0027C4                     
   761                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
   762   0027C4  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   763   0027C6  0FC0               	addlw	192
   764   0027C8  EC57  F015         	call	_ENVIA_LCD_CMD
   765                           
   766                           ;LCD.c: 14:  }
   767   0027CC  EF06  F014         	goto	l32
   768   0027D0                     l1480:
   769   0027D0  0E03               	movlw	3
   770   0027D2  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   771   0027D4  A4D8               	btfss	status,2,c
   772   0027D6  EFEF  F013         	goto	u381
   773   0027DA  EFF1  F013         	goto	u380
   774   0027DE                     u381:
   775   0027DE  EFF7  F013         	goto	l1484
   776   0027E2                     u380:
   777   0027E2                     
   778                           ;LCD.c: 16:  {;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
   779   0027E2  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   780   0027E4  0F94               	addlw	148
   781   0027E6  EC57  F015         	call	_ENVIA_LCD_CMD
   782                           
   783                           ;LCD.c: 18:  }
   784   0027EA  EF06  F014         	goto	l32
   785   0027EE                     l1484:
   786   0027EE  0E04               	movlw	4
   787   0027F0  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   788   0027F2  A4D8               	btfss	status,2,c
   789   0027F4  EFFE  F013         	goto	u391
   790   0027F8  EF00  F014         	goto	u390
   791   0027FC                     u391:
   792   0027FC  EF06  F014         	goto	l28
   793   002800                     u390:
   794   002800                     
   795                           ;LCD.c: 20:  {;LCD.c: 21:   ENVIA_LCD_CMD(0xD4+columna);
   796   002800  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   797   002802  0FD4               	addlw	212
   798   002804  EC57  F015         	call	_ENVIA_LCD_CMD
   799   002808  EF06  F014         	goto	l32
   800   00280C                     l28:
   801   00280C                     l32:
   802   00280C  0012               	return		;funcret
   803   00280E                     __end_of_POS_CURSOR:
   804                           	callstack 0
   805                           
   806 ;; *************** function _LCD_INIT *****************
   807 ;; Defined at:
   808 ;;		line 192 in file "LCD.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   825 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   826 ;;Total ram usage:        1 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 4
   829 ;; This function calls:
   830 ;;		_BORRAR_LCD
   831 ;;		_CURSOR_HOME
   832 ;;		_CURSOR_ONOFF
   833 ;;		_LCD_CONFIG
   834 ;; This function is called by:
   835 ;;		_main
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text4
   840   002A38                     __ptext4:
   841                           	callstack 0
   842   002A38                     _LCD_INIT:
   843                           	callstack 122
   844   002A38                     
   845                           ;LCD.c: 193:     TRISD = 0x00;
   846   002A38  0E00               	movlw	0
   847   002A3A  6EC9               	movwf	201,c	;volatile
   848                           
   849                           ;LCD.c: 194:     ANSELD = 0x00;
   850   002A3C  0E00               	movlw	0
   851   002A3E  0104               	movlb	4	; () banked
   852   002A40  6F18               	movwf	24,b	;volatile
   853   002A42                     
   854                           ; BSR set to: 4
   855                           ;LCD.c: 195:     _delay((unsigned long)((15)*(16000000UL/4000.0)));
   856   002A42  0E4E               	movlw	78
   857   002A44  6E05               	movwf	??_LCD_INIT^(0+1280),c
   858   002A46  0EEB               	movlw	235
   859   002A48                     u517:
   860   002A48  2EE8               	decfsz	wreg,f,c
   861   002A4A  D7FE               	bra	u517
   862   002A4C  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   863   002A4E  D7FC               	bra	u517
   864   002A50  0000               	nop	
   865   002A52                     
   866                           ;LCD.c: 196:     LCD_CONFIG();
   867   002A52  ECAC  F014         	call	_LCD_CONFIG	;wreg free
   868   002A56                     
   869                           ;LCD.c: 197:     _delay((unsigned long)((15)*(16000000UL/4000.0)));
   870   002A56  0E4E               	movlw	78
   871   002A58  6E05               	movwf	??_LCD_INIT^(0+1280),c
   872   002A5A  0EEB               	movlw	235
   873   002A5C                     u527:
   874   002A5C  2EE8               	decfsz	wreg,f,c
   875   002A5E  D7FE               	bra	u527
   876   002A60  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   877   002A62  D7FC               	bra	u527
   878   002A64  0000               	nop	
   879   002A66                     
   880                           ;LCD.c: 198:     BORRAR_LCD();
   881   002A66  ECD3  F015         	call	_BORRAR_LCD	;wreg free
   882   002A6A                     
   883                           ;LCD.c: 199:     CURSOR_HOME();
   884   002A6A  ECCF  F015         	call	_CURSOR_HOME	;wreg free
   885   002A6E                     
   886                           ;LCD.c: 200:     CURSOR_ONOFF(1);
   887   002A6E  0E01               	movlw	1
   888   002A70  EC8B  F015         	call	_CURSOR_ONOFF
   889   002A74  0012               	return		;funcret
   890   002A76                     __end_of_LCD_INIT:
   891                           	callstack 0
   892                           
   893 ;; *************** function _LCD_CONFIG *****************
   894 ;; Defined at:
   895 ;;		line 109 in file "LCD.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, status,2, status,0, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   912 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   913 ;;Total ram usage:        1 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; Hardware stack levels required when called: 3
   916 ;; This function calls:
   917 ;;		_ENVIA_LCD_CMD
   918 ;;		_ENVIA_NIBBLE
   919 ;; This function is called by:
   920 ;;		_LCD_INIT
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text5
   925   002958                     __ptext5:
   926                           	callstack 0
   927   002958                     _LCD_CONFIG:
   928                           	callstack 122
   929   002958                     
   930                           ;LCD.c: 111:  LATDbits.LATD0 = 0;
   931   002958  90C1               	bcf	193,0,c	;volatile
   932                           
   933                           ;LCD.c: 112:  LATDbits.LATD1 = 0;
   934   00295A  92C1               	bcf	193,1,c	;volatile
   935   00295C                     
   936                           ;LCD.c: 113:  ENVIA_NIBBLE(0x30);
   937   00295C  0E30               	movlw	48
   938   00295E  ECB6  F015         	call	_ENVIA_NIBBLE
   939   002962                     
   940                           ;LCD.c: 114:     _delay((unsigned long)((2)*(16000000UL/4000.0)));
   941   002962  0E0B               	movlw	11
   942   002964  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   943   002966  0E62               	movlw	98
   944   002968                     u537:
   945   002968  2EE8               	decfsz	wreg,f,c
   946   00296A  D7FE               	bra	u537
   947   00296C  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   948   00296E  D7FC               	bra	u537
   949   002970  D000               	nop2	
   950   002972                     
   951                           ;LCD.c: 115:  ENVIA_NIBBLE(0x30);
   952   002972  0E30               	movlw	48
   953   002974  ECB6  F015         	call	_ENVIA_NIBBLE
   954                           
   955                           ;LCD.c: 116:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
   956   002978  0E85               	movlw	133
   957   00297A                     u547:
   958   00297A  2EE8               	decfsz	wreg,f,c
   959   00297C  D7FE               	bra	u547
   960   00297E  0000               	nop	
   961   002980                     
   962                           ;LCD.c: 117:     ENVIA_NIBBLE(0x30);
   963   002980  0E30               	movlw	48
   964   002982  ECB6  F015         	call	_ENVIA_NIBBLE
   965   002986                     
   966                           ;LCD.c: 118:  ENVIA_NIBBLE(0x20);
   967   002986  0E20               	movlw	32
   968   002988  ECB6  F015         	call	_ENVIA_NIBBLE
   969   00298C                     
   970                           ;LCD.c: 119:  ENVIA_LCD_CMD(0x01);
   971   00298C  0E01               	movlw	1
   972   00298E  EC57  F015         	call	_ENVIA_LCD_CMD
   973   002992                     
   974                           ;LCD.c: 120:  ENVIA_LCD_CMD(0x28);
   975   002992  0E28               	movlw	40
   976   002994  EC57  F015         	call	_ENVIA_LCD_CMD
   977   002998                     
   978                           ;LCD.c: 121:  ENVIA_LCD_CMD(0x0F);
   979   002998  0E0F               	movlw	15
   980   00299A  EC57  F015         	call	_ENVIA_LCD_CMD
   981   00299E                     
   982                           ;LCD.c: 122:  ENVIA_LCD_CMD(0x06);
   983   00299E  0E06               	movlw	6
   984   0029A0  EC57  F015         	call	_ENVIA_LCD_CMD
   985   0029A4                     
   986                           ;LCD.c: 123:  ENVIA_LCD_CMD(0x01);
   987   0029A4  0E01               	movlw	1
   988   0029A6  EC57  F015         	call	_ENVIA_LCD_CMD
   989   0029AA  0012               	return		;funcret
   990   0029AC                     __end_of_LCD_CONFIG:
   991                           	callstack 0
   992                           
   993 ;; *************** function _CURSOR_ONOFF *****************
   994 ;; Defined at:
   995 ;;		line 62 in file "LCD.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  estado          1    wreg     unsigned char 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  estado          1    3[COMRAM] unsigned char 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1012 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1013 ;;Total ram usage:        1 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 3
  1016 ;; This function calls:
  1017 ;;		_ENVIA_LCD_CMD
  1018 ;; This function is called by:
  1019 ;;		_LCD_INIT
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text6
  1024   002B16                     __ptext6:
  1025                           	callstack 0
  1026   002B16                     _CURSOR_ONOFF:
  1027                           	callstack 122
  1028                           
  1029                           ;incstack = 0
  1030                           ;CURSOR_ONOFF@estado stored from wreg
  1031   002B16  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  1032   002B18                     
  1033                           ;LCD.c: 62: void CURSOR_ONOFF(unsigned char estado);LCD.c: 63: {;LCD.c: 64:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1034   002B18  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  1035   002B1A  A4D8               	btfss	status,2,c
  1036   002B1C  EF92  F015         	goto	u271
  1037   002B20  EF94  F015         	goto	u270
  1038   002B24                     u271:
  1039   002B24  EF97  F015         	goto	l1374
  1040   002B28                     u270:
  1041   002B28  0E0E               	movlw	14
  1042   002B2A  EC57  F015         	call	_ENVIA_LCD_CMD
  1043   002B2E                     l1374:
  1044                           
  1045                           ;LCD.c: 65:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1046   002B2E  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  1047   002B30  A4D8               	btfss	status,2,c
  1048   002B32  EF9D  F015         	goto	u281
  1049   002B36  EF9F  F015         	goto	u280
  1050   002B3A                     u281:
  1051   002B3A  EFA2  F015         	goto	l62
  1052   002B3E                     u280:
  1053   002B3E  0E0C               	movlw	12
  1054   002B40  EC57  F015         	call	_ENVIA_LCD_CMD
  1055   002B44                     l62:
  1056   002B44  0012               	return		;funcret
  1057   002B46                     __end_of_CURSOR_ONOFF:
  1058                           	callstack 0
  1059                           
  1060 ;; *************** function _CURSOR_HOME *****************
  1061 ;; Defined at:
  1062 ;;		line 37 in file "LCD.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;		None
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, status,2, status,0, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1080 ;;Total ram usage:        0 bytes
  1081 ;; Hardware stack levels used: 1
  1082 ;; Hardware stack levels required when called: 3
  1083 ;; This function calls:
  1084 ;;		_ENVIA_LCD_CMD
  1085 ;; This function is called by:
  1086 ;;		_LCD_INIT
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           	psect	text7
  1091   002B9E                     __ptext7:
  1092                           	callstack 0
  1093   002B9E                     _CURSOR_HOME:
  1094                           	callstack 122
  1095   002B9E                     
  1096                           ;LCD.c: 39:  ENVIA_LCD_CMD(0x02);
  1097   002B9E  0E02               	movlw	2
  1098   002BA0  EC57  F015         	call	_ENVIA_LCD_CMD
  1099   002BA4  0012               	return		;funcret
  1100   002BA6                     __end_of_CURSOR_HOME:
  1101                           	callstack 0
  1102                           
  1103 ;; *************** function _BORRAR_LCD *****************
  1104 ;; Defined at:
  1105 ;;		line 104 in file "LCD.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, status,2, status,0, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1123 ;;Total ram usage:        0 bytes
  1124 ;; Hardware stack levels used: 1
  1125 ;; Hardware stack levels required when called: 3
  1126 ;; This function calls:
  1127 ;;		_ENVIA_LCD_CMD
  1128 ;; This function is called by:
  1129 ;;		_LCD_INIT
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text8
  1134   002BA6                     __ptext8:
  1135                           	callstack 0
  1136   002BA6                     _BORRAR_LCD:
  1137                           	callstack 122
  1138   002BA6                     
  1139                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x01);
  1140   002BA6  0E01               	movlw	1
  1141   002BA8  EC57  F015         	call	_ENVIA_LCD_CMD
  1142   002BAC  0012               	return		;funcret
  1143   002BAE                     __end_of_BORRAR_LCD:
  1144                           	callstack 0
  1145                           
  1146 ;; *************** function _ENVIA_LCD_CMD *****************
  1147 ;; Defined at:
  1148 ;;		line 136 in file "LCD.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;  dato            1    wreg     unsigned char 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  dato            1    1[COMRAM] unsigned char 
  1153 ;;  aux             1    2[COMRAM] unsigned char 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2, status,0, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1164 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1167 ;;Total ram usage:        2 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; Hardware stack levels required when called: 2
  1170 ;; This function calls:
  1171 ;;		_ENVIA_NIBBLE
  1172 ;;		_LEER_LCD
  1173 ;; This function is called by:
  1174 ;;		_POS_CURSOR
  1175 ;;		_CURSOR_HOME
  1176 ;;		_CURSOR_ONOFF
  1177 ;;		_BORRAR_LCD
  1178 ;;		_LCD_CONFIG
  1179 ;;		_BLINK_CURSOR
  1180 ;;		_DISPLAY_ONOFF
  1181 ;;		_CURSOR_SHIFTLEFT
  1182 ;;		_CURSOR_SHIFTRIGHT
  1183 ;;		_DISPLAY_SHIFTLEFT
  1184 ;;		_DISPLAY_SHIFTRIGHT
  1185 ;;		_GENERACARACTER
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text9
  1190   002AAE                     __ptext9:
  1191                           	callstack 0
  1192   002AAE                     _ENVIA_LCD_CMD:
  1193                           	callstack 123
  1194                           
  1195                           ;incstack = 0
  1196                           ;ENVIA_LCD_CMD@dato stored from wreg
  1197   002AAE  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1198   002AB0                     
  1199                           ;LCD.c: 136: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 137: {;LCD.c: 138:  unsigned 
      +                          char aux;;LCD.c: 139:  LATDbits.LATD0 = 0;
  1200   002AB0  90C1               	bcf	193,0,c	;volatile
  1201   002AB2                     
  1202                           ;LCD.c: 140:  LEER_LCD();
  1203   002AB2  EC41  F014         	call	_LEER_LCD	;wreg free
  1204   002AB6                     
  1205                           ;LCD.c: 141:  TRISD = 0b00000000;
  1206   002AB6  0E00               	movlw	0
  1207   002AB8  6EC9               	movwf	201,c	;volatile
  1208   002ABA                     
  1209                           ;LCD.c: 142:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1210   002ABA  0E85               	movlw	133
  1211   002ABC                     u557:
  1212   002ABC  2EE8               	decfsz	wreg,f,c
  1213   002ABE  D7FE               	bra	u557
  1214   002AC0  0000               	nop	
  1215   002AC2                     
  1216                           ;LCD.c: 143:     LATDbits.LATD1 = 0;
  1217   002AC2  92C1               	bcf	193,1,c	;volatile
  1218   002AC4                     
  1219                           ;LCD.c: 144:  LATDbits.LATD2 = 0;
  1220   002AC4  94C1               	bcf	193,2,c	;volatile
  1221   002AC6                     
  1222                           ;LCD.c: 145:  LATDbits.LATD0 = 0;
  1223   002AC6  90C1               	bcf	193,0,c	;volatile
  1224   002AC8                     
  1225                           ;LCD.c: 146:  aux = dato & 0xF0;
  1226   002AC8  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1227   002ACA  0BF0               	andlw	240
  1228   002ACC  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1229   002ACE                     
  1230                           ;LCD.c: 147:  ENVIA_NIBBLE(aux);
  1231   002ACE  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1232   002AD0  ECB6  F015         	call	_ENVIA_NIBBLE
  1233   002AD4                     
  1234                           ;LCD.c: 148:  aux = dato<<4;
  1235   002AD4  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1236   002AD6  0BF0               	andlw	240
  1237   002AD8  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1238   002ADA                     
  1239                           ;LCD.c: 149:  ENVIA_NIBBLE(aux);
  1240   002ADA  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1241   002ADC  ECB6  F015         	call	_ENVIA_NIBBLE
  1242   002AE0  0012               	return		;funcret
  1243   002AE2                     __end_of_ENVIA_LCD_CMD:
  1244                           	callstack 0
  1245                           
  1246 ;; *************** function _LCD_ESCRIBE_VAR_INT *****************
  1247 ;; Defined at:
  1248 ;;		line 224 in file "LCD.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  numero          2   12[COMRAM] unsigned int 
  1251 ;;  n_digitos       1   14[COMRAM] unsigned char 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  unidad          1   19[COMRAM] unsigned char 
  1254 ;;  decena          1   18[COMRAM] unsigned char 
  1255 ;;  centena         1   17[COMRAM] unsigned char 
  1256 ;;  millar          1   16[COMRAM] unsigned char 
  1257 ;;  d_millar        1   15[COMRAM] unsigned char 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1267 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1268 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1270 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1271 ;;Total ram usage:        8 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; Hardware stack levels required when called: 3
  1274 ;; This function calls:
  1275 ;;		_ENVIA_CHAR
  1276 ;;		___lwdiv
  1277 ;;		___lwmod
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text10
  1284   00252C                     __ptext10:
  1285                           	callstack 0
  1286   00252C                     _LCD_ESCRIBE_VAR_INT:
  1287                           	callstack 123
  1288   00252C                     
  1289                           ;LCD.c: 225:     unsigned char d_millar, millar, centena, decena, unidad;;LCD.c: 226:   
      +                            d_millar = numero / 10000;
  1290   00252C  C50D  F506         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  1291   002530  C50E  F507         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  1292   002534  0E27               	movlw	39
  1293   002536  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1294   002538  0E10               	movlw	16
  1295   00253A  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1296   00253C  EC07  F014         	call	___lwdiv	;wreg free
  1297   002540  5006               	movf	?___lwdiv^(0+1280),w,c
  1298   002542  6E10               	movwf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  1299                           
  1300                           ;LCD.c: 227:     millar = (numero % 10000) / 1000;
  1301   002544  0E27               	movlw	39
  1302   002546  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1303   002548  0E10               	movlw	16
  1304   00254A  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1305   00254C  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1306   002550  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1307   002554  EC7A  F014         	call	___lwmod	;wreg free
  1308   002558  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1309   00255C  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1310   002560  0E03               	movlw	3
  1311   002562  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1312   002564  0EE8               	movlw	232
  1313   002566  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1314   002568  EC07  F014         	call	___lwdiv	;wreg free
  1315   00256C  5006               	movf	?___lwdiv^(0+1280),w,c
  1316   00256E  6E11               	movwf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),c
  1317                           
  1318                           ;LCD.c: 228:     centena = (numero % 1000) / 100;
  1319   002570  0E03               	movlw	3
  1320   002572  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1321   002574  0EE8               	movlw	232
  1322   002576  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1323   002578  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1324   00257C  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1325   002580  EC7A  F014         	call	___lwmod	;wreg free
  1326   002584  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1327   002588  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1328   00258C  0E00               	movlw	0
  1329   00258E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1330   002590  0E64               	movlw	100
  1331   002592  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1332   002594  EC07  F014         	call	___lwdiv	;wreg free
  1333   002598  5006               	movf	?___lwdiv^(0+1280),w,c
  1334   00259A  6E12               	movwf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),c
  1335                           
  1336                           ;LCD.c: 229:     decena = (numero % 100) / 10;
  1337   00259C  0E00               	movlw	0
  1338   00259E  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1339   0025A0  0E64               	movlw	100
  1340   0025A2  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1341   0025A4  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1342   0025A8  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1343   0025AC  EC7A  F014         	call	___lwmod	;wreg free
  1344   0025B0  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1345   0025B4  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1346   0025B8  0E00               	movlw	0
  1347   0025BA  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1348   0025BC  0E0A               	movlw	10
  1349   0025BE  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1350   0025C0  EC07  F014         	call	___lwdiv	;wreg free
  1351   0025C4  5006               	movf	?___lwdiv^(0+1280),w,c
  1352   0025C6  6E13               	movwf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),c
  1353                           
  1354                           ;LCD.c: 230:     unidad = numero % 10;
  1355   0025C8  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1356   0025CC  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1357   0025D0  0E00               	movlw	0
  1358   0025D2  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1359   0025D4  0E0A               	movlw	10
  1360   0025D6  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1361   0025D8  EC7A  F014         	call	___lwmod	;wreg free
  1362   0025DC  5001               	movf	?___lwmod^(0+1280),w,c
  1363   0025DE  6E14               	movwf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),c
  1364                           
  1365                           ;LCD.c: 231:     switch(n_digitos){
  1366   0025E0  EF38  F013         	goto	l1528
  1367   0025E4                     l1516:
  1368                           
  1369                           ;LCD.c: 233:             ENVIA_CHAR(unidad+0x30);
  1370   0025E4  5014               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1371   0025E6  0F30               	addlw	48
  1372   0025E8  EC71  F015         	call	_ENVIA_CHAR
  1373                           
  1374                           ;LCD.c: 234:             break;
  1375   0025EC  EF4F  F013         	goto	l121
  1376   0025F0                     l1518:
  1377                           
  1378                           ;LCD.c: 236:             ENVIA_CHAR(decena+0x30);
  1379   0025F0  5013               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1380   0025F2  0F30               	addlw	48
  1381   0025F4  EC71  F015         	call	_ENVIA_CHAR
  1382                           
  1383                           ;LCD.c: 237:             ENVIA_CHAR(unidad+0x30);
  1384   0025F8  5014               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1385   0025FA  0F30               	addlw	48
  1386   0025FC  EC71  F015         	call	_ENVIA_CHAR
  1387                           
  1388                           ;LCD.c: 238:             break;
  1389   002600  EF4F  F013         	goto	l121
  1390   002604                     l1520:
  1391                           
  1392                           ;LCD.c: 240:             ENVIA_CHAR(centena+0x30);
  1393   002604  5012               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1394   002606  0F30               	addlw	48
  1395   002608  EC71  F015         	call	_ENVIA_CHAR
  1396                           
  1397                           ;LCD.c: 241:             ENVIA_CHAR(decena+0x30);
  1398   00260C  5013               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1399   00260E  0F30               	addlw	48
  1400   002610  EC71  F015         	call	_ENVIA_CHAR
  1401                           
  1402                           ;LCD.c: 242:             ENVIA_CHAR(unidad+0x30);
  1403   002614  5014               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1404   002616  0F30               	addlw	48
  1405   002618  EC71  F015         	call	_ENVIA_CHAR
  1406                           
  1407                           ;LCD.c: 243:             break;
  1408   00261C  EF4F  F013         	goto	l121
  1409   002620                     l1522:
  1410                           
  1411                           ;LCD.c: 245:             ENVIA_CHAR(millar+0x30);
  1412   002620  5011               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  1413   002622  0F30               	addlw	48
  1414   002624  EC71  F015         	call	_ENVIA_CHAR
  1415                           
  1416                           ;LCD.c: 246:             ENVIA_CHAR(centena+0x30);
  1417   002628  5012               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1418   00262A  0F30               	addlw	48
  1419   00262C  EC71  F015         	call	_ENVIA_CHAR
  1420                           
  1421                           ;LCD.c: 247:             ENVIA_CHAR(decena+0x30);
  1422   002630  5013               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1423   002632  0F30               	addlw	48
  1424   002634  EC71  F015         	call	_ENVIA_CHAR
  1425                           
  1426                           ;LCD.c: 248:             ENVIA_CHAR(unidad+0x30);
  1427   002638  5014               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1428   00263A  0F30               	addlw	48
  1429   00263C  EC71  F015         	call	_ENVIA_CHAR
  1430                           
  1431                           ;LCD.c: 249:             break;
  1432   002640  EF4F  F013         	goto	l121
  1433   002644                     l1524:
  1434                           
  1435                           ;LCD.c: 251:             ENVIA_CHAR(d_millar+0x30);
  1436   002644  5010               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  1437   002646  0F30               	addlw	48
  1438   002648  EC71  F015         	call	_ENVIA_CHAR
  1439                           
  1440                           ;LCD.c: 252:             ENVIA_CHAR(millar+0x30);
  1441   00264C  5011               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  1442   00264E  0F30               	addlw	48
  1443   002650  EC71  F015         	call	_ENVIA_CHAR
  1444                           
  1445                           ;LCD.c: 253:             ENVIA_CHAR(centena+0x30);
  1446   002654  5012               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1447   002656  0F30               	addlw	48
  1448   002658  EC71  F015         	call	_ENVIA_CHAR
  1449                           
  1450                           ;LCD.c: 254:             ENVIA_CHAR(decena+0x30);
  1451   00265C  5013               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1452   00265E  0F30               	addlw	48
  1453   002660  EC71  F015         	call	_ENVIA_CHAR
  1454                           
  1455                           ;LCD.c: 255:             ENVIA_CHAR(unidad+0x30);
  1456   002664  5014               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1457   002666  0F30               	addlw	48
  1458   002668  EC71  F015         	call	_ENVIA_CHAR
  1459                           
  1460                           ;LCD.c: 256:             break;
  1461   00266C  EF4F  F013         	goto	l121
  1462   002670                     l1528:
  1463   002670  500F               	movf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  1464                           
  1465                           ; Switch size 1, requested type "simple"
  1466                           ; Number of cases is 5, Range of values is 1 to 5
  1467                           ; switch strategies available:
  1468                           ; Name         Instructions Cycles
  1469                           ; simple_byte           16     9 (average)
  1470                           ;	Chosen strategy is simple_byte
  1471   002672  0A01               	xorlw	1	; case 1
  1472   002674  B4D8               	btfsc	status,2,c
  1473   002676  EFF2  F012         	goto	l1516
  1474   00267A  0A03               	xorlw	3	; case 2
  1475   00267C  B4D8               	btfsc	status,2,c
  1476   00267E  EFF8  F012         	goto	l1518
  1477   002682  0A01               	xorlw	1	; case 3
  1478   002684  B4D8               	btfsc	status,2,c
  1479   002686  EF02  F013         	goto	l1520
  1480   00268A  0A07               	xorlw	7	; case 4
  1481   00268C  B4D8               	btfsc	status,2,c
  1482   00268E  EF10  F013         	goto	l1522
  1483   002692  0A01               	xorlw	1	; case 5
  1484   002694  B4D8               	btfsc	status,2,c
  1485   002696  EF22  F013         	goto	l1524
  1486   00269A  EF4F  F013         	goto	l121
  1487   00269E                     l121:
  1488   00269E  0012               	return		;funcret
  1489   0026A0                     __end_of_LCD_ESCRIBE_VAR_INT:
  1490                           	callstack 0
  1491                           
  1492 ;; *************** function ___lwmod *****************
  1493 ;; Defined at:
  1494 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  dividend        2    0[COMRAM] unsigned int 
  1497 ;;  divisor         2    2[COMRAM] unsigned int 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  counter         1    4[COMRAM] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  2    0[COMRAM] unsigned int 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1509 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1512 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1513 ;;Total ram usage:        5 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 1
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_LCD_ESCRIBE_VAR_INT
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text11
  1524   0028F4                     __ptext11:
  1525                           	callstack 0
  1526   0028F4                     ___lwmod:
  1527                           	callstack 124
  1528   0028F4  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1529   0028F6  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  1530   0028F8  B4D8               	btfsc	status,2,c
  1531   0028FA  EF81  F014         	goto	u331
  1532   0028FE  EF83  F014         	goto	u330
  1533   002902                     u331:
  1534   002902  EFA7  F014         	goto	l728
  1535   002906                     u330:
  1536   002906  0E01               	movlw	1
  1537   002908  6E05               	movwf	___lwmod@counter^(0+1280),c
  1538   00290A  EF8B  F014         	goto	l1462
  1539   00290E                     l1460:
  1540   00290E  90D8               	bcf	status,0,c
  1541   002910  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  1542   002912  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  1543   002914  2A05               	incf	___lwmod@counter^(0+1280),f,c
  1544   002916                     l1462:
  1545   002916  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  1546   002918  EF90  F014         	goto	u341
  1547   00291C  EF92  F014         	goto	u340
  1548   002920                     u341:
  1549   002920  EF87  F014         	goto	l1460
  1550   002924                     u340:
  1551   002924                     l1464:
  1552   002924  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1553   002926  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  1554   002928  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1555   00292A  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  1556   00292C  A0D8               	btfss	status,0,c
  1557   00292E  EF9B  F014         	goto	u351
  1558   002932  EF9D  F014         	goto	u350
  1559   002936                     u351:
  1560   002936  EFA1  F014         	goto	l1468
  1561   00293A                     u350:
  1562   00293A  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1563   00293C  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  1564   00293E  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1565   002940  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  1566   002942                     l1468:
  1567   002942  90D8               	bcf	status,0,c
  1568   002944  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  1569   002946  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  1570   002948  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  1571   00294A  EF92  F014         	goto	l1464
  1572   00294E                     l728:
  1573   00294E  C501  F501         	movff	___lwmod@dividend,?___lwmod
  1574   002952  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  1575   002956  0012               	return		;funcret
  1576   002958                     __end_of___lwmod:
  1577                           	callstack 0
  1578                           
  1579 ;; *************** function ___lwdiv *****************
  1580 ;; Defined at:
  1581 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  dividend        2    5[COMRAM] unsigned int 
  1584 ;;  divisor         2    7[COMRAM] unsigned int 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  quotient        2    9[COMRAM] unsigned int 
  1587 ;;  counter         1   11[COMRAM] unsigned char 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  2    5[COMRAM] unsigned int 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1597 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1598 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1600 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1601 ;;Total ram usage:        7 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 1
  1604 ;; This function calls:
  1605 ;;		Nothing
  1606 ;; This function is called by:
  1607 ;;		_LCD_ESCRIBE_VAR_INT
  1608 ;;		_main
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text12
  1613   00280E                     __ptext12:
  1614                           	callstack 0
  1615   00280E                     ___lwdiv:
  1616                           	callstack 125
  1617   00280E  0E00               	movlw	0
  1618   002810  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  1619   002812  0E00               	movlw	0
  1620   002814  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  1621   002816  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1622   002818  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  1623   00281A  B4D8               	btfsc	status,2,c
  1624   00281C  EF12  F014         	goto	u301
  1625   002820  EF14  F014         	goto	u300
  1626   002824                     u301:
  1627   002824  EF3C  F014         	goto	l718
  1628   002828                     u300:
  1629   002828  0E01               	movlw	1
  1630   00282A  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  1631   00282C  EF1C  F014         	goto	l1442
  1632   002830                     l1440:
  1633   002830  90D8               	bcf	status,0,c
  1634   002832  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  1635   002834  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1636   002836  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  1637   002838                     l1442:
  1638   002838  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  1639   00283A  EF21  F014         	goto	u311
  1640   00283E  EF23  F014         	goto	u310
  1641   002842                     u311:
  1642   002842  EF18  F014         	goto	l1440
  1643   002846                     u310:
  1644   002846                     l1444:
  1645   002846  90D8               	bcf	status,0,c
  1646   002848  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  1647   00284A  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  1648   00284C  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1649   00284E  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  1650   002850  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1651   002852  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  1652   002854  A0D8               	btfss	status,0,c
  1653   002856  EF2F  F014         	goto	u321
  1654   00285A  EF31  F014         	goto	u320
  1655   00285E                     u321:
  1656   00285E  EF36  F014         	goto	l1452
  1657   002862                     u320:
  1658   002862  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1659   002864  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  1660   002866  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1661   002868  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  1662   00286A  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  1663   00286C                     l1452:
  1664   00286C  90D8               	bcf	status,0,c
  1665   00286E  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1666   002870  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  1667   002872  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  1668   002874  EF23  F014         	goto	l1444
  1669   002878                     l718:
  1670   002878  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  1671   00287C  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1672   002880  0012               	return		;funcret
  1673   002882                     __end_of___lwdiv:
  1674                           	callstack 0
  1675                           
  1676 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  1677 ;; Defined at:
  1678 ;;		line 77 in file "LCD.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  1681 ;;		 -> STR_4(9), STR_3(11), STR_2(9), STR_1(12), 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  i               1    6[COMRAM] unsigned char 
  1684 ;;  tam             1    5[COMRAM] unsigned char 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1694 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1697 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1698 ;;Total ram usage:        4 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; Hardware stack levels required when called: 3
  1701 ;; This function calls:
  1702 ;;		_ENVIA_CHAR
  1703 ;;		_strlen
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text13
  1710   0029F4                     __ptext13:
  1711                           	callstack 0
  1712   0029F4                     _ESCRIBE_MENSAJE2:
  1713                           	callstack 123
  1714   0029F4                     
  1715                           ;LCD.c: 77: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 78: {;LCD.c: 79:     unsign
      +                          ed char tam;;LCD.c: 80:     tam = strlen(cadena);
  1716   0029F4  C504  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  1717   0029F8  EC3B  F015         	call	_strlen	;wreg free
  1718   0029FC  5001               	movf	?_strlen^(0+1280),w,c
  1719   0029FE  6E06               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  1720   002A00                     
  1721                           ;LCD.c: 82:  for(i = 0; i<tam; i++)
  1722   002A00  0E00               	movlw	0
  1723   002A02  6E07               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  1724   002A04  EF12  F015         	goto	l1498
  1725   002A08                     l1494:
  1726                           
  1727                           ;LCD.c: 83:  {;LCD.c: 84:   ENVIA_CHAR(cadena[i]);
  1728   002A08  5004               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  1729   002A0A  2407               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1730   002A0C  6E05               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  1731   002A0E  C505  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  1732   002A12                     	if	1	;There is more than 1 active tblptr byte
  1733   002A12  0E25               	movlw	high __smallconst
  1734   002A14  6EF7               	movwf	tblptrh,c
  1735   002A16                     	endif
  1736   002A16                     	if	0	;tblptru may be non-zero
  1737   002A16                     	endif
  1738   002A16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1739   002A16  0E00               	movlw	low (__smallconst shr (0+16))
  1740   002A18  6EF8               	movwf	tblptru,c
  1741   002A1A                     	endif
  1742   002A1A  0008               	tblrd		*
  1743   002A1C  50F5               	movf	tablat,w,c
  1744   002A1E  EC71  F015         	call	_ENVIA_CHAR
  1745   002A22                     
  1746                           ;LCD.c: 85:  }
  1747   002A22  2A07               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  1748   002A24                     l1498:
  1749   002A24  5006               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  1750   002A26  5C07               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1751   002A28  A0D8               	btfss	status,0,c
  1752   002A2A  EF19  F015         	goto	u401
  1753   002A2E  EF1B  F015         	goto	u400
  1754   002A32                     u401:
  1755   002A32  EF04  F015         	goto	l1494
  1756   002A36                     u400:
  1757   002A36  0012               	return		;funcret
  1758   002A38                     __end_of_ESCRIBE_MENSAJE2:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _strlen *****************
  1762 ;; Defined at:
  1763 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  s               1    0[COMRAM] PTR const unsigned char 
  1766 ;;		 -> STR_4(9), STR_3(11), STR_2(9), STR_1(12), 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  a               1    2[COMRAM] PTR const unsigned char 
  1769 ;;		 -> STR_4(9), STR_3(11), STR_2(9), STR_1(12), 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  2    0[COMRAM] unsigned int 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1782 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1783 ;;Total ram usage:        3 bytes
  1784 ;; Hardware stack levels used: 1
  1785 ;; Hardware stack levels required when called: 1
  1786 ;; This function calls:
  1787 ;;		Nothing
  1788 ;; This function is called by:
  1789 ;;		_ESCRIBE_MENSAJE2
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text14
  1794   002A76                     __ptext14:
  1795                           	callstack 0
  1796   002A76                     _strlen:
  1797                           	callstack 124
  1798   002A76  C501  F503         	movff	strlen@s,strlen@a
  1799   002A7A  EF40  F015         	goto	l1404
  1800   002A7E                     l1402:
  1801   002A7E  2A01               	incf	strlen@s^(0+1280),f,c
  1802   002A80                     l1404:
  1803   002A80  C501  F4F6         	movff	strlen@s,tblptrl
  1804   002A84                     	if	1	;There is more than 1 active tblptr byte
  1805   002A84  0E25               	movlw	high __smallconst
  1806   002A86  6EF7               	movwf	tblptrh,c
  1807   002A88                     	endif
  1808   002A88                     	if	0	;tblptru may be non-zero
  1809   002A88                     	endif
  1810   002A88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1811   002A88  0E00               	movlw	low (__smallconst shr (0+16))
  1812   002A8A  6EF8               	movwf	tblptru,c
  1813   002A8C                     	endif
  1814   002A8C  0008               	tblrd		*
  1815   002A8E  50F5               	movf	tablat,w,c
  1816   002A90  0900               	iorlw	0
  1817   002A92  A4D8               	btfss	status,2,c
  1818   002A94  EF4E  F015         	goto	u291
  1819   002A98  EF50  F015         	goto	u290
  1820   002A9C                     u291:
  1821   002A9C  EF3F  F015         	goto	l1402
  1822   002AA0                     u290:
  1823   002AA0  5003               	movf	strlen@a^(0+1280),w,c
  1824   002AA2  5C01               	subwf	strlen@s^(0+1280),w,c
  1825   002AA4  6E01               	movwf	?_strlen^(0+1280),c
  1826   002AA6  6A02               	clrf	(?_strlen+1)^(0+1280),c
  1827   002AA8  BE01               	btfsc	?_strlen^(0+1280),7,c
  1828   002AAA  0602               	decf	(?_strlen+1)^(0+1280),f,c
  1829   002AAC  0012               	return		;funcret
  1830   002AAE                     __end_of_strlen:
  1831                           	callstack 0
  1832                           
  1833 ;; *************** function _ENVIA_CHAR *****************
  1834 ;; Defined at:
  1835 ;;		line 88 in file "LCD.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  dato            1    wreg     unsigned char 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  dato            1    1[COMRAM] unsigned char 
  1840 ;;  aux             1    2[COMRAM] unsigned char 
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1853 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1854 ;;Total ram usage:        2 bytes
  1855 ;; Hardware stack levels used: 1
  1856 ;; Hardware stack levels required when called: 2
  1857 ;; This function calls:
  1858 ;;		_ENVIA_NIBBLE
  1859 ;;		_LEER_LCD
  1860 ;; This function is called by:
  1861 ;;		_ESCRIBE_MENSAJE2
  1862 ;;		_LCD_ESCRIBE_VAR_INT
  1863 ;;		_main
  1864 ;;		_ESCRIBE_MENSAJE
  1865 ;;		_GENERACARACTER
  1866 ;;		_LCD_ESCRIBE_VAR_CHAR
  1867 ;;		_LCD_CHAR_GRADO
  1868 ;;		_LCD_VARCHAR_BITS
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text15
  1873   002AE2                     __ptext15:
  1874                           	callstack 0
  1875   002AE2                     _ENVIA_CHAR:
  1876                           	callstack 123
  1877                           
  1878                           ;incstack = 0
  1879                           ;ENVIA_CHAR@dato stored from wreg
  1880   002AE2  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1881   002AE4                     
  1882                           ;LCD.c: 88: void ENVIA_CHAR(unsigned char dato);LCD.c: 89: {;LCD.c: 90:  unsigned char a
      +                          ux;;LCD.c: 91:  LATDbits.LATD0 = 1;
  1883   002AE4  80C1               	bsf	193,0,c	;volatile
  1884   002AE6                     
  1885                           ;LCD.c: 92:  LEER_LCD();
  1886   002AE6  EC41  F014         	call	_LEER_LCD	;wreg free
  1887   002AEA                     
  1888                           ;LCD.c: 93:  TRISD = 0x00;
  1889   002AEA  0E00               	movlw	0
  1890   002AEC  6EC9               	movwf	201,c	;volatile
  1891   002AEE                     
  1892                           ;LCD.c: 94:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1893   002AEE  0E85               	movlw	133
  1894   002AF0                     u567:
  1895   002AF0  2EE8               	decfsz	wreg,f,c
  1896   002AF2  D7FE               	bra	u567
  1897   002AF4  0000               	nop	
  1898   002AF6                     
  1899                           ;LCD.c: 95:  LATDbits.LATD1 = 0;
  1900   002AF6  92C1               	bcf	193,1,c	;volatile
  1901   002AF8                     
  1902                           ;LCD.c: 96:  LATDbits.LATD2 = 0;
  1903   002AF8  94C1               	bcf	193,2,c	;volatile
  1904   002AFA                     
  1905                           ;LCD.c: 97:  LATDbits.LATD0 = 1;
  1906   002AFA  80C1               	bsf	193,0,c	;volatile
  1907   002AFC                     
  1908                           ;LCD.c: 98:  aux = dato & 0xF0;
  1909   002AFC  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1910   002AFE  0BF0               	andlw	240
  1911   002B00  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1912   002B02                     
  1913                           ;LCD.c: 99:  ENVIA_NIBBLE(aux);
  1914   002B02  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1915   002B04  ECB6  F015         	call	_ENVIA_NIBBLE
  1916   002B08                     
  1917                           ;LCD.c: 100:  aux = dato << 4;
  1918   002B08  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1919   002B0A  0BF0               	andlw	240
  1920   002B0C  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1921   002B0E                     
  1922                           ;LCD.c: 101:  ENVIA_NIBBLE(aux);
  1923   002B0E  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1924   002B10  ECB6  F015         	call	_ENVIA_NIBBLE
  1925   002B14  0012               	return		;funcret
  1926   002B16                     __end_of_ENVIA_CHAR:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _LEER_LCD *****************
  1930 ;; Defined at:
  1931 ;;		line 152 in file "LCD.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  aux             1    0[COMRAM] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1948 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1949 ;;Total ram usage:        1 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 1
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_ENVIA_CHAR
  1956 ;;		_ENVIA_LCD_CMD
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text16
  1961   002882                     __ptext16:
  1962                           	callstack 0
  1963   002882                     _LEER_LCD:
  1964                           	callstack 123
  1965   002882                     
  1966                           ;LCD.c: 154:  unsigned char aux;;LCD.c: 155:  TRISD = 0xF8;
  1967   002882  0EF8               	movlw	248
  1968   002884  6EC9               	movwf	201,c	;volatile
  1969   002886                     
  1970                           ;LCD.c: 156:  LATDbits.LATD0 = 0;
  1971   002886  90C1               	bcf	193,0,c	;volatile
  1972   002888                     
  1973                           ;LCD.c: 157:  LATDbits.LATD1 = 1;
  1974   002888  82C1               	bsf	193,1,c	;volatile
  1975   00288A                     
  1976                           ;LCD.c: 158:  LATDbits.LATD2 = 1;
  1977   00288A  84C1               	bsf	193,2,c	;volatile
  1978   00288C                     
  1979                           ;LCD.c: 159:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1980   00288C  0E85               	movlw	133
  1981   00288E                     u577:
  1982   00288E  2EE8               	decfsz	wreg,f,c
  1983   002890  D7FE               	bra	u577
  1984   002892  0000               	nop	
  1985   002894                     
  1986                           ;LCD.c: 160:  aux = PORTD;
  1987   002894  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1988   002898                     
  1989                           ;LCD.c: 161:  LATDbits.LATD2 = 0;
  1990   002898  94C1               	bcf	193,2,c	;volatile
  1991   00289A                     
  1992                           ;LCD.c: 162:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1993   00289A  0E85               	movlw	133
  1994   00289C                     u587:
  1995   00289C  2EE8               	decfsz	wreg,f,c
  1996   00289E  D7FE               	bra	u587
  1997   0028A0  0000               	nop	
  1998   0028A2                     
  1999                           ;LCD.c: 163:  LATDbits.LATD2 = 1;
  2000   0028A2  84C1               	bsf	193,2,c	;volatile
  2001   0028A4                     
  2002                           ;LCD.c: 164:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2003   0028A4  0E85               	movlw	133
  2004   0028A6                     u597:
  2005   0028A6  2EE8               	decfsz	wreg,f,c
  2006   0028A8  D7FE               	bra	u597
  2007   0028AA  0000               	nop	
  2008   0028AC                     
  2009                           ;LCD.c: 165:  LATDbits.LATD2 = 0;
  2010   0028AC  94C1               	bcf	193,2,c	;volatile
  2011   0028AE                     l1322:
  2012                           
  2013                           ;LCD.c: 166:  aux = aux & 0x80;
  2014   0028AE  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  2015   0028B0  0B80               	andlw	128
  2016   0028B2  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  2017                           
  2018                           ;LCD.c: 167:  while(aux == 0x80)
  2019   0028B4  EF70  F014         	goto	l1336
  2020   0028B8                     l93:
  2021                           
  2022                           ;LCD.c: 168:         {;LCD.c: 169:             LATDbits.LATD2 = 1;
  2023   0028B8  84C1               	bsf	193,2,c	;volatile
  2024   0028BA                     
  2025                           ;LCD.c: 170:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2026   0028BA  0E85               	movlw	133
  2027   0028BC                     u607:
  2028   0028BC  2EE8               	decfsz	wreg,f,c
  2029   0028BE  D7FE               	bra	u607
  2030   0028C0  0000               	nop	
  2031   0028C2                     
  2032                           ;LCD.c: 171:             aux = PORTD;
  2033   0028C2  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2034   0028C6                     
  2035                           ;LCD.c: 172:             LATDbits.LATD2 = 0;
  2036   0028C6  94C1               	bcf	193,2,c	;volatile
  2037                           
  2038                           ;LCD.c: 173:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2039   0028C8  0E85               	movlw	133
  2040   0028CA                     u617:
  2041   0028CA  2EE8               	decfsz	wreg,f,c
  2042   0028CC  D7FE               	bra	u617
  2043   0028CE  0000               	nop	
  2044   0028D0                     
  2045                           ;LCD.c: 174:             LATDbits.LATD2 = 1;
  2046   0028D0  84C1               	bsf	193,2,c	;volatile
  2047                           
  2048                           ;LCD.c: 175:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2049   0028D2  0E85               	movlw	133
  2050   0028D4                     u627:
  2051   0028D4  2EE8               	decfsz	wreg,f,c
  2052   0028D6  D7FE               	bra	u627
  2053   0028D8  0000               	nop	
  2054   0028DA                     
  2055                           ;LCD.c: 176:             LATDbits.LATD2 = 0;
  2056   0028DA  94C1               	bcf	193,2,c	;volatile
  2057   0028DC  EF57  F014         	goto	l1322
  2058   0028E0                     l1336:
  2059                           
  2060                           ;LCD.c: 167:  while(aux == 0x80)
  2061   0028E0  0E80               	movlw	128
  2062   0028E2  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  2063   0028E4  B4D8               	btfsc	status,2,c
  2064   0028E6  EF77  F014         	goto	u261
  2065   0028EA  EF79  F014         	goto	u260
  2066   0028EE                     u261:
  2067   0028EE  EF5C  F014         	goto	l93
  2068   0028F2                     u260:
  2069   0028F2  0012               	return		;funcret
  2070   0028F4                     __end_of_LEER_LCD:
  2071                           	callstack 0
  2072                           
  2073 ;; *************** function _ENVIA_NIBBLE *****************
  2074 ;; Defined at:
  2075 ;;		line 126 in file "LCD.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  dato            1    wreg     unsigned char 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  dato            1    0[COMRAM] unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2, status,0
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2093 ;;Total ram usage:        1 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 1
  2096 ;; This function calls:
  2097 ;;		Nothing
  2098 ;; This function is called by:
  2099 ;;		_ENVIA_CHAR
  2100 ;;		_LCD_CONFIG
  2101 ;;		_ENVIA_LCD_CMD
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text17
  2106   002B6C                     __ptext17:
  2107                           	callstack 0
  2108   002B6C                     _ENVIA_NIBBLE:
  2109                           	callstack 123
  2110                           
  2111                           ;incstack = 0
  2112                           ;ENVIA_NIBBLE@dato stored from wreg
  2113   002B6C  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2114   002B6E                     
  2115                           ;LCD.c: 126: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 127: {;LCD.c: 128:  LATD &= 0x
      +                          0F;
  2116   002B6E  0E0F               	movlw	15
  2117   002B70  16C1               	andwf	193,f,c	;volatile
  2118                           
  2119                           ;LCD.c: 129:  dato &= 0xF0;
  2120   002B72  0EF0               	movlw	240
  2121   002B74  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2122                           
  2123                           ;LCD.c: 130:  LATD|= dato;
  2124   002B76  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2125   002B78  12C1               	iorwf	193,f,c	;volatile
  2126   002B7A                     
  2127                           ;LCD.c: 131:  LATDbits.LATD2 = 1;
  2128   002B7A  84C1               	bsf	193,2,c	;volatile
  2129   002B7C                     
  2130                           ;LCD.c: 132:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2131   002B7C  0E85               	movlw	133
  2132   002B7E                     u637:
  2133   002B7E  2EE8               	decfsz	wreg,f,c
  2134   002B80  D7FE               	bra	u637
  2135   002B82  0000               	nop	
  2136   002B84                     
  2137                           ;LCD.c: 133:  LATDbits.LATD2 = 0;
  2138   002B84  94C1               	bcf	193,2,c	;volatile
  2139   002B86  0012               	return		;funcret
  2140   002B88                     __end_of_ENVIA_NIBBLE:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _INT0_ISR *****************
  2144 ;; Defined at:
  2145 ;;		line 68 in file "maincode3.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		Interrupt level 2
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text18
  2173   002BB0                     __ptext18:
  2174                           	callstack 0
  2175   002BB0                     _INT0_ISR:
  2176                           	callstack 122
  2177   002BB0                     
  2178                           ;maincode3.c: 69:     PIR1bits.INT0IF = 0;
  2179   002BB0  90AF               	bcf	175,0,c	;volatile
  2180   002BB2                     
  2181                           ;maincode3.c: 70:     pantalla = 0;
  2182   002BB2  0E00               	movlw	0
  2183   002BB4  6E17               	movwf	_pantalla^(0+1280),c
  2184   002BB6  0011               	retfie		f
  2185   002BB8                     __end_of_INT0_ISR:
  2186                           	callstack 0
  2187                           
  2188 ;; *************** function _INT1_ISR *****************
  2189 ;; Defined at:
  2190 ;;		line 73 in file "maincode3.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;		None
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		wreg, status,2
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2208 ;;Total ram usage:        0 bytes
  2209 ;; Hardware stack levels used: 1
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		Interrupt level 2
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text19
  2218   002BB8                     __ptext19:
  2219                           	callstack 0
  2220   002BB8                     _INT1_ISR:
  2221                           	callstack 122
  2222   002BB8                     
  2223                           ;maincode3.c: 74:     PIR6bits.INT1IF = 0;
  2224   002BB8  90B4               	bcf	180,0,c	;volatile
  2225   002BBA                     
  2226                           ;maincode3.c: 75:     pantalla = 1;
  2227   002BBA  0E01               	movlw	1
  2228   002BBC  6E17               	movwf	_pantalla^(0+1280),c
  2229   002BBE  0011               	retfie		f
  2230   002BC0                     __end_of_INT1_ISR:
  2231                           	callstack 0
  2232                           
  2233 ;; *************** function _INT2_ISR *****************
  2234 ;; Defined at:
  2235 ;;		line 78 in file "maincode3.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, status,2
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2253 ;;Total ram usage:        0 bytes
  2254 ;; Hardware stack levels used: 1
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		Interrupt level 2
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text20
  2263   002BC0                     __ptext20:
  2264                           	callstack 0
  2265   002BC0                     _INT2_ISR:
  2266                           	callstack 122
  2267   002BC0                     
  2268                           ;maincode3.c: 79:     PIR10bits.INT2IF = 0;
  2269   002BC0  90B8               	bcf	184,0,c	;volatile
  2270   002BC2                     
  2271                           ;maincode3.c: 80:     pantalla = 2;
  2272   002BC2  0E02               	movlw	2
  2273   002BC4  6E17               	movwf	_pantalla^(0+1280),c
  2274   002BC6  0011               	retfie		f
  2275   002BC8                     __end_of_INT2_ISR:
  2276                           	callstack 0
  2277                           
  2278                           ;
  2279                           ; H/W Interrupt Vector Table @ 0x8
  2280                           ;
  2281                           
  2282                           	psect	ivt0x8
  2283   000008                     __pivt0x8:
  2284                           	callstack 0
  2285   000008                     ivt0x8_base:
  2286                           	callstack 0
  2287                           
  2288                           ; Vector 0 : SWINT
  2289   000008  0040               	dw	ivt0x8_undefint shr (0+2)
  2290                           
  2291                           ; Vector 1 : HLVD
  2292   00000A  0040               	dw	ivt0x8_undefint shr (0+2)
  2293                           
  2294                           ; Vector 2 : OSF
  2295   00000C  0040               	dw	ivt0x8_undefint shr (0+2)
  2296                           
  2297                           ; Vector 3 : CSW
  2298   00000E  0040               	dw	ivt0x8_undefint shr (0+2)
  2299                           
  2300                           ; Vector 4 : Undefined
  2301   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  2302                           
  2303                           ; Vector 5 : CLC1
  2304   000012  0040               	dw	ivt0x8_undefint shr (0+2)
  2305                           
  2306                           ; Vector 6 : Undefined
  2307   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  2308                           
  2309                           ; Vector 7 : IOC
  2310   000016  0040               	dw	ivt0x8_undefint shr (0+2)
  2311                           
  2312                           ; Vector 8 : INT0
  2313   000018  0AEC               	dw	_INT0_ISR shr (0+2)
  2314                           
  2315                           ; Vector 9 : ZCD
  2316   00001A  0040               	dw	ivt0x8_undefint shr (0+2)
  2317                           
  2318                           ; Vector 10 : AD
  2319   00001C  0040               	dw	ivt0x8_undefint shr (0+2)
  2320                           
  2321                           ; Vector 11 : ACT
  2322   00001E  0040               	dw	ivt0x8_undefint shr (0+2)
  2323                           
  2324                           ; Vector 12 : CMP1
  2325   000020  0040               	dw	ivt0x8_undefint shr (0+2)
  2326                           
  2327                           ; Vector 13 : SMT1
  2328   000022  0040               	dw	ivt0x8_undefint shr (0+2)
  2329                           
  2330                           ; Vector 14 : SMT1PRA
  2331   000024  0040               	dw	ivt0x8_undefint shr (0+2)
  2332                           
  2333                           ; Vector 15 : SMT1PRW
  2334   000026  0040               	dw	ivt0x8_undefint shr (0+2)
  2335                           
  2336                           ; Vector 16 : ADT
  2337   000028  0040               	dw	ivt0x8_undefint shr (0+2)
  2338                           
  2339                           ; Vector 17 : Undefined
  2340   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  2341                           
  2342                           ; Vector 18 : Undefined
  2343   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  2344                           
  2345                           ; Vector 19 : Undefined
  2346   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  2347                           
  2348                           ; Vector 20 : DMA1SCNT
  2349   000030  0040               	dw	ivt0x8_undefint shr (0+2)
  2350                           
  2351                           ; Vector 21 : DMA1DCNT
  2352   000032  0040               	dw	ivt0x8_undefint shr (0+2)
  2353                           
  2354                           ; Vector 22 : DMA1OR
  2355   000034  0040               	dw	ivt0x8_undefint shr (0+2)
  2356                           
  2357                           ; Vector 23 : DMA1A
  2358   000036  0040               	dw	ivt0x8_undefint shr (0+2)
  2359                           
  2360                           ; Vector 24 : SPI1RX
  2361   000038  0040               	dw	ivt0x8_undefint shr (0+2)
  2362                           
  2363                           ; Vector 25 : SPI1TX
  2364   00003A  0040               	dw	ivt0x8_undefint shr (0+2)
  2365                           
  2366                           ; Vector 26 : SPI1
  2367   00003C  0040               	dw	ivt0x8_undefint shr (0+2)
  2368                           
  2369                           ; Vector 27 : TMR2
  2370   00003E  0040               	dw	ivt0x8_undefint shr (0+2)
  2371                           
  2372                           ; Vector 28 : TMR1
  2373   000040  0040               	dw	ivt0x8_undefint shr (0+2)
  2374                           
  2375                           ; Vector 29 : TMR1G
  2376   000042  0040               	dw	ivt0x8_undefint shr (0+2)
  2377                           
  2378                           ; Vector 30 : CCP1
  2379   000044  0040               	dw	ivt0x8_undefint shr (0+2)
  2380                           
  2381                           ; Vector 31 : TMR0
  2382   000046  0040               	dw	ivt0x8_undefint shr (0+2)
  2383                           
  2384                           ; Vector 32 : U1RX
  2385   000048  0040               	dw	ivt0x8_undefint shr (0+2)
  2386                           
  2387                           ; Vector 33 : U1TX
  2388   00004A  0040               	dw	ivt0x8_undefint shr (0+2)
  2389                           
  2390                           ; Vector 34 : U1E
  2391   00004C  0040               	dw	ivt0x8_undefint shr (0+2)
  2392                           
  2393                           ; Vector 35 : U1
  2394   00004E  0040               	dw	ivt0x8_undefint shr (0+2)
  2395                           
  2396                           ; Vector 36 : Undefined
  2397   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  2398                           
  2399                           ; Vector 37 : Undefined
  2400   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  2401                           
  2402                           ; Vector 38 : PWM1PR
  2403   000054  0040               	dw	ivt0x8_undefint shr (0+2)
  2404                           
  2405                           ; Vector 39 : PWM1
  2406   000056  0040               	dw	ivt0x8_undefint shr (0+2)
  2407                           
  2408                           ; Vector 40 : SPI2RX
  2409   000058  0040               	dw	ivt0x8_undefint shr (0+2)
  2410                           
  2411                           ; Vector 41 : SPI2TX
  2412   00005A  0040               	dw	ivt0x8_undefint shr (0+2)
  2413                           
  2414                           ; Vector 42 : SPI2
  2415   00005C  0040               	dw	ivt0x8_undefint shr (0+2)
  2416                           
  2417                           ; Vector 43 : Undefined
  2418   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  2419                           
  2420                           ; Vector 44 : TMR3
  2421   000060  0040               	dw	ivt0x8_undefint shr (0+2)
  2422                           
  2423                           ; Vector 45 : TMR3G
  2424   000062  0040               	dw	ivt0x8_undefint shr (0+2)
  2425                           
  2426                           ; Vector 46 : PWM2PR
  2427   000064  0040               	dw	ivt0x8_undefint shr (0+2)
  2428                           
  2429                           ; Vector 47 : PWM2
  2430   000066  0040               	dw	ivt0x8_undefint shr (0+2)
  2431                           
  2432                           ; Vector 48 : INT1
  2433   000068  0AEE               	dw	_INT1_ISR shr (0+2)
  2434                           
  2435                           ; Vector 49 : CLC2
  2436   00006A  0040               	dw	ivt0x8_undefint shr (0+2)
  2437                           
  2438                           ; Vector 50 : CWG1
  2439   00006C  0040               	dw	ivt0x8_undefint shr (0+2)
  2440                           
  2441                           ; Vector 51 : NCO1
  2442   00006E  0040               	dw	ivt0x8_undefint shr (0+2)
  2443                           
  2444                           ; Vector 52 : DMA2SCNT
  2445   000070  0040               	dw	ivt0x8_undefint shr (0+2)
  2446                           
  2447                           ; Vector 53 : DMA2DCNT
  2448   000072  0040               	dw	ivt0x8_undefint shr (0+2)
  2449                           
  2450                           ; Vector 54 : DMA2OR
  2451   000074  0040               	dw	ivt0x8_undefint shr (0+2)
  2452                           
  2453                           ; Vector 55 : DMA2A
  2454   000076  0040               	dw	ivt0x8_undefint shr (0+2)
  2455                           
  2456                           ; Vector 56 : I2C1RX
  2457   000078  0040               	dw	ivt0x8_undefint shr (0+2)
  2458                           
  2459                           ; Vector 57 : I2C1TX
  2460   00007A  0040               	dw	ivt0x8_undefint shr (0+2)
  2461                           
  2462                           ; Vector 58 : I2C1
  2463   00007C  0040               	dw	ivt0x8_undefint shr (0+2)
  2464                           
  2465                           ; Vector 59 : I2C1E
  2466   00007E  0040               	dw	ivt0x8_undefint shr (0+2)
  2467                           
  2468                           ; Vector 60 : Undefined
  2469   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  2470                           
  2471                           ; Vector 61 : CLC3
  2472   000082  0040               	dw	ivt0x8_undefint shr (0+2)
  2473                           
  2474                           ; Vector 62 : PWM3PR
  2475   000084  0040               	dw	ivt0x8_undefint shr (0+2)
  2476                           
  2477                           ; Vector 63 : PWM3
  2478   000086  0040               	dw	ivt0x8_undefint shr (0+2)
  2479                           
  2480                           ; Vector 64 : U2RX
  2481   000088  0040               	dw	ivt0x8_undefint shr (0+2)
  2482                           
  2483                           ; Vector 65 : U2TX
  2484   00008A  0040               	dw	ivt0x8_undefint shr (0+2)
  2485                           
  2486                           ; Vector 66 : U2E
  2487   00008C  0040               	dw	ivt0x8_undefint shr (0+2)
  2488                           
  2489                           ; Vector 67 : U2
  2490   00008E  0040               	dw	ivt0x8_undefint shr (0+2)
  2491                           
  2492                           ; Vector 68 : TMR5
  2493   000090  0040               	dw	ivt0x8_undefint shr (0+2)
  2494                           
  2495                           ; Vector 69 : TMR5G
  2496   000092  0040               	dw	ivt0x8_undefint shr (0+2)
  2497                           
  2498                           ; Vector 70 : CCP2
  2499   000094  0040               	dw	ivt0x8_undefint shr (0+2)
  2500                           
  2501                           ; Vector 71 : SCAN
  2502   000096  0040               	dw	ivt0x8_undefint shr (0+2)
  2503                           
  2504                           ; Vector 72 : U3RX
  2505   000098  0040               	dw	ivt0x8_undefint shr (0+2)
  2506                           
  2507                           ; Vector 73 : U3TX
  2508   00009A  0040               	dw	ivt0x8_undefint shr (0+2)
  2509                           
  2510                           ; Vector 74 : U3E
  2511   00009C  0040               	dw	ivt0x8_undefint shr (0+2)
  2512                           
  2513                           ; Vector 75 : U3
  2514   00009E  0040               	dw	ivt0x8_undefint shr (0+2)
  2515                           
  2516                           ; Vector 76 : Undefined
  2517   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  2518                           
  2519                           ; Vector 77 : CLC4
  2520   0000A2  0040               	dw	ivt0x8_undefint shr (0+2)
  2521                           
  2522                           ; Vector 78 : Undefined
  2523   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  2524                           
  2525                           ; Vector 79 : Undefined
  2526   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  2527                           
  2528                           ; Vector 80 : INT2
  2529   0000A8  0AF0               	dw	_INT2_ISR shr (0+2)
  2530                           
  2531                           ; Vector 81 : CLC5
  2532   0000AA  0040               	dw	ivt0x8_undefint shr (0+2)
  2533                           
  2534                           ; Vector 82 : CWG2
  2535   0000AC  0040               	dw	ivt0x8_undefint shr (0+2)
  2536                           
  2537                           ; Vector 83 : NCO2
  2538   0000AE  0040               	dw	ivt0x8_undefint shr (0+2)
  2539                           
  2540                           ; Vector 84 : DMA3SCNT
  2541   0000B0  0040               	dw	ivt0x8_undefint shr (0+2)
  2542                           
  2543                           ; Vector 85 : DMA3DCNT
  2544   0000B2  0040               	dw	ivt0x8_undefint shr (0+2)
  2545                           
  2546                           ; Vector 86 : DMA3OR
  2547   0000B4  0040               	dw	ivt0x8_undefint shr (0+2)
  2548                           
  2549                           ; Vector 87 : DMA3A
  2550   0000B6  0040               	dw	ivt0x8_undefint shr (0+2)
  2551                           
  2552                           ; Vector 88 : CCP3
  2553   0000B8  0040               	dw	ivt0x8_undefint shr (0+2)
  2554                           
  2555                           ; Vector 89 : CLC6
  2556   0000BA  0040               	dw	ivt0x8_undefint shr (0+2)
  2557                           
  2558                           ; Vector 90 : CWG3
  2559   0000BC  0040               	dw	ivt0x8_undefint shr (0+2)
  2560                           
  2561                           ; Vector 91 : TMR4
  2562   0000BE  0040               	dw	ivt0x8_undefint shr (0+2)
  2563                           
  2564                           ; Vector 92 : DMA4SCNT
  2565   0000C0  0040               	dw	ivt0x8_undefint shr (0+2)
  2566                           
  2567                           ; Vector 93 : DMA4DCNT
  2568   0000C2  0040               	dw	ivt0x8_undefint shr (0+2)
  2569                           
  2570                           ; Vector 94 : DMA4OR
  2571   0000C4  0040               	dw	ivt0x8_undefint shr (0+2)
  2572                           
  2573                           ; Vector 95 : DMA4A
  2574   0000C6  0040               	dw	ivt0x8_undefint shr (0+2)
  2575                           
  2576                           ; Vector 96 : U4RX
  2577   0000C8  0040               	dw	ivt0x8_undefint shr (0+2)
  2578                           
  2579                           ; Vector 97 : U4TX
  2580   0000CA  0040               	dw	ivt0x8_undefint shr (0+2)
  2581                           
  2582                           ; Vector 98 : U4E
  2583   0000CC  0040               	dw	ivt0x8_undefint shr (0+2)
  2584                           
  2585                           ; Vector 99 : U4
  2586   0000CE  0040               	dw	ivt0x8_undefint shr (0+2)
  2587                           
  2588                           ; Vector 100 : DMA5SCNT
  2589   0000D0  0040               	dw	ivt0x8_undefint shr (0+2)
  2590                           
  2591                           ; Vector 101 : DMA5DCNT
  2592   0000D2  0040               	dw	ivt0x8_undefint shr (0+2)
  2593                           
  2594                           ; Vector 102 : DMA5OR
  2595   0000D4  0040               	dw	ivt0x8_undefint shr (0+2)
  2596                           
  2597                           ; Vector 103 : DMA5A
  2598   0000D6  0040               	dw	ivt0x8_undefint shr (0+2)
  2599                           
  2600                           ; Vector 104 : U5RX
  2601   0000D8  0040               	dw	ivt0x8_undefint shr (0+2)
  2602                           
  2603                           ; Vector 105 : U5TX
  2604   0000DA  0040               	dw	ivt0x8_undefint shr (0+2)
  2605                           
  2606                           ; Vector 106 : U5E
  2607   0000DC  0040               	dw	ivt0x8_undefint shr (0+2)
  2608                           
  2609                           ; Vector 107 : U5
  2610   0000DE  0040               	dw	ivt0x8_undefint shr (0+2)
  2611                           
  2612                           ; Vector 108 : DMA6SCNT
  2613   0000E0  0040               	dw	ivt0x8_undefint shr (0+2)
  2614                           
  2615                           ; Vector 109 : DMA6DCNT
  2616   0000E2  0040               	dw	ivt0x8_undefint shr (0+2)
  2617                           
  2618                           ; Vector 110 : DMA6OR
  2619   0000E4  0040               	dw	ivt0x8_undefint shr (0+2)
  2620                           
  2621                           ; Vector 111 : DMA6A
  2622   0000E6  0040               	dw	ivt0x8_undefint shr (0+2)
  2623                           
  2624                           ; Vector 112 : Undefined
  2625   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  2626                           
  2627                           ; Vector 113 : CLC7
  2628   0000EA  0040               	dw	ivt0x8_undefint shr (0+2)
  2629                           
  2630                           ; Vector 114 : CMP2
  2631   0000EC  0040               	dw	ivt0x8_undefint shr (0+2)
  2632                           
  2633                           ; Vector 115 : NCO3
  2634   0000EE  0040               	dw	ivt0x8_undefint shr (0+2)
  2635                           
  2636                           ; Vector 116 : Undefined
  2637   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  2638                           
  2639                           ; Vector 117 : Undefined
  2640   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  2641                           
  2642                           ; Vector 118 : Undefined
  2643   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  2644                           
  2645                           ; Vector 119 : Undefined
  2646   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  2647                           
  2648                           ; Vector 120 : NVM
  2649   0000F8  0040               	dw	ivt0x8_undefint shr (0+2)
  2650                           
  2651                           ; Vector 121 : CLC8
  2652   0000FA  0040               	dw	ivt0x8_undefint shr (0+2)
  2653                           
  2654                           ; Vector 122 : CRC
  2655   0000FC  0040               	dw	ivt0x8_undefint shr (0+2)
  2656                           
  2657                           ; Vector 123 : TMR6
  2658   0000FE  0040               	dw	ivt0x8_undefint shr (0+2)
  2659   000100                     ivt0x8_undefint:
  2660                           	callstack 0
  2661   000100  00FF               	reset	
  2662                           
  2663                           	psect	rparam
  2664   000000                     
  2665                           	psect	config
  2666                           
  2667                           ;Config register CONFIG1 @ 0x300000
  2668                           ;	External Oscillator Selection
  2669                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  2670                           ;	Reset Oscillator Selection
  2671                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2672   300000                     	org	3145728
  2673   300000  FF                 	db	255
  2674                           
  2675                           ;Config register CONFIG2 @ 0x300001
  2676                           ;	Clock out Enable bit
  2677                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2678                           ;	PRLOCKED One-Way Set Enable bit
  2679                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2680                           ;	Clock Switch Enable bit
  2681                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2682                           ;	Fail-Safe Clock Monitor Enable bit
  2683                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2684   300001                     	org	3145729
  2685   300001  FF                 	db	255
  2686                           
  2687                           ;Config register CONFIG3 @ 0x300002
  2688                           ;	MCLR Enable bit
  2689                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2690                           ;	Power-up timer selection bits
  2691                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  2692                           ;	Multi-vector enable bit
  2693                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2694                           ;	IVTLOCK bit One-way set enable bit
  2695                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2696                           ;	Low Power BOR Enable bit
  2697                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2698                           ;	Brown-out Reset Enable bits
  2699                           ;	BOREN = OFF, Brown-out Reset disabled
  2700   300002                     	org	3145730
  2701   300002  3D                 	db	61
  2702                           
  2703                           ;Config register CONFIG4 @ 0x300003
  2704                           ;	Brown-out Reset Voltage Selection bits
  2705                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2706                           ;	ZCD Disable bit
  2707                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2708                           ;	PPSLOCK bit One-Way Set Enable bit
  2709                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2710                           ;	Stack Full/Underflow Reset Enable bit
  2711                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2712                           ;	Low Voltage Programming Enable bit
  2713                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2714                           ;	Extended Instruction Set Enable bit
  2715                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2716   300003                     	org	3145731
  2717   300003  DF                 	db	223
  2718                           
  2719                           ;Config register CONFIG5 @ 0x300004
  2720                           ;	WDT Period selection bits
  2721                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2722                           ;	WDT operating mode
  2723                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2724   300004                     	org	3145732
  2725   300004  9F                 	db	159
  2726                           
  2727                           ;Config register CONFIG6 @ 0x300005
  2728                           ;	WDT Window Select bits
  2729                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2730                           ;	WDT input clock selector
  2731                           ;	WDTCCS = SC, Software Control
  2732   300005                     	org	3145733
  2733   300005  FF                 	db	255
  2734                           
  2735                           ;Config register CONFIG7 @ 0x300006
  2736                           ;	Boot Block Size selection bits
  2737                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2738                           ;	Boot Block enable bit
  2739                           ;	BBEN = OFF, Boot block disabled
  2740                           ;	Storage Area Flash enable bit
  2741                           ;	SAFEN = OFF, SAF disabled
  2742                           ;	Background Debugger
  2743                           ;	DEBUG = OFF, Background Debugger disabled
  2744   300006                     	org	3145734
  2745   300006  FF                 	db	255
  2746                           
  2747                           ;Config register CONFIG8 @ 0x300007
  2748                           ;	Boot Block Write Protection bit
  2749                           ;	WRTB = OFF, Boot Block not Write protected
  2750                           ;	Configuration Register Write Protection bit
  2751                           ;	WRTC = OFF, Configuration registers not Write protected
  2752                           ;	Data EEPROM Write Protection bit
  2753                           ;	WRTD = OFF, Data EEPROM not Write protected
  2754                           ;	SAF Write protection bit
  2755                           ;	WRTSAF = OFF, SAF not Write Protected
  2756                           ;	Application Block write protection bit
  2757                           ;	WRTAPP = OFF, Application Block not write protected
  2758   300007                     	org	3145735
  2759   300007  FF                 	db	255
  2760                           
  2761                           ;Config register CONFIG10 @ 0x300009
  2762                           ;	PFM and Data EEPROM Code Protection bit
  2763                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2764   300009                     	org	3145737
  2765   300009  FF                 	db	255
  2766                           tosu	equ	0x4FF
  2767                           tosh	equ	0x4FE
  2768                           tosl	equ	0x4FD
  2769                           stkptr	equ	0x4FC
  2770                           pclatu	equ	0x4FB
  2771                           pclath	equ	0x4FA
  2772                           pcl	equ	0x4F9
  2773                           tblptru	equ	0x4F8
  2774                           tblptrh	equ	0x4F7
  2775                           tblptrl	equ	0x4F6
  2776                           tablat	equ	0x4F5
  2777                           prodh	equ	0x4F4
  2778                           prodl	equ	0x4F3
  2779                           indf0	equ	0x4EF
  2780                           postinc0	equ	0x4EE
  2781                           postdec0	equ	0x4ED
  2782                           preinc0	equ	0x4EC
  2783                           plusw0	equ	0x4EB
  2784                           fsr0h	equ	0x4EA
  2785                           fsr0l	equ	0x4E9
  2786                           wreg	equ	0x4E8
  2787                           indf1	equ	0x4E7
  2788                           postinc1	equ	0x4E6
  2789                           postdec1	equ	0x4E5
  2790                           preinc1	equ	0x4E4
  2791                           plusw1	equ	0x4E3
  2792                           fsr1h	equ	0x4E2
  2793                           fsr1l	equ	0x4E1
  2794                           bsr	equ	0x4E0
  2795                           indf2	equ	0x4DF
  2796                           postinc2	equ	0x4DE
  2797                           postdec2	equ	0x4DD
  2798                           preinc2	equ	0x4DC
  2799                           plusw2	equ	0x4DB
  2800                           fsr2h	equ	0x4DA
  2801                           fsr2l	equ	0x4D9
  2802                           status	equ	0x4D8

Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      23
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), STR_2(CODE[9]), STR_3(CODE[11]), STR_4(CODE[9]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), STR_2(CODE[9]), STR_3(CODE[11]), STR_4(CODE[9]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), STR_2(CODE[9]), STR_3(CODE[11]), STR_4(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_LCD_ESCRIBE_VAR_INT
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _LCD_ESCRIBE_VAR_INT->___lwdiv
    ___lwdiv->___lwmod
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _INT1_ISR in BANK32

    None.

Critical Paths under _INT2_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _INT1_ISR in BANK33

    None.

Critical Paths under _INT2_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _INT1_ISR in BANK34

    None.

Critical Paths under _INT2_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _INT1_ISR in BANK35

    None.

Critical Paths under _INT2_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Critical Paths under _INT1_ISR in BANK36

    None.

Critical Paths under _INT2_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6327
                                             20 COMRAM     2     2      0
                         _ENVIA_CHAR
                   _ESCRIBE_MENSAJE2
                _LCD_ESCRIBE_VAR_INT
                           _LCD_INIT
                         _POS_CURSOR
                            ___lwdiv
                          _configuro
                    _tomamuestra_ADC
 ---------------------------------------------------------------------------------
 (1) _tomamuestra_ADC                                      4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     511
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             1     1      0     799
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     206
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     227
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     183
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_ESCRIBE_VAR_INT                                  8     5      3    2947
                                             12 COMRAM     8     5      3
                         _ENVIA_CHAR
                            ___lwdiv
                            ___lwmod
                    _tomamuestra_ADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1074
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
                    _tomamuestra_ADC (ARG)
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1     767
                                              3 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     183
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
     _strlen
   _LCD_ESCRIBE_VAR_INT
     _ENVIA_CHAR
     ___lwdiv
       ___lwmod (ARG)
       _tomamuestra_ADC (ARG)
     ___lwmod
     _tomamuestra_ADC (ARG)
   _LCD_INIT
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
   ___lwdiv
   _configuro
   _tomamuestra_ADC

 _INT0_ISR (ROOT)

 _INT1_ISR (ROOT)

 _INT2_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllhhhl    336      0       0      87        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK27          100      0       0      49        0.0%
BANK27             100      0       0      50        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRlll        AD      0       0      90        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhl        86      0       0      81        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      17       1       24.2%
BITBIGSFRhhhh       29      0       0      71        0.0%
BITBIGSFRllhhhl      C      0       0      85        0.0%
BITBIGSFRlhhhhh      7      0       0      75        0.0%
BITBIGSFRllhhhl      7      0       0      84        0.0%
BITBIGSFRllhhhh      7      0       0      82        0.0%
BITBIGSFRhhl         7      0       0      73        0.0%
BITBIGSFRlhhhhl      6      0       0      78        0.0%
BITBIGSFRllhhhl      6      0       0      83        0.0%
BITBIGSFRllhhhl      6      0       0      86        0.0%
BITBIGSFRlhhhhh      4      0       0      77        0.0%
BITBIGSFRlhhl        4      0       0      80        0.0%
BITBIGSFRhhhl        4      0       0      72        0.0%
BITBIGSFRhll         4      0       0      74        0.0%
BITBIGSFRlhhhhh      3      0       0      76        0.0%
BITBIGSFRlhhhl       3      0       0      79        0.0%
BITBIGSFRllhl        3      0       0      89        0.0%
BITBIGSFRllhhl       1      0       0      88        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      17      48        0.0%
DATA                 0      0      17       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon May 06 11:57:17 2024

                          l32 280C                            l28 280C                            l45 2BA4  
                          l62 2B44                            l80 2BAC                            l74 2A36  
                          l83 29AA                            l93 28B8                            l77 2B14  
                          l86 2B86                            l95 28F2                            l89 2AE0  
               ENVIA_CHAR@aux 0503                           l103 2A74                           l121 269E  
                         l190 29F2                           l193 2B4A                           l196 2B6A  
                         l725 2880                           l718 2878                           l735 2956  
                         l904 2AAC                           l728 294E                           u300 2828  
                         u301 2824                           u310 2846                           u311 2842  
                         u400 2A36                           u320 2862                           u401 2A32  
                         u321 285E                           u330 2906                           u410 2B58  
                         u331 2902                           u411 2B54                           u260 28F2  
                         u340 2924                           u261 28EE                           u341 2920  
                         u350 293A                           u270 2B28                           u351 2936  
                         u271 2B24                           u280 2B3E                           u360 27A6  
                         u281 2B3A                           u361 27A2                           u290 2AA0  
                         u370 27C4                           u291 2A9C                           u371 27C0  
                         u380 27E2                           u517 2A48                           u381 27DE  
                         u390 2800                           u607 28BC                           u527 2A5C  
                         u391 27FC                           u617 28CA                           u537 2968  
                         u627 28D4                           u547 297A                           u637 2B7E  
                         u557 2ABC                           u567 2AF0                           u577 288E  
                         u587 289C                           u597 28A6                   LEER_LCD@aux 0501  
                         wreg 04E8                  ?_CURSOR_HOME 0501                ??_ENVIA_NIBBLE 0501  
              ENVIA_CHAR@dato 0502                          l1300 2882                          l1310 2894  
                        l1302 2886                          l1320 28AC                          l1312 2898  
                        l1304 2888                          l1400 2A76                          l1330 28D0  
                        l1322 28AE                          l1314 289A                          l1306 288A  
                        l1402 2A7E                          l1410 2BA6                          l1340 2B7A  
                        l1332 28DA                          l1324 28BA                          l1316 28A2  
                        l1308 288C                          l1404 2A80                          l1420 2980  
                        l1412 2958                          l1500 2A38                          l1342 2B7C  
                        l1326 28C2                          l1318 28A4                          l1406 2AA0  
                        l1350 2AB6                          l1430 299E                          l1422 2986  
                        l1414 295C                          l1510 2A6A                          l1502 2A42  
                        l1344 2B84                          l1328 28C6                          l1336 28E0  
                        l1440 2830                          l1520 2604                          l1360 2AC8  
                        l1352 2ABA                          l1432 29A4                          l1424 298C  
                        l1416 2962                          l1512 2A6E                          l1504 2A52  
                        l1338 2B6E                          l1450 286A                          l1442 2838  
                        l1434 280E                          l1522 2620                          l1514 252C  
                        l1362 2ACE                          l1354 2AC2                          l1346 2AB0  
                        l1370 2B18                          l1426 2992                          l1418 2972  
                        l1506 2A56                          l1530 29AC                          l1380 2AE6  
                        l1452 286C                          l1444 2846                          l1436 2816  
                        l1460 290E                          l1524 2644                          l1516 25E4  
                        l1364 2AD4                          l1356 2AC4                          l1348 2AB2  
                        l1372 2B28                          l1428 2998                          l1508 2A66  
                        l1540 29C4                          l1532 29BA                          l1390 2AFA  
                        l1382 2AEA                          l1454 2872                          l1446 284C  
                        l1438 2828                          l1470 2948                          l1462 2916  
                        l1518 25F0                          l1366 2ADA                          l1358 2AC6  
                        l1374 2B2E                          l1550 29E6                          l1542 29D0  
                        l1534 29BC                          l1392 2AFC                          l1384 2AEE  
                        l1448 2862                          l1464 2924                          l1456 28F4  
                        l1528 2670                          l1368 2B9E                          l1376 2B3E  
                        l1480 27D0                          l1472 2796                          l1560 29F0  
                        l1552 29E8                          l1544 29D6                          l1536 29C0  
                        l1394 2B02                          l1386 2AF6                          l1378 2AE4  
                        l1490 2A00                          l1466 293A                          l1458 2906  
                        l1482 27E2                          l1474 27A6                          l1554 29EA  
                        l1546 29D8                          l1538 29C2                          l1562 2B46  
                        l1650 26A8                          l1396 2B08                          l1388 2AF8  
                        l1492 2A00                          l1468 2942                          l1484 27EE  
                        l1476 27B2                          l1556 29EC                          l1548 29E4  
                        l1564 2B58                          l1660 26E8                          l1652 26B2  
                        l1398 2B0E                          l1494 2A08                          l1486 2800  
                        l1478 27C4                          l1558 29EE                          l1670 2730  
                        l1662 26F0                          l1654 26BA                          l1646 26A0  
                        l1496 2A22                          l1488 29F4                          l1672 2738  
                        l1664 2710                          l1656 26C8                          l1680 2772  
                        l1648 26A4                          l1498 2A24                          l1674 2758  
                        l1666 2720                          l1658 26D0                          l1676 2768  
                        l1668 2726                          STR_1 2501                          STR_2 2518  
                        STR_3 250D                          STR_4 2521                          _LATD 04C1  
                        _WPUB 0409                          _main 26A0                          start 0102  
               ?_CURSOR_ONOFF 0501             ??_tomamuestra_ADC 0503                  ___param_bank 0000  
             ??_ENVIA_LCD_CMD 0502              __end_of_LCD_INIT 2A76              __end_of_LEER_LCD 28F4  
            __end_of_INT0_ISR 2BB8              __end_of_INT1_ISR 2BC0              __end_of_INT2_ISR 2BC8  
                       ?_main 0501                         _ADPCH 03EC               __end_of___lwdiv 2882  
             __end_of___lwmod 2958                         i2l214 2BB6                         i2l224 2BC6  
                       i2l219 2BBE                         _OSCEN 00B3                         _PORTD 04D1  
                       _TRISB 04C7                         _TRISD 04C9                   ?_POS_CURSOR 0504  
 __end_of_LCD_ESCRIBE_VAR_INT 26A0                         tablat 04F5                         status 04D8  
              ??_CURSOR_ONOFF 0504               __initialization 2B88                  __end_of_main 2794  
   LCD_ESCRIBE_VAR_INT@decena 0513                        ??_main 0515                 __activetblptr 0003  
   LCD_ESCRIBE_VAR_INT@millar 0511     LCD_ESCRIBE_VAR_INT@numero 050D     LCD_ESCRIBE_VAR_INT@unidad 0514  
                      _ADRESH 03EB                        _ADRESL 03EA                        _ANSELB 0408  
                      _ANSELD 0418                        i2l1290 2BB2                        i2l1292 2BB8  
                      i2l1294 2BBA                        i2l1296 2BC0                        i2l1288 2BB0  
                      i2l1298 2BC2                        _OSCFRQ 00B1          __end_of_ENVIA_NIBBLE 2B88  
                   ??___lwdiv 050A                     ??___lwmod 0505                        isa$std 0001  
                      _strlen 2A76                  __mediumconst 0000                        tblptrh 04F7  
                      tblptrl 04F6                        tblptru 04F8                  ??_BORRAR_LCD 0504  
                   ?_LCD_INIT 0501                     ?_LEER_LCD 0501                    __accesstop 0560  
     __end_of__initialization 2B98                     ?_INT0_ISR 0501                     ?_INT1_ISR 0501  
                   ?_INT2_ISR 0501                  ??_LCD_CONFIG 0504                 ___rparam_used 0001  
                ??_ENVIA_CHAR 0502                __pcstackCOMRAM 0501                ivt0x8_undefint 0100  
          __end_of_BORRAR_LCD 2BAE              _ESCRIBE_MENSAJE2 29F4              ENVIA_LCD_CMD@aux 0503  
        __end_of_CURSOR_ONOFF 2B46            __end_of_LCD_CONFIG 29AC            __end_of_ENVIA_CHAR 2B16  
  LCD_ESCRIBE_VAR_INT@centena 0512               _tomamuestra_ADC 2B46                    ??_LCD_INIT 0505  
                  ??_LEER_LCD 0501              ENVIA_NIBBLE@dato 0501                    ??_INT0_ISR 0501  
                  ??_INT1_ISR 0501                    ??_INT2_ISR 0501                       IVTBASEH 045E  
                     IVTBASEL 045D                       IVTBASEU 045F                       ?_strlen 0501  
                     _OSCCON1 00AD                  ??_POS_CURSOR 0505                       __Hparam 0000  
                     __Lparam 0000             __end_of_configuro 29F4                       ___lwdiv 280E  
                     ___lwmod 28F4                  __psmallconst 2500         __end_of_ENVIA_LCD_CMD 2AE2  
                     __pcinit 2B88            __end_of_POS_CURSOR 280E                       __ramtop 2500  
                     __ptext0 26A0                       __ptext1 2B46                       __ptext2 29AC  
                     __ptext3 2794                       __ptext4 2A38                       __ptext5 2958  
                     __ptext6 2B16                       __ptext7 2B9E                       __ptext8 2BA6  
                     __ptext9 2AAE       __end_of_tomamuestra_ADC 2B6C                     _PIE10bits 04A8  
                _ENVIA_NIBBLE 2B6C          end_of_initialization 2B98                     _PIR10bits 04B8  
                     strlen@a 0503                       strlen@s 0501             ESCRIBE_MENSAJE2@i 0507  
                   _TRISAbits 04C6                     _TRISCbits 04C8      __end_of_ESCRIBE_MENSAJE2 2A38  
                _CURSOR_ONOFF 2B16            CURSOR_ONOFF@estado 0504                __end_of_strlen 2AAE  
               ??_CURSOR_HOME 0504              ?_tomamuestra_ADC 0501           start_initialization 2B88  
                  ivt0x8_base 0008             ENVIA_LCD_CMD@dato 0502   LCD_ESCRIBE_VAR_INT@d_millar 0510  
                    ??_strlen 0503                   __pbssCOMRAM 0517           __end_of_CURSOR_HOME 2BA6  
                   _main$1291 0515              ___lwdiv@dividend 0506                      ?___lwdiv 0506  
                    ?___lwmod 0501                     _configuro 29AC                   __smallconst 2500  
         _LCD_ESCRIBE_VAR_INT 252C              ___lwdiv@quotient 050A                      _LCD_INIT 2A38  
                    _LEER_LCD 2882                      _INT0_ISR 2BB0                      _INT1_ISR 2BB8  
                    _INT2_ISR 2BC0                      _LATCbits 04C0                      _LATDbits 04C1  
                    _PIE1bits 049F                      _PIE6bits 04A4          ?_LCD_ESCRIBE_VAR_INT 050D  
                    _PIR1bits 04AF                      _PIR6bits 04B4                POS_CURSOR@fila 0505  
                  ?_configuro 0501                    _ADCON0bits 03F3        ESCRIBE_MENSAJE2@cadena 0504  
                 _CURSOR_HOME 2B9E                   _INTCON0bits 04D6         ??_LCD_ESCRIBE_VAR_INT 0510  
                    __Hrparam 0000             ?_ESCRIBE_MENSAJE2 0504                      __Lrparam 0000  
          ??_ESCRIBE_MENSAJE2 0505                    _ANSELAbits 0400                    _ANSELCbits 0410  
                    __pivt0x8 0008               ___lwdiv@divisor 0508               ___lwdiv@counter 050C  
                    __ptext10 252C                      __ptext11 28F4                      __ptext20 2BC0  
                    __ptext12 280E                      __ptext13 29F4                      __ptext14 2A76  
                    __ptext15 2AE2                      __ptext16 2882                      __ptext17 2B6C  
                    __ptext18 2BB0                      __ptext19 2BB8  LCD_ESCRIBE_VAR_INT@n_digitos 050F  
                  _BORRAR_LCD 2BA6                    _LCD_CONFIG 2958                      _pantalla 0517  
                  _ENVIA_CHAR 2AE2                      isa$xinst 0000                 _ENVIA_LCD_CMD 2AAE  
                 ??_configuro 0501                      intlevel2 0000              ___lwmod@dividend 0501  
              ?_ENVIA_LCD_CMD 0501               ___lwmod@divisor 0503               ___lwmod@counter 0505  
         ESCRIBE_MENSAJE2@tam 0506                   ?_BORRAR_LCD 0501                 ?_ENVIA_NIBBLE 0501  
                  _POS_CURSOR 2794                   ?_LCD_CONFIG 0501                   ?_ENVIA_CHAR 0501  
           POS_CURSOR@columna 0504  
