

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon May 06 18:31:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=4,class=CODE,delta=1
    28                           	psect	text19,global,reloc=4,class=CODE,delta=1
    29                           	psect	text20,global,reloc=4,class=CODE,delta=1
    30                           	psect	text21,global,reloc=4,class=CODE,delta=1
    31                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Generated 18/12/2023 GMT
    37                           ; 
    38                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F57Q43 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     _TRISB	set	1223
    71   000000                     _LATD	set	1217
    72   000000                     _OSCCON1	set	173
    73   000000                     _ANSELD	set	1048
    74   000000                     _LATDbits	set	1217
    75   000000                     _TRISAbits	set	1222
    76   000000                     _TRISCbits	set	1224
    77   000000                     _TRISD	set	1225
    78   000000                     _PORTD	set	1233
    79   000000                     _INTCON0bits	set	1238
    80   000000                     _PIE1bits	set	1183
    81   000000                     _LATCbits	set	1216
    82   000000                     _OSCFRQ	set	177
    83   000000                     _OSCEN	set	179
    84   000000                     _ADRESL	set	1002
    85   000000                     _ADRESH	set	1003
    86   000000                     _ADPCH	set	1004
    87   000000                     _ADCON0bits	set	1011
    88   000000                     _ANSELAbits	set	1024
    89   000000                     _ANSELCbits	set	1040
    90   000000                     _ANSELB	set	1032
    91   000000                     _WPUB	set	1033
    92   000000                     _PIE6bits	set	1188
    93   000000                     _PIE10bits	set	1192
    94   000000                     _PIR1bits	set	1199
    95   000000                     _PIR6bits	set	1204
    96   000000                     _PIR10bits	set	1208
    97                           
    98                           	psect	smallconst
    99   002500                     __psmallconst:
   100                           	callstack 0
   101   002500  00                 	db	0
   102   002501                     STR_1:
   103   002501  48                 	db	72	;'H'
   104   002502  4F                 	db	79	;'O'
   105   002503  4C                 	db	76	;'L'
   106   002504  41                 	db	65	;'A'
   107   002505  20                 	db	32
   108   002506  4D                 	db	77	;'M'
   109   002507  55                 	db	85	;'U'
   110   002508  4E                 	db	78	;'N'
   111   002509  44                 	db	68	;'D'
   112   00250A  4F                 	db	79	;'O'
   113   00250B  21                 	db	33
   114   00250C  00                 	db	0
   115   00250D                     STR_4:
   116   00250D  56                 	db	86	;'V'
   117   00250E  6F                 	db	111	;'o'
   118   00250F  6C                 	db	108	;'l'
   119   002510  74                 	db	116	;'t'
   120   002511  61                 	db	97	;'a'
   121   002512  67                 	db	103	;'g'
   122   002513  65                 	db	101	;'e'
   123   002514  3A                 	db	58	;':'
   124   002515  20                 	db	32
   125   002516  20                 	db	32
   126   002517  00                 	db	0
   127   002518                     STR_3:
   128   002518  50                 	db	80	;'P'
   129   002519  6F                 	db	111	;'o'
   130   00251A  74                 	db	116	;'t'
   131   00251B  20                 	db	32
   132   00251C  76                 	db	118	;'v'
   133   00251D  61                 	db	97	;'a'
   134   00251E  6C                 	db	108	;'l'
   135   00251F  75                 	db	117	;'u'
   136   002520  65                 	db	101	;'e'
   137   002521  3A                 	db	58	;':'
   138   002522  00                 	db	0
   139   002523                     STR_2:
   140   002523  41                 	db	65	;'A'
   141   002524  2F                 	db	47
   142   002525  44                 	db	68	;'D'
   143   002526  20                 	db	32
   144   002527  43                 	db	67	;'C'
   145   002528  68                 	db	104	;'h'
   146   002529  30                 	db	48	;'0'
   147   00252A  3A                 	db	58	;':'
   148   00252B  00                 	db	0
   149   00252C  00                 	db	0	; dummy byte at the end
   150   000000                     
   151                           ; #config settings
   152                           
   153                           	psect	cinit
   154   002BAE                     __pcinit:
   155                           	callstack 0
   156   002BAE                     start_initialization:
   157                           	callstack 0
   158   002BAE                     __initialization:
   159                           	callstack 0
   160                           
   161                           ; Clear objects allocated to COMRAM (1 bytes)
   162   002BAE  6A17               	clrf	__pbssCOMRAM& (0+255),c
   163                           
   164                           ;
   165                           ; Setup IVTBASE
   166                           ;
   167   002BB0  0104               	movlb	4
   168   002BB2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   169   002BB4  6F5D               	movwf	93,b
   170   002BB6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   171   002BB8  6F5E               	movwf	94,b
   172   002BBA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   173   002BBC  6F5F               	movwf	95,b
   174   002BBE                     end_of_initialization:
   175                           	callstack 0
   176   002BBE                     __end_of__initialization:
   177                           	callstack 0
   178   002BBE  0100               	movlb	0
   179   002BC0  EF51  F013         	goto	_main	;jump to C main() function
   180                           
   181                           	psect	bssCOMRAM
   182   000517                     __pbssCOMRAM:
   183                           	callstack 0
   184   000517                     _pantalla:
   185                           	callstack 0
   186   000517                     	ds	1
   187                           
   188                           	psect	cstackCOMRAM
   189   000501                     __pcstackCOMRAM:
   190                           	callstack 0
   191   000501                     ?_strlen:
   192                           	callstack 0
   193   000501                     ?_tomamuestra_ADC:
   194                           	callstack 0
   195   000501                     ?___lwmod:
   196                           	callstack 0
   197   000501                     ENVIA_NIBBLE@dato:
   198                           	callstack 0
   199   000501                     LEER_LCD@aux:
   200                           	callstack 0
   201   000501                     strlen@s:
   202                           	callstack 0
   203   000501                     ___lwmod@dividend:
   204                           	callstack 0
   205                           
   206                           ; 2 bytes @ 0x0
   207   000501                     	ds	1
   208   000502                     ENVIA_CHAR@dato:
   209                           	callstack 0
   210   000502                     ENVIA_LCD_CMD@dato:
   211                           	callstack 0
   212                           
   213                           ; 1 bytes @ 0x1
   214   000502                     	ds	1
   215   000503                     ??_tomamuestra_ADC:
   216   000503                     ENVIA_CHAR@aux:
   217                           	callstack 0
   218   000503                     ENVIA_LCD_CMD@aux:
   219                           	callstack 0
   220   000503                     strlen@a:
   221                           	callstack 0
   222   000503                     ___lwmod@divisor:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x2
   226   000503                     	ds	1
   227   000504                     ??_LCD_CONFIG:
   228   000504                     POS_CURSOR@columna:
   229                           	callstack 0
   230   000504                     CURSOR_ONOFF@estado:
   231                           	callstack 0
   232   000504                     ESCRIBE_MENSAJE2@cadena:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x3
   236   000504                     	ds	1
   237   000505                     ??_ESCRIBE_MENSAJE2:
   238   000505                     ??_LCD_INIT:
   239   000505                     POS_CURSOR@fila:
   240                           	callstack 0
   241   000505                     ___lwmod@counter:
   242                           	callstack 0
   243                           
   244                           ; 1 bytes @ 0x4
   245   000505                     	ds	1
   246   000506                     ?___lwdiv:
   247                           	callstack 0
   248   000506                     ESCRIBE_MENSAJE2@tam:
   249                           	callstack 0
   250   000506                     ___lwdiv@dividend:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x5
   254   000506                     	ds	1
   255   000507                     ESCRIBE_MENSAJE2@i:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0x6
   259   000507                     	ds	1
   260   000508                     ___lwdiv@divisor:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x7
   264   000508                     	ds	2
   265   00050A                     ___lwdiv@quotient:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x9
   269   00050A                     	ds	2
   270   00050C                     ___lwdiv@counter:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0xB
   274   00050C                     	ds	1
   275   00050D                     LCD_ESCRIBE_VAR_INT@numero:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0xC
   279   00050D                     	ds	2
   280   00050F                     LCD_ESCRIBE_VAR_INT@n_digitos:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0xE
   284   00050F                     	ds	1
   285   000510                     LCD_ESCRIBE_VAR_INT@d_millar:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0xF
   289   000510                     	ds	1
   290   000511                     LCD_ESCRIBE_VAR_INT@millar:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x10
   294   000511                     	ds	1
   295   000512                     LCD_ESCRIBE_VAR_INT@centena:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x11
   299   000512                     	ds	1
   300   000513                     LCD_ESCRIBE_VAR_INT@decena:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0x12
   304   000513                     	ds	1
   305   000514                     LCD_ESCRIBE_VAR_INT@unidad:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x13
   309   000514                     	ds	1
   310   000515                     _main$1299:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x14
   314   000515                     	ds	2
   315                           
   316 ;;
   317 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   318 ;;
   319 ;; *************** function _main *****************
   320 ;; Defined at:
   321 ;;		line 41 in file "maincode3.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   339 ;;Total ram usage:        2 bytes
   340 ;; Hardware stack levels required when called: 5
   341 ;; This function calls:
   342 ;;		_ENVIA_CHAR
   343 ;;		_ESCRIBE_MENSAJE2
   344 ;;		_LCD_ESCRIBE_VAR_INT
   345 ;;		_LCD_INIT
   346 ;;		_POS_CURSOR
   347 ;;		___lwdiv
   348 ;;		_configuro
   349 ;;		_tomamuestra_ADC
   350 ;; This function is called by:
   351 ;;		Startup code after reset
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text0
   356   0026A2                     __ptext0:
   357                           	callstack 0
   358   0026A2                     _main:
   359                           	callstack 122
   360   0026A2                     
   361                           ;maincode3.c: 42:     configuro();
   362   0026A2  ECE9  F014         	call	_configuro	;wreg free
   363   0026A6                     
   364                           ;maincode3.c: 43:     LCD_INIT();
   365   0026A6  EC2F  F015         	call	_LCD_INIT	;wreg free
   366   0026AA                     
   367                           ;maincode3.c: 44:     POS_CURSOR(1,0);
   368   0026AA  0E00               	movlw	0
   369   0026AC  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   370   0026AE  0E01               	movlw	1
   371   0026B0  ECDD  F013         	call	_POS_CURSOR
   372   0026B4                     
   373                           ;maincode3.c: 45:     ESCRIBE_MENSAJE2("HOLA MUNDO!");
   374   0026B4  0E01               	movlw	low STR_1
   375   0026B6  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   376   0026B8  EC0D  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   377   0026BC                     l1671:
   378                           
   379                           ;maincode3.c: 47:         POS_CURSOR(2,0);
   380   0026BC  0E00               	movlw	0
   381   0026BE  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   382   0026C0  0E02               	movlw	2
   383   0026C2  ECDD  F013         	call	_POS_CURSOR
   384                           
   385                           ;maincode3.c: 48:         switch(pantalla){
   386   0026C6  EFCC  F013         	goto	l1709
   387   0026CA                     l1673:
   388                           
   389                           ;maincode3.c: 50:                 ESCRIBE_MENSAJE2("A/D Ch0:");
   390   0026CA  0E23               	movlw	low STR_2
   391   0026CC  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   392   0026CE  EC0D  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   393   0026D2                     
   394                           ;maincode3.c: 51:                 LCD_ESCRIBE_VAR_INT(tomamuestra_ADC(),4);
   395   0026D2  ECB6  F015         	call	_tomamuestra_ADC	;wreg free
   396   0026D6  C501  F50D         	movff	?_tomamuestra_ADC,LCD_ESCRIBE_VAR_INT@numero
   397   0026DA  C502  F50E         	movff	?_tomamuestra_ADC+1,LCD_ESCRIBE_VAR_INT@numero+1
   398   0026DE  0E04               	movlw	4
   399   0026E0  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   400   0026E2  EC97  F012         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   401   0026E6                     
   402                           ;maincode3.c: 52:                 ENVIA_CHAR(' ');
   403   0026E6  0E20               	movlw	32
   404   0026E8  EC84  F015         	call	_ENVIA_CHAR
   405   0026EC                     
   406                           ;maincode3.c: 53:                 ENVIA_CHAR(' ');
   407   0026EC  0E20               	movlw	32
   408   0026EE  EC84  F015         	call	_ENVIA_CHAR
   409                           
   410                           ;maincode3.c: 54:                 break;
   411   0026F2  EF5E  F013         	goto	l1671
   412   0026F6                     l1681:
   413                           
   414                           ;maincode3.c: 56:                 ESCRIBE_MENSAJE2("Pot value:");
   415   0026F6  0E18               	movlw	low STR_3
   416   0026F8  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   417   0026FA  EC0D  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   418   0026FE                     
   419                           ;maincode3.c: 57:                 LCD_ESCRIBE_VAR_INT((tomamuestra_ADC()/410),2);
   420   0026FE  ECB6  F015         	call	_tomamuestra_ADC	;wreg free
   421   002702  C501  F506         	movff	?_tomamuestra_ADC,___lwdiv@dividend
   422   002706  C502  F507         	movff	?_tomamuestra_ADC+1,___lwdiv@dividend+1
   423   00270A  0E01               	movlw	1
   424   00270C  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   425   00270E  0E9A               	movlw	154
   426   002710  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   427   002712  EC1A  F014         	call	___lwdiv	;wreg free
   428   002716  C506  F515         	movff	?___lwdiv,_main$1299
   429   00271A  C507  F516         	movff	?___lwdiv+1,_main$1299+1
   430   00271E                     
   431                           ;maincode3.c: 57:                 LCD_ESCRIBE_VAR_INT((tomamuestra_ADC()/410),2);
   432   00271E  C515  F50D         	movff	_main$1299,LCD_ESCRIBE_VAR_INT@numero
   433   002722  C516  F50E         	movff	_main$1299+1,LCD_ESCRIBE_VAR_INT@numero+1
   434   002726  0E02               	movlw	2
   435   002728  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   436   00272A  EC97  F012         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   437   00272E                     
   438                           ;maincode3.c: 58:                 ENVIA_CHAR('K');
   439   00272E  0E4B               	movlw	75
   440   002730  EC84  F015         	call	_ENVIA_CHAR
   441   002734                     
   442                           ;maincode3.c: 59:                 ENVIA_CHAR(0xF4);
   443   002734  0EF4               	movlw	244
   444   002736  EC84  F015         	call	_ENVIA_CHAR
   445   00273A                     
   446                           ;maincode3.c: 60:                 ENVIA_CHAR(' ');
   447   00273A  0E20               	movlw	32
   448   00273C  EC84  F015         	call	_ENVIA_CHAR
   449   002740                     
   450                           ;maincode3.c: 61:                 ENVIA_CHAR(' ');
   451   002740  0E20               	movlw	32
   452   002742  EC84  F015         	call	_ENVIA_CHAR
   453                           
   454                           ;maincode3.c: 62:                 break;
   455   002746  EF5E  F013         	goto	l1671
   456   00274A                     l1695:
   457                           
   458                           ;maincode3.c: 64:                 ESCRIBE_MENSAJE2("Voltage:  ");
   459   00274A  0E0D               	movlw	low STR_4
   460   00274C  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   461   00274E  EC0D  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   462   002752                     
   463                           ;maincode3.c: 65:                 LCD_ESCRIBE_VAR_INT((tomamuestra_ADC()/820),1);
   464   002752  ECB6  F015         	call	_tomamuestra_ADC	;wreg free
   465   002756  C501  F506         	movff	?_tomamuestra_ADC,___lwdiv@dividend
   466   00275A  C502  F507         	movff	?_tomamuestra_ADC+1,___lwdiv@dividend+1
   467   00275E  0E03               	movlw	3
   468   002760  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   469   002762  0E34               	movlw	52
   470   002764  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   471   002766  EC1A  F014         	call	___lwdiv	;wreg free
   472   00276A  C506  F515         	movff	?___lwdiv,_main$1299
   473   00276E  C507  F516         	movff	?___lwdiv+1,_main$1299+1
   474   002772                     
   475                           ;maincode3.c: 65:                 LCD_ESCRIBE_VAR_INT((tomamuestra_ADC()/820),1);
   476   002772  C515  F50D         	movff	_main$1299,LCD_ESCRIBE_VAR_INT@numero
   477   002776  C516  F50E         	movff	_main$1299+1,LCD_ESCRIBE_VAR_INT@numero+1
   478   00277A  0E01               	movlw	1
   479   00277C  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   480   00277E  EC97  F012         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   481   002782                     
   482                           ;maincode3.c: 66:                 ENVIA_CHAR('V');
   483   002782  0E56               	movlw	86
   484   002784  EC84  F015         	call	_ENVIA_CHAR
   485   002788                     
   486                           ;maincode3.c: 67:                 ENVIA_CHAR(' ');
   487   002788  0E20               	movlw	32
   488   00278A  EC84  F015         	call	_ENVIA_CHAR
   489   00278E                     
   490                           ;maincode3.c: 68:                 ENVIA_CHAR(' ');
   491   00278E  0E20               	movlw	32
   492   002790  EC84  F015         	call	_ENVIA_CHAR
   493                           
   494                           ;maincode3.c: 69:                 break;
   495   002794  EF5E  F013         	goto	l1671
   496   002798                     l1709:
   497   002798  5017               	movf	_pantalla^(0+1280),w,c
   498                           
   499                           ; Switch size 1, requested type "simple"
   500                           ; Number of cases is 3, Range of values is 0 to 2
   501                           ; switch strategies available:
   502                           ; Name         Instructions Cycles
   503                           ; simple_byte           10     6 (average)
   504                           ;	Chosen strategy is simple_byte
   505   00279A  0A00               	xorlw	0	; case 0
   506   00279C  B4D8               	btfsc	status,2,c
   507   00279E  EF65  F013         	goto	l1673
   508   0027A2  0A01               	xorlw	1	; case 1
   509   0027A4  B4D8               	btfsc	status,2,c
   510   0027A6  EF7B  F013         	goto	l1681
   511   0027AA  0A03               	xorlw	3	; case 2
   512   0027AC  B4D8               	btfsc	status,2,c
   513   0027AE  EFA5  F013         	goto	l1695
   514   0027B2  EF5E  F013         	goto	l1671
   515   0027B6  EF81  F000         	goto	start
   516   0027BA                     __end_of_main:
   517                           	callstack 0
   518                           
   519 ;; *************** function _tomamuestra_ADC *****************
   520 ;; Defined at:
   521 ;;		line 35 in file "maincode3.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;                  2    0[COMRAM] unsigned int 
   528 ;; Registers used:
   529 ;;		wreg, status,2, status,0
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   537 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   538 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   539 ;;Total ram usage:        4 bytes
   540 ;; Hardware stack levels used: 1
   541 ;; Hardware stack levels required when called: 1
   542 ;; This function calls:
   543 ;;		Nothing
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text1
   550   002B6C                     __ptext1:
   551                           	callstack 0
   552   002B6C                     _tomamuestra_ADC:
   553                           	callstack 125
   554   002B6C                     
   555                           ;maincode3.c: 36:     ADCON0bits.GO = 1;
   556   002B6C  0103               	movlb	3	; () banked
   557   002B6E  81F3               	bsf	243,0,b	;volatile
   558   002B70                     l193:
   559                           
   560                           ; BSR set to: 3
   561   002B70  B1F3               	btfsc	243,0,b	;volatile
   562   002B72  EFBD  F015         	goto	u411
   563   002B76  EFBF  F015         	goto	u410
   564   002B7A                     u411:
   565   002B7A  EFB8  F015         	goto	l193
   566   002B7E                     u410:
   567   002B7E                     
   568                           ; BSR set to: 3
   569                           ;maincode3.c: 38:     return ((ADRESH << 8) + ADRESL);
   570   002B7E  51EB               	movf	235,w,b	;volatile
   571   002B80  6E04               	movwf	(??_tomamuestra_ADC+1)^(0+1280),c
   572   002B82  6A03               	clrf	??_tomamuestra_ADC^(0+1280),c
   573   002B84  51EA               	movf	234,w,b	;volatile
   574   002B86  2403               	addwf	??_tomamuestra_ADC^(0+1280),w,c
   575   002B88  6E01               	movwf	?_tomamuestra_ADC^(0+1280),c
   576   002B8A  0E00               	movlw	0
   577   002B8C  2004               	addwfc	(??_tomamuestra_ADC+1)^(0+1280),w,c
   578   002B8E  6E02               	movwf	(?_tomamuestra_ADC+1)^(0+1280),c
   579   002B90                     
   580                           ; BSR set to: 3
   581   002B90  0012               	return		;funcret
   582   002B92                     __end_of_tomamuestra_ADC:
   583                           	callstack 0
   584                           
   585 ;; *************** function _configuro *****************
   586 ;; Defined at:
   587 ;;		line 8 in file "maincode3.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, status,2
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   605 ;;Total ram usage:        0 bytes
   606 ;; Hardware stack levels used: 1
   607 ;; Hardware stack levels required when called: 1
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text2
   616   0029D2                     __ptext2:
   617                           	callstack 0
   618   0029D2                     _configuro:
   619                           	callstack 125
   620   0029D2                     
   621                           ;maincode3.c: 9:     OSCCON1 = 0x60;
   622   0029D2  0E60               	movlw	96
   623   0029D4  0100               	movlb	0	; () banked
   624   0029D6  6FAD               	movwf	173,b	;volatile
   625                           
   626                           ;maincode3.c: 10:     OSCFRQ = 0x05;
   627   0029D8  0E05               	movlw	5
   628   0029DA  6FB1               	movwf	177,b	;volatile
   629                           
   630                           ;maincode3.c: 11:     OSCEN = 0x40;
   631   0029DC  0E40               	movlw	64
   632   0029DE  6FB3               	movwf	179,b	;volatile
   633   0029E0                     
   634                           ; BSR set to: 0
   635                           ;maincode3.c: 12:     TRISCbits.TRISC0 = 0;
   636   0029E0  90C8               	bcf	200,0,c	;volatile
   637   0029E2                     
   638                           ; BSR set to: 0
   639                           ;maincode3.c: 13:     ANSELCbits.ANSELC0 = 0;
   640   0029E2  0104               	movlb	4	; () banked
   641   0029E4  9110               	bcf	16,0,b	;volatile
   642   0029E6                     
   643                           ; BSR set to: 4
   644                           ;maincode3.c: 14:     LATCbits.LATC0 = 1;
   645   0029E6  80C0               	bsf	192,0,c	;volatile
   646   0029E8                     
   647                           ; BSR set to: 4
   648                           ;maincode3.c: 16:     TRISAbits.TRISA0 = 1;
   649   0029E8  80C6               	bsf	198,0,c	;volatile
   650   0029EA                     
   651                           ; BSR set to: 4
   652                           ;maincode3.c: 17:     ANSELAbits.ANSELA0 = 1;
   653   0029EA  8100               	bsf	0,0,b	;volatile
   654                           
   655                           ;maincode3.c: 18:     ADCON0bits.ADFM = 1;
   656   0029EC  0103               	movlb	3	; () banked
   657   0029EE  51F3               	movf	243,w,b	;volatile
   658   0029F0  0BF3               	andlw	-13
   659   0029F2  0904               	iorlw	4
   660   0029F4  6FF3               	movwf	243,b	;volatile
   661   0029F6                     
   662                           ; BSR set to: 3
   663                           ;maincode3.c: 19:     ADCON0bits.CS = 1;
   664   0029F6  89F3               	bsf	243,4,b	;volatile
   665                           
   666                           ;maincode3.c: 20:     ADPCH = 0x00;
   667   0029F8  0E00               	movlw	0
   668   0029FA  6FEC               	movwf	236,b	;volatile
   669   0029FC                     
   670                           ; BSR set to: 3
   671                           ;maincode3.c: 21:     ADCON0bits.ADON = 1;
   672   0029FC  8FF3               	bsf	243,7,b	;volatile
   673   0029FE                     
   674                           ; BSR set to: 3
   675                           ;maincode3.c: 23:     TRISB = 0xFF;
   676   0029FE  68C7               	setf	199,c	;volatile
   677                           
   678                           ;maincode3.c: 24:     ANSELB = 0xF0;
   679   002A00  0EF0               	movlw	240
   680   002A02  0104               	movlb	4	; () banked
   681   002A04  6F08               	movwf	8,b	;volatile
   682                           
   683                           ;maincode3.c: 25:     WPUB = 0x07;
   684   002A06  0E07               	movlw	7
   685   002A08  6F09               	movwf	9,b	;volatile
   686   002A0A                     
   687                           ; BSR set to: 4
   688                           ;maincode3.c: 26:     INTCON0bits.INT0EDG = 0;
   689   002A0A  90D6               	bcf	214,0,c	;volatile
   690   002A0C                     
   691                           ; BSR set to: 4
   692                           ;maincode3.c: 27:     INTCON0bits.INT1EDG = 0;
   693   002A0C  92D6               	bcf	214,1,c	;volatile
   694   002A0E                     
   695                           ; BSR set to: 4
   696                           ;maincode3.c: 28:     INTCON0bits.INT2EDG = 0;
   697   002A0E  94D6               	bcf	214,2,c	;volatile
   698   002A10                     
   699                           ; BSR set to: 4
   700                           ;maincode3.c: 29:     PIE1bits.INT0IE = 1;
   701   002A10  809F               	bsf	159,0,c	;volatile
   702   002A12                     
   703                           ; BSR set to: 4
   704                           ;maincode3.c: 30:     PIE6bits.INT1IE = 1;
   705   002A12  80A4               	bsf	164,0,c	;volatile
   706   002A14                     
   707                           ; BSR set to: 4
   708                           ;maincode3.c: 31:     PIE10bits.INT2IE = 1;
   709   002A14  80A8               	bsf	168,0,c	;volatile
   710   002A16                     
   711                           ; BSR set to: 4
   712                           ;maincode3.c: 32:     INTCON0bits.GIE = 1;
   713   002A16  8ED6               	bsf	214,7,c	;volatile
   714   002A18                     
   715                           ; BSR set to: 4
   716   002A18  0012               	return		;funcret
   717   002A1A                     __end_of_configuro:
   718                           	callstack 0
   719                           
   720 ;; *************** function _POS_CURSOR *****************
   721 ;; Defined at:
   722 ;;		line 5 in file "LCD.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  fila            1    wreg     unsigned char 
   725 ;;  columna         1    3[COMRAM] unsigned char 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  fila            1    4[COMRAM] unsigned char 
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   737 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   741 ;;Total ram usage:        2 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; Hardware stack levels required when called: 3
   744 ;; This function calls:
   745 ;;		_ENVIA_LCD_CMD
   746 ;; This function is called by:
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text3
   752   0027BA                     __ptext3:
   753                           	callstack 0
   754   0027BA                     _POS_CURSOR:
   755                           	callstack 123
   756                           
   757                           ; BSR set to: 4
   758                           ;incstack = 0
   759                           ;POS_CURSOR@fila stored from wreg
   760   0027BA  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
   761   0027BC                     
   762                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
   763   0027BC  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
   764   0027BE  A4D8               	btfss	status,2,c
   765   0027C0  EFE4  F013         	goto	u361
   766   0027C4  EFE6  F013         	goto	u360
   767   0027C8                     u361:
   768   0027C8  EFEC  F013         	goto	l1493
   769   0027CC                     u360:
   770   0027CC                     
   771                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
   772   0027CC  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   773   0027CE  0F80               	addlw	128
   774   0027D0  EC6A  F015         	call	_ENVIA_LCD_CMD
   775                           
   776                           ;LCD.c: 10:  }
   777   0027D4  EF19  F014         	goto	l32
   778   0027D8                     l1493:
   779   0027D8  0E02               	movlw	2
   780   0027DA  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   781   0027DC  A4D8               	btfss	status,2,c
   782   0027DE  EFF3  F013         	goto	u371
   783   0027E2  EFF5  F013         	goto	u370
   784   0027E6                     u371:
   785   0027E6  EFFB  F013         	goto	l1497
   786   0027EA                     u370:
   787   0027EA                     
   788                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
   789   0027EA  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   790   0027EC  0FC0               	addlw	192
   791   0027EE  EC6A  F015         	call	_ENVIA_LCD_CMD
   792                           
   793                           ;LCD.c: 14:  }
   794   0027F2  EF19  F014         	goto	l32
   795   0027F6                     l1497:
   796   0027F6  0E03               	movlw	3
   797   0027F8  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   798   0027FA  A4D8               	btfss	status,2,c
   799   0027FC  EF02  F014         	goto	u381
   800   002800  EF04  F014         	goto	u380
   801   002804                     u381:
   802   002804  EF0A  F014         	goto	l1501
   803   002808                     u380:
   804   002808                     
   805                           ;LCD.c: 16:  {;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
   806   002808  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   807   00280A  0F94               	addlw	148
   808   00280C  EC6A  F015         	call	_ENVIA_LCD_CMD
   809                           
   810                           ;LCD.c: 18:  }
   811   002810  EF19  F014         	goto	l32
   812   002814                     l1501:
   813   002814  0E04               	movlw	4
   814   002816  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   815   002818  A4D8               	btfss	status,2,c
   816   00281A  EF11  F014         	goto	u391
   817   00281E  EF13  F014         	goto	u390
   818   002822                     u391:
   819   002822  EF19  F014         	goto	l28
   820   002826                     u390:
   821   002826                     
   822                           ;LCD.c: 20:  {;LCD.c: 21:   ENVIA_LCD_CMD(0xD4+columna);
   823   002826  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   824   002828  0FD4               	addlw	212
   825   00282A  EC6A  F015         	call	_ENVIA_LCD_CMD
   826   00282E  EF19  F014         	goto	l32
   827   002832                     l28:
   828   002832                     l32:
   829   002832  0012               	return		;funcret
   830   002834                     __end_of_POS_CURSOR:
   831                           	callstack 0
   832                           
   833 ;; *************** function _LCD_INIT *****************
   834 ;; Defined at:
   835 ;;		line 192 in file "LCD.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   853 ;;Total ram usage:        1 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; Hardware stack levels required when called: 4
   856 ;; This function calls:
   857 ;;		_BORRAR_LCD
   858 ;;		_CURSOR_HOME
   859 ;;		_CURSOR_ONOFF
   860 ;;		_LCD_CONFIG
   861 ;; This function is called by:
   862 ;;		_main
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           	psect	text4
   867   002A5E                     __ptext4:
   868                           	callstack 0
   869   002A5E                     _LCD_INIT:
   870                           	callstack 122
   871   002A5E                     
   872                           ;LCD.c: 193:     TRISD = 0x00;
   873   002A5E  0E00               	movlw	0
   874   002A60  6EC9               	movwf	201,c	;volatile
   875                           
   876                           ;LCD.c: 194:     ANSELD = 0x00;
   877   002A62  0E00               	movlw	0
   878   002A64  0104               	movlb	4	; () banked
   879   002A66  6F18               	movwf	24,b	;volatile
   880   002A68                     
   881                           ; BSR set to: 4
   882                           ;LCD.c: 195:     _delay((unsigned long)((15)*(16000000UL/4000.0)));
   883   002A68  0E4E               	movlw	78
   884   002A6A  6E05               	movwf	??_LCD_INIT^(0+1280),c
   885   002A6C  0EEB               	movlw	235
   886   002A6E                     u517:
   887   002A6E  2EE8               	decfsz	wreg,f,c
   888   002A70  D7FE               	bra	u517
   889   002A72  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   890   002A74  D7FC               	bra	u517
   891   002A76  0000               	nop	
   892   002A78                     
   893                           ;LCD.c: 196:     LCD_CONFIG();
   894   002A78  ECBF  F014         	call	_LCD_CONFIG	;wreg free
   895   002A7C                     
   896                           ;LCD.c: 197:     _delay((unsigned long)((15)*(16000000UL/4000.0)));
   897   002A7C  0E4E               	movlw	78
   898   002A7E  6E05               	movwf	??_LCD_INIT^(0+1280),c
   899   002A80  0EEB               	movlw	235
   900   002A82                     u527:
   901   002A82  2EE8               	decfsz	wreg,f,c
   902   002A84  D7FE               	bra	u527
   903   002A86  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   904   002A88  D7FC               	bra	u527
   905   002A8A  0000               	nop	
   906   002A8C                     
   907                           ;LCD.c: 198:     BORRAR_LCD();
   908   002A8C  ECE6  F015         	call	_BORRAR_LCD	;wreg free
   909   002A90                     
   910                           ;LCD.c: 199:     CURSOR_HOME();
   911   002A90  ECE2  F015         	call	_CURSOR_HOME	;wreg free
   912   002A94                     
   913                           ;LCD.c: 200:     CURSOR_ONOFF(1);
   914   002A94  0E01               	movlw	1
   915   002A96  EC9E  F015         	call	_CURSOR_ONOFF
   916   002A9A  0012               	return		;funcret
   917   002A9C                     __end_of_LCD_INIT:
   918                           	callstack 0
   919                           
   920 ;; *************** function _LCD_CONFIG *****************
   921 ;; Defined at:
   922 ;;		line 109 in file "LCD.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   938 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   939 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   940 ;;Total ram usage:        1 bytes
   941 ;; Hardware stack levels used: 1
   942 ;; Hardware stack levels required when called: 3
   943 ;; This function calls:
   944 ;;		_ENVIA_LCD_CMD
   945 ;;		_ENVIA_NIBBLE
   946 ;; This function is called by:
   947 ;;		_LCD_INIT
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text5
   952   00297E                     __ptext5:
   953                           	callstack 0
   954   00297E                     _LCD_CONFIG:
   955                           	callstack 122
   956   00297E                     
   957                           ;LCD.c: 111:  LATDbits.LATD0 = 0;
   958   00297E  90C1               	bcf	193,0,c	;volatile
   959                           
   960                           ;LCD.c: 112:  LATDbits.LATD1 = 0;
   961   002980  92C1               	bcf	193,1,c	;volatile
   962   002982                     
   963                           ;LCD.c: 113:  ENVIA_NIBBLE(0x30);
   964   002982  0E30               	movlw	48
   965   002984  ECC9  F015         	call	_ENVIA_NIBBLE
   966   002988                     
   967                           ;LCD.c: 114:     _delay((unsigned long)((2)*(16000000UL/4000.0)));
   968   002988  0E0B               	movlw	11
   969   00298A  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   970   00298C  0E62               	movlw	98
   971   00298E                     u537:
   972   00298E  2EE8               	decfsz	wreg,f,c
   973   002990  D7FE               	bra	u537
   974   002992  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   975   002994  D7FC               	bra	u537
   976   002996  D000               	nop2	
   977   002998                     
   978                           ;LCD.c: 115:  ENVIA_NIBBLE(0x30);
   979   002998  0E30               	movlw	48
   980   00299A  ECC9  F015         	call	_ENVIA_NIBBLE
   981                           
   982                           ;LCD.c: 116:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
   983   00299E  0E85               	movlw	133
   984   0029A0                     u547:
   985   0029A0  2EE8               	decfsz	wreg,f,c
   986   0029A2  D7FE               	bra	u547
   987   0029A4  0000               	nop	
   988   0029A6                     
   989                           ;LCD.c: 117:     ENVIA_NIBBLE(0x30);
   990   0029A6  0E30               	movlw	48
   991   0029A8  ECC9  F015         	call	_ENVIA_NIBBLE
   992   0029AC                     
   993                           ;LCD.c: 118:  ENVIA_NIBBLE(0x20);
   994   0029AC  0E20               	movlw	32
   995   0029AE  ECC9  F015         	call	_ENVIA_NIBBLE
   996   0029B2                     
   997                           ;LCD.c: 119:  ENVIA_LCD_CMD(0x01);
   998   0029B2  0E01               	movlw	1
   999   0029B4  EC6A  F015         	call	_ENVIA_LCD_CMD
  1000   0029B8                     
  1001                           ;LCD.c: 120:  ENVIA_LCD_CMD(0x28);
  1002   0029B8  0E28               	movlw	40
  1003   0029BA  EC6A  F015         	call	_ENVIA_LCD_CMD
  1004   0029BE                     
  1005                           ;LCD.c: 121:  ENVIA_LCD_CMD(0x0F);
  1006   0029BE  0E0F               	movlw	15
  1007   0029C0  EC6A  F015         	call	_ENVIA_LCD_CMD
  1008   0029C4                     
  1009                           ;LCD.c: 122:  ENVIA_LCD_CMD(0x06);
  1010   0029C4  0E06               	movlw	6
  1011   0029C6  EC6A  F015         	call	_ENVIA_LCD_CMD
  1012   0029CA                     
  1013                           ;LCD.c: 123:  ENVIA_LCD_CMD(0x01);
  1014   0029CA  0E01               	movlw	1
  1015   0029CC  EC6A  F015         	call	_ENVIA_LCD_CMD
  1016   0029D0  0012               	return		;funcret
  1017   0029D2                     __end_of_LCD_CONFIG:
  1018                           	callstack 0
  1019                           
  1020 ;; *************** function _CURSOR_ONOFF *****************
  1021 ;; Defined at:
  1022 ;;		line 62 in file "LCD.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  estado          1    wreg     unsigned char 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  estado          1    3[COMRAM] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      void 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1040 ;;Total ram usage:        1 bytes
  1041 ;; Hardware stack levels used: 1
  1042 ;; Hardware stack levels required when called: 3
  1043 ;; This function calls:
  1044 ;;		_ENVIA_LCD_CMD
  1045 ;; This function is called by:
  1046 ;;		_LCD_INIT
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text6
  1051   002B3C                     __ptext6:
  1052                           	callstack 0
  1053   002B3C                     _CURSOR_ONOFF:
  1054                           	callstack 122
  1055                           
  1056                           ;incstack = 0
  1057                           ;CURSOR_ONOFF@estado stored from wreg
  1058   002B3C  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  1059   002B3E                     
  1060                           ;LCD.c: 62: void CURSOR_ONOFF(unsigned char estado);LCD.c: 63: {;LCD.c: 64:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1061   002B3E  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  1062   002B40  A4D8               	btfss	status,2,c
  1063   002B42  EFA5  F015         	goto	u271
  1064   002B46  EFA7  F015         	goto	u270
  1065   002B4A                     u271:
  1066   002B4A  EFAA  F015         	goto	l1391
  1067   002B4E                     u270:
  1068   002B4E  0E0E               	movlw	14
  1069   002B50  EC6A  F015         	call	_ENVIA_LCD_CMD
  1070   002B54                     l1391:
  1071                           
  1072                           ;LCD.c: 65:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1073   002B54  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  1074   002B56  A4D8               	btfss	status,2,c
  1075   002B58  EFB0  F015         	goto	u281
  1076   002B5C  EFB2  F015         	goto	u280
  1077   002B60                     u281:
  1078   002B60  EFB5  F015         	goto	l62
  1079   002B64                     u280:
  1080   002B64  0E0C               	movlw	12
  1081   002B66  EC6A  F015         	call	_ENVIA_LCD_CMD
  1082   002B6A                     l62:
  1083   002B6A  0012               	return		;funcret
  1084   002B6C                     __end_of_CURSOR_ONOFF:
  1085                           	callstack 0
  1086                           
  1087 ;; *************** function _CURSOR_HOME *****************
  1088 ;; Defined at:
  1089 ;;		line 37 in file "LCD.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, status,2, status,0, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1107 ;;Total ram usage:        0 bytes
  1108 ;; Hardware stack levels used: 1
  1109 ;; Hardware stack levels required when called: 3
  1110 ;; This function calls:
  1111 ;;		_ENVIA_LCD_CMD
  1112 ;; This function is called by:
  1113 ;;		_LCD_INIT
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text7
  1118   002BC4                     __ptext7:
  1119                           	callstack 0
  1120   002BC4                     _CURSOR_HOME:
  1121                           	callstack 122
  1122   002BC4                     
  1123                           ;LCD.c: 39:  ENVIA_LCD_CMD(0x02);
  1124   002BC4  0E02               	movlw	2
  1125   002BC6  EC6A  F015         	call	_ENVIA_LCD_CMD
  1126   002BCA  0012               	return		;funcret
  1127   002BCC                     __end_of_CURSOR_HOME:
  1128                           	callstack 0
  1129                           
  1130 ;; *************** function _BORRAR_LCD *****************
  1131 ;; Defined at:
  1132 ;;		line 104 in file "LCD.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; Hardware stack levels required when called: 3
  1153 ;; This function calls:
  1154 ;;		_ENVIA_LCD_CMD
  1155 ;; This function is called by:
  1156 ;;		_LCD_INIT
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text8
  1161   002BCC                     __ptext8:
  1162                           	callstack 0
  1163   002BCC                     _BORRAR_LCD:
  1164                           	callstack 122
  1165   002BCC                     
  1166                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x01);
  1167   002BCC  0E01               	movlw	1
  1168   002BCE  EC6A  F015         	call	_ENVIA_LCD_CMD
  1169   002BD2  0012               	return		;funcret
  1170   002BD4                     __end_of_BORRAR_LCD:
  1171                           	callstack 0
  1172                           
  1173 ;; *************** function _ENVIA_LCD_CMD *****************
  1174 ;; Defined at:
  1175 ;;		line 136 in file "LCD.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  dato            1    wreg     unsigned char 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  dato            1    1[COMRAM] unsigned char 
  1180 ;;  aux             1    2[COMRAM] unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1194 ;;Total ram usage:        2 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 2
  1197 ;; This function calls:
  1198 ;;		_ENVIA_NIBBLE
  1199 ;;		_LEER_LCD
  1200 ;; This function is called by:
  1201 ;;		_POS_CURSOR
  1202 ;;		_CURSOR_HOME
  1203 ;;		_CURSOR_ONOFF
  1204 ;;		_BORRAR_LCD
  1205 ;;		_LCD_CONFIG
  1206 ;;		_BLINK_CURSOR
  1207 ;;		_DISPLAY_ONOFF
  1208 ;;		_CURSOR_SHIFTLEFT
  1209 ;;		_CURSOR_SHIFTRIGHT
  1210 ;;		_DISPLAY_SHIFTLEFT
  1211 ;;		_DISPLAY_SHIFTRIGHT
  1212 ;;		_GENERACARACTER
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text9
  1217   002AD4                     __ptext9:
  1218                           	callstack 0
  1219   002AD4                     _ENVIA_LCD_CMD:
  1220                           	callstack 123
  1221                           
  1222                           ;incstack = 0
  1223                           ;ENVIA_LCD_CMD@dato stored from wreg
  1224   002AD4  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1225   002AD6                     
  1226                           ;LCD.c: 136: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 137: {;LCD.c: 138:  unsigned 
      +                          char aux;;LCD.c: 139:  LATDbits.LATD0 = 0;
  1227   002AD6  90C1               	bcf	193,0,c	;volatile
  1228   002AD8                     
  1229                           ;LCD.c: 140:  LEER_LCD();
  1230   002AD8  EC54  F014         	call	_LEER_LCD	;wreg free
  1231   002ADC                     
  1232                           ;LCD.c: 141:  TRISD = 0b00000000;
  1233   002ADC  0E00               	movlw	0
  1234   002ADE  6EC9               	movwf	201,c	;volatile
  1235   002AE0                     
  1236                           ;LCD.c: 142:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1237   002AE0  0E85               	movlw	133
  1238   002AE2                     u557:
  1239   002AE2  2EE8               	decfsz	wreg,f,c
  1240   002AE4  D7FE               	bra	u557
  1241   002AE6  0000               	nop	
  1242   002AE8                     
  1243                           ;LCD.c: 143:     LATDbits.LATD1 = 0;
  1244   002AE8  92C1               	bcf	193,1,c	;volatile
  1245   002AEA                     
  1246                           ;LCD.c: 144:  LATDbits.LATD2 = 0;
  1247   002AEA  94C1               	bcf	193,2,c	;volatile
  1248   002AEC                     
  1249                           ;LCD.c: 145:  LATDbits.LATD0 = 0;
  1250   002AEC  90C1               	bcf	193,0,c	;volatile
  1251   002AEE                     
  1252                           ;LCD.c: 146:  aux = dato & 0xF0;
  1253   002AEE  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1254   002AF0  0BF0               	andlw	240
  1255   002AF2  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1256   002AF4                     
  1257                           ;LCD.c: 147:  ENVIA_NIBBLE(aux);
  1258   002AF4  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1259   002AF6  ECC9  F015         	call	_ENVIA_NIBBLE
  1260   002AFA                     
  1261                           ;LCD.c: 148:  aux = dato<<4;
  1262   002AFA  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1263   002AFC  0BF0               	andlw	240
  1264   002AFE  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1265   002B00                     
  1266                           ;LCD.c: 149:  ENVIA_NIBBLE(aux);
  1267   002B00  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1268   002B02  ECC9  F015         	call	_ENVIA_NIBBLE
  1269   002B06  0012               	return		;funcret
  1270   002B08                     __end_of_ENVIA_LCD_CMD:
  1271                           	callstack 0
  1272                           
  1273 ;; *************** function _LCD_ESCRIBE_VAR_INT *****************
  1274 ;; Defined at:
  1275 ;;		line 224 in file "LCD.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  numero          2   12[COMRAM] unsigned int 
  1278 ;;  n_digitos       1   14[COMRAM] unsigned char 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  unidad          1   19[COMRAM] unsigned char 
  1281 ;;  decena          1   18[COMRAM] unsigned char 
  1282 ;;  centena         1   17[COMRAM] unsigned char 
  1283 ;;  millar          1   16[COMRAM] unsigned char 
  1284 ;;  d_millar        1   15[COMRAM] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1294 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1295 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1297 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1298 ;;Total ram usage:        8 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 3
  1301 ;; This function calls:
  1302 ;;		_ENVIA_CHAR
  1303 ;;		___lwdiv
  1304 ;;		___lwmod
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text10
  1311   00252E                     __ptext10:
  1312                           	callstack 0
  1313   00252E                     _LCD_ESCRIBE_VAR_INT:
  1314                           	callstack 123
  1315   00252E                     
  1316                           ;LCD.c: 225:     unsigned char d_millar, millar, centena, decena, unidad;;LCD.c: 226:   
      +                            d_millar = numero / 10000;
  1317   00252E  C50D  F506         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  1318   002532  C50E  F507         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  1319   002536  0E27               	movlw	39
  1320   002538  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1321   00253A  0E10               	movlw	16
  1322   00253C  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1323   00253E  EC1A  F014         	call	___lwdiv	;wreg free
  1324   002542  5006               	movf	?___lwdiv^(0+1280),w,c
  1325   002544  6E10               	movwf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  1326                           
  1327                           ;LCD.c: 227:     millar = (numero % 10000) / 1000;
  1328   002546  0E27               	movlw	39
  1329   002548  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1330   00254A  0E10               	movlw	16
  1331   00254C  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1332   00254E  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1333   002552  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1334   002556  EC8D  F014         	call	___lwmod	;wreg free
  1335   00255A  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1336   00255E  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1337   002562  0E03               	movlw	3
  1338   002564  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1339   002566  0EE8               	movlw	232
  1340   002568  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1341   00256A  EC1A  F014         	call	___lwdiv	;wreg free
  1342   00256E  5006               	movf	?___lwdiv^(0+1280),w,c
  1343   002570  6E11               	movwf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),c
  1344                           
  1345                           ;LCD.c: 228:     centena = (numero % 1000) / 100;
  1346   002572  0E03               	movlw	3
  1347   002574  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1348   002576  0EE8               	movlw	232
  1349   002578  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1350   00257A  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1351   00257E  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1352   002582  EC8D  F014         	call	___lwmod	;wreg free
  1353   002586  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1354   00258A  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1355   00258E  0E00               	movlw	0
  1356   002590  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1357   002592  0E64               	movlw	100
  1358   002594  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1359   002596  EC1A  F014         	call	___lwdiv	;wreg free
  1360   00259A  5006               	movf	?___lwdiv^(0+1280),w,c
  1361   00259C  6E12               	movwf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),c
  1362                           
  1363                           ;LCD.c: 229:     decena = (numero % 100) / 10;
  1364   00259E  0E00               	movlw	0
  1365   0025A0  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1366   0025A2  0E64               	movlw	100
  1367   0025A4  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1368   0025A6  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1369   0025AA  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1370   0025AE  EC8D  F014         	call	___lwmod	;wreg free
  1371   0025B2  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1372   0025B6  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1373   0025BA  0E00               	movlw	0
  1374   0025BC  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1375   0025BE  0E0A               	movlw	10
  1376   0025C0  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1377   0025C2  EC1A  F014         	call	___lwdiv	;wreg free
  1378   0025C6  5006               	movf	?___lwdiv^(0+1280),w,c
  1379   0025C8  6E13               	movwf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),c
  1380                           
  1381                           ;LCD.c: 230:     unidad = numero % 10;
  1382   0025CA  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1383   0025CE  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1384   0025D2  0E00               	movlw	0
  1385   0025D4  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1386   0025D6  0E0A               	movlw	10
  1387   0025D8  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1388   0025DA  EC8D  F014         	call	___lwmod	;wreg free
  1389   0025DE  5001               	movf	?___lwmod^(0+1280),w,c
  1390   0025E0  6E14               	movwf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),c
  1391                           
  1392                           ;LCD.c: 231:     switch(n_digitos){
  1393   0025E2  EF39  F013         	goto	l1545
  1394   0025E6                     l1533:
  1395                           
  1396                           ;LCD.c: 233:             ENVIA_CHAR(unidad+0x30);
  1397   0025E6  5014               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1398   0025E8  0F30               	addlw	48
  1399   0025EA  EC84  F015         	call	_ENVIA_CHAR
  1400                           
  1401                           ;LCD.c: 234:             break;
  1402   0025EE  EF50  F013         	goto	l121
  1403   0025F2                     l1535:
  1404                           
  1405                           ;LCD.c: 236:             ENVIA_CHAR(decena+0x30);
  1406   0025F2  5013               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1407   0025F4  0F30               	addlw	48
  1408   0025F6  EC84  F015         	call	_ENVIA_CHAR
  1409                           
  1410                           ;LCD.c: 237:             ENVIA_CHAR(unidad+0x30);
  1411   0025FA  5014               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1412   0025FC  0F30               	addlw	48
  1413   0025FE  EC84  F015         	call	_ENVIA_CHAR
  1414                           
  1415                           ;LCD.c: 238:             break;
  1416   002602  EF50  F013         	goto	l121
  1417   002606                     l1537:
  1418                           
  1419                           ;LCD.c: 240:             ENVIA_CHAR(centena+0x30);
  1420   002606  5012               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1421   002608  0F30               	addlw	48
  1422   00260A  EC84  F015         	call	_ENVIA_CHAR
  1423                           
  1424                           ;LCD.c: 241:             ENVIA_CHAR(decena+0x30);
  1425   00260E  5013               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1426   002610  0F30               	addlw	48
  1427   002612  EC84  F015         	call	_ENVIA_CHAR
  1428                           
  1429                           ;LCD.c: 242:             ENVIA_CHAR(unidad+0x30);
  1430   002616  5014               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1431   002618  0F30               	addlw	48
  1432   00261A  EC84  F015         	call	_ENVIA_CHAR
  1433                           
  1434                           ;LCD.c: 243:             break;
  1435   00261E  EF50  F013         	goto	l121
  1436   002622                     l1539:
  1437                           
  1438                           ;LCD.c: 245:             ENVIA_CHAR(millar+0x30);
  1439   002622  5011               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  1440   002624  0F30               	addlw	48
  1441   002626  EC84  F015         	call	_ENVIA_CHAR
  1442                           
  1443                           ;LCD.c: 246:             ENVIA_CHAR(centena+0x30);
  1444   00262A  5012               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1445   00262C  0F30               	addlw	48
  1446   00262E  EC84  F015         	call	_ENVIA_CHAR
  1447                           
  1448                           ;LCD.c: 247:             ENVIA_CHAR(decena+0x30);
  1449   002632  5013               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1450   002634  0F30               	addlw	48
  1451   002636  EC84  F015         	call	_ENVIA_CHAR
  1452                           
  1453                           ;LCD.c: 248:             ENVIA_CHAR(unidad+0x30);
  1454   00263A  5014               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1455   00263C  0F30               	addlw	48
  1456   00263E  EC84  F015         	call	_ENVIA_CHAR
  1457                           
  1458                           ;LCD.c: 249:             break;
  1459   002642  EF50  F013         	goto	l121
  1460   002646                     l1541:
  1461                           
  1462                           ;LCD.c: 251:             ENVIA_CHAR(d_millar+0x30);
  1463   002646  5010               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  1464   002648  0F30               	addlw	48
  1465   00264A  EC84  F015         	call	_ENVIA_CHAR
  1466                           
  1467                           ;LCD.c: 252:             ENVIA_CHAR(millar+0x30);
  1468   00264E  5011               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  1469   002650  0F30               	addlw	48
  1470   002652  EC84  F015         	call	_ENVIA_CHAR
  1471                           
  1472                           ;LCD.c: 253:             ENVIA_CHAR(centena+0x30);
  1473   002656  5012               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1474   002658  0F30               	addlw	48
  1475   00265A  EC84  F015         	call	_ENVIA_CHAR
  1476                           
  1477                           ;LCD.c: 254:             ENVIA_CHAR(decena+0x30);
  1478   00265E  5013               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1479   002660  0F30               	addlw	48
  1480   002662  EC84  F015         	call	_ENVIA_CHAR
  1481                           
  1482                           ;LCD.c: 255:             ENVIA_CHAR(unidad+0x30);
  1483   002666  5014               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1484   002668  0F30               	addlw	48
  1485   00266A  EC84  F015         	call	_ENVIA_CHAR
  1486                           
  1487                           ;LCD.c: 256:             break;
  1488   00266E  EF50  F013         	goto	l121
  1489   002672                     l1545:
  1490   002672  500F               	movf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  1491                           
  1492                           ; Switch size 1, requested type "simple"
  1493                           ; Number of cases is 5, Range of values is 1 to 5
  1494                           ; switch strategies available:
  1495                           ; Name         Instructions Cycles
  1496                           ; simple_byte           16     9 (average)
  1497                           ;	Chosen strategy is simple_byte
  1498   002674  0A01               	xorlw	1	; case 1
  1499   002676  B4D8               	btfsc	status,2,c
  1500   002678  EFF3  F012         	goto	l1533
  1501   00267C  0A03               	xorlw	3	; case 2
  1502   00267E  B4D8               	btfsc	status,2,c
  1503   002680  EFF9  F012         	goto	l1535
  1504   002684  0A01               	xorlw	1	; case 3
  1505   002686  B4D8               	btfsc	status,2,c
  1506   002688  EF03  F013         	goto	l1537
  1507   00268C  0A07               	xorlw	7	; case 4
  1508   00268E  B4D8               	btfsc	status,2,c
  1509   002690  EF11  F013         	goto	l1539
  1510   002694  0A01               	xorlw	1	; case 5
  1511   002696  B4D8               	btfsc	status,2,c
  1512   002698  EF23  F013         	goto	l1541
  1513   00269C  EF50  F013         	goto	l121
  1514   0026A0                     l121:
  1515   0026A0  0012               	return		;funcret
  1516   0026A2                     __end_of_LCD_ESCRIBE_VAR_INT:
  1517                           	callstack 0
  1518                           
  1519 ;; *************** function ___lwmod *****************
  1520 ;; Defined at:
  1521 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  dividend        2    0[COMRAM] unsigned int 
  1524 ;;  divisor         2    2[COMRAM] unsigned int 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  counter         1    4[COMRAM] unsigned char 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  2    0[COMRAM] unsigned int 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1536 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1539 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1540 ;;Total ram usage:        5 bytes
  1541 ;; Hardware stack levels used: 1
  1542 ;; Hardware stack levels required when called: 1
  1543 ;; This function calls:
  1544 ;;		Nothing
  1545 ;; This function is called by:
  1546 ;;		_LCD_ESCRIBE_VAR_INT
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	text11
  1551   00291A                     __ptext11:
  1552                           	callstack 0
  1553   00291A                     ___lwmod:
  1554                           	callstack 124
  1555   00291A  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1556   00291C  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  1557   00291E  B4D8               	btfsc	status,2,c
  1558   002920  EF94  F014         	goto	u331
  1559   002924  EF96  F014         	goto	u330
  1560   002928                     u331:
  1561   002928  EFBA  F014         	goto	l733
  1562   00292C                     u330:
  1563   00292C  0E01               	movlw	1
  1564   00292E  6E05               	movwf	___lwmod@counter^(0+1280),c
  1565   002930  EF9E  F014         	goto	l1479
  1566   002934                     l1477:
  1567   002934  90D8               	bcf	status,0,c
  1568   002936  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  1569   002938  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  1570   00293A  2A05               	incf	___lwmod@counter^(0+1280),f,c
  1571   00293C                     l1479:
  1572   00293C  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  1573   00293E  EFA3  F014         	goto	u341
  1574   002942  EFA5  F014         	goto	u340
  1575   002946                     u341:
  1576   002946  EF9A  F014         	goto	l1477
  1577   00294A                     u340:
  1578   00294A                     l1481:
  1579   00294A  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1580   00294C  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  1581   00294E  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1582   002950  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  1583   002952  A0D8               	btfss	status,0,c
  1584   002954  EFAE  F014         	goto	u351
  1585   002958  EFB0  F014         	goto	u350
  1586   00295C                     u351:
  1587   00295C  EFB4  F014         	goto	l1485
  1588   002960                     u350:
  1589   002960  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1590   002962  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  1591   002964  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1592   002966  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  1593   002968                     l1485:
  1594   002968  90D8               	bcf	status,0,c
  1595   00296A  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  1596   00296C  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  1597   00296E  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  1598   002970  EFA5  F014         	goto	l1481
  1599   002974                     l733:
  1600   002974  C501  F501         	movff	___lwmod@dividend,?___lwmod
  1601   002978  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  1602   00297C  0012               	return		;funcret
  1603   00297E                     __end_of___lwmod:
  1604                           	callstack 0
  1605                           
  1606 ;; *************** function ___lwdiv *****************
  1607 ;; Defined at:
  1608 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  dividend        2    5[COMRAM] unsigned int 
  1611 ;;  divisor         2    7[COMRAM] unsigned int 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  quotient        2    9[COMRAM] unsigned int 
  1614 ;;  counter         1   11[COMRAM] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  2    5[COMRAM] unsigned int 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1624 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1625 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1627 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1628 ;;Total ram usage:        7 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; Hardware stack levels required when called: 1
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		_LCD_ESCRIBE_VAR_INT
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text12
  1640   002834                     __ptext12:
  1641                           	callstack 0
  1642   002834                     ___lwdiv:
  1643                           	callstack 125
  1644   002834  0E00               	movlw	0
  1645   002836  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  1646   002838  0E00               	movlw	0
  1647   00283A  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  1648   00283C  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1649   00283E  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  1650   002840  B4D8               	btfsc	status,2,c
  1651   002842  EF25  F014         	goto	u301
  1652   002846  EF27  F014         	goto	u300
  1653   00284A                     u301:
  1654   00284A  EF4F  F014         	goto	l723
  1655   00284E                     u300:
  1656   00284E  0E01               	movlw	1
  1657   002850  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  1658   002852  EF2F  F014         	goto	l1459
  1659   002856                     l1457:
  1660   002856  90D8               	bcf	status,0,c
  1661   002858  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  1662   00285A  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1663   00285C  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  1664   00285E                     l1459:
  1665   00285E  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  1666   002860  EF34  F014         	goto	u311
  1667   002864  EF36  F014         	goto	u310
  1668   002868                     u311:
  1669   002868  EF2B  F014         	goto	l1457
  1670   00286C                     u310:
  1671   00286C                     l1461:
  1672   00286C  90D8               	bcf	status,0,c
  1673   00286E  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  1674   002870  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  1675   002872  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1676   002874  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  1677   002876  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1678   002878  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  1679   00287A  A0D8               	btfss	status,0,c
  1680   00287C  EF42  F014         	goto	u321
  1681   002880  EF44  F014         	goto	u320
  1682   002884                     u321:
  1683   002884  EF49  F014         	goto	l1469
  1684   002888                     u320:
  1685   002888  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1686   00288A  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  1687   00288C  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1688   00288E  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  1689   002890  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  1690   002892                     l1469:
  1691   002892  90D8               	bcf	status,0,c
  1692   002894  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1693   002896  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  1694   002898  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  1695   00289A  EF36  F014         	goto	l1461
  1696   00289E                     l723:
  1697   00289E  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  1698   0028A2  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1699   0028A6  0012               	return		;funcret
  1700   0028A8                     __end_of___lwdiv:
  1701                           	callstack 0
  1702                           
  1703 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  1704 ;; Defined at:
  1705 ;;		line 77 in file "LCD.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  1708 ;;		 -> STR_4(11), STR_3(11), STR_2(9), STR_1(12), 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  i               1    6[COMRAM] unsigned char 
  1711 ;;  tam             1    5[COMRAM] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1721 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1724 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1725 ;;Total ram usage:        4 bytes
  1726 ;; Hardware stack levels used: 1
  1727 ;; Hardware stack levels required when called: 3
  1728 ;; This function calls:
  1729 ;;		_ENVIA_CHAR
  1730 ;;		_strlen
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text13
  1737   002A1A                     __ptext13:
  1738                           	callstack 0
  1739   002A1A                     _ESCRIBE_MENSAJE2:
  1740                           	callstack 123
  1741   002A1A                     
  1742                           ;LCD.c: 77: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 78: {;LCD.c: 79:     unsign
      +                          ed char tam;;LCD.c: 80:     tam = strlen(cadena);
  1743   002A1A  C504  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  1744   002A1E  EC4E  F015         	call	_strlen	;wreg free
  1745   002A22  5001               	movf	?_strlen^(0+1280),w,c
  1746   002A24  6E06               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  1747   002A26                     
  1748                           ;LCD.c: 82:  for(i = 0; i<tam; i++)
  1749   002A26  0E00               	movlw	0
  1750   002A28  6E07               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  1751   002A2A  EF25  F015         	goto	l1515
  1752   002A2E                     l1511:
  1753                           
  1754                           ;LCD.c: 83:  {;LCD.c: 84:   ENVIA_CHAR(cadena[i]);
  1755   002A2E  5004               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  1756   002A30  2407               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1757   002A32  6E05               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  1758   002A34  C505  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  1759   002A38                     	if	1	;There is more than 1 active tblptr byte
  1760   002A38  0E25               	movlw	high __smallconst
  1761   002A3A  6EF7               	movwf	tblptrh,c
  1762   002A3C                     	endif
  1763   002A3C                     	if	0	;tblptru may be non-zero
  1764   002A3C                     	endif
  1765   002A3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1766   002A3C  0E00               	movlw	low (__smallconst shr (0+16))
  1767   002A3E  6EF8               	movwf	tblptru,c
  1768   002A40                     	endif
  1769   002A40  0008               	tblrd		*
  1770   002A42  50F5               	movf	tablat,w,c
  1771   002A44  EC84  F015         	call	_ENVIA_CHAR
  1772   002A48                     
  1773                           ;LCD.c: 85:  }
  1774   002A48  2A07               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  1775   002A4A                     l1515:
  1776   002A4A  5006               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  1777   002A4C  5C07               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1778   002A4E  A0D8               	btfss	status,0,c
  1779   002A50  EF2C  F015         	goto	u401
  1780   002A54  EF2E  F015         	goto	u400
  1781   002A58                     u401:
  1782   002A58  EF17  F015         	goto	l1511
  1783   002A5C                     u400:
  1784   002A5C  0012               	return		;funcret
  1785   002A5E                     __end_of_ESCRIBE_MENSAJE2:
  1786                           	callstack 0
  1787                           
  1788 ;; *************** function _strlen *****************
  1789 ;; Defined at:
  1790 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  s               1    0[COMRAM] PTR const unsigned char 
  1793 ;;		 -> STR_4(11), STR_3(11), STR_2(9), STR_1(12), 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  a               1    2[COMRAM] PTR const unsigned char 
  1796 ;;		 -> STR_4(11), STR_3(11), STR_2(9), STR_1(12), 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  2    0[COMRAM] unsigned int 
  1799 ;; Registers used:
  1800 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1809 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1810 ;;Total ram usage:        3 bytes
  1811 ;; Hardware stack levels used: 1
  1812 ;; Hardware stack levels required when called: 1
  1813 ;; This function calls:
  1814 ;;		Nothing
  1815 ;; This function is called by:
  1816 ;;		_ESCRIBE_MENSAJE2
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text14
  1821   002A9C                     __ptext14:
  1822                           	callstack 0
  1823   002A9C                     _strlen:
  1824                           	callstack 124
  1825   002A9C  C501  F503         	movff	strlen@s,strlen@a
  1826   002AA0  EF53  F015         	goto	l1421
  1827   002AA4                     l1419:
  1828   002AA4  2A01               	incf	strlen@s^(0+1280),f,c
  1829   002AA6                     l1421:
  1830   002AA6  C501  F4F6         	movff	strlen@s,tblptrl
  1831   002AAA                     	if	1	;There is more than 1 active tblptr byte
  1832   002AAA  0E25               	movlw	high __smallconst
  1833   002AAC  6EF7               	movwf	tblptrh,c
  1834   002AAE                     	endif
  1835   002AAE                     	if	0	;tblptru may be non-zero
  1836   002AAE                     	endif
  1837   002AAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1838   002AAE  0E00               	movlw	low (__smallconst shr (0+16))
  1839   002AB0  6EF8               	movwf	tblptru,c
  1840   002AB2                     	endif
  1841   002AB2  0008               	tblrd		*
  1842   002AB4  50F5               	movf	tablat,w,c
  1843   002AB6  0900               	iorlw	0
  1844   002AB8  A4D8               	btfss	status,2,c
  1845   002ABA  EF61  F015         	goto	u291
  1846   002ABE  EF63  F015         	goto	u290
  1847   002AC2                     u291:
  1848   002AC2  EF52  F015         	goto	l1419
  1849   002AC6                     u290:
  1850   002AC6  5003               	movf	strlen@a^(0+1280),w,c
  1851   002AC8  5C01               	subwf	strlen@s^(0+1280),w,c
  1852   002ACA  6E01               	movwf	?_strlen^(0+1280),c
  1853   002ACC  6A02               	clrf	(?_strlen+1)^(0+1280),c
  1854   002ACE  BE01               	btfsc	?_strlen^(0+1280),7,c
  1855   002AD0  0602               	decf	(?_strlen+1)^(0+1280),f,c
  1856   002AD2  0012               	return		;funcret
  1857   002AD4                     __end_of_strlen:
  1858                           	callstack 0
  1859                           
  1860 ;; *************** function _ENVIA_CHAR *****************
  1861 ;; Defined at:
  1862 ;;		line 88 in file "LCD.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  dato            1    wreg     unsigned char 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  dato            1    1[COMRAM] unsigned char 
  1867 ;;  aux             1    2[COMRAM] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1878 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1880 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1881 ;;Total ram usage:        2 bytes
  1882 ;; Hardware stack levels used: 1
  1883 ;; Hardware stack levels required when called: 2
  1884 ;; This function calls:
  1885 ;;		_ENVIA_NIBBLE
  1886 ;;		_LEER_LCD
  1887 ;; This function is called by:
  1888 ;;		_ESCRIBE_MENSAJE2
  1889 ;;		_LCD_ESCRIBE_VAR_INT
  1890 ;;		_main
  1891 ;;		_ESCRIBE_MENSAJE
  1892 ;;		_GENERACARACTER
  1893 ;;		_LCD_ESCRIBE_VAR_CHAR
  1894 ;;		_LCD_CHAR_GRADO
  1895 ;;		_LCD_VARCHAR_BITS
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text15
  1900   002B08                     __ptext15:
  1901                           	callstack 0
  1902   002B08                     _ENVIA_CHAR:
  1903                           	callstack 123
  1904                           
  1905                           ;incstack = 0
  1906                           ;ENVIA_CHAR@dato stored from wreg
  1907   002B08  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1908   002B0A                     
  1909                           ;LCD.c: 88: void ENVIA_CHAR(unsigned char dato);LCD.c: 89: {;LCD.c: 90:  unsigned char a
      +                          ux;;LCD.c: 91:  LATDbits.LATD0 = 1;
  1910   002B0A  80C1               	bsf	193,0,c	;volatile
  1911   002B0C                     
  1912                           ;LCD.c: 92:  LEER_LCD();
  1913   002B0C  EC54  F014         	call	_LEER_LCD	;wreg free
  1914   002B10                     
  1915                           ;LCD.c: 93:  TRISD = 0x00;
  1916   002B10  0E00               	movlw	0
  1917   002B12  6EC9               	movwf	201,c	;volatile
  1918   002B14                     
  1919                           ;LCD.c: 94:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1920   002B14  0E85               	movlw	133
  1921   002B16                     u567:
  1922   002B16  2EE8               	decfsz	wreg,f,c
  1923   002B18  D7FE               	bra	u567
  1924   002B1A  0000               	nop	
  1925   002B1C                     
  1926                           ;LCD.c: 95:  LATDbits.LATD1 = 0;
  1927   002B1C  92C1               	bcf	193,1,c	;volatile
  1928   002B1E                     
  1929                           ;LCD.c: 96:  LATDbits.LATD2 = 0;
  1930   002B1E  94C1               	bcf	193,2,c	;volatile
  1931   002B20                     
  1932                           ;LCD.c: 97:  LATDbits.LATD0 = 1;
  1933   002B20  80C1               	bsf	193,0,c	;volatile
  1934   002B22                     
  1935                           ;LCD.c: 98:  aux = dato & 0xF0;
  1936   002B22  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1937   002B24  0BF0               	andlw	240
  1938   002B26  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1939   002B28                     
  1940                           ;LCD.c: 99:  ENVIA_NIBBLE(aux);
  1941   002B28  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1942   002B2A  ECC9  F015         	call	_ENVIA_NIBBLE
  1943   002B2E                     
  1944                           ;LCD.c: 100:  aux = dato << 4;
  1945   002B2E  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1946   002B30  0BF0               	andlw	240
  1947   002B32  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1948   002B34                     
  1949                           ;LCD.c: 101:  ENVIA_NIBBLE(aux);
  1950   002B34  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1951   002B36  ECC9  F015         	call	_ENVIA_NIBBLE
  1952   002B3A  0012               	return		;funcret
  1953   002B3C                     __end_of_ENVIA_CHAR:
  1954                           	callstack 0
  1955                           
  1956 ;; *************** function _LEER_LCD *****************
  1957 ;; Defined at:
  1958 ;;		line 152 in file "LCD.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  aux             1    0[COMRAM] unsigned char 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1976 ;;Total ram usage:        1 bytes
  1977 ;; Hardware stack levels used: 1
  1978 ;; Hardware stack levels required when called: 1
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_ENVIA_CHAR
  1983 ;;		_ENVIA_LCD_CMD
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text16
  1988   0028A8                     __ptext16:
  1989                           	callstack 0
  1990   0028A8                     _LEER_LCD:
  1991                           	callstack 123
  1992   0028A8                     
  1993                           ;LCD.c: 154:  unsigned char aux;;LCD.c: 155:  TRISD = 0xF8;
  1994   0028A8  0EF8               	movlw	248
  1995   0028AA  6EC9               	movwf	201,c	;volatile
  1996   0028AC                     
  1997                           ;LCD.c: 156:  LATDbits.LATD0 = 0;
  1998   0028AC  90C1               	bcf	193,0,c	;volatile
  1999   0028AE                     
  2000                           ;LCD.c: 157:  LATDbits.LATD1 = 1;
  2001   0028AE  82C1               	bsf	193,1,c	;volatile
  2002   0028B0                     
  2003                           ;LCD.c: 158:  LATDbits.LATD2 = 1;
  2004   0028B0  84C1               	bsf	193,2,c	;volatile
  2005   0028B2                     
  2006                           ;LCD.c: 159:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2007   0028B2  0E85               	movlw	133
  2008   0028B4                     u577:
  2009   0028B4  2EE8               	decfsz	wreg,f,c
  2010   0028B6  D7FE               	bra	u577
  2011   0028B8  0000               	nop	
  2012   0028BA                     
  2013                           ;LCD.c: 160:  aux = PORTD;
  2014   0028BA  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2015   0028BE                     
  2016                           ;LCD.c: 161:  LATDbits.LATD2 = 0;
  2017   0028BE  94C1               	bcf	193,2,c	;volatile
  2018   0028C0                     
  2019                           ;LCD.c: 162:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2020   0028C0  0E85               	movlw	133
  2021   0028C2                     u587:
  2022   0028C2  2EE8               	decfsz	wreg,f,c
  2023   0028C4  D7FE               	bra	u587
  2024   0028C6  0000               	nop	
  2025   0028C8                     
  2026                           ;LCD.c: 163:  LATDbits.LATD2 = 1;
  2027   0028C8  84C1               	bsf	193,2,c	;volatile
  2028   0028CA                     
  2029                           ;LCD.c: 164:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2030   0028CA  0E85               	movlw	133
  2031   0028CC                     u597:
  2032   0028CC  2EE8               	decfsz	wreg,f,c
  2033   0028CE  D7FE               	bra	u597
  2034   0028D0  0000               	nop	
  2035   0028D2                     
  2036                           ;LCD.c: 165:  LATDbits.LATD2 = 0;
  2037   0028D2  94C1               	bcf	193,2,c	;volatile
  2038   0028D4                     l1339:
  2039                           
  2040                           ;LCD.c: 166:  aux = aux & 0x80;
  2041   0028D4  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  2042   0028D6  0B80               	andlw	128
  2043   0028D8  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  2044                           
  2045                           ;LCD.c: 167:  while(aux == 0x80)
  2046   0028DA  EF83  F014         	goto	l1353
  2047   0028DE                     l93:
  2048                           
  2049                           ;LCD.c: 168:         {;LCD.c: 169:             LATDbits.LATD2 = 1;
  2050   0028DE  84C1               	bsf	193,2,c	;volatile
  2051   0028E0                     
  2052                           ;LCD.c: 170:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2053   0028E0  0E85               	movlw	133
  2054   0028E2                     u607:
  2055   0028E2  2EE8               	decfsz	wreg,f,c
  2056   0028E4  D7FE               	bra	u607
  2057   0028E6  0000               	nop	
  2058   0028E8                     
  2059                           ;LCD.c: 171:             aux = PORTD;
  2060   0028E8  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2061   0028EC                     
  2062                           ;LCD.c: 172:             LATDbits.LATD2 = 0;
  2063   0028EC  94C1               	bcf	193,2,c	;volatile
  2064                           
  2065                           ;LCD.c: 173:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2066   0028EE  0E85               	movlw	133
  2067   0028F0                     u617:
  2068   0028F0  2EE8               	decfsz	wreg,f,c
  2069   0028F2  D7FE               	bra	u617
  2070   0028F4  0000               	nop	
  2071   0028F6                     
  2072                           ;LCD.c: 174:             LATDbits.LATD2 = 1;
  2073   0028F6  84C1               	bsf	193,2,c	;volatile
  2074                           
  2075                           ;LCD.c: 175:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2076   0028F8  0E85               	movlw	133
  2077   0028FA                     u627:
  2078   0028FA  2EE8               	decfsz	wreg,f,c
  2079   0028FC  D7FE               	bra	u627
  2080   0028FE  0000               	nop	
  2081   002900                     
  2082                           ;LCD.c: 176:             LATDbits.LATD2 = 0;
  2083   002900  94C1               	bcf	193,2,c	;volatile
  2084   002902  EF6A  F014         	goto	l1339
  2085   002906                     l1353:
  2086                           
  2087                           ;LCD.c: 167:  while(aux == 0x80)
  2088   002906  0E80               	movlw	128
  2089   002908  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  2090   00290A  B4D8               	btfsc	status,2,c
  2091   00290C  EF8A  F014         	goto	u261
  2092   002910  EF8C  F014         	goto	u260
  2093   002914                     u261:
  2094   002914  EF6F  F014         	goto	l93
  2095   002918                     u260:
  2096   002918  0012               	return		;funcret
  2097   00291A                     __end_of_LEER_LCD:
  2098                           	callstack 0
  2099                           
  2100 ;; *************** function _ENVIA_NIBBLE *****************
  2101 ;; Defined at:
  2102 ;;		line 126 in file "LCD.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  dato            1    wreg     unsigned char 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  dato            1    0[COMRAM] unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2119 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2120 ;;Total ram usage:        1 bytes
  2121 ;; Hardware stack levels used: 1
  2122 ;; Hardware stack levels required when called: 1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_ENVIA_CHAR
  2127 ;;		_LCD_CONFIG
  2128 ;;		_ENVIA_LCD_CMD
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text17
  2133   002B92                     __ptext17:
  2134                           	callstack 0
  2135   002B92                     _ENVIA_NIBBLE:
  2136                           	callstack 123
  2137                           
  2138                           ;incstack = 0
  2139                           ;ENVIA_NIBBLE@dato stored from wreg
  2140   002B92  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2141   002B94                     
  2142                           ;LCD.c: 126: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 127: {;LCD.c: 128:  LATD &= 0x
      +                          0F;
  2143   002B94  0E0F               	movlw	15
  2144   002B96  16C1               	andwf	193,f,c	;volatile
  2145                           
  2146                           ;LCD.c: 129:  dato &= 0xF0;
  2147   002B98  0EF0               	movlw	240
  2148   002B9A  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2149                           
  2150                           ;LCD.c: 130:  LATD|= dato;
  2151   002B9C  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2152   002B9E  12C1               	iorwf	193,f,c	;volatile
  2153   002BA0                     
  2154                           ;LCD.c: 131:  LATDbits.LATD2 = 1;
  2155   002BA0  84C1               	bsf	193,2,c	;volatile
  2156   002BA2                     
  2157                           ;LCD.c: 132:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2158   002BA2  0E85               	movlw	133
  2159   002BA4                     u637:
  2160   002BA4  2EE8               	decfsz	wreg,f,c
  2161   002BA6  D7FE               	bra	u637
  2162   002BA8  0000               	nop	
  2163   002BAA                     
  2164                           ;LCD.c: 133:  LATDbits.LATD2 = 0;
  2165   002BAA  94C1               	bcf	193,2,c	;volatile
  2166   002BAC  0012               	return		;funcret
  2167   002BAE                     __end_of_ENVIA_NIBBLE:
  2168                           	callstack 0
  2169                           
  2170 ;; *************** function _INT0_ISR *****************
  2171 ;; Defined at:
  2172 ;;		line 74 in file "maincode3.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;		None
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;		None
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2190 ;;Total ram usage:        0 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		Interrupt level 2
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text18
  2200   002BD4                     __ptext18:
  2201                           	callstack 0
  2202   002BD4                     _INT0_ISR:
  2203                           	callstack 122
  2204   002BD4                     
  2205                           ;maincode3.c: 75:     PIR1bits.INT0IF = 0;
  2206   002BD4  90AF               	bcf	175,0,c	;volatile
  2207   002BD6                     
  2208                           ;maincode3.c: 76:     pantalla = 0;
  2209   002BD6  0E00               	movlw	0
  2210   002BD8  6E17               	movwf	_pantalla^(0+1280),c
  2211   002BDA  0011               	retfie		f
  2212   002BDC                     __end_of_INT0_ISR:
  2213                           	callstack 0
  2214                           
  2215 ;; *************** function _INT1_ISR *****************
  2216 ;; Defined at:
  2217 ;;		line 79 in file "maincode3.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2235 ;;Total ram usage:        0 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		Interrupt level 2
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text19
  2245   002BDC                     __ptext19:
  2246                           	callstack 0
  2247   002BDC                     _INT1_ISR:
  2248                           	callstack 122
  2249   002BDC                     
  2250                           ;maincode3.c: 80:     PIR6bits.INT1IF = 0;
  2251   002BDC  90B4               	bcf	180,0,c	;volatile
  2252   002BDE                     
  2253                           ;maincode3.c: 81:     pantalla = 1;
  2254   002BDE  0E01               	movlw	1
  2255   002BE0  6E17               	movwf	_pantalla^(0+1280),c
  2256   002BE2  0011               	retfie		f
  2257   002BE4                     __end_of_INT1_ISR:
  2258                           	callstack 0
  2259                           
  2260 ;; *************** function _INT2_ISR *****************
  2261 ;; Defined at:
  2262 ;;		line 84 in file "maincode3.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2280 ;;Total ram usage:        0 bytes
  2281 ;; Hardware stack levels used: 1
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		Interrupt level 2
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text20
  2290   002BE4                     __ptext20:
  2291                           	callstack 0
  2292   002BE4                     _INT2_ISR:
  2293                           	callstack 122
  2294   002BE4                     
  2295                           ;maincode3.c: 85:     PIR10bits.INT2IF = 0;
  2296   002BE4  90B8               	bcf	184,0,c	;volatile
  2297   002BE6                     
  2298                           ;maincode3.c: 86:     pantalla = 2;
  2299   002BE6  0E02               	movlw	2
  2300   002BE8  6E17               	movwf	_pantalla^(0+1280),c
  2301   002BEA  0011               	retfie		f
  2302   002BEC                     __end_of_INT2_ISR:
  2303                           	callstack 0
  2304                           
  2305 ;; *************** function _default_ISR *****************
  2306 ;; Defined at:
  2307 ;;		line 89 in file "maincode3.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;		None
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;		None
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		None
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2325 ;;Total ram usage:        0 bytes
  2326 ;; Hardware stack levels used: 1
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		Interrupt level 2
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           	psect	text21
  2335   002BEC                     __ptext21:
  2336                           	callstack 0
  2337   002BEC                     _default_ISR:
  2338                           	callstack 122
  2339   002BEC  0011               	retfie		f
  2340   002BEE                     __end_of_default_ISR:
  2341                           	callstack 0
  2342                           
  2343                           ;
  2344                           ; H/W Interrupt Vector Table @ 0x8
  2345                           ;
  2346                           
  2347                           	psect	ivt0x8
  2348   000008                     __pivt0x8:
  2349                           	callstack 0
  2350   000008                     ivt0x8_base:
  2351                           	callstack 0
  2352                           
  2353                           ; Vector 0 : SWINT
  2354   000008  0AFB               	dw	_default_ISR shr (0+2)
  2355                           
  2356                           ; Vector 1 : HLVD
  2357   00000A  0AFB               	dw	_default_ISR shr (0+2)
  2358                           
  2359                           ; Vector 2 : OSF
  2360   00000C  0AFB               	dw	_default_ISR shr (0+2)
  2361                           
  2362                           ; Vector 3 : CSW
  2363   00000E  0AFB               	dw	_default_ISR shr (0+2)
  2364                           
  2365                           ; Vector 4 : Undefined
  2366   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  2367                           
  2368                           ; Vector 5 : CLC1
  2369   000012  0AFB               	dw	_default_ISR shr (0+2)
  2370                           
  2371                           ; Vector 6 : Undefined
  2372   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  2373                           
  2374                           ; Vector 7 : IOC
  2375   000016  0AFB               	dw	_default_ISR shr (0+2)
  2376                           
  2377                           ; Vector 8 : INT0
  2378   000018  0AF5               	dw	_INT0_ISR shr (0+2)
  2379                           
  2380                           ; Vector 9 : ZCD
  2381   00001A  0AFB               	dw	_default_ISR shr (0+2)
  2382                           
  2383                           ; Vector 10 : AD
  2384   00001C  0AFB               	dw	_default_ISR shr (0+2)
  2385                           
  2386                           ; Vector 11 : ACT
  2387   00001E  0AFB               	dw	_default_ISR shr (0+2)
  2388                           
  2389                           ; Vector 12 : CMP1
  2390   000020  0AFB               	dw	_default_ISR shr (0+2)
  2391                           
  2392                           ; Vector 13 : SMT1
  2393   000022  0AFB               	dw	_default_ISR shr (0+2)
  2394                           
  2395                           ; Vector 14 : SMT1PRA
  2396   000024  0AFB               	dw	_default_ISR shr (0+2)
  2397                           
  2398                           ; Vector 15 : SMT1PRW
  2399   000026  0AFB               	dw	_default_ISR shr (0+2)
  2400                           
  2401                           ; Vector 16 : ADT
  2402   000028  0AFB               	dw	_default_ISR shr (0+2)
  2403                           
  2404                           ; Vector 17 : Undefined
  2405   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  2406                           
  2407                           ; Vector 18 : Undefined
  2408   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  2409                           
  2410                           ; Vector 19 : Undefined
  2411   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  2412                           
  2413                           ; Vector 20 : DMA1SCNT
  2414   000030  0AFB               	dw	_default_ISR shr (0+2)
  2415                           
  2416                           ; Vector 21 : DMA1DCNT
  2417   000032  0AFB               	dw	_default_ISR shr (0+2)
  2418                           
  2419                           ; Vector 22 : DMA1OR
  2420   000034  0AFB               	dw	_default_ISR shr (0+2)
  2421                           
  2422                           ; Vector 23 : DMA1A
  2423   000036  0AFB               	dw	_default_ISR shr (0+2)
  2424                           
  2425                           ; Vector 24 : SPI1RX
  2426   000038  0AFB               	dw	_default_ISR shr (0+2)
  2427                           
  2428                           ; Vector 25 : SPI1TX
  2429   00003A  0AFB               	dw	_default_ISR shr (0+2)
  2430                           
  2431                           ; Vector 26 : SPI1
  2432   00003C  0AFB               	dw	_default_ISR shr (0+2)
  2433                           
  2434                           ; Vector 27 : TMR2
  2435   00003E  0AFB               	dw	_default_ISR shr (0+2)
  2436                           
  2437                           ; Vector 28 : TMR1
  2438   000040  0AFB               	dw	_default_ISR shr (0+2)
  2439                           
  2440                           ; Vector 29 : TMR1G
  2441   000042  0AFB               	dw	_default_ISR shr (0+2)
  2442                           
  2443                           ; Vector 30 : CCP1
  2444   000044  0AFB               	dw	_default_ISR shr (0+2)
  2445                           
  2446                           ; Vector 31 : TMR0
  2447   000046  0AFB               	dw	_default_ISR shr (0+2)
  2448                           
  2449                           ; Vector 32 : U1RX
  2450   000048  0AFB               	dw	_default_ISR shr (0+2)
  2451                           
  2452                           ; Vector 33 : U1TX
  2453   00004A  0AFB               	dw	_default_ISR shr (0+2)
  2454                           
  2455                           ; Vector 34 : U1E
  2456   00004C  0AFB               	dw	_default_ISR shr (0+2)
  2457                           
  2458                           ; Vector 35 : U1
  2459   00004E  0AFB               	dw	_default_ISR shr (0+2)
  2460                           
  2461                           ; Vector 36 : Undefined
  2462   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  2463                           
  2464                           ; Vector 37 : Undefined
  2465   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  2466                           
  2467                           ; Vector 38 : PWM1PR
  2468   000054  0AFB               	dw	_default_ISR shr (0+2)
  2469                           
  2470                           ; Vector 39 : PWM1
  2471   000056  0AFB               	dw	_default_ISR shr (0+2)
  2472                           
  2473                           ; Vector 40 : SPI2RX
  2474   000058  0AFB               	dw	_default_ISR shr (0+2)
  2475                           
  2476                           ; Vector 41 : SPI2TX
  2477   00005A  0AFB               	dw	_default_ISR shr (0+2)
  2478                           
  2479                           ; Vector 42 : SPI2
  2480   00005C  0AFB               	dw	_default_ISR shr (0+2)
  2481                           
  2482                           ; Vector 43 : Undefined
  2483   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  2484                           
  2485                           ; Vector 44 : TMR3
  2486   000060  0AFB               	dw	_default_ISR shr (0+2)
  2487                           
  2488                           ; Vector 45 : TMR3G
  2489   000062  0AFB               	dw	_default_ISR shr (0+2)
  2490                           
  2491                           ; Vector 46 : PWM2PR
  2492   000064  0AFB               	dw	_default_ISR shr (0+2)
  2493                           
  2494                           ; Vector 47 : PWM2
  2495   000066  0AFB               	dw	_default_ISR shr (0+2)
  2496                           
  2497                           ; Vector 48 : INT1
  2498   000068  0AF7               	dw	_INT1_ISR shr (0+2)
  2499                           
  2500                           ; Vector 49 : CLC2
  2501   00006A  0AFB               	dw	_default_ISR shr (0+2)
  2502                           
  2503                           ; Vector 50 : CWG1
  2504   00006C  0AFB               	dw	_default_ISR shr (0+2)
  2505                           
  2506                           ; Vector 51 : NCO1
  2507   00006E  0AFB               	dw	_default_ISR shr (0+2)
  2508                           
  2509                           ; Vector 52 : DMA2SCNT
  2510   000070  0AFB               	dw	_default_ISR shr (0+2)
  2511                           
  2512                           ; Vector 53 : DMA2DCNT
  2513   000072  0AFB               	dw	_default_ISR shr (0+2)
  2514                           
  2515                           ; Vector 54 : DMA2OR
  2516   000074  0AFB               	dw	_default_ISR shr (0+2)
  2517                           
  2518                           ; Vector 55 : DMA2A
  2519   000076  0AFB               	dw	_default_ISR shr (0+2)
  2520                           
  2521                           ; Vector 56 : I2C1RX
  2522   000078  0AFB               	dw	_default_ISR shr (0+2)
  2523                           
  2524                           ; Vector 57 : I2C1TX
  2525   00007A  0AFB               	dw	_default_ISR shr (0+2)
  2526                           
  2527                           ; Vector 58 : I2C1
  2528   00007C  0AFB               	dw	_default_ISR shr (0+2)
  2529                           
  2530                           ; Vector 59 : I2C1E
  2531   00007E  0AFB               	dw	_default_ISR shr (0+2)
  2532                           
  2533                           ; Vector 60 : Undefined
  2534   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  2535                           
  2536                           ; Vector 61 : CLC3
  2537   000082  0AFB               	dw	_default_ISR shr (0+2)
  2538                           
  2539                           ; Vector 62 : PWM3PR
  2540   000084  0AFB               	dw	_default_ISR shr (0+2)
  2541                           
  2542                           ; Vector 63 : PWM3
  2543   000086  0AFB               	dw	_default_ISR shr (0+2)
  2544                           
  2545                           ; Vector 64 : U2RX
  2546   000088  0AFB               	dw	_default_ISR shr (0+2)
  2547                           
  2548                           ; Vector 65 : U2TX
  2549   00008A  0AFB               	dw	_default_ISR shr (0+2)
  2550                           
  2551                           ; Vector 66 : U2E
  2552   00008C  0AFB               	dw	_default_ISR shr (0+2)
  2553                           
  2554                           ; Vector 67 : U2
  2555   00008E  0AFB               	dw	_default_ISR shr (0+2)
  2556                           
  2557                           ; Vector 68 : TMR5
  2558   000090  0AFB               	dw	_default_ISR shr (0+2)
  2559                           
  2560                           ; Vector 69 : TMR5G
  2561   000092  0AFB               	dw	_default_ISR shr (0+2)
  2562                           
  2563                           ; Vector 70 : CCP2
  2564   000094  0AFB               	dw	_default_ISR shr (0+2)
  2565                           
  2566                           ; Vector 71 : SCAN
  2567   000096  0AFB               	dw	_default_ISR shr (0+2)
  2568                           
  2569                           ; Vector 72 : U3RX
  2570   000098  0AFB               	dw	_default_ISR shr (0+2)
  2571                           
  2572                           ; Vector 73 : U3TX
  2573   00009A  0AFB               	dw	_default_ISR shr (0+2)
  2574                           
  2575                           ; Vector 74 : U3E
  2576   00009C  0AFB               	dw	_default_ISR shr (0+2)
  2577                           
  2578                           ; Vector 75 : U3
  2579   00009E  0AFB               	dw	_default_ISR shr (0+2)
  2580                           
  2581                           ; Vector 76 : Undefined
  2582   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  2583                           
  2584                           ; Vector 77 : CLC4
  2585   0000A2  0AFB               	dw	_default_ISR shr (0+2)
  2586                           
  2587                           ; Vector 78 : Undefined
  2588   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  2589                           
  2590                           ; Vector 79 : Undefined
  2591   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  2592                           
  2593                           ; Vector 80 : INT2
  2594   0000A8  0AF9               	dw	_INT2_ISR shr (0+2)
  2595                           
  2596                           ; Vector 81 : CLC5
  2597   0000AA  0AFB               	dw	_default_ISR shr (0+2)
  2598                           
  2599                           ; Vector 82 : CWG2
  2600   0000AC  0AFB               	dw	_default_ISR shr (0+2)
  2601                           
  2602                           ; Vector 83 : NCO2
  2603   0000AE  0AFB               	dw	_default_ISR shr (0+2)
  2604                           
  2605                           ; Vector 84 : DMA3SCNT
  2606   0000B0  0AFB               	dw	_default_ISR shr (0+2)
  2607                           
  2608                           ; Vector 85 : DMA3DCNT
  2609   0000B2  0AFB               	dw	_default_ISR shr (0+2)
  2610                           
  2611                           ; Vector 86 : DMA3OR
  2612   0000B4  0AFB               	dw	_default_ISR shr (0+2)
  2613                           
  2614                           ; Vector 87 : DMA3A
  2615   0000B6  0AFB               	dw	_default_ISR shr (0+2)
  2616                           
  2617                           ; Vector 88 : CCP3
  2618   0000B8  0AFB               	dw	_default_ISR shr (0+2)
  2619                           
  2620                           ; Vector 89 : CLC6
  2621   0000BA  0AFB               	dw	_default_ISR shr (0+2)
  2622                           
  2623                           ; Vector 90 : CWG3
  2624   0000BC  0AFB               	dw	_default_ISR shr (0+2)
  2625                           
  2626                           ; Vector 91 : TMR4
  2627   0000BE  0AFB               	dw	_default_ISR shr (0+2)
  2628                           
  2629                           ; Vector 92 : DMA4SCNT
  2630   0000C0  0AFB               	dw	_default_ISR shr (0+2)
  2631                           
  2632                           ; Vector 93 : DMA4DCNT
  2633   0000C2  0AFB               	dw	_default_ISR shr (0+2)
  2634                           
  2635                           ; Vector 94 : DMA4OR
  2636   0000C4  0AFB               	dw	_default_ISR shr (0+2)
  2637                           
  2638                           ; Vector 95 : DMA4A
  2639   0000C6  0AFB               	dw	_default_ISR shr (0+2)
  2640                           
  2641                           ; Vector 96 : U4RX
  2642   0000C8  0AFB               	dw	_default_ISR shr (0+2)
  2643                           
  2644                           ; Vector 97 : U4TX
  2645   0000CA  0AFB               	dw	_default_ISR shr (0+2)
  2646                           
  2647                           ; Vector 98 : U4E
  2648   0000CC  0AFB               	dw	_default_ISR shr (0+2)
  2649                           
  2650                           ; Vector 99 : U4
  2651   0000CE  0AFB               	dw	_default_ISR shr (0+2)
  2652                           
  2653                           ; Vector 100 : DMA5SCNT
  2654   0000D0  0AFB               	dw	_default_ISR shr (0+2)
  2655                           
  2656                           ; Vector 101 : DMA5DCNT
  2657   0000D2  0AFB               	dw	_default_ISR shr (0+2)
  2658                           
  2659                           ; Vector 102 : DMA5OR
  2660   0000D4  0AFB               	dw	_default_ISR shr (0+2)
  2661                           
  2662                           ; Vector 103 : DMA5A
  2663   0000D6  0AFB               	dw	_default_ISR shr (0+2)
  2664                           
  2665                           ; Vector 104 : U5RX
  2666   0000D8  0AFB               	dw	_default_ISR shr (0+2)
  2667                           
  2668                           ; Vector 105 : U5TX
  2669   0000DA  0AFB               	dw	_default_ISR shr (0+2)
  2670                           
  2671                           ; Vector 106 : U5E
  2672   0000DC  0AFB               	dw	_default_ISR shr (0+2)
  2673                           
  2674                           ; Vector 107 : U5
  2675   0000DE  0AFB               	dw	_default_ISR shr (0+2)
  2676                           
  2677                           ; Vector 108 : DMA6SCNT
  2678   0000E0  0AFB               	dw	_default_ISR shr (0+2)
  2679                           
  2680                           ; Vector 109 : DMA6DCNT
  2681   0000E2  0AFB               	dw	_default_ISR shr (0+2)
  2682                           
  2683                           ; Vector 110 : DMA6OR
  2684   0000E4  0AFB               	dw	_default_ISR shr (0+2)
  2685                           
  2686                           ; Vector 111 : DMA6A
  2687   0000E6  0AFB               	dw	_default_ISR shr (0+2)
  2688                           
  2689                           ; Vector 112 : Undefined
  2690   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  2691                           
  2692                           ; Vector 113 : CLC7
  2693   0000EA  0AFB               	dw	_default_ISR shr (0+2)
  2694                           
  2695                           ; Vector 114 : CMP2
  2696   0000EC  0AFB               	dw	_default_ISR shr (0+2)
  2697                           
  2698                           ; Vector 115 : NCO3
  2699   0000EE  0AFB               	dw	_default_ISR shr (0+2)
  2700                           
  2701                           ; Vector 116 : Undefined
  2702   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  2703                           
  2704                           ; Vector 117 : Undefined
  2705   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  2706                           
  2707                           ; Vector 118 : Undefined
  2708   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  2709                           
  2710                           ; Vector 119 : Undefined
  2711   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  2712                           
  2713                           ; Vector 120 : NVM
  2714   0000F8  0AFB               	dw	_default_ISR shr (0+2)
  2715                           
  2716                           ; Vector 121 : CLC8
  2717   0000FA  0AFB               	dw	_default_ISR shr (0+2)
  2718                           
  2719                           ; Vector 122 : CRC
  2720   0000FC  0AFB               	dw	_default_ISR shr (0+2)
  2721                           
  2722                           ; Vector 123 : TMR6
  2723   0000FE  0AFB               	dw	_default_ISR shr (0+2)
  2724   000100                     ivt0x8_undefint:
  2725                           	callstack 0
  2726   000100  00FF               	reset	
  2727                           
  2728                           	psect	rparam
  2729   000000                     
  2730                           	psect	config
  2731                           
  2732                           ;Config register CONFIG1 @ 0x300000
  2733                           ;	External Oscillator Selection
  2734                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  2735                           ;	Reset Oscillator Selection
  2736                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2737   300000                     	org	3145728
  2738   300000  FF                 	db	255
  2739                           
  2740                           ;Config register CONFIG2 @ 0x300001
  2741                           ;	Clock out Enable bit
  2742                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2743                           ;	PRLOCKED One-Way Set Enable bit
  2744                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2745                           ;	Clock Switch Enable bit
  2746                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2747                           ;	Fail-Safe Clock Monitor Enable bit
  2748                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2749   300001                     	org	3145729
  2750   300001  FF                 	db	255
  2751                           
  2752                           ;Config register CONFIG3 @ 0x300002
  2753                           ;	MCLR Enable bit
  2754                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2755                           ;	Power-up timer selection bits
  2756                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  2757                           ;	Multi-vector enable bit
  2758                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2759                           ;	IVTLOCK bit One-way set enable bit
  2760                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2761                           ;	Low Power BOR Enable bit
  2762                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2763                           ;	Brown-out Reset Enable bits
  2764                           ;	BOREN = OFF, Brown-out Reset disabled
  2765   300002                     	org	3145730
  2766   300002  3D                 	db	61
  2767                           
  2768                           ;Config register CONFIG4 @ 0x300003
  2769                           ;	Brown-out Reset Voltage Selection bits
  2770                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2771                           ;	ZCD Disable bit
  2772                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2773                           ;	PPSLOCK bit One-Way Set Enable bit
  2774                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2775                           ;	Stack Full/Underflow Reset Enable bit
  2776                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2777                           ;	Low Voltage Programming Enable bit
  2778                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2779                           ;	Extended Instruction Set Enable bit
  2780                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2781   300003                     	org	3145731
  2782   300003  DF                 	db	223
  2783                           
  2784                           ;Config register CONFIG5 @ 0x300004
  2785                           ;	WDT Period selection bits
  2786                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2787                           ;	WDT operating mode
  2788                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2789   300004                     	org	3145732
  2790   300004  9F                 	db	159
  2791                           
  2792                           ;Config register CONFIG6 @ 0x300005
  2793                           ;	WDT Window Select bits
  2794                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2795                           ;	WDT input clock selector
  2796                           ;	WDTCCS = SC, Software Control
  2797   300005                     	org	3145733
  2798   300005  FF                 	db	255
  2799                           
  2800                           ;Config register CONFIG7 @ 0x300006
  2801                           ;	Boot Block Size selection bits
  2802                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2803                           ;	Boot Block enable bit
  2804                           ;	BBEN = OFF, Boot block disabled
  2805                           ;	Storage Area Flash enable bit
  2806                           ;	SAFEN = OFF, SAF disabled
  2807                           ;	Background Debugger
  2808                           ;	DEBUG = OFF, Background Debugger disabled
  2809   300006                     	org	3145734
  2810   300006  FF                 	db	255
  2811                           
  2812                           ;Config register CONFIG8 @ 0x300007
  2813                           ;	Boot Block Write Protection bit
  2814                           ;	WRTB = OFF, Boot Block not Write protected
  2815                           ;	Configuration Register Write Protection bit
  2816                           ;	WRTC = OFF, Configuration registers not Write protected
  2817                           ;	Data EEPROM Write Protection bit
  2818                           ;	WRTD = OFF, Data EEPROM not Write protected
  2819                           ;	SAF Write protection bit
  2820                           ;	WRTSAF = OFF, SAF not Write Protected
  2821                           ;	Application Block write protection bit
  2822                           ;	WRTAPP = OFF, Application Block not write protected
  2823   300007                     	org	3145735
  2824   300007  FF                 	db	255
  2825                           
  2826                           ;Config register CONFIG10 @ 0x300009
  2827                           ;	PFM and Data EEPROM Code Protection bit
  2828                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2829   300009                     	org	3145737
  2830   300009  FF                 	db	255
  2831                           tosu	equ	0x4FF
  2832                           tosh	equ	0x4FE
  2833                           tosl	equ	0x4FD
  2834                           stkptr	equ	0x4FC
  2835                           pclatu	equ	0x4FB
  2836                           pclath	equ	0x4FA
  2837                           pcl	equ	0x4F9
  2838                           tblptru	equ	0x4F8
  2839                           tblptrh	equ	0x4F7
  2840                           tblptrl	equ	0x4F6
  2841                           tablat	equ	0x4F5
  2842                           prodh	equ	0x4F4
  2843                           prodl	equ	0x4F3
  2844                           indf0	equ	0x4EF
  2845                           postinc0	equ	0x4EE
  2846                           postdec0	equ	0x4ED
  2847                           preinc0	equ	0x4EC
  2848                           plusw0	equ	0x4EB
  2849                           fsr0h	equ	0x4EA
  2850                           fsr0l	equ	0x4E9
  2851                           wreg	equ	0x4E8
  2852                           indf1	equ	0x4E7
  2853                           postinc1	equ	0x4E6
  2854                           postdec1	equ	0x4E5
  2855                           preinc1	equ	0x4E4
  2856                           plusw1	equ	0x4E3
  2857                           fsr1h	equ	0x4E2
  2858                           fsr1l	equ	0x4E1
  2859                           bsr	equ	0x4E0
  2860                           indf2	equ	0x4DF
  2861                           postinc2	equ	0x4DE
  2862                           postdec2	equ	0x4DD
  2863                           preinc2	equ	0x4DC
  2864                           plusw2	equ	0x4DB
  2865                           fsr2h	equ	0x4DA
  2866                           fsr2l	equ	0x4D9
  2867                           status	equ	0x4D8

Data Sizes:
    Strings     43
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      23
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), STR_2(CODE[9]), STR_3(CODE[11]), STR_4(CODE[11]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), STR_2(CODE[9]), STR_3(CODE[11]), STR_4(CODE[11]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), STR_2(CODE[9]), STR_3(CODE[11]), STR_4(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_LCD_ESCRIBE_VAR_INT
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _LCD_ESCRIBE_VAR_INT->___lwdiv
    ___lwdiv->___lwmod
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _default_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _default_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _default_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _default_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _default_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _default_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _default_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _default_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _default_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _default_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _default_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _default_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _default_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _default_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _default_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _default_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _default_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _default_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _default_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _default_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _default_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _default_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _default_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _default_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _default_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _default_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _default_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _default_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _INT1_ISR in BANK32

    None.

Critical Paths under _INT2_ISR in BANK32

    None.

Critical Paths under _default_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _INT1_ISR in BANK33

    None.

Critical Paths under _INT2_ISR in BANK33

    None.

Critical Paths under _default_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _INT1_ISR in BANK34

    None.

Critical Paths under _INT2_ISR in BANK34

    None.

Critical Paths under _default_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _INT1_ISR in BANK35

    None.

Critical Paths under _INT2_ISR in BANK35

    None.

Critical Paths under _default_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Critical Paths under _INT1_ISR in BANK36

    None.

Critical Paths under _INT2_ISR in BANK36

    None.

Critical Paths under _default_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6327
                                             20 COMRAM     2     2      0
                         _ENVIA_CHAR
                   _ESCRIBE_MENSAJE2
                _LCD_ESCRIBE_VAR_INT
                           _LCD_INIT
                         _POS_CURSOR
                            ___lwdiv
                          _configuro
                    _tomamuestra_ADC
 ---------------------------------------------------------------------------------
 (1) _tomamuestra_ADC                                      4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     511
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             1     1      0     799
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     206
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     227
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     183
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_ESCRIBE_VAR_INT                                  8     5      3    2947
                                             12 COMRAM     8     5      3
                         _ENVIA_CHAR
                            ___lwdiv
                            ___lwmod
                    _tomamuestra_ADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1074
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
                    _tomamuestra_ADC (ARG)
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1     767
                                              3 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     183
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _default_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
     _strlen
   _LCD_ESCRIBE_VAR_INT
     _ENVIA_CHAR
     ___lwdiv
       ___lwmod (ARG)
       _tomamuestra_ADC (ARG)
     ___lwmod
     _tomamuestra_ADC (ARG)
   _LCD_INIT
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
   ___lwdiv
   _configuro
   _tomamuestra_ADC

 _INT0_ISR (ROOT)

 _INT1_ISR (ROOT)

 _INT2_ISR (ROOT)

 _default_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllhhhl    336      0       0      87        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK27          100      0       0      49        0.0%
BANK27             100      0       0      50        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRlll        AD      0       0      90        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhl        86      0       0      81        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      17       1       24.2%
BITBIGSFRhhhh       29      0       0      71        0.0%
BITBIGSFRllhhhl      C      0       0      85        0.0%
BITBIGSFRlhhhhh      7      0       0      75        0.0%
BITBIGSFRllhhhl      7      0       0      84        0.0%
BITBIGSFRllhhhh      7      0       0      82        0.0%
BITBIGSFRhhl         7      0       0      73        0.0%
BITBIGSFRlhhhhl      6      0       0      78        0.0%
BITBIGSFRllhhhl      6      0       0      83        0.0%
BITBIGSFRllhhhl      6      0       0      86        0.0%
BITBIGSFRlhhhhh      4      0       0      77        0.0%
BITBIGSFRlhhl        4      0       0      80        0.0%
BITBIGSFRhhhl        4      0       0      72        0.0%
BITBIGSFRhll         4      0       0      74        0.0%
BITBIGSFRlhhhhh      3      0       0      76        0.0%
BITBIGSFRlhhhl       3      0       0      79        0.0%
BITBIGSFRllhl        3      0       0      89        0.0%
BITBIGSFRllhhl       1      0       0      88        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      17      48        0.0%
DATA                 0      0      17       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon May 06 18:31:05 2024

                          l32 2832                            l28 2832                            l45 2BCA  
                          l62 2B6A                            l80 2BD2                            l74 2A5C  
                          l83 29D0                            l93 28DE                            l77 2B3A  
                          l86 2BAC                            l95 2918                            l89 2B06  
               ENVIA_CHAR@aux 0503                           l103 2A9A                           l121 26A0  
                         l190 2A18                           l193 2B70                           l196 2B90  
                         l730 28A6                           l723 289E                           l740 297C  
                         l733 2974                           l909 2AD2                           u300 284E  
                         u301 284A                           u310 286C                           u311 2868  
                         u400 2A5C                           u320 2888                           u401 2A58  
                         u321 2884                           u330 292C                           u410 2B7E  
                         u331 2928                           u411 2B7A                           u260 2918  
                         u340 294A                           u261 2914                           u341 2946  
                         u350 2960                           u270 2B4E                           u351 295C  
                         u271 2B4A                           u280 2B64                           u360 27CC  
                         u281 2B60                           u361 27C8                           u290 2AC6  
                         u370 27EA                           u291 2AC2                           u371 27E6  
                         u380 2808                           u517 2A6E                           u381 2804  
                         u390 2826                           u607 28E2                           u527 2A82  
                         u391 2822                           u617 28F0                           u537 298E  
                         u627 28FA                           u547 29A0                           u637 2BA4  
                         u557 2AE2                           u567 2B16                           u577 28B4  
                         u587 28C2                           u597 28CC                   LEER_LCD@aux 0501  
                         wreg 04E8                  ?_CURSOR_HOME 0501                ??_ENVIA_NIBBLE 0501  
              ENVIA_CHAR@dato 0502                          l1321 28AE                          l1401 2B14  
                        l1331 28C0                          l1323 28B0                          l1411 2B28  
                        l1403 2B1C                          l1341 28E0                          l1333 28C8  
                        l1325 28B2                          l1317 28A8                          l1413 2B2E  
                        l1405 2B1E                          l1421 2AA6                          l1501 2814  
                        l1343 28E8                          l1335 28CA                          l1327 28BA  
                        l1319 28AC                          l1415 2B34                          l1407 2B20  
                        l1423 2AC6                          l1511 2A2E                          l1431 2982  
                        l1503 2826                          l1361 2BAA                          l1345 28EC  
                        l1353 2906                          l1337 28D2                          l1329 28BE  
                        l1409 2B22                          l1417 2A9C                          l1513 2A48  
                        l1505 2A1A                          l1441 29B2                          l1433 2988  
                        l1521 2A78                          l1355 2B94                          l1347 28F6  
                        l1339 28D4                          l1419 2AA4                          l1515 2A4A  
                        l1507 2A26                          l1451 2834                          l1531 252E  
                        l1371 2AE8                          l1363 2AD6                          l1427 2BCC  
                        l1443 29B8                          l1435 2998                          l1523 2A7C  
                        l1357 2BA0                          l1349 2900                          l1509 2A26  
                        l1461 286C                          l1453 283C                          l1541 2646  
                        l1533 25E6                          l1381 2AFA                          l1373 2AEA  
                        l1365 2AD8                          l1445 29BE                          l1437 29A6  
                        l1429 297E                          l1525 2A8C                          l1517 2A5E  
                        l1701 2782                          l1359 2BA2                          l1471 2898  
                        l1463 2872                          l1455 284E                          l1535 25F2  
                        l1383 2B00                          l1375 2AEC                          l1367 2ADC  
                        l1391 2B54                          l1447 29C4                          l1439 29AC  
                        l1527 2A90                          l1519 2A68                          l1551 29E2  
                        l1703 2788                          l1465 2888                          l1457 2856  
                        l1481 294A                          l1473 291A                          l1537 2606  
                        l1545 2672                          l1377 2AEE                          l1369 2AE0  
                        l1385 2BC4                          l1393 2B64                          l1449 29CA  
                        l1529 2A94                          l1561 29FC                          l1553 29E6  
                        l1705 278E                          l1395 2B0A                          l1467 2890  
                        l1459 285E                          l1483 2960                          l1475 292C  
                        l1539 2622                          l1379 2AF4                          l1387 2B3E  
                        l1491 27CC                          l1571 2A10                          l1563 29FE  
                        l1555 29E8                          l1547 29D2                          l1397 2B0C  
                        l1469 2892                          l1485 2968                          l1477 2934  
                        l1389 2B4E                          l1493 27D8                          l1573 2A12  
                        l1565 2A0A                          l1557 29EA                          l1549 29E0  
                        l1581 2B7E                          l1709 2798                          l1399 2B10  
                        l1487 296E                          l1479 293C                          l1495 27EA  
                        l1575 2A14                          l1567 2A0C                          l1559 29F6  
                        l1671 26BC                          l1663 26A2                          l1497 27F6  
                        l1489 27BC                          l1577 2A16                          l1569 2A0E  
                        l1681 26F6                          l1673 26CA                          l1665 26A6  
                        l1499 2808                          l1579 2B6C                          l1691 273A  
                        l1683 26FE                          l1675 26D2                          l1667 26AA  
                        l1693 2740                          l1685 271E                          l1677 26E6  
                        l1669 26B4                          l1695 274A                          l1687 272E  
                        l1679 26EC                          l1697 2752                          l1689 2734  
                        l1699 2772                          STR_1 2501                          STR_2 2523  
                        STR_3 2518                          STR_4 250D                          _LATD 04C1  
                        _WPUB 0409                          _main 26A2                          start 0102  
               ?_CURSOR_ONOFF 0501             ??_tomamuestra_ADC 0503                  ___param_bank 0000  
             ??_ENVIA_LCD_CMD 0502              __end_of_LCD_INIT 2A9C              __end_of_LEER_LCD 291A  
            __end_of_INT0_ISR 2BDC              __end_of_INT1_ISR 2BE4              __end_of_INT2_ISR 2BEC  
                       ?_main 0501                         _ADPCH 03EC               __end_of___lwdiv 28A8  
             __end_of___lwmod 297E                         i2l214 2BDA                         i2l224 2BEA  
                       i2l219 2BE2                         i2l229 2BEC                         _OSCEN 00B3  
                       _PORTD 04D1                         _TRISB 04C7                         _TRISD 04C9  
                 ?_POS_CURSOR 0504   __end_of_LCD_ESCRIBE_VAR_INT 26A2                         tablat 04F5  
                       status 04D8                ??_CURSOR_ONOFF 0504               __initialization 2BAE  
                __end_of_main 27BA     LCD_ESCRIBE_VAR_INT@decena 0513                        ??_main 0515  
               __activetblptr 0003     LCD_ESCRIBE_VAR_INT@millar 0511     LCD_ESCRIBE_VAR_INT@numero 050D  
   LCD_ESCRIBE_VAR_INT@unidad 0514                        _ADRESH 03EB                        _ADRESL 03EA  
                      _ANSELB 0408                        _ANSELD 0418                        i2l1311 2BDE  
                      i2l1313 2BE4                        i2l1305 2BD4                        i2l1315 2BE6  
                      i2l1307 2BD6                        i2l1309 2BDC                        _OSCFRQ 00B1  
        __end_of_ENVIA_NIBBLE 2BAE                     ??___lwdiv 050A                     ??___lwmod 0505  
                      isa$std 0001                        _strlen 2A9C                  __mediumconst 0000  
                      tblptrh 04F7                        tblptrl 04F6                        tblptru 04F8  
                ??_BORRAR_LCD 0504                     ?_LCD_INIT 0501                     ?_LEER_LCD 0501  
                  __accesstop 0560       __end_of__initialization 2BBE                     ?_INT0_ISR 0501  
                   ?_INT1_ISR 0501                     ?_INT2_ISR 0501                  ??_LCD_CONFIG 0504  
               ___rparam_used 0001                  ??_ENVIA_CHAR 0502                __pcstackCOMRAM 0501  
              ivt0x8_undefint 0100            __end_of_BORRAR_LCD 2BD4              _ESCRIBE_MENSAJE2 2A1A  
            ENVIA_LCD_CMD@aux 0503          __end_of_CURSOR_ONOFF 2B6C            __end_of_LCD_CONFIG 29D2  
          __end_of_ENVIA_CHAR 2B3C    LCD_ESCRIBE_VAR_INT@centena 0512               _tomamuestra_ADC 2B6C  
                  ??_LCD_INIT 0505                    ??_LEER_LCD 0501              ENVIA_NIBBLE@dato 0501  
                  ??_INT0_ISR 0501                    ??_INT1_ISR 0501                    ??_INT2_ISR 0501  
                     IVTBASEH 045E                       IVTBASEL 045D                       IVTBASEU 045F  
                     ?_strlen 0501                       _OSCCON1 00AD                  ??_POS_CURSOR 0505  
                     __Hparam 0000                       __Lparam 0000             __end_of_configuro 2A1A  
                     ___lwdiv 2834                       ___lwmod 291A                  __psmallconst 2500  
       __end_of_ENVIA_LCD_CMD 2B08                       __pcinit 2BAE            __end_of_POS_CURSOR 2834  
                     __ramtop 2500                       __ptext0 26A2                       __ptext1 2B6C  
                     __ptext2 29D2                       __ptext3 27BA                       __ptext4 2A5E  
                     __ptext5 297E                       __ptext6 2B3C                       __ptext7 2BC4  
                     __ptext8 2BCC                       __ptext9 2AD4       __end_of_tomamuestra_ADC 2B92  
               ??_default_ISR 0501                     _PIE10bits 04A8                  _ENVIA_NIBBLE 2B92  
        end_of_initialization 2BBE                     _PIR10bits 04B8                       strlen@a 0503  
                     strlen@s 0501             ESCRIBE_MENSAJE2@i 0507                     _TRISAbits 04C6  
                   _TRISCbits 04C8           __end_of_default_ISR 2BEE      __end_of_ESCRIBE_MENSAJE2 2A5E  
                _CURSOR_ONOFF 2B3C            CURSOR_ONOFF@estado 0504                __end_of_strlen 2AD4  
               ??_CURSOR_HOME 0504              ?_tomamuestra_ADC 0501           start_initialization 2BAE  
                  ivt0x8_base 0008             ENVIA_LCD_CMD@dato 0502   LCD_ESCRIBE_VAR_INT@d_millar 0510  
                    ??_strlen 0503                   __pbssCOMRAM 0517                   _default_ISR 2BEC  
         __end_of_CURSOR_HOME 2BCC                     _main$1299 0515              ___lwdiv@dividend 0506  
                    ?___lwdiv 0506                      ?___lwmod 0501                     _configuro 29D2  
                 __smallconst 2500           _LCD_ESCRIBE_VAR_INT 252E              ___lwdiv@quotient 050A  
                    _LCD_INIT 2A5E                      _LEER_LCD 28A8                      _INT0_ISR 2BD4  
                    _INT1_ISR 2BDC                      _INT2_ISR 2BE4                      _LATCbits 04C0  
                    _LATDbits 04C1                      _PIE1bits 049F                      _PIE6bits 04A4  
        ?_LCD_ESCRIBE_VAR_INT 050D                      _PIR1bits 04AF                      _PIR6bits 04B4  
              POS_CURSOR@fila 0505                    ?_configuro 0501                    _ADCON0bits 03F3  
      ESCRIBE_MENSAJE2@cadena 0504                   _CURSOR_HOME 2BC4                   _INTCON0bits 04D6  
       ??_LCD_ESCRIBE_VAR_INT 0510                      __Hrparam 0000             ?_ESCRIBE_MENSAJE2 0504  
                    __Lrparam 0000            ??_ESCRIBE_MENSAJE2 0505                    _ANSELAbits 0400  
                  _ANSELCbits 0410                      __pivt0x8 0008               ___lwdiv@divisor 0508  
             ___lwdiv@counter 050C                      __ptext10 252E                      __ptext11 291A  
                    __ptext20 2BE4                      __ptext12 2834                      __ptext21 2BEC  
                    __ptext13 2A1A                      __ptext14 2A9C                      __ptext15 2B08  
                    __ptext16 28A8                      __ptext17 2B92                      __ptext18 2BD4  
                    __ptext19 2BDC  LCD_ESCRIBE_VAR_INT@n_digitos 050F                    _BORRAR_LCD 2BCC  
                  _LCD_CONFIG 297E                      _pantalla 0517                    _ENVIA_CHAR 2B08  
                    isa$xinst 0000                 _ENVIA_LCD_CMD 2AD4                   ??_configuro 0501  
                ?_default_ISR 0501                      intlevel2 0000              ___lwmod@dividend 0501  
              ?_ENVIA_LCD_CMD 0501               ___lwmod@divisor 0503               ___lwmod@counter 0505  
         ESCRIBE_MENSAJE2@tam 0506                   ?_BORRAR_LCD 0501                 ?_ENVIA_NIBBLE 0501  
                  _POS_CURSOR 27BA                   ?_LCD_CONFIG 0501                   ?_ENVIA_CHAR 0501  
           POS_CURSOR@columna 0504  
