

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon May 13 18:32:38 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=4,class=CODE,delta=1
    29                           	psect	text20,global,reloc=4,class=CODE,delta=1
    30                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 18/12/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F57Q43 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     _TRISB	set	1223
    70   000000                     _LATD	set	1217
    71   000000                     _OSCCON1	set	173
    72   000000                     _ANSELD	set	1048
    73   000000                     _LATDbits	set	1217
    74   000000                     _TRISA	set	1222
    75   000000                     _TRISCbits	set	1224
    76   000000                     _TRISD	set	1225
    77   000000                     _PORTD	set	1233
    78   000000                     _INTCON0bits	set	1238
    79   000000                     _PIE1bits	set	1183
    80   000000                     _LATCbits	set	1216
    81   000000                     _OSCFRQ	set	177
    82   000000                     _OSCEN	set	179
    83   000000                     _ADRESL	set	1002
    84   000000                     _ADRESH	set	1003
    85   000000                     _ADPCH	set	1004
    86   000000                     _ADCON0bits	set	1011
    87   000000                     _ANSELA	set	1024
    88   000000                     _ANSELCbits	set	1040
    89   000000                     _ANSELB	set	1032
    90   000000                     _WPUB	set	1033
    91   000000                     _PIR1bits	set	1199
    92                           
    93                           	psect	smallconst
    94   002500                     __psmallconst:
    95                           	callstack 0
    96   002500  00                 	db	0
    97   002501                     STR_2:
    98   002501  20                 	db	32
    99   002502  43                 	db	67	;'C'
   100   002503  31                 	db	49	;'1'
   101   002504  3A                 	db	58	;':'
   102   002505  00                 	db	0
   103   002506                     STR_6:
   104   002506  20                 	db	32
   105   002507  56                 	db	86	;'V'
   106   002508  31                 	db	49	;'1'
   107   002509  3A                 	db	58	;':'
   108   00250A  00                 	db	0
   109   00250B                     STR_4:
   110   00250B  20                 	db	32
   111   00250C  43                 	db	67	;'C'
   112   00250D  33                 	db	51	;'3'
   113   00250E  3A                 	db	58	;':'
   114   00250F  00                 	db	0
   115   002510                     STR_8:
   116   002510  20                 	db	32
   117   002511  56                 	db	86	;'V'
   118   002512  33                 	db	51	;'3'
   119   002513  3A                 	db	58	;':'
   120   002514  00                 	db	0
   121   002515                     STR_1:
   122   002515  43                 	db	67	;'C'
   123   002516  30                 	db	48	;'0'
   124   002517  3A                 	db	58	;':'
   125   002518  00                 	db	0
   126   002519                     STR_5:
   127   002519  56                 	db	86	;'V'
   128   00251A  30                 	db	48	;'0'
   129   00251B  3A                 	db	58	;':'
   130   00251C  00                 	db	0
   131   00251D                     STR_3:
   132   00251D  43                 	db	67	;'C'
   133   00251E  32                 	db	50	;'2'
   134   00251F  3A                 	db	58	;':'
   135   002520  00                 	db	0
   136   002521                     STR_7:
   137   002521  56                 	db	86	;'V'
   138   002522  32                 	db	50	;'2'
   139   002523  3A                 	db	58	;':'
   140   002524  00                 	db	0
   141   002525  00                 	db	0	; dummy byte at the end
   142   000000                     
   143                           ; #config settings
   144                           
   145                           	psect	cinit
   146   002D80                     __pcinit:
   147                           	callstack 0
   148   002D80                     start_initialization:
   149                           	callstack 0
   150   002D80                     __initialization:
   151                           	callstack 0
   152                           
   153                           ; Clear objects allocated to COMRAM (19 bytes)
   154   002D80  EE01  F119         	lfsr	0,__pbssCOMRAM
   155   002D84  0E13               	movlw	19
   156   002D86                     clear_0:
   157   002D86  6AEE               	clrf	postinc0,c
   158   002D88  06E8               	decf	wreg,f,c
   159   002D8A  E1FD               	bnz	clear_0
   160                           
   161                           ;
   162                           ; Setup IVTBASE
   163                           ;
   164   002D8C  0104               	movlb	4
   165   002D8E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   166   002D90  6F5D               	movwf	93,b
   167   002D92  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   168   002D94  6F5E               	movwf	94,b
   169   002D96  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   170   002D98  6F5F               	movwf	95,b
   171   002D9A                     end_of_initialization:
   172                           	callstack 0
   173   002D9A                     __end_of__initialization:
   174                           	callstack 0
   175   002D9A  0100               	movlb	0
   176   002D9C  EF93  F012         	goto	_main	;jump to C main() function
   177                           
   178                           	psect	bssCOMRAM
   179   000519                     __pbssCOMRAM:
   180                           	callstack 0
   181   000519                     _temporal:
   182                           	callstack 0
   183   000519                     	ds	2
   184   00051B                     _vo3:
   185                           	callstack 0
   186   00051B                     	ds	2
   187   00051D                     _vo2:
   188                           	callstack 0
   189   00051D                     	ds	2
   190   00051F                     _vo1:
   191                           	callstack 0
   192   00051F                     	ds	2
   193   000521                     _vo0:
   194                           	callstack 0
   195   000521                     	ds	2
   196   000523                     _ch3:
   197                           	callstack 0
   198   000523                     	ds	2
   199   000525                     _ch2:
   200                           	callstack 0
   201   000525                     	ds	2
   202   000527                     _ch1:
   203                           	callstack 0
   204   000527                     	ds	2
   205   000529                     _ch0:
   206                           	callstack 0
   207   000529                     	ds	2
   208   00052B                     _pantalla:
   209                           	callstack 0
   210   00052B                     	ds	1
   211                           
   212                           	psect	cstackCOMRAM
   213   000501                     __pcstackCOMRAM:
   214                           	callstack 0
   215   000501                     ?_strlen:
   216                           	callstack 0
   217   000501                     ?_tomamuestra_ADC:
   218                           	callstack 0
   219   000501                     ?___lwmod:
   220                           	callstack 0
   221   000501                     ENVIA_NIBBLE@dato:
   222                           	callstack 0
   223   000501                     LEER_LCD@aux:
   224                           	callstack 0
   225   000501                     strlen@s:
   226                           	callstack 0
   227   000501                     ___lwmod@dividend:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x0
   231   000501                     	ds	1
   232   000502                     ENVIA_CHAR@dato:
   233                           	callstack 0
   234   000502                     ENVIA_LCD_CMD@dato:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x1
   238   000502                     	ds	1
   239   000503                     ??_tomamuestra_ADC:
   240   000503                     ENVIA_CHAR@aux:
   241                           	callstack 0
   242   000503                     ENVIA_LCD_CMD@aux:
   243                           	callstack 0
   244   000503                     strlen@a:
   245                           	callstack 0
   246   000503                     ___lwmod@divisor:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0x2
   250   000503                     	ds	1
   251   000504                     ??_LCD_CONFIG:
   252   000504                     POS_CURSOR@columna:
   253                           	callstack 0
   254   000504                     CURSOR_ONOFF@estado:
   255                           	callstack 0
   256   000504                     ESCRIBE_MENSAJE2@cadena:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x3
   260   000504                     	ds	1
   261   000505                     ??_ESCRIBE_MENSAJE2:
   262   000505                     ??_LCD_INIT:
   263   000505                     POS_CURSOR@fila:
   264                           	callstack 0
   265   000505                     tomamuestra_ADC@canal:
   266                           	callstack 0
   267   000505                     ___lwmod@counter:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x4
   271   000505                     	ds	1
   272   000506                     ?___lwdiv:
   273                           	callstack 0
   274   000506                     ESCRIBE_MENSAJE2@tam:
   275                           	callstack 0
   276   000506                     ___lwdiv@dividend:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x5
   280   000506                     	ds	1
   281   000507                     ESCRIBE_MENSAJE2@i:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0x6
   285   000507                     	ds	1
   286   000508                     ___lwdiv@divisor:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x7
   290   000508                     	ds	2
   291   00050A                     ___lwdiv@quotient:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x9
   295   00050A                     	ds	2
   296   00050C                     ___lwdiv@counter:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0xB
   300   00050C                     	ds	1
   301   00050D                     LCD_ESCRIBE_VAR_INT@numero:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0xC
   305   00050D                     	ds	2
   306   00050F                     LCD_ESCRIBE_VAR_INT@n_digitos:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0xE
   310   00050F                     	ds	1
   311   000510                     LCD_ESCRIBE_VAR_INT@d_millar:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0xF
   315   000510                     	ds	1
   316   000511                     LCD_ESCRIBE_VAR_INT@millar:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x10
   320   000511                     	ds	1
   321   000512                     LCD_ESCRIBE_VAR_INT@centena:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0x11
   325   000512                     	ds	1
   326   000513                     LCD_ESCRIBE_VAR_INT@decena:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x12
   330   000513                     	ds	1
   331   000514                     LCD_ESCRIBE_VAR_INT@unidad:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x13
   335   000514                     	ds	1
   336   000515                     _main$1129:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x14
   340   000515                     	ds	2
   341   000517                     _main$1130:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x16
   345   000517                     	ds	2
   346                           
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 50 in file "maincode01.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   367 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   369 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   370 ;;Total ram usage:        4 bytes
   371 ;; Hardware stack levels required when called: 5
   372 ;; This function calls:
   373 ;;		_ENVIA_CHAR
   374 ;;		_ESCRIBE_MENSAJE2
   375 ;;		_LCD_ESCRIBE_VAR_INT
   376 ;;		_LCD_INIT
   377 ;;		_POS_CURSOR
   378 ;;		___lwdiv
   379 ;;		___lwmod
   380 ;;		_adquiere
   381 ;;		_configuro
   382 ;; This function is called by:
   383 ;;		Startup code after reset
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           	psect	text0
   388   002526                     __ptext0:
   389                           	callstack 0
   390   002526                     _main:
   391                           	callstack 122
   392   002526                     
   393                           ;maincode01.c: 51:     configuro();
   394   002526  EC24  F016         	call	_configuro	;wreg free
   395   00252A                     
   396                           ;maincode01.c: 52:     LCD_INIT();
   397   00252A  EC05  F016         	call	_LCD_INIT	;wreg free
   398   00252E                     l1663:
   399                           
   400                           ;maincode01.c: 54:         adquiere();
   401   00252E  EC82  F014         	call	_adquiere	;wreg free
   402                           
   403                           ;maincode01.c: 55:         switch(pantalla){
   404   002532  EFBB  F013         	goto	l1715
   405   002536                     l1665:
   406                           
   407                           ;maincode01.c: 57:                 POS_CURSOR(1,0);
   408   002536  0E00               	movlw	0
   409   002538  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   410   00253A  0E01               	movlw	1
   411   00253C  ECD7  F014         	call	_POS_CURSOR
   412   002540                     
   413                           ;maincode01.c: 58:                 ESCRIBE_MENSAJE2("C0:");
   414   002540  0E15               	movlw	low STR_1
   415   002542  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   416   002544  ECE3  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   417   002548                     
   418                           ;maincode01.c: 59:                 LCD_ESCRIBE_VAR_INT(ch0,4);
   419   002548  C529  F50D         	movff	_ch0,LCD_ESCRIBE_VAR_INT@numero
   420   00254C  C52A  F50E         	movff	_ch0+1,LCD_ESCRIBE_VAR_INT@numero+1
   421   002550  0E04               	movlw	4
   422   002552  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   423   002554  ECC8  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   424                           
   425                           ;maincode01.c: 60:                 ESCRIBE_MENSAJE2(" C1:");
   426   002558  0E01               	movlw	low STR_2
   427   00255A  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   428   00255C  ECE3  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   429   002560                     
   430                           ;maincode01.c: 61:                 LCD_ESCRIBE_VAR_INT(ch1,4);
   431   002560  C527  F50D         	movff	_ch1,LCD_ESCRIBE_VAR_INT@numero
   432   002564  C528  F50E         	movff	_ch1+1,LCD_ESCRIBE_VAR_INT@numero+1
   433   002568  0E04               	movlw	4
   434   00256A  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   435   00256C  ECC8  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   436   002570                     
   437                           ;maincode01.c: 62:                 POS_CURSOR(2,0);
   438   002570  0E00               	movlw	0
   439   002572  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   440   002574  0E02               	movlw	2
   441   002576  ECD7  F014         	call	_POS_CURSOR
   442                           
   443                           ;maincode01.c: 63:                 ESCRIBE_MENSAJE2("C2:");
   444   00257A  0E1D               	movlw	low STR_3
   445   00257C  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   446   00257E  ECE3  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   447   002582                     
   448                           ;maincode01.c: 64:                 LCD_ESCRIBE_VAR_INT(ch2,4);
   449   002582  C525  F50D         	movff	_ch2,LCD_ESCRIBE_VAR_INT@numero
   450   002586  C526  F50E         	movff	_ch2+1,LCD_ESCRIBE_VAR_INT@numero+1
   451   00258A  0E04               	movlw	4
   452   00258C  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   453   00258E  ECC8  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   454   002592                     
   455                           ;maincode01.c: 65:                 ESCRIBE_MENSAJE2(" C3:");
   456   002592  0E0B               	movlw	low STR_4
   457   002594  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   458   002596  ECE3  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   459                           
   460                           ;maincode01.c: 66:                 LCD_ESCRIBE_VAR_INT(ch3,4);
   461   00259A  C523  F50D         	movff	_ch3,LCD_ESCRIBE_VAR_INT@numero
   462   00259E  C524  F50E         	movff	_ch3+1,LCD_ESCRIBE_VAR_INT@numero+1
   463   0025A2  0E04               	movlw	4
   464   0025A4  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   465   0025A6  ECC8  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   466                           
   467                           ;maincode01.c: 67:                 break;
   468   0025AA  EF97  F012         	goto	l1663
   469   0025AE                     l1679:
   470                           
   471                           ;maincode01.c: 69:                 POS_CURSOR(1,0);
   472   0025AE  0E00               	movlw	0
   473   0025B0  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   474   0025B2  0E01               	movlw	1
   475   0025B4  ECD7  F014         	call	_POS_CURSOR
   476   0025B8                     
   477                           ;maincode01.c: 70:                 ESCRIBE_MENSAJE2("V0:");
   478   0025B8  0E19               	movlw	low STR_5
   479   0025BA  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   480   0025BC  ECE3  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   481   0025C0                     
   482                           ;maincode01.c: 71:                 LCD_ESCRIBE_VAR_INT(vo0/10,2);
   483   0025C0  C521  F506         	movff	_vo0,___lwdiv@dividend
   484   0025C4  C522  F507         	movff	_vo0+1,___lwdiv@dividend+1
   485   0025C8  0E00               	movlw	0
   486   0025CA  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   487   0025CC  0E0A               	movlw	10
   488   0025CE  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   489   0025D0  EC14  F015         	call	___lwdiv	;wreg free
   490   0025D4  C506  F515         	movff	?___lwdiv,_main$1129
   491   0025D8  C507  F516         	movff	?___lwdiv+1,_main$1129+1
   492   0025DC                     
   493                           ;maincode01.c: 71:                 LCD_ESCRIBE_VAR_INT(vo0/10,2);
   494   0025DC  C515  F50D         	movff	_main$1129,LCD_ESCRIBE_VAR_INT@numero
   495   0025E0  C516  F50E         	movff	_main$1129+1,LCD_ESCRIBE_VAR_INT@numero+1
   496   0025E4  0E02               	movlw	2
   497   0025E6  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   498   0025E8  ECC8  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   499   0025EC                     
   500                           ;maincode01.c: 72:                 ENVIA_CHAR('.');
   501   0025EC  0E2E               	movlw	46
   502   0025EE  EC78  F016         	call	_ENVIA_CHAR
   503   0025F2                     
   504                           ;maincode01.c: 73:                 LCD_ESCRIBE_VAR_INT(vo0%10,2);
   505   0025F2  C521  F501         	movff	_vo0,___lwmod@dividend
   506   0025F6  C522  F502         	movff	_vo0+1,___lwmod@dividend+1
   507   0025FA  0E00               	movlw	0
   508   0025FC  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   509   0025FE  0E0A               	movlw	10
   510   002600  6E03               	movwf	___lwmod@divisor^(0+1280),c
   511   002602  EC87  F015         	call	___lwmod	;wreg free
   512   002606  C501  F517         	movff	?___lwmod,_main$1130
   513   00260A  C502  F518         	movff	?___lwmod+1,_main$1130+1
   514   00260E                     
   515                           ;maincode01.c: 73:                 LCD_ESCRIBE_VAR_INT(vo0%10,2);
   516   00260E  C517  F50D         	movff	_main$1130,LCD_ESCRIBE_VAR_INT@numero
   517   002612  C518  F50E         	movff	_main$1130+1,LCD_ESCRIBE_VAR_INT@numero+1
   518   002616  0E02               	movlw	2
   519   002618  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   520   00261A  ECC8  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   521   00261E                     
   522                           ;maincode01.c: 74:                 ENVIA_CHAR('V');
   523   00261E  0E56               	movlw	86
   524   002620  EC78  F016         	call	_ENVIA_CHAR
   525   002624                     
   526                           ;maincode01.c: 75:                 ESCRIBE_MENSAJE2(" V1:");
   527   002624  0E06               	movlw	low STR_6
   528   002626  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   529   002628  ECE3  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   530                           
   531                           ;maincode01.c: 76:                 LCD_ESCRIBE_VAR_INT(vo1/10,2);
   532   00262C  C51F  F506         	movff	_vo1,___lwdiv@dividend
   533   002630  C520  F507         	movff	_vo1+1,___lwdiv@dividend+1
   534   002634  0E00               	movlw	0
   535   002636  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   536   002638  0E0A               	movlw	10
   537   00263A  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   538   00263C  EC14  F015         	call	___lwdiv	;wreg free
   539   002640  C506  F515         	movff	?___lwdiv,_main$1129
   540   002644  C507  F516         	movff	?___lwdiv+1,_main$1129+1
   541                           
   542                           ;maincode01.c: 76:                 LCD_ESCRIBE_VAR_INT(vo1/10,2);
   543   002648  C515  F50D         	movff	_main$1129,LCD_ESCRIBE_VAR_INT@numero
   544   00264C  C516  F50E         	movff	_main$1129+1,LCD_ESCRIBE_VAR_INT@numero+1
   545   002650  0E02               	movlw	2
   546   002652  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   547   002654  ECC8  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   548                           
   549                           ;maincode01.c: 77:                 ENVIA_CHAR('.');
   550   002658  0E2E               	movlw	46
   551   00265A  EC78  F016         	call	_ENVIA_CHAR
   552                           
   553                           ;maincode01.c: 78:                 LCD_ESCRIBE_VAR_INT(vo1%10,2);
   554   00265E  C51F  F501         	movff	_vo1,___lwmod@dividend
   555   002662  C520  F502         	movff	_vo1+1,___lwmod@dividend+1
   556   002666  0E00               	movlw	0
   557   002668  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   558   00266A  0E0A               	movlw	10
   559   00266C  6E03               	movwf	___lwmod@divisor^(0+1280),c
   560   00266E  EC87  F015         	call	___lwmod	;wreg free
   561   002672  C501  F517         	movff	?___lwmod,_main$1130
   562   002676  C502  F518         	movff	?___lwmod+1,_main$1130+1
   563                           
   564                           ;maincode01.c: 78:                 LCD_ESCRIBE_VAR_INT(vo1%10,2);
   565   00267A  C517  F50D         	movff	_main$1130,LCD_ESCRIBE_VAR_INT@numero
   566   00267E  C518  F50E         	movff	_main$1130+1,LCD_ESCRIBE_VAR_INT@numero+1
   567   002682  0E02               	movlw	2
   568   002684  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   569   002686  ECC8  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   570                           
   571                           ;maincode01.c: 79:                 ENVIA_CHAR('V');
   572   00268A  0E56               	movlw	86
   573   00268C  EC78  F016         	call	_ENVIA_CHAR
   574                           
   575                           ;maincode01.c: 80:                 POS_CURSOR(2,0);
   576   002690  0E00               	movlw	0
   577   002692  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   578   002694  0E02               	movlw	2
   579   002696  ECD7  F014         	call	_POS_CURSOR
   580   00269A                     
   581                           ;maincode01.c: 81:                 ESCRIBE_MENSAJE2("V2:");
   582   00269A  0E21               	movlw	low STR_7
   583   00269C  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   584   00269E  ECE3  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   585   0026A2                     
   586                           ;maincode01.c: 82:                 LCD_ESCRIBE_VAR_INT(vo2/10,2);
   587   0026A2  C51D  F506         	movff	_vo2,___lwdiv@dividend
   588   0026A6  C51E  F507         	movff	_vo2+1,___lwdiv@dividend+1
   589   0026AA  0E00               	movlw	0
   590   0026AC  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   591   0026AE  0E0A               	movlw	10
   592   0026B0  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   593   0026B2  EC14  F015         	call	___lwdiv	;wreg free
   594   0026B6  C506  F515         	movff	?___lwdiv,_main$1129
   595   0026BA  C507  F516         	movff	?___lwdiv+1,_main$1129+1
   596   0026BE                     
   597                           ;maincode01.c: 82:                 LCD_ESCRIBE_VAR_INT(vo2/10,2);
   598   0026BE  C515  F50D         	movff	_main$1129,LCD_ESCRIBE_VAR_INT@numero
   599   0026C2  C516  F50E         	movff	_main$1129+1,LCD_ESCRIBE_VAR_INT@numero+1
   600   0026C6  0E02               	movlw	2
   601   0026C8  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   602   0026CA  ECC8  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   603   0026CE                     
   604                           ;maincode01.c: 83:                 ENVIA_CHAR('.');
   605   0026CE  0E2E               	movlw	46
   606   0026D0  EC78  F016         	call	_ENVIA_CHAR
   607   0026D4                     
   608                           ;maincode01.c: 84:                 LCD_ESCRIBE_VAR_INT(vo2%10,2);
   609   0026D4  C51D  F501         	movff	_vo2,___lwmod@dividend
   610   0026D8  C51E  F502         	movff	_vo2+1,___lwmod@dividend+1
   611   0026DC  0E00               	movlw	0
   612   0026DE  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   613   0026E0  0E0A               	movlw	10
   614   0026E2  6E03               	movwf	___lwmod@divisor^(0+1280),c
   615   0026E4  EC87  F015         	call	___lwmod	;wreg free
   616   0026E8  C501  F517         	movff	?___lwmod,_main$1130
   617   0026EC  C502  F518         	movff	?___lwmod+1,_main$1130+1
   618   0026F0                     
   619                           ;maincode01.c: 84:                 LCD_ESCRIBE_VAR_INT(vo2%10,2);
   620   0026F0  C517  F50D         	movff	_main$1130,LCD_ESCRIBE_VAR_INT@numero
   621   0026F4  C518  F50E         	movff	_main$1130+1,LCD_ESCRIBE_VAR_INT@numero+1
   622   0026F8  0E02               	movlw	2
   623   0026FA  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   624   0026FC  ECC8  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   625   002700                     
   626                           ;maincode01.c: 85:                 ENVIA_CHAR('V');
   627   002700  0E56               	movlw	86
   628   002702  EC78  F016         	call	_ENVIA_CHAR
   629   002706                     
   630                           ;maincode01.c: 86:                 ESCRIBE_MENSAJE2(" V3:");
   631   002706  0E10               	movlw	low STR_8
   632   002708  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   633   00270A  ECE3  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   634                           
   635                           ;maincode01.c: 87:                 LCD_ESCRIBE_VAR_INT(vo3/10,2);
   636   00270E  C51B  F506         	movff	_vo3,___lwdiv@dividend
   637   002712  C51C  F507         	movff	_vo3+1,___lwdiv@dividend+1
   638   002716  0E00               	movlw	0
   639   002718  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   640   00271A  0E0A               	movlw	10
   641   00271C  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   642   00271E  EC14  F015         	call	___lwdiv	;wreg free
   643   002722  C506  F515         	movff	?___lwdiv,_main$1129
   644   002726  C507  F516         	movff	?___lwdiv+1,_main$1129+1
   645                           
   646                           ;maincode01.c: 87:                 LCD_ESCRIBE_VAR_INT(vo3/10,2);
   647   00272A  C515  F50D         	movff	_main$1129,LCD_ESCRIBE_VAR_INT@numero
   648   00272E  C516  F50E         	movff	_main$1129+1,LCD_ESCRIBE_VAR_INT@numero+1
   649   002732  0E02               	movlw	2
   650   002734  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   651   002736  ECC8  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   652                           
   653                           ;maincode01.c: 88:                 ENVIA_CHAR('.');
   654   00273A  0E2E               	movlw	46
   655   00273C  EC78  F016         	call	_ENVIA_CHAR
   656                           
   657                           ;maincode01.c: 89:                 LCD_ESCRIBE_VAR_INT(vo3%10,2);
   658   002740  C51B  F501         	movff	_vo3,___lwmod@dividend
   659   002744  C51C  F502         	movff	_vo3+1,___lwmod@dividend+1
   660   002748  0E00               	movlw	0
   661   00274A  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   662   00274C  0E0A               	movlw	10
   663   00274E  6E03               	movwf	___lwmod@divisor^(0+1280),c
   664   002750  EC87  F015         	call	___lwmod	;wreg free
   665   002754  C501  F517         	movff	?___lwmod,_main$1130
   666   002758  C502  F518         	movff	?___lwmod+1,_main$1130+1
   667                           
   668                           ;maincode01.c: 89:                 LCD_ESCRIBE_VAR_INT(vo3%10,2);
   669   00275C  C517  F50D         	movff	_main$1130,LCD_ESCRIBE_VAR_INT@numero
   670   002760  C518  F50E         	movff	_main$1130+1,LCD_ESCRIBE_VAR_INT@numero+1
   671   002764  0E02               	movlw	2
   672   002766  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   673   002768  ECC8  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   674                           
   675                           ;maincode01.c: 90:                 ENVIA_CHAR('V');
   676   00276C  0E56               	movlw	86
   677   00276E  EC78  F016         	call	_ENVIA_CHAR
   678                           
   679                           ;maincode01.c: 91:                 break;
   680   002772  EF97  F012         	goto	l1663
   681   002776                     l1715:
   682   002776  502B               	movf	_pantalla^(0+1280),w,c
   683                           
   684                           ; Switch size 1, requested type "simple"
   685                           ; Number of cases is 2, Range of values is 0 to 1
   686                           ; switch strategies available:
   687                           ; Name         Instructions Cycles
   688                           ; simple_byte            7     4 (average)
   689                           ;	Chosen strategy is simple_byte
   690   002778  0A00               	xorlw	0	; case 0
   691   00277A  B4D8               	btfsc	status,2,c
   692   00277C  EF9B  F012         	goto	l1665
   693   002780  0A01               	xorlw	1	; case 1
   694   002782  B4D8               	btfsc	status,2,c
   695   002784  EFD7  F012         	goto	l1679
   696   002788  EF97  F012         	goto	l1663
   697   00278C  EF81  F000         	goto	start
   698   002790                     __end_of_main:
   699                           	callstack 0
   700                           
   701 ;; *************** function _configuro *****************
   702 ;; Defined at:
   703 ;;		line 10 in file "maincode01.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, status,2
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   721 ;;Total ram usage:        0 bytes
   722 ;; Hardware stack levels used: 1
   723 ;; Hardware stack levels required when called: 1
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text1
   732   002C48                     __ptext1:
   733                           	callstack 0
   734   002C48                     _configuro:
   735                           	callstack 125
   736   002C48                     
   737                           ;maincode01.c: 11:     OSCCON1 = 0x60;
   738   002C48  0E60               	movlw	96
   739   002C4A  0100               	movlb	0	; () banked
   740   002C4C  6FAD               	movwf	173,b	;volatile
   741                           
   742                           ;maincode01.c: 12:     OSCFRQ = 0x05;
   743   002C4E  0E05               	movlw	5
   744   002C50  6FB1               	movwf	177,b	;volatile
   745                           
   746                           ;maincode01.c: 13:     OSCEN = 0x40;
   747   002C52  0E40               	movlw	64
   748   002C54  6FB3               	movwf	179,b	;volatile
   749   002C56                     
   750                           ; BSR set to: 0
   751                           ;maincode01.c: 14:     TRISCbits.TRISC0 = 0;
   752   002C56  90C8               	bcf	200,0,c	;volatile
   753   002C58                     
   754                           ; BSR set to: 0
   755                           ;maincode01.c: 15:     ANSELCbits.ANSELC0 = 0;
   756   002C58  0104               	movlb	4	; () banked
   757   002C5A  9110               	bcf	16,0,b	;volatile
   758   002C5C                     
   759                           ; BSR set to: 4
   760                           ;maincode01.c: 16:     LATCbits.LATC0 = 1;
   761   002C5C  80C0               	bsf	192,0,c	;volatile
   762   002C5E                     
   763                           ; BSR set to: 4
   764                           ;maincode01.c: 18:     TRISA = 0xFF;
   765   002C5E  68C6               	setf	198,c	;volatile
   766   002C60                     
   767                           ; BSR set to: 4
   768                           ;maincode01.c: 19:     ANSELA = 0xFF;
   769   002C60  6900               	setf	0,b	;volatile
   770                           
   771                           ;maincode01.c: 20:     ADCON0bits.ADFM = 1;
   772   002C62  0103               	movlb	3	; () banked
   773   002C64  51F3               	movf	243,w,b	;volatile
   774   002C66  0BF3               	andlw	-13
   775   002C68  0904               	iorlw	4
   776   002C6A  6FF3               	movwf	243,b	;volatile
   777   002C6C                     
   778                           ; BSR set to: 3
   779                           ;maincode01.c: 21:     ADCON0bits.CS = 1;
   780   002C6C  89F3               	bsf	243,4,b	;volatile
   781   002C6E                     
   782                           ; BSR set to: 3
   783                           ;maincode01.c: 22:     ADCON0bits.ADON = 1;
   784   002C6E  8FF3               	bsf	243,7,b	;volatile
   785   002C70                     
   786                           ; BSR set to: 3
   787                           ;maincode01.c: 24:     TRISB = 0xFF;
   788   002C70  68C7               	setf	199,c	;volatile
   789                           
   790                           ;maincode01.c: 25:     ANSELB = 0xFE;
   791   002C72  0EFE               	movlw	254
   792   002C74  0104               	movlb	4	; () banked
   793   002C76  6F08               	movwf	8,b	;volatile
   794                           
   795                           ;maincode01.c: 26:     WPUB = 0x01;
   796   002C78  0E01               	movlw	1
   797   002C7A  6F09               	movwf	9,b	;volatile
   798   002C7C                     
   799                           ; BSR set to: 4
   800                           ;maincode01.c: 27:     INTCON0bits.INT0EDG = 0;
   801   002C7C  90D6               	bcf	214,0,c	;volatile
   802   002C7E                     
   803                           ; BSR set to: 4
   804                           ;maincode01.c: 28:     PIE1bits.INT0IE = 1;
   805   002C7E  809F               	bsf	159,0,c	;volatile
   806   002C80                     
   807                           ; BSR set to: 4
   808                           ;maincode01.c: 29:     INTCON0bits.GIE = 1;
   809   002C80  8ED6               	bsf	214,7,c	;volatile
   810   002C82                     
   811                           ; BSR set to: 4
   812   002C82  0012               	return		;funcret
   813   002C84                     __end_of_configuro:
   814                           	callstack 0
   815                           
   816 ;; *************** function _adquiere *****************
   817 ;; Defined at:
   818 ;;		line 39 in file "maincode01.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   836 ;;Total ram usage:        0 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; Hardware stack levels required when called: 2
   839 ;; This function calls:
   840 ;;		___lwdiv
   841 ;;		_tomamuestra_ADC
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text2
   848   002904                     __ptext2:
   849                           	callstack 0
   850   002904                     _adquiere:
   851                           	callstack 124
   852   002904                     
   853                           ;maincode01.c: 40:     ch0 = tomamuestra_ADC(0);
   854   002904  0E00               	movlw	0
   855   002906  ECAA  F016         	call	_tomamuestra_ADC
   856   00290A  C501  F529         	movff	?_tomamuestra_ADC,_ch0
   857   00290E  C502  F52A         	movff	?_tomamuestra_ADC+1,_ch0+1
   858                           
   859                           ;maincode01.c: 41:     ch1 = tomamuestra_ADC(1);
   860   002912  0E01               	movlw	1
   861   002914  ECAA  F016         	call	_tomamuestra_ADC
   862   002918  C501  F527         	movff	?_tomamuestra_ADC,_ch1
   863   00291C  C502  F528         	movff	?_tomamuestra_ADC+1,_ch1+1
   864                           
   865                           ;maincode01.c: 42:     ch2 = tomamuestra_ADC(2);
   866   002920  0E02               	movlw	2
   867   002922  ECAA  F016         	call	_tomamuestra_ADC
   868   002926  C501  F525         	movff	?_tomamuestra_ADC,_ch2
   869   00292A  C502  F526         	movff	?_tomamuestra_ADC+1,_ch2+1
   870                           
   871                           ;maincode01.c: 43:     ch3 = tomamuestra_ADC(3);
   872   00292E  0E03               	movlw	3
   873   002930  ECAA  F016         	call	_tomamuestra_ADC
   874   002934  C501  F523         	movff	?_tomamuestra_ADC,_ch3
   875   002938  C502  F524         	movff	?_tomamuestra_ADC+1,_ch3+1
   876                           
   877                           ;maincode01.c: 44:     vo0 = ch0/82;
   878   00293C  C529  F506         	movff	_ch0,___lwdiv@dividend
   879   002940  C52A  F507         	movff	_ch0+1,___lwdiv@dividend+1
   880   002944  0E00               	movlw	0
   881   002946  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   882   002948  0E52               	movlw	82
   883   00294A  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   884   00294C  EC14  F015         	call	___lwdiv	;wreg free
   885   002950  C506  F521         	movff	?___lwdiv,_vo0
   886   002954  C507  F522         	movff	?___lwdiv+1,_vo0+1
   887                           
   888                           ;maincode01.c: 45:     vo1 = ch1/82;
   889   002958  C527  F506         	movff	_ch1,___lwdiv@dividend
   890   00295C  C528  F507         	movff	_ch1+1,___lwdiv@dividend+1
   891   002960  0E00               	movlw	0
   892   002962  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   893   002964  0E52               	movlw	82
   894   002966  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   895   002968  EC14  F015         	call	___lwdiv	;wreg free
   896   00296C  C506  F51F         	movff	?___lwdiv,_vo1
   897   002970  C507  F520         	movff	?___lwdiv+1,_vo1+1
   898                           
   899                           ;maincode01.c: 46:     vo2 = ch2/82;
   900   002974  C525  F506         	movff	_ch2,___lwdiv@dividend
   901   002978  C526  F507         	movff	_ch2+1,___lwdiv@dividend+1
   902   00297C  0E00               	movlw	0
   903   00297E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   904   002980  0E52               	movlw	82
   905   002982  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   906   002984  EC14  F015         	call	___lwdiv	;wreg free
   907   002988  C506  F51D         	movff	?___lwdiv,_vo2
   908   00298C  C507  F51E         	movff	?___lwdiv+1,_vo2+1
   909                           
   910                           ;maincode01.c: 47:     vo3 = ch3/82;
   911   002990  C523  F506         	movff	_ch3,___lwdiv@dividend
   912   002994  C524  F507         	movff	_ch3+1,___lwdiv@dividend+1
   913   002998  0E00               	movlw	0
   914   00299A  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   915   00299C  0E52               	movlw	82
   916   00299E  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   917   0029A0  EC14  F015         	call	___lwdiv	;wreg free
   918   0029A4  C506  F51B         	movff	?___lwdiv,_vo3
   919   0029A8  C507  F51C         	movff	?___lwdiv+1,_vo3+1
   920   0029AC  0012               	return		;funcret
   921   0029AE                     __end_of_adquiere:
   922                           	callstack 0
   923                           
   924 ;; *************** function _tomamuestra_ADC *****************
   925 ;; Defined at:
   926 ;;		line 32 in file "maincode01.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  canal           1    wreg     unsigned char 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  canal           1    4[COMRAM] unsigned char 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  2    0[COMRAM] unsigned int 
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   942 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   943 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   944 ;;Total ram usage:        5 bytes
   945 ;; Hardware stack levels used: 1
   946 ;; Hardware stack levels required when called: 1
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		_adquiere
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text3
   955   002D54                     __ptext3:
   956                           	callstack 0
   957   002D54                     _tomamuestra_ADC:
   958                           	callstack 124
   959                           
   960                           ;incstack = 0
   961                           ;tomamuestra_ADC@canal stored from wreg
   962   002D54  6E05               	movwf	tomamuestra_ADC@canal^(0+1280),c
   963   002D56                     
   964                           ;maincode01.c: 33:     ADPCH = canal;
   965   002D56  C505  F3EC         	movff	tomamuestra_ADC@canal,1004	;volatile
   966   002D5A                     
   967                           ;maincode01.c: 34:     ADCON0bits.GO = 1;
   968   002D5A  0103               	movlb	3	; () banked
   969   002D5C  81F3               	bsf	243,0,b	;volatile
   970   002D5E                     l203:
   971                           
   972                           ; BSR set to: 3
   973   002D5E  B1F3               	btfsc	243,0,b	;volatile
   974   002D60  EFB4  F016         	goto	u301
   975   002D64  EFB6  F016         	goto	u300
   976   002D68                     u301:
   977   002D68  EFAF  F016         	goto	l203
   978   002D6C                     u300:
   979   002D6C                     
   980                           ; BSR set to: 3
   981                           ;maincode01.c: 36:     return ((ADRESH << 8) + ADRESL);
   982   002D6C  51EB               	movf	235,w,b	;volatile
   983   002D6E  6E04               	movwf	(??_tomamuestra_ADC+1)^(0+1280),c
   984   002D70  6A03               	clrf	??_tomamuestra_ADC^(0+1280),c
   985   002D72  51EA               	movf	234,w,b	;volatile
   986   002D74  2403               	addwf	??_tomamuestra_ADC^(0+1280),w,c
   987   002D76  6E01               	movwf	?_tomamuestra_ADC^(0+1280),c
   988   002D78  0E00               	movlw	0
   989   002D7A  2004               	addwfc	(??_tomamuestra_ADC+1)^(0+1280),w,c
   990   002D7C  6E02               	movwf	(?_tomamuestra_ADC+1)^(0+1280),c
   991   002D7E                     
   992                           ; BSR set to: 3
   993   002D7E  0012               	return		;funcret
   994   002D80                     __end_of_tomamuestra_ADC:
   995                           	callstack 0
   996                           
   997 ;; *************** function _POS_CURSOR *****************
   998 ;; Defined at:
   999 ;;		line 5 in file "LCD.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  fila            1    wreg     unsigned char 
  1002 ;;  columna         1    3[COMRAM] unsigned char 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  fila            1    4[COMRAM] unsigned char 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1014 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1017 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1018 ;;Total ram usage:        2 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 3
  1021 ;; This function calls:
  1022 ;;		_ENVIA_LCD_CMD
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text4
  1029   0029AE                     __ptext4:
  1030                           	callstack 0
  1031   0029AE                     _POS_CURSOR:
  1032                           	callstack 123
  1033                           
  1034                           ; BSR set to: 3
  1035                           ;incstack = 0
  1036                           ;POS_CURSOR@fila stored from wreg
  1037   0029AE  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  1038   0029B0                     
  1039                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
  1040   0029B0  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  1041   0029B2  A4D8               	btfss	status,2,c
  1042   0029B4  EFDE  F014         	goto	u371
  1043   0029B8  EFE0  F014         	goto	u370
  1044   0029BC                     u371:
  1045   0029BC  EFE6  F014         	goto	l1501
  1046   0029C0                     u370:
  1047   0029C0                     
  1048                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
  1049   0029C0  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1050   0029C2  0F80               	addlw	128
  1051   0029C4  EC5E  F016         	call	_ENVIA_LCD_CMD
  1052                           
  1053                           ;LCD.c: 10:  }
  1054   0029C8  EF13  F015         	goto	l32
  1055   0029CC                     l1501:
  1056   0029CC  0E02               	movlw	2
  1057   0029CE  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1058   0029D0  A4D8               	btfss	status,2,c
  1059   0029D2  EFED  F014         	goto	u381
  1060   0029D6  EFEF  F014         	goto	u380
  1061   0029DA                     u381:
  1062   0029DA  EFF5  F014         	goto	l1505
  1063   0029DE                     u380:
  1064   0029DE                     
  1065                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  1066   0029DE  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1067   0029E0  0FC0               	addlw	192
  1068   0029E2  EC5E  F016         	call	_ENVIA_LCD_CMD
  1069                           
  1070                           ;LCD.c: 14:  }
  1071   0029E6  EF13  F015         	goto	l32
  1072   0029EA                     l1505:
  1073   0029EA  0E03               	movlw	3
  1074   0029EC  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1075   0029EE  A4D8               	btfss	status,2,c
  1076   0029F0  EFFC  F014         	goto	u391
  1077   0029F4  EFFE  F014         	goto	u390
  1078   0029F8                     u391:
  1079   0029F8  EF04  F015         	goto	l1509
  1080   0029FC                     u390:
  1081   0029FC                     
  1082                           ;LCD.c: 16:  {;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
  1083   0029FC  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1084   0029FE  0F94               	addlw	148
  1085   002A00  EC5E  F016         	call	_ENVIA_LCD_CMD
  1086                           
  1087                           ;LCD.c: 18:  }
  1088   002A04  EF13  F015         	goto	l32
  1089   002A08                     l1509:
  1090   002A08  0E04               	movlw	4
  1091   002A0A  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1092   002A0C  A4D8               	btfss	status,2,c
  1093   002A0E  EF0B  F015         	goto	u401
  1094   002A12  EF0D  F015         	goto	u400
  1095   002A16                     u401:
  1096   002A16  EF13  F015         	goto	l28
  1097   002A1A                     u400:
  1098   002A1A                     
  1099                           ;LCD.c: 20:  {;LCD.c: 21:   ENVIA_LCD_CMD(0xD4+columna);
  1100   002A1A  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1101   002A1C  0FD4               	addlw	212
  1102   002A1E  EC5E  F016         	call	_ENVIA_LCD_CMD
  1103   002A22  EF13  F015         	goto	l32
  1104   002A26                     l28:
  1105   002A26                     l32:
  1106   002A26  0012               	return		;funcret
  1107   002A28                     __end_of_POS_CURSOR:
  1108                           	callstack 0
  1109                           
  1110 ;; *************** function _LCD_INIT *****************
  1111 ;; Defined at:
  1112 ;;		line 192 in file "LCD.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1130 ;;Total ram usage:        1 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; Hardware stack levels required when called: 4
  1133 ;; This function calls:
  1134 ;;		_BORRAR_LCD
  1135 ;;		_CURSOR_HOME
  1136 ;;		_CURSOR_ONOFF
  1137 ;;		_LCD_CONFIG
  1138 ;; This function is called by:
  1139 ;;		_main
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text5
  1144   002C0A                     __ptext5:
  1145                           	callstack 0
  1146   002C0A                     _LCD_INIT:
  1147                           	callstack 122
  1148   002C0A                     
  1149                           ;LCD.c: 193:     TRISD = 0x00;
  1150   002C0A  0E00               	movlw	0
  1151   002C0C  6EC9               	movwf	201,c	;volatile
  1152                           
  1153                           ;LCD.c: 194:     ANSELD = 0x00;
  1154   002C0E  0E00               	movlw	0
  1155   002C10  0104               	movlb	4	; () banked
  1156   002C12  6F18               	movwf	24,b	;volatile
  1157   002C14                     
  1158                           ; BSR set to: 4
  1159                           ;LCD.c: 195:     _delay((unsigned long)((15)*(16000000UL/4000.0)));
  1160   002C14  0E4E               	movlw	78
  1161   002C16  6E05               	movwf	??_LCD_INIT^(0+1280),c
  1162   002C18  0EEB               	movlw	235
  1163   002C1A                     u517:
  1164   002C1A  2EE8               	decfsz	wreg,f,c
  1165   002C1C  D7FE               	bra	u517
  1166   002C1E  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  1167   002C20  D7FC               	bra	u517
  1168   002C22  0000               	nop	
  1169   002C24                     
  1170                           ;LCD.c: 196:     LCD_CONFIG();
  1171   002C24  ECB9  F015         	call	_LCD_CONFIG	;wreg free
  1172   002C28                     
  1173                           ;LCD.c: 197:     _delay((unsigned long)((15)*(16000000UL/4000.0)));
  1174   002C28  0E4E               	movlw	78
  1175   002C2A  6E05               	movwf	??_LCD_INIT^(0+1280),c
  1176   002C2C  0EEB               	movlw	235
  1177   002C2E                     u527:
  1178   002C2E  2EE8               	decfsz	wreg,f,c
  1179   002C30  D7FE               	bra	u527
  1180   002C32  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  1181   002C34  D7FC               	bra	u527
  1182   002C36  0000               	nop	
  1183   002C38                     
  1184                           ;LCD.c: 198:     BORRAR_LCD();
  1185   002C38  ECE2  F016         	call	_BORRAR_LCD	;wreg free
  1186   002C3C                     
  1187                           ;LCD.c: 199:     CURSOR_HOME();
  1188   002C3C  ECDE  F016         	call	_CURSOR_HOME	;wreg free
  1189   002C40                     
  1190                           ;LCD.c: 200:     CURSOR_ONOFF(1);
  1191   002C40  0E01               	movlw	1
  1192   002C42  EC92  F016         	call	_CURSOR_ONOFF
  1193   002C46  0012               	return		;funcret
  1194   002C48                     __end_of_LCD_INIT:
  1195                           	callstack 0
  1196                           
  1197 ;; *************** function _LCD_CONFIG *****************
  1198 ;; Defined at:
  1199 ;;		line 109 in file "LCD.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1215 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1216 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1217 ;;Total ram usage:        1 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; Hardware stack levels required when called: 3
  1220 ;; This function calls:
  1221 ;;		_ENVIA_LCD_CMD
  1222 ;;		_ENVIA_NIBBLE
  1223 ;; This function is called by:
  1224 ;;		_LCD_INIT
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text6
  1229   002B72                     __ptext6:
  1230                           	callstack 0
  1231   002B72                     _LCD_CONFIG:
  1232                           	callstack 122
  1233   002B72                     
  1234                           ;LCD.c: 111:  LATDbits.LATD0 = 0;
  1235   002B72  90C1               	bcf	193,0,c	;volatile
  1236                           
  1237                           ;LCD.c: 112:  LATDbits.LATD1 = 0;
  1238   002B74  92C1               	bcf	193,1,c	;volatile
  1239   002B76                     
  1240                           ;LCD.c: 113:  ENVIA_NIBBLE(0x30);
  1241   002B76  0E30               	movlw	48
  1242   002B78  ECD0  F016         	call	_ENVIA_NIBBLE
  1243   002B7C                     
  1244                           ;LCD.c: 114:     _delay((unsigned long)((2)*(16000000UL/4000.0)));
  1245   002B7C  0E0B               	movlw	11
  1246   002B7E  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  1247   002B80  0E62               	movlw	98
  1248   002B82                     u537:
  1249   002B82  2EE8               	decfsz	wreg,f,c
  1250   002B84  D7FE               	bra	u537
  1251   002B86  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  1252   002B88  D7FC               	bra	u537
  1253   002B8A  D000               	nop2	
  1254   002B8C                     
  1255                           ;LCD.c: 115:  ENVIA_NIBBLE(0x30);
  1256   002B8C  0E30               	movlw	48
  1257   002B8E  ECD0  F016         	call	_ENVIA_NIBBLE
  1258                           
  1259                           ;LCD.c: 116:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1260   002B92  0E85               	movlw	133
  1261   002B94                     u547:
  1262   002B94  2EE8               	decfsz	wreg,f,c
  1263   002B96  D7FE               	bra	u547
  1264   002B98  0000               	nop	
  1265   002B9A                     
  1266                           ;LCD.c: 117:     ENVIA_NIBBLE(0x30);
  1267   002B9A  0E30               	movlw	48
  1268   002B9C  ECD0  F016         	call	_ENVIA_NIBBLE
  1269   002BA0                     
  1270                           ;LCD.c: 118:  ENVIA_NIBBLE(0x20);
  1271   002BA0  0E20               	movlw	32
  1272   002BA2  ECD0  F016         	call	_ENVIA_NIBBLE
  1273   002BA6                     
  1274                           ;LCD.c: 119:  ENVIA_LCD_CMD(0x01);
  1275   002BA6  0E01               	movlw	1
  1276   002BA8  EC5E  F016         	call	_ENVIA_LCD_CMD
  1277   002BAC                     
  1278                           ;LCD.c: 120:  ENVIA_LCD_CMD(0x28);
  1279   002BAC  0E28               	movlw	40
  1280   002BAE  EC5E  F016         	call	_ENVIA_LCD_CMD
  1281   002BB2                     
  1282                           ;LCD.c: 121:  ENVIA_LCD_CMD(0x0F);
  1283   002BB2  0E0F               	movlw	15
  1284   002BB4  EC5E  F016         	call	_ENVIA_LCD_CMD
  1285   002BB8                     
  1286                           ;LCD.c: 122:  ENVIA_LCD_CMD(0x06);
  1287   002BB8  0E06               	movlw	6
  1288   002BBA  EC5E  F016         	call	_ENVIA_LCD_CMD
  1289   002BBE                     
  1290                           ;LCD.c: 123:  ENVIA_LCD_CMD(0x01);
  1291   002BBE  0E01               	movlw	1
  1292   002BC0  EC5E  F016         	call	_ENVIA_LCD_CMD
  1293   002BC4  0012               	return		;funcret
  1294   002BC6                     __end_of_LCD_CONFIG:
  1295                           	callstack 0
  1296                           
  1297 ;; *************** function _CURSOR_ONOFF *****************
  1298 ;; Defined at:
  1299 ;;		line 62 in file "LCD.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  estado          1    wreg     unsigned char 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  estado          1    3[COMRAM] unsigned char 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		wreg, status,2, status,0, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1316 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1317 ;;Total ram usage:        1 bytes
  1318 ;; Hardware stack levels used: 1
  1319 ;; Hardware stack levels required when called: 3
  1320 ;; This function calls:
  1321 ;;		_ENVIA_LCD_CMD
  1322 ;; This function is called by:
  1323 ;;		_LCD_INIT
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text7
  1328   002D24                     __ptext7:
  1329                           	callstack 0
  1330   002D24                     _CURSOR_ONOFF:
  1331                           	callstack 122
  1332                           
  1333                           ;incstack = 0
  1334                           ;CURSOR_ONOFF@estado stored from wreg
  1335   002D24  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  1336   002D26                     
  1337                           ;LCD.c: 62: void CURSOR_ONOFF(unsigned char estado);LCD.c: 63: {;LCD.c: 64:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1338   002D26  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  1339   002D28  A4D8               	btfss	status,2,c
  1340   002D2A  EF99  F016         	goto	u271
  1341   002D2E  EF9B  F016         	goto	u270
  1342   002D32                     u271:
  1343   002D32  EF9E  F016         	goto	l1391
  1344   002D36                     u270:
  1345   002D36  0E0E               	movlw	14
  1346   002D38  EC5E  F016         	call	_ENVIA_LCD_CMD
  1347   002D3C                     l1391:
  1348                           
  1349                           ;LCD.c: 65:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1350   002D3C  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  1351   002D3E  A4D8               	btfss	status,2,c
  1352   002D40  EFA4  F016         	goto	u281
  1353   002D44  EFA6  F016         	goto	u280
  1354   002D48                     u281:
  1355   002D48  EFA9  F016         	goto	l62
  1356   002D4C                     u280:
  1357   002D4C  0E0C               	movlw	12
  1358   002D4E  EC5E  F016         	call	_ENVIA_LCD_CMD
  1359   002D52                     l62:
  1360   002D52  0012               	return		;funcret
  1361   002D54                     __end_of_CURSOR_ONOFF:
  1362                           	callstack 0
  1363                           
  1364 ;; *************** function _CURSOR_HOME *****************
  1365 ;; Defined at:
  1366 ;;		line 37 in file "LCD.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels used: 1
  1386 ;; Hardware stack levels required when called: 3
  1387 ;; This function calls:
  1388 ;;		_ENVIA_LCD_CMD
  1389 ;; This function is called by:
  1390 ;;		_LCD_INIT
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text8
  1395   002DBC                     __ptext8:
  1396                           	callstack 0
  1397   002DBC                     _CURSOR_HOME:
  1398                           	callstack 122
  1399   002DBC                     
  1400                           ;LCD.c: 39:  ENVIA_LCD_CMD(0x02);
  1401   002DBC  0E02               	movlw	2
  1402   002DBE  EC5E  F016         	call	_ENVIA_LCD_CMD
  1403   002DC2  0012               	return		;funcret
  1404   002DC4                     __end_of_CURSOR_HOME:
  1405                           	callstack 0
  1406                           
  1407 ;; *************** function _BORRAR_LCD *****************
  1408 ;; Defined at:
  1409 ;;		line 104 in file "LCD.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2, status,0, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1427 ;;Total ram usage:        0 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; Hardware stack levels required when called: 3
  1430 ;; This function calls:
  1431 ;;		_ENVIA_LCD_CMD
  1432 ;; This function is called by:
  1433 ;;		_LCD_INIT
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text9
  1438   002DC4                     __ptext9:
  1439                           	callstack 0
  1440   002DC4                     _BORRAR_LCD:
  1441                           	callstack 122
  1442   002DC4                     
  1443                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x01);
  1444   002DC4  0E01               	movlw	1
  1445   002DC6  EC5E  F016         	call	_ENVIA_LCD_CMD
  1446   002DCA  0012               	return		;funcret
  1447   002DCC                     __end_of_BORRAR_LCD:
  1448                           	callstack 0
  1449                           
  1450 ;; *************** function _ENVIA_LCD_CMD *****************
  1451 ;; Defined at:
  1452 ;;		line 136 in file "LCD.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  dato            1    wreg     unsigned char 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  dato            1    1[COMRAM] unsigned char 
  1457 ;;  aux             1    2[COMRAM] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1468 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1471 ;;Total ram usage:        2 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; Hardware stack levels required when called: 2
  1474 ;; This function calls:
  1475 ;;		_ENVIA_NIBBLE
  1476 ;;		_LEER_LCD
  1477 ;; This function is called by:
  1478 ;;		_POS_CURSOR
  1479 ;;		_CURSOR_HOME
  1480 ;;		_CURSOR_ONOFF
  1481 ;;		_BORRAR_LCD
  1482 ;;		_LCD_CONFIG
  1483 ;;		_BLINK_CURSOR
  1484 ;;		_DISPLAY_ONOFF
  1485 ;;		_CURSOR_SHIFTLEFT
  1486 ;;		_CURSOR_SHIFTRIGHT
  1487 ;;		_DISPLAY_SHIFTLEFT
  1488 ;;		_DISPLAY_SHIFTRIGHT
  1489 ;;		_GENERACARACTER
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text10
  1494   002CBC                     __ptext10:
  1495                           	callstack 0
  1496   002CBC                     _ENVIA_LCD_CMD:
  1497                           	callstack 123
  1498                           
  1499                           ;incstack = 0
  1500                           ;ENVIA_LCD_CMD@dato stored from wreg
  1501   002CBC  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1502   002CBE                     
  1503                           ;LCD.c: 136: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 137: {;LCD.c: 138:  unsigned 
      +                          char aux;;LCD.c: 139:  LATDbits.LATD0 = 0;
  1504   002CBE  90C1               	bcf	193,0,c	;volatile
  1505   002CC0                     
  1506                           ;LCD.c: 140:  LEER_LCD();
  1507   002CC0  EC4E  F015         	call	_LEER_LCD	;wreg free
  1508   002CC4                     
  1509                           ;LCD.c: 141:  TRISD = 0b00000000;
  1510   002CC4  0E00               	movlw	0
  1511   002CC6  6EC9               	movwf	201,c	;volatile
  1512   002CC8                     
  1513                           ;LCD.c: 142:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1514   002CC8  0E85               	movlw	133
  1515   002CCA                     u557:
  1516   002CCA  2EE8               	decfsz	wreg,f,c
  1517   002CCC  D7FE               	bra	u557
  1518   002CCE  0000               	nop	
  1519   002CD0                     
  1520                           ;LCD.c: 143:     LATDbits.LATD1 = 0;
  1521   002CD0  92C1               	bcf	193,1,c	;volatile
  1522   002CD2                     
  1523                           ;LCD.c: 144:  LATDbits.LATD2 = 0;
  1524   002CD2  94C1               	bcf	193,2,c	;volatile
  1525   002CD4                     
  1526                           ;LCD.c: 145:  LATDbits.LATD0 = 0;
  1527   002CD4  90C1               	bcf	193,0,c	;volatile
  1528   002CD6                     
  1529                           ;LCD.c: 146:  aux = dato & 0xF0;
  1530   002CD6  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1531   002CD8  0BF0               	andlw	240
  1532   002CDA  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1533   002CDC                     
  1534                           ;LCD.c: 147:  ENVIA_NIBBLE(aux);
  1535   002CDC  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1536   002CDE  ECD0  F016         	call	_ENVIA_NIBBLE
  1537   002CE2                     
  1538                           ;LCD.c: 148:  aux = dato<<4;
  1539   002CE2  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1540   002CE4  0BF0               	andlw	240
  1541   002CE6  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1542   002CE8                     
  1543                           ;LCD.c: 149:  ENVIA_NIBBLE(aux);
  1544   002CE8  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1545   002CEA  ECD0  F016         	call	_ENVIA_NIBBLE
  1546   002CEE  0012               	return		;funcret
  1547   002CF0                     __end_of_ENVIA_LCD_CMD:
  1548                           	callstack 0
  1549                           
  1550 ;; *************** function _LCD_ESCRIBE_VAR_INT *****************
  1551 ;; Defined at:
  1552 ;;		line 224 in file "LCD.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  numero          2   12[COMRAM] unsigned int 
  1555 ;;  n_digitos       1   14[COMRAM] unsigned char 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  unidad          1   19[COMRAM] unsigned char 
  1558 ;;  decena          1   18[COMRAM] unsigned char 
  1559 ;;  centena         1   17[COMRAM] unsigned char 
  1560 ;;  millar          1   16[COMRAM] unsigned char 
  1561 ;;  d_millar        1   15[COMRAM] unsigned char 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1571 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1572 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1574 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1575 ;;Total ram usage:        8 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; Hardware stack levels required when called: 3
  1578 ;; This function calls:
  1579 ;;		_ENVIA_CHAR
  1580 ;;		___lwdiv
  1581 ;;		___lwmod
  1582 ;; This function is called by:
  1583 ;;		_main
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text11
  1588   002790                     __ptext11:
  1589                           	callstack 0
  1590   002790                     _LCD_ESCRIBE_VAR_INT:
  1591                           	callstack 123
  1592   002790                     
  1593                           ;LCD.c: 225:     unsigned char d_millar, millar, centena, decena, unidad;;LCD.c: 226:   
      +                            d_millar = numero / 10000;
  1594   002790  C50D  F506         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  1595   002794  C50E  F507         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  1596   002798  0E27               	movlw	39
  1597   00279A  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1598   00279C  0E10               	movlw	16
  1599   00279E  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1600   0027A0  EC14  F015         	call	___lwdiv	;wreg free
  1601   0027A4  5006               	movf	?___lwdiv^(0+1280),w,c
  1602   0027A6  6E10               	movwf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  1603                           
  1604                           ;LCD.c: 227:     millar = (numero % 10000) / 1000;
  1605   0027A8  0E27               	movlw	39
  1606   0027AA  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1607   0027AC  0E10               	movlw	16
  1608   0027AE  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1609   0027B0  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1610   0027B4  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1611   0027B8  EC87  F015         	call	___lwmod	;wreg free
  1612   0027BC  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1613   0027C0  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1614   0027C4  0E03               	movlw	3
  1615   0027C6  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1616   0027C8  0EE8               	movlw	232
  1617   0027CA  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1618   0027CC  EC14  F015         	call	___lwdiv	;wreg free
  1619   0027D0  5006               	movf	?___lwdiv^(0+1280),w,c
  1620   0027D2  6E11               	movwf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),c
  1621                           
  1622                           ;LCD.c: 228:     centena = (numero % 1000) / 100;
  1623   0027D4  0E03               	movlw	3
  1624   0027D6  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1625   0027D8  0EE8               	movlw	232
  1626   0027DA  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1627   0027DC  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1628   0027E0  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1629   0027E4  EC87  F015         	call	___lwmod	;wreg free
  1630   0027E8  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1631   0027EC  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1632   0027F0  0E00               	movlw	0
  1633   0027F2  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1634   0027F4  0E64               	movlw	100
  1635   0027F6  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1636   0027F8  EC14  F015         	call	___lwdiv	;wreg free
  1637   0027FC  5006               	movf	?___lwdiv^(0+1280),w,c
  1638   0027FE  6E12               	movwf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),c
  1639                           
  1640                           ;LCD.c: 229:     decena = (numero % 100) / 10;
  1641   002800  0E00               	movlw	0
  1642   002802  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1643   002804  0E64               	movlw	100
  1644   002806  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1645   002808  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1646   00280C  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1647   002810  EC87  F015         	call	___lwmod	;wreg free
  1648   002814  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1649   002818  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1650   00281C  0E00               	movlw	0
  1651   00281E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1652   002820  0E0A               	movlw	10
  1653   002822  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1654   002824  EC14  F015         	call	___lwdiv	;wreg free
  1655   002828  5006               	movf	?___lwdiv^(0+1280),w,c
  1656   00282A  6E13               	movwf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),c
  1657                           
  1658                           ;LCD.c: 230:     unidad = numero % 10;
  1659   00282C  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1660   002830  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1661   002834  0E00               	movlw	0
  1662   002836  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1663   002838  0E0A               	movlw	10
  1664   00283A  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1665   00283C  EC87  F015         	call	___lwmod	;wreg free
  1666   002840  5001               	movf	?___lwmod^(0+1280),w,c
  1667   002842  6E14               	movwf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),c
  1668                           
  1669                           ;LCD.c: 231:     switch(n_digitos){
  1670   002844  EF6A  F014         	goto	l1553
  1671   002848                     l1541:
  1672                           
  1673                           ;LCD.c: 233:             ENVIA_CHAR(unidad+0x30);
  1674   002848  5014               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1675   00284A  0F30               	addlw	48
  1676   00284C  EC78  F016         	call	_ENVIA_CHAR
  1677                           
  1678                           ;LCD.c: 234:             break;
  1679   002850  EF81  F014         	goto	l121
  1680   002854                     l1543:
  1681                           
  1682                           ;LCD.c: 236:             ENVIA_CHAR(decena+0x30);
  1683   002854  5013               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1684   002856  0F30               	addlw	48
  1685   002858  EC78  F016         	call	_ENVIA_CHAR
  1686                           
  1687                           ;LCD.c: 237:             ENVIA_CHAR(unidad+0x30);
  1688   00285C  5014               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1689   00285E  0F30               	addlw	48
  1690   002860  EC78  F016         	call	_ENVIA_CHAR
  1691                           
  1692                           ;LCD.c: 238:             break;
  1693   002864  EF81  F014         	goto	l121
  1694   002868                     l1545:
  1695                           
  1696                           ;LCD.c: 240:             ENVIA_CHAR(centena+0x30);
  1697   002868  5012               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1698   00286A  0F30               	addlw	48
  1699   00286C  EC78  F016         	call	_ENVIA_CHAR
  1700                           
  1701                           ;LCD.c: 241:             ENVIA_CHAR(decena+0x30);
  1702   002870  5013               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1703   002872  0F30               	addlw	48
  1704   002874  EC78  F016         	call	_ENVIA_CHAR
  1705                           
  1706                           ;LCD.c: 242:             ENVIA_CHAR(unidad+0x30);
  1707   002878  5014               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1708   00287A  0F30               	addlw	48
  1709   00287C  EC78  F016         	call	_ENVIA_CHAR
  1710                           
  1711                           ;LCD.c: 243:             break;
  1712   002880  EF81  F014         	goto	l121
  1713   002884                     l1547:
  1714                           
  1715                           ;LCD.c: 245:             ENVIA_CHAR(millar+0x30);
  1716   002884  5011               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  1717   002886  0F30               	addlw	48
  1718   002888  EC78  F016         	call	_ENVIA_CHAR
  1719                           
  1720                           ;LCD.c: 246:             ENVIA_CHAR(centena+0x30);
  1721   00288C  5012               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1722   00288E  0F30               	addlw	48
  1723   002890  EC78  F016         	call	_ENVIA_CHAR
  1724                           
  1725                           ;LCD.c: 247:             ENVIA_CHAR(decena+0x30);
  1726   002894  5013               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1727   002896  0F30               	addlw	48
  1728   002898  EC78  F016         	call	_ENVIA_CHAR
  1729                           
  1730                           ;LCD.c: 248:             ENVIA_CHAR(unidad+0x30);
  1731   00289C  5014               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1732   00289E  0F30               	addlw	48
  1733   0028A0  EC78  F016         	call	_ENVIA_CHAR
  1734                           
  1735                           ;LCD.c: 249:             break;
  1736   0028A4  EF81  F014         	goto	l121
  1737   0028A8                     l1549:
  1738                           
  1739                           ;LCD.c: 251:             ENVIA_CHAR(d_millar+0x30);
  1740   0028A8  5010               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  1741   0028AA  0F30               	addlw	48
  1742   0028AC  EC78  F016         	call	_ENVIA_CHAR
  1743                           
  1744                           ;LCD.c: 252:             ENVIA_CHAR(millar+0x30);
  1745   0028B0  5011               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  1746   0028B2  0F30               	addlw	48
  1747   0028B4  EC78  F016         	call	_ENVIA_CHAR
  1748                           
  1749                           ;LCD.c: 253:             ENVIA_CHAR(centena+0x30);
  1750   0028B8  5012               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1751   0028BA  0F30               	addlw	48
  1752   0028BC  EC78  F016         	call	_ENVIA_CHAR
  1753                           
  1754                           ;LCD.c: 254:             ENVIA_CHAR(decena+0x30);
  1755   0028C0  5013               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1756   0028C2  0F30               	addlw	48
  1757   0028C4  EC78  F016         	call	_ENVIA_CHAR
  1758                           
  1759                           ;LCD.c: 255:             ENVIA_CHAR(unidad+0x30);
  1760   0028C8  5014               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1761   0028CA  0F30               	addlw	48
  1762   0028CC  EC78  F016         	call	_ENVIA_CHAR
  1763                           
  1764                           ;LCD.c: 256:             break;
  1765   0028D0  EF81  F014         	goto	l121
  1766   0028D4                     l1553:
  1767   0028D4  500F               	movf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  1768                           
  1769                           ; Switch size 1, requested type "simple"
  1770                           ; Number of cases is 5, Range of values is 1 to 5
  1771                           ; switch strategies available:
  1772                           ; Name         Instructions Cycles
  1773                           ; simple_byte           16     9 (average)
  1774                           ;	Chosen strategy is simple_byte
  1775   0028D6  0A01               	xorlw	1	; case 1
  1776   0028D8  B4D8               	btfsc	status,2,c
  1777   0028DA  EF24  F014         	goto	l1541
  1778   0028DE  0A03               	xorlw	3	; case 2
  1779   0028E0  B4D8               	btfsc	status,2,c
  1780   0028E2  EF2A  F014         	goto	l1543
  1781   0028E6  0A01               	xorlw	1	; case 3
  1782   0028E8  B4D8               	btfsc	status,2,c
  1783   0028EA  EF34  F014         	goto	l1545
  1784   0028EE  0A07               	xorlw	7	; case 4
  1785   0028F0  B4D8               	btfsc	status,2,c
  1786   0028F2  EF42  F014         	goto	l1547
  1787   0028F6  0A01               	xorlw	1	; case 5
  1788   0028F8  B4D8               	btfsc	status,2,c
  1789   0028FA  EF54  F014         	goto	l1549
  1790   0028FE  EF81  F014         	goto	l121
  1791   002902                     l121:
  1792   002902  0012               	return		;funcret
  1793   002904                     __end_of_LCD_ESCRIBE_VAR_INT:
  1794                           	callstack 0
  1795                           
  1796 ;; *************** function ___lwmod *****************
  1797 ;; Defined at:
  1798 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  dividend        2    0[COMRAM] unsigned int 
  1801 ;;  divisor         2    2[COMRAM] unsigned int 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  counter         1    4[COMRAM] unsigned char 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  2    0[COMRAM] unsigned int 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2, status,0
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1816 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1817 ;;Total ram usage:        5 bytes
  1818 ;; Hardware stack levels used: 1
  1819 ;; Hardware stack levels required when called: 1
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_LCD_ESCRIBE_VAR_INT
  1824 ;;		_main
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text12
  1829   002B0E                     __ptext12:
  1830                           	callstack 0
  1831   002B0E                     ___lwmod:
  1832                           	callstack 125
  1833   002B0E  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1834   002B10  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  1835   002B12  B4D8               	btfsc	status,2,c
  1836   002B14  EF8E  F015         	goto	u341
  1837   002B18  EF90  F015         	goto	u340
  1838   002B1C                     u341:
  1839   002B1C  EFB4  F015         	goto	l735
  1840   002B20                     u340:
  1841   002B20  0E01               	movlw	1
  1842   002B22  6E05               	movwf	___lwmod@counter^(0+1280),c
  1843   002B24  EF98  F015         	goto	l1487
  1844   002B28                     l1485:
  1845   002B28  90D8               	bcf	status,0,c
  1846   002B2A  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  1847   002B2C  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  1848   002B2E  2A05               	incf	___lwmod@counter^(0+1280),f,c
  1849   002B30                     l1487:
  1850   002B30  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  1851   002B32  EF9D  F015         	goto	u351
  1852   002B36  EF9F  F015         	goto	u350
  1853   002B3A                     u351:
  1854   002B3A  EF94  F015         	goto	l1485
  1855   002B3E                     u350:
  1856   002B3E                     l1489:
  1857   002B3E  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1858   002B40  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  1859   002B42  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1860   002B44  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  1861   002B46  A0D8               	btfss	status,0,c
  1862   002B48  EFA8  F015         	goto	u361
  1863   002B4C  EFAA  F015         	goto	u360
  1864   002B50                     u361:
  1865   002B50  EFAE  F015         	goto	l1493
  1866   002B54                     u360:
  1867   002B54  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1868   002B56  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  1869   002B58  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1870   002B5A  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  1871   002B5C                     l1493:
  1872   002B5C  90D8               	bcf	status,0,c
  1873   002B5E  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  1874   002B60  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  1875   002B62  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  1876   002B64  EF9F  F015         	goto	l1489
  1877   002B68                     l735:
  1878   002B68  C501  F501         	movff	___lwmod@dividend,?___lwmod
  1879   002B6C  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  1880   002B70  0012               	return		;funcret
  1881   002B72                     __end_of___lwmod:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function ___lwdiv *****************
  1885 ;; Defined at:
  1886 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  dividend        2    5[COMRAM] unsigned int 
  1889 ;;  divisor         2    7[COMRAM] unsigned int 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;  quotient        2    9[COMRAM] unsigned int 
  1892 ;;  counter         1   11[COMRAM] unsigned char 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  2    5[COMRAM] unsigned int 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1902 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1903 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1905 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1906 ;;Total ram usage:        7 bytes
  1907 ;; Hardware stack levels used: 1
  1908 ;; Hardware stack levels required when called: 1
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_LCD_ESCRIBE_VAR_INT
  1913 ;;		_adquiere
  1914 ;;		_main
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text13
  1919   002A28                     __ptext13:
  1920                           	callstack 0
  1921   002A28                     ___lwdiv:
  1922                           	callstack 124
  1923   002A28  0E00               	movlw	0
  1924   002A2A  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  1925   002A2C  0E00               	movlw	0
  1926   002A2E  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  1927   002A30  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1928   002A32  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  1929   002A34  B4D8               	btfsc	status,2,c
  1930   002A36  EF1F  F015         	goto	u311
  1931   002A3A  EF21  F015         	goto	u310
  1932   002A3E                     u311:
  1933   002A3E  EF49  F015         	goto	l725
  1934   002A42                     u310:
  1935   002A42  0E01               	movlw	1
  1936   002A44  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  1937   002A46  EF29  F015         	goto	l1467
  1938   002A4A                     l1465:
  1939   002A4A  90D8               	bcf	status,0,c
  1940   002A4C  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  1941   002A4E  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1942   002A50  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  1943   002A52                     l1467:
  1944   002A52  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  1945   002A54  EF2E  F015         	goto	u321
  1946   002A58  EF30  F015         	goto	u320
  1947   002A5C                     u321:
  1948   002A5C  EF25  F015         	goto	l1465
  1949   002A60                     u320:
  1950   002A60                     l1469:
  1951   002A60  90D8               	bcf	status,0,c
  1952   002A62  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  1953   002A64  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  1954   002A66  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1955   002A68  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  1956   002A6A  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1957   002A6C  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  1958   002A6E  A0D8               	btfss	status,0,c
  1959   002A70  EF3C  F015         	goto	u331
  1960   002A74  EF3E  F015         	goto	u330
  1961   002A78                     u331:
  1962   002A78  EF43  F015         	goto	l1477
  1963   002A7C                     u330:
  1964   002A7C  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1965   002A7E  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  1966   002A80  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1967   002A82  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  1968   002A84  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  1969   002A86                     l1477:
  1970   002A86  90D8               	bcf	status,0,c
  1971   002A88  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1972   002A8A  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  1973   002A8C  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  1974   002A8E  EF30  F015         	goto	l1469
  1975   002A92                     l725:
  1976   002A92  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  1977   002A96  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1978   002A9A  0012               	return		;funcret
  1979   002A9C                     __end_of___lwdiv:
  1980                           	callstack 0
  1981                           
  1982 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  1983 ;; Defined at:
  1984 ;;		line 77 in file "LCD.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  1987 ;;		 -> STR_8(5), STR_7(4), STR_6(5), STR_5(4), 
  1988 ;;		 -> STR_4(5), STR_3(4), STR_2(5), STR_1(4), 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  i               1    6[COMRAM] unsigned char 
  1991 ;;  tam             1    5[COMRAM] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2001 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2002 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2004 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2005 ;;Total ram usage:        4 bytes
  2006 ;; Hardware stack levels used: 1
  2007 ;; Hardware stack levels required when called: 3
  2008 ;; This function calls:
  2009 ;;		_ENVIA_CHAR
  2010 ;;		_strlen
  2011 ;; This function is called by:
  2012 ;;		_main
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text14
  2017   002BC6                     __ptext14:
  2018                           	callstack 0
  2019   002BC6                     _ESCRIBE_MENSAJE2:
  2020                           	callstack 123
  2021   002BC6                     
  2022                           ;LCD.c: 77: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 78: {;LCD.c: 79:     unsign
      +                          ed char tam;;LCD.c: 80:     tam = strlen(cadena);
  2023   002BC6  C504  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  2024   002BCA  EC42  F016         	call	_strlen	;wreg free
  2025   002BCE  5001               	movf	?_strlen^(0+1280),w,c
  2026   002BD0  6E06               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  2027   002BD2                     
  2028                           ;LCD.c: 82:  for(i = 0; i<tam; i++)
  2029   002BD2  0E00               	movlw	0
  2030   002BD4  6E07               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  2031   002BD6  EFFB  F015         	goto	l1523
  2032   002BDA                     l1519:
  2033                           
  2034                           ;LCD.c: 83:  {;LCD.c: 84:   ENVIA_CHAR(cadena[i]);
  2035   002BDA  5004               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  2036   002BDC  2407               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2037   002BDE  6E05               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  2038   002BE0  C505  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  2039   002BE4                     	if	1	;There is more than 1 active tblptr byte
  2040   002BE4  0E25               	movlw	high __smallconst
  2041   002BE6  6EF7               	movwf	tblptrh,c
  2042   002BE8                     	endif
  2043   002BE8                     	if	0	;tblptru may be non-zero
  2044   002BE8                     	endif
  2045   002BE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2046   002BE8  0E00               	movlw	low (__smallconst shr (0+16))
  2047   002BEA  6EF8               	movwf	tblptru,c
  2048   002BEC                     	endif
  2049   002BEC  0008               	tblrd		*
  2050   002BEE  50F5               	movf	tablat,w,c
  2051   002BF0  EC78  F016         	call	_ENVIA_CHAR
  2052   002BF4                     
  2053                           ;LCD.c: 85:  }
  2054   002BF4  2A07               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  2055   002BF6                     l1523:
  2056   002BF6  5006               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  2057   002BF8  5C07               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2058   002BFA  A0D8               	btfss	status,0,c
  2059   002BFC  EF02  F016         	goto	u411
  2060   002C00  EF04  F016         	goto	u410
  2061   002C04                     u411:
  2062   002C04  EFED  F015         	goto	l1519
  2063   002C08                     u410:
  2064   002C08  0012               	return		;funcret
  2065   002C0A                     __end_of_ESCRIBE_MENSAJE2:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _strlen *****************
  2069 ;; Defined at:
  2070 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2073 ;;		 -> STR_8(5), STR_7(4), STR_6(5), STR_5(4), 
  2074 ;;		 -> STR_4(5), STR_3(4), STR_2(5), STR_1(4), 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2077 ;;		 -> STR_8(5), STR_7(4), STR_6(5), STR_5(4), 
  2078 ;;		 -> STR_4(5), STR_3(4), STR_2(5), STR_1(4), 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  2    0[COMRAM] unsigned int 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2091 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2092 ;;Total ram usage:        3 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; Hardware stack levels required when called: 1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_ESCRIBE_MENSAJE2
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text15
  2103   002C84                     __ptext15:
  2104                           	callstack 0
  2105   002C84                     _strlen:
  2106                           	callstack 124
  2107   002C84  C501  F503         	movff	strlen@s,strlen@a
  2108   002C88  EF47  F016         	goto	l1421
  2109   002C8C                     l1419:
  2110   002C8C  2A01               	incf	strlen@s^(0+1280),f,c
  2111   002C8E                     l1421:
  2112   002C8E  C501  F4F6         	movff	strlen@s,tblptrl
  2113   002C92                     	if	1	;There is more than 1 active tblptr byte
  2114   002C92  0E25               	movlw	high __smallconst
  2115   002C94  6EF7               	movwf	tblptrh,c
  2116   002C96                     	endif
  2117   002C96                     	if	0	;tblptru may be non-zero
  2118   002C96                     	endif
  2119   002C96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2120   002C96  0E00               	movlw	low (__smallconst shr (0+16))
  2121   002C98  6EF8               	movwf	tblptru,c
  2122   002C9A                     	endif
  2123   002C9A  0008               	tblrd		*
  2124   002C9C  50F5               	movf	tablat,w,c
  2125   002C9E  0900               	iorlw	0
  2126   002CA0  A4D8               	btfss	status,2,c
  2127   002CA2  EF55  F016         	goto	u291
  2128   002CA6  EF57  F016         	goto	u290
  2129   002CAA                     u291:
  2130   002CAA  EF46  F016         	goto	l1419
  2131   002CAE                     u290:
  2132   002CAE  5003               	movf	strlen@a^(0+1280),w,c
  2133   002CB0  5C01               	subwf	strlen@s^(0+1280),w,c
  2134   002CB2  6E01               	movwf	?_strlen^(0+1280),c
  2135   002CB4  6A02               	clrf	(?_strlen+1)^(0+1280),c
  2136   002CB6  BE01               	btfsc	?_strlen^(0+1280),7,c
  2137   002CB8  0602               	decf	(?_strlen+1)^(0+1280),f,c
  2138   002CBA  0012               	return		;funcret
  2139   002CBC                     __end_of_strlen:
  2140                           	callstack 0
  2141                           
  2142 ;; *************** function _ENVIA_CHAR *****************
  2143 ;; Defined at:
  2144 ;;		line 88 in file "LCD.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  dato            1    wreg     unsigned char 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  dato            1    1[COMRAM] unsigned char 
  2149 ;;  aux             1    2[COMRAM] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2160 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2162 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2163 ;;Total ram usage:        2 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; Hardware stack levels required when called: 2
  2166 ;; This function calls:
  2167 ;;		_ENVIA_NIBBLE
  2168 ;;		_LEER_LCD
  2169 ;; This function is called by:
  2170 ;;		_ESCRIBE_MENSAJE2
  2171 ;;		_LCD_ESCRIBE_VAR_INT
  2172 ;;		_main
  2173 ;;		_ESCRIBE_MENSAJE
  2174 ;;		_GENERACARACTER
  2175 ;;		_LCD_ESCRIBE_VAR_CHAR
  2176 ;;		_LCD_CHAR_GRADO
  2177 ;;		_LCD_VARCHAR_BITS
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text16
  2182   002CF0                     __ptext16:
  2183                           	callstack 0
  2184   002CF0                     _ENVIA_CHAR:
  2185                           	callstack 123
  2186                           
  2187                           ;incstack = 0
  2188                           ;ENVIA_CHAR@dato stored from wreg
  2189   002CF0  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2190   002CF2                     
  2191                           ;LCD.c: 88: void ENVIA_CHAR(unsigned char dato);LCD.c: 89: {;LCD.c: 90:  unsigned char a
      +                          ux;;LCD.c: 91:  LATDbits.LATD0 = 1;
  2192   002CF2  80C1               	bsf	193,0,c	;volatile
  2193   002CF4                     
  2194                           ;LCD.c: 92:  LEER_LCD();
  2195   002CF4  EC4E  F015         	call	_LEER_LCD	;wreg free
  2196   002CF8                     
  2197                           ;LCD.c: 93:  TRISD = 0x00;
  2198   002CF8  0E00               	movlw	0
  2199   002CFA  6EC9               	movwf	201,c	;volatile
  2200   002CFC                     
  2201                           ;LCD.c: 94:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2202   002CFC  0E85               	movlw	133
  2203   002CFE                     u567:
  2204   002CFE  2EE8               	decfsz	wreg,f,c
  2205   002D00  D7FE               	bra	u567
  2206   002D02  0000               	nop	
  2207   002D04                     
  2208                           ;LCD.c: 95:  LATDbits.LATD1 = 0;
  2209   002D04  92C1               	bcf	193,1,c	;volatile
  2210   002D06                     
  2211                           ;LCD.c: 96:  LATDbits.LATD2 = 0;
  2212   002D06  94C1               	bcf	193,2,c	;volatile
  2213   002D08                     
  2214                           ;LCD.c: 97:  LATDbits.LATD0 = 1;
  2215   002D08  80C1               	bsf	193,0,c	;volatile
  2216   002D0A                     
  2217                           ;LCD.c: 98:  aux = dato & 0xF0;
  2218   002D0A  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2219   002D0C  0BF0               	andlw	240
  2220   002D0E  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2221   002D10                     
  2222                           ;LCD.c: 99:  ENVIA_NIBBLE(aux);
  2223   002D10  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2224   002D12  ECD0  F016         	call	_ENVIA_NIBBLE
  2225   002D16                     
  2226                           ;LCD.c: 100:  aux = dato << 4;
  2227   002D16  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2228   002D18  0BF0               	andlw	240
  2229   002D1A  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2230   002D1C                     
  2231                           ;LCD.c: 101:  ENVIA_NIBBLE(aux);
  2232   002D1C  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2233   002D1E  ECD0  F016         	call	_ENVIA_NIBBLE
  2234   002D22  0012               	return		;funcret
  2235   002D24                     __end_of_ENVIA_CHAR:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function _LEER_LCD *****************
  2239 ;; Defined at:
  2240 ;;		line 152 in file "LCD.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  aux             1    0[COMRAM] unsigned char 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, status,2, status,0
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2258 ;;Total ram usage:        1 bytes
  2259 ;; Hardware stack levels used: 1
  2260 ;; Hardware stack levels required when called: 1
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_ENVIA_CHAR
  2265 ;;		_ENVIA_LCD_CMD
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text17
  2270   002A9C                     __ptext17:
  2271                           	callstack 0
  2272   002A9C                     _LEER_LCD:
  2273                           	callstack 123
  2274   002A9C                     
  2275                           ;LCD.c: 154:  unsigned char aux;;LCD.c: 155:  TRISD = 0xF8;
  2276   002A9C  0EF8               	movlw	248
  2277   002A9E  6EC9               	movwf	201,c	;volatile
  2278   002AA0                     
  2279                           ;LCD.c: 156:  LATDbits.LATD0 = 0;
  2280   002AA0  90C1               	bcf	193,0,c	;volatile
  2281   002AA2                     
  2282                           ;LCD.c: 157:  LATDbits.LATD1 = 1;
  2283   002AA2  82C1               	bsf	193,1,c	;volatile
  2284   002AA4                     
  2285                           ;LCD.c: 158:  LATDbits.LATD2 = 1;
  2286   002AA4  84C1               	bsf	193,2,c	;volatile
  2287   002AA6                     
  2288                           ;LCD.c: 159:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2289   002AA6  0E85               	movlw	133
  2290   002AA8                     u577:
  2291   002AA8  2EE8               	decfsz	wreg,f,c
  2292   002AAA  D7FE               	bra	u577
  2293   002AAC  0000               	nop	
  2294   002AAE                     
  2295                           ;LCD.c: 160:  aux = PORTD;
  2296   002AAE  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2297   002AB2                     
  2298                           ;LCD.c: 161:  LATDbits.LATD2 = 0;
  2299   002AB2  94C1               	bcf	193,2,c	;volatile
  2300   002AB4                     
  2301                           ;LCD.c: 162:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2302   002AB4  0E85               	movlw	133
  2303   002AB6                     u587:
  2304   002AB6  2EE8               	decfsz	wreg,f,c
  2305   002AB8  D7FE               	bra	u587
  2306   002ABA  0000               	nop	
  2307   002ABC                     
  2308                           ;LCD.c: 163:  LATDbits.LATD2 = 1;
  2309   002ABC  84C1               	bsf	193,2,c	;volatile
  2310   002ABE                     
  2311                           ;LCD.c: 164:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2312   002ABE  0E85               	movlw	133
  2313   002AC0                     u597:
  2314   002AC0  2EE8               	decfsz	wreg,f,c
  2315   002AC2  D7FE               	bra	u597
  2316   002AC4  0000               	nop	
  2317   002AC6                     
  2318                           ;LCD.c: 165:  LATDbits.LATD2 = 0;
  2319   002AC6  94C1               	bcf	193,2,c	;volatile
  2320   002AC8                     l1339:
  2321                           
  2322                           ;LCD.c: 166:  aux = aux & 0x80;
  2323   002AC8  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  2324   002ACA  0B80               	andlw	128
  2325   002ACC  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  2326                           
  2327                           ;LCD.c: 167:  while(aux == 0x80)
  2328   002ACE  EF7D  F015         	goto	l1353
  2329   002AD2                     l93:
  2330                           
  2331                           ;LCD.c: 168:         {;LCD.c: 169:             LATDbits.LATD2 = 1;
  2332   002AD2  84C1               	bsf	193,2,c	;volatile
  2333   002AD4                     
  2334                           ;LCD.c: 170:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2335   002AD4  0E85               	movlw	133
  2336   002AD6                     u607:
  2337   002AD6  2EE8               	decfsz	wreg,f,c
  2338   002AD8  D7FE               	bra	u607
  2339   002ADA  0000               	nop	
  2340   002ADC                     
  2341                           ;LCD.c: 171:             aux = PORTD;
  2342   002ADC  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2343   002AE0                     
  2344                           ;LCD.c: 172:             LATDbits.LATD2 = 0;
  2345   002AE0  94C1               	bcf	193,2,c	;volatile
  2346                           
  2347                           ;LCD.c: 173:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2348   002AE2  0E85               	movlw	133
  2349   002AE4                     u617:
  2350   002AE4  2EE8               	decfsz	wreg,f,c
  2351   002AE6  D7FE               	bra	u617
  2352   002AE8  0000               	nop	
  2353   002AEA                     
  2354                           ;LCD.c: 174:             LATDbits.LATD2 = 1;
  2355   002AEA  84C1               	bsf	193,2,c	;volatile
  2356                           
  2357                           ;LCD.c: 175:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2358   002AEC  0E85               	movlw	133
  2359   002AEE                     u627:
  2360   002AEE  2EE8               	decfsz	wreg,f,c
  2361   002AF0  D7FE               	bra	u627
  2362   002AF2  0000               	nop	
  2363   002AF4                     
  2364                           ;LCD.c: 176:             LATDbits.LATD2 = 0;
  2365   002AF4  94C1               	bcf	193,2,c	;volatile
  2366   002AF6  EF64  F015         	goto	l1339
  2367   002AFA                     l1353:
  2368                           
  2369                           ;LCD.c: 167:  while(aux == 0x80)
  2370   002AFA  0E80               	movlw	128
  2371   002AFC  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  2372   002AFE  B4D8               	btfsc	status,2,c
  2373   002B00  EF84  F015         	goto	u261
  2374   002B04  EF86  F015         	goto	u260
  2375   002B08                     u261:
  2376   002B08  EF69  F015         	goto	l93
  2377   002B0C                     u260:
  2378   002B0C  0012               	return		;funcret
  2379   002B0E                     __end_of_LEER_LCD:
  2380                           	callstack 0
  2381                           
  2382 ;; *************** function _ENVIA_NIBBLE *****************
  2383 ;; Defined at:
  2384 ;;		line 126 in file "LCD.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  dato            1    wreg     unsigned char 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  dato            1    0[COMRAM] unsigned char 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2402 ;;Total ram usage:        1 bytes
  2403 ;; Hardware stack levels used: 1
  2404 ;; Hardware stack levels required when called: 1
  2405 ;; This function calls:
  2406 ;;		Nothing
  2407 ;; This function is called by:
  2408 ;;		_ENVIA_CHAR
  2409 ;;		_LCD_CONFIG
  2410 ;;		_ENVIA_LCD_CMD
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text18
  2415   002DA0                     __ptext18:
  2416                           	callstack 0
  2417   002DA0                     _ENVIA_NIBBLE:
  2418                           	callstack 123
  2419                           
  2420                           ;incstack = 0
  2421                           ;ENVIA_NIBBLE@dato stored from wreg
  2422   002DA0  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2423   002DA2                     
  2424                           ;LCD.c: 126: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 127: {;LCD.c: 128:  LATD &= 0x
      +                          0F;
  2425   002DA2  0E0F               	movlw	15
  2426   002DA4  16C1               	andwf	193,f,c	;volatile
  2427                           
  2428                           ;LCD.c: 129:  dato &= 0xF0;
  2429   002DA6  0EF0               	movlw	240
  2430   002DA8  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2431                           
  2432                           ;LCD.c: 130:  LATD|= dato;
  2433   002DAA  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2434   002DAC  12C1               	iorwf	193,f,c	;volatile
  2435   002DAE                     
  2436                           ;LCD.c: 131:  LATDbits.LATD2 = 1;
  2437   002DAE  84C1               	bsf	193,2,c	;volatile
  2438   002DB0                     
  2439                           ;LCD.c: 132:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2440   002DB0  0E85               	movlw	133
  2441   002DB2                     u637:
  2442   002DB2  2EE8               	decfsz	wreg,f,c
  2443   002DB4  D7FE               	bra	u637
  2444   002DB6  0000               	nop	
  2445   002DB8                     
  2446                           ;LCD.c: 133:  LATDbits.LATD2 = 0;
  2447   002DB8  94C1               	bcf	193,2,c	;volatile
  2448   002DBA  0012               	return		;funcret
  2449   002DBC                     __end_of_ENVIA_NIBBLE:
  2450                           	callstack 0
  2451                           
  2452 ;; *************** function _INT0_ISR *****************
  2453 ;; Defined at:
  2454 ;;		line 96 in file "maincode01.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2472 ;;Total ram usage:        0 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; This function calls:
  2475 ;;		Nothing
  2476 ;; This function is called by:
  2477 ;;		Interrupt level 2
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           	psect	text19
  2482   002DCC                     __ptext19:
  2483                           	callstack 0
  2484   002DCC                     _INT0_ISR:
  2485                           	callstack 122
  2486   002DCC                     
  2487                           ;maincode01.c: 97:     PIR1bits.INT0IF = 0;
  2488   002DCC  90AF               	bcf	175,0,c	;volatile
  2489   002DCE                     
  2490                           ;maincode01.c: 98:     pantalla = 0;
  2491   002DCE  0E00               	movlw	0
  2492   002DD0  6E2B               	movwf	_pantalla^(0+1280),c
  2493   002DD2  0011               	retfie		f
  2494   002DD4                     __end_of_INT0_ISR:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function _default_ISR *****************
  2498 ;; Defined at:
  2499 ;;		line 101 in file "maincode01.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;		None
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;		None
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		None
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2517 ;;Total ram usage:        0 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		Interrupt level 2
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text20
  2527   002DD4                     __ptext20:
  2528                           	callstack 0
  2529   002DD4                     _default_ISR:
  2530                           	callstack 122
  2531   002DD4  0011               	retfie		f
  2532   002DD6                     __end_of_default_ISR:
  2533                           	callstack 0
  2534                           
  2535                           ;
  2536                           ; H/W Interrupt Vector Table @ 0x8
  2537                           ;
  2538                           
  2539                           	psect	ivt0x8
  2540   000008                     __pivt0x8:
  2541                           	callstack 0
  2542   000008                     ivt0x8_base:
  2543                           	callstack 0
  2544                           
  2545                           ; Vector 0 : SWINT
  2546   000008  0B75               	dw	_default_ISR shr (0+2)
  2547                           
  2548                           ; Vector 1 : HLVD
  2549   00000A  0B75               	dw	_default_ISR shr (0+2)
  2550                           
  2551                           ; Vector 2 : OSF
  2552   00000C  0B75               	dw	_default_ISR shr (0+2)
  2553                           
  2554                           ; Vector 3 : CSW
  2555   00000E  0B75               	dw	_default_ISR shr (0+2)
  2556                           
  2557                           ; Vector 4 : Undefined
  2558   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  2559                           
  2560                           ; Vector 5 : CLC1
  2561   000012  0B75               	dw	_default_ISR shr (0+2)
  2562                           
  2563                           ; Vector 6 : Undefined
  2564   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  2565                           
  2566                           ; Vector 7 : IOC
  2567   000016  0B75               	dw	_default_ISR shr (0+2)
  2568                           
  2569                           ; Vector 8 : INT0
  2570   000018  0B73               	dw	_INT0_ISR shr (0+2)
  2571                           
  2572                           ; Vector 9 : ZCD
  2573   00001A  0B75               	dw	_default_ISR shr (0+2)
  2574                           
  2575                           ; Vector 10 : AD
  2576   00001C  0B75               	dw	_default_ISR shr (0+2)
  2577                           
  2578                           ; Vector 11 : ACT
  2579   00001E  0B75               	dw	_default_ISR shr (0+2)
  2580                           
  2581                           ; Vector 12 : CMP1
  2582   000020  0B75               	dw	_default_ISR shr (0+2)
  2583                           
  2584                           ; Vector 13 : SMT1
  2585   000022  0B75               	dw	_default_ISR shr (0+2)
  2586                           
  2587                           ; Vector 14 : SMT1PRA
  2588   000024  0B75               	dw	_default_ISR shr (0+2)
  2589                           
  2590                           ; Vector 15 : SMT1PRW
  2591   000026  0B75               	dw	_default_ISR shr (0+2)
  2592                           
  2593                           ; Vector 16 : ADT
  2594   000028  0B75               	dw	_default_ISR shr (0+2)
  2595                           
  2596                           ; Vector 17 : Undefined
  2597   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  2598                           
  2599                           ; Vector 18 : Undefined
  2600   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  2601                           
  2602                           ; Vector 19 : Undefined
  2603   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  2604                           
  2605                           ; Vector 20 : DMA1SCNT
  2606   000030  0B75               	dw	_default_ISR shr (0+2)
  2607                           
  2608                           ; Vector 21 : DMA1DCNT
  2609   000032  0B75               	dw	_default_ISR shr (0+2)
  2610                           
  2611                           ; Vector 22 : DMA1OR
  2612   000034  0B75               	dw	_default_ISR shr (0+2)
  2613                           
  2614                           ; Vector 23 : DMA1A
  2615   000036  0B75               	dw	_default_ISR shr (0+2)
  2616                           
  2617                           ; Vector 24 : SPI1RX
  2618   000038  0B75               	dw	_default_ISR shr (0+2)
  2619                           
  2620                           ; Vector 25 : SPI1TX
  2621   00003A  0B75               	dw	_default_ISR shr (0+2)
  2622                           
  2623                           ; Vector 26 : SPI1
  2624   00003C  0B75               	dw	_default_ISR shr (0+2)
  2625                           
  2626                           ; Vector 27 : TMR2
  2627   00003E  0B75               	dw	_default_ISR shr (0+2)
  2628                           
  2629                           ; Vector 28 : TMR1
  2630   000040  0B75               	dw	_default_ISR shr (0+2)
  2631                           
  2632                           ; Vector 29 : TMR1G
  2633   000042  0B75               	dw	_default_ISR shr (0+2)
  2634                           
  2635                           ; Vector 30 : CCP1
  2636   000044  0B75               	dw	_default_ISR shr (0+2)
  2637                           
  2638                           ; Vector 31 : TMR0
  2639   000046  0B75               	dw	_default_ISR shr (0+2)
  2640                           
  2641                           ; Vector 32 : U1RX
  2642   000048  0B75               	dw	_default_ISR shr (0+2)
  2643                           
  2644                           ; Vector 33 : U1TX
  2645   00004A  0B75               	dw	_default_ISR shr (0+2)
  2646                           
  2647                           ; Vector 34 : U1E
  2648   00004C  0B75               	dw	_default_ISR shr (0+2)
  2649                           
  2650                           ; Vector 35 : U1
  2651   00004E  0B75               	dw	_default_ISR shr (0+2)
  2652                           
  2653                           ; Vector 36 : Undefined
  2654   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  2655                           
  2656                           ; Vector 37 : Undefined
  2657   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  2658                           
  2659                           ; Vector 38 : PWM1PR
  2660   000054  0B75               	dw	_default_ISR shr (0+2)
  2661                           
  2662                           ; Vector 39 : PWM1
  2663   000056  0B75               	dw	_default_ISR shr (0+2)
  2664                           
  2665                           ; Vector 40 : SPI2RX
  2666   000058  0B75               	dw	_default_ISR shr (0+2)
  2667                           
  2668                           ; Vector 41 : SPI2TX
  2669   00005A  0B75               	dw	_default_ISR shr (0+2)
  2670                           
  2671                           ; Vector 42 : SPI2
  2672   00005C  0B75               	dw	_default_ISR shr (0+2)
  2673                           
  2674                           ; Vector 43 : Undefined
  2675   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  2676                           
  2677                           ; Vector 44 : TMR3
  2678   000060  0B75               	dw	_default_ISR shr (0+2)
  2679                           
  2680                           ; Vector 45 : TMR3G
  2681   000062  0B75               	dw	_default_ISR shr (0+2)
  2682                           
  2683                           ; Vector 46 : PWM2PR
  2684   000064  0B75               	dw	_default_ISR shr (0+2)
  2685                           
  2686                           ; Vector 47 : PWM2
  2687   000066  0B75               	dw	_default_ISR shr (0+2)
  2688                           
  2689                           ; Vector 48 : INT1
  2690   000068  0B75               	dw	_default_ISR shr (0+2)
  2691                           
  2692                           ; Vector 49 : CLC2
  2693   00006A  0B75               	dw	_default_ISR shr (0+2)
  2694                           
  2695                           ; Vector 50 : CWG1
  2696   00006C  0B75               	dw	_default_ISR shr (0+2)
  2697                           
  2698                           ; Vector 51 : NCO1
  2699   00006E  0B75               	dw	_default_ISR shr (0+2)
  2700                           
  2701                           ; Vector 52 : DMA2SCNT
  2702   000070  0B75               	dw	_default_ISR shr (0+2)
  2703                           
  2704                           ; Vector 53 : DMA2DCNT
  2705   000072  0B75               	dw	_default_ISR shr (0+2)
  2706                           
  2707                           ; Vector 54 : DMA2OR
  2708   000074  0B75               	dw	_default_ISR shr (0+2)
  2709                           
  2710                           ; Vector 55 : DMA2A
  2711   000076  0B75               	dw	_default_ISR shr (0+2)
  2712                           
  2713                           ; Vector 56 : I2C1RX
  2714   000078  0B75               	dw	_default_ISR shr (0+2)
  2715                           
  2716                           ; Vector 57 : I2C1TX
  2717   00007A  0B75               	dw	_default_ISR shr (0+2)
  2718                           
  2719                           ; Vector 58 : I2C1
  2720   00007C  0B75               	dw	_default_ISR shr (0+2)
  2721                           
  2722                           ; Vector 59 : I2C1E
  2723   00007E  0B75               	dw	_default_ISR shr (0+2)
  2724                           
  2725                           ; Vector 60 : Undefined
  2726   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  2727                           
  2728                           ; Vector 61 : CLC3
  2729   000082  0B75               	dw	_default_ISR shr (0+2)
  2730                           
  2731                           ; Vector 62 : PWM3PR
  2732   000084  0B75               	dw	_default_ISR shr (0+2)
  2733                           
  2734                           ; Vector 63 : PWM3
  2735   000086  0B75               	dw	_default_ISR shr (0+2)
  2736                           
  2737                           ; Vector 64 : U2RX
  2738   000088  0B75               	dw	_default_ISR shr (0+2)
  2739                           
  2740                           ; Vector 65 : U2TX
  2741   00008A  0B75               	dw	_default_ISR shr (0+2)
  2742                           
  2743                           ; Vector 66 : U2E
  2744   00008C  0B75               	dw	_default_ISR shr (0+2)
  2745                           
  2746                           ; Vector 67 : U2
  2747   00008E  0B75               	dw	_default_ISR shr (0+2)
  2748                           
  2749                           ; Vector 68 : TMR5
  2750   000090  0B75               	dw	_default_ISR shr (0+2)
  2751                           
  2752                           ; Vector 69 : TMR5G
  2753   000092  0B75               	dw	_default_ISR shr (0+2)
  2754                           
  2755                           ; Vector 70 : CCP2
  2756   000094  0B75               	dw	_default_ISR shr (0+2)
  2757                           
  2758                           ; Vector 71 : SCAN
  2759   000096  0B75               	dw	_default_ISR shr (0+2)
  2760                           
  2761                           ; Vector 72 : U3RX
  2762   000098  0B75               	dw	_default_ISR shr (0+2)
  2763                           
  2764                           ; Vector 73 : U3TX
  2765   00009A  0B75               	dw	_default_ISR shr (0+2)
  2766                           
  2767                           ; Vector 74 : U3E
  2768   00009C  0B75               	dw	_default_ISR shr (0+2)
  2769                           
  2770                           ; Vector 75 : U3
  2771   00009E  0B75               	dw	_default_ISR shr (0+2)
  2772                           
  2773                           ; Vector 76 : Undefined
  2774   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  2775                           
  2776                           ; Vector 77 : CLC4
  2777   0000A2  0B75               	dw	_default_ISR shr (0+2)
  2778                           
  2779                           ; Vector 78 : Undefined
  2780   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  2781                           
  2782                           ; Vector 79 : Undefined
  2783   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  2784                           
  2785                           ; Vector 80 : INT2
  2786   0000A8  0B75               	dw	_default_ISR shr (0+2)
  2787                           
  2788                           ; Vector 81 : CLC5
  2789   0000AA  0B75               	dw	_default_ISR shr (0+2)
  2790                           
  2791                           ; Vector 82 : CWG2
  2792   0000AC  0B75               	dw	_default_ISR shr (0+2)
  2793                           
  2794                           ; Vector 83 : NCO2
  2795   0000AE  0B75               	dw	_default_ISR shr (0+2)
  2796                           
  2797                           ; Vector 84 : DMA3SCNT
  2798   0000B0  0B75               	dw	_default_ISR shr (0+2)
  2799                           
  2800                           ; Vector 85 : DMA3DCNT
  2801   0000B2  0B75               	dw	_default_ISR shr (0+2)
  2802                           
  2803                           ; Vector 86 : DMA3OR
  2804   0000B4  0B75               	dw	_default_ISR shr (0+2)
  2805                           
  2806                           ; Vector 87 : DMA3A
  2807   0000B6  0B75               	dw	_default_ISR shr (0+2)
  2808                           
  2809                           ; Vector 88 : CCP3
  2810   0000B8  0B75               	dw	_default_ISR shr (0+2)
  2811                           
  2812                           ; Vector 89 : CLC6
  2813   0000BA  0B75               	dw	_default_ISR shr (0+2)
  2814                           
  2815                           ; Vector 90 : CWG3
  2816   0000BC  0B75               	dw	_default_ISR shr (0+2)
  2817                           
  2818                           ; Vector 91 : TMR4
  2819   0000BE  0B75               	dw	_default_ISR shr (0+2)
  2820                           
  2821                           ; Vector 92 : DMA4SCNT
  2822   0000C0  0B75               	dw	_default_ISR shr (0+2)
  2823                           
  2824                           ; Vector 93 : DMA4DCNT
  2825   0000C2  0B75               	dw	_default_ISR shr (0+2)
  2826                           
  2827                           ; Vector 94 : DMA4OR
  2828   0000C4  0B75               	dw	_default_ISR shr (0+2)
  2829                           
  2830                           ; Vector 95 : DMA4A
  2831   0000C6  0B75               	dw	_default_ISR shr (0+2)
  2832                           
  2833                           ; Vector 96 : U4RX
  2834   0000C8  0B75               	dw	_default_ISR shr (0+2)
  2835                           
  2836                           ; Vector 97 : U4TX
  2837   0000CA  0B75               	dw	_default_ISR shr (0+2)
  2838                           
  2839                           ; Vector 98 : U4E
  2840   0000CC  0B75               	dw	_default_ISR shr (0+2)
  2841                           
  2842                           ; Vector 99 : U4
  2843   0000CE  0B75               	dw	_default_ISR shr (0+2)
  2844                           
  2845                           ; Vector 100 : DMA5SCNT
  2846   0000D0  0B75               	dw	_default_ISR shr (0+2)
  2847                           
  2848                           ; Vector 101 : DMA5DCNT
  2849   0000D2  0B75               	dw	_default_ISR shr (0+2)
  2850                           
  2851                           ; Vector 102 : DMA5OR
  2852   0000D4  0B75               	dw	_default_ISR shr (0+2)
  2853                           
  2854                           ; Vector 103 : DMA5A
  2855   0000D6  0B75               	dw	_default_ISR shr (0+2)
  2856                           
  2857                           ; Vector 104 : U5RX
  2858   0000D8  0B75               	dw	_default_ISR shr (0+2)
  2859                           
  2860                           ; Vector 105 : U5TX
  2861   0000DA  0B75               	dw	_default_ISR shr (0+2)
  2862                           
  2863                           ; Vector 106 : U5E
  2864   0000DC  0B75               	dw	_default_ISR shr (0+2)
  2865                           
  2866                           ; Vector 107 : U5
  2867   0000DE  0B75               	dw	_default_ISR shr (0+2)
  2868                           
  2869                           ; Vector 108 : DMA6SCNT
  2870   0000E0  0B75               	dw	_default_ISR shr (0+2)
  2871                           
  2872                           ; Vector 109 : DMA6DCNT
  2873   0000E2  0B75               	dw	_default_ISR shr (0+2)
  2874                           
  2875                           ; Vector 110 : DMA6OR
  2876   0000E4  0B75               	dw	_default_ISR shr (0+2)
  2877                           
  2878                           ; Vector 111 : DMA6A
  2879   0000E6  0B75               	dw	_default_ISR shr (0+2)
  2880                           
  2881                           ; Vector 112 : Undefined
  2882   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  2883                           
  2884                           ; Vector 113 : CLC7
  2885   0000EA  0B75               	dw	_default_ISR shr (0+2)
  2886                           
  2887                           ; Vector 114 : CMP2
  2888   0000EC  0B75               	dw	_default_ISR shr (0+2)
  2889                           
  2890                           ; Vector 115 : NCO3
  2891   0000EE  0B75               	dw	_default_ISR shr (0+2)
  2892                           
  2893                           ; Vector 116 : Undefined
  2894   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  2895                           
  2896                           ; Vector 117 : Undefined
  2897   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  2898                           
  2899                           ; Vector 118 : Undefined
  2900   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  2901                           
  2902                           ; Vector 119 : Undefined
  2903   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  2904                           
  2905                           ; Vector 120 : NVM
  2906   0000F8  0B75               	dw	_default_ISR shr (0+2)
  2907                           
  2908                           ; Vector 121 : CLC8
  2909   0000FA  0B75               	dw	_default_ISR shr (0+2)
  2910                           
  2911                           ; Vector 122 : CRC
  2912   0000FC  0B75               	dw	_default_ISR shr (0+2)
  2913                           
  2914                           ; Vector 123 : TMR6
  2915   0000FE  0B75               	dw	_default_ISR shr (0+2)
  2916   000100                     ivt0x8_undefint:
  2917                           	callstack 0
  2918   000100  00FF               	reset	
  2919                           
  2920                           	psect	rparam
  2921   000000                     
  2922                           	psect	config
  2923                           
  2924                           ;Config register CONFIG1 @ 0x300000
  2925                           ;	External Oscillator Selection
  2926                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  2927                           ;	Reset Oscillator Selection
  2928                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2929   300000                     	org	3145728
  2930   300000  FF                 	db	255
  2931                           
  2932                           ;Config register CONFIG2 @ 0x300001
  2933                           ;	Clock out Enable bit
  2934                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2935                           ;	PRLOCKED One-Way Set Enable bit
  2936                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2937                           ;	Clock Switch Enable bit
  2938                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2939                           ;	Fail-Safe Clock Monitor Enable bit
  2940                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2941   300001                     	org	3145729
  2942   300001  FF                 	db	255
  2943                           
  2944                           ;Config register CONFIG3 @ 0x300002
  2945                           ;	MCLR Enable bit
  2946                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2947                           ;	Power-up timer selection bits
  2948                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  2949                           ;	Multi-vector enable bit
  2950                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2951                           ;	IVTLOCK bit One-way set enable bit
  2952                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2953                           ;	Low Power BOR Enable bit
  2954                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2955                           ;	Brown-out Reset Enable bits
  2956                           ;	BOREN = OFF, Brown-out Reset disabled
  2957   300002                     	org	3145730
  2958   300002  3D                 	db	61
  2959                           
  2960                           ;Config register CONFIG4 @ 0x300003
  2961                           ;	Brown-out Reset Voltage Selection bits
  2962                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2963                           ;	ZCD Disable bit
  2964                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2965                           ;	PPSLOCK bit One-Way Set Enable bit
  2966                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2967                           ;	Stack Full/Underflow Reset Enable bit
  2968                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2969                           ;	Low Voltage Programming Enable bit
  2970                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2971                           ;	Extended Instruction Set Enable bit
  2972                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2973   300003                     	org	3145731
  2974   300003  DF                 	db	223
  2975                           
  2976                           ;Config register CONFIG5 @ 0x300004
  2977                           ;	WDT Period selection bits
  2978                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2979                           ;	WDT operating mode
  2980                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2981   300004                     	org	3145732
  2982   300004  9F                 	db	159
  2983                           
  2984                           ;Config register CONFIG6 @ 0x300005
  2985                           ;	WDT Window Select bits
  2986                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2987                           ;	WDT input clock selector
  2988                           ;	WDTCCS = SC, Software Control
  2989   300005                     	org	3145733
  2990   300005  FF                 	db	255
  2991                           
  2992                           ;Config register CONFIG7 @ 0x300006
  2993                           ;	Boot Block Size selection bits
  2994                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2995                           ;	Boot Block enable bit
  2996                           ;	BBEN = OFF, Boot block disabled
  2997                           ;	Storage Area Flash enable bit
  2998                           ;	SAFEN = OFF, SAF disabled
  2999                           ;	Background Debugger
  3000                           ;	DEBUG = OFF, Background Debugger disabled
  3001   300006                     	org	3145734
  3002   300006  FF                 	db	255
  3003                           
  3004                           ;Config register CONFIG8 @ 0x300007
  3005                           ;	Boot Block Write Protection bit
  3006                           ;	WRTB = OFF, Boot Block not Write protected
  3007                           ;	Configuration Register Write Protection bit
  3008                           ;	WRTC = OFF, Configuration registers not Write protected
  3009                           ;	Data EEPROM Write Protection bit
  3010                           ;	WRTD = OFF, Data EEPROM not Write protected
  3011                           ;	SAF Write protection bit
  3012                           ;	WRTSAF = OFF, SAF not Write Protected
  3013                           ;	Application Block write protection bit
  3014                           ;	WRTAPP = OFF, Application Block not write protected
  3015   300007                     	org	3145735
  3016   300007  FF                 	db	255
  3017                           
  3018                           ;Config register CONFIG10 @ 0x300009
  3019                           ;	PFM and Data EEPROM Code Protection bit
  3020                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3021   300009                     	org	3145737
  3022   300009  FF                 	db	255
  3023                           tosu	equ	0x4FF
  3024                           tosh	equ	0x4FE
  3025                           tosl	equ	0x4FD
  3026                           stkptr	equ	0x4FC
  3027                           pclatu	equ	0x4FB
  3028                           pclath	equ	0x4FA
  3029                           pcl	equ	0x4F9
  3030                           tblptru	equ	0x4F8
  3031                           tblptrh	equ	0x4F7
  3032                           tblptrl	equ	0x4F6
  3033                           tablat	equ	0x4F5
  3034                           prodh	equ	0x4F4
  3035                           prodl	equ	0x4F3
  3036                           indf0	equ	0x4EF
  3037                           postinc0	equ	0x4EE
  3038                           postdec0	equ	0x4ED
  3039                           preinc0	equ	0x4EC
  3040                           plusw0	equ	0x4EB
  3041                           fsr0h	equ	0x4EA
  3042                           fsr0l	equ	0x4E9
  3043                           wreg	equ	0x4E8
  3044                           indf1	equ	0x4E7
  3045                           postinc1	equ	0x4E6
  3046                           postdec1	equ	0x4E5
  3047                           preinc1	equ	0x4E4
  3048                           plusw1	equ	0x4E3
  3049                           fsr1h	equ	0x4E2
  3050                           fsr1l	equ	0x4E1
  3051                           bsr	equ	0x4E0
  3052                           indf2	equ	0x4DF
  3053                           postinc2	equ	0x4DE
  3054                           postdec2	equ	0x4DD
  3055                           preinc2	equ	0x4DC
  3056                           plusw2	equ	0x4DB
  3057                           fsr2h	equ	0x4DA
  3058                           fsr2l	equ	0x4D9
  3059                           status	equ	0x4D8

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      43
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[4]), STR_2(CODE[5]), STR_3(CODE[4]), STR_4(CODE[5]), 
		 -> STR_5(CODE[4]), STR_6(CODE[5]), STR_7(CODE[4]), STR_8(CODE[5]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[4]), STR_2(CODE[5]), STR_3(CODE[4]), STR_4(CODE[5]), 
		 -> STR_5(CODE[4]), STR_6(CODE[5]), STR_7(CODE[4]), STR_8(CODE[5]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[4]), STR_2(CODE[5]), STR_3(CODE[4]), STR_4(CODE[5]), 
		 -> STR_5(CODE[4]), STR_6(CODE[5]), STR_7(CODE[4]), STR_8(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_LCD_ESCRIBE_VAR_INT
    _adquiere->___lwdiv
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _LCD_ESCRIBE_VAR_INT->___lwdiv
    ___lwdiv->___lwmod
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _default_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _default_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _default_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _default_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _default_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _default_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _default_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _default_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _default_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _default_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _default_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _default_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _default_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _default_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _default_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _default_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _default_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _default_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _default_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _default_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _default_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _default_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _default_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _default_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _default_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _default_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _default_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _default_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _default_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _default_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _default_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _default_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Critical Paths under _default_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   14104
                                             20 COMRAM     4     4      0
                         _ENVIA_CHAR
                   _ESCRIBE_MENSAJE2
                _LCD_ESCRIBE_VAR_INT
                           _LCD_INIT
                         _POS_CURSOR
                            ___lwdiv
                            ___lwmod
                           _adquiere
                          _configuro
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adquiere                                             0     0      0    2008
                            ___lwdiv
                    _tomamuestra_ADC
 ---------------------------------------------------------------------------------
 (2) _tomamuestra_ADC                                      5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     663
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             1     1      0     799
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     206
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     227
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     183
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_ESCRIBE_VAR_INT                                  8     5      3    5835
                                             12 COMRAM     8     5      3
                         _ENVIA_CHAR
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4    1375
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1986
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1    1071
                                              3 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     183
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _default_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
     _strlen
   _LCD_ESCRIBE_VAR_INT
     _ENVIA_CHAR
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _LCD_INIT
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
   ___lwdiv
   ___lwmod
   _adquiere
     ___lwdiv
     _tomamuestra_ADC
   _configuro

 _INT0_ISR (ROOT)

 _default_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllhhhl    336      0       0      82        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRlll        AD      0       0      85        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhl        86      0       0      76        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      2B       1       45.3%
BITBIGSFRhhhh       29      0       0      70        0.0%
BITBIGSFRlhhh       10      0       0      74        0.0%
BITBIGSFRlhhl        F      0       0      75        0.0%
BITBIGSFRllhhhl      C      0       0      80        0.0%
BITBIGSFRllhhhl      7      0       0      79        0.0%
BITBIGSFRllhhhh      7      0       0      77        0.0%
BITBIGSFRhhl         7      0       0      72        0.0%
BITBIGSFRllhhhl      6      0       0      81        0.0%
BITBIGSFRllhhhl      6      0       0      78        0.0%
BITBIGSFRhhhl        4      0       0      71        0.0%
BITBIGSFRhll         4      0       0      73        0.0%
BITBIGSFRllhl        3      0       0      84        0.0%
BITBIGSFRllhhl       1      0       0      83        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B      86        0.0%
DATA                 0      0      2B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon May 13 18:32:38 2024

                          l32 2A26                            l28 2A26                            l45 2DC2  
                          l62 2D52                            l80 2DCA                            l74 2C08  
                          l83 2BC4                            l93 2AD2                            l77 2D22  
                          l86 2DBA                            l95 2B0C                            l89 2CEE  
               ENVIA_CHAR@aux 0503                           l103 2C46                           l200 2C82  
                         l121 2902                           l203 2D5E                           l206 2D7E  
                         l209 29AC                           l732 2A9A                           l725 2A92  
                         l742 2B70                           l911 2CBA                           l735 2B68  
                         u300 2D6C                           u301 2D68                           u310 2A42  
                         u311 2A3E                           u320 2A60                           u400 2A1A  
                         u321 2A5C                           u401 2A16                           u410 2C08  
                         u330 2A7C                           u411 2C04                           u331 2A78  
                         u260 2B0C                           u340 2B20                           u261 2B08  
                         u341 2B1C                           u350 2B3E                           u270 2D36  
                         u351 2B3A                           u271 2D32                           u360 2B54  
                         u280 2D4C                           u361 2B50                           u281 2D48  
                         u290 2CAE                           u370 29C0                           u291 2CAA  
                         u371 29BC                           u380 29DE                           u517 2C1A  
                         u381 29DA                           u390 29FC                           u607 2AD6  
                         u527 2C2E                           u391 29F8                           u617 2AE4  
                         u537 2B82                           u627 2AEE                           u547 2B94  
                         u637 2DB2                           u557 2CCA                           u567 2CFE  
                         u577 2AA8                           u587 2AB6                           u597 2AC0  
                         _ch0 0529                           _ch1 0527                           _ch2 0525  
                         _ch3 0523                           _vo0 0521                           _vo1 051F  
                         _vo2 051D                           _vo3 051B                   LEER_LCD@aux 0501  
                         wreg 04E8                  ?_CURSOR_HOME 0501                ??_ENVIA_NIBBLE 0501  
              ENVIA_CHAR@dato 0502                          l1321 2AA2                          l1401 2CFC  
                        l1331 2AB4                          l1323 2AA4                          l1411 2D10  
                        l1403 2D04                          l1341 2AD4                          l1333 2ABC  
                        l1325 2AA6                          l1317 2A9C                          l1413 2D16  
                        l1405 2D06                          l1421 2C8E                          l1501 29CC  
                        l1343 2ADC                          l1335 2ABE                          l1327 2AAE  
                        l1319 2AA0                          l1415 2D1C                          l1407 2D08  
                        l1423 2CAE                          l1431 2B76                          l1511 2A1A  
                        l1503 29DE                          l1361 2DB8                          l1345 2AE0  
                        l1353 2AFA                          l1337 2AC6                          l1329 2AB2  
                        l1409 2D0A                          l1417 2C84                          l1521 2BF4  
                        l1513 2BC6                          l1441 2BA6                          l1433 2B7C  
                        l1505 29EA                          l1355 2DA2                          l1347 2AEA  
                        l1339 2AC8                          l1419 2C8C                          l1523 2BF6  
                        l1515 2BD2                          l1371 2CD0                          l1363 2CBE  
                        l1427 2DC4                          l1443 2BAC                          l1435 2B8C  
                        l1531 2C28                          l1507 29FC                          l1451 2D56  
                        l1357 2DAE                          l1349 2AF4                          l1517 2BD2  
                        l1461 2A30                          l1541 2848                          l1381 2CE2  
                        l1373 2CD2                          l1365 2CC0                          l1445 2BB2  
                        l1437 2B9A                          l1429 2B72                          l1533 2C38  
                        l1525 2C0A                          l1509 2A08                          l1453 2D5A  
                        l1701 26BE                          l1359 2DB0                          l1519 2BDA  
                        l1471 2A66                          l1463 2A42                          l1543 2854  
                        l1383 2CE8                          l1375 2CD4                          l1367 2CC4  
                        l1391 2D3C                          l1447 2BB8                          l1439 2BA0  
                        l1535 2C3C                          l1527 2C14                          l1455 2D6C  
                        l1711 2706                          l1703 26CE                          l1473 2A7C  
                        l1465 2A4A                          l1481 2B0E                          l1545 2868  
                        l1553 28D4                          l1377 2CD6                          l1369 2CC8  
                        l1385 2DBC                          l1393 2D4C                          l1449 2BBE  
                        l1537 2C40                          l1529 2C24                          l1561 2C5C  
                        l1705 26D4                          l1395 2CF2                          l1475 2A84  
                        l1467 2A52                          l1459 2A28                          l1491 2B54  
                        l1483 2B20                          l1547 2884                          l1539 2790  
                        l1379 2CDC                          l1387 2D26                          l1571 2C70  
                        l1563 2C5E                          l1555 2C48                          l1707 26F0  
                        l1715 2776                          l1397 2CF4                          l1477 2A86  
                        l1469 2A60                          l1493 2B5C                          l1485 2B28  
                        l1549 28A8                          l1389 2D36                          l1573 2C7C  
                        l1565 2C60                          l1557 2C56                          l1709 2700  
                        l1661 252A                          l1399 2CF8                          l1479 2A8C  
                        l1495 2B62                          l1487 2B30                          l1575 2C7E  
                        l1567 2C6C                          l1559 2C58                          l1671 2560  
                        l1663 252E                          l1489 2B3E                          l1497 29B0  
                        l1577 2C80                          l1569 2C6E                          l1681 25B8  
                        l1673 2570                          l1665 2536                          l1499 29C0  
                        l1579 2904                          l1691 260E                          l1683 25C0  
                        l1675 2582                          l1667 2540                          l1659 2526  
                        l1693 261E                          l1685 25DC                          l1677 2592  
                        l1669 2548                          l1695 2624                          l1687 25EC  
                        l1679 25AE                          l1697 269A                          l1689 25F2  
                        l1699 26A2                          STR_1 2515                          STR_2 2501  
                        STR_3 251D                          STR_4 250B                          STR_5 2519  
                        STR_6 2506                          STR_7 2521                          STR_8 2510  
                        _LATD 04C1                          _WPUB 0409                          _main 2526  
                        start 0102                 ?_CURSOR_ONOFF 0501             ??_tomamuestra_ADC 0503  
                ___param_bank 0000               ??_ENVIA_LCD_CMD 0502              __end_of_LCD_INIT 2C48  
            __end_of_LEER_LCD 2B0E              __end_of_INT0_ISR 2DD4                         ?_main 0501  
                       _ADPCH 03EC               __end_of___lwdiv 2A9C               __end_of___lwmod 2B72  
                       i2l231 2DD4                         i2l226 2DD2                         _OSCEN 00B3  
                       _PORTD 04D1                         _TRISA 04C6                         _TRISB 04C7  
                       _TRISD 04C9                   ?_POS_CURSOR 0504   __end_of_LCD_ESCRIBE_VAR_INT 2904  
                       tablat 04F5                         status 04D8                ??_CURSOR_ONOFF 0504  
             __initialization 2D80                  __end_of_main 2790     LCD_ESCRIBE_VAR_INT@decena 0513  
                      ??_main 0515                 __activetblptr 0003     LCD_ESCRIBE_VAR_INT@millar 0511  
   LCD_ESCRIBE_VAR_INT@numero 050D     LCD_ESCRIBE_VAR_INT@unidad 0514                        _ADRESH 03EB  
                      _ADRESL 03EA                        _ANSELA 0400                        _ANSELB 0408  
                      _ANSELD 0418                        i2l1313 2DCC                        i2l1315 2DCE  
                      _OSCFRQ 00B1              __end_of_adquiere 29AE          __end_of_ENVIA_NIBBLE 2DBC  
                   ??___lwdiv 050A                     ??___lwmod 0505                        clear_0 2D86  
                      isa$std 0001                        _strlen 2C84                  __mediumconst 0000  
                      tblptrh 04F7                        tblptrl 04F6                        tblptru 04F8  
                ??_BORRAR_LCD 0504                     ?_LCD_INIT 0501                     ?_LEER_LCD 0501  
                  __accesstop 0560       __end_of__initialization 2D9A                     ?_INT0_ISR 0501  
                ??_LCD_CONFIG 0504                 ___rparam_used 0001                  ??_ENVIA_CHAR 0502  
              __pcstackCOMRAM 0501                ivt0x8_undefint 0100            __end_of_BORRAR_LCD 2DCC  
            _ESCRIBE_MENSAJE2 2BC6              ENVIA_LCD_CMD@aux 0503          __end_of_CURSOR_ONOFF 2D54  
          __end_of_LCD_CONFIG 2BC6            __end_of_ENVIA_CHAR 2D24    LCD_ESCRIBE_VAR_INT@centena 0512  
             _tomamuestra_ADC 2D54                    ??_LCD_INIT 0505                    ??_LEER_LCD 0501  
            ENVIA_NIBBLE@dato 0501                    ??_INT0_ISR 0501                       IVTBASEH 045E  
                     IVTBASEL 045D                       IVTBASEU 045F                       ?_strlen 0501  
                   ?_adquiere 0501                       _OSCCON1 00AD                  ??_POS_CURSOR 0505  
                     __Hparam 0000                       __Lparam 0000          tomamuestra_ADC@canal 0505  
           __end_of_configuro 2C84                       ___lwdiv 2A28                       ___lwmod 2B0E  
                __psmallconst 2500         __end_of_ENVIA_LCD_CMD 2CF0                       __pcinit 2D80  
          __end_of_POS_CURSOR 2A28                       __ramtop 2500                       __ptext0 2526  
                     __ptext1 2C48                       __ptext2 2904                       __ptext3 2D54  
                     __ptext4 29AE                       __ptext5 2C0A                       __ptext6 2B72  
                     __ptext7 2D24                       __ptext8 2DBC                       __ptext9 2DC4  
     __end_of_tomamuestra_ADC 2D80                    ??_adquiere 050D                 ??_default_ISR 0501  
                _ENVIA_NIBBLE 2DA0          end_of_initialization 2D9A                       postinc0 04EE  
                     strlen@a 0503                       strlen@s 0501             ESCRIBE_MENSAJE2@i 0507  
                   _TRISCbits 04C8           __end_of_default_ISR 2DD6      __end_of_ESCRIBE_MENSAJE2 2C0A  
                _CURSOR_ONOFF 2D24            CURSOR_ONOFF@estado 0504                __end_of_strlen 2CBC  
               ??_CURSOR_HOME 0504              ?_tomamuestra_ADC 0501           start_initialization 2D80  
                  ivt0x8_base 0008             ENVIA_LCD_CMD@dato 0502   LCD_ESCRIBE_VAR_INT@d_millar 0510  
                    ??_strlen 0503                   __pbssCOMRAM 0519                   _default_ISR 2DD4  
         __end_of_CURSOR_HOME 2DC4                     _main$1130 0517                     _main$1129 0515  
            ___lwdiv@dividend 0506                      ?___lwdiv 0506                      ?___lwmod 0501  
                   _configuro 2C48                   __smallconst 2500           _LCD_ESCRIBE_VAR_INT 2790  
            ___lwdiv@quotient 050A                      _LCD_INIT 2C0A                      _LEER_LCD 2A9C  
                    _INT0_ISR 2DCC                      _LATCbits 04C0                      _LATDbits 04C1  
                    _PIE1bits 049F          ?_LCD_ESCRIBE_VAR_INT 050D                      _PIR1bits 04AF  
              POS_CURSOR@fila 0505                    ?_configuro 0501                    _ADCON0bits 03F3  
      ESCRIBE_MENSAJE2@cadena 0504                   _CURSOR_HOME 2DBC                   _INTCON0bits 04D6  
       ??_LCD_ESCRIBE_VAR_INT 0510                      __Hrparam 0000             ?_ESCRIBE_MENSAJE2 0504  
                    __Lrparam 0000            ??_ESCRIBE_MENSAJE2 0505                    _ANSELCbits 0410  
                    _adquiere 2904                      __pivt0x8 0008               ___lwdiv@divisor 0508  
             ___lwdiv@counter 050C                      __ptext10 2CBC                      __ptext11 2790  
                    __ptext20 2DD4                      __ptext12 2B0E                      __ptext13 2A28  
                    __ptext14 2BC6                      __ptext15 2C84                      __ptext16 2CF0  
                    __ptext17 2A9C                      __ptext18 2DA0                      __ptext19 2DCC  
LCD_ESCRIBE_VAR_INT@n_digitos 050F                    _BORRAR_LCD 2DC4                    _LCD_CONFIG 2B72  
                    _pantalla 052B                    _ENVIA_CHAR 2CF0                      isa$xinst 0000  
                    _temporal 0519                 _ENVIA_LCD_CMD 2CBC                   ??_configuro 0501  
                ?_default_ISR 0501                      intlevel2 0000              ___lwmod@dividend 0501  
              ?_ENVIA_LCD_CMD 0501               ___lwmod@divisor 0503               ___lwmod@counter 0505  
         ESCRIBE_MENSAJE2@tam 0506                   ?_BORRAR_LCD 0501                 ?_ENVIA_NIBBLE 0501  
                  _POS_CURSOR 29AE                   ?_LCD_CONFIG 0501                   ?_ENVIA_CHAR 0501  
           POS_CURSOR@columna 0504  
