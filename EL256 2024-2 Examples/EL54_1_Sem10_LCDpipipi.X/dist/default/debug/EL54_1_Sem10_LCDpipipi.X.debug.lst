

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Oct 17 15:06:39 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 23/02/2024 GMT
    26                           ; 
    27                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F57Q43 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     _LATD	set	1217
    60   000000                     _OSCCON1	set	173
    61   000000                     _OSCFRQ	set	177
    62   000000                     _OSCEN	set	179
    63   000000                     _ANSELD	set	1048
    64   000000                     _TRISD	set	1225
    65   000000                     _PORTD	set	1233
    66   000000                     _LATDbits	set	1217
    67                           
    68                           	psect	smallconst
    69   002500                     __psmallconst:
    70                           	callstack 0
    71   002500  00                 	db	0
    72   002501                     STR_2:
    73   002501  55                 	db	85	;'U'
    74   002502  70                 	db	112	;'p'
    75   002503  63                 	db	99	;'c'
    76   002504  69                 	db	105	;'i'
    77   002505  6E                 	db	110	;'n'
    78   002506  6F                 	db	111	;'o'
    79   002507  73                 	db	115	;'s'
    80   002508  20                 	db	32
    81   002509  42                 	db	66	;'B'
    82   00250A  69                 	db	105	;'i'
    83   00250B  6F                 	db	111	;'o'
    84   00250C  73                 	db	115	;'s'
    85   00250D  00                 	db	0
    86   00250E                     STR_1:
    87   00250E  48                 	db	72	;'H'
    88   00250F  6F                 	db	111	;'o'
    89   002510  6C                 	db	108	;'l'
    90   002511  61                 	db	97	;'a'
    91   002512  20                 	db	32
    92   002513  6D                 	db	109	;'m'
    93   002514  75                 	db	117	;'u'
    94   002515  6E                 	db	110	;'n'
    95   002516  64                 	db	100	;'d'
    96   002517  6F                 	db	111	;'o'
    97   002518  21                 	db	33
    98   002519  00                 	db	0
    99   00251A  00                 	db	0	; dummy byte at the end
   100   000000                     
   101                           ; #config settings
   102                           
   103                           	psect	cinit
   104   00278A                     __pcinit:
   105                           	callstack 0
   106   00278A                     start_initialization:
   107                           	callstack 0
   108   00278A                     __initialization:
   109                           	callstack 0
   110   00278A                     end_of_initialization:
   111                           	callstack 0
   112   00278A                     __end_of__initialization:
   113                           	callstack 0
   114   00278A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   115   00278C  6EF8               	movwf	tblptru,c
   116   00278E  0E25               	movlw	high __Lsmallconst
   117   002790  6EF7               	movwf	tblptrh,c
   118   002792  0100               	movlb	0
   119   002794  EFF7  F012         	goto	_main	;jump to C main() function
   120                           
   121                           	psect	cstackCOMRAM
   122   000501                     __pcstackCOMRAM:
   123                           	callstack 0
   124   000501                     ENVIA_NIBBLE@dato:
   125                           	callstack 0
   126   000501                     LEER_LCD@aux:
   127                           	callstack 0
   128                           
   129                           ; 1 bytes @ 0x0
   130   000501                     	ds	1
   131   000502                     ENVIA_CHAR@dato:
   132                           	callstack 0
   133   000502                     ENVIA_LCD_CMD@dato:
   134                           	callstack 0
   135                           
   136                           ; 1 bytes @ 0x1
   137   000502                     	ds	1
   138   000503                     ENVIA_CHAR@aux:
   139                           	callstack 0
   140   000503                     ENVIA_LCD_CMD@aux:
   141                           	callstack 0
   142                           
   143                           ; 1 bytes @ 0x2
   144   000503                     	ds	1
   145   000504                     ??_LCD_CONFIG:
   146   000504                     POS_CURSOR@columna:
   147                           	callstack 0
   148   000504                     CURSOR_ONOFF@estado:
   149                           	callstack 0
   150   000504                     ESCRIBE_MENSAJE@cadena:
   151                           	callstack 0
   152                           
   153                           ; 1 bytes @ 0x3
   154   000504                     	ds	1
   155   000505                     ??_lcd_init:
   156   000505                     POS_CURSOR@fila:
   157                           	callstack 0
   158   000505                     ESCRIBE_MENSAJE@tam:
   159                           	callstack 0
   160                           
   161                           ; 1 bytes @ 0x4
   162   000505                     	ds	1
   163   000506                     ??_ESCRIBE_MENSAJE:
   164                           
   165                           ; 1 bytes @ 0x5
   166   000506                     	ds	1
   167   000507                     ESCRIBE_MENSAJE@i:
   168                           	callstack 0
   169                           
   170                           ; 1 bytes @ 0x6
   171   000507                     	ds	1
   172   000508                     
   173                           ; 1 bytes @ 0x7
   174 ;;
   175 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   176 ;;
   177 ;; *************** function _main *****************
   178 ;; Defined at:
   179 ;;		line 30 in file "maincode01.c"
   180 ;; Parameters:    Size  Location     Type
   181 ;;		None
   182 ;; Auto vars:     Size  Location     Type
   183 ;;		None
   184 ;; Return value:  Size  Location     Type
   185 ;;                  1    wreg      void 
   186 ;; Registers used:
   187 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   188 ;; Tracked objects:
   189 ;;		On entry : 0/0
   190 ;;		On exit  : 0/0
   191 ;;		Unchanged: 0/0
   192 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   197 ;;Total ram usage:        0 bytes
   198 ;; Hardware stack levels required when called: 4
   199 ;; This function calls:
   200 ;;		_ESCRIBE_MENSAJE
   201 ;;		_POS_CURSOR
   202 ;;		_configuro
   203 ;;		_lcd_init
   204 ;; This function is called by:
   205 ;;		Startup code after reset
   206 ;; This function uses a non-reentrant model
   207 ;;
   208                           
   209                           	psect	text0
   210   0025EE                     __ptext0:
   211                           	callstack 0
   212   0025EE                     _main:
   213                           	callstack 123
   214   0025EE                     
   215                           ;maincode01.c: 31:     configuro();
   216   0025EE  ECBD  F013         	call	_configuro	;wreg free
   217   0025F2                     
   218                           ;maincode01.c: 32:     lcd_init();
   219   0025F2  EC98  F013         	call	_lcd_init	;wreg free
   220   0025F6                     
   221                           ;maincode01.c: 33:     POS_CURSOR(1,0);
   222   0025F6  0E00               	movlw	0
   223   0025F8  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   224   0025FA  0E01               	movlw	1
   225   0025FC  EC15  F013         	call	_POS_CURSOR
   226   002600                     
   227                           ;maincode01.c: 34:     ESCRIBE_MENSAJE("Hola mundo!",11);
   228   002600  0E0E               	movlw	low STR_1
   229   002602  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   230   002604  0E0B               	movlw	11
   231   002606  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   232   002608  EC4C  F013         	call	_ESCRIBE_MENSAJE	;wreg free
   233   00260C                     
   234                           ;maincode01.c: 35:     POS_CURSOR(2,0);
   235   00260C  0E00               	movlw	0
   236   00260E  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   237   002610  0E02               	movlw	2
   238   002612  EC15  F013         	call	_POS_CURSOR
   239   002616                     
   240                           ;maincode01.c: 36:     ESCRIBE_MENSAJE("Upcinos Bios",12);
   241   002616  0E01               	movlw	low STR_2
   242   002618  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   243   00261A  0E0C               	movlw	12
   244   00261C  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   245   00261E  EC4C  F013         	call	_ESCRIBE_MENSAJE	;wreg free
   246   002622                     l35:
   247   002622  EF11  F013         	goto	l35
   248   002626  EFFE  F0FF         	goto	start
   249   00262A                     __end_of_main:
   250                           	callstack 0
   251                           
   252 ;; *************** function _lcd_init *****************
   253 ;; Defined at:
   254 ;;		line 20 in file "maincode01.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;		None
   257 ;; Auto vars:     Size  Location     Type
   258 ;;		None
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		wreg, status,2, status,0, cstack
   263 ;; Tracked objects:
   264 ;;		On entry : 0/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   272 ;;Total ram usage:        1 bytes
   273 ;; Hardware stack levels used: 1
   274 ;; Hardware stack levels required when called: 3
   275 ;; This function calls:
   276 ;;		_BORRAR_LCD
   277 ;;		_CURSOR_HOME
   278 ;;		_CURSOR_ONOFF
   279 ;;		_LCD_CONFIG
   280 ;; This function is called by:
   281 ;;		_main
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	text1
   286   002730                     __ptext1:
   287                           	callstack 0
   288   002730                     _lcd_init:
   289                           	callstack 123
   290   002730                     
   291                           ;maincode01.c: 21:     TRISD = 0x00;
   292   002730  0E00               	movlw	0
   293   002732  6EC9               	movwf	201,c	;volatile
   294                           
   295                           ;maincode01.c: 22:     ANSELD = 0x00;
   296   002734  0E00               	movlw	0
   297   002736  0104               	movlb	4	; () banked
   298   002738  6F18               	movwf	24,b	;volatile
   299   00273A                     
   300                           ; BSR set to: 4
   301                           ;maincode01.c: 23:     LCD_CONFIG();
   302   00273A  ECC7  F012         	call	_LCD_CONFIG	;wreg free
   303   00273E                     
   304                           ;maincode01.c: 24:     _delay((unsigned long)((21)*(32000000UL/4000.0)));
   305   00273E  0EDB               	movlw	219
   306   002740  6E05               	movwf	??_lcd_init^(0+1280),c
   307   002742  0E2D               	movlw	45
   308   002744                     u157:
   309   002744  2EE8               	decfsz	wreg,f,c
   310   002746  D7FE               	bra	u157
   311   002748  2E05               	decfsz	??_lcd_init^(0+1280),f,c
   312   00274A  D7FC               	bra	u157
   313   00274C  0000               	nop	
   314   00274E                     
   315                           ;maincode01.c: 25:     BORRAR_LCD();
   316   00274E  ECD0  F013         	call	_BORRAR_LCD	;wreg free
   317   002752                     
   318                           ;maincode01.c: 26:     CURSOR_HOME();
   319   002752  ECCC  F013         	call	_CURSOR_HOME	;wreg free
   320   002756                     
   321                           ;maincode01.c: 27:     CURSOR_ONOFF(1);
   322   002756  0E01               	movlw	1
   323   002758  EC80  F013         	call	_CURSOR_ONOFF
   324   00275C  0012               	return		;funcret
   325   00275E                     __end_of_lcd_init:
   326                           	callstack 0
   327                           
   328 ;; *************** function _LCD_CONFIG *****************
   329 ;; Defined at:
   330 ;;		line 72 in file "LCD.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   346 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   347 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   348 ;;Total ram usage:        1 bytes
   349 ;; Hardware stack levels used: 1
   350 ;; Hardware stack levels required when called: 2
   351 ;; This function calls:
   352 ;;		_ENVIA_LCD_CMD
   353 ;;		_ENVIA_NIBBLE
   354 ;; This function is called by:
   355 ;;		_lcd_init
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text2
   360   00258E                     __ptext2:
   361                           	callstack 0
   362   00258E                     _LCD_CONFIG:
   363                           	callstack 123
   364   00258E                     
   365                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   366   00258E  90C1               	bcf	193,0,c	;volatile
   367                           
   368                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   369   002590  92C1               	bcf	193,1,c	;volatile
   370   002592                     
   371                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   372   002592  0E30               	movlw	48
   373   002594  ECAF  F013         	call	_ENVIA_NIBBLE
   374   002598                     
   375                           ;LCD.c: 77:         _delay(24000);
   376   002598  0E20               	movlw	32
   377   00259A  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   378   00259C  0E2A               	movlw	42
   379   00259E                     u167:
   380   00259E  2EE8               	decfsz	wreg,f,c
   381   0025A0  D7FE               	bra	u167
   382   0025A2  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   383   0025A4  D7FC               	bra	u167
   384   0025A6                     
   385                           ;LCD.c: 78:         _delay(24000);
   386   0025A6  0E20               	movlw	32
   387   0025A8  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   388   0025AA  0E2A               	movlw	42
   389   0025AC                     u177:
   390   0025AC  2EE8               	decfsz	wreg,f,c
   391   0025AE  D7FE               	bra	u177
   392   0025B0  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   393   0025B2  D7FC               	bra	u177
   394                           
   395                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   396   0025B4  0E30               	movlw	48
   397   0025B6  ECAF  F013         	call	_ENVIA_NIBBLE
   398   0025BA                     
   399                           ;LCD.c: 83:  _delay(1200);
   400   0025BA  0EF0               	movlw	240
   401   0025BC                     u187:
   402   0025BC  D000               	nop2	
   403   0025BE  2EE8               	decfsz	wreg,f,c
   404   0025C0  D7FD               	bra	u187
   405   0025C2                     
   406                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   407   0025C2  0E30               	movlw	48
   408   0025C4  ECAF  F013         	call	_ENVIA_NIBBLE
   409   0025C8                     
   410                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   411   0025C8  0E20               	movlw	32
   412   0025CA  ECAF  F013         	call	_ENVIA_NIBBLE
   413   0025CE                     
   414                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   415   0025CE  0E01               	movlw	1
   416   0025D0  EC32  F013         	call	_ENVIA_LCD_CMD
   417   0025D4                     
   418                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   419   0025D4  0E28               	movlw	40
   420   0025D6  EC32  F013         	call	_ENVIA_LCD_CMD
   421   0025DA                     
   422                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   423   0025DA  0E0F               	movlw	15
   424   0025DC  EC32  F013         	call	_ENVIA_LCD_CMD
   425   0025E0                     
   426                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   427   0025E0  0E06               	movlw	6
   428   0025E2  EC32  F013         	call	_ENVIA_LCD_CMD
   429   0025E6                     
   430                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   431   0025E6  0E01               	movlw	1
   432   0025E8  EC32  F013         	call	_ENVIA_LCD_CMD
   433   0025EC  0012               	return		;funcret
   434   0025EE                     __end_of_LCD_CONFIG:
   435                           	callstack 0
   436                           
   437 ;; *************** function _CURSOR_ONOFF *****************
   438 ;; Defined at:
   439 ;;		line 35 in file "LCD.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;  estado          1    wreg     unsigned char 
   442 ;; Auto vars:     Size  Location     Type
   443 ;;  estado          1    3[COMRAM] unsigned char 
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   457 ;;Total ram usage:        1 bytes
   458 ;; Hardware stack levels used: 1
   459 ;; Hardware stack levels required when called: 2
   460 ;; This function calls:
   461 ;;		_ENVIA_LCD_CMD
   462 ;; This function is called by:
   463 ;;		_lcd_init
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text3
   468   002700                     __ptext3:
   469                           	callstack 0
   470   002700                     _CURSOR_ONOFF:
   471                           	callstack 123
   472                           
   473                           ;incstack = 0
   474                           ;CURSOR_ONOFF@estado stored from wreg
   475   002700  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   476   002702                     
   477                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   478   002702  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   479   002704  A4D8               	btfss	status,2,c
   480   002706  EF87  F013         	goto	u21
   481   00270A  EF89  F013         	goto	u20
   482   00270E                     u21:
   483   00270E  EF8C  F013         	goto	l888
   484   002712                     u20:
   485   002712  0E0E               	movlw	14
   486   002714  EC32  F013         	call	_ENVIA_LCD_CMD
   487   002718                     l888:
   488                           
   489                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   490   002718  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   491   00271A  A4D8               	btfss	status,2,c
   492   00271C  EF92  F013         	goto	u31
   493   002720  EF94  F013         	goto	u30
   494   002724                     u31:
   495   002724  EF97  F013         	goto	l80
   496   002728                     u30:
   497   002728  0E0C               	movlw	12
   498   00272A  EC32  F013         	call	_ENVIA_LCD_CMD
   499   00272E                     l80:
   500   00272E  0012               	return		;funcret
   501   002730                     __end_of_CURSOR_ONOFF:
   502                           	callstack 0
   503                           
   504 ;; *************** function _CURSOR_HOME *****************
   505 ;; Defined at:
   506 ;;		line 30 in file "LCD.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   524 ;;Total ram usage:        0 bytes
   525 ;; Hardware stack levels used: 1
   526 ;; Hardware stack levels required when called: 2
   527 ;; This function calls:
   528 ;;		_ENVIA_LCD_CMD
   529 ;; This function is called by:
   530 ;;		_lcd_init
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text4
   535   002798                     __ptext4:
   536                           	callstack 0
   537   002798                     _CURSOR_HOME:
   538                           	callstack 123
   539   002798                     
   540                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   541   002798  0E02               	movlw	2
   542   00279A  EC32  F013         	call	_ENVIA_LCD_CMD
   543   00279E  0012               	return		;funcret
   544   0027A0                     __end_of_CURSOR_HOME:
   545                           	callstack 0
   546                           
   547 ;; *************** function _BORRAR_LCD *****************
   548 ;; Defined at:
   549 ;;		line 67 in file "LCD.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, status,2, status,0, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   567 ;;Total ram usage:        0 bytes
   568 ;; Hardware stack levels used: 1
   569 ;; Hardware stack levels required when called: 2
   570 ;; This function calls:
   571 ;;		_ENVIA_LCD_CMD
   572 ;; This function is called by:
   573 ;;		_lcd_init
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text5
   578   0027A0                     __ptext5:
   579                           	callstack 0
   580   0027A0                     _BORRAR_LCD:
   581                           	callstack 123
   582   0027A0                     
   583                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   584   0027A0  0E01               	movlw	1
   585   0027A2  EC32  F013         	call	_ENVIA_LCD_CMD
   586   0027A6  0012               	return		;funcret
   587   0027A8                     __end_of_BORRAR_LCD:
   588                           	callstack 0
   589                           
   590 ;; *************** function _configuro *****************
   591 ;; Defined at:
   592 ;;		line 13 in file "maincode01.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, status,2
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   610 ;;Total ram usage:        0 bytes
   611 ;; Hardware stack levels used: 1
   612 ;; This function calls:
   613 ;;		Nothing
   614 ;; This function is called by:
   615 ;;		_main
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text6
   620   00277A                     __ptext6:
   621                           	callstack 0
   622   00277A                     _configuro:
   623                           	callstack 126
   624   00277A                     
   625                           ;maincode01.c: 15:     OSCCON1 = 0x60;
   626   00277A  0E60               	movlw	96
   627   00277C  0100               	movlb	0	; () banked
   628   00277E  6FAD               	movwf	173,b	;volatile
   629                           
   630                           ;maincode01.c: 16:     OSCFRQ = 0x06;
   631   002780  0E06               	movlw	6
   632   002782  6FB1               	movwf	177,b	;volatile
   633                           
   634                           ;maincode01.c: 17:     OSCEN = 0x40;
   635   002784  0E40               	movlw	64
   636   002786  6FB3               	movwf	179,b	;volatile
   637   002788                     
   638                           ; BSR set to: 0
   639   002788  0012               	return		;funcret
   640   00278A                     __end_of_configuro:
   641                           	callstack 0
   642                           
   643 ;; *************** function _POS_CURSOR *****************
   644 ;; Defined at:
   645 ;;		line 6 in file "LCD.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;  fila            1    wreg     unsigned char 
   648 ;;  columna         1    3[COMRAM] unsigned char 
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  fila            1    4[COMRAM] unsigned char 
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0, cstack
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   660 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   664 ;;Total ram usage:        2 bytes
   665 ;; Hardware stack levels used: 1
   666 ;; Hardware stack levels required when called: 2
   667 ;; This function calls:
   668 ;;		_ENVIA_LCD_CMD
   669 ;; This function is called by:
   670 ;;		_main
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           	psect	text7
   675   00262A                     __ptext7:
   676                           	callstack 0
   677   00262A                     _POS_CURSOR:
   678                           	callstack 124
   679                           
   680                           ; BSR set to: 0
   681                           ;incstack = 0
   682                           ;POS_CURSOR@fila stored from wreg
   683   00262A  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
   684   00262C                     
   685                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   686   00262C  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
   687   00262E  A4D8               	btfss	status,2,c
   688   002630  EF1C  F013         	goto	u121
   689   002634  EF1E  F013         	goto	u120
   690   002638                     u121:
   691   002638  EF24  F013         	goto	l992
   692   00263C                     u120:
   693   00263C                     
   694                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   695   00263C  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   696   00263E  0F80               	addlw	128
   697   002640  EC32  F013         	call	_ENVIA_LCD_CMD
   698                           
   699                           ;LCD.c: 11:  }
   700   002644  EF31  F013         	goto	l62
   701   002648                     l992:
   702   002648  0E02               	movlw	2
   703   00264A  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   704   00264C  A4D8               	btfss	status,2,c
   705   00264E  EF2B  F013         	goto	u131
   706   002652  EF2D  F013         	goto	u130
   707   002656                     u131:
   708   002656  EF31  F013         	goto	l62
   709   00265A                     u130:
   710   00265A                     
   711                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   712   00265A  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   713   00265C  0FC0               	addlw	192
   714   00265E  EC32  F013         	call	_ENVIA_LCD_CMD
   715   002662                     l62:
   716   002662  0012               	return		;funcret
   717   002664                     __end_of_POS_CURSOR:
   718                           	callstack 0
   719                           
   720 ;; *************** function _ENVIA_LCD_CMD *****************
   721 ;; Defined at:
   722 ;;		line 104 in file "LCD.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  dato            1    wreg     unsigned char 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  dato            1    1[COMRAM] unsigned char 
   727 ;;  aux             1    2[COMRAM] unsigned char 
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   741 ;;Total ram usage:        2 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; Hardware stack levels required when called: 1
   744 ;; This function calls:
   745 ;;		_ENVIA_NIBBLE
   746 ;;		_LEER_LCD
   747 ;; This function is called by:
   748 ;;		_POS_CURSOR
   749 ;;		_CURSOR_HOME
   750 ;;		_CURSOR_ONOFF
   751 ;;		_BORRAR_LCD
   752 ;;		_LCD_CONFIG
   753 ;;		_BLINK_CURSOR
   754 ;;		_DISPLAY_ONOFF
   755 ;;		_GENERACARACTER
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           	psect	text8
   760   002664                     __ptext8:
   761                           	callstack 0
   762   002664                     _ENVIA_LCD_CMD:
   763                           	callstack 123
   764                           
   765                           ;incstack = 0
   766                           ;ENVIA_LCD_CMD@dato stored from wreg
   767   002664  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
   768   002666                     
   769                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
   770   002666  90C1               	bcf	193,0,c	;volatile
   771   002668                     
   772                           ;LCD.c: 108:  LEER_LCD();
   773   002668  EC8E  F012         	call	_LEER_LCD	;wreg free
   774   00266C                     
   775                           ;LCD.c: 109:  TRISD = 0b00000000;
   776   00266C  0E00               	movlw	0
   777   00266E  6EC9               	movwf	201,c	;volatile
   778   002670                     
   779                           ;LCD.c: 111:         _delay(1200);
   780   002670  0EF0               	movlw	240
   781   002672                     u197:
   782   002672  D000               	nop2	
   783   002674  2EE8               	decfsz	wreg,f,c
   784   002676  D7FD               	bra	u197
   785   002678                     
   786                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
   787   002678  92C1               	bcf	193,1,c	;volatile
   788   00267A                     
   789                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
   790   00267A  94C1               	bcf	193,2,c	;volatile
   791   00267C                     
   792                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
   793   00267C  90C1               	bcf	193,0,c	;volatile
   794   00267E                     
   795                           ;LCD.c: 115:  aux = dato & 0xF0;
   796   00267E  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   797   002680  0BF0               	andlw	240
   798   002682  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   799   002684                     
   800                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
   801   002684  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   802   002686  ECAF  F013         	call	_ENVIA_NIBBLE
   803   00268A                     
   804                           ;LCD.c: 117:  aux = dato<<4;
   805   00268A  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   806   00268C  0BF0               	andlw	240
   807   00268E  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   808   002690                     
   809                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
   810   002690  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   811   002692  ECAF  F013         	call	_ENVIA_NIBBLE
   812   002696  0012               	return		;funcret
   813   002698                     __end_of_ENVIA_LCD_CMD:
   814                           	callstack 0
   815                           
   816 ;; *************** function _ESCRIBE_MENSAJE *****************
   817 ;; Defined at:
   818 ;;		line 41 in file "LCD.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
   821 ;;		 -> STR_2(13), STR_1(12), 
   822 ;;  tam             1    4[COMRAM] unsigned char 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  i               1    6[COMRAM] unsigned char 
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   836 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   837 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   838 ;;Total ram usage:        4 bytes
   839 ;; Hardware stack levels used: 1
   840 ;; Hardware stack levels required when called: 2
   841 ;; This function calls:
   842 ;;		_ENVIA_CHAR
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text9
   849   002698                     __ptext9:
   850                           	callstack 0
   851   002698                     _ESCRIBE_MENSAJE:
   852                           	callstack 124
   853   002698                     
   854                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
   855   002698  0E00               	movlw	0
   856   00269A  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
   857                           
   858                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
   859   00269C  0E00               	movlw	0
   860   00269E  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
   861   0026A0  EF5C  F013         	goto	l1002
   862   0026A4                     l998:
   863                           
   864                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
   865   0026A4  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
   866   0026A6  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
   867   0026A8  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
   868   0026AA  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   869   0026AE                     	if	0	;There is only one active tblptr byte
   870   0026AE                     	endif
   871   0026AE                     	if	0	;tblptru may be non-zero
   872   0026AE                     	endif
   873   0026AE                     	if	0	;tblptru may be non-zero
   874   0026AE                     	endif
   875   0026AE  0008               	tblrd		*
   876   0026B0  50F5               	movf	tablat,w,c
   877   0026B2  EC66  F013         	call	_ENVIA_CHAR
   878   0026B6                     
   879                           ;LCD.c: 47:  }
   880   0026B6  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
   881   0026B8                     l1002:
   882   0026B8  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
   883   0026BA  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
   884   0026BC  A0D8               	btfss	status,0,c
   885   0026BE  EF63  F013         	goto	u141
   886   0026C2  EF65  F013         	goto	u140
   887   0026C6                     u141:
   888   0026C6  EF52  F013         	goto	l998
   889   0026CA                     u140:
   890   0026CA  0012               	return		;funcret
   891   0026CC                     __end_of_ESCRIBE_MENSAJE:
   892                           	callstack 0
   893                           
   894 ;; *************** function _ENVIA_CHAR *****************
   895 ;; Defined at:
   896 ;;		line 50 in file "LCD.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  dato            1    wreg     unsigned char 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;  dato            1    1[COMRAM] unsigned char 
   901 ;;  aux             1    2[COMRAM] unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   912 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   914 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   915 ;;Total ram usage:        2 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; Hardware stack levels required when called: 1
   918 ;; This function calls:
   919 ;;		_ENVIA_NIBBLE
   920 ;;		_LEER_LCD
   921 ;; This function is called by:
   922 ;;		_ESCRIBE_MENSAJE
   923 ;;		_GENERACARACTER
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text10
   928   0026CC                     __ptext10:
   929                           	callstack 0
   930   0026CC                     _ENVIA_CHAR:
   931                           	callstack 124
   932                           
   933                           ;incstack = 0
   934                           ;ENVIA_CHAR@dato stored from wreg
   935   0026CC  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
   936   0026CE                     
   937                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
   938   0026CE  80C1               	bsf	193,0,c	;volatile
   939   0026D0                     
   940                           ;LCD.c: 54:  LEER_LCD();
   941   0026D0  EC8E  F012         	call	_LEER_LCD	;wreg free
   942   0026D4                     
   943                           ;LCD.c: 55:  TRISD = 0x00;
   944   0026D4  0E00               	movlw	0
   945   0026D6  6EC9               	movwf	201,c	;volatile
   946   0026D8                     
   947                           ;LCD.c: 56:         _delay(1200);
   948   0026D8  0EF0               	movlw	240
   949   0026DA                     u207:
   950   0026DA  D000               	nop2	
   951   0026DC  2EE8               	decfsz	wreg,f,c
   952   0026DE  D7FD               	bra	u207
   953   0026E0                     
   954                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
   955   0026E0  92C1               	bcf	193,1,c	;volatile
   956   0026E2                     
   957                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
   958   0026E2  94C1               	bcf	193,2,c	;volatile
   959   0026E4                     
   960                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
   961   0026E4  80C1               	bsf	193,0,c	;volatile
   962   0026E6                     
   963                           ;LCD.c: 61:  aux = dato & 0xF0;
   964   0026E6  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
   965   0026E8  0BF0               	andlw	240
   966   0026EA  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
   967   0026EC                     
   968                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
   969   0026EC  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
   970   0026EE  ECAF  F013         	call	_ENVIA_NIBBLE
   971   0026F2                     
   972                           ;LCD.c: 63:  aux = dato << 4;
   973   0026F2  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
   974   0026F4  0BF0               	andlw	240
   975   0026F6  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
   976   0026F8                     
   977                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
   978   0026F8  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
   979   0026FA  ECAF  F013         	call	_ENVIA_NIBBLE
   980   0026FE  0012               	return		;funcret
   981   002700                     __end_of_ENVIA_CHAR:
   982                           	callstack 0
   983                           
   984 ;; *************** function _LEER_LCD *****************
   985 ;; Defined at:
   986 ;;		line 121 in file "LCD.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  aux             1    0[COMRAM] unsigned char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1004 ;;Total ram usage:        1 bytes
  1005 ;; Hardware stack levels used: 1
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_ENVIA_CHAR
  1010 ;;		_ENVIA_LCD_CMD
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text11
  1015   00251C                     __ptext11:
  1016                           	callstack 0
  1017   00251C                     _LEER_LCD:
  1018                           	callstack 123
  1019   00251C                     
  1020                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1021   00251C  0EF8               	movlw	248
  1022   00251E  6EC9               	movwf	201,c	;volatile
  1023   002520                     
  1024                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1025   002520  90C1               	bcf	193,0,c	;volatile
  1026   002522                     
  1027                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1028   002522  82C1               	bsf	193,1,c	;volatile
  1029   002524                     
  1030                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1031   002524  84C1               	bsf	193,2,c	;volatile
  1032   002526                     
  1033                           ;LCD.c: 128:         _delay(1200);
  1034   002526  0EF0               	movlw	240
  1035   002528                     u217:
  1036   002528  D000               	nop2	
  1037   00252A  2EE8               	decfsz	wreg,f,c
  1038   00252C  D7FD               	bra	u217
  1039   00252E                     
  1040                           ;LCD.c: 130:  aux = PORTD;
  1041   00252E  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1042   002532                     
  1043                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1044   002532  94C1               	bcf	193,2,c	;volatile
  1045   002534                     
  1046                           ;LCD.c: 132:         _delay(1200);
  1047   002534  0EF0               	movlw	240
  1048   002536                     u227:
  1049   002536  D000               	nop2	
  1050   002538  2EE8               	decfsz	wreg,f,c
  1051   00253A  D7FD               	bra	u227
  1052   00253C                     
  1053                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1054   00253C  84C1               	bsf	193,2,c	;volatile
  1055   00253E                     
  1056                           ;LCD.c: 135:         _delay(1200);
  1057   00253E  0EF0               	movlw	240
  1058   002540                     u237:
  1059   002540  D000               	nop2	
  1060   002542  2EE8               	decfsz	wreg,f,c
  1061   002544  D7FD               	bra	u237
  1062   002546                     
  1063                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1064   002546  94C1               	bcf	193,2,c	;volatile
  1065   002548                     l810:
  1066                           
  1067                           ;LCD.c: 138:  aux = aux & 0x80;
  1068   002548  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1069   00254A  0B80               	andlw	128
  1070   00254C  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1071                           
  1072                           ;LCD.c: 139:  while(aux == 0x80)
  1073   00254E  EFBD  F012         	goto	l824
  1074   002552                     l105:
  1075                           
  1076                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1077   002552  84C1               	bsf	193,2,c	;volatile
  1078   002554                     
  1079                           ;LCD.c: 142:             _delay(1200);
  1080   002554  0EF0               	movlw	240
  1081   002556                     u247:
  1082   002556  D000               	nop2	
  1083   002558  2EE8               	decfsz	wreg,f,c
  1084   00255A  D7FD               	bra	u247
  1085   00255C                     
  1086                           ;LCD.c: 143:             aux = PORTD;
  1087   00255C  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1088   002560                     
  1089                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1090   002560  94C1               	bcf	193,2,c	;volatile
  1091                           
  1092                           ;LCD.c: 145:             _delay(1200);
  1093   002562  0EF0               	movlw	240
  1094   002564                     u257:
  1095   002564  D000               	nop2	
  1096   002566  2EE8               	decfsz	wreg,f,c
  1097   002568  D7FD               	bra	u257
  1098   00256A                     
  1099                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1100   00256A  84C1               	bsf	193,2,c	;volatile
  1101                           
  1102                           ;LCD.c: 147:             _delay(1200);
  1103   00256C  0EF0               	movlw	240
  1104   00256E                     u267:
  1105   00256E  D000               	nop2	
  1106   002570  2EE8               	decfsz	wreg,f,c
  1107   002572  D7FD               	bra	u267
  1108   002574                     
  1109                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1110   002574  94C1               	bcf	193,2,c	;volatile
  1111   002576  EFA4  F012         	goto	l810
  1112   00257A                     l824:
  1113                           
  1114                           ;LCD.c: 139:  while(aux == 0x80)
  1115   00257A  0E80               	movlw	128
  1116   00257C  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1117   00257E  B4D8               	btfsc	status,2,c
  1118   002580  EFC4  F012         	goto	u11
  1119   002584  EFC6  F012         	goto	u10
  1120   002588                     u11:
  1121   002588  EFA9  F012         	goto	l105
  1122   00258C                     u10:
  1123   00258C  0012               	return		;funcret
  1124   00258E                     __end_of_LEER_LCD:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function _ENVIA_NIBBLE *****************
  1128 ;; Defined at:
  1129 ;;		line 93 in file "LCD.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  dato            1    wreg     unsigned char 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  dato            1    0[COMRAM] unsigned char 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1146 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1147 ;;Total ram usage:        1 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_ENVIA_CHAR
  1153 ;;		_LCD_CONFIG
  1154 ;;		_ENVIA_LCD_CMD
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text12
  1159   00275E                     __ptext12:
  1160                           	callstack 0
  1161   00275E                     _ENVIA_NIBBLE:
  1162                           	callstack 124
  1163                           
  1164                           ;incstack = 0
  1165                           ;ENVIA_NIBBLE@dato stored from wreg
  1166   00275E  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1167   002760                     
  1168                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1169   002760  0E0F               	movlw	15
  1170   002762  16C1               	andwf	193,f,c	;volatile
  1171                           
  1172                           ;LCD.c: 96:  dato &= 0xF0;
  1173   002764  0EF0               	movlw	240
  1174   002766  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1175                           
  1176                           ;LCD.c: 97:  LATD|= dato;
  1177   002768  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1178   00276A  12C1               	iorwf	193,f,c	;volatile
  1179   00276C                     
  1180                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1181   00276C  84C1               	bsf	193,2,c	;volatile
  1182   00276E                     
  1183                           ;LCD.c: 100:         _delay(1200);
  1184   00276E  0EF0               	movlw	240
  1185   002770                     u277:
  1186   002770  D000               	nop2	
  1187   002772  2EE8               	decfsz	wreg,f,c
  1188   002774  D7FD               	bra	u277
  1189   002776                     
  1190                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1191   002776  94C1               	bcf	193,2,c	;volatile
  1192   002778  0012               	return		;funcret
  1193   00277A                     __end_of_ENVIA_NIBBLE:
  1194                           	callstack 0
  1195                           
  1196                           	psect	rparam
  1197   000000                     
  1198                           	psect	config
  1199                           
  1200                           ;Config register CONFIG1 @ 0x300000
  1201                           ;	External Oscillator Selection
  1202                           ;	FEXTOSC = OFF, Oscillator not enabled
  1203                           ;	Reset Oscillator Selection
  1204                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1205   300000                     	org	3145728
  1206   300000  FC                 	db	252
  1207                           
  1208                           ;Config register CONFIG2 @ 0x300001
  1209                           ;	Clock out Enable bit
  1210                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1211                           ;	PRLOCKED One-Way Set Enable bit
  1212                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1213                           ;	Clock Switch Enable bit
  1214                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1215                           ;	Fail-Safe Clock Monitor Enable bit
  1216                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1217   300001                     	org	3145729
  1218   300001  FF                 	db	255
  1219                           
  1220                           ;Config register CONFIG3 @ 0x300002
  1221                           ;	MCLR Enable bit
  1222                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1223                           ;	Power-up timer selection bits
  1224                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  1225                           ;	Multi-vector enable bit
  1226                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1227                           ;	IVTLOCK bit One-way set enable bit
  1228                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1229                           ;	Low Power BOR Enable bit
  1230                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1231                           ;	Brown-out Reset Enable bits
  1232                           ;	BOREN = OFF, Brown-out Reset disabled
  1233   300002                     	org	3145730
  1234   300002  3D                 	db	61
  1235                           
  1236                           ;Config register CONFIG4 @ 0x300003
  1237                           ;	Brown-out Reset Voltage Selection bits
  1238                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1239                           ;	ZCD Disable bit
  1240                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1241                           ;	PPSLOCK bit One-Way Set Enable bit
  1242                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1243                           ;	Stack Full/Underflow Reset Enable bit
  1244                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1245                           ;	Low Voltage Programming Enable bit
  1246                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1247                           ;	Extended Instruction Set Enable bit
  1248                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1249   300003                     	org	3145731
  1250   300003  DF                 	db	223
  1251                           
  1252                           ;Config register CONFIG5 @ 0x300004
  1253                           ;	WDT Period selection bits
  1254                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1255                           ;	WDT operating mode
  1256                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1257   300004                     	org	3145732
  1258   300004  9F                 	db	159
  1259                           
  1260                           ;Config register CONFIG6 @ 0x300005
  1261                           ;	WDT Window Select bits
  1262                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1263                           ;	WDT input clock selector
  1264                           ;	WDTCCS = SC, Software Control
  1265   300005                     	org	3145733
  1266   300005  FF                 	db	255
  1267                           
  1268                           ;Config register CONFIG7 @ 0x300006
  1269                           ;	Boot Block Size selection bits
  1270                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1271                           ;	Boot Block enable bit
  1272                           ;	BBEN = OFF, Boot block disabled
  1273                           ;	Storage Area Flash enable bit
  1274                           ;	SAFEN = OFF, SAF disabled
  1275                           ;	Background Debugger
  1276                           ;	DEBUG = OFF, Background Debugger disabled
  1277   300006                     	org	3145734
  1278   300006  FF                 	db	255
  1279                           
  1280                           ;Config register CONFIG8 @ 0x300007
  1281                           ;	Boot Block Write Protection bit
  1282                           ;	WRTB = OFF, Boot Block not Write protected
  1283                           ;	Configuration Register Write Protection bit
  1284                           ;	WRTC = OFF, Configuration registers not Write protected
  1285                           ;	Data EEPROM Write Protection bit
  1286                           ;	WRTD = OFF, Data EEPROM not Write protected
  1287                           ;	SAF Write protection bit
  1288                           ;	WRTSAF = OFF, SAF not Write Protected
  1289                           ;	Application Block write protection bit
  1290                           ;	WRTAPP = OFF, Application Block not write protected
  1291   300007                     	org	3145735
  1292   300007  FF                 	db	255
  1293                           
  1294                           ;Config register CONFIG10 @ 0x300009
  1295                           ;	PFM and Data EEPROM Code Protection bit
  1296                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1297   300009                     	org	3145737
  1298   300009  FF                 	db	255
  1299                           tosu	equ	0x4FF
  1300                           tosh	equ	0x4FE
  1301                           tosl	equ	0x4FD
  1302                           stkptr	equ	0x4FC
  1303                           pclatu	equ	0x4FB
  1304                           pclath	equ	0x4FA
  1305                           pcl	equ	0x4F9
  1306                           tblptru	equ	0x4F8
  1307                           tblptrh	equ	0x4F7
  1308                           tblptrl	equ	0x4F6
  1309                           tablat	equ	0x4F5
  1310                           prodh	equ	0x4F4
  1311                           prodl	equ	0x4F3
  1312                           indf0	equ	0x4EF
  1313                           postinc0	equ	0x4EE
  1314                           postdec0	equ	0x4ED
  1315                           preinc0	equ	0x4EC
  1316                           plusw0	equ	0x4EB
  1317                           fsr0h	equ	0x4EA
  1318                           fsr0l	equ	0x4E9
  1319                           wreg	equ	0x4E8
  1320                           indf1	equ	0x4E7
  1321                           postinc1	equ	0x4E6
  1322                           postdec1	equ	0x4E5
  1323                           preinc1	equ	0x4E4
  1324                           plusw1	equ	0x4E3
  1325                           fsr1h	equ	0x4E2
  1326                           fsr1l	equ	0x4E1
  1327                           bsr	equ	0x4E0
  1328                           indf2	equ	0x4DF
  1329                           postinc2	equ	0x4DE
  1330                           postdec2	equ	0x4DD
  1331                           preinc2	equ	0x4DC
  1332                           plusw2	equ	0x4DB
  1333                           fsr2h	equ	0x4DA
  1334                           fsr2l	equ	0x4D9
  1335                           status	equ	0x4D8

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[12]), STR_2(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1400
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     515
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BIGRAM            1FFF      0       0      69        0.0%
BITBIGSFRhhhhh      2E      0       0      70        0.0%
BITBIGSFRhhhhl       7      0       0      71        0.0%
BITBIGSFRhhhlhh      7      0       0      72        0.0%
BITBIGSFRhhhlhl     A8      0       0      73        0.0%
BITBIGSFRhhhll     364      0       0      74        0.0%
BITBIGSFRhhl         1      0       0      75        0.0%
BITBIGSFRhl          3      0       0      76        0.0%
BITBIGSFRl          AD      0       0      77        0.0%
ABS                  0      0       0      78        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Oct 17 15:06:39 2024

                     l30 275C                       l27 2788                       l35 2622  
                     l36 2622                       l62 2662                       l80 272E  
                     l75 279E                       l92 27A6                       l86 26CA  
                     l95 25EC                       l89 26FE                       l98 2778  
                     u10 258C                       u11 2588                       u20 2712  
                     u21 270E                       u30 2728                       u31 2724  
          ENVIA_CHAR@aux 0503                      l101 2696                      l105 2552  
                    l107 258C                      l800 2532                      l810 2548  
                    l802 2534                      l820 2574                      l812 2554  
                    l804 253C                      l900 26E0                      l830 276E  
                    l814 255C                      l806 253E                      l910 26F2  
                    l902 26E2                      l832 2776                      l816 2560  
                    l824 257A                      l808 2546                      l912 26F8  
                    l904 26E4                      l840 2670                      l920 273E  
                    l826 2760                      l818 256A                      l906 26E6  
                    l850 2684                      l842 2678                      l834 2666  
                    l914 277A                      l922 274E                      l828 276C  
                    l908 26EC                      l852 268A                      l844 267A  
                    l836 2668                      l860 2598                      l924 2752  
                    l916 2730                      l790 2520                      l854 2690  
                    l846 267C                      l838 266C                      l870 25CE  
                    l862 25A6                      l926 2756                      l918 273A  
                    l792 2522                      l848 267E                      l880 27A0  
                    l872 25D4                      l864 25BA                      l856 258E  
                    l794 2524                      l882 2798                      l890 2728  
                    l874 25DA                      l866 25C2                      l858 2592  
                    l796 2526                      l788 251C                      l892 26CE  
                    l884 2702                      l876 25E0                      l868 25C8  
                    l798 252E                      l894 26D0                      l990 263C  
                    l886 2712                      l878 25E6                      l896 26D4  
                    l992 2648                      l888 2718                      l898 26D8  
                    l994 265A                      l996 2698                      l988 262C  
                    l998 26A4                      u120 263C                      u121 2638  
                    u130 265A                      u131 2656                      u140 26CA  
                    u141 26C6                      u207 26DA                      u217 2528  
                    u227 2536                      u237 2540                      u157 2744  
                    u247 2556                      u167 259E                      u257 2564  
                    u177 25AC                      u267 256E                      u187 25BC  
                    u277 2770                      u197 2672              LEER_LCD@aux 0501  
                    wreg 04E8             ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 0501  
         ENVIA_CHAR@dato 0502                     l1000 26B6                     l1002 26B8  
                   l1010 2600                     l1012 260C                     l1004 25EE  
                   l1014 2616                     l1006 25F2                     l1008 25F6  
                   STR_1 250E                     STR_2 2501                     _LATD 04C1  
                   _main 25EE                     start FFFC            ?_CURSOR_ONOFF 0501  
           ___param_bank 0000          ??_ENVIA_LCD_CMD 0502         __end_of_LEER_LCD 258E  
                  ?_main 0501                    _OSCEN 00B3                    _PORTD 04D1  
                  _TRISD 04C9              ?_POS_CURSOR 0504                    tablat 04F5  
                  status 04D8           ??_CURSOR_ONOFF 0504          __initialization 278A  
           __end_of_main 262A          _ESCRIBE_MENSAJE 2698                   ??_main 0508  
          __activetblptr 0001                   _ANSELD 0418                   _OSCFRQ 00B1  
       __end_of_lcd_init 275E     __end_of_ENVIA_NIBBLE 277A                   isa$std 0001  
           __mediumconst 0000                   tblptrh 04F7                   tblptrl 04F6  
                 tblptru 04F8             ??_BORRAR_LCD 0504                ?_LEER_LCD 0501  
             __accesstop 0560  __end_of__initialization 278A             ??_LCD_CONFIG 0504  
          ___rparam_used 0001             ??_ENVIA_CHAR 0502  __end_of_ESCRIBE_MENSAJE 26CC  
         __pcstackCOMRAM 0501       __end_of_BORRAR_LCD 27A8         ENVIA_LCD_CMD@aux 0503  
   __end_of_CURSOR_ONOFF 2730       __end_of_LCD_CONFIG 25EE       __end_of_ENVIA_CHAR 2700  
             ??_LEER_LCD 0501         ENVIA_NIBBLE@dato 0501                  _OSCCON1 00AD  
           ??_POS_CURSOR 0505                ?_lcd_init 0501                  __Hparam 0000  
                __Lparam 0000         ?_ESCRIBE_MENSAJE 0504        __end_of_configuro 278A  
           __psmallconst 2500    __end_of_ENVIA_LCD_CMD 2698                  __pcinit 278A  
     __end_of_POS_CURSOR 2664                  __ramtop 2500                  __ptext0 25EE  
                __ptext1 2730                  __ptext2 258E                  __ptext3 2700  
                __ptext4 2798                  __ptext5 27A0                  __ptext6 277A  
                __ptext7 262A                  __ptext8 2664                  __ptext9 2698  
             ??_lcd_init 0505             _ENVIA_NIBBLE 275E     end_of_initialization 278A  
           _CURSOR_ONOFF 2700       CURSOR_ONOFF@estado 0504            ??_CURSOR_HOME 0504  
    start_initialization 278A        ENVIA_LCD_CMD@dato 0502      __end_of_CURSOR_HOME 27A0  
              _configuro 277A              __smallconst 2500                 _LEER_LCD 251C  
               _LATDbits 04C1         ESCRIBE_MENSAJE@i 0507           POS_CURSOR@fila 0505  
             ?_configuro 0501              _CURSOR_HOME 2798                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 2500                 __ptext10 26CC  
               __ptext11 251C                 __ptext12 275E               _BORRAR_LCD 27A0  
               _lcd_init 2730               _LCD_CONFIG 258E               _ENVIA_CHAR 26CC  
               isa$xinst 0000            _ENVIA_LCD_CMD 2664              ??_configuro 0501  
      ??_ESCRIBE_MENSAJE 0506    ESCRIBE_MENSAJE@cadena 0504           ?_ENVIA_LCD_CMD 0501  
            ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501               _POS_CURSOR 262A  
            ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 0505              ?_ENVIA_CHAR 0501  
      POS_CURSOR@columna 0504  
