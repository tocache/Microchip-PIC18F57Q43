

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Oct 17 19:36:09 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 18/12/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F57Q43 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     _LATD	set	1217
    60   000000                     _OSCCON1	set	173
    61   000000                     _LATDbits	set	1217
    62   000000                     _TRISBbits	set	1223
    63   000000                     _TRISD	set	1225
    64   000000                     _PORTBbits	set	1231
    65   000000                     _PORTD	set	1233
    66   000000                     _OSCFRQ	set	177
    67   000000                     _OSCEN	set	179
    68   000000                     _ANSELBbits	set	1032
    69   000000                     _ANSELD	set	1048
    70   000000                     _WPUBbits	set	1033
    71                           
    72                           	psect	smallconst
    73   002500                     __psmallconst:
    74                           	callstack 0
    75   002500  00                 	db	0
    76   002501                     STR_2:
    77   002501  42                 	db	66	;'B'
    78   002502  6F                 	db	111	;'o'
    79   002503  74                 	db	116	;'t'
    80   002504  6F                 	db	111	;'o'
    81   002505  6E                 	db	110	;'n'
    82   002506  20                 	db	32
    83   002507  70                 	db	112	;'p'
    84   002508  72                 	db	114	;'r'
    85   002509  65                 	db	101	;'e'
    86   00250A  73                 	db	115	;'s'
    87   00250B  69                 	db	105	;'i'
    88   00250C  6F                 	db	111	;'o'
    89   00250D  6E                 	db	110	;'n'
    90   00250E  61                 	db	97	;'a'
    91   00250F  64                 	db	100	;'d'
    92   002510  6F                 	db	111	;'o'
    93   002511  00                 	db	0
    94   002512                     STR_3:
    95   002512  42                 	db	66	;'B'
    96   002513  6F                 	db	111	;'o'
    97   002514  74                 	db	116	;'t'
    98   002515  6F                 	db	111	;'o'
    99   002516  6E                 	db	110	;'n'
   100   002517  20                 	db	32
   101   002518  73                 	db	115	;'s'
   102   002519  69                 	db	105	;'i'
   103   00251A  6E                 	db	110	;'n'
   104   00251B  20                 	db	32
   105   00251C  70                 	db	112	;'p'
   106   00251D  75                 	db	117	;'u'
   107   00251E  6C                 	db	108	;'l'
   108   00251F  73                 	db	115	;'s'
   109   002520  61                 	db	97	;'a'
   110   002521  72                 	db	114	;'r'
   111   002522  00                 	db	0
   112   002523                     STR_1:
   113   002523  45                 	db	69	;'E'
   114   002524  6A                 	db	106	;'j'
   115   002525  65                 	db	101	;'e'
   116   002526  72                 	db	114	;'r'
   117   002527  63                 	db	99	;'c'
   118   002528  69                 	db	105	;'i'
   119   002529  63                 	db	99	;'c'
   120   00252A  69                 	db	105	;'i'
   121   00252B  6F                 	db	111	;'o'
   122   00252C  20                 	db	32
   123   00252D  23                 	db	35
   124   00252E  32                 	db	50	;'2'
   125   00252F  00                 	db	0
   126   002530  00                 	db	0	; dummy byte at the end
   127   000000                     
   128                           ; #config settings
   129                           
   130                           	psect	cinit
   131   0027E8                     __pcinit:
   132                           	callstack 0
   133   0027E8                     start_initialization:
   134                           	callstack 0
   135   0027E8                     __initialization:
   136                           	callstack 0
   137   0027E8                     end_of_initialization:
   138                           	callstack 0
   139   0027E8                     __end_of__initialization:
   140                           	callstack 0
   141   0027E8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   142   0027EA  6EF8               	movwf	tblptru,c
   143   0027EC  0E25               	movlw	high __Lsmallconst
   144   0027EE  6EF7               	movwf	tblptrh,c
   145   0027F0  0100               	movlb	0
   146   0027F2  EFD2  F012         	goto	_main	;jump to C main() function
   147                           
   148                           	psect	cstackCOMRAM
   149   000501                     __pcstackCOMRAM:
   150                           	callstack 0
   151   000501                     ENVIA_NIBBLE@dato:
   152                           	callstack 0
   153   000501                     LEER_LCD@aux:
   154                           	callstack 0
   155                           
   156                           ; 1 bytes @ 0x0
   157   000501                     	ds	1
   158   000502                     ENVIA_CHAR@dato:
   159                           	callstack 0
   160   000502                     ENVIA_LCD_CMD@dato:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0x1
   164   000502                     	ds	1
   165   000503                     ENVIA_CHAR@aux:
   166                           	callstack 0
   167   000503                     ENVIA_LCD_CMD@aux:
   168                           	callstack 0
   169                           
   170                           ; 1 bytes @ 0x2
   171   000503                     	ds	1
   172   000504                     ??_LCD_CONFIG:
   173   000504                     POS_CURSOR@columna:
   174                           	callstack 0
   175   000504                     CURSOR_ONOFF@estado:
   176                           	callstack 0
   177   000504                     ESCRIBE_MENSAJE@cadena:
   178                           	callstack 0
   179                           
   180                           ; 1 bytes @ 0x3
   181   000504                     	ds	1
   182   000505                     ??_lcd_init:
   183   000505                     POS_CURSOR@fila:
   184                           	callstack 0
   185   000505                     ESCRIBE_MENSAJE@tam:
   186                           	callstack 0
   187                           
   188                           ; 1 bytes @ 0x4
   189   000505                     	ds	1
   190   000506                     ??_ESCRIBE_MENSAJE:
   191                           
   192                           ; 1 bytes @ 0x5
   193   000506                     	ds	1
   194   000507                     ESCRIBE_MENSAJE@i:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0x6
   198   000507                     	ds	1
   199   000508                     
   200                           ; 1 bytes @ 0x7
   201 ;;
   202 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   203 ;;
   204 ;; *************** function _main *****************
   205 ;; Defined at:
   206 ;;		line 35 in file "maincode02.c"
   207 ;; Parameters:    Size  Location     Type
   208 ;;		None
   209 ;; Auto vars:     Size  Location     Type
   210 ;;		None
   211 ;; Return value:  Size  Location     Type
   212 ;;                  1    wreg      void 
   213 ;; Registers used:
   214 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   215 ;; Tracked objects:
   216 ;;		On entry : 0/0
   217 ;;		On exit  : 0/0
   218 ;;		Unchanged: 0/0
   219 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   224 ;;Total ram usage:        0 bytes
   225 ;; Hardware stack levels required when called: 4
   226 ;; This function calls:
   227 ;;		_ESCRIBE_MENSAJE
   228 ;;		_POS_CURSOR
   229 ;;		_configuro
   230 ;;		_lcd_init
   231 ;; This function is called by:
   232 ;;		Startup code after reset
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           	psect	text0
   237   0025A4                     __ptext0:
   238                           	callstack 0
   239   0025A4                     _main:
   240                           	callstack 123
   241   0025A4                     
   242                           ;maincode02.c: 36:     configuro();
   243   0025A4  ECE8  F013         	call	_configuro	;wreg free
   244   0025A8                     
   245                           ;maincode02.c: 37:     lcd_init();
   246   0025A8  EC34  F013         	call	_lcd_init	;wreg free
   247   0025AC                     
   248                           ;maincode02.c: 38:     POS_CURSOR(1,0);
   249   0025AC  0E00               	movlw	0
   250   0025AE  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   251   0025B0  0E01               	movlw	1
   252   0025B2  EC57  F013         	call	_POS_CURSOR
   253   0025B6                     
   254                           ;maincode02.c: 39:     ESCRIBE_MENSAJE("Ejercicio #2",12);
   255   0025B6  0E23               	movlw	low STR_1
   256   0025B8  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   257   0025BA  0E0C               	movlw	12
   258   0025BC  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   259   0025BE  EC8E  F013         	call	_ESCRIBE_MENSAJE	;wreg free
   260   0025C2                     l1036:
   261                           
   262                           ;maincode02.c: 41:         if(PORTBbits.RB4 == 0){
   263   0025C2  B8CF               	btfsc	207,4,c	;volatile
   264   0025C4  EFE6  F012         	goto	u161
   265   0025C8  EFE8  F012         	goto	u160
   266   0025CC                     u161:
   267   0025CC  EFF5  F012         	goto	l1042
   268   0025D0                     u160:
   269   0025D0                     
   270                           ;maincode02.c: 43:             POS_CURSOR(2,0);
   271   0025D0  0E00               	movlw	0
   272   0025D2  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   273   0025D4  0E02               	movlw	2
   274   0025D6  EC57  F013         	call	_POS_CURSOR
   275   0025DA                     
   276                           ;maincode02.c: 44:             ESCRIBE_MENSAJE("Boton presionado",16);
   277   0025DA  0E01               	movlw	low STR_2
   278   0025DC  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   279   0025DE  0E10               	movlw	16
   280   0025E0  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   281   0025E2  EC8E  F013         	call	_ESCRIBE_MENSAJE	;wreg free
   282                           
   283                           ;maincode02.c: 45:         }
   284   0025E6  EFE1  F012         	goto	l1036
   285   0025EA                     l1042:
   286                           
   287                           ;maincode02.c: 48:             POS_CURSOR(2,0);
   288   0025EA  0E00               	movlw	0
   289   0025EC  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   290   0025EE  0E02               	movlw	2
   291   0025F0  EC57  F013         	call	_POS_CURSOR
   292   0025F4                     
   293                           ;maincode02.c: 49:             ESCRIBE_MENSAJE("Boton sin pulsar",16);
   294   0025F4  0E12               	movlw	low STR_3
   295   0025F6  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   296   0025F8  0E10               	movlw	16
   297   0025FA  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   298   0025FC  EC8E  F013         	call	_ESCRIBE_MENSAJE	;wreg free
   299   002600  EFE1  F012         	goto	l1036
   300   002604  EFFE  F0FF         	goto	start
   301   002608                     __end_of_main:
   302                           	callstack 0
   303                           
   304 ;; *************** function _lcd_init *****************
   305 ;; Defined at:
   306 ;;		line 24 in file "maincode02.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2, status,0, cstack
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   324 ;;Total ram usage:        2 bytes
   325 ;; Hardware stack levels used: 1
   326 ;; Hardware stack levels required when called: 3
   327 ;; This function calls:
   328 ;;		_BORRAR_LCD
   329 ;;		_CURSOR_HOME
   330 ;;		_CURSOR_ONOFF
   331 ;;		_LCD_CONFIG
   332 ;; This function is called by:
   333 ;;		_main
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           	psect	text1
   338   002668                     __ptext1:
   339                           	callstack 0
   340   002668                     _lcd_init:
   341                           	callstack 123
   342   002668                     
   343                           ;maincode02.c: 25:     TRISD = 0x00;
   344   002668  0E00               	movlw	0
   345   00266A  6EC9               	movwf	201,c	;volatile
   346                           
   347                           ;maincode02.c: 26:     ANSELD = 0x00;
   348   00266C  0E00               	movlw	0
   349   00266E  0104               	movlb	4	; () banked
   350   002670  6F18               	movwf	24,b	;volatile
   351   002672                     
   352                           ; BSR set to: 4
   353                           ;maincode02.c: 27:     LCD_CONFIG();
   354   002672  EC04  F013         	call	_LCD_CONFIG	;wreg free
   355   002676                     
   356                           ;maincode02.c: 28:     _delay((unsigned long)((23)*(32000000UL/4000.0)));
   357   002676  0EEF               	movlw	239
   358   002678  6E05               	movwf	??_lcd_init^(0+1280),c
   359   00267A  0EF5               	movlw	245
   360   00267C                     u177:
   361   00267C  2EE8               	decfsz	wreg,f,c
   362   00267E  D7FE               	bra	u177
   363   002680  2E05               	decfsz	??_lcd_init^(0+1280),f,c
   364   002682  D7FC               	bra	u177
   365   002684  0000               	nop	
   366   002686                     
   367                           ;maincode02.c: 29:     BORRAR_LCD();
   368   002686  ECFF  F013         	call	_BORRAR_LCD	;wreg free
   369   00268A                     
   370                           ;maincode02.c: 30:     CURSOR_HOME();
   371   00268A  ECFB  F013         	call	_CURSOR_HOME	;wreg free
   372   00268E                     
   373                           ;maincode02.c: 31:     CURSOR_ONOFF(1);
   374   00268E  0E01               	movlw	1
   375   002690  ECC2  F013         	call	_CURSOR_ONOFF
   376   002694                     
   377                           ;maincode02.c: 32:     _delay((unsigned long)((50)*(32000000UL/4000.0)));
   378   002694  0E03               	movlw	3
   379   002696  6E06               	movwf	(??_lcd_init+1)^(0+1280),c
   380   002698  0E08               	movlw	8
   381   00269A  6E05               	movwf	??_lcd_init^(0+1280),c
   382   00269C  0E77               	movlw	119
   383   00269E                     u187:
   384   00269E  2EE8               	decfsz	wreg,f,c
   385   0026A0  D7FE               	bra	u187
   386   0026A2  2E05               	decfsz	??_lcd_init^(0+1280),f,c
   387   0026A4  D7FC               	bra	u187
   388   0026A6  2E06               	decfsz	(??_lcd_init+1)^(0+1280),f,c
   389   0026A8  D7FA               	bra	u187
   390   0026AA  0000               	nop	
   391   0026AC  0012               	return		;funcret
   392   0026AE                     __end_of_lcd_init:
   393                           	callstack 0
   394                           
   395 ;; *************** function _LCD_CONFIG *****************
   396 ;; Defined at:
   397 ;;		line 72 in file "LCD.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;		None
   400 ;; Auto vars:     Size  Location     Type
   401 ;;		None
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, status,2, status,0, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   415 ;;Total ram usage:        1 bytes
   416 ;; Hardware stack levels used: 1
   417 ;; Hardware stack levels required when called: 2
   418 ;; This function calls:
   419 ;;		_ENVIA_LCD_CMD
   420 ;;		_ENVIA_NIBBLE
   421 ;; This function is called by:
   422 ;;		_lcd_init
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           	psect	text2
   427   002608                     __ptext2:
   428                           	callstack 0
   429   002608                     _LCD_CONFIG:
   430                           	callstack 123
   431   002608                     
   432                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   433   002608  90C1               	bcf	193,0,c	;volatile
   434                           
   435                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   436   00260A  92C1               	bcf	193,1,c	;volatile
   437   00260C                     
   438                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   439   00260C  0E30               	movlw	48
   440   00260E  ECDA  F013         	call	_ENVIA_NIBBLE
   441   002612                     
   442                           ;LCD.c: 77:         _delay(24000);
   443   002612  0E20               	movlw	32
   444   002614  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   445   002616  0E2A               	movlw	42
   446   002618                     u197:
   447   002618  2EE8               	decfsz	wreg,f,c
   448   00261A  D7FE               	bra	u197
   449   00261C  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   450   00261E  D7FC               	bra	u197
   451   002620                     
   452                           ;LCD.c: 78:         _delay(24000);
   453   002620  0E20               	movlw	32
   454   002622  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   455   002624  0E2A               	movlw	42
   456   002626                     u207:
   457   002626  2EE8               	decfsz	wreg,f,c
   458   002628  D7FE               	bra	u207
   459   00262A  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   460   00262C  D7FC               	bra	u207
   461                           
   462                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   463   00262E  0E30               	movlw	48
   464   002630  ECDA  F013         	call	_ENVIA_NIBBLE
   465   002634                     
   466                           ;LCD.c: 83:  _delay(1200);
   467   002634  0EF0               	movlw	240
   468   002636                     u217:
   469   002636  D000               	nop2	
   470   002638  2EE8               	decfsz	wreg,f,c
   471   00263A  D7FD               	bra	u217
   472   00263C                     
   473                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   474   00263C  0E30               	movlw	48
   475   00263E  ECDA  F013         	call	_ENVIA_NIBBLE
   476   002642                     
   477                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   478   002642  0E20               	movlw	32
   479   002644  ECDA  F013         	call	_ENVIA_NIBBLE
   480   002648                     
   481                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   482   002648  0E01               	movlw	1
   483   00264A  EC74  F013         	call	_ENVIA_LCD_CMD
   484   00264E                     
   485                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   486   00264E  0E28               	movlw	40
   487   002650  EC74  F013         	call	_ENVIA_LCD_CMD
   488   002654                     
   489                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   490   002654  0E0F               	movlw	15
   491   002656  EC74  F013         	call	_ENVIA_LCD_CMD
   492   00265A                     
   493                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   494   00265A  0E06               	movlw	6
   495   00265C  EC74  F013         	call	_ENVIA_LCD_CMD
   496   002660                     
   497                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   498   002660  0E01               	movlw	1
   499   002662  EC74  F013         	call	_ENVIA_LCD_CMD
   500   002666  0012               	return		;funcret
   501   002668                     __end_of_LCD_CONFIG:
   502                           	callstack 0
   503                           
   504 ;; *************** function _CURSOR_ONOFF *****************
   505 ;; Defined at:
   506 ;;		line 35 in file "LCD.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;  estado          1    wreg     unsigned char 
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  estado          1    3[COMRAM] unsigned char 
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   524 ;;Total ram usage:        1 bytes
   525 ;; Hardware stack levels used: 1
   526 ;; Hardware stack levels required when called: 2
   527 ;; This function calls:
   528 ;;		_ENVIA_LCD_CMD
   529 ;; This function is called by:
   530 ;;		_lcd_init
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text3
   535   002784                     __ptext3:
   536                           	callstack 0
   537   002784                     _CURSOR_ONOFF:
   538                           	callstack 123
   539                           
   540                           ;incstack = 0
   541                           ;CURSOR_ONOFF@estado stored from wreg
   542   002784  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   543   002786                     
   544                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   545   002786  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   546   002788  A4D8               	btfss	status,2,c
   547   00278A  EFC9  F013         	goto	u21
   548   00278E  EFCB  F013         	goto	u20
   549   002792                     u21:
   550   002792  EFCE  F013         	goto	l872
   551   002796                     u20:
   552   002796  0E0E               	movlw	14
   553   002798  EC74  F013         	call	_ENVIA_LCD_CMD
   554   00279C                     l872:
   555                           
   556                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   557   00279C  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   558   00279E  A4D8               	btfss	status,2,c
   559   0027A0  EFD4  F013         	goto	u31
   560   0027A4  EFD6  F013         	goto	u30
   561   0027A8                     u31:
   562   0027A8  EFD9  F013         	goto	l42
   563   0027AC                     u30:
   564   0027AC  0E0C               	movlw	12
   565   0027AE  EC74  F013         	call	_ENVIA_LCD_CMD
   566   0027B2                     l42:
   567   0027B2  0012               	return		;funcret
   568   0027B4                     __end_of_CURSOR_ONOFF:
   569                           	callstack 0
   570                           
   571 ;; *************** function _CURSOR_HOME *****************
   572 ;; Defined at:
   573 ;;		line 30 in file "LCD.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, status,2, status,0, cstack
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   591 ;;Total ram usage:        0 bytes
   592 ;; Hardware stack levels used: 1
   593 ;; Hardware stack levels required when called: 2
   594 ;; This function calls:
   595 ;;		_ENVIA_LCD_CMD
   596 ;; This function is called by:
   597 ;;		_lcd_init
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text4
   602   0027F6                     __ptext4:
   603                           	callstack 0
   604   0027F6                     _CURSOR_HOME:
   605                           	callstack 123
   606   0027F6                     
   607                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   608   0027F6  0E02               	movlw	2
   609   0027F8  EC74  F013         	call	_ENVIA_LCD_CMD
   610   0027FC  0012               	return		;funcret
   611   0027FE                     __end_of_CURSOR_HOME:
   612                           	callstack 0
   613                           
   614 ;; *************** function _BORRAR_LCD *****************
   615 ;; Defined at:
   616 ;;		line 67 in file "LCD.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   634 ;;Total ram usage:        0 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; Hardware stack levels required when called: 2
   637 ;; This function calls:
   638 ;;		_ENVIA_LCD_CMD
   639 ;; This function is called by:
   640 ;;		_lcd_init
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text5
   645   0027FE                     __ptext5:
   646                           	callstack 0
   647   0027FE                     _BORRAR_LCD:
   648                           	callstack 123
   649   0027FE                     
   650                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   651   0027FE  0E01               	movlw	1
   652   002800  EC74  F013         	call	_ENVIA_LCD_CMD
   653   002804  0012               	return		;funcret
   654   002806                     __end_of_BORRAR_LCD:
   655                           	callstack 0
   656                           
   657 ;; *************** function _configuro *****************
   658 ;; Defined at:
   659 ;;		line 13 in file "maincode02.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;		None
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, status,2
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   677 ;;Total ram usage:        0 bytes
   678 ;; Hardware stack levels used: 1
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text6
   687   0027D0                     __ptext6:
   688                           	callstack 0
   689   0027D0                     _configuro:
   690                           	callstack 126
   691   0027D0                     
   692                           ;maincode02.c: 15:     OSCCON1 = 0x60;
   693   0027D0  0E60               	movlw	96
   694   0027D2  0100               	movlb	0	; () banked
   695   0027D4  6FAD               	movwf	173,b	;volatile
   696                           
   697                           ;maincode02.c: 16:     OSCFRQ = 0x06;
   698   0027D6  0E06               	movlw	6
   699   0027D8  6FB1               	movwf	177,b	;volatile
   700                           
   701                           ;maincode02.c: 17:     OSCEN = 0x40;
   702   0027DA  0E40               	movlw	64
   703   0027DC  6FB3               	movwf	179,b	;volatile
   704   0027DE                     
   705                           ; BSR set to: 0
   706                           ;maincode02.c: 19:     TRISBbits.TRISB4 = 1;
   707   0027DE  88C7               	bsf	199,4,c	;volatile
   708   0027E0                     
   709                           ; BSR set to: 0
   710                           ;maincode02.c: 20:     ANSELBbits.ANSELB4 = 0;
   711   0027E0  0104               	movlb	4	; () banked
   712   0027E2  9908               	bcf	8,4,b	;volatile
   713   0027E4                     
   714                           ; BSR set to: 4
   715                           ;maincode02.c: 21:     WPUBbits.WPUB4 = 1;
   716   0027E4  8909               	bsf	9,4,b	;volatile
   717   0027E6                     
   718                           ; BSR set to: 4
   719   0027E6  0012               	return		;funcret
   720   0027E8                     __end_of_configuro:
   721                           	callstack 0
   722                           
   723 ;; *************** function _POS_CURSOR *****************
   724 ;; Defined at:
   725 ;;		line 6 in file "LCD.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;  fila            1    wreg     unsigned char 
   728 ;;  columna         1    3[COMRAM] unsigned char 
   729 ;; Auto vars:     Size  Location     Type
   730 ;;  fila            1    4[COMRAM] unsigned char 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, status,2, status,0, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   740 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   744 ;;Total ram usage:        2 bytes
   745 ;; Hardware stack levels used: 1
   746 ;; Hardware stack levels required when called: 2
   747 ;; This function calls:
   748 ;;		_ENVIA_LCD_CMD
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text7
   755   0026AE                     __ptext7:
   756                           	callstack 0
   757   0026AE                     _POS_CURSOR:
   758                           	callstack 124
   759                           
   760                           ; BSR set to: 4
   761                           ;incstack = 0
   762                           ;POS_CURSOR@fila stored from wreg
   763   0026AE  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
   764   0026B0                     
   765                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   766   0026B0  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
   767   0026B2  A4D8               	btfss	status,2,c
   768   0026B4  EF5E  F013         	goto	u131
   769   0026B8  EF60  F013         	goto	u130
   770   0026BC                     u131:
   771   0026BC  EF66  F013         	goto	l1016
   772   0026C0                     u130:
   773   0026C0                     
   774                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   775   0026C0  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   776   0026C2  0F80               	addlw	128
   777   0026C4  EC74  F013         	call	_ENVIA_LCD_CMD
   778                           
   779                           ;LCD.c: 11:  }
   780   0026C8  EF73  F013         	goto	l24
   781   0026CC                     l1016:
   782   0026CC  0E02               	movlw	2
   783   0026CE  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   784   0026D0  A4D8               	btfss	status,2,c
   785   0026D2  EF6D  F013         	goto	u141
   786   0026D6  EF6F  F013         	goto	u140
   787   0026DA                     u141:
   788   0026DA  EF73  F013         	goto	l24
   789   0026DE                     u140:
   790   0026DE                     
   791                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   792   0026DE  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   793   0026E0  0FC0               	addlw	192
   794   0026E2  EC74  F013         	call	_ENVIA_LCD_CMD
   795   0026E6                     l24:
   796   0026E6  0012               	return		;funcret
   797   0026E8                     __end_of_POS_CURSOR:
   798                           	callstack 0
   799                           
   800 ;; *************** function _ENVIA_LCD_CMD *****************
   801 ;; Defined at:
   802 ;;		line 104 in file "LCD.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;  dato            1    wreg     unsigned char 
   805 ;; Auto vars:     Size  Location     Type
   806 ;;  dato            1    1[COMRAM] unsigned char 
   807 ;;  aux             1    2[COMRAM] unsigned char 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   818 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   820 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   821 ;;Total ram usage:        2 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; Hardware stack levels required when called: 1
   824 ;; This function calls:
   825 ;;		_ENVIA_NIBBLE
   826 ;;		_LEER_LCD
   827 ;; This function is called by:
   828 ;;		_POS_CURSOR
   829 ;;		_CURSOR_HOME
   830 ;;		_CURSOR_ONOFF
   831 ;;		_BORRAR_LCD
   832 ;;		_LCD_CONFIG
   833 ;;		_BLINK_CURSOR
   834 ;;		_DISPLAY_ONOFF
   835 ;;		_GENERACARACTER
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text8
   840   0026E8                     __ptext8:
   841                           	callstack 0
   842   0026E8                     _ENVIA_LCD_CMD:
   843                           	callstack 123
   844                           
   845                           ;incstack = 0
   846                           ;ENVIA_LCD_CMD@dato stored from wreg
   847   0026E8  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
   848   0026EA                     
   849                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
   850   0026EA  90C1               	bcf	193,0,c	;volatile
   851   0026EC                     
   852                           ;LCD.c: 108:  LEER_LCD();
   853   0026EC  EC99  F012         	call	_LEER_LCD	;wreg free
   854   0026F0                     
   855                           ;LCD.c: 109:  TRISD = 0b00000000;
   856   0026F0  0E00               	movlw	0
   857   0026F2  6EC9               	movwf	201,c	;volatile
   858   0026F4                     
   859                           ;LCD.c: 111:         _delay(1200);
   860   0026F4  0EF0               	movlw	240
   861   0026F6                     u227:
   862   0026F6  D000               	nop2	
   863   0026F8  2EE8               	decfsz	wreg,f,c
   864   0026FA  D7FD               	bra	u227
   865   0026FC                     
   866                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
   867   0026FC  92C1               	bcf	193,1,c	;volatile
   868   0026FE                     
   869                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
   870   0026FE  94C1               	bcf	193,2,c	;volatile
   871   002700                     
   872                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
   873   002700  90C1               	bcf	193,0,c	;volatile
   874   002702                     
   875                           ;LCD.c: 115:  aux = dato & 0xF0;
   876   002702  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   877   002704  0BF0               	andlw	240
   878   002706  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   879   002708                     
   880                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
   881   002708  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   882   00270A  ECDA  F013         	call	_ENVIA_NIBBLE
   883   00270E                     
   884                           ;LCD.c: 117:  aux = dato<<4;
   885   00270E  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   886   002710  0BF0               	andlw	240
   887   002712  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   888   002714                     
   889                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
   890   002714  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   891   002716  ECDA  F013         	call	_ENVIA_NIBBLE
   892   00271A  0012               	return		;funcret
   893   00271C                     __end_of_ENVIA_LCD_CMD:
   894                           	callstack 0
   895                           
   896 ;; *************** function _ESCRIBE_MENSAJE *****************
   897 ;; Defined at:
   898 ;;		line 41 in file "LCD.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
   901 ;;		 -> STR_3(17), STR_2(17), STR_1(13), 
   902 ;;  tam             1    4[COMRAM] unsigned char 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  i               1    6[COMRAM] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   917 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   918 ;;Total ram usage:        4 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; Hardware stack levels required when called: 2
   921 ;; This function calls:
   922 ;;		_ENVIA_CHAR
   923 ;; This function is called by:
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text9
   929   00271C                     __ptext9:
   930                           	callstack 0
   931   00271C                     _ESCRIBE_MENSAJE:
   932                           	callstack 124
   933   00271C                     
   934                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
   935   00271C  0E00               	movlw	0
   936   00271E  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
   937                           
   938                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
   939   002720  0E00               	movlw	0
   940   002722  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
   941   002724  EF9E  F013         	goto	l1026
   942   002728                     l1022:
   943                           
   944                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
   945   002728  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
   946   00272A  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
   947   00272C  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
   948   00272E  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   949   002732                     	if	0	;There is only one active tblptr byte
   950   002732                     	endif
   951   002732                     	if	0	;tblptru may be non-zero
   952   002732                     	endif
   953   002732                     	if	0	;tblptru may be non-zero
   954   002732                     	endif
   955   002732  0008               	tblrd		*
   956   002734  50F5               	movf	tablat,w,c
   957   002736  ECA8  F013         	call	_ENVIA_CHAR
   958   00273A                     
   959                           ;LCD.c: 47:  }
   960   00273A  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
   961   00273C                     l1026:
   962   00273C  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
   963   00273E  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
   964   002740  A0D8               	btfss	status,0,c
   965   002742  EFA5  F013         	goto	u151
   966   002746  EFA7  F013         	goto	u150
   967   00274A                     u151:
   968   00274A  EF94  F013         	goto	l1022
   969   00274E                     u150:
   970   00274E  0012               	return		;funcret
   971   002750                     __end_of_ESCRIBE_MENSAJE:
   972                           	callstack 0
   973                           
   974 ;; *************** function _ENVIA_CHAR *****************
   975 ;; Defined at:
   976 ;;		line 50 in file "LCD.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  dato            1    wreg     unsigned char 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  dato            1    1[COMRAM] unsigned char 
   981 ;;  aux             1    2[COMRAM] unsigned char 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		wreg, status,2, status,0, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   995 ;;Total ram usage:        2 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; Hardware stack levels required when called: 1
   998 ;; This function calls:
   999 ;;		_ENVIA_NIBBLE
  1000 ;;		_LEER_LCD
  1001 ;; This function is called by:
  1002 ;;		_ESCRIBE_MENSAJE
  1003 ;;		_GENERACARACTER
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           	psect	text10
  1008   002750                     __ptext10:
  1009                           	callstack 0
  1010   002750                     _ENVIA_CHAR:
  1011                           	callstack 124
  1012                           
  1013                           ;incstack = 0
  1014                           ;ENVIA_CHAR@dato stored from wreg
  1015   002750  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1016   002752                     
  1017                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1018   002752  80C1               	bsf	193,0,c	;volatile
  1019   002754                     
  1020                           ;LCD.c: 54:  LEER_LCD();
  1021   002754  EC99  F012         	call	_LEER_LCD	;wreg free
  1022   002758                     
  1023                           ;LCD.c: 55:  TRISD = 0x00;
  1024   002758  0E00               	movlw	0
  1025   00275A  6EC9               	movwf	201,c	;volatile
  1026   00275C                     
  1027                           ;LCD.c: 56:         _delay(1200);
  1028   00275C  0EF0               	movlw	240
  1029   00275E                     u237:
  1030   00275E  D000               	nop2	
  1031   002760  2EE8               	decfsz	wreg,f,c
  1032   002762  D7FD               	bra	u237
  1033   002764                     
  1034                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1035   002764  92C1               	bcf	193,1,c	;volatile
  1036   002766                     
  1037                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1038   002766  94C1               	bcf	193,2,c	;volatile
  1039   002768                     
  1040                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1041   002768  80C1               	bsf	193,0,c	;volatile
  1042   00276A                     
  1043                           ;LCD.c: 61:  aux = dato & 0xF0;
  1044   00276A  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1045   00276C  0BF0               	andlw	240
  1046   00276E  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1047   002770                     
  1048                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1049   002770  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1050   002772  ECDA  F013         	call	_ENVIA_NIBBLE
  1051   002776                     
  1052                           ;LCD.c: 63:  aux = dato << 4;
  1053   002776  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1054   002778  0BF0               	andlw	240
  1055   00277A  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1056   00277C                     
  1057                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1058   00277C  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1059   00277E  ECDA  F013         	call	_ENVIA_NIBBLE
  1060   002782  0012               	return		;funcret
  1061   002784                     __end_of_ENVIA_CHAR:
  1062                           	callstack 0
  1063                           
  1064 ;; *************** function _LEER_LCD *****************
  1065 ;; Defined at:
  1066 ;;		line 121 in file "LCD.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  aux             1    0[COMRAM] unsigned char 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, status,2, status,0
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1083 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1084 ;;Total ram usage:        1 bytes
  1085 ;; Hardware stack levels used: 1
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_ENVIA_CHAR
  1090 ;;		_ENVIA_LCD_CMD
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text11
  1095   002532                     __ptext11:
  1096                           	callstack 0
  1097   002532                     _LEER_LCD:
  1098                           	callstack 123
  1099   002532                     
  1100                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1101   002532  0EF8               	movlw	248
  1102   002534  6EC9               	movwf	201,c	;volatile
  1103   002536                     
  1104                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1105   002536  90C1               	bcf	193,0,c	;volatile
  1106   002538                     
  1107                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1108   002538  82C1               	bsf	193,1,c	;volatile
  1109   00253A                     
  1110                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1111   00253A  84C1               	bsf	193,2,c	;volatile
  1112   00253C                     
  1113                           ;LCD.c: 128:         _delay(1200);
  1114   00253C  0EF0               	movlw	240
  1115   00253E                     u247:
  1116   00253E  D000               	nop2	
  1117   002540  2EE8               	decfsz	wreg,f,c
  1118   002542  D7FD               	bra	u247
  1119   002544                     
  1120                           ;LCD.c: 130:  aux = PORTD;
  1121   002544  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1122   002548                     
  1123                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1124   002548  94C1               	bcf	193,2,c	;volatile
  1125   00254A                     
  1126                           ;LCD.c: 132:         _delay(1200);
  1127   00254A  0EF0               	movlw	240
  1128   00254C                     u257:
  1129   00254C  D000               	nop2	
  1130   00254E  2EE8               	decfsz	wreg,f,c
  1131   002550  D7FD               	bra	u257
  1132   002552                     
  1133                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1134   002552  84C1               	bsf	193,2,c	;volatile
  1135   002554                     
  1136                           ;LCD.c: 135:         _delay(1200);
  1137   002554  0EF0               	movlw	240
  1138   002556                     u267:
  1139   002556  D000               	nop2	
  1140   002558  2EE8               	decfsz	wreg,f,c
  1141   00255A  D7FD               	bra	u267
  1142   00255C                     
  1143                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1144   00255C  94C1               	bcf	193,2,c	;volatile
  1145   00255E                     l820:
  1146                           
  1147                           ;LCD.c: 138:  aux = aux & 0x80;
  1148   00255E  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1149   002560  0B80               	andlw	128
  1150   002562  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1151                           
  1152                           ;LCD.c: 139:  while(aux == 0x80)
  1153   002564  EFC8  F012         	goto	l834
  1154   002568                     l67:
  1155                           
  1156                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1157   002568  84C1               	bsf	193,2,c	;volatile
  1158   00256A                     
  1159                           ;LCD.c: 142:             _delay(1200);
  1160   00256A  0EF0               	movlw	240
  1161   00256C                     u277:
  1162   00256C  D000               	nop2	
  1163   00256E  2EE8               	decfsz	wreg,f,c
  1164   002570  D7FD               	bra	u277
  1165   002572                     
  1166                           ;LCD.c: 143:             aux = PORTD;
  1167   002572  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1168   002576                     
  1169                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1170   002576  94C1               	bcf	193,2,c	;volatile
  1171                           
  1172                           ;LCD.c: 145:             _delay(1200);
  1173   002578  0EF0               	movlw	240
  1174   00257A                     u287:
  1175   00257A  D000               	nop2	
  1176   00257C  2EE8               	decfsz	wreg,f,c
  1177   00257E  D7FD               	bra	u287
  1178   002580                     
  1179                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1180   002580  84C1               	bsf	193,2,c	;volatile
  1181                           
  1182                           ;LCD.c: 147:             _delay(1200);
  1183   002582  0EF0               	movlw	240
  1184   002584                     u297:
  1185   002584  D000               	nop2	
  1186   002586  2EE8               	decfsz	wreg,f,c
  1187   002588  D7FD               	bra	u297
  1188   00258A                     
  1189                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1190   00258A  94C1               	bcf	193,2,c	;volatile
  1191   00258C  EFAF  F012         	goto	l820
  1192   002590                     l834:
  1193                           
  1194                           ;LCD.c: 139:  while(aux == 0x80)
  1195   002590  0E80               	movlw	128
  1196   002592  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1197   002594  B4D8               	btfsc	status,2,c
  1198   002596  EFCF  F012         	goto	u11
  1199   00259A  EFD1  F012         	goto	u10
  1200   00259E                     u11:
  1201   00259E  EFB4  F012         	goto	l67
  1202   0025A2                     u10:
  1203   0025A2  0012               	return		;funcret
  1204   0025A4                     __end_of_LEER_LCD:
  1205                           	callstack 0
  1206                           
  1207 ;; *************** function _ENVIA_NIBBLE *****************
  1208 ;; Defined at:
  1209 ;;		line 93 in file "LCD.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;  dato            1    wreg     unsigned char 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  dato            1    0[COMRAM] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1224 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1226 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1227 ;;Total ram usage:        1 bytes
  1228 ;; Hardware stack levels used: 1
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_ENVIA_CHAR
  1233 ;;		_LCD_CONFIG
  1234 ;;		_ENVIA_LCD_CMD
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text12
  1239   0027B4                     __ptext12:
  1240                           	callstack 0
  1241   0027B4                     _ENVIA_NIBBLE:
  1242                           	callstack 124
  1243                           
  1244                           ;incstack = 0
  1245                           ;ENVIA_NIBBLE@dato stored from wreg
  1246   0027B4  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1247   0027B6                     
  1248                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1249   0027B6  0E0F               	movlw	15
  1250   0027B8  16C1               	andwf	193,f,c	;volatile
  1251                           
  1252                           ;LCD.c: 96:  dato &= 0xF0;
  1253   0027BA  0EF0               	movlw	240
  1254   0027BC  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1255                           
  1256                           ;LCD.c: 97:  LATD|= dato;
  1257   0027BE  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1258   0027C0  12C1               	iorwf	193,f,c	;volatile
  1259   0027C2                     
  1260                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1261   0027C2  84C1               	bsf	193,2,c	;volatile
  1262   0027C4                     
  1263                           ;LCD.c: 100:         _delay(1200);
  1264   0027C4  0EF0               	movlw	240
  1265   0027C6                     u307:
  1266   0027C6  D000               	nop2	
  1267   0027C8  2EE8               	decfsz	wreg,f,c
  1268   0027CA  D7FD               	bra	u307
  1269   0027CC                     
  1270                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1271   0027CC  94C1               	bcf	193,2,c	;volatile
  1272   0027CE  0012               	return		;funcret
  1273   0027D0                     __end_of_ENVIA_NIBBLE:
  1274                           	callstack 0
  1275                           
  1276                           	psect	rparam
  1277   000000                     
  1278                           	psect	config
  1279                           
  1280                           ;Config register CONFIG1 @ 0x300000
  1281                           ;	External Oscillator Selection
  1282                           ;	FEXTOSC = OFF, Oscillator not enabled
  1283                           ;	Reset Oscillator Selection
  1284                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1285   300000                     	org	3145728
  1286   300000  FC                 	db	252
  1287                           
  1288                           ;Config register CONFIG2 @ 0x300001
  1289                           ;	Clock out Enable bit
  1290                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1291                           ;	PRLOCKED One-Way Set Enable bit
  1292                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1293                           ;	Clock Switch Enable bit
  1294                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1295                           ;	Fail-Safe Clock Monitor Enable bit
  1296                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1297   300001                     	org	3145729
  1298   300001  FF                 	db	255
  1299                           
  1300                           ;Config register CONFIG3 @ 0x300002
  1301                           ;	MCLR Enable bit
  1302                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1303                           ;	Power-up timer selection bits
  1304                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  1305                           ;	Multi-vector enable bit
  1306                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1307                           ;	IVTLOCK bit One-way set enable bit
  1308                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1309                           ;	Low Power BOR Enable bit
  1310                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1311                           ;	Brown-out Reset Enable bits
  1312                           ;	BOREN = OFF, Brown-out Reset disabled
  1313   300002                     	org	3145730
  1314   300002  3D                 	db	61
  1315                           
  1316                           ;Config register CONFIG4 @ 0x300003
  1317                           ;	Brown-out Reset Voltage Selection bits
  1318                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1319                           ;	ZCD Disable bit
  1320                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1321                           ;	PPSLOCK bit One-Way Set Enable bit
  1322                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1323                           ;	Stack Full/Underflow Reset Enable bit
  1324                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1325                           ;	Low Voltage Programming Enable bit
  1326                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1327                           ;	Extended Instruction Set Enable bit
  1328                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1329   300003                     	org	3145731
  1330   300003  DF                 	db	223
  1331                           
  1332                           ;Config register CONFIG5 @ 0x300004
  1333                           ;	WDT Period selection bits
  1334                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1335                           ;	WDT operating mode
  1336                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1337   300004                     	org	3145732
  1338   300004  9F                 	db	159
  1339                           
  1340                           ;Config register CONFIG6 @ 0x300005
  1341                           ;	WDT Window Select bits
  1342                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1343                           ;	WDT input clock selector
  1344                           ;	WDTCCS = SC, Software Control
  1345   300005                     	org	3145733
  1346   300005  FF                 	db	255
  1347                           
  1348                           ;Config register CONFIG7 @ 0x300006
  1349                           ;	Boot Block Size selection bits
  1350                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1351                           ;	Boot Block enable bit
  1352                           ;	BBEN = OFF, Boot block disabled
  1353                           ;	Storage Area Flash enable bit
  1354                           ;	SAFEN = OFF, SAF disabled
  1355                           ;	Background Debugger
  1356                           ;	DEBUG = OFF, Background Debugger disabled
  1357   300006                     	org	3145734
  1358   300006  FF                 	db	255
  1359                           
  1360                           ;Config register CONFIG8 @ 0x300007
  1361                           ;	Boot Block Write Protection bit
  1362                           ;	WRTB = OFF, Boot Block not Write protected
  1363                           ;	Configuration Register Write Protection bit
  1364                           ;	WRTC = OFF, Configuration registers not Write protected
  1365                           ;	Data EEPROM Write Protection bit
  1366                           ;	WRTD = OFF, Data EEPROM not Write protected
  1367                           ;	SAF Write protection bit
  1368                           ;	WRTSAF = OFF, SAF not Write Protected
  1369                           ;	Application Block write protection bit
  1370                           ;	WRTAPP = OFF, Application Block not write protected
  1371   300007                     	org	3145735
  1372   300007  FF                 	db	255
  1373                           
  1374                           ;Config register CONFIG10 @ 0x300009
  1375                           ;	PFM and Data EEPROM Code Protection bit
  1376                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1377   300009                     	org	3145737
  1378   300009  FF                 	db	255
  1379                           tosu	equ	0x4FF
  1380                           tosh	equ	0x4FE
  1381                           tosl	equ	0x4FD
  1382                           stkptr	equ	0x4FC
  1383                           pclatu	equ	0x4FB
  1384                           pclath	equ	0x4FA
  1385                           pcl	equ	0x4F9
  1386                           tblptru	equ	0x4F8
  1387                           tblptrh	equ	0x4F7
  1388                           tblptrl	equ	0x4F6
  1389                           tablat	equ	0x4F5
  1390                           prodh	equ	0x4F4
  1391                           prodl	equ	0x4F3
  1392                           indf0	equ	0x4EF
  1393                           postinc0	equ	0x4EE
  1394                           postdec0	equ	0x4ED
  1395                           preinc0	equ	0x4EC
  1396                           plusw0	equ	0x4EB
  1397                           fsr0h	equ	0x4EA
  1398                           fsr0l	equ	0x4E9
  1399                           wreg	equ	0x4E8
  1400                           indf1	equ	0x4E7
  1401                           postinc1	equ	0x4E6
  1402                           postdec1	equ	0x4E5
  1403                           preinc1	equ	0x4E4
  1404                           plusw1	equ	0x4E3
  1405                           fsr1h	equ	0x4E2
  1406                           fsr1l	equ	0x4E1
  1407                           bsr	equ	0x4E0
  1408                           indf2	equ	0x4DF
  1409                           postinc2	equ	0x4DE
  1410                           postdec2	equ	0x4DD
  1411                           preinc2	equ	0x4DC
  1412                           plusw2	equ	0x4DB
  1413                           fsr2h	equ	0x4DA
  1414                           fsr2l	equ	0x4D9
  1415                           status	equ	0x4D8

Data Sizes:
    Strings     47
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[13]), STR_2(CODE[17]), STR_3(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1628
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     525
                                              4 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     436
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     667
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
ABS                  0      0       0      58        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BIGRAM            1FFF      0       0      70        0.0%
BITBIGSFRhhh        2E      0       0      71        0.0%
BITBIGSFRhhlh        1      0       0      72        0.0%
BITBIGSFRhhll        5      0       0      73        0.0%
BITBIGSFRhlh         1      0       0      74        0.0%
BITBIGSFRhll         5      0       0      75        0.0%
BITBIGSFRlhhhhh     A8      0       0      76        0.0%
BITBIGSFRlhhhhl      E      0       0      77        0.0%
BITBIGSFRlhhhl     354      0       0      78        0.0%
BITBIGSFRlhhl        1      0       0      79        0.0%
BITBIGSFRlhl         3      0       0      80        0.0%
BITBIGSFRll         AD      0       0      81        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Oct 17 19:36:09 2024

                     l24 26E6                       l42 27B2                       l51 2782  
                     l60 27CE                       l37 27FC                       l54 2804  
                     l63 271A                       l48 274E                       l57 2666  
                     l67 2568                       l69 25A2                       u10 25A2  
                     u11 259E                       u20 2796                       u21 2792  
                     u30 27AC                       u31 27A8            ENVIA_CHAR@aux 0503  
                    l112 26AC                      l109 27E6                      l800 2536  
                    l810 2548                      l802 2538                      l820 255E  
                    l812 254A                      l804 253A                      l900 2608  
                    l830 258A                      l822 256A                      l814 2552  
                    l806 253C                      l910 263C                      l902 260C  
                    l840 27C4                      l824 2572                      l816 2554  
                    l808 2544                      l920 265A                      l912 2642  
                    l904 2612                      l842 27CC                      l826 2576  
                    l834 2590                      l818 255C                      l850 26F4  
                    l922 2660                      l914 2648                      l906 2620  
                    l836 27B6                      l828 2580                      l860 2708  
                    l852 26FC                      l844 26EA                      l940 27D0  
                    l916 264E                      l908 2634                      l838 27C2  
                    l862 270E                      l854 26FE                      l846 26EC  
                    l942 27DE                      l870 2796                      l918 2654  
                    l950 2672                      l880 2758                      l864 2714  
                    l856 2700                      l848 26F0                      l944 27E0  
                    l872 279C                      l960 2694                      l952 2676  
                    l890 276A                      l882 275C                      l858 2702  
                    l946 27E4                      l866 27F6                      l874 27AC  
                    l954 2686                      l892 2770                      l884 2764  
                    l876 2752                      l868 2786                      l956 268A  
                    l948 2668                      l798 2532                      l894 2776  
                    l886 2766                      l878 2754                      l958 268E  
                    l896 277C                      l888 2768                      l898 27FE  
                    u130 26C0                      u131 26BC                      u140 26DE  
                    u141 26DA                      u150 274E                      u151 274A  
                    u207 2626                      u160 25D0                      u217 2636  
                    u161 25CC                      u307 27C6                      u227 26F6  
                    u237 275E                      u247 253E                      u257 254C  
                    u177 267C                      u267 2556                      u187 269E  
                    u277 256C                      u197 2618                      u287 257A  
                    u297 2584              LEER_LCD@aux 0501                      wreg 04E8  
           ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 0501           ENVIA_CHAR@dato 0502  
                   l1020 271C                     l1012 26B0                     l1022 2728  
                   l1014 26C0                     l1030 25A8                     l1024 273A  
                   l1016 26CC                     l1040 25DA                     l1032 25AC  
                   l1026 273C                     l1018 26DE                     l1042 25EA  
                   l1034 25B6                     l1044 25F4                     l1036 25C2  
                   l1028 25A4                     l1038 25D0                     STR_1 2523  
                   STR_2 2501                     STR_3 2512                     _LATD 04C1  
                   _main 25A4                     start FFFC            ?_CURSOR_ONOFF 0501  
           ___param_bank 0000          ??_ENVIA_LCD_CMD 0502         __end_of_LEER_LCD 25A4  
                  ?_main 0501                    _OSCEN 00B3                    _PORTD 04D1  
                  _TRISD 04C9              ?_POS_CURSOR 0504                    tablat 04F5  
                  status 04D8           ??_CURSOR_ONOFF 0504          __initialization 27E8  
           __end_of_main 2608          _ESCRIBE_MENSAJE 271C                   ??_main 0508  
          __activetblptr 0001                   _ANSELD 0418                   _OSCFRQ 00B1  
       __end_of_lcd_init 26AE     __end_of_ENVIA_NIBBLE 27D0                   isa$std 0001  
           __mediumconst 0000                   tblptrh 04F7                   tblptrl 04F6  
                 tblptru 04F8             ??_BORRAR_LCD 0504                ?_LEER_LCD 0501  
             __accesstop 0560  __end_of__initialization 27E8             ??_LCD_CONFIG 0504  
          ___rparam_used 0001             ??_ENVIA_CHAR 0502  __end_of_ESCRIBE_MENSAJE 2750  
         __pcstackCOMRAM 0501       __end_of_BORRAR_LCD 2806         ENVIA_LCD_CMD@aux 0503  
   __end_of_CURSOR_ONOFF 27B4       __end_of_LCD_CONFIG 2668       __end_of_ENVIA_CHAR 2784  
             ??_LEER_LCD 0501         ENVIA_NIBBLE@dato 0501                  _OSCCON1 00AD  
           ??_POS_CURSOR 0505                ?_lcd_init 0501                  __Hparam 0000  
                __Lparam 0000         ?_ESCRIBE_MENSAJE 0504        __end_of_configuro 27E8  
           __psmallconst 2500    __end_of_ENVIA_LCD_CMD 271C                  __pcinit 27E8  
     __end_of_POS_CURSOR 26E8                  __ramtop 2500                  __ptext0 25A4  
                __ptext1 2668                  __ptext2 2608                  __ptext3 2784  
                __ptext4 27F6                  __ptext5 27FE                  __ptext6 27D0  
                __ptext7 26AE                  __ptext8 26E8                  __ptext9 271C  
             ??_lcd_init 0505             _ENVIA_NIBBLE 27B4     end_of_initialization 27E8  
              _PORTBbits 04CF                _TRISBbits 04C7             _CURSOR_ONOFF 2784  
     CURSOR_ONOFF@estado 0504            ??_CURSOR_HOME 0504      start_initialization 27E8  
      ENVIA_LCD_CMD@dato 0502      __end_of_CURSOR_HOME 27FE                _configuro 27D0  
            __smallconst 2500                 _LEER_LCD 2532                 _LATDbits 04C1  
       ESCRIBE_MENSAJE@i 0507           POS_CURSOR@fila 0505               ?_configuro 0501  
               _WPUBbits 0409              _CURSOR_HOME 27F6                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 2500               _ANSELBbits 0408  
               __ptext10 2750                 __ptext11 2532                 __ptext12 27B4  
             _BORRAR_LCD 27FE                 _lcd_init 2668               _LCD_CONFIG 2608  
             _ENVIA_CHAR 2750                 isa$xinst 0000            _ENVIA_LCD_CMD 26E8  
            ??_configuro 0501        ??_ESCRIBE_MENSAJE 0506    ESCRIBE_MENSAJE@cadena 0504  
         ?_ENVIA_LCD_CMD 0501              ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501  
             _POS_CURSOR 26AE              ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 0505  
            ?_ENVIA_CHAR 0501        POS_CURSOR@columna 0504  
