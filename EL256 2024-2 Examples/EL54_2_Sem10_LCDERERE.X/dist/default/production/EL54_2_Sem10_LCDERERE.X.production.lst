

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Oct 17 20:40:29 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Generated 18/12/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F57Q43 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   000000                     _LATD	set	1217
    65   000000                     _OSCCON1	set	173
    66   000000                     _LATDbits	set	1217
    67   000000                     _TRISAbits	set	1222
    68   000000                     _TRISD	set	1225
    69   000000                     _PORTD	set	1233
    70   000000                     _OSCFRQ	set	177
    71   000000                     _OSCEN	set	179
    72   000000                     _ADRESL	set	1002
    73   000000                     _ADRESH	set	1003
    74   000000                     _ADPCH	set	1004
    75   000000                     _ADCON0bits	set	1011
    76   000000                     _ANSELAbits	set	1024
    77   000000                     _ANSELD	set	1048
    78                           
    79                           	psect	smallconst
    80   002500                     __psmallconst:
    81                           	callstack 0
    82   002500  00                 	db	0
    83   002501                     STR_1:
    84   002501  45                 	db	69	;'E'
    85   002502  6A                 	db	106	;'j'
    86   002503  65                 	db	101	;'e'
    87   002504  6D                 	db	109	;'m'
    88   002505  70                 	db	112	;'p'
    89   002506  6C                 	db	108	;'l'
    90   002507  6F                 	db	111	;'o'
    91   002508  20                 	db	32
    92   002509  23                 	db	35
    93   00250A  33                 	db	51	;'3'
    94   00250B  00                 	db	0
    95   00250C                     STR_2:
    96   00250C  52                 	db	82	;'R'
    97   00250D  41                 	db	65	;'A'
    98   00250E  30                 	db	48	;'0'
    99   00250F  3A                 	db	58	;':'
   100   002510  20                 	db	32
   101   002511  00                 	db	0
   102   002512  00                 	db	0	; dummy byte at the end
   103   000000                     
   104                           ; #config settings
   105                           
   106                           	psect	cinit
   107   00296A                     __pcinit:
   108                           	callstack 0
   109   00296A                     start_initialization:
   110                           	callstack 0
   111   00296A                     __initialization:
   112                           	callstack 0
   113                           
   114                           ; Clear objects allocated to COMRAM (4 bytes)
   115   00296A  6A12               	clrf	(__pbssCOMRAM+3)& (0+255),c
   116   00296C  6A11               	clrf	(__pbssCOMRAM+2)& (0+255),c
   117   00296E  6A10               	clrf	(__pbssCOMRAM+1)& (0+255),c
   118   002970  6A0F               	clrf	__pbssCOMRAM& (0+255),c
   119   002972                     end_of_initialization:
   120                           	callstack 0
   121   002972                     __end_of__initialization:
   122                           	callstack 0
   123   002972  0E00               	movlw	low (__Lsmallconst shr (0+16))
   124   002974  6EF8               	movwf	tblptru,c
   125   002976  0E25               	movlw	high __Lsmallconst
   126   002978  6EF7               	movwf	tblptrh,c
   127   00297A  0100               	movlb	0
   128   00297C  EF42  F013         	goto	_main	;jump to C main() function
   129                           
   130                           	psect	bssCOMRAM
   131   00050F                     __pbssCOMRAM:
   132                           	callstack 0
   133   00050F                     _unidad:
   134                           	callstack 0
   135   00050F                     	ds	1
   136   000510                     _decena:
   137                           	callstack 0
   138   000510                     	ds	1
   139   000511                     _centena:
   140                           	callstack 0
   141   000511                     	ds	1
   142   000512                     _millar:
   143                           	callstack 0
   144   000512                     	ds	1
   145                           
   146                           	psect	cstackCOMRAM
   147   000501                     __pcstackCOMRAM:
   148                           	callstack 0
   149   000501                     ?_tomamuestra_ADC:
   150                           	callstack 0
   151   000501                     ?___lwmod:
   152                           	callstack 0
   153   000501                     ENVIA_NIBBLE@dato:
   154                           	callstack 0
   155   000501                     LEER_LCD@aux:
   156                           	callstack 0
   157   000501                     ___lwmod@dividend:
   158                           	callstack 0
   159                           
   160                           ; 2 bytes @ 0x0
   161   000501                     	ds	1
   162   000502                     ENVIA_CHAR@dato:
   163                           	callstack 0
   164   000502                     ENVIA_LCD_CMD@dato:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x1
   168   000502                     	ds	1
   169   000503                     ??_tomamuestra_ADC:
   170   000503                     ENVIA_CHAR@aux:
   171                           	callstack 0
   172   000503                     ENVIA_LCD_CMD@aux:
   173                           	callstack 0
   174   000503                     ___lwmod@divisor:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0x2
   178   000503                     	ds	1
   179   000504                     ??_LCD_CONFIG:
   180   000504                     POS_CURSOR@columna:
   181                           	callstack 0
   182   000504                     CURSOR_ONOFF@estado:
   183                           	callstack 0
   184   000504                     ESCRIBE_MENSAJE@cadena:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0x3
   188   000504                     	ds	1
   189   000505                     ??_lcd_init:
   190   000505                     POS_CURSOR@fila:
   191                           	callstack 0
   192   000505                     ESCRIBE_MENSAJE@tam:
   193                           	callstack 0
   194   000505                     ___lwmod@counter:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0x4
   198   000505                     	ds	1
   199   000506                     ??_ESCRIBE_MENSAJE:
   200   000506                     ?___lwdiv:
   201                           	callstack 0
   202   000506                     ___lwdiv@dividend:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x5
   206   000506                     	ds	1
   207   000507                     ESCRIBE_MENSAJE@i:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0x6
   211   000507                     	ds	1
   212   000508                     ___lwdiv@divisor:
   213                           	callstack 0
   214                           
   215                           ; 2 bytes @ 0x7
   216   000508                     	ds	2
   217   00050A                     ___lwdiv@quotient:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x9
   221   00050A                     	ds	2
   222   00050C                     ___lwdiv@counter:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0xB
   226   00050C                     	ds	1
   227   00050D                     conviertemon@dato:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0xC
   231   00050D                     	ds	2
   232   00050F                     
   233                           ; 1 bytes @ 0xE
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   236 ;;
   237 ;; *************** function _main *****************
   238 ;; Defined at:
   239 ;;		line 53 in file "maincode03.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;		None
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      void 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   248 ;; Tracked objects:
   249 ;;		On entry : 0/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   257 ;;Total ram usage:        0 bytes
   258 ;; Hardware stack levels required when called: 4
   259 ;; This function calls:
   260 ;;		_ENVIA_CHAR
   261 ;;		_ESCRIBE_MENSAJE
   262 ;;		_POS_CURSOR
   263 ;;		_configuro
   264 ;;		_conviertemon
   265 ;;		_lcd_init
   266 ;;		_tomamuestra_ADC
   267 ;; This function is called by:
   268 ;;		Startup code after reset
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           	psect	text0
   273   002684                     __ptext0:
   274                           	callstack 0
   275   002684                     _main:
   276                           	callstack 123
   277   002684                     
   278                           ;maincode03.c: 54:     configuro();
   279   002684  EC95  F014         	call	_configuro	;wreg free
   280   002688                     
   281                           ;maincode03.c: 55:     lcd_init();
   282   002688  ECDA  F013         	call	_lcd_init	;wreg free
   283   00268C                     
   284                           ;maincode03.c: 56:     POS_CURSOR(1,0);
   285   00268C  0E00               	movlw	0
   286   00268E  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   287   002690  0E01               	movlw	1
   288   002692  ECFD  F013         	call	_POS_CURSOR
   289   002696                     
   290                           ;maincode03.c: 57:     ESCRIBE_MENSAJE("Ejemplo #3",10);
   291   002696  0E01               	movlw	low STR_1
   292   002698  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   293   00269A  0E0A               	movlw	10
   294   00269C  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   295   00269E  EC34  F014         	call	_ESCRIBE_MENSAJE	;wreg free
   296   0026A2                     l1159:
   297                           
   298                           ;maincode03.c: 59:         conviertemon(tomamuestra_ADC());
   299   0026A2  EC80  F014         	call	_tomamuestra_ADC	;wreg free
   300   0026A6  C501  F50D         	movff	?_tomamuestra_ADC,conviertemon@dato
   301   0026AA  C502  F50E         	movff	?_tomamuestra_ADC+1,conviertemon@dato+1
   302   0026AE  EC8A  F012         	call	_conviertemon	;wreg free
   303   0026B2                     
   304                           ;maincode03.c: 60:         POS_CURSOR(2,0);
   305   0026B2  0E00               	movlw	0
   306   0026B4  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   307   0026B6  0E02               	movlw	2
   308   0026B8  ECFD  F013         	call	_POS_CURSOR
   309   0026BC                     
   310                           ;maincode03.c: 61:         ESCRIBE_MENSAJE("RA0: ",5);
   311   0026BC  0E0C               	movlw	low STR_2
   312   0026BE  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   313   0026C0  0E05               	movlw	5
   314   0026C2  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   315   0026C4  EC34  F014         	call	_ESCRIBE_MENSAJE	;wreg free
   316   0026C8                     
   317                           ;maincode03.c: 62:         ENVIA_CHAR(millar+0x30);
   318   0026C8  5012               	movf	_millar^(0+1280),w,c
   319   0026CA  0F30               	addlw	48
   320   0026CC  EC4E  F014         	call	_ENVIA_CHAR
   321   0026D0                     
   322                           ;maincode03.c: 63:         ENVIA_CHAR(centena+0x30);
   323   0026D0  5011               	movf	_centena^(0+1280),w,c
   324   0026D2  0F30               	addlw	48
   325   0026D4  EC4E  F014         	call	_ENVIA_CHAR
   326   0026D8                     
   327                           ;maincode03.c: 64:         ENVIA_CHAR(decena+0x30);
   328   0026D8  5010               	movf	_decena^(0+1280),w,c
   329   0026DA  0F30               	addlw	48
   330   0026DC  EC4E  F014         	call	_ENVIA_CHAR
   331   0026E0                     
   332                           ;maincode03.c: 65:         ENVIA_CHAR(unidad+0x30);
   333   0026E0  500F               	movf	_unidad^(0+1280),w,c
   334   0026E2  0F30               	addlw	48
   335   0026E4  EC4E  F014         	call	_ENVIA_CHAR
   336   0026E8  EF51  F013         	goto	l1159
   337   0026EC  EFFE  F0FF         	goto	start
   338   0026F0                     __end_of_main:
   339                           	callstack 0
   340                           
   341 ;; *************** function _tomamuestra_ADC *****************
   342 ;; Defined at:
   343 ;;		line 28 in file "maincode03.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;                  2    0[COMRAM] unsigned int 
   350 ;; Registers used:
   351 ;;		wreg, status,2, status,0
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   360 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   361 ;;Total ram usage:        4 bytes
   362 ;; Hardware stack levels used: 1
   363 ;; This function calls:
   364 ;;		Nothing
   365 ;; This function is called by:
   366 ;;		_main
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           	psect	text1
   371   002900                     __ptext1:
   372                           	callstack 0
   373   002900                     _tomamuestra_ADC:
   374                           	callstack 126
   375   002900                     
   376                           ;maincode03.c: 29:     ADPCH = 0;
   377   002900  0E00               	movlw	0
   378   002902  0103               	movlb	3	; () banked
   379   002904  6FEC               	movwf	236,b	;volatile
   380   002906                     
   381                           ; BSR set to: 3
   382                           ;maincode03.c: 30:     ADCON0bits.GO = 1;
   383   002906  81F3               	bsf	243,0,b	;volatile
   384   002908                     l126:
   385                           
   386                           ; BSR set to: 3
   387   002908  B1F3               	btfsc	243,0,b	;volatile
   388   00290A  EF89  F014         	goto	u281
   389   00290E  EF8B  F014         	goto	u280
   390   002912                     u281:
   391   002912  EF84  F014         	goto	l126
   392   002916                     u280:
   393   002916                     
   394                           ; BSR set to: 3
   395                           ;maincode03.c: 32:     return ((ADRESH << 8) + ADRESL);
   396   002916  51EB               	movf	235,w,b	;volatile
   397   002918  6E04               	movwf	(??_tomamuestra_ADC+1)^(0+1280),c
   398   00291A  6A03               	clrf	??_tomamuestra_ADC^(0+1280),c
   399   00291C  51EA               	movf	234,w,b	;volatile
   400   00291E  2403               	addwf	??_tomamuestra_ADC^(0+1280),w,c
   401   002920  6E01               	movwf	?_tomamuestra_ADC^(0+1280),c
   402   002922  0E00               	movlw	0
   403   002924  2004               	addwfc	(??_tomamuestra_ADC+1)^(0+1280),w,c
   404   002926  6E02               	movwf	(?_tomamuestra_ADC+1)^(0+1280),c
   405   002928                     
   406                           ; BSR set to: 3
   407   002928  0012               	return		;funcret
   408   00292A                     __end_of_tomamuestra_ADC:
   409                           	callstack 0
   410                           
   411 ;; *************** function _lcd_init *****************
   412 ;; Defined at:
   413 ;;		line 42 in file "maincode03.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2, status,0, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   429 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   430 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   431 ;;Total ram usage:        2 bytes
   432 ;; Hardware stack levels used: 1
   433 ;; Hardware stack levels required when called: 3
   434 ;; This function calls:
   435 ;;		_BORRAR_LCD
   436 ;;		_CURSOR_HOME
   437 ;;		_CURSOR_ONOFF
   438 ;;		_LCD_CONFIG
   439 ;; This function is called by:
   440 ;;		_main
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text2
   445   0027B4                     __ptext2:
   446                           	callstack 0
   447   0027B4                     _lcd_init:
   448                           	callstack 123
   449   0027B4                     
   450                           ;maincode03.c: 43:     TRISD = 0x00;
   451   0027B4  0E00               	movlw	0
   452   0027B6  6EC9               	movwf	201,c	;volatile
   453                           
   454                           ;maincode03.c: 44:     ANSELD = 0x00;
   455   0027B8  0E00               	movlw	0
   456   0027BA  0104               	movlb	4	; () banked
   457   0027BC  6F18               	movwf	24,b	;volatile
   458   0027BE                     
   459                           ; BSR set to: 4
   460                           ;maincode03.c: 45:     LCD_CONFIG();
   461   0027BE  ECAA  F013         	call	_LCD_CONFIG	;wreg free
   462   0027C2                     
   463                           ;maincode03.c: 46:     _delay((unsigned long)((23)*(32000000UL/4000.0)));
   464   0027C2  0EEF               	movlw	239
   465   0027C4  6E05               	movwf	??_lcd_init^(0+1280),c
   466   0027C6  0EF5               	movlw	245
   467   0027C8                     u297:
   468   0027C8  2EE8               	decfsz	wreg,f,c
   469   0027CA  D7FE               	bra	u297
   470   0027CC  2E05               	decfsz	??_lcd_init^(0+1280),f,c
   471   0027CE  D7FC               	bra	u297
   472   0027D0  0000               	nop	
   473   0027D2                     
   474                           ;maincode03.c: 47:     BORRAR_LCD();
   475   0027D2  ECC4  F014         	call	_BORRAR_LCD	;wreg free
   476   0027D6                     
   477                           ;maincode03.c: 48:     CURSOR_HOME();
   478   0027D6  ECC0  F014         	call	_CURSOR_HOME	;wreg free
   479   0027DA                     
   480                           ;maincode03.c: 49:     CURSOR_ONOFF(1);
   481   0027DA  0E01               	movlw	1
   482   0027DC  EC68  F014         	call	_CURSOR_ONOFF
   483   0027E0                     
   484                           ;maincode03.c: 50:     _delay((unsigned long)((50)*(32000000UL/4000.0)));
   485   0027E0  0E03               	movlw	3
   486   0027E2  6E06               	movwf	(??_lcd_init+1)^(0+1280),c
   487   0027E4  0E08               	movlw	8
   488   0027E6  6E05               	movwf	??_lcd_init^(0+1280),c
   489   0027E8  0E77               	movlw	119
   490   0027EA                     u307:
   491   0027EA  2EE8               	decfsz	wreg,f,c
   492   0027EC  D7FE               	bra	u307
   493   0027EE  2E05               	decfsz	??_lcd_init^(0+1280),f,c
   494   0027F0  D7FC               	bra	u307
   495   0027F2  2E06               	decfsz	(??_lcd_init+1)^(0+1280),f,c
   496   0027F4  D7FA               	bra	u307
   497   0027F6  0000               	nop	
   498   0027F8  0012               	return		;funcret
   499   0027FA                     __end_of_lcd_init:
   500                           	callstack 0
   501                           
   502 ;; *************** function _LCD_CONFIG *****************
   503 ;; Defined at:
   504 ;;		line 72 in file "LCD.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   520 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   521 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   522 ;;Total ram usage:        1 bytes
   523 ;; Hardware stack levels used: 1
   524 ;; Hardware stack levels required when called: 2
   525 ;; This function calls:
   526 ;;		_ENVIA_LCD_CMD
   527 ;;		_ENVIA_NIBBLE
   528 ;; This function is called by:
   529 ;;		_lcd_init
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text3
   534   002754                     __ptext3:
   535                           	callstack 0
   536   002754                     _LCD_CONFIG:
   537                           	callstack 123
   538   002754                     
   539                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   540   002754  90C1               	bcf	193,0,c	;volatile
   541                           
   542                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   543   002756  92C1               	bcf	193,1,c	;volatile
   544   002758                     
   545                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   546   002758  0E30               	movlw	48
   547   00275A  ECA7  F014         	call	_ENVIA_NIBBLE
   548   00275E                     
   549                           ;LCD.c: 77:         _delay(24000);
   550   00275E  0E20               	movlw	32
   551   002760  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   552   002762  0E2A               	movlw	42
   553   002764                     u317:
   554   002764  2EE8               	decfsz	wreg,f,c
   555   002766  D7FE               	bra	u317
   556   002768  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   557   00276A  D7FC               	bra	u317
   558   00276C                     
   559                           ;LCD.c: 78:         _delay(24000);
   560   00276C  0E20               	movlw	32
   561   00276E  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   562   002770  0E2A               	movlw	42
   563   002772                     u327:
   564   002772  2EE8               	decfsz	wreg,f,c
   565   002774  D7FE               	bra	u327
   566   002776  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   567   002778  D7FC               	bra	u327
   568                           
   569                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   570   00277A  0E30               	movlw	48
   571   00277C  ECA7  F014         	call	_ENVIA_NIBBLE
   572   002780                     
   573                           ;LCD.c: 83:  _delay(1200);
   574   002780  0EF0               	movlw	240
   575   002782                     u337:
   576   002782  D000               	nop2	
   577   002784  2EE8               	decfsz	wreg,f,c
   578   002786  D7FD               	bra	u337
   579   002788                     
   580                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   581   002788  0E30               	movlw	48
   582   00278A  ECA7  F014         	call	_ENVIA_NIBBLE
   583   00278E                     
   584                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   585   00278E  0E20               	movlw	32
   586   002790  ECA7  F014         	call	_ENVIA_NIBBLE
   587   002794                     
   588                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   589   002794  0E01               	movlw	1
   590   002796  EC1A  F014         	call	_ENVIA_LCD_CMD
   591   00279A                     
   592                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   593   00279A  0E28               	movlw	40
   594   00279C  EC1A  F014         	call	_ENVIA_LCD_CMD
   595   0027A0                     
   596                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   597   0027A0  0E0F               	movlw	15
   598   0027A2  EC1A  F014         	call	_ENVIA_LCD_CMD
   599   0027A6                     
   600                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   601   0027A6  0E06               	movlw	6
   602   0027A8  EC1A  F014         	call	_ENVIA_LCD_CMD
   603   0027AC                     
   604                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   605   0027AC  0E01               	movlw	1
   606   0027AE  EC1A  F014         	call	_ENVIA_LCD_CMD
   607   0027B2  0012               	return		;funcret
   608   0027B4                     __end_of_LCD_CONFIG:
   609                           	callstack 0
   610                           
   611 ;; *************** function _CURSOR_ONOFF *****************
   612 ;; Defined at:
   613 ;;		line 35 in file "LCD.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  estado          1    wreg     unsigned char 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  estado          1    3[COMRAM] unsigned char 
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   631 ;;Total ram usage:        1 bytes
   632 ;; Hardware stack levels used: 1
   633 ;; Hardware stack levels required when called: 2
   634 ;; This function calls:
   635 ;;		_ENVIA_LCD_CMD
   636 ;; This function is called by:
   637 ;;		_lcd_init
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	text4
   642   0028D0                     __ptext4:
   643                           	callstack 0
   644   0028D0                     _CURSOR_ONOFF:
   645                           	callstack 123
   646                           
   647                           ;incstack = 0
   648                           ;CURSOR_ONOFF@estado stored from wreg
   649   0028D0  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   650   0028D2                     
   651                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   652   0028D2  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   653   0028D4  A4D8               	btfss	status,2,c
   654   0028D6  EF6F  F014         	goto	u21
   655   0028DA  EF71  F014         	goto	u20
   656   0028DE                     u21:
   657   0028DE  EF74  F014         	goto	l893
   658   0028E2                     u20:
   659   0028E2  0E0E               	movlw	14
   660   0028E4  EC1A  F014         	call	_ENVIA_LCD_CMD
   661   0028E8                     l893:
   662                           
   663                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   664   0028E8  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   665   0028EA  A4D8               	btfss	status,2,c
   666   0028EC  EF7A  F014         	goto	u31
   667   0028F0  EF7C  F014         	goto	u30
   668   0028F4                     u31:
   669   0028F4  EF7F  F014         	goto	l42
   670   0028F8                     u30:
   671   0028F8  0E0C               	movlw	12
   672   0028FA  EC1A  F014         	call	_ENVIA_LCD_CMD
   673   0028FE                     l42:
   674   0028FE  0012               	return		;funcret
   675   002900                     __end_of_CURSOR_ONOFF:
   676                           	callstack 0
   677                           
   678 ;; *************** function _CURSOR_HOME *****************
   679 ;; Defined at:
   680 ;;		line 30 in file "LCD.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   698 ;;Total ram usage:        0 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 2
   701 ;; This function calls:
   702 ;;		_ENVIA_LCD_CMD
   703 ;; This function is called by:
   704 ;;		_lcd_init
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text5
   709   002980                     __ptext5:
   710                           	callstack 0
   711   002980                     _CURSOR_HOME:
   712                           	callstack 123
   713   002980                     
   714                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   715   002980  0E02               	movlw	2
   716   002982  EC1A  F014         	call	_ENVIA_LCD_CMD
   717   002986  0012               	return		;funcret
   718   002988                     __end_of_CURSOR_HOME:
   719                           	callstack 0
   720                           
   721 ;; *************** function _BORRAR_LCD *****************
   722 ;; Defined at:
   723 ;;		line 67 in file "LCD.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   741 ;;Total ram usage:        0 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; Hardware stack levels required when called: 2
   744 ;; This function calls:
   745 ;;		_ENVIA_LCD_CMD
   746 ;; This function is called by:
   747 ;;		_lcd_init
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text6
   752   002988                     __ptext6:
   753                           	callstack 0
   754   002988                     _BORRAR_LCD:
   755                           	callstack 123
   756   002988                     
   757                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   758   002988  0E01               	movlw	1
   759   00298A  EC1A  F014         	call	_ENVIA_LCD_CMD
   760   00298E  0012               	return		;funcret
   761   002990                     __end_of_BORRAR_LCD:
   762                           	callstack 0
   763                           
   764 ;; *************** function _conviertemon *****************
   765 ;; Defined at:
   766 ;;		line 35 in file "maincode03.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  dato            2   12[COMRAM] unsigned int 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   784 ;;Total ram usage:        2 bytes
   785 ;; Hardware stack levels used: 1
   786 ;; Hardware stack levels required when called: 1
   787 ;; This function calls:
   788 ;;		___lwdiv
   789 ;;		___lwmod
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text7
   796   002514                     __ptext7:
   797                           	callstack 0
   798   002514                     _conviertemon:
   799                           	callstack 125
   800   002514                     
   801                           ;maincode03.c: 36:     millar = dato / 1000;
   802   002514  C50D  F506         	movff	conviertemon@dato,___lwdiv@dividend
   803   002518  C50E  F507         	movff	conviertemon@dato+1,___lwdiv@dividend+1
   804   00251C  0E03               	movlw	3
   805   00251E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   806   002520  0EE8               	movlw	232
   807   002522  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   808   002524  ECCF  F012         	call	___lwdiv	;wreg free
   809   002528  5006               	movf	?___lwdiv^(0+1280),w,c
   810   00252A  6E12               	movwf	_millar^(0+1280),c
   811                           
   812                           ;maincode03.c: 37:     centena = (dato % 1000) / 100;
   813   00252C  0E03               	movlw	3
   814   00252E  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   815   002530  0EE8               	movlw	232
   816   002532  6E03               	movwf	___lwmod@divisor^(0+1280),c
   817   002534  C50D  F501         	movff	conviertemon@dato,___lwmod@dividend
   818   002538  C50E  F502         	movff	conviertemon@dato+1,___lwmod@dividend+1
   819   00253C  EC78  F013         	call	___lwmod	;wreg free
   820   002540  C501  F506         	movff	?___lwmod,___lwdiv@dividend
   821   002544  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
   822   002548  0E00               	movlw	0
   823   00254A  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   824   00254C  0E64               	movlw	100
   825   00254E  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   826   002550  ECCF  F012         	call	___lwdiv	;wreg free
   827   002554  5006               	movf	?___lwdiv^(0+1280),w,c
   828   002556  6E11               	movwf	_centena^(0+1280),c
   829                           
   830                           ;maincode03.c: 38:     decena = (dato % 100) / 10;
   831   002558  0E00               	movlw	0
   832   00255A  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   833   00255C  0E64               	movlw	100
   834   00255E  6E03               	movwf	___lwmod@divisor^(0+1280),c
   835   002560  C50D  F501         	movff	conviertemon@dato,___lwmod@dividend
   836   002564  C50E  F502         	movff	conviertemon@dato+1,___lwmod@dividend+1
   837   002568  EC78  F013         	call	___lwmod	;wreg free
   838   00256C  C501  F506         	movff	?___lwmod,___lwdiv@dividend
   839   002570  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
   840   002574  0E00               	movlw	0
   841   002576  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   842   002578  0E0A               	movlw	10
   843   00257A  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   844   00257C  ECCF  F012         	call	___lwdiv	;wreg free
   845   002580  5006               	movf	?___lwdiv^(0+1280),w,c
   846   002582  6E10               	movwf	_decena^(0+1280),c
   847                           
   848                           ;maincode03.c: 39:     unidad = dato % 10;
   849   002584  C50D  F501         	movff	conviertemon@dato,___lwmod@dividend
   850   002588  C50E  F502         	movff	conviertemon@dato+1,___lwmod@dividend+1
   851   00258C  0E00               	movlw	0
   852   00258E  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   853   002590  0E0A               	movlw	10
   854   002592  6E03               	movwf	___lwmod@divisor^(0+1280),c
   855   002594  EC78  F013         	call	___lwmod	;wreg free
   856   002598  5001               	movf	?___lwmod^(0+1280),w,c
   857   00259A  6E0F               	movwf	_unidad^(0+1280),c
   858   00259C  0012               	return		;funcret
   859   00259E                     __end_of_conviertemon:
   860                           	callstack 0
   861                           
   862 ;; *************** function ___lwmod *****************
   863 ;; Defined at:
   864 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  dividend        2    0[COMRAM] unsigned int 
   867 ;;  divisor         2    2[COMRAM] unsigned int 
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  counter         1    4[COMRAM] unsigned char 
   870 ;; Return value:  Size  Location     Type
   871 ;;                  2    0[COMRAM] unsigned int 
   872 ;; Registers used:
   873 ;;		wreg, status,2, status,0
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   879 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   882 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   883 ;;Total ram usage:        5 bytes
   884 ;; Hardware stack levels used: 1
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_conviertemon
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text8
   893   0026F0                     __ptext8:
   894                           	callstack 0
   895   0026F0                     ___lwmod:
   896                           	callstack 125
   897   0026F0  5003               	movf	___lwmod@divisor^(0+1280),w,c
   898   0026F2  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
   899   0026F4  B4D8               	btfsc	status,2,c
   900   0026F6  EF7F  F013         	goto	u221
   901   0026FA  EF81  F013         	goto	u220
   902   0026FE                     u221:
   903   0026FE  EFA5  F013         	goto	l647
   904   002702                     u220:
   905   002702  0E01               	movlw	1
   906   002704  6E05               	movwf	___lwmod@counter^(0+1280),c
   907   002706  EF89  F013         	goto	l1115
   908   00270A                     l1113:
   909   00270A  90D8               	bcf	status,0,c
   910   00270C  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
   911   00270E  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
   912   002710  2A05               	incf	___lwmod@counter^(0+1280),f,c
   913   002712                     l1115:
   914   002712  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
   915   002714  EF8E  F013         	goto	u231
   916   002718  EF90  F013         	goto	u230
   917   00271C                     u231:
   918   00271C  EF85  F013         	goto	l1113
   919   002720                     u230:
   920   002720                     l1117:
   921   002720  5003               	movf	___lwmod@divisor^(0+1280),w,c
   922   002722  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
   923   002724  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
   924   002726  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
   925   002728  A0D8               	btfss	status,0,c
   926   00272A  EF99  F013         	goto	u241
   927   00272E  EF9B  F013         	goto	u240
   928   002732                     u241:
   929   002732  EF9F  F013         	goto	l1121
   930   002736                     u240:
   931   002736  5003               	movf	___lwmod@divisor^(0+1280),w,c
   932   002738  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
   933   00273A  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
   934   00273C  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
   935   00273E                     l1121:
   936   00273E  90D8               	bcf	status,0,c
   937   002740  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
   938   002742  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
   939   002744  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
   940   002746  EF90  F013         	goto	l1117
   941   00274A                     l647:
   942   00274A  C501  F501         	movff	___lwmod@dividend,?___lwmod
   943   00274E  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
   944   002752  0012               	return		;funcret
   945   002754                     __end_of___lwmod:
   946                           	callstack 0
   947                           
   948 ;; *************** function ___lwdiv *****************
   949 ;; Defined at:
   950 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  dividend        2    5[COMRAM] unsigned int 
   953 ;;  divisor         2    7[COMRAM] unsigned int 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  quotient        2    9[COMRAM] unsigned int 
   956 ;;  counter         1   11[COMRAM] unsigned char 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  2    5[COMRAM] unsigned int 
   959 ;; Registers used:
   960 ;;		wreg, status,2, status,0
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   967 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   969 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   970 ;;Total ram usage:        7 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_conviertemon
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text9
   980   00259E                     __ptext9:
   981                           	callstack 0
   982   00259E                     ___lwdiv:
   983                           	callstack 125
   984   00259E  0E00               	movlw	0
   985   0025A0  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
   986   0025A2  0E00               	movlw	0
   987   0025A4  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
   988   0025A6  5008               	movf	___lwdiv@divisor^(0+1280),w,c
   989   0025A8  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
   990   0025AA  B4D8               	btfsc	status,2,c
   991   0025AC  EFDA  F012         	goto	u191
   992   0025B0  EFDC  F012         	goto	u190
   993   0025B4                     u191:
   994   0025B4  EF04  F013         	goto	l637
   995   0025B8                     u190:
   996   0025B8  0E01               	movlw	1
   997   0025BA  6E0C               	movwf	___lwdiv@counter^(0+1280),c
   998   0025BC  EFE4  F012         	goto	l1095
   999   0025C0                     l1093:
  1000   0025C0  90D8               	bcf	status,0,c
  1001   0025C2  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  1002   0025C4  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1003   0025C6  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  1004   0025C8                     l1095:
  1005   0025C8  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  1006   0025CA  EFE9  F012         	goto	u201
  1007   0025CE  EFEB  F012         	goto	u200
  1008   0025D2                     u201:
  1009   0025D2  EFE0  F012         	goto	l1093
  1010   0025D6                     u200:
  1011   0025D6                     l1097:
  1012   0025D6  90D8               	bcf	status,0,c
  1013   0025D8  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  1014   0025DA  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  1015   0025DC  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1016   0025DE  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  1017   0025E0  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1018   0025E2  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  1019   0025E4  A0D8               	btfss	status,0,c
  1020   0025E6  EFF7  F012         	goto	u211
  1021   0025EA  EFF9  F012         	goto	u210
  1022   0025EE                     u211:
  1023   0025EE  EFFE  F012         	goto	l1105
  1024   0025F2                     u210:
  1025   0025F2  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1026   0025F4  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  1027   0025F6  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1028   0025F8  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  1029   0025FA  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  1030   0025FC                     l1105:
  1031   0025FC  90D8               	bcf	status,0,c
  1032   0025FE  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1033   002600  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  1034   002602  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  1035   002604  EFEB  F012         	goto	l1097
  1036   002608                     l637:
  1037   002608  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  1038   00260C  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1039   002610  0012               	return		;funcret
  1040   002612                     __end_of___lwdiv:
  1041                           	callstack 0
  1042                           
  1043 ;; *************** function _configuro *****************
  1044 ;; Defined at:
  1045 ;;		line 15 in file "maincode03.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; This function calls:
  1066 ;;		Nothing
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text10
  1073   00292A                     __ptext10:
  1074                           	callstack 0
  1075   00292A                     _configuro:
  1076                           	callstack 126
  1077   00292A                     
  1078                           ;maincode03.c: 17:     OSCCON1 = 0x60;
  1079   00292A  0E60               	movlw	96
  1080   00292C  0100               	movlb	0	; () banked
  1081   00292E  6FAD               	movwf	173,b	;volatile
  1082                           
  1083                           ;maincode03.c: 18:     OSCFRQ = 0x06;
  1084   002930  0E06               	movlw	6
  1085   002932  6FB1               	movwf	177,b	;volatile
  1086                           
  1087                           ;maincode03.c: 19:     OSCEN = 0x40;
  1088   002934  0E40               	movlw	64
  1089   002936  6FB3               	movwf	179,b	;volatile
  1090   002938                     
  1091                           ; BSR set to: 0
  1092                           ;maincode03.c: 21:     TRISAbits.TRISA0 = 1;
  1093   002938  80C6               	bsf	198,0,c	;volatile
  1094   00293A                     
  1095                           ; BSR set to: 0
  1096                           ;maincode03.c: 22:     ANSELAbits.ANSELA0 = 1;
  1097   00293A  0104               	movlb	4	; () banked
  1098   00293C  8100               	bsf	0,0,b	;volatile
  1099                           
  1100                           ;maincode03.c: 23:     ADCON0bits.FM = 1;
  1101   00293E  0103               	movlb	3	; () banked
  1102   002940  51F3               	movf	243,w,b	;volatile
  1103   002942  0BF3               	andlw	-13
  1104   002944  0904               	iorlw	4
  1105   002946  6FF3               	movwf	243,b	;volatile
  1106   002948                     
  1107                           ; BSR set to: 3
  1108                           ;maincode03.c: 24:     ADCON0bits.CS = 1;
  1109   002948  89F3               	bsf	243,4,b	;volatile
  1110   00294A                     
  1111                           ; BSR set to: 3
  1112                           ;maincode03.c: 25:     ADCON0bits.ADON = 1;
  1113   00294A  8FF3               	bsf	243,7,b	;volatile
  1114   00294C                     
  1115                           ; BSR set to: 3
  1116   00294C  0012               	return		;funcret
  1117   00294E                     __end_of_configuro:
  1118                           	callstack 0
  1119                           
  1120 ;; *************** function _POS_CURSOR *****************
  1121 ;; Defined at:
  1122 ;;		line 6 in file "LCD.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  fila            1    wreg     unsigned char 
  1125 ;;  columna         1    3[COMRAM] unsigned char 
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  fila            1    4[COMRAM] unsigned char 
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2, status,0, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1137 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1141 ;;Total ram usage:        2 bytes
  1142 ;; Hardware stack levels used: 1
  1143 ;; Hardware stack levels required when called: 2
  1144 ;; This function calls:
  1145 ;;		_ENVIA_LCD_CMD
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text11
  1152   0027FA                     __ptext11:
  1153                           	callstack 0
  1154   0027FA                     _POS_CURSOR:
  1155                           	callstack 124
  1156                           
  1157                           ; BSR set to: 3
  1158                           ;incstack = 0
  1159                           ;POS_CURSOR@fila stored from wreg
  1160   0027FA  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  1161   0027FC                     
  1162                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1163   0027FC  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  1164   0027FE  A4D8               	btfss	status,2,c
  1165   002800  EF04  F014         	goto	u251
  1166   002804  EF06  F014         	goto	u250
  1167   002808                     u251:
  1168   002808  EF0C  F014         	goto	l1129
  1169   00280C                     u250:
  1170   00280C                     
  1171                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1172   00280C  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1173   00280E  0F80               	addlw	128
  1174   002810  EC1A  F014         	call	_ENVIA_LCD_CMD
  1175                           
  1176                           ;LCD.c: 11:  }
  1177   002814  EF19  F014         	goto	l24
  1178   002818                     l1129:
  1179   002818  0E02               	movlw	2
  1180   00281A  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1181   00281C  A4D8               	btfss	status,2,c
  1182   00281E  EF13  F014         	goto	u261
  1183   002822  EF15  F014         	goto	u260
  1184   002826                     u261:
  1185   002826  EF19  F014         	goto	l24
  1186   00282A                     u260:
  1187   00282A                     
  1188                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1189   00282A  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1190   00282C  0FC0               	addlw	192
  1191   00282E  EC1A  F014         	call	_ENVIA_LCD_CMD
  1192   002832                     l24:
  1193   002832  0012               	return		;funcret
  1194   002834                     __end_of_POS_CURSOR:
  1195                           	callstack 0
  1196                           
  1197 ;; *************** function _ENVIA_LCD_CMD *****************
  1198 ;; Defined at:
  1199 ;;		line 104 in file "LCD.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  dato            1    wreg     unsigned char 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  dato            1    1[COMRAM] unsigned char 
  1204 ;;  aux             1    2[COMRAM] unsigned char 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1217 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1218 ;;Total ram usage:        2 bytes
  1219 ;; Hardware stack levels used: 1
  1220 ;; Hardware stack levels required when called: 1
  1221 ;; This function calls:
  1222 ;;		_ENVIA_NIBBLE
  1223 ;;		_LEER_LCD
  1224 ;; This function is called by:
  1225 ;;		_POS_CURSOR
  1226 ;;		_CURSOR_HOME
  1227 ;;		_CURSOR_ONOFF
  1228 ;;		_BORRAR_LCD
  1229 ;;		_LCD_CONFIG
  1230 ;;		_BLINK_CURSOR
  1231 ;;		_DISPLAY_ONOFF
  1232 ;;		_GENERACARACTER
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text12
  1237   002834                     __ptext12:
  1238                           	callstack 0
  1239   002834                     _ENVIA_LCD_CMD:
  1240                           	callstack 123
  1241                           
  1242                           ;incstack = 0
  1243                           ;ENVIA_LCD_CMD@dato stored from wreg
  1244   002834  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1245   002836                     
  1246                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1247   002836  90C1               	bcf	193,0,c	;volatile
  1248   002838                     
  1249                           ;LCD.c: 108:  LEER_LCD();
  1250   002838  EC09  F013         	call	_LEER_LCD	;wreg free
  1251   00283C                     
  1252                           ;LCD.c: 109:  TRISD = 0b00000000;
  1253   00283C  0E00               	movlw	0
  1254   00283E  6EC9               	movwf	201,c	;volatile
  1255   002840                     
  1256                           ;LCD.c: 111:         _delay(1200);
  1257   002840  0EF0               	movlw	240
  1258   002842                     u347:
  1259   002842  D000               	nop2	
  1260   002844  2EE8               	decfsz	wreg,f,c
  1261   002846  D7FD               	bra	u347
  1262   002848                     
  1263                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1264   002848  92C1               	bcf	193,1,c	;volatile
  1265   00284A                     
  1266                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1267   00284A  94C1               	bcf	193,2,c	;volatile
  1268   00284C                     
  1269                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1270   00284C  90C1               	bcf	193,0,c	;volatile
  1271   00284E                     
  1272                           ;LCD.c: 115:  aux = dato & 0xF0;
  1273   00284E  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1274   002850  0BF0               	andlw	240
  1275   002852  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1276   002854                     
  1277                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1278   002854  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1279   002856  ECA7  F014         	call	_ENVIA_NIBBLE
  1280   00285A                     
  1281                           ;LCD.c: 117:  aux = dato<<4;
  1282   00285A  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1283   00285C  0BF0               	andlw	240
  1284   00285E  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1285   002860                     
  1286                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1287   002860  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1288   002862  ECA7  F014         	call	_ENVIA_NIBBLE
  1289   002866  0012               	return		;funcret
  1290   002868                     __end_of_ENVIA_LCD_CMD:
  1291                           	callstack 0
  1292                           
  1293 ;; *************** function _ESCRIBE_MENSAJE *****************
  1294 ;; Defined at:
  1295 ;;		line 41 in file "LCD.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  1298 ;;		 -> STR_2(6), STR_1(11), 
  1299 ;;  tam             1    4[COMRAM] unsigned char 
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;  i               1    6[COMRAM] unsigned char 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1313 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1314 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1315 ;;Total ram usage:        4 bytes
  1316 ;; Hardware stack levels used: 1
  1317 ;; Hardware stack levels required when called: 2
  1318 ;; This function calls:
  1319 ;;		_ENVIA_CHAR
  1320 ;; This function is called by:
  1321 ;;		_main
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text13
  1326   002868                     __ptext13:
  1327                           	callstack 0
  1328   002868                     _ESCRIBE_MENSAJE:
  1329                           	callstack 124
  1330   002868                     
  1331                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1332   002868  0E00               	movlw	0
  1333   00286A  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  1334                           
  1335                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1336   00286C  0E00               	movlw	0
  1337   00286E  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  1338   002870  EF44  F014         	goto	l1139
  1339   002874                     l1135:
  1340                           
  1341                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1342   002874  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  1343   002876  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  1344   002878  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  1345   00287A  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1346   00287E                     	if	0	;There is only one active tblptr byte
  1347   00287E                     	endif
  1348   00287E                     	if	0	;tblptru may be non-zero
  1349   00287E                     	endif
  1350   00287E                     	if	0	;tblptru may be non-zero
  1351   00287E                     	endif
  1352   00287E  0008               	tblrd		*
  1353   002880  50F5               	movf	tablat,w,c
  1354   002882  EC4E  F014         	call	_ENVIA_CHAR
  1355   002886                     
  1356                           ;LCD.c: 47:  }
  1357   002886  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  1358   002888                     l1139:
  1359   002888  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  1360   00288A  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  1361   00288C  A0D8               	btfss	status,0,c
  1362   00288E  EF4B  F014         	goto	u271
  1363   002892  EF4D  F014         	goto	u270
  1364   002896                     u271:
  1365   002896  EF3A  F014         	goto	l1135
  1366   00289A                     u270:
  1367   00289A  0012               	return		;funcret
  1368   00289C                     __end_of_ESCRIBE_MENSAJE:
  1369                           	callstack 0
  1370                           
  1371 ;; *************** function _ENVIA_CHAR *****************
  1372 ;; Defined at:
  1373 ;;		line 50 in file "LCD.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  dato            1    wreg     unsigned char 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  dato            1    1[COMRAM] unsigned char 
  1378 ;;  aux             1    2[COMRAM] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1391 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1392 ;;Total ram usage:        2 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 1
  1395 ;; This function calls:
  1396 ;;		_ENVIA_NIBBLE
  1397 ;;		_LEER_LCD
  1398 ;; This function is called by:
  1399 ;;		_ESCRIBE_MENSAJE
  1400 ;;		_main
  1401 ;;		_GENERACARACTER
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text14
  1406   00289C                     __ptext14:
  1407                           	callstack 0
  1408   00289C                     _ENVIA_CHAR:
  1409                           	callstack 124
  1410                           
  1411                           ;incstack = 0
  1412                           ;ENVIA_CHAR@dato stored from wreg
  1413   00289C  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1414   00289E                     
  1415                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1416   00289E  80C1               	bsf	193,0,c	;volatile
  1417   0028A0                     
  1418                           ;LCD.c: 54:  LEER_LCD();
  1419   0028A0  EC09  F013         	call	_LEER_LCD	;wreg free
  1420   0028A4                     
  1421                           ;LCD.c: 55:  TRISD = 0x00;
  1422   0028A4  0E00               	movlw	0
  1423   0028A6  6EC9               	movwf	201,c	;volatile
  1424   0028A8                     
  1425                           ;LCD.c: 56:         _delay(1200);
  1426   0028A8  0EF0               	movlw	240
  1427   0028AA                     u357:
  1428   0028AA  D000               	nop2	
  1429   0028AC  2EE8               	decfsz	wreg,f,c
  1430   0028AE  D7FD               	bra	u357
  1431   0028B0                     
  1432                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1433   0028B0  92C1               	bcf	193,1,c	;volatile
  1434   0028B2                     
  1435                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1436   0028B2  94C1               	bcf	193,2,c	;volatile
  1437   0028B4                     
  1438                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1439   0028B4  80C1               	bsf	193,0,c	;volatile
  1440   0028B6                     
  1441                           ;LCD.c: 61:  aux = dato & 0xF0;
  1442   0028B6  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1443   0028B8  0BF0               	andlw	240
  1444   0028BA  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1445   0028BC                     
  1446                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1447   0028BC  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1448   0028BE  ECA7  F014         	call	_ENVIA_NIBBLE
  1449   0028C2                     
  1450                           ;LCD.c: 63:  aux = dato << 4;
  1451   0028C2  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1452   0028C4  0BF0               	andlw	240
  1453   0028C6  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1454   0028C8                     
  1455                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1456   0028C8  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1457   0028CA  ECA7  F014         	call	_ENVIA_NIBBLE
  1458   0028CE  0012               	return		;funcret
  1459   0028D0                     __end_of_ENVIA_CHAR:
  1460                           	callstack 0
  1461                           
  1462 ;; *************** function _LEER_LCD *****************
  1463 ;; Defined at:
  1464 ;;		line 121 in file "LCD.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;		None
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  aux             1    0[COMRAM] unsigned char 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  1    wreg      void 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1482 ;;Total ram usage:        1 bytes
  1483 ;; Hardware stack levels used: 1
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_ENVIA_CHAR
  1488 ;;		_ENVIA_LCD_CMD
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text15
  1493   002612                     __ptext15:
  1494                           	callstack 0
  1495   002612                     _LEER_LCD:
  1496                           	callstack 123
  1497   002612                     
  1498                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1499   002612  0EF8               	movlw	248
  1500   002614  6EC9               	movwf	201,c	;volatile
  1501   002616                     
  1502                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1503   002616  90C1               	bcf	193,0,c	;volatile
  1504   002618                     
  1505                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1506   002618  82C1               	bsf	193,1,c	;volatile
  1507   00261A                     
  1508                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1509   00261A  84C1               	bsf	193,2,c	;volatile
  1510   00261C                     
  1511                           ;LCD.c: 128:         _delay(1200);
  1512   00261C  0EF0               	movlw	240
  1513   00261E                     u367:
  1514   00261E  D000               	nop2	
  1515   002620  2EE8               	decfsz	wreg,f,c
  1516   002622  D7FD               	bra	u367
  1517   002624                     
  1518                           ;LCD.c: 130:  aux = PORTD;
  1519   002624  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1520   002628                     
  1521                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1522   002628  94C1               	bcf	193,2,c	;volatile
  1523   00262A                     
  1524                           ;LCD.c: 132:         _delay(1200);
  1525   00262A  0EF0               	movlw	240
  1526   00262C                     u377:
  1527   00262C  D000               	nop2	
  1528   00262E  2EE8               	decfsz	wreg,f,c
  1529   002630  D7FD               	bra	u377
  1530   002632                     
  1531                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1532   002632  84C1               	bsf	193,2,c	;volatile
  1533   002634                     
  1534                           ;LCD.c: 135:         _delay(1200);
  1535   002634  0EF0               	movlw	240
  1536   002636                     u387:
  1537   002636  D000               	nop2	
  1538   002638  2EE8               	decfsz	wreg,f,c
  1539   00263A  D7FD               	bra	u387
  1540   00263C                     
  1541                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1542   00263C  94C1               	bcf	193,2,c	;volatile
  1543   00263E                     l841:
  1544                           
  1545                           ;LCD.c: 138:  aux = aux & 0x80;
  1546   00263E  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1547   002640  0B80               	andlw	128
  1548   002642  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1549                           
  1550                           ;LCD.c: 139:  while(aux == 0x80)
  1551   002644  EF38  F013         	goto	l855
  1552   002648                     l67:
  1553                           
  1554                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1555   002648  84C1               	bsf	193,2,c	;volatile
  1556   00264A                     
  1557                           ;LCD.c: 142:             _delay(1200);
  1558   00264A  0EF0               	movlw	240
  1559   00264C                     u397:
  1560   00264C  D000               	nop2	
  1561   00264E  2EE8               	decfsz	wreg,f,c
  1562   002650  D7FD               	bra	u397
  1563   002652                     
  1564                           ;LCD.c: 143:             aux = PORTD;
  1565   002652  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1566   002656                     
  1567                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1568   002656  94C1               	bcf	193,2,c	;volatile
  1569                           
  1570                           ;LCD.c: 145:             _delay(1200);
  1571   002658  0EF0               	movlw	240
  1572   00265A                     u407:
  1573   00265A  D000               	nop2	
  1574   00265C  2EE8               	decfsz	wreg,f,c
  1575   00265E  D7FD               	bra	u407
  1576   002660                     
  1577                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1578   002660  84C1               	bsf	193,2,c	;volatile
  1579                           
  1580                           ;LCD.c: 147:             _delay(1200);
  1581   002662  0EF0               	movlw	240
  1582   002664                     u417:
  1583   002664  D000               	nop2	
  1584   002666  2EE8               	decfsz	wreg,f,c
  1585   002668  D7FD               	bra	u417
  1586   00266A                     
  1587                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1588   00266A  94C1               	bcf	193,2,c	;volatile
  1589   00266C  EF1F  F013         	goto	l841
  1590   002670                     l855:
  1591                           
  1592                           ;LCD.c: 139:  while(aux == 0x80)
  1593   002670  0E80               	movlw	128
  1594   002672  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1595   002674  B4D8               	btfsc	status,2,c
  1596   002676  EF3F  F013         	goto	u11
  1597   00267A  EF41  F013         	goto	u10
  1598   00267E                     u11:
  1599   00267E  EF24  F013         	goto	l67
  1600   002682                     u10:
  1601   002682  0012               	return		;funcret
  1602   002684                     __end_of_LEER_LCD:
  1603                           	callstack 0
  1604                           
  1605 ;; *************** function _ENVIA_NIBBLE *****************
  1606 ;; Defined at:
  1607 ;;		line 93 in file "LCD.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  dato            1    wreg     unsigned char 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  dato            1    0[COMRAM] unsigned char 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1625 ;;Total ram usage:        1 bytes
  1626 ;; Hardware stack levels used: 1
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_ENVIA_CHAR
  1631 ;;		_LCD_CONFIG
  1632 ;;		_ENVIA_LCD_CMD
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text16
  1637   00294E                     __ptext16:
  1638                           	callstack 0
  1639   00294E                     _ENVIA_NIBBLE:
  1640                           	callstack 124
  1641                           
  1642                           ;incstack = 0
  1643                           ;ENVIA_NIBBLE@dato stored from wreg
  1644   00294E  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1645   002950                     
  1646                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1647   002950  0E0F               	movlw	15
  1648   002952  16C1               	andwf	193,f,c	;volatile
  1649                           
  1650                           ;LCD.c: 96:  dato &= 0xF0;
  1651   002954  0EF0               	movlw	240
  1652   002956  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1653                           
  1654                           ;LCD.c: 97:  LATD|= dato;
  1655   002958  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1656   00295A  12C1               	iorwf	193,f,c	;volatile
  1657   00295C                     
  1658                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1659   00295C  84C1               	bsf	193,2,c	;volatile
  1660   00295E                     
  1661                           ;LCD.c: 100:         _delay(1200);
  1662   00295E  0EF0               	movlw	240
  1663   002960                     u427:
  1664   002960  D000               	nop2	
  1665   002962  2EE8               	decfsz	wreg,f,c
  1666   002964  D7FD               	bra	u427
  1667   002966                     
  1668                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1669   002966  94C1               	bcf	193,2,c	;volatile
  1670   002968  0012               	return		;funcret
  1671   00296A                     __end_of_ENVIA_NIBBLE:
  1672                           	callstack 0
  1673                           
  1674                           	psect	rparam
  1675   000000                     
  1676                           	psect	config
  1677                           
  1678                           ;Config register CONFIG1 @ 0x300000
  1679                           ;	External Oscillator Selection
  1680                           ;	FEXTOSC = OFF, Oscillator not enabled
  1681                           ;	Reset Oscillator Selection
  1682                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1683   300000                     	org	3145728
  1684   300000  FC                 	db	252
  1685                           
  1686                           ;Config register CONFIG2 @ 0x300001
  1687                           ;	Clock out Enable bit
  1688                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1689                           ;	PRLOCKED One-Way Set Enable bit
  1690                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1691                           ;	Clock Switch Enable bit
  1692                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1693                           ;	Fail-Safe Clock Monitor Enable bit
  1694                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1695   300001                     	org	3145729
  1696   300001  FF                 	db	255
  1697                           
  1698                           ;Config register CONFIG3 @ 0x300002
  1699                           ;	MCLR Enable bit
  1700                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1701                           ;	Power-up timer selection bits
  1702                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  1703                           ;	Multi-vector enable bit
  1704                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1705                           ;	IVTLOCK bit One-way set enable bit
  1706                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1707                           ;	Low Power BOR Enable bit
  1708                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1709                           ;	Brown-out Reset Enable bits
  1710                           ;	BOREN = OFF, Brown-out Reset disabled
  1711   300002                     	org	3145730
  1712   300002  3D                 	db	61
  1713                           
  1714                           ;Config register CONFIG4 @ 0x300003
  1715                           ;	Brown-out Reset Voltage Selection bits
  1716                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1717                           ;	ZCD Disable bit
  1718                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1719                           ;	PPSLOCK bit One-Way Set Enable bit
  1720                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1721                           ;	Stack Full/Underflow Reset Enable bit
  1722                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1723                           ;	Low Voltage Programming Enable bit
  1724                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1725                           ;	Extended Instruction Set Enable bit
  1726                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1727   300003                     	org	3145731
  1728   300003  DF                 	db	223
  1729                           
  1730                           ;Config register CONFIG5 @ 0x300004
  1731                           ;	WDT Period selection bits
  1732                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1733                           ;	WDT operating mode
  1734                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1735   300004                     	org	3145732
  1736   300004  9F                 	db	159
  1737                           
  1738                           ;Config register CONFIG6 @ 0x300005
  1739                           ;	WDT Window Select bits
  1740                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1741                           ;	WDT input clock selector
  1742                           ;	WDTCCS = SC, Software Control
  1743   300005                     	org	3145733
  1744   300005  FF                 	db	255
  1745                           
  1746                           ;Config register CONFIG7 @ 0x300006
  1747                           ;	Boot Block Size selection bits
  1748                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1749                           ;	Boot Block enable bit
  1750                           ;	BBEN = OFF, Boot block disabled
  1751                           ;	Storage Area Flash enable bit
  1752                           ;	SAFEN = OFF, SAF disabled
  1753                           ;	Background Debugger
  1754                           ;	DEBUG = OFF, Background Debugger disabled
  1755   300006                     	org	3145734
  1756   300006  FF                 	db	255
  1757                           
  1758                           ;Config register CONFIG8 @ 0x300007
  1759                           ;	Boot Block Write Protection bit
  1760                           ;	WRTB = OFF, Boot Block not Write protected
  1761                           ;	Configuration Register Write Protection bit
  1762                           ;	WRTC = OFF, Configuration registers not Write protected
  1763                           ;	Data EEPROM Write Protection bit
  1764                           ;	WRTD = OFF, Data EEPROM not Write protected
  1765                           ;	SAF Write protection bit
  1766                           ;	WRTSAF = OFF, SAF not Write Protected
  1767                           ;	Application Block write protection bit
  1768                           ;	WRTAPP = OFF, Application Block not write protected
  1769   300007                     	org	3145735
  1770   300007  FF                 	db	255
  1771                           
  1772                           ;Config register CONFIG10 @ 0x300009
  1773                           ;	PFM and Data EEPROM Code Protection bit
  1774                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1775   300009                     	org	3145737
  1776   300009  FF                 	db	255
  1777                           tosu	equ	0x4FF
  1778                           tosh	equ	0x4FE
  1779                           tosl	equ	0x4FD
  1780                           stkptr	equ	0x4FC
  1781                           pclatu	equ	0x4FB
  1782                           pclath	equ	0x4FA
  1783                           pcl	equ	0x4F9
  1784                           tblptru	equ	0x4F8
  1785                           tblptrh	equ	0x4F7
  1786                           tblptrl	equ	0x4F6
  1787                           tablat	equ	0x4F5
  1788                           prodh	equ	0x4F4
  1789                           prodl	equ	0x4F3
  1790                           indf0	equ	0x4EF
  1791                           postinc0	equ	0x4EE
  1792                           postdec0	equ	0x4ED
  1793                           preinc0	equ	0x4EC
  1794                           plusw0	equ	0x4EB
  1795                           fsr0h	equ	0x4EA
  1796                           fsr0l	equ	0x4E9
  1797                           wreg	equ	0x4E8
  1798                           indf1	equ	0x4E7
  1799                           postinc1	equ	0x4E6
  1800                           postdec1	equ	0x4E5
  1801                           preinc1	equ	0x4E4
  1802                           plusw1	equ	0x4E3
  1803                           fsr1h	equ	0x4E2
  1804                           fsr1l	equ	0x4E1
  1805                           bsr	equ	0x4E0
  1806                           indf2	equ	0x4DF
  1807                           postinc2	equ	0x4DE
  1808                           postdec2	equ	0x4DD
  1809                           preinc2	equ	0x4DC
  1810                           plusw2	equ	0x4DB
  1811                           fsr2h	equ	0x4DA
  1812                           fsr2l	equ	0x4D9
  1813                           status	equ	0x4D8

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      18
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), STR_2(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_conviertemon
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _conviertemon->___lwdiv
    ___lwdiv->___lwmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2917
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                       _conviertemon
                           _lcd_init
                    _tomamuestra_ADC
 ---------------------------------------------------------------------------------
 (1) _tomamuestra_ADC                                      4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     525
                                              4 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _conviertemon                                         2     0      2    1397
                                             12 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
                    _tomamuestra_ADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     515
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _conviertemon
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _tomamuestra_ADC (ARG)
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _tomamuestra_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhll    336      0       0      79        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRll         AD      0       0      82        0.0%
BITBIGSFRlhhhhh     A8      0       0      75        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      12       1       18.9%
BITBIGSFRhhh        2E      0       0      71        0.0%
BITBIGSFRlhhhhl     17      0       0      76        0.0%
BITBIGSFRlhhhlh      C      0       0      77        0.0%
BITBIGSFRhhl         7      0       0      72        0.0%
BITBIGSFRlhhhll      6      0       0      78        0.0%
BITBIGSFRhll         4      0       0      74        0.0%
BITBIGSFRlhl         3      0       0      81        0.0%
BITBIGSFRhlh         2      0       0      73        0.0%
BITBIGSFRlhhl        1      0       0      80        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      12      58        0.0%
DATA                 0      0      12       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Oct 17 20:40:29 2024

                     l24 2832                       l42 28FE                       l51 28CE  
                     l60 2968                       l37 2986                       l54 298E  
                     l63 2866                       l48 289A                       l57 27B2  
                     l67 2648                       l69 2682                       u10 2682  
                     u11 267E                       u20 28E2                       u21 28DE  
                     u30 28F8                       u31 28F4            ENVIA_CHAR@aux 0503  
                    l123 294C                      l132 259C                      l126 2908  
                    l135 27F8                      l129 2928                      l644 2610  
                    l821 2616                      l901 28A4                      l637 2608  
                    l654 2752                      l831 2628                      l823 2618  
                    l911 28B6                      l903 28A8                      l647 274A  
                    l841 263E                      l833 262A                      l825 261A  
                    l913 28BC                      l905 28B0                      l921 2754  
                    l851 266A                      l843 264A                      l835 2632  
                    l827 261C                      l819 2612                      l915 28C2  
                    l907 28B2                      l931 2788                      l923 2758  
                    l861 295E                      l845 2652                      l837 2634  
                    l829 2624                      l917 28C8                      l909 28B4  
                    l941 27A6                      l933 278E                      l925 275E  
                    l863 2966                      l847 2656                      l855 2670  
                    l839 263C                      l871 2840                      l919 2988  
                    l943 27AC                      l935 2794                      l927 276C  
                    l857 2950                      l849 2660                      l881 2854  
                    l873 2848                      l865 2836                      l937 279A  
                    l929 2780                      l859 295C                      l883 285A  
                    l875 284A                      l867 2838                      l891 28E2  
                    l939 27A0                      l885 2860                      l877 284C  
                    l869 283C                      l893 28E8                      l879 284E  
                    l887 2980                      l895 28F8                      l897 289E  
                    l889 28D2                      l899 28A0                      l999 292A  
                    u200 25D6                      u201 25D2                      u210 25F2  
                    u211 25EE                      u220 2702                      u221 26FE  
                    u230 2720                      u231 271C                      u240 2736  
                    u241 2732                      u250 280C                      u251 2808  
                    u307 27EA                      u260 282A                      u261 2826  
                    u317 2764                      u270 289A                      u190 25B8  
                    u407 265A                      u271 2896                      u191 25B4  
                    u327 2772                      u280 2916                      u417 2664  
                    u337 2782                      u281 2912                      u427 2960  
                    u347 2842                      u357 28AA                      u367 261E  
                    u377 262C                      u297 27C8                      u387 2636  
                    u397 264C              LEER_LCD@aux 0501                      wreg 04E8  
           ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 0501           ENVIA_CHAR@dato 0502  
                   l1001 2938                     l1003 293A                     l1005 2948  
                   l1101 25F2                     l1021 27BE                     l1007 294A  
                   l1103 25FA                     l1111 2702                     l1031 27E0  
                   l1023 27C2                     l1105 25FC                     l1121 273E  
                   l1113 270A                     l1025 27D2                     l1131 282A  
                   l1107 2602                     l1123 2744                     l1115 2712  
                   l1027 27D6                     l1019 27B4                     l1133 2868  
                   l1125 27FC                     l1117 2720                     l1109 26F0  
                   l1029 27DA                     l1141 2900                     l1135 2874  
                   l1127 280C                     l1119 2736                     l1143 2906  
                   l1151 2684                     l1137 2886                     l1129 2818  
                   l1145 2916                     l1161 26B2                     l1153 2688  
                   l1139 2888                     l1091 25B8                     l1171 26E0  
                   l1163 26BC                     l1155 268C                     l1093 25C0  
                   l1149 2514                     l1165 26C8                     l1157 2696  
                   l1095 25C8                     l1087 259E                     l1167 26D0  
                   l1159 26A2                     l1097 25D6                     l1089 25A6  
                   l1169 26D8                     l1099 25DC                     STR_1 2501  
                   STR_2 250C                     _LATD 04C1                     _main 2684  
                   start FFFC            ?_CURSOR_ONOFF 0501        ??_tomamuestra_ADC 0503  
           ___param_bank 0000          ??_ENVIA_LCD_CMD 0502            ?_conviertemon 050D  
       __end_of_LEER_LCD 2684                    ?_main 0501                    _ADPCH 03EC  
        __end_of___lwdiv 2612          __end_of___lwmod 2754                    _OSCEN 00B3  
                  _PORTD 04D1                    _TRISD 04C9              ?_POS_CURSOR 0504  
                  tablat 04F5                    status 04D8           ??_CURSOR_ONOFF 0504  
        __initialization 296A           ??_conviertemon 050F             __end_of_main 26F0  
        _ESCRIBE_MENSAJE 2868                   ??_main 050F            __activetblptr 0001  
                 _ADRESH 03EB                   _ADRESL 03EA                   _ANSELD 0418  
                 _OSCFRQ 00B1         __end_of_lcd_init 27FA                   _decena 0510  
   __end_of_ENVIA_NIBBLE 296A                ??___lwdiv 050A                ??___lwmod 0505  
                 _millar 0512                   isa$std 0001                   _unidad 050F  
           __mediumconst 0000                   tblptrh 04F7                   tblptrl 04F6  
                 tblptru 04F8             ??_BORRAR_LCD 0504                ?_LEER_LCD 0501  
             __accesstop 0560  __end_of__initialization 2972             ??_LCD_CONFIG 0504  
          ___rparam_used 0001             ??_ENVIA_CHAR 0502  __end_of_ESCRIBE_MENSAJE 289C  
         __pcstackCOMRAM 0501       __end_of_BORRAR_LCD 2990         ENVIA_LCD_CMD@aux 0503  
   __end_of_CURSOR_ONOFF 2900       __end_of_LCD_CONFIG 27B4       __end_of_ENVIA_CHAR 28D0  
   __end_of_conviertemon 259E          _tomamuestra_ADC 2900               ??_LEER_LCD 0501  
       ENVIA_NIBBLE@dato 0501                  _OSCCON1 00AD             ??_POS_CURSOR 0505  
              ?_lcd_init 0501                  __Hparam 0000                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 0504        __end_of_configuro 294E                  ___lwdiv 259E  
                ___lwmod 26F0             __psmallconst 2500    __end_of_ENVIA_LCD_CMD 2868  
                __pcinit 296A       __end_of_POS_CURSOR 2834                  __ramtop 2500  
                _centena 0511                  __ptext0 2684                  __ptext1 2900  
                __ptext2 27B4                  __ptext3 2754                  __ptext4 28D0  
                __ptext5 2980                  __ptext6 2988                  __ptext7 2514  
                __ptext8 26F0                  __ptext9 259E  __end_of_tomamuestra_ADC 292A  
             ??_lcd_init 0505             _ENVIA_NIBBLE 294E     end_of_initialization 2972  
       conviertemon@dato 050D                _TRISAbits 04C6             _CURSOR_ONOFF 28D0  
     CURSOR_ONOFF@estado 0504             _conviertemon 2514            ??_CURSOR_HOME 0504  
       ?_tomamuestra_ADC 0501      start_initialization 296A        ENVIA_LCD_CMD@dato 0502  
            __pbssCOMRAM 050F      __end_of_CURSOR_HOME 2988         ___lwdiv@dividend 0506  
               ?___lwdiv 0506                 ?___lwmod 0501                _configuro 292A  
            __smallconst 2500         ___lwdiv@quotient 050A                 _LEER_LCD 2612  
               _LATDbits 04C1         ESCRIBE_MENSAJE@i 0507           POS_CURSOR@fila 0505  
             ?_configuro 0501               _ADCON0bits 03F3              _CURSOR_HOME 2980  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 2500  
             _ANSELAbits 0400          ___lwdiv@divisor 0508          ___lwdiv@counter 050C  
               __ptext10 292A                 __ptext11 27FA                 __ptext12 2834  
               __ptext13 2868                 __ptext14 289C                 __ptext15 2612  
               __ptext16 294E               _BORRAR_LCD 2988                 _lcd_init 27B4  
             _LCD_CONFIG 2754               _ENVIA_CHAR 289C                 isa$xinst 0000  
          _ENVIA_LCD_CMD 2834              ??_configuro 0501        ??_ESCRIBE_MENSAJE 0506  
  ESCRIBE_MENSAJE@cadena 0504         ___lwmod@dividend 0501           ?_ENVIA_LCD_CMD 0501  
        ___lwmod@divisor 0503          ___lwmod@counter 0505              ?_BORRAR_LCD 0501  
          ?_ENVIA_NIBBLE 0501               _POS_CURSOR 27FA              ?_LCD_CONFIG 0501  
     ESCRIBE_MENSAJE@tam 0505              ?_ENVIA_CHAR 0501        POS_CURSOR@columna 0504  
