

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Oct 16 15:47:06 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Generated 23/02/2024 GMT
    31                           ; 
    32                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F57Q43 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   0004E0                     bsr             equ	1248
    65   0004E9                     fsr0            equ	1257
    66   0004EA                     fsr0h           equ	1258
    67   0004E9                     fsr0l           equ	1257
    68   0004E1                     fsr1            equ	1249
    69   0004E2                     fsr1h           equ	1250
    70   0004E1                     fsr1l           equ	1249
    71   0004D9                     fsr2            equ	1241
    72   0004DA                     fsr2h           equ	1242
    73   0004D9                     fsr2l           equ	1241
    74   0004EF                     indf0           equ	1263
    75   0004E7                     indf1           equ	1255
    76   0004DF                     indf2           equ	1247
    77   0004D6                     intcon          equ	1238
    78   000041                     nvmcon          equ	65
    79   0004F9                     pcl             equ	1273
    80   0004FA                     pclath          equ	1274
    81   0004FB                     pclatu          equ	1275
    82   0004EB                     plusw0          equ	1259
    83   0004E3                     plusw1          equ	1251
    84   0004DB                     plusw2          equ	1243
    85   0004ED                     postdec0        equ	1261
    86   0004E5                     postdec1        equ	1253
    87   0004DD                     postdec2        equ	1245
    88   0004EE                     postinc0        equ	1262
    89   0004E6                     postinc1        equ	1254
    90   0004DE                     postinc2        equ	1246
    91   0004EC                     preinc0         equ	1260
    92   0004E4                     preinc1         equ	1252
    93   0004DC                     preinc2         equ	1244
    94   0004F3                     prod            equ	1267
    95   0004F4                     prodh           equ	1268
    96   0004F3                     prodl           equ	1267
    97   0004D8                     status          equ	1240
    98   0004F5                     tablat          equ	1269
    99   0004F6                     tblptr          equ	1270
   100   0004F7                     tblptrh         equ	1271
   101   0004F6                     tblptrl         equ	1270
   102   0004F8                     tblptru         equ	1272
   103   0004FD                     tosl            equ	1277
   104   0004E8                     wreg            equ	1256
   105   000039                     CLKRCON         equ	57	;# 
   106   00003A                     CLKRCLK         equ	58	;# 
   107   000040                     NVMCON0         equ	64	;# 
   108   000041                     NVMCON1         equ	65	;# 
   109   000042                     NVMLOCK         equ	66	;# 
   110   000043                     NVMADR          equ	67	;# 
   111   000043                     NVMADRL         equ	67	;# 
   112   000044                     NVMADRH         equ	68	;# 
   113   000045                     NVMADRU         equ	69	;# 
   114   000046                     NVMDAT          equ	70	;# 
   115   000046                     NVMDATL         equ	70	;# 
   116   000047                     NVMDATH         equ	71	;# 
   117   000048                     VREGCON         equ	72	;# 
   118   000049                     BORCON          equ	73	;# 
   119   00004A                     HLVDCON0        equ	74	;# 
   120   00004B                     HLVDCON1        equ	75	;# 
   121   00004C                     ZCDCON          equ	76	;# 
   122   000060                     PMD0            equ	96	;# 
   123   000061                     PMD1            equ	97	;# 
   124   000063                     PMD3            equ	99	;# 
   125   000064                     PMD4            equ	100	;# 
   126   000065                     PMD5            equ	101	;# 
   127   000066                     PMD6            equ	102	;# 
   128   000067                     PMD7            equ	103	;# 
   129   000068                     PMD8            equ	104	;# 
   130   00006A                     MD1CON0         equ	106	;# 
   131   00006B                     MD1CON1         equ	107	;# 
   132   00006C                     MD1SRC          equ	108	;# 
   133   00006D                     MD1CARL         equ	109	;# 
   134   00006E                     MD1CARH         equ	110	;# 
   135   00006F                     CMOUT           equ	111	;# 
   136   000070                     CM1CON0         equ	112	;# 
   137   000071                     CM1CON1         equ	113	;# 
   138   000072                     CM1NCH          equ	114	;# 
   139   000073                     CM1PCH          equ	115	;# 
   140   000074                     CM2CON0         equ	116	;# 
   141   000075                     CM2CON1         equ	117	;# 
   142   000076                     CM2NCH          equ	118	;# 
   143   000077                     CM2PCH          equ	119	;# 
   144   000078                     WDTCON0         equ	120	;# 
   145   000079                     WDTCON1         equ	121	;# 
   146   00007A                     WDTPS           equ	122	;# 
   147   00007A                     WDTPSL          equ	122	;# 
   148   00007B                     WDTPSH          equ	123	;# 
   149   00007C                     WDTTMR          equ	124	;# 
   150   00007D                     DAC1DAT         equ	125	;# 
   151   00007D                     DAC1DATL        equ	125	;# 
   152   00007F                     DAC1CON         equ	127	;# 
   153   000080                     SPI1RXB         equ	128	;# 
   154   000081                     SPI1TXB         equ	129	;# 
   155   000082                     SPI1TCNT        equ	130	;# 
   156   000082                     SPI1TCNTL       equ	130	;# 
   157   000083                     SPI1TCNTH       equ	131	;# 
   158   000084                     SPI1CON0        equ	132	;# 
   159   000085                     SPI1CON1        equ	133	;# 
   160   000086                     SPI1CON2        equ	134	;# 
   161   000087                     SPI1STATUS      equ	135	;# 
   162   000088                     SPI1TWIDTH      equ	136	;# 
   163   000089                     SPI1BAUD        equ	137	;# 
   164   00008A                     SPI1INTF        equ	138	;# 
   165   00008B                     SPI1INTE        equ	139	;# 
   166   00008C                     SPI1CLK         equ	140	;# 
   167   00008D                     SPI2RXB         equ	141	;# 
   168   00008E                     SPI2TXB         equ	142	;# 
   169   00008F                     SPI2TCNT        equ	143	;# 
   170   00008F                     SPI2TCNTL       equ	143	;# 
   171   000090                     SPI2TCNTH       equ	144	;# 
   172   000091                     SPI2CON0        equ	145	;# 
   173   000092                     SPI2CON1        equ	146	;# 
   174   000093                     SPI2CON2        equ	147	;# 
   175   000094                     SPI2STATUS      equ	148	;# 
   176   000095                     SPI2TWIDTH      equ	149	;# 
   177   000096                     SPI2BAUD        equ	150	;# 
   178   000097                     SPI2INTF        equ	151	;# 
   179   000098                     SPI2INTE        equ	152	;# 
   180   000099                     SPI2CLK         equ	153	;# 
   181   0000AC                     ACTCON          equ	172	;# 
   182   0000AD                     OSCCON1         equ	173	;# 
   183   0000AE                     OSCCON2         equ	174	;# 
   184   0000AF                     OSCCON3         equ	175	;# 
   185   0000B0                     OSCTUNE         equ	176	;# 
   186   0000B1                     OSCFRQ          equ	177	;# 
   187   0000B1                     OSCFREQ         equ	177	;# 
   188   0000B2                     OSCSTAT         equ	178	;# 
   189   0000B2                     OSCSTAT1        equ	178	;# 
   190   0000B3                     OSCEN           equ	179	;# 
   191   0000B4                     PRLOCK          equ	180	;# 
   192   0000B5                     SCANPR          equ	181	;# 
   193   0000B6                     DMA1PR          equ	182	;# 
   194   0000B7                     DMA2PR          equ	183	;# 
   195   0000B8                     DMA3PR          equ	184	;# 
   196   0000B9                     DMA4PR          equ	185	;# 
   197   0000BA                     DMA5PR          equ	186	;# 
   198   0000BB                     DMA6PR          equ	187	;# 
   199   0000BE                     MAINPR          equ	190	;# 
   200   0000BF                     ISRPR           equ	191	;# 
   201   0000D4                     CLCDATA         equ	212	;# 
   202   0000D5                     CLCSELECT       equ	213	;# 
   203   0000D6                     CLCnCON         equ	214	;# 
   204   0000D7                     CLCnPOL         equ	215	;# 
   205   0000D8                     CLCnSEL0        equ	216	;# 
   206   0000D9                     CLCnSEL1        equ	217	;# 
   207   0000DA                     CLCnSEL2        equ	218	;# 
   208   0000DB                     CLCnSEL3        equ	219	;# 
   209   0000DC                     CLCnGLS0        equ	220	;# 
   210   0000DD                     CLCnGLS1        equ	221	;# 
   211   0000DE                     CLCnGLS2        equ	222	;# 
   212   0000DF                     CLCnGLS3        equ	223	;# 
   213   0000E8                     DMASELECT       equ	232	;# 
   214   0000E9                     DMAnBUF         equ	233	;# 
   215   0000EA                     DMAnDCNT        equ	234	;# 
   216   0000EA                     DMAnDCNTL       equ	234	;# 
   217   0000EB                     DMAnDCNTH       equ	235	;# 
   218   0000EC                     DMAnDPTR        equ	236	;# 
   219   0000EC                     DMAnDPTRL       equ	236	;# 
   220   0000ED                     DMAnDPTRH       equ	237	;# 
   221   0000EE                     DMAnDSZ         equ	238	;# 
   222   0000EE                     DMAnDSZL        equ	238	;# 
   223   0000EF                     DMAnDSZH        equ	239	;# 
   224   0000F0                     DMAnDSA         equ	240	;# 
   225   0000F0                     DMAnDSAL        equ	240	;# 
   226   0000F1                     DMAnDSAH        equ	241	;# 
   227   0000F2                     DMAnSCNT        equ	242	;# 
   228   0000F2                     DMAnSCNTL       equ	242	;# 
   229   0000F3                     DMAnSCNTH       equ	243	;# 
   230   0000F4                     DMAnSPTR        equ	244	;# 
   231   0000F4                     DMAnSPTRL       equ	244	;# 
   232   0000F5                     DMAnSPTRH       equ	245	;# 
   233   0000F6                     DMAnSPTRU       equ	246	;# 
   234   0000F7                     DMAnSSZ         equ	247	;# 
   235   0000F7                     DMAnSSZL        equ	247	;# 
   236   0000F8                     DMAnSSZH        equ	248	;# 
   237   0000F9                     DMAnSSA         equ	249	;# 
   238   0000F9                     DMAnSSAL        equ	249	;# 
   239   0000FA                     DMAnSSAH        equ	250	;# 
   240   0000FB                     DMAnSSAU        equ	251	;# 
   241   0000FC                     DMAnCON0        equ	252	;# 
   242   0000FD                     DMAnCON1        equ	253	;# 
   243   0000FE                     DMAnAIRQ        equ	254	;# 
   244   0000FF                     DMAnSIRQ        equ	255	;# 
   245   000200                     PPSLOCK         equ	512	;# 
   246   000201                     RA0PPS          equ	513	;# 
   247   000202                     RA1PPS          equ	514	;# 
   248   000203                     RA2PPS          equ	515	;# 
   249   000204                     RA3PPS          equ	516	;# 
   250   000205                     RA4PPS          equ	517	;# 
   251   000206                     RA5PPS          equ	518	;# 
   252   000207                     RA6PPS          equ	519	;# 
   253   000208                     RA7PPS          equ	520	;# 
   254   000209                     RB0PPS          equ	521	;# 
   255   00020A                     RB1PPS          equ	522	;# 
   256   00020B                     RB2PPS          equ	523	;# 
   257   00020C                     RB3PPS          equ	524	;# 
   258   00020D                     RB4PPS          equ	525	;# 
   259   00020E                     RB5PPS          equ	526	;# 
   260   00020F                     RB6PPS          equ	527	;# 
   261   000210                     RB7PPS          equ	528	;# 
   262   000211                     RC0PPS          equ	529	;# 
   263   000212                     RC1PPS          equ	530	;# 
   264   000213                     RC2PPS          equ	531	;# 
   265   000214                     RC3PPS          equ	532	;# 
   266   000215                     RC4PPS          equ	533	;# 
   267   000216                     RC5PPS          equ	534	;# 
   268   000217                     RC6PPS          equ	535	;# 
   269   000218                     RC7PPS          equ	536	;# 
   270   000219                     RD0PPS          equ	537	;# 
   271   00021A                     RD1PPS          equ	538	;# 
   272   00021B                     RD2PPS          equ	539	;# 
   273   00021C                     RD3PPS          equ	540	;# 
   274   00021D                     RD4PPS          equ	541	;# 
   275   00021E                     RD5PPS          equ	542	;# 
   276   00021F                     RD6PPS          equ	543	;# 
   277   000220                     RD7PPS          equ	544	;# 
   278   000221                     RE0PPS          equ	545	;# 
   279   000222                     RE1PPS          equ	546	;# 
   280   000223                     RE2PPS          equ	547	;# 
   281   000229                     RF0PPS          equ	553	;# 
   282   00022A                     RF1PPS          equ	554	;# 
   283   00022B                     RF2PPS          equ	555	;# 
   284   00022C                     RF3PPS          equ	556	;# 
   285   00022D                     RF4PPS          equ	557	;# 
   286   00022E                     RF5PPS          equ	558	;# 
   287   00022F                     RF6PPS          equ	559	;# 
   288   000230                     RF7PPS          equ	560	;# 
   289   00023E                     INT0PPS         equ	574	;# 
   290   00023F                     INT1PPS         equ	575	;# 
   291   000240                     INT2PPS         equ	576	;# 
   292   000241                     T0CKIPPS        equ	577	;# 
   293   000242                     T1CKIPPS        equ	578	;# 
   294   000243                     T1GPPS          equ	579	;# 
   295   000244                     T3CKIPPS        equ	580	;# 
   296   000245                     T3GPPS          equ	581	;# 
   297   000246                     T5CKIPPS        equ	582	;# 
   298   000247                     T5GPPS          equ	583	;# 
   299   000248                     T2INPPS         equ	584	;# 
   300   000249                     T4INPPS         equ	585	;# 
   301   00024A                     T6INPPS         equ	586	;# 
   302   00024F                     CCP1PPS         equ	591	;# 
   303   000250                     CCP2PPS         equ	592	;# 
   304   000251                     CCP3PPS         equ	593	;# 
   305   000253                     PWM1ERSPPS      equ	595	;# 
   306   000254                     PWM2ERSPPS      equ	596	;# 
   307   000255                     PWM3ERSPPS      equ	597	;# 
   308   000257                     PWMIN0PPS       equ	599	;# 
   309   000258                     PWMIN1PPS       equ	600	;# 
   310   000259                     SMT1WINPPS      equ	601	;# 
   311   00025A                     SMT1SIGPPS      equ	602	;# 
   312   00025B                     CWG1PPS         equ	603	;# 
   313   00025B                     CWG1INPPS       equ	603	;# 
   314   00025C                     CWG2PPS         equ	604	;# 
   315   00025C                     CWG2INPPS       equ	604	;# 
   316   00025D                     CWG3PPS         equ	605	;# 
   317   00025D                     CWG3INPPS       equ	605	;# 
   318   00025E                     MD1CARLPPS      equ	606	;# 
   319   00025E                     MDCARLPPS       equ	606	;# 
   320   00025F                     MD1CARHPPS      equ	607	;# 
   321   00025F                     MDCARHPPS       equ	607	;# 
   322   000260                     MD1SRCPPS       equ	608	;# 
   323   000260                     MDSRCPPS        equ	608	;# 
   324   000261                     CLCIN0PPS       equ	609	;# 
   325   000262                     CLCIN1PPS       equ	610	;# 
   326   000263                     CLCIN2PPS       equ	611	;# 
   327   000264                     CLCIN3PPS       equ	612	;# 
   328   000265                     CLCIN4PPS       equ	613	;# 
   329   000266                     CLCIN5PPS       equ	614	;# 
   330   000267                     CLCIN6PPS       equ	615	;# 
   331   000268                     CLCIN7PPS       equ	616	;# 
   332   000269                     ADACTPPS        equ	617	;# 
   333   00026A                     SPI1SCKPPS      equ	618	;# 
   334   00026B                     SPI1SDIPPS      equ	619	;# 
   335   00026C                     SPI1SSPPS       equ	620	;# 
   336   00026D                     SPI2SCKPPS      equ	621	;# 
   337   00026E                     SPI2SDIPPS      equ	622	;# 
   338   00026F                     SPI2SSPPS       equ	623	;# 
   339   000270                     I2C1SDAPPS      equ	624	;# 
   340   000271                     I2C1SCLPPS      equ	625	;# 
   341   000272                     U1RXPPS         equ	626	;# 
   342   000273                     U1CTSPPS        equ	627	;# 
   343   000274                     U2RXPPS         equ	628	;# 
   344   000275                     U2CTSPPS        equ	629	;# 
   345   000276                     U3RXPPS         equ	630	;# 
   346   000277                     U3CTSPPS        equ	631	;# 
   347   000278                     U4RXPPS         equ	632	;# 
   348   000279                     U4CTSPPS        equ	633	;# 
   349   00027A                     U5RXPPS         equ	634	;# 
   350   00027B                     U5CTSPPS        equ	635	;# 
   351   000286                     RC4I2C          equ	646	;# 
   352   000287                     RC3I2C          equ	647	;# 
   353   000288                     RB2I2C          equ	648	;# 
   354   000289                     RB1I2C          equ	649	;# 
   355   00028B                     I2C1RXB         equ	651	;# 
   356   00028C                     I2C1TXB         equ	652	;# 
   357   00028D                     I2C1CNT         equ	653	;# 
   358   00028E                     I2C1ADB0        equ	654	;# 
   359   00028F                     I2C1ADB1        equ	655	;# 
   360   000290                     I2C1ADR0        equ	656	;# 
   361   000291                     I2C1ADR1        equ	657	;# 
   362   000292                     I2C1ADR2        equ	658	;# 
   363   000293                     I2C1ADR3        equ	659	;# 
   364   000294                     I2C1CON0        equ	660	;# 
   365   000295                     I2C1CON1        equ	661	;# 
   366   000296                     I2C1CON2        equ	662	;# 
   367   000297                     I2C1ERR         equ	663	;# 
   368   000298                     I2C1STAT0       equ	664	;# 
   369   000299                     I2C1STAT1       equ	665	;# 
   370   00029A                     I2C1PIR         equ	666	;# 
   371   00029B                     I2C1PIE         equ	667	;# 
   372   00029C                     I2C1CLK         equ	668	;# 
   373   00029D                     I2C1BTO         equ	669	;# 
   374   0002A1                     U1RXB           equ	673	;# 
   375   0002A1                     U1RXBL          equ	673	;# 
   376   0002A2                     U1RXCHK         equ	674	;# 
   377   0002A3                     U1TXB           equ	675	;# 
   378   0002A3                     U1TXBL          equ	675	;# 
   379   0002A4                     U1TXCHK         equ	676	;# 
   380   0002A5                     U1P1            equ	677	;# 
   381   0002A5                     U1P1L           equ	677	;# 
   382   0002A6                     U1P1H           equ	678	;# 
   383   0002A7                     U1P2            equ	679	;# 
   384   0002A7                     U1P2L           equ	679	;# 
   385   0002A8                     U1P2H           equ	680	;# 
   386   0002A9                     U1P3            equ	681	;# 
   387   0002A9                     U1P3L           equ	681	;# 
   388   0002AA                     U1P3H           equ	682	;# 
   389   0002AB                     U1CON0          equ	683	;# 
   390   0002AC                     U1CON1          equ	684	;# 
   391   0002AD                     U1CON2          equ	685	;# 
   392   0002AE                     U1BRG           equ	686	;# 
   393   0002AE                     U1BRGL          equ	686	;# 
   394   0002AF                     U1BRGH          equ	687	;# 
   395   0002B0                     U1FIFO          equ	688	;# 
   396   0002B1                     U1UIR           equ	689	;# 
   397   0002B2                     U1ERRIR         equ	690	;# 
   398   0002B3                     U1ERRIE         equ	691	;# 
   399   0002B4                     U2RXB           equ	692	;# 
   400   0002B4                     U2RXBL          equ	692	;# 
   401   0002B6                     U2TXB           equ	694	;# 
   402   0002B6                     U2TXBL          equ	694	;# 
   403   0002B8                     U2P1            equ	696	;# 
   404   0002B8                     U2P1L           equ	696	;# 
   405   0002BA                     U2P2            equ	698	;# 
   406   0002BA                     U2P2L           equ	698	;# 
   407   0002BC                     U2P3            equ	700	;# 
   408   0002BC                     U2P3L           equ	700	;# 
   409   0002BE                     U2CON0          equ	702	;# 
   410   0002BF                     U2CON1          equ	703	;# 
   411   0002C0                     U2CON2          equ	704	;# 
   412   0002C1                     U2BRG           equ	705	;# 
   413   0002C1                     U2BRGL          equ	705	;# 
   414   0002C2                     U2BRGH          equ	706	;# 
   415   0002C3                     U2FIFO          equ	707	;# 
   416   0002C4                     U2UIR           equ	708	;# 
   417   0002C5                     U2ERRIR         equ	709	;# 
   418   0002C6                     U2ERRIE         equ	710	;# 
   419   0002C7                     U3RXB           equ	711	;# 
   420   0002C7                     U3RXBL          equ	711	;# 
   421   0002C9                     U3TXB           equ	713	;# 
   422   0002C9                     U3TXBL          equ	713	;# 
   423   0002CB                     U3P1            equ	715	;# 
   424   0002CB                     U3P1L           equ	715	;# 
   425   0002CD                     U3P2            equ	717	;# 
   426   0002CD                     U3P2L           equ	717	;# 
   427   0002CF                     U3P3            equ	719	;# 
   428   0002CF                     U3P3L           equ	719	;# 
   429   0002D1                     U3CON0          equ	721	;# 
   430   0002D2                     U3CON1          equ	722	;# 
   431   0002D3                     U3CON2          equ	723	;# 
   432   0002D4                     U3BRG           equ	724	;# 
   433   0002D4                     U3BRGL          equ	724	;# 
   434   0002D5                     U3BRGH          equ	725	;# 
   435   0002D6                     U3FIFO          equ	726	;# 
   436   0002D7                     U3UIR           equ	727	;# 
   437   0002D8                     U3ERRIR         equ	728	;# 
   438   0002D9                     U3ERRIE         equ	729	;# 
   439   0002DA                     U4RXB           equ	730	;# 
   440   0002DA                     U4RXBL          equ	730	;# 
   441   0002DC                     U4TXB           equ	732	;# 
   442   0002DC                     U4TXBL          equ	732	;# 
   443   0002DE                     U4P1            equ	734	;# 
   444   0002DE                     U4P1L           equ	734	;# 
   445   0002E0                     U4P2            equ	736	;# 
   446   0002E0                     U4P2L           equ	736	;# 
   447   0002E2                     U4P3            equ	738	;# 
   448   0002E2                     U4P3L           equ	738	;# 
   449   0002E4                     U4CON0          equ	740	;# 
   450   0002E5                     U4CON1          equ	741	;# 
   451   0002E6                     U4CON2          equ	742	;# 
   452   0002E7                     U4BRG           equ	743	;# 
   453   0002E7                     U4BRGL          equ	743	;# 
   454   0002E8                     U4BRGH          equ	744	;# 
   455   0002E9                     U4FIFO          equ	745	;# 
   456   0002EA                     U4UIR           equ	746	;# 
   457   0002EB                     U4ERRIR         equ	747	;# 
   458   0002EC                     U4ERRIE         equ	748	;# 
   459   0002ED                     U5RXB           equ	749	;# 
   460   0002ED                     U5RXBL          equ	749	;# 
   461   0002EF                     U5TXB           equ	751	;# 
   462   0002EF                     U5TXBL          equ	751	;# 
   463   0002F1                     U5P1            equ	753	;# 
   464   0002F1                     U5P1L           equ	753	;# 
   465   0002F3                     U5P2            equ	755	;# 
   466   0002F3                     U5P2L           equ	755	;# 
   467   0002F5                     U5P3            equ	757	;# 
   468   0002F5                     U5P3L           equ	757	;# 
   469   0002F7                     U5CON0          equ	759	;# 
   470   0002F8                     U5CON1          equ	760	;# 
   471   0002F9                     U5CON2          equ	761	;# 
   472   0002FA                     U5BRG           equ	762	;# 
   473   0002FA                     U5BRGL          equ	762	;# 
   474   0002FB                     U5BRGH          equ	763	;# 
   475   0002FC                     U5FIFO          equ	764	;# 
   476   0002FD                     U5UIR           equ	765	;# 
   477   0002FE                     U5ERRIR         equ	766	;# 
   478   0002FF                     U5ERRIE         equ	767	;# 
   479   000300                     SMT1TMR         equ	768	;# 
   480   000300                     SMT1TMRL        equ	768	;# 
   481   000301                     SMT1TMRH        equ	769	;# 
   482   000302                     SMT1TMRU        equ	770	;# 
   483   000303                     SMT1CPR         equ	771	;# 
   484   000303                     SMT1CPRL        equ	771	;# 
   485   000304                     SMT1CPRH        equ	772	;# 
   486   000305                     SMT1CPRU        equ	773	;# 
   487   000306                     SMT1CPW         equ	774	;# 
   488   000306                     SMT1CPWL        equ	774	;# 
   489   000307                     SMT1CPWH        equ	775	;# 
   490   000308                     SMT1CPWU        equ	776	;# 
   491   000309                     SMT1PR          equ	777	;# 
   492   000309                     SMT1PRL         equ	777	;# 
   493   00030A                     SMT1PRH         equ	778	;# 
   494   00030B                     SMT1PRU         equ	779	;# 
   495   00030C                     SMT1CON0        equ	780	;# 
   496   00030D                     SMT1CON1        equ	781	;# 
   497   00030E                     SMT1STAT        equ	782	;# 
   498   00030F                     SMT1CLK         equ	783	;# 
   499   000310                     SMT1SIG         equ	784	;# 
   500   000311                     SMT1WIN         equ	785	;# 
   501   000318                     TMR0L           equ	792	;# 
   502   000318                     TMR0            equ	792	;# 
   503   000319                     TMR0H           equ	793	;# 
   504   000319                     PR0             equ	793	;# 
   505   00031A                     T0CON0          equ	794	;# 
   506   00031B                     T0CON1          equ	795	;# 
   507   00031C                     TMR1            equ	796	;# 
   508   00031C                     TMR1L           equ	796	;# 
   509   00031D                     TMR1H           equ	797	;# 
   510   00031E                     T1CON           equ	798	;# 
   511   00031E                     TMR1CON         equ	798	;# 
   512   00031F                     T1GCON          equ	799	;# 
   513   00031F                     TMR1GCON        equ	799	;# 
   514   000320                     T1GATE          equ	800	;# 
   515   000320                     TMR1GATE        equ	800	;# 
   516   000321                     T1CLK           equ	801	;# 
   517   000321                     TMR1CLK         equ	801	;# 
   518   000321                     PR1             equ	801	;# 
   519   000322                     T2TMR           equ	802	;# 
   520   000322                     TMR2            equ	802	;# 
   521   000323                     T2PR            equ	803	;# 
   522   000323                     PR2             equ	803	;# 
   523   000324                     T2CON           equ	804	;# 
   524   000325                     T2HLT           equ	805	;# 
   525   000326                     T2CLKCON        equ	806	;# 
   526   000326                     T2CLK           equ	806	;# 
   527   000327                     T2RST           equ	807	;# 
   528   000328                     TMR3            equ	808	;# 
   529   000328                     TMR3L           equ	808	;# 
   530   000329                     TMR3H           equ	809	;# 
   531   00032A                     T3CON           equ	810	;# 
   532   00032A                     TMR3CON         equ	810	;# 
   533   00032B                     T3GCON          equ	811	;# 
   534   00032B                     TMR3GCON        equ	811	;# 
   535   00032C                     T3GATE          equ	812	;# 
   536   00032C                     TMR3GATE        equ	812	;# 
   537   00032D                     T3CLK           equ	813	;# 
   538   00032D                     TMR3CLK         equ	813	;# 
   539   00032D                     PR3             equ	813	;# 
   540   00032E                     T4TMR           equ	814	;# 
   541   00032E                     TMR4            equ	814	;# 
   542   00032F                     T4PR            equ	815	;# 
   543   00032F                     PR4             equ	815	;# 
   544   000330                     T4CON           equ	816	;# 
   545   000331                     T4HLT           equ	817	;# 
   546   000332                     T4CLKCON        equ	818	;# 
   547   000332                     T4CLK           equ	818	;# 
   548   000333                     T4RST           equ	819	;# 
   549   000334                     TMR5            equ	820	;# 
   550   000334                     TMR5L           equ	820	;# 
   551   000335                     TMR5H           equ	821	;# 
   552   000336                     T5CON           equ	822	;# 
   553   000336                     TMR5CON         equ	822	;# 
   554   000337                     T5GCON          equ	823	;# 
   555   000337                     TMR5GCON        equ	823	;# 
   556   000338                     T5GATE          equ	824	;# 
   557   000338                     TMR5GATE        equ	824	;# 
   558   000339                     T5CLK           equ	825	;# 
   559   000339                     TMR5CLK         equ	825	;# 
   560   000339                     PR5             equ	825	;# 
   561   00033A                     T6TMR           equ	826	;# 
   562   00033A                     TMR6            equ	826	;# 
   563   00033B                     T6PR            equ	827	;# 
   564   00033B                     PR6             equ	827	;# 
   565   00033C                     T6CON           equ	828	;# 
   566   00033D                     T6HLT           equ	829	;# 
   567   00033E                     T6CLKCON        equ	830	;# 
   568   00033E                     T6CLK           equ	830	;# 
   569   00033F                     T6RST           equ	831	;# 
   570   000340                     CCPR1           equ	832	;# 
   571   000340                     CCPR1L          equ	832	;# 
   572   000341                     CCPR1H          equ	833	;# 
   573   000342                     CCP1CON         equ	834	;# 
   574   000343                     CCP1CAP         equ	835	;# 
   575   000344                     CCPR2           equ	836	;# 
   576   000344                     CCPR2L          equ	836	;# 
   577   000345                     CCPR2H          equ	837	;# 
   578   000346                     CCP2CON         equ	838	;# 
   579   000347                     CCP2CAP         equ	839	;# 
   580   000348                     CCPR3           equ	840	;# 
   581   000348                     CCPR3L          equ	840	;# 
   582   000349                     CCPR3H          equ	841	;# 
   583   00034A                     CCP3CON         equ	842	;# 
   584   00034B                     CCP3CAP         equ	843	;# 
   585   00034C                     CCPTMRS0        equ	844	;# 
   586   00034F                     CRCDATA         equ	847	;# 
   587   00034F                     CRCDATL         equ	847	;# 
   588   000350                     CRCDATH         equ	848	;# 
   589   000351                     CRCACC          equ	849	;# 
   590   000351                     CRCACCL         equ	849	;# 
   591   000352                     CRCACCH         equ	850	;# 
   592   000353                     CRCSHFT         equ	851	;# 
   593   000353                     CRCSHIFTL       equ	851	;# 
   594   000354                     CRCSHIFTH       equ	852	;# 
   595   000355                     CRCXOR          equ	853	;# 
   596   000355                     CRCXORL         equ	853	;# 
   597   000356                     CRCXORH         equ	854	;# 
   598   000357                     CRCCON0         equ	855	;# 
   599   000358                     CRCCON1         equ	856	;# 
   600   00035A                     SCANLADR        equ	858	;# 
   601   00035A                     SCANLADRL       equ	858	;# 
   602   00035B                     SCANLADRH       equ	859	;# 
   603   00035C                     SCANLADRU       equ	860	;# 
   604   00035D                     SCANHADR        equ	861	;# 
   605   00035D                     SCANHADRL       equ	861	;# 
   606   00035E                     SCANHADRH       equ	862	;# 
   607   00035F                     SCANHADRU       equ	863	;# 
   608   000360                     SCANCON0        equ	864	;# 
   609   000361                     SCANTRIG        equ	865	;# 
   610   000362                     IPR0            equ	866	;# 
   611   000363                     IPR1            equ	867	;# 
   612   000364                     IPR2            equ	868	;# 
   613   000365                     IPR3            equ	869	;# 
   614   000366                     IPR4            equ	870	;# 
   615   000367                     IPR5            equ	871	;# 
   616   000368                     IPR6            equ	872	;# 
   617   000369                     IPR7            equ	873	;# 
   618   00036A                     IPR8            equ	874	;# 
   619   00036B                     IPR9            equ	875	;# 
   620   00036C                     IPR10           equ	876	;# 
   621   00036D                     IPR11           equ	877	;# 
   622   00036E                     IPR12           equ	878	;# 
   623   00036F                     IPR13           equ	879	;# 
   624   000370                     IPR14           equ	880	;# 
   625   000371                     IPR15           equ	881	;# 
   626   000373                     STATUS_CSHAD    equ	883	;# 
   627   000374                     WREG_CSHAD      equ	884	;# 
   628   000375                     BSR_CSHAD       equ	885	;# 
   629   000376                     SHADCON         equ	886	;# 
   630   000377                     STATUS_SHAD     equ	887	;# 
   631   000378                     WREG_SHAD       equ	888	;# 
   632   000379                     BSR_SHAD        equ	889	;# 
   633   00037A                     PCLATH_SHAD     equ	890	;# 
   634   00037B                     PCLATU_SHAD     equ	891	;# 
   635   00037C                     FSR0SH          equ	892	;# 
   636   00037C                     FSR0L_SHAD      equ	892	;# 
   637   00037D                     FSR0H_SHAD      equ	893	;# 
   638   00037E                     FSR1SH          equ	894	;# 
   639   00037E                     FSR1L_SHAD      equ	894	;# 
   640   00037F                     FSR1H_SHAD      equ	895	;# 
   641   000380                     FSR2SH          equ	896	;# 
   642   000380                     FSR2L_SHAD      equ	896	;# 
   643   000381                     FSR2H_SHAD      equ	897	;# 
   644   000382                     PRODSH          equ	898	;# 
   645   000382                     PRODL_SHAD      equ	898	;# 
   646   000383                     PRODH_SHAD      equ	899	;# 
   647   0003BC                     CWG1CLK         equ	956	;# 
   648   0003BC                     CWG1CLKCON      equ	956	;# 
   649   0003BD                     CWG1ISM         equ	957	;# 
   650   0003BD                     CWG1DAT         equ	957	;# 
   651   0003BE                     CWG1DBR         equ	958	;# 
   652   0003BF                     CWG1DBF         equ	959	;# 
   653   0003C0                     CWG1CON0        equ	960	;# 
   654   0003C1                     CWG1CON1        equ	961	;# 
   655   0003C2                     CWG1AS0         equ	962	;# 
   656   0003C3                     CWG1AS1         equ	963	;# 
   657   0003C4                     CWG1STR         equ	964	;# 
   658   0003C5                     CWG2CLK         equ	965	;# 
   659   0003C5                     CWG2CLKCON      equ	965	;# 
   660   0003C6                     CWG2ISM         equ	966	;# 
   661   0003C6                     CWG2DAT         equ	966	;# 
   662   0003C7                     CWG2DBR         equ	967	;# 
   663   0003C8                     CWG2DBF         equ	968	;# 
   664   0003C9                     CWG2CON0        equ	969	;# 
   665   0003CA                     CWG2CON1        equ	970	;# 
   666   0003CB                     CWG2AS0         equ	971	;# 
   667   0003CC                     CWG2AS1         equ	972	;# 
   668   0003CD                     CWG2STR         equ	973	;# 
   669   0003CE                     CWG3CLK         equ	974	;# 
   670   0003CE                     CWG3CLKCON      equ	974	;# 
   671   0003CF                     CWG3ISM         equ	975	;# 
   672   0003CF                     CWG3DAT         equ	975	;# 
   673   0003D0                     CWG3DBR         equ	976	;# 
   674   0003D1                     CWG3DBF         equ	977	;# 
   675   0003D2                     CWG3CON0        equ	978	;# 
   676   0003D3                     CWG3CON1        equ	979	;# 
   677   0003D4                     CWG3AS0         equ	980	;# 
   678   0003D5                     CWG3AS1         equ	981	;# 
   679   0003D6                     CWG3STR         equ	982	;# 
   680   0003D7                     FVRCON          equ	983	;# 
   681   0003D8                     ADCPCON         equ	984	;# 
   682   0003D8                     ADCP            equ	984	;# 
   683   0003D9                     ADLTH           equ	985	;# 
   684   0003D9                     ADLTHL          equ	985	;# 
   685   0003DA                     ADLTHH          equ	986	;# 
   686   0003DB                     ADUTH           equ	987	;# 
   687   0003DB                     ADUTHL          equ	987	;# 
   688   0003DC                     ADUTHH          equ	988	;# 
   689   0003DD                     ADERR           equ	989	;# 
   690   0003DD                     ADERRL          equ	989	;# 
   691   0003DE                     ADERRH          equ	990	;# 
   692   0003DF                     ADSTPT          equ	991	;# 
   693   0003DF                     ADSTPTL         equ	991	;# 
   694   0003E0                     ADSTPTH         equ	992	;# 
   695   0003E1                     ADFLTR          equ	993	;# 
   696   0003E1                     ADFLTRL         equ	993	;# 
   697   0003E2                     ADFLTRH         equ	994	;# 
   698   0003E3                     ADACC           equ	995	;# 
   699   0003E3                     ADACCL          equ	995	;# 
   700   0003E4                     ADACCH          equ	996	;# 
   701   0003E5                     ADACCU          equ	997	;# 
   702   0003E6                     ADCNT           equ	998	;# 
   703   0003E7                     ADRPT           equ	999	;# 
   704   0003E8                     ADPREV          equ	1000	;# 
   705   0003E8                     ADPREVL         equ	1000	;# 
   706   0003E9                     ADPREVH         equ	1001	;# 
   707   0003EA                     ADRES           equ	1002	;# 
   708   0003EA                     ADRESL          equ	1002	;# 
   709   0003EB                     ADRESH          equ	1003	;# 
   710   0003EC                     ADPCH           equ	1004	;# 
   711   0003EE                     ADACQ           equ	1006	;# 
   712   0003EE                     ADACQL          equ	1006	;# 
   713   0003EF                     ADACQH          equ	1007	;# 
   714   0003F0                     ADCAP           equ	1008	;# 
   715   0003F1                     ADPRE           equ	1009	;# 
   716   0003F1                     ADPREL          equ	1009	;# 
   717   0003F2                     ADPREH          equ	1010	;# 
   718   0003F3                     ADCON0          equ	1011	;# 
   719   0003F4                     ADCON1          equ	1012	;# 
   720   0003F5                     ADCON2          equ	1013	;# 
   721   0003F6                     ADCON3          equ	1014	;# 
   722   0003F7                     ADSTAT          equ	1015	;# 
   723   0003F8                     ADREF           equ	1016	;# 
   724   0003F9                     ADACT           equ	1017	;# 
   725   0003FA                     ADCLK           equ	1018	;# 
   726   000400                     ANSELA          equ	1024	;# 
   727   000401                     WPUA            equ	1025	;# 
   728   000402                     ODCONA          equ	1026	;# 
   729   000403                     SLRCONA         equ	1027	;# 
   730   000404                     INLVLA          equ	1028	;# 
   731   000405                     IOCAP           equ	1029	;# 
   732   000406                     IOCAN           equ	1030	;# 
   733   000407                     IOCAF           equ	1031	;# 
   734   000408                     ANSELB          equ	1032	;# 
   735   000409                     WPUB            equ	1033	;# 
   736   00040A                     ODCONB          equ	1034	;# 
   737   00040B                     SLRCONB         equ	1035	;# 
   738   00040C                     INLVLB          equ	1036	;# 
   739   00040D                     IOCBP           equ	1037	;# 
   740   00040E                     IOCBN           equ	1038	;# 
   741   00040F                     IOCBF           equ	1039	;# 
   742   000410                     ANSELC          equ	1040	;# 
   743   000411                     WPUC            equ	1041	;# 
   744   000412                     ODCONC          equ	1042	;# 
   745   000413                     SLRCONC         equ	1043	;# 
   746   000414                     INLVLC          equ	1044	;# 
   747   000415                     IOCCP           equ	1045	;# 
   748   000416                     IOCCN           equ	1046	;# 
   749   000417                     IOCCF           equ	1047	;# 
   750   000418                     ANSELD          equ	1048	;# 
   751   000419                     WPUD            equ	1049	;# 
   752   00041A                     ODCOND          equ	1050	;# 
   753   00041B                     SLRCOND         equ	1051	;# 
   754   00041C                     INLVLD          equ	1052	;# 
   755   000420                     ANSELE          equ	1056	;# 
   756   000421                     WPUE            equ	1057	;# 
   757   000422                     ODCONE          equ	1058	;# 
   758   000423                     SLRCONE         equ	1059	;# 
   759   000424                     INLVLE          equ	1060	;# 
   760   000425                     IOCEP           equ	1061	;# 
   761   000426                     IOCEN           equ	1062	;# 
   762   000427                     IOCEF           equ	1063	;# 
   763   000428                     ANSELF          equ	1064	;# 
   764   000429                     WPUF            equ	1065	;# 
   765   00042A                     ODCONF          equ	1066	;# 
   766   00042B                     SLRCONF         equ	1067	;# 
   767   00042C                     INLVLF          equ	1068	;# 
   768   000440                     NCO1ACC         equ	1088	;# 
   769   000440                     NCO1ACCL        equ	1088	;# 
   770   000441                     NCO1ACCH        equ	1089	;# 
   771   000442                     NCO1ACCU        equ	1090	;# 
   772   000443                     NCO1INC         equ	1091	;# 
   773   000443                     NCO1INCL        equ	1091	;# 
   774   000444                     NCO1INCH        equ	1092	;# 
   775   000445                     NCO1INCU        equ	1093	;# 
   776   000446                     NCO1CON         equ	1094	;# 
   777   000447                     NCO1CLK         equ	1095	;# 
   778   000448                     NCO2ACC         equ	1096	;# 
   779   000448                     NCO2ACCL        equ	1096	;# 
   780   000449                     NCO2ACCH        equ	1097	;# 
   781   00044A                     NCO2ACCU        equ	1098	;# 
   782   00044B                     NCO2INC         equ	1099	;# 
   783   00044B                     NCO2INCL        equ	1099	;# 
   784   00044C                     NCO2INCH        equ	1100	;# 
   785   00044D                     NCO2INCU        equ	1101	;# 
   786   00044E                     NCO2CON         equ	1102	;# 
   787   00044F                     NCO2CLK         equ	1103	;# 
   788   000450                     NCO3ACC         equ	1104	;# 
   789   000450                     NCO3ACCL        equ	1104	;# 
   790   000451                     NCO3ACCH        equ	1105	;# 
   791   000452                     NCO3ACCU        equ	1106	;# 
   792   000453                     NCO3INC         equ	1107	;# 
   793   000453                     NCO3INCL        equ	1107	;# 
   794   000454                     NCO3INCH        equ	1108	;# 
   795   000455                     NCO3INCU        equ	1109	;# 
   796   000456                     NCO3CON         equ	1110	;# 
   797   000457                     NCO3CLK         equ	1111	;# 
   798   000459                     IVTLOCK         equ	1113	;# 
   799   00045A                     IVTAD           equ	1114	;# 
   800   00045A                     IVTADL          equ	1114	;# 
   801   00045B                     IVTADH          equ	1115	;# 
   802   00045C                     IVTADU          equ	1116	;# 
   803   00045D                     IVTBASE         equ	1117	;# 
   804   00045D                     IVTBASEL        equ	1117	;# 
   805   00045E                     IVTBASEH        equ	1118	;# 
   806   00045F                     IVTBASEU        equ	1119	;# 
   807   000460                     PWM1ERS         equ	1120	;# 
   808   000461                     PWM1CLK         equ	1121	;# 
   809   000462                     PWM1LDS         equ	1122	;# 
   810   000463                     PWM1PR          equ	1123	;# 
   811   000463                     PWM1PRL         equ	1123	;# 
   812   000464                     PWM1PRH         equ	1124	;# 
   813   000465                     PWM1CPRE        equ	1125	;# 
   814   000466                     PWM1PIPOS       equ	1126	;# 
   815   000467                     PWM1GIR         equ	1127	;# 
   816   000468                     PWM1GIE         equ	1128	;# 
   817   000469                     PWM1CON         equ	1129	;# 
   818   00046A                     PWM1S1CFG       equ	1130	;# 
   819   00046B                     PWM1S1P1        equ	1131	;# 
   820   00046B                     PWM1S1P1L       equ	1131	;# 
   821   00046C                     PWM1S1P1H       equ	1132	;# 
   822   00046D                     PWM1S1P2        equ	1133	;# 
   823   00046D                     PWM1S1P2L       equ	1133	;# 
   824   00046E                     PWM1S1P2H       equ	1134	;# 
   825   00046F                     PWM2ERS         equ	1135	;# 
   826   000470                     PWM2CLK         equ	1136	;# 
   827   000471                     PWM2LDS         equ	1137	;# 
   828   000472                     PWM2PR          equ	1138	;# 
   829   000472                     PWM2PRL         equ	1138	;# 
   830   000473                     PWM2PRH         equ	1139	;# 
   831   000474                     PWM2CPRE        equ	1140	;# 
   832   000475                     PWM2PIPOS       equ	1141	;# 
   833   000476                     PWM2GIR         equ	1142	;# 
   834   000477                     PWM2GIE         equ	1143	;# 
   835   000478                     PWM2CON         equ	1144	;# 
   836   000479                     PWM2S1CFG       equ	1145	;# 
   837   00047A                     PWM2S1P1        equ	1146	;# 
   838   00047A                     PWM2S1P1L       equ	1146	;# 
   839   00047B                     PWM2S1P1H       equ	1147	;# 
   840   00047C                     PWM2S1P2        equ	1148	;# 
   841   00047C                     PWM2S1P2L       equ	1148	;# 
   842   00047D                     PWM2S1P2H       equ	1149	;# 
   843   00047E                     PWM3ERS         equ	1150	;# 
   844   00047F                     PWM3CLK         equ	1151	;# 
   845   000480                     PWM3LDS         equ	1152	;# 
   846   000481                     PWM3PR          equ	1153	;# 
   847   000481                     PWM3PRL         equ	1153	;# 
   848   000482                     PWM3PRH         equ	1154	;# 
   849   000483                     PWM3CPRE        equ	1155	;# 
   850   000484                     PWM3PIPOS       equ	1156	;# 
   851   000485                     PWM3GIR         equ	1157	;# 
   852   000486                     PWM3GIE         equ	1158	;# 
   853   000487                     PWM3CON         equ	1159	;# 
   854   000488                     PWM3S1CFG       equ	1160	;# 
   855   000489                     PWM3S1P1        equ	1161	;# 
   856   000489                     PWM3S1P1L       equ	1161	;# 
   857   00048A                     PWM3S1P1H       equ	1162	;# 
   858   00048B                     PWM3S1P2        equ	1163	;# 
   859   00048B                     PWM3S1P2L       equ	1163	;# 
   860   00048C                     PWM3S1P2H       equ	1164	;# 
   861   00049C                     PWMLOAD         equ	1180	;# 
   862   00049D                     PWMEN           equ	1181	;# 
   863   00049E                     PIE0            equ	1182	;# 
   864   00049F                     PIE1            equ	1183	;# 
   865   0004A0                     PIE2            equ	1184	;# 
   866   0004A1                     PIE3            equ	1185	;# 
   867   0004A2                     PIE4            equ	1186	;# 
   868   0004A3                     PIE5            equ	1187	;# 
   869   0004A4                     PIE6            equ	1188	;# 
   870   0004A5                     PIE7            equ	1189	;# 
   871   0004A6                     PIE8            equ	1190	;# 
   872   0004A7                     PIE9            equ	1191	;# 
   873   0004A8                     PIE10           equ	1192	;# 
   874   0004A9                     PIE11           equ	1193	;# 
   875   0004AA                     PIE12           equ	1194	;# 
   876   0004AB                     PIE13           equ	1195	;# 
   877   0004AC                     PIE14           equ	1196	;# 
   878   0004AD                     PIE15           equ	1197	;# 
   879   0004AE                     PIR0            equ	1198	;# 
   880   0004AF                     PIR1            equ	1199	;# 
   881   0004B0                     PIR2            equ	1200	;# 
   882   0004B1                     PIR3            equ	1201	;# 
   883   0004B2                     PIR4            equ	1202	;# 
   884   0004B3                     PIR5            equ	1203	;# 
   885   0004B4                     PIR6            equ	1204	;# 
   886   0004B5                     PIR7            equ	1205	;# 
   887   0004B6                     PIR8            equ	1206	;# 
   888   0004B7                     PIR9            equ	1207	;# 
   889   0004B8                     PIR10           equ	1208	;# 
   890   0004B9                     PIR11           equ	1209	;# 
   891   0004BA                     PIR12           equ	1210	;# 
   892   0004BB                     PIR13           equ	1211	;# 
   893   0004BC                     PIR14           equ	1212	;# 
   894   0004BD                     PIR15           equ	1213	;# 
   895   0004BE                     LATA            equ	1214	;# 
   896   0004BF                     LATB            equ	1215	;# 
   897   0004C0                     LATC            equ	1216	;# 
   898   0004C1                     LATD            equ	1217	;# 
   899   0004C2                     LATE            equ	1218	;# 
   900   0004C3                     LATF            equ	1219	;# 
   901   0004C6                     TRISA           equ	1222	;# 
   902   0004C7                     TRISB           equ	1223	;# 
   903   0004C8                     TRISC           equ	1224	;# 
   904   0004C9                     TRISD           equ	1225	;# 
   905   0004CA                     TRISE           equ	1226	;# 
   906   0004CB                     TRISF           equ	1227	;# 
   907   0004CE                     PORTA           equ	1230	;# 
   908   0004CF                     PORTB           equ	1231	;# 
   909   0004D0                     PORTC           equ	1232	;# 
   910   0004D1                     PORTD           equ	1233	;# 
   911   0004D2                     PORTE           equ	1234	;# 
   912   0004D3                     PORTF           equ	1235	;# 
   913   0004D6                     INTCON0         equ	1238	;# 
   914   0004D7                     INTCON1         equ	1239	;# 
   915   0004D8                     STATUS          equ	1240	;# 
   916   0004D9                     FSR2            equ	1241	;# 
   917   0004D9                     FSR2L           equ	1241	;# 
   918   0004DA                     FSR2H           equ	1242	;# 
   919   0004DB                     PLUSW2          equ	1243	;# 
   920   0004DC                     PREINC2         equ	1244	;# 
   921   0004DD                     POSTDEC2        equ	1245	;# 
   922   0004DE                     POSTINC2        equ	1246	;# 
   923   0004DF                     INDF2           equ	1247	;# 
   924   0004E0                     BSR             equ	1248	;# 
   925   0004E1                     FSR1            equ	1249	;# 
   926   0004E1                     FSR1L           equ	1249	;# 
   927   0004E2                     FSR1H           equ	1250	;# 
   928   0004E3                     PLUSW1          equ	1251	;# 
   929   0004E4                     PREINC1         equ	1252	;# 
   930   0004E5                     POSTDEC1        equ	1253	;# 
   931   0004E6                     POSTINC1        equ	1254	;# 
   932   0004E7                     INDF1           equ	1255	;# 
   933   0004E8                     WREG            equ	1256	;# 
   934   0004E9                     FSR0            equ	1257	;# 
   935   0004E9                     FSR0L           equ	1257	;# 
   936   0004EA                     FSR0H           equ	1258	;# 
   937   0004EB                     PLUSW0          equ	1259	;# 
   938   0004EC                     PREINC0         equ	1260	;# 
   939   0004ED                     POSTDEC0        equ	1261	;# 
   940   0004EE                     POSTINC0        equ	1262	;# 
   941   0004EF                     INDF0           equ	1263	;# 
   942   0004F0                     PCON0           equ	1264	;# 
   943   0004F1                     PCON1           equ	1265	;# 
   944   0004F2                     CPUDOZE         equ	1266	;# 
   945   0004F3                     PROD            equ	1267	;# 
   946   0004F3                     PRODL           equ	1267	;# 
   947   0004F4                     PRODH           equ	1268	;# 
   948   0004F5                     TABLAT          equ	1269	;# 
   949   0004F6                     TBLPTR          equ	1270	;# 
   950   0004F6                     TBLPTRL         equ	1270	;# 
   951   0004F7                     TBLPTRH         equ	1271	;# 
   952   0004F8                     TBLPTRU         equ	1272	;# 
   953   0004F9                     PCLAT           equ	1273	;# 
   954   0004F9                     PCL             equ	1273	;# 
   955   0004FA                     PCLATH          equ	1274	;# 
   956   0004FB                     PCLATU          equ	1275	;# 
   957   0004FC                     STKPTR          equ	1276	;# 
   958   0004FD                     TOS             equ	1277	;# 
   959   0004FD                     TOSL            equ	1277	;# 
   960   0004FE                     TOSH            equ	1278	;# 
   961   0004FF                     TOSU            equ	1279	;# 
   962   000039                     CLKRCON         equ	57	;# 
   963   00003A                     CLKRCLK         equ	58	;# 
   964   000040                     NVMCON0         equ	64	;# 
   965   000041                     NVMCON1         equ	65	;# 
   966   000042                     NVMLOCK         equ	66	;# 
   967   000043                     NVMADR          equ	67	;# 
   968   000043                     NVMADRL         equ	67	;# 
   969   000044                     NVMADRH         equ	68	;# 
   970   000045                     NVMADRU         equ	69	;# 
   971   000046                     NVMDAT          equ	70	;# 
   972   000046                     NVMDATL         equ	70	;# 
   973   000047                     NVMDATH         equ	71	;# 
   974   000048                     VREGCON         equ	72	;# 
   975   000049                     BORCON          equ	73	;# 
   976   00004A                     HLVDCON0        equ	74	;# 
   977   00004B                     HLVDCON1        equ	75	;# 
   978   00004C                     ZCDCON          equ	76	;# 
   979   000060                     PMD0            equ	96	;# 
   980   000061                     PMD1            equ	97	;# 
   981   000063                     PMD3            equ	99	;# 
   982   000064                     PMD4            equ	100	;# 
   983   000065                     PMD5            equ	101	;# 
   984   000066                     PMD6            equ	102	;# 
   985   000067                     PMD7            equ	103	;# 
   986   000068                     PMD8            equ	104	;# 
   987   00006A                     MD1CON0         equ	106	;# 
   988   00006B                     MD1CON1         equ	107	;# 
   989   00006C                     MD1SRC          equ	108	;# 
   990   00006D                     MD1CARL         equ	109	;# 
   991   00006E                     MD1CARH         equ	110	;# 
   992   00006F                     CMOUT           equ	111	;# 
   993   000070                     CM1CON0         equ	112	;# 
   994   000071                     CM1CON1         equ	113	;# 
   995   000072                     CM1NCH          equ	114	;# 
   996   000073                     CM1PCH          equ	115	;# 
   997   000074                     CM2CON0         equ	116	;# 
   998   000075                     CM2CON1         equ	117	;# 
   999   000076                     CM2NCH          equ	118	;# 
  1000   000077                     CM2PCH          equ	119	;# 
  1001   000078                     WDTCON0         equ	120	;# 
  1002   000079                     WDTCON1         equ	121	;# 
  1003   00007A                     WDTPS           equ	122	;# 
  1004   00007A                     WDTPSL          equ	122	;# 
  1005   00007B                     WDTPSH          equ	123	;# 
  1006   00007C                     WDTTMR          equ	124	;# 
  1007   00007D                     DAC1DAT         equ	125	;# 
  1008   00007D                     DAC1DATL        equ	125	;# 
  1009   00007F                     DAC1CON         equ	127	;# 
  1010   000080                     SPI1RXB         equ	128	;# 
  1011   000081                     SPI1TXB         equ	129	;# 
  1012   000082                     SPI1TCNT        equ	130	;# 
  1013   000082                     SPI1TCNTL       equ	130	;# 
  1014   000083                     SPI1TCNTH       equ	131	;# 
  1015   000084                     SPI1CON0        equ	132	;# 
  1016   000085                     SPI1CON1        equ	133	;# 
  1017   000086                     SPI1CON2        equ	134	;# 
  1018   000087                     SPI1STATUS      equ	135	;# 
  1019   000088                     SPI1TWIDTH      equ	136	;# 
  1020   000089                     SPI1BAUD        equ	137	;# 
  1021   00008A                     SPI1INTF        equ	138	;# 
  1022   00008B                     SPI1INTE        equ	139	;# 
  1023   00008C                     SPI1CLK         equ	140	;# 
  1024   00008D                     SPI2RXB         equ	141	;# 
  1025   00008E                     SPI2TXB         equ	142	;# 
  1026   00008F                     SPI2TCNT        equ	143	;# 
  1027   00008F                     SPI2TCNTL       equ	143	;# 
  1028   000090                     SPI2TCNTH       equ	144	;# 
  1029   000091                     SPI2CON0        equ	145	;# 
  1030   000092                     SPI2CON1        equ	146	;# 
  1031   000093                     SPI2CON2        equ	147	;# 
  1032   000094                     SPI2STATUS      equ	148	;# 
  1033   000095                     SPI2TWIDTH      equ	149	;# 
  1034   000096                     SPI2BAUD        equ	150	;# 
  1035   000097                     SPI2INTF        equ	151	;# 
  1036   000098                     SPI2INTE        equ	152	;# 
  1037   000099                     SPI2CLK         equ	153	;# 
  1038   0000AC                     ACTCON          equ	172	;# 
  1039   0000AD                     OSCCON1         equ	173	;# 
  1040   0000AE                     OSCCON2         equ	174	;# 
  1041   0000AF                     OSCCON3         equ	175	;# 
  1042   0000B0                     OSCTUNE         equ	176	;# 
  1043   0000B1                     OSCFRQ          equ	177	;# 
  1044   0000B1                     OSCFREQ         equ	177	;# 
  1045   0000B2                     OSCSTAT         equ	178	;# 
  1046   0000B2                     OSCSTAT1        equ	178	;# 
  1047   0000B3                     OSCEN           equ	179	;# 
  1048   0000B4                     PRLOCK          equ	180	;# 
  1049   0000B5                     SCANPR          equ	181	;# 
  1050   0000B6                     DMA1PR          equ	182	;# 
  1051   0000B7                     DMA2PR          equ	183	;# 
  1052   0000B8                     DMA3PR          equ	184	;# 
  1053   0000B9                     DMA4PR          equ	185	;# 
  1054   0000BA                     DMA5PR          equ	186	;# 
  1055   0000BB                     DMA6PR          equ	187	;# 
  1056   0000BE                     MAINPR          equ	190	;# 
  1057   0000BF                     ISRPR           equ	191	;# 
  1058   0000D4                     CLCDATA         equ	212	;# 
  1059   0000D5                     CLCSELECT       equ	213	;# 
  1060   0000D6                     CLCnCON         equ	214	;# 
  1061   0000D7                     CLCnPOL         equ	215	;# 
  1062   0000D8                     CLCnSEL0        equ	216	;# 
  1063   0000D9                     CLCnSEL1        equ	217	;# 
  1064   0000DA                     CLCnSEL2        equ	218	;# 
  1065   0000DB                     CLCnSEL3        equ	219	;# 
  1066   0000DC                     CLCnGLS0        equ	220	;# 
  1067   0000DD                     CLCnGLS1        equ	221	;# 
  1068   0000DE                     CLCnGLS2        equ	222	;# 
  1069   0000DF                     CLCnGLS3        equ	223	;# 
  1070   0000E8                     DMASELECT       equ	232	;# 
  1071   0000E9                     DMAnBUF         equ	233	;# 
  1072   0000EA                     DMAnDCNT        equ	234	;# 
  1073   0000EA                     DMAnDCNTL       equ	234	;# 
  1074   0000EB                     DMAnDCNTH       equ	235	;# 
  1075   0000EC                     DMAnDPTR        equ	236	;# 
  1076   0000EC                     DMAnDPTRL       equ	236	;# 
  1077   0000ED                     DMAnDPTRH       equ	237	;# 
  1078   0000EE                     DMAnDSZ         equ	238	;# 
  1079   0000EE                     DMAnDSZL        equ	238	;# 
  1080   0000EF                     DMAnDSZH        equ	239	;# 
  1081   0000F0                     DMAnDSA         equ	240	;# 
  1082   0000F0                     DMAnDSAL        equ	240	;# 
  1083   0000F1                     DMAnDSAH        equ	241	;# 
  1084   0000F2                     DMAnSCNT        equ	242	;# 
  1085   0000F2                     DMAnSCNTL       equ	242	;# 
  1086   0000F3                     DMAnSCNTH       equ	243	;# 
  1087   0000F4                     DMAnSPTR        equ	244	;# 
  1088   0000F4                     DMAnSPTRL       equ	244	;# 
  1089   0000F5                     DMAnSPTRH       equ	245	;# 
  1090   0000F6                     DMAnSPTRU       equ	246	;# 
  1091   0000F7                     DMAnSSZ         equ	247	;# 
  1092   0000F7                     DMAnSSZL        equ	247	;# 
  1093   0000F8                     DMAnSSZH        equ	248	;# 
  1094   0000F9                     DMAnSSA         equ	249	;# 
  1095   0000F9                     DMAnSSAL        equ	249	;# 
  1096   0000FA                     DMAnSSAH        equ	250	;# 
  1097   0000FB                     DMAnSSAU        equ	251	;# 
  1098   0000FC                     DMAnCON0        equ	252	;# 
  1099   0000FD                     DMAnCON1        equ	253	;# 
  1100   0000FE                     DMAnAIRQ        equ	254	;# 
  1101   0000FF                     DMAnSIRQ        equ	255	;# 
  1102   000200                     PPSLOCK         equ	512	;# 
  1103   000201                     RA0PPS          equ	513	;# 
  1104   000202                     RA1PPS          equ	514	;# 
  1105   000203                     RA2PPS          equ	515	;# 
  1106   000204                     RA3PPS          equ	516	;# 
  1107   000205                     RA4PPS          equ	517	;# 
  1108   000206                     RA5PPS          equ	518	;# 
  1109   000207                     RA6PPS          equ	519	;# 
  1110   000208                     RA7PPS          equ	520	;# 
  1111   000209                     RB0PPS          equ	521	;# 
  1112   00020A                     RB1PPS          equ	522	;# 
  1113   00020B                     RB2PPS          equ	523	;# 
  1114   00020C                     RB3PPS          equ	524	;# 
  1115   00020D                     RB4PPS          equ	525	;# 
  1116   00020E                     RB5PPS          equ	526	;# 
  1117   00020F                     RB6PPS          equ	527	;# 
  1118   000210                     RB7PPS          equ	528	;# 
  1119   000211                     RC0PPS          equ	529	;# 
  1120   000212                     RC1PPS          equ	530	;# 
  1121   000213                     RC2PPS          equ	531	;# 
  1122   000214                     RC3PPS          equ	532	;# 
  1123   000215                     RC4PPS          equ	533	;# 
  1124   000216                     RC5PPS          equ	534	;# 
  1125   000217                     RC6PPS          equ	535	;# 
  1126   000218                     RC7PPS          equ	536	;# 
  1127   000219                     RD0PPS          equ	537	;# 
  1128   00021A                     RD1PPS          equ	538	;# 
  1129   00021B                     RD2PPS          equ	539	;# 
  1130   00021C                     RD3PPS          equ	540	;# 
  1131   00021D                     RD4PPS          equ	541	;# 
  1132   00021E                     RD5PPS          equ	542	;# 
  1133   00021F                     RD6PPS          equ	543	;# 
  1134   000220                     RD7PPS          equ	544	;# 
  1135   000221                     RE0PPS          equ	545	;# 
  1136   000222                     RE1PPS          equ	546	;# 
  1137   000223                     RE2PPS          equ	547	;# 
  1138   000229                     RF0PPS          equ	553	;# 
  1139   00022A                     RF1PPS          equ	554	;# 
  1140   00022B                     RF2PPS          equ	555	;# 
  1141   00022C                     RF3PPS          equ	556	;# 
  1142   00022D                     RF4PPS          equ	557	;# 
  1143   00022E                     RF5PPS          equ	558	;# 
  1144   00022F                     RF6PPS          equ	559	;# 
  1145   000230                     RF7PPS          equ	560	;# 
  1146   00023E                     INT0PPS         equ	574	;# 
  1147   00023F                     INT1PPS         equ	575	;# 
  1148   000240                     INT2PPS         equ	576	;# 
  1149   000241                     T0CKIPPS        equ	577	;# 
  1150   000242                     T1CKIPPS        equ	578	;# 
  1151   000243                     T1GPPS          equ	579	;# 
  1152   000244                     T3CKIPPS        equ	580	;# 
  1153   000245                     T3GPPS          equ	581	;# 
  1154   000246                     T5CKIPPS        equ	582	;# 
  1155   000247                     T5GPPS          equ	583	;# 
  1156   000248                     T2INPPS         equ	584	;# 
  1157   000249                     T4INPPS         equ	585	;# 
  1158   00024A                     T6INPPS         equ	586	;# 
  1159   00024F                     CCP1PPS         equ	591	;# 
  1160   000250                     CCP2PPS         equ	592	;# 
  1161   000251                     CCP3PPS         equ	593	;# 
  1162   000253                     PWM1ERSPPS      equ	595	;# 
  1163   000254                     PWM2ERSPPS      equ	596	;# 
  1164   000255                     PWM3ERSPPS      equ	597	;# 
  1165   000257                     PWMIN0PPS       equ	599	;# 
  1166   000258                     PWMIN1PPS       equ	600	;# 
  1167   000259                     SMT1WINPPS      equ	601	;# 
  1168   00025A                     SMT1SIGPPS      equ	602	;# 
  1169   00025B                     CWG1PPS         equ	603	;# 
  1170   00025B                     CWG1INPPS       equ	603	;# 
  1171   00025C                     CWG2PPS         equ	604	;# 
  1172   00025C                     CWG2INPPS       equ	604	;# 
  1173   00025D                     CWG3PPS         equ	605	;# 
  1174   00025D                     CWG3INPPS       equ	605	;# 
  1175   00025E                     MD1CARLPPS      equ	606	;# 
  1176   00025E                     MDCARLPPS       equ	606	;# 
  1177   00025F                     MD1CARHPPS      equ	607	;# 
  1178   00025F                     MDCARHPPS       equ	607	;# 
  1179   000260                     MD1SRCPPS       equ	608	;# 
  1180   000260                     MDSRCPPS        equ	608	;# 
  1181   000261                     CLCIN0PPS       equ	609	;# 
  1182   000262                     CLCIN1PPS       equ	610	;# 
  1183   000263                     CLCIN2PPS       equ	611	;# 
  1184   000264                     CLCIN3PPS       equ	612	;# 
  1185   000265                     CLCIN4PPS       equ	613	;# 
  1186   000266                     CLCIN5PPS       equ	614	;# 
  1187   000267                     CLCIN6PPS       equ	615	;# 
  1188   000268                     CLCIN7PPS       equ	616	;# 
  1189   000269                     ADACTPPS        equ	617	;# 
  1190   00026A                     SPI1SCKPPS      equ	618	;# 
  1191   00026B                     SPI1SDIPPS      equ	619	;# 
  1192   00026C                     SPI1SSPPS       equ	620	;# 
  1193   00026D                     SPI2SCKPPS      equ	621	;# 
  1194   00026E                     SPI2SDIPPS      equ	622	;# 
  1195   00026F                     SPI2SSPPS       equ	623	;# 
  1196   000270                     I2C1SDAPPS      equ	624	;# 
  1197   000271                     I2C1SCLPPS      equ	625	;# 
  1198   000272                     U1RXPPS         equ	626	;# 
  1199   000273                     U1CTSPPS        equ	627	;# 
  1200   000274                     U2RXPPS         equ	628	;# 
  1201   000275                     U2CTSPPS        equ	629	;# 
  1202   000276                     U3RXPPS         equ	630	;# 
  1203   000277                     U3CTSPPS        equ	631	;# 
  1204   000278                     U4RXPPS         equ	632	;# 
  1205   000279                     U4CTSPPS        equ	633	;# 
  1206   00027A                     U5RXPPS         equ	634	;# 
  1207   00027B                     U5CTSPPS        equ	635	;# 
  1208   000286                     RC4I2C          equ	646	;# 
  1209   000287                     RC3I2C          equ	647	;# 
  1210   000288                     RB2I2C          equ	648	;# 
  1211   000289                     RB1I2C          equ	649	;# 
  1212   00028B                     I2C1RXB         equ	651	;# 
  1213   00028C                     I2C1TXB         equ	652	;# 
  1214   00028D                     I2C1CNT         equ	653	;# 
  1215   00028E                     I2C1ADB0        equ	654	;# 
  1216   00028F                     I2C1ADB1        equ	655	;# 
  1217   000290                     I2C1ADR0        equ	656	;# 
  1218   000291                     I2C1ADR1        equ	657	;# 
  1219   000292                     I2C1ADR2        equ	658	;# 
  1220   000293                     I2C1ADR3        equ	659	;# 
  1221   000294                     I2C1CON0        equ	660	;# 
  1222   000295                     I2C1CON1        equ	661	;# 
  1223   000296                     I2C1CON2        equ	662	;# 
  1224   000297                     I2C1ERR         equ	663	;# 
  1225   000298                     I2C1STAT0       equ	664	;# 
  1226   000299                     I2C1STAT1       equ	665	;# 
  1227   00029A                     I2C1PIR         equ	666	;# 
  1228   00029B                     I2C1PIE         equ	667	;# 
  1229   00029C                     I2C1CLK         equ	668	;# 
  1230   00029D                     I2C1BTO         equ	669	;# 
  1231   0002A1                     U1RXB           equ	673	;# 
  1232   0002A1                     U1RXBL          equ	673	;# 
  1233   0002A2                     U1RXCHK         equ	674	;# 
  1234   0002A3                     U1TXB           equ	675	;# 
  1235   0002A3                     U1TXBL          equ	675	;# 
  1236   0002A4                     U1TXCHK         equ	676	;# 
  1237   0002A5                     U1P1            equ	677	;# 
  1238   0002A5                     U1P1L           equ	677	;# 
  1239   0002A6                     U1P1H           equ	678	;# 
  1240   0002A7                     U1P2            equ	679	;# 
  1241   0002A7                     U1P2L           equ	679	;# 
  1242   0002A8                     U1P2H           equ	680	;# 
  1243   0002A9                     U1P3            equ	681	;# 
  1244   0002A9                     U1P3L           equ	681	;# 
  1245   0002AA                     U1P3H           equ	682	;# 
  1246   0002AB                     U1CON0          equ	683	;# 
  1247   0002AC                     U1CON1          equ	684	;# 
  1248   0002AD                     U1CON2          equ	685	;# 
  1249   0002AE                     U1BRG           equ	686	;# 
  1250   0002AE                     U1BRGL          equ	686	;# 
  1251   0002AF                     U1BRGH          equ	687	;# 
  1252   0002B0                     U1FIFO          equ	688	;# 
  1253   0002B1                     U1UIR           equ	689	;# 
  1254   0002B2                     U1ERRIR         equ	690	;# 
  1255   0002B3                     U1ERRIE         equ	691	;# 
  1256   0002B4                     U2RXB           equ	692	;# 
  1257   0002B4                     U2RXBL          equ	692	;# 
  1258   0002B6                     U2TXB           equ	694	;# 
  1259   0002B6                     U2TXBL          equ	694	;# 
  1260   0002B8                     U2P1            equ	696	;# 
  1261   0002B8                     U2P1L           equ	696	;# 
  1262   0002BA                     U2P2            equ	698	;# 
  1263   0002BA                     U2P2L           equ	698	;# 
  1264   0002BC                     U2P3            equ	700	;# 
  1265   0002BC                     U2P3L           equ	700	;# 
  1266   0002BE                     U2CON0          equ	702	;# 
  1267   0002BF                     U2CON1          equ	703	;# 
  1268   0002C0                     U2CON2          equ	704	;# 
  1269   0002C1                     U2BRG           equ	705	;# 
  1270   0002C1                     U2BRGL          equ	705	;# 
  1271   0002C2                     U2BRGH          equ	706	;# 
  1272   0002C3                     U2FIFO          equ	707	;# 
  1273   0002C4                     U2UIR           equ	708	;# 
  1274   0002C5                     U2ERRIR         equ	709	;# 
  1275   0002C6                     U2ERRIE         equ	710	;# 
  1276   0002C7                     U3RXB           equ	711	;# 
  1277   0002C7                     U3RXBL          equ	711	;# 
  1278   0002C9                     U3TXB           equ	713	;# 
  1279   0002C9                     U3TXBL          equ	713	;# 
  1280   0002CB                     U3P1            equ	715	;# 
  1281   0002CB                     U3P1L           equ	715	;# 
  1282   0002CD                     U3P2            equ	717	;# 
  1283   0002CD                     U3P2L           equ	717	;# 
  1284   0002CF                     U3P3            equ	719	;# 
  1285   0002CF                     U3P3L           equ	719	;# 
  1286   0002D1                     U3CON0          equ	721	;# 
  1287   0002D2                     U3CON1          equ	722	;# 
  1288   0002D3                     U3CON2          equ	723	;# 
  1289   0002D4                     U3BRG           equ	724	;# 
  1290   0002D4                     U3BRGL          equ	724	;# 
  1291   0002D5                     U3BRGH          equ	725	;# 
  1292   0002D6                     U3FIFO          equ	726	;# 
  1293   0002D7                     U3UIR           equ	727	;# 
  1294   0002D8                     U3ERRIR         equ	728	;# 
  1295   0002D9                     U3ERRIE         equ	729	;# 
  1296   0002DA                     U4RXB           equ	730	;# 
  1297   0002DA                     U4RXBL          equ	730	;# 
  1298   0002DC                     U4TXB           equ	732	;# 
  1299   0002DC                     U4TXBL          equ	732	;# 
  1300   0002DE                     U4P1            equ	734	;# 
  1301   0002DE                     U4P1L           equ	734	;# 
  1302   0002E0                     U4P2            equ	736	;# 
  1303   0002E0                     U4P2L           equ	736	;# 
  1304   0002E2                     U4P3            equ	738	;# 
  1305   0002E2                     U4P3L           equ	738	;# 
  1306   0002E4                     U4CON0          equ	740	;# 
  1307   0002E5                     U4CON1          equ	741	;# 
  1308   0002E6                     U4CON2          equ	742	;# 
  1309   0002E7                     U4BRG           equ	743	;# 
  1310   0002E7                     U4BRGL          equ	743	;# 
  1311   0002E8                     U4BRGH          equ	744	;# 
  1312   0002E9                     U4FIFO          equ	745	;# 
  1313   0002EA                     U4UIR           equ	746	;# 
  1314   0002EB                     U4ERRIR         equ	747	;# 
  1315   0002EC                     U4ERRIE         equ	748	;# 
  1316   0002ED                     U5RXB           equ	749	;# 
  1317   0002ED                     U5RXBL          equ	749	;# 
  1318   0002EF                     U5TXB           equ	751	;# 
  1319   0002EF                     U5TXBL          equ	751	;# 
  1320   0002F1                     U5P1            equ	753	;# 
  1321   0002F1                     U5P1L           equ	753	;# 
  1322   0002F3                     U5P2            equ	755	;# 
  1323   0002F3                     U5P2L           equ	755	;# 
  1324   0002F5                     U5P3            equ	757	;# 
  1325   0002F5                     U5P3L           equ	757	;# 
  1326   0002F7                     U5CON0          equ	759	;# 
  1327   0002F8                     U5CON1          equ	760	;# 
  1328   0002F9                     U5CON2          equ	761	;# 
  1329   0002FA                     U5BRG           equ	762	;# 
  1330   0002FA                     U5BRGL          equ	762	;# 
  1331   0002FB                     U5BRGH          equ	763	;# 
  1332   0002FC                     U5FIFO          equ	764	;# 
  1333   0002FD                     U5UIR           equ	765	;# 
  1334   0002FE                     U5ERRIR         equ	766	;# 
  1335   0002FF                     U5ERRIE         equ	767	;# 
  1336   000300                     SMT1TMR         equ	768	;# 
  1337   000300                     SMT1TMRL        equ	768	;# 
  1338   000301                     SMT1TMRH        equ	769	;# 
  1339   000302                     SMT1TMRU        equ	770	;# 
  1340   000303                     SMT1CPR         equ	771	;# 
  1341   000303                     SMT1CPRL        equ	771	;# 
  1342   000304                     SMT1CPRH        equ	772	;# 
  1343   000305                     SMT1CPRU        equ	773	;# 
  1344   000306                     SMT1CPW         equ	774	;# 
  1345   000306                     SMT1CPWL        equ	774	;# 
  1346   000307                     SMT1CPWH        equ	775	;# 
  1347   000308                     SMT1CPWU        equ	776	;# 
  1348   000309                     SMT1PR          equ	777	;# 
  1349   000309                     SMT1PRL         equ	777	;# 
  1350   00030A                     SMT1PRH         equ	778	;# 
  1351   00030B                     SMT1PRU         equ	779	;# 
  1352   00030C                     SMT1CON0        equ	780	;# 
  1353   00030D                     SMT1CON1        equ	781	;# 
  1354   00030E                     SMT1STAT        equ	782	;# 
  1355   00030F                     SMT1CLK         equ	783	;# 
  1356   000310                     SMT1SIG         equ	784	;# 
  1357   000311                     SMT1WIN         equ	785	;# 
  1358   000318                     TMR0L           equ	792	;# 
  1359   000318                     TMR0            equ	792	;# 
  1360   000319                     TMR0H           equ	793	;# 
  1361   000319                     PR0             equ	793	;# 
  1362   00031A                     T0CON0          equ	794	;# 
  1363   00031B                     T0CON1          equ	795	;# 
  1364   00031C                     TMR1            equ	796	;# 
  1365   00031C                     TMR1L           equ	796	;# 
  1366   00031D                     TMR1H           equ	797	;# 
  1367   00031E                     T1CON           equ	798	;# 
  1368   00031E                     TMR1CON         equ	798	;# 
  1369   00031F                     T1GCON          equ	799	;# 
  1370   00031F                     TMR1GCON        equ	799	;# 
  1371   000320                     T1GATE          equ	800	;# 
  1372   000320                     TMR1GATE        equ	800	;# 
  1373   000321                     T1CLK           equ	801	;# 
  1374   000321                     TMR1CLK         equ	801	;# 
  1375   000321                     PR1             equ	801	;# 
  1376   000322                     T2TMR           equ	802	;# 
  1377   000322                     TMR2            equ	802	;# 
  1378   000323                     T2PR            equ	803	;# 
  1379   000323                     PR2             equ	803	;# 
  1380   000324                     T2CON           equ	804	;# 
  1381   000325                     T2HLT           equ	805	;# 
  1382   000326                     T2CLKCON        equ	806	;# 
  1383   000326                     T2CLK           equ	806	;# 
  1384   000327                     T2RST           equ	807	;# 
  1385   000328                     TMR3            equ	808	;# 
  1386   000328                     TMR3L           equ	808	;# 
  1387   000329                     TMR3H           equ	809	;# 
  1388   00032A                     T3CON           equ	810	;# 
  1389   00032A                     TMR3CON         equ	810	;# 
  1390   00032B                     T3GCON          equ	811	;# 
  1391   00032B                     TMR3GCON        equ	811	;# 
  1392   00032C                     T3GATE          equ	812	;# 
  1393   00032C                     TMR3GATE        equ	812	;# 
  1394   00032D                     T3CLK           equ	813	;# 
  1395   00032D                     TMR3CLK         equ	813	;# 
  1396   00032D                     PR3             equ	813	;# 
  1397   00032E                     T4TMR           equ	814	;# 
  1398   00032E                     TMR4            equ	814	;# 
  1399   00032F                     T4PR            equ	815	;# 
  1400   00032F                     PR4             equ	815	;# 
  1401   000330                     T4CON           equ	816	;# 
  1402   000331                     T4HLT           equ	817	;# 
  1403   000332                     T4CLKCON        equ	818	;# 
  1404   000332                     T4CLK           equ	818	;# 
  1405   000333                     T4RST           equ	819	;# 
  1406   000334                     TMR5            equ	820	;# 
  1407   000334                     TMR5L           equ	820	;# 
  1408   000335                     TMR5H           equ	821	;# 
  1409   000336                     T5CON           equ	822	;# 
  1410   000336                     TMR5CON         equ	822	;# 
  1411   000337                     T5GCON          equ	823	;# 
  1412   000337                     TMR5GCON        equ	823	;# 
  1413   000338                     T5GATE          equ	824	;# 
  1414   000338                     TMR5GATE        equ	824	;# 
  1415   000339                     T5CLK           equ	825	;# 
  1416   000339                     TMR5CLK         equ	825	;# 
  1417   000339                     PR5             equ	825	;# 
  1418   00033A                     T6TMR           equ	826	;# 
  1419   00033A                     TMR6            equ	826	;# 
  1420   00033B                     T6PR            equ	827	;# 
  1421   00033B                     PR6             equ	827	;# 
  1422   00033C                     T6CON           equ	828	;# 
  1423   00033D                     T6HLT           equ	829	;# 
  1424   00033E                     T6CLKCON        equ	830	;# 
  1425   00033E                     T6CLK           equ	830	;# 
  1426   00033F                     T6RST           equ	831	;# 
  1427   000340                     CCPR1           equ	832	;# 
  1428   000340                     CCPR1L          equ	832	;# 
  1429   000341                     CCPR1H          equ	833	;# 
  1430   000342                     CCP1CON         equ	834	;# 
  1431   000343                     CCP1CAP         equ	835	;# 
  1432   000344                     CCPR2           equ	836	;# 
  1433   000344                     CCPR2L          equ	836	;# 
  1434   000345                     CCPR2H          equ	837	;# 
  1435   000346                     CCP2CON         equ	838	;# 
  1436   000347                     CCP2CAP         equ	839	;# 
  1437   000348                     CCPR3           equ	840	;# 
  1438   000348                     CCPR3L          equ	840	;# 
  1439   000349                     CCPR3H          equ	841	;# 
  1440   00034A                     CCP3CON         equ	842	;# 
  1441   00034B                     CCP3CAP         equ	843	;# 
  1442   00034C                     CCPTMRS0        equ	844	;# 
  1443   00034F                     CRCDATA         equ	847	;# 
  1444   00034F                     CRCDATL         equ	847	;# 
  1445   000350                     CRCDATH         equ	848	;# 
  1446   000351                     CRCACC          equ	849	;# 
  1447   000351                     CRCACCL         equ	849	;# 
  1448   000352                     CRCACCH         equ	850	;# 
  1449   000353                     CRCSHFT         equ	851	;# 
  1450   000353                     CRCSHIFTL       equ	851	;# 
  1451   000354                     CRCSHIFTH       equ	852	;# 
  1452   000355                     CRCXOR          equ	853	;# 
  1453   000355                     CRCXORL         equ	853	;# 
  1454   000356                     CRCXORH         equ	854	;# 
  1455   000357                     CRCCON0         equ	855	;# 
  1456   000358                     CRCCON1         equ	856	;# 
  1457   00035A                     SCANLADR        equ	858	;# 
  1458   00035A                     SCANLADRL       equ	858	;# 
  1459   00035B                     SCANLADRH       equ	859	;# 
  1460   00035C                     SCANLADRU       equ	860	;# 
  1461   00035D                     SCANHADR        equ	861	;# 
  1462   00035D                     SCANHADRL       equ	861	;# 
  1463   00035E                     SCANHADRH       equ	862	;# 
  1464   00035F                     SCANHADRU       equ	863	;# 
  1465   000360                     SCANCON0        equ	864	;# 
  1466   000361                     SCANTRIG        equ	865	;# 
  1467   000362                     IPR0            equ	866	;# 
  1468   000363                     IPR1            equ	867	;# 
  1469   000364                     IPR2            equ	868	;# 
  1470   000365                     IPR3            equ	869	;# 
  1471   000366                     IPR4            equ	870	;# 
  1472   000367                     IPR5            equ	871	;# 
  1473   000368                     IPR6            equ	872	;# 
  1474   000369                     IPR7            equ	873	;# 
  1475   00036A                     IPR8            equ	874	;# 
  1476   00036B                     IPR9            equ	875	;# 
  1477   00036C                     IPR10           equ	876	;# 
  1478   00036D                     IPR11           equ	877	;# 
  1479   00036E                     IPR12           equ	878	;# 
  1480   00036F                     IPR13           equ	879	;# 
  1481   000370                     IPR14           equ	880	;# 
  1482   000371                     IPR15           equ	881	;# 
  1483   000373                     STATUS_CSHAD    equ	883	;# 
  1484   000374                     WREG_CSHAD      equ	884	;# 
  1485   000375                     BSR_CSHAD       equ	885	;# 
  1486   000376                     SHADCON         equ	886	;# 
  1487   000377                     STATUS_SHAD     equ	887	;# 
  1488   000378                     WREG_SHAD       equ	888	;# 
  1489   000379                     BSR_SHAD        equ	889	;# 
  1490   00037A                     PCLATH_SHAD     equ	890	;# 
  1491   00037B                     PCLATU_SHAD     equ	891	;# 
  1492   00037C                     FSR0SH          equ	892	;# 
  1493   00037C                     FSR0L_SHAD      equ	892	;# 
  1494   00037D                     FSR0H_SHAD      equ	893	;# 
  1495   00037E                     FSR1SH          equ	894	;# 
  1496   00037E                     FSR1L_SHAD      equ	894	;# 
  1497   00037F                     FSR1H_SHAD      equ	895	;# 
  1498   000380                     FSR2SH          equ	896	;# 
  1499   000380                     FSR2L_SHAD      equ	896	;# 
  1500   000381                     FSR2H_SHAD      equ	897	;# 
  1501   000382                     PRODSH          equ	898	;# 
  1502   000382                     PRODL_SHAD      equ	898	;# 
  1503   000383                     PRODH_SHAD      equ	899	;# 
  1504   0003BC                     CWG1CLK         equ	956	;# 
  1505   0003BC                     CWG1CLKCON      equ	956	;# 
  1506   0003BD                     CWG1ISM         equ	957	;# 
  1507   0003BD                     CWG1DAT         equ	957	;# 
  1508   0003BE                     CWG1DBR         equ	958	;# 
  1509   0003BF                     CWG1DBF         equ	959	;# 
  1510   0003C0                     CWG1CON0        equ	960	;# 
  1511   0003C1                     CWG1CON1        equ	961	;# 
  1512   0003C2                     CWG1AS0         equ	962	;# 
  1513   0003C3                     CWG1AS1         equ	963	;# 
  1514   0003C4                     CWG1STR         equ	964	;# 
  1515   0003C5                     CWG2CLK         equ	965	;# 
  1516   0003C5                     CWG2CLKCON      equ	965	;# 
  1517   0003C6                     CWG2ISM         equ	966	;# 
  1518   0003C6                     CWG2DAT         equ	966	;# 
  1519   0003C7                     CWG2DBR         equ	967	;# 
  1520   0003C8                     CWG2DBF         equ	968	;# 
  1521   0003C9                     CWG2CON0        equ	969	;# 
  1522   0003CA                     CWG2CON1        equ	970	;# 
  1523   0003CB                     CWG2AS0         equ	971	;# 
  1524   0003CC                     CWG2AS1         equ	972	;# 
  1525   0003CD                     CWG2STR         equ	973	;# 
  1526   0003CE                     CWG3CLK         equ	974	;# 
  1527   0003CE                     CWG3CLKCON      equ	974	;# 
  1528   0003CF                     CWG3ISM         equ	975	;# 
  1529   0003CF                     CWG3DAT         equ	975	;# 
  1530   0003D0                     CWG3DBR         equ	976	;# 
  1531   0003D1                     CWG3DBF         equ	977	;# 
  1532   0003D2                     CWG3CON0        equ	978	;# 
  1533   0003D3                     CWG3CON1        equ	979	;# 
  1534   0003D4                     CWG3AS0         equ	980	;# 
  1535   0003D5                     CWG3AS1         equ	981	;# 
  1536   0003D6                     CWG3STR         equ	982	;# 
  1537   0003D7                     FVRCON          equ	983	;# 
  1538   0003D8                     ADCPCON         equ	984	;# 
  1539   0003D8                     ADCP            equ	984	;# 
  1540   0003D9                     ADLTH           equ	985	;# 
  1541   0003D9                     ADLTHL          equ	985	;# 
  1542   0003DA                     ADLTHH          equ	986	;# 
  1543   0003DB                     ADUTH           equ	987	;# 
  1544   0003DB                     ADUTHL          equ	987	;# 
  1545   0003DC                     ADUTHH          equ	988	;# 
  1546   0003DD                     ADERR           equ	989	;# 
  1547   0003DD                     ADERRL          equ	989	;# 
  1548   0003DE                     ADERRH          equ	990	;# 
  1549   0003DF                     ADSTPT          equ	991	;# 
  1550   0003DF                     ADSTPTL         equ	991	;# 
  1551   0003E0                     ADSTPTH         equ	992	;# 
  1552   0003E1                     ADFLTR          equ	993	;# 
  1553   0003E1                     ADFLTRL         equ	993	;# 
  1554   0003E2                     ADFLTRH         equ	994	;# 
  1555   0003E3                     ADACC           equ	995	;# 
  1556   0003E3                     ADACCL          equ	995	;# 
  1557   0003E4                     ADACCH          equ	996	;# 
  1558   0003E5                     ADACCU          equ	997	;# 
  1559   0003E6                     ADCNT           equ	998	;# 
  1560   0003E7                     ADRPT           equ	999	;# 
  1561   0003E8                     ADPREV          equ	1000	;# 
  1562   0003E8                     ADPREVL         equ	1000	;# 
  1563   0003E9                     ADPREVH         equ	1001	;# 
  1564   0003EA                     ADRES           equ	1002	;# 
  1565   0003EA                     ADRESL          equ	1002	;# 
  1566   0003EB                     ADRESH          equ	1003	;# 
  1567   0003EC                     ADPCH           equ	1004	;# 
  1568   0003EE                     ADACQ           equ	1006	;# 
  1569   0003EE                     ADACQL          equ	1006	;# 
  1570   0003EF                     ADACQH          equ	1007	;# 
  1571   0003F0                     ADCAP           equ	1008	;# 
  1572   0003F1                     ADPRE           equ	1009	;# 
  1573   0003F1                     ADPREL          equ	1009	;# 
  1574   0003F2                     ADPREH          equ	1010	;# 
  1575   0003F3                     ADCON0          equ	1011	;# 
  1576   0003F4                     ADCON1          equ	1012	;# 
  1577   0003F5                     ADCON2          equ	1013	;# 
  1578   0003F6                     ADCON3          equ	1014	;# 
  1579   0003F7                     ADSTAT          equ	1015	;# 
  1580   0003F8                     ADREF           equ	1016	;# 
  1581   0003F9                     ADACT           equ	1017	;# 
  1582   0003FA                     ADCLK           equ	1018	;# 
  1583   000400                     ANSELA          equ	1024	;# 
  1584   000401                     WPUA            equ	1025	;# 
  1585   000402                     ODCONA          equ	1026	;# 
  1586   000403                     SLRCONA         equ	1027	;# 
  1587   000404                     INLVLA          equ	1028	;# 
  1588   000405                     IOCAP           equ	1029	;# 
  1589   000406                     IOCAN           equ	1030	;# 
  1590   000407                     IOCAF           equ	1031	;# 
  1591   000408                     ANSELB          equ	1032	;# 
  1592   000409                     WPUB            equ	1033	;# 
  1593   00040A                     ODCONB          equ	1034	;# 
  1594   00040B                     SLRCONB         equ	1035	;# 
  1595   00040C                     INLVLB          equ	1036	;# 
  1596   00040D                     IOCBP           equ	1037	;# 
  1597   00040E                     IOCBN           equ	1038	;# 
  1598   00040F                     IOCBF           equ	1039	;# 
  1599   000410                     ANSELC          equ	1040	;# 
  1600   000411                     WPUC            equ	1041	;# 
  1601   000412                     ODCONC          equ	1042	;# 
  1602   000413                     SLRCONC         equ	1043	;# 
  1603   000414                     INLVLC          equ	1044	;# 
  1604   000415                     IOCCP           equ	1045	;# 
  1605   000416                     IOCCN           equ	1046	;# 
  1606   000417                     IOCCF           equ	1047	;# 
  1607   000418                     ANSELD          equ	1048	;# 
  1608   000419                     WPUD            equ	1049	;# 
  1609   00041A                     ODCOND          equ	1050	;# 
  1610   00041B                     SLRCOND         equ	1051	;# 
  1611   00041C                     INLVLD          equ	1052	;# 
  1612   000420                     ANSELE          equ	1056	;# 
  1613   000421                     WPUE            equ	1057	;# 
  1614   000422                     ODCONE          equ	1058	;# 
  1615   000423                     SLRCONE         equ	1059	;# 
  1616   000424                     INLVLE          equ	1060	;# 
  1617   000425                     IOCEP           equ	1061	;# 
  1618   000426                     IOCEN           equ	1062	;# 
  1619   000427                     IOCEF           equ	1063	;# 
  1620   000428                     ANSELF          equ	1064	;# 
  1621   000429                     WPUF            equ	1065	;# 
  1622   00042A                     ODCONF          equ	1066	;# 
  1623   00042B                     SLRCONF         equ	1067	;# 
  1624   00042C                     INLVLF          equ	1068	;# 
  1625   000440                     NCO1ACC         equ	1088	;# 
  1626   000440                     NCO1ACCL        equ	1088	;# 
  1627   000441                     NCO1ACCH        equ	1089	;# 
  1628   000442                     NCO1ACCU        equ	1090	;# 
  1629   000443                     NCO1INC         equ	1091	;# 
  1630   000443                     NCO1INCL        equ	1091	;# 
  1631   000444                     NCO1INCH        equ	1092	;# 
  1632   000445                     NCO1INCU        equ	1093	;# 
  1633   000446                     NCO1CON         equ	1094	;# 
  1634   000447                     NCO1CLK         equ	1095	;# 
  1635   000448                     NCO2ACC         equ	1096	;# 
  1636   000448                     NCO2ACCL        equ	1096	;# 
  1637   000449                     NCO2ACCH        equ	1097	;# 
  1638   00044A                     NCO2ACCU        equ	1098	;# 
  1639   00044B                     NCO2INC         equ	1099	;# 
  1640   00044B                     NCO2INCL        equ	1099	;# 
  1641   00044C                     NCO2INCH        equ	1100	;# 
  1642   00044D                     NCO2INCU        equ	1101	;# 
  1643   00044E                     NCO2CON         equ	1102	;# 
  1644   00044F                     NCO2CLK         equ	1103	;# 
  1645   000450                     NCO3ACC         equ	1104	;# 
  1646   000450                     NCO3ACCL        equ	1104	;# 
  1647   000451                     NCO3ACCH        equ	1105	;# 
  1648   000452                     NCO3ACCU        equ	1106	;# 
  1649   000453                     NCO3INC         equ	1107	;# 
  1650   000453                     NCO3INCL        equ	1107	;# 
  1651   000454                     NCO3INCH        equ	1108	;# 
  1652   000455                     NCO3INCU        equ	1109	;# 
  1653   000456                     NCO3CON         equ	1110	;# 
  1654   000457                     NCO3CLK         equ	1111	;# 
  1655   000459                     IVTLOCK         equ	1113	;# 
  1656   00045A                     IVTAD           equ	1114	;# 
  1657   00045A                     IVTADL          equ	1114	;# 
  1658   00045B                     IVTADH          equ	1115	;# 
  1659   00045C                     IVTADU          equ	1116	;# 
  1660   00045D                     IVTBASE         equ	1117	;# 
  1661   00045D                     IVTBASEL        equ	1117	;# 
  1662   00045E                     IVTBASEH        equ	1118	;# 
  1663   00045F                     IVTBASEU        equ	1119	;# 
  1664   000460                     PWM1ERS         equ	1120	;# 
  1665   000461                     PWM1CLK         equ	1121	;# 
  1666   000462                     PWM1LDS         equ	1122	;# 
  1667   000463                     PWM1PR          equ	1123	;# 
  1668   000463                     PWM1PRL         equ	1123	;# 
  1669   000464                     PWM1PRH         equ	1124	;# 
  1670   000465                     PWM1CPRE        equ	1125	;# 
  1671   000466                     PWM1PIPOS       equ	1126	;# 
  1672   000467                     PWM1GIR         equ	1127	;# 
  1673   000468                     PWM1GIE         equ	1128	;# 
  1674   000469                     PWM1CON         equ	1129	;# 
  1675   00046A                     PWM1S1CFG       equ	1130	;# 
  1676   00046B                     PWM1S1P1        equ	1131	;# 
  1677   00046B                     PWM1S1P1L       equ	1131	;# 
  1678   00046C                     PWM1S1P1H       equ	1132	;# 
  1679   00046D                     PWM1S1P2        equ	1133	;# 
  1680   00046D                     PWM1S1P2L       equ	1133	;# 
  1681   00046E                     PWM1S1P2H       equ	1134	;# 
  1682   00046F                     PWM2ERS         equ	1135	;# 
  1683   000470                     PWM2CLK         equ	1136	;# 
  1684   000471                     PWM2LDS         equ	1137	;# 
  1685   000472                     PWM2PR          equ	1138	;# 
  1686   000472                     PWM2PRL         equ	1138	;# 
  1687   000473                     PWM2PRH         equ	1139	;# 
  1688   000474                     PWM2CPRE        equ	1140	;# 
  1689   000475                     PWM2PIPOS       equ	1141	;# 
  1690   000476                     PWM2GIR         equ	1142	;# 
  1691   000477                     PWM2GIE         equ	1143	;# 
  1692   000478                     PWM2CON         equ	1144	;# 
  1693   000479                     PWM2S1CFG       equ	1145	;# 
  1694   00047A                     PWM2S1P1        equ	1146	;# 
  1695   00047A                     PWM2S1P1L       equ	1146	;# 
  1696   00047B                     PWM2S1P1H       equ	1147	;# 
  1697   00047C                     PWM2S1P2        equ	1148	;# 
  1698   00047C                     PWM2S1P2L       equ	1148	;# 
  1699   00047D                     PWM2S1P2H       equ	1149	;# 
  1700   00047E                     PWM3ERS         equ	1150	;# 
  1701   00047F                     PWM3CLK         equ	1151	;# 
  1702   000480                     PWM3LDS         equ	1152	;# 
  1703   000481                     PWM3PR          equ	1153	;# 
  1704   000481                     PWM3PRL         equ	1153	;# 
  1705   000482                     PWM3PRH         equ	1154	;# 
  1706   000483                     PWM3CPRE        equ	1155	;# 
  1707   000484                     PWM3PIPOS       equ	1156	;# 
  1708   000485                     PWM3GIR         equ	1157	;# 
  1709   000486                     PWM3GIE         equ	1158	;# 
  1710   000487                     PWM3CON         equ	1159	;# 
  1711   000488                     PWM3S1CFG       equ	1160	;# 
  1712   000489                     PWM3S1P1        equ	1161	;# 
  1713   000489                     PWM3S1P1L       equ	1161	;# 
  1714   00048A                     PWM3S1P1H       equ	1162	;# 
  1715   00048B                     PWM3S1P2        equ	1163	;# 
  1716   00048B                     PWM3S1P2L       equ	1163	;# 
  1717   00048C                     PWM3S1P2H       equ	1164	;# 
  1718   00049C                     PWMLOAD         equ	1180	;# 
  1719   00049D                     PWMEN           equ	1181	;# 
  1720   00049E                     PIE0            equ	1182	;# 
  1721   00049F                     PIE1            equ	1183	;# 
  1722   0004A0                     PIE2            equ	1184	;# 
  1723   0004A1                     PIE3            equ	1185	;# 
  1724   0004A2                     PIE4            equ	1186	;# 
  1725   0004A3                     PIE5            equ	1187	;# 
  1726   0004A4                     PIE6            equ	1188	;# 
  1727   0004A5                     PIE7            equ	1189	;# 
  1728   0004A6                     PIE8            equ	1190	;# 
  1729   0004A7                     PIE9            equ	1191	;# 
  1730   0004A8                     PIE10           equ	1192	;# 
  1731   0004A9                     PIE11           equ	1193	;# 
  1732   0004AA                     PIE12           equ	1194	;# 
  1733   0004AB                     PIE13           equ	1195	;# 
  1734   0004AC                     PIE14           equ	1196	;# 
  1735   0004AD                     PIE15           equ	1197	;# 
  1736   0004AE                     PIR0            equ	1198	;# 
  1737   0004AF                     PIR1            equ	1199	;# 
  1738   0004B0                     PIR2            equ	1200	;# 
  1739   0004B1                     PIR3            equ	1201	;# 
  1740   0004B2                     PIR4            equ	1202	;# 
  1741   0004B3                     PIR5            equ	1203	;# 
  1742   0004B4                     PIR6            equ	1204	;# 
  1743   0004B5                     PIR7            equ	1205	;# 
  1744   0004B6                     PIR8            equ	1206	;# 
  1745   0004B7                     PIR9            equ	1207	;# 
  1746   0004B8                     PIR10           equ	1208	;# 
  1747   0004B9                     PIR11           equ	1209	;# 
  1748   0004BA                     PIR12           equ	1210	;# 
  1749   0004BB                     PIR13           equ	1211	;# 
  1750   0004BC                     PIR14           equ	1212	;# 
  1751   0004BD                     PIR15           equ	1213	;# 
  1752   0004BE                     LATA            equ	1214	;# 
  1753   0004BF                     LATB            equ	1215	;# 
  1754   0004C0                     LATC            equ	1216	;# 
  1755   0004C1                     LATD            equ	1217	;# 
  1756   0004C2                     LATE            equ	1218	;# 
  1757   0004C3                     LATF            equ	1219	;# 
  1758   0004C6                     TRISA           equ	1222	;# 
  1759   0004C7                     TRISB           equ	1223	;# 
  1760   0004C8                     TRISC           equ	1224	;# 
  1761   0004C9                     TRISD           equ	1225	;# 
  1762   0004CA                     TRISE           equ	1226	;# 
  1763   0004CB                     TRISF           equ	1227	;# 
  1764   0004CE                     PORTA           equ	1230	;# 
  1765   0004CF                     PORTB           equ	1231	;# 
  1766   0004D0                     PORTC           equ	1232	;# 
  1767   0004D1                     PORTD           equ	1233	;# 
  1768   0004D2                     PORTE           equ	1234	;# 
  1769   0004D3                     PORTF           equ	1235	;# 
  1770   0004D6                     INTCON0         equ	1238	;# 
  1771   0004D7                     INTCON1         equ	1239	;# 
  1772   0004D8                     STATUS          equ	1240	;# 
  1773   0004D9                     FSR2            equ	1241	;# 
  1774   0004D9                     FSR2L           equ	1241	;# 
  1775   0004DA                     FSR2H           equ	1242	;# 
  1776   0004DB                     PLUSW2          equ	1243	;# 
  1777   0004DC                     PREINC2         equ	1244	;# 
  1778   0004DD                     POSTDEC2        equ	1245	;# 
  1779   0004DE                     POSTINC2        equ	1246	;# 
  1780   0004DF                     INDF2           equ	1247	;# 
  1781   0004E0                     BSR             equ	1248	;# 
  1782   0004E1                     FSR1            equ	1249	;# 
  1783   0004E1                     FSR1L           equ	1249	;# 
  1784   0004E2                     FSR1H           equ	1250	;# 
  1785   0004E3                     PLUSW1          equ	1251	;# 
  1786   0004E4                     PREINC1         equ	1252	;# 
  1787   0004E5                     POSTDEC1        equ	1253	;# 
  1788   0004E6                     POSTINC1        equ	1254	;# 
  1789   0004E7                     INDF1           equ	1255	;# 
  1790   0004E8                     WREG            equ	1256	;# 
  1791   0004E9                     FSR0            equ	1257	;# 
  1792   0004E9                     FSR0L           equ	1257	;# 
  1793   0004EA                     FSR0H           equ	1258	;# 
  1794   0004EB                     PLUSW0          equ	1259	;# 
  1795   0004EC                     PREINC0         equ	1260	;# 
  1796   0004ED                     POSTDEC0        equ	1261	;# 
  1797   0004EE                     POSTINC0        equ	1262	;# 
  1798   0004EF                     INDF0           equ	1263	;# 
  1799   0004F0                     PCON0           equ	1264	;# 
  1800   0004F1                     PCON1           equ	1265	;# 
  1801   0004F2                     CPUDOZE         equ	1266	;# 
  1802   0004F3                     PROD            equ	1267	;# 
  1803   0004F3                     PRODL           equ	1267	;# 
  1804   0004F4                     PRODH           equ	1268	;# 
  1805   0004F5                     TABLAT          equ	1269	;# 
  1806   0004F6                     TBLPTR          equ	1270	;# 
  1807   0004F6                     TBLPTRL         equ	1270	;# 
  1808   0004F7                     TBLPTRH         equ	1271	;# 
  1809   0004F8                     TBLPTRU         equ	1272	;# 
  1810   0004F9                     PCLAT           equ	1273	;# 
  1811   0004F9                     PCL             equ	1273	;# 
  1812   0004FA                     PCLATH          equ	1274	;# 
  1813   0004FB                     PCLATU          equ	1275	;# 
  1814   0004FC                     STKPTR          equ	1276	;# 
  1815   0004FD                     TOS             equ	1277	;# 
  1816   0004FD                     TOSL            equ	1277	;# 
  1817   0004FE                     TOSH            equ	1278	;# 
  1818   0004FF                     TOSU            equ	1279	;# 
  1819   0000B3                     _OSCEN          set	179
  1820   0000B1                     _OSCFRQ         set	177
  1821   0000AD                     _OSCCON1        set	173
  1822   0003EA                     _ADRESL         set	1002
  1823   0003EB                     _ADRESH         set	1003
  1824   0003EC                     _ADPCH          set	1004
  1825   0003F3                     _ADCON0bits     set	1011
  1826   000418                     _ANSELD         set	1048
  1827   000400                     _ANSELAbits     set	1024
  1828   000409                     _WPUBbits       set	1033
  1829   000408                     _ANSELBbits     set	1032
  1830   0004C6                     _TRISAbits      set	1222
  1831   0004C7                     _TRISBbits      set	1223
  1832   0004D1                     _PORTD          set	1233
  1833   0004C1                     _LATD           set	1217
  1834   0004C9                     _TRISD          set	1225
  1835   0004C1                     _LATDbits       set	1217
  1836                           
  1837                           	psect	smallconst
  1838   002600                     __psmallconst:
  1839                           	callstack 0
  1840   002600  00                 	db	0
  1841   002601                     STR_1:
  1842   002601  55                 	db	85	;'U'
  1843   002602  70                 	db	112	;'p'
  1844   002603  63                 	db	99	;'c'
  1845   002604  69                 	db	105	;'i'
  1846   002605  6E                 	db	110	;'n'
  1847   002606  6F                 	db	111	;'o'
  1848   002607  20                 	db	32
  1849   002608  32                 	db	50	;'2'
  1850   002609  30                 	db	48	;'0'
  1851   00260A  32                 	db	50	;'2'
  1852   00260B  34                 	db	52	;'4'
  1853   00260C  2D                 	db	45
  1854   00260D  32                 	db	50	;'2'
  1855   00260E  00                 	db	0
  1856   00260F                     STR_2:
  1857   00260F  43                 	db	67	;'C'
  1858   002610  61                 	db	97	;'a'
  1859   002611  6E                 	db	110	;'n'
  1860   002612  61                 	db	97	;'a'
  1861   002613  6C                 	db	108	;'l'
  1862   002614  20                 	db	32
  1863   002615  41                 	db	65	;'A'
  1864   002616  4E                 	db	78	;'N'
  1865   002617  41                 	db	65	;'A'
  1866   002618  30                 	db	48	;'0'
  1867   002619  3A                 	db	58	;':'
  1868   00261A  00                 	db	0
  1869   00261B  00                 	db	0	; dummy byte at the end
  1870   000001                     __activetblptr  equ	1
  1871                           
  1872                           ; #config settings
  1873                           
  1874                           	psect	cinit
  1875   0029BE                     __pcinit:
  1876                           	callstack 0
  1877   0029BE                     start_initialization:
  1878                           	callstack 0
  1879   0029BE                     __initialization:
  1880                           	callstack 0
  1881                           
  1882                           ; Clear objects allocated to COMRAM (6 bytes)
  1883   0029BE  6A14               	clrf	(__pbssCOMRAM+5)& (0+255),c
  1884   0029C0  6A13               	clrf	(__pbssCOMRAM+4)& (0+255),c
  1885   0029C2  6A12               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1886   0029C4  6A11               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1887   0029C6  6A10               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1888   0029C8  6A0F               	clrf	__pbssCOMRAM& (0+255),c
  1889   0029CA                     end_of_initialization:
  1890                           	callstack 0
  1891   0029CA                     __end_of__initialization:
  1892                           	callstack 0
  1893   0029CA  0E00               	movlw	low (__Lsmallconst shr (0+16))
  1894   0029CC  6EF8               	movwf	tblptru,c
  1895   0029CE  0E26               	movlw	high __Lsmallconst
  1896   0029D0  6EF7               	movwf	tblptrh,c
  1897   0029D2  0100               	movlb	0
  1898   0029D4  EF53  F013         	goto	_main	;jump to C main() function
  1899                           
  1900                           	psect	bssCOMRAM
  1901   00050F                     __pbssCOMRAM:
  1902                           	callstack 0
  1903   00050F                     _resultado_ADC:
  1904                           	callstack 0
  1905   00050F                     	ds	2
  1906   000511                     _unidad:
  1907                           	callstack 0
  1908   000511                     	ds	1
  1909   000512                     _decena:
  1910                           	callstack 0
  1911   000512                     	ds	1
  1912   000513                     _centena:
  1913                           	callstack 0
  1914   000513                     	ds	1
  1915   000514                     _millar:
  1916                           	callstack 0
  1917   000514                     	ds	1
  1918                           
  1919                           	psect	cstackCOMRAM
  1920   000501                     __pcstackCOMRAM:
  1921                           	callstack 0
  1922   000501                     ?_leer_ADC:
  1923                           	callstack 0
  1924   000501                     ?___lwmod:
  1925                           	callstack 0
  1926   000501                     ENVIA_NIBBLE@dato:
  1927                           	callstack 0
  1928   000501                     LEER_LCD@aux:
  1929                           	callstack 0
  1930   000501                     ___lwmod@dividend:
  1931                           	callstack 0
  1932   000501                     
  1933                           ; 1 bytes @ 0x0
  1934   000501                     	ds	1
  1935   000502                     ENVIA_CHAR@dato:
  1936                           	callstack 0
  1937   000502                     ENVIA_LCD_CMD@dato:
  1938                           	callstack 0
  1939   000502                     
  1940                           ; 1 bytes @ 0x1
  1941   000502                     	ds	1
  1942   000503                     ENVIA_CHAR@aux:
  1943                           	callstack 0
  1944   000503                     ENVIA_LCD_CMD@aux:
  1945                           	callstack 0
  1946   000503                     ___lwmod@divisor:
  1947                           	callstack 0
  1948   000503                     ??_leer_ADC:
  1949                           
  1950                           ; 1 bytes @ 0x2
  1951   000503                     	ds	1
  1952   000504                     POS_CURSOR@columna:
  1953                           	callstack 0
  1954   000504                     CURSOR_ONOFF@estado:
  1955                           	callstack 0
  1956   000504                     ESCRIBE_MENSAJE@cadena:
  1957                           	callstack 0
  1958   000504                     ??_LCD_CONFIG:
  1959                           
  1960                           ; 1 bytes @ 0x3
  1961   000504                     	ds	1
  1962   000505                     POS_CURSOR@fila:
  1963                           	callstack 0
  1964   000505                     ESCRIBE_MENSAJE@tam:
  1965                           	callstack 0
  1966   000505                     ___lwmod@counter:
  1967                           	callstack 0
  1968   000505                     leer_ADC@juntada:
  1969                           	callstack 0
  1970   000505                     ??_LCD_INIT:
  1971   000505                     
  1972                           ; 1 bytes @ 0x4
  1973   000505                     	ds	1
  1974   000506                     ?___lwdiv:
  1975                           	callstack 0
  1976   000506                     ___lwdiv@dividend:
  1977                           	callstack 0
  1978   000506                     ??_ESCRIBE_MENSAJE:
  1979                           
  1980                           ; 1 bytes @ 0x5
  1981   000506                     	ds	1
  1982   000507                     ESCRIBE_MENSAJE@i:
  1983                           	callstack 0
  1984                           
  1985                           ; 1 bytes @ 0x6
  1986   000507                     	ds	1
  1987   000508                     ___lwdiv@divisor:
  1988                           	callstack 0
  1989                           
  1990                           ; 2 bytes @ 0x7
  1991   000508                     	ds	2
  1992   00050A                     ___lwdiv@quotient:
  1993                           	callstack 0
  1994   00050A                     
  1995                           ; 1 bytes @ 0x9
  1996   00050A                     	ds	2
  1997   00050C                     ___lwdiv@counter:
  1998                           	callstack 0
  1999                           
  2000                           ; 1 bytes @ 0xB
  2001   00050C                     	ds	1
  2002   00050D                     conversion@dato:
  2003                           	callstack 0
  2004                           
  2005                           ; 2 bytes @ 0xC
  2006   00050D                     	ds	2
  2007   00050F                     
  2008                           ; 1 bytes @ 0xE
  2009 ;;
  2010 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2011 ;;
  2012 ;; *************** function _main *****************
  2013 ;; Defined at:
  2014 ;;		line 60 in file "maincode03.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2032 ;;Total ram usage:        0 bytes
  2033 ;; Hardware stack levels required when called: 4
  2034 ;; This function calls:
  2035 ;;		_ENVIA_CHAR
  2036 ;;		_ESCRIBE_MENSAJE
  2037 ;;		_LCD_INIT
  2038 ;;		_POS_CURSOR
  2039 ;;		_configuro
  2040 ;;		_conversion
  2041 ;;		_leer_ADC
  2042 ;; This function is called by:
  2043 ;;		Startup code after reset
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text0
  2048   0026A6                     __ptext0:
  2049                           	callstack 0
  2050   0026A6                     _main:
  2051                           	callstack 123
  2052                           
  2053                           ;maincode03.c: 61:     configuro();
  2054                           
  2055                           ;incstack = 0
  2056   0026A6  EC62  F014         	call	_configuro	;wreg free
  2057                           
  2058                           ; BSR set to: 3
  2059                           ;maincode03.c: 62:     LCD_INIT();
  2060   0026AA  EC78  F014         	call	_LCD_INIT	;wreg free
  2061                           
  2062                           ;maincode03.c: 64:     POS_CURSOR(1,2);
  2063   0026AE  0E02               	movlw	2
  2064   0026B0  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  2065   0026B2  0E01               	movlw	1
  2066   0026B4  EC9F  F014         	call	_POS_CURSOR
  2067                           
  2068                           ;maincode03.c: 65:     ESCRIBE_MENSAJE("Upcino 2024-2", 13);
  2069   0026B8  0E01               	movlw	low STR_1
  2070   0026BA  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2071   0026BC  0E0D               	movlw	13
  2072   0026BE  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2073   0026C0  ECB1  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2074   0026C4                     l1145:
  2075                           
  2076                           ;maincode03.c: 67:         resultado_ADC = leer_ADC();
  2077   0026C4  EC8D  F014         	call	_leer_ADC	;wreg free
  2078   0026C8  C501  F50F         	movff	?_leer_ADC,_resultado_ADC
  2079   0026CC  C502  F510         	movff	?_leer_ADC+1,_resultado_ADC+1
  2080                           
  2081                           ; BSR set to: 3
  2082                           ;maincode03.c: 68:         conversion(resultado_ADC);
  2083   0026D0  C50F  F50D         	movff	_resultado_ADC,conversion@dato
  2084   0026D4  C510  F50E         	movff	_resultado_ADC+1,conversion@dato+1
  2085   0026D8  EC0E  F013         	call	_conversion	;wreg free
  2086                           
  2087                           ;maincode03.c: 69:         ESCRIBE_MENSAJE("Canal ANA0:", 11);
  2088   0026DC  0E0F               	movlw	low STR_2
  2089   0026DE  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  2090   0026E0  0E0B               	movlw	11
  2091   0026E2  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  2092   0026E4  ECB1  F014         	call	_ESCRIBE_MENSAJE	;wreg free
  2093                           
  2094                           ;maincode03.c: 70:         ENVIA_CHAR(millar+0x30);
  2095   0026E8  5014               	movf	_millar^(0+1280),w,c
  2096   0026EA  0F30               	addlw	48
  2097   0026EC  EC49  F014         	call	_ENVIA_CHAR
  2098                           
  2099                           ;maincode03.c: 71:         ENVIA_CHAR(centena+0x30);
  2100   0026F0  5013               	movf	_centena^(0+1280),w,c
  2101   0026F2  0F30               	addlw	48
  2102   0026F4  EC49  F014         	call	_ENVIA_CHAR
  2103                           
  2104                           ;maincode03.c: 72:         ENVIA_CHAR(decena+0x30);
  2105   0026F8  5012               	movf	_decena^(0+1280),w,c
  2106   0026FA  0F30               	addlw	48
  2107   0026FC  EC49  F014         	call	_ENVIA_CHAR
  2108                           
  2109                           ;maincode03.c: 73:         ENVIA_CHAR(unidad+0x30);
  2110   002700  5011               	movf	_unidad^(0+1280),w,c
  2111   002702  0F30               	addlw	48
  2112   002704  EC49  F014         	call	_ENVIA_CHAR
  2113   002708  D7DD               	goto	l1145
  2114   00270A                     __end_of_main:
  2115                           	callstack 0
  2116                           
  2117 ;; *************** function _leer_ADC *****************
  2118 ;; Defined at:
  2119 ;;		line 44 in file "maincode03.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  juntada         2    4[COMRAM] unsigned int 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  2    0[COMRAM] unsigned int 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/3
  2130 ;;		On exit  : 3F/3
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2135 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2136 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2137 ;;Total ram usage:        6 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; This function calls:
  2140 ;;		Nothing
  2141 ;; This function is called by:
  2142 ;;		_main
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           	psect	text1
  2147   00291A                     __ptext1:
  2148                           	callstack 0
  2149   00291A                     _leer_ADC:
  2150                           	callstack 126
  2151                           
  2152                           ;maincode03.c: 46:     ADCON0bits.GO = 1;
  2153                           
  2154                           ;incstack = 0
  2155   00291A  0103               	movlb	3	; () banked
  2156   00291C  81F3               	bsf	243,0,b	;volatile
  2157   00291E                     l137:
  2158                           
  2159                           ; BSR set to: 3
  2160   00291E  B1F3               	btfsc	243,0,b	;volatile
  2161   002920  D7FE               	goto	l137
  2162                           
  2163                           ; BSR set to: 3
  2164                           ;maincode03.c: 49:     juntada = (ADRESH << 8) + ADRESL;
  2165   002922  51EB               	movf	235,w,b	;volatile
  2166   002924  6E04               	movwf	(??_leer_ADC+1)^(0+1280),c
  2167   002926  6A03               	clrf	??_leer_ADC^(0+1280),c
  2168   002928  51EA               	movf	234,w,b	;volatile
  2169   00292A  2403               	addwf	??_leer_ADC^(0+1280),w,c
  2170   00292C  6E05               	movwf	leer_ADC@juntada^(0+1280),c
  2171   00292E  0E00               	movlw	0
  2172   002930  2004               	addwfc	(??_leer_ADC+1)^(0+1280),w,c
  2173   002932  6E06               	movwf	(leer_ADC@juntada+1)^(0+1280),c
  2174                           
  2175                           ; BSR set to: 3
  2176                           ;maincode03.c: 50:     return juntada;
  2177   002934  C505  F501         	movff	leer_ADC@juntada,?_leer_ADC
  2178   002938  C506  F502         	movff	leer_ADC@juntada+1,?_leer_ADC+1
  2179                           
  2180                           ; BSR set to: 3
  2181   00293C  0012               	return		;funcret
  2182   00293E                     __end_of_leer_ADC:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _conversion *****************
  2186 ;; Defined at:
  2187 ;;		line 53 in file "maincode03.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  dato            2   12[COMRAM] unsigned int 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 3F/3
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2204 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2205 ;;Total ram usage:        2 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 1
  2208 ;; This function calls:
  2209 ;;		___lwdiv
  2210 ;;		___lwmod
  2211 ;; This function is called by:
  2212 ;;		_main
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text2
  2217   00261C                     __ptext2:
  2218                           	callstack 0
  2219   00261C                     _conversion:
  2220                           	callstack 125
  2221                           
  2222                           ; BSR set to: 3
  2223                           ;maincode03.c: 54:     millar = dato / 1000;
  2224                           
  2225                           ; BSR set to: 3
  2226                           ;incstack = 0
  2227   00261C  C50D  F506         	movff	conversion@dato,___lwdiv@dividend
  2228   002620  C50E  F507         	movff	conversion@dato+1,___lwdiv@dividend+1
  2229   002624  0E03               	movlw	3
  2230   002626  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2231   002628  0EE8               	movlw	232
  2232   00262A  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  2233   00262C  ECE6  F013         	call	___lwdiv	;wreg free
  2234   002630  5006               	movf	?___lwdiv^(0+1280),w,c
  2235   002632  6E14               	movwf	_millar^(0+1280),c
  2236                           
  2237                           ;maincode03.c: 55:     centena = (dato % 1000) / 100;
  2238   002634  0E03               	movlw	3
  2239   002636  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2240   002638  0EE8               	movlw	232
  2241   00263A  6E03               	movwf	___lwmod@divisor^(0+1280),c
  2242   00263C  C50D  F501         	movff	conversion@dato,___lwmod@dividend
  2243   002640  C50E  F502         	movff	conversion@dato+1,___lwmod@dividend+1
  2244   002644  EC0F  F014         	call	___lwmod	;wreg free
  2245   002648  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  2246   00264C  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  2247   002650  0E00               	movlw	0
  2248   002652  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2249   002654  0E64               	movlw	100
  2250   002656  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  2251   002658  ECE6  F013         	call	___lwdiv	;wreg free
  2252   00265C  5006               	movf	?___lwdiv^(0+1280),w,c
  2253   00265E  6E13               	movwf	_centena^(0+1280),c
  2254                           
  2255                           ;maincode03.c: 56:     decena = (dato % 100) / 10;
  2256   002660  0E00               	movlw	0
  2257   002662  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2258   002664  0E64               	movlw	100
  2259   002666  6E03               	movwf	___lwmod@divisor^(0+1280),c
  2260   002668  C50D  F501         	movff	conversion@dato,___lwmod@dividend
  2261   00266C  C50E  F502         	movff	conversion@dato+1,___lwmod@dividend+1
  2262   002670  EC0F  F014         	call	___lwmod	;wreg free
  2263   002674  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  2264   002678  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  2265   00267C  0E00               	movlw	0
  2266   00267E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2267   002680  0E0A               	movlw	10
  2268   002682  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  2269   002684  ECE6  F013         	call	___lwdiv	;wreg free
  2270   002688  5006               	movf	?___lwdiv^(0+1280),w,c
  2271   00268A  6E12               	movwf	_decena^(0+1280),c
  2272                           
  2273                           ;maincode03.c: 57:     unidad = dato % 10;
  2274   00268C  C50D  F501         	movff	conversion@dato,___lwmod@dividend
  2275   002690  C50E  F502         	movff	conversion@dato+1,___lwmod@dividend+1
  2276   002694  0E00               	movlw	0
  2277   002696  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2278   002698  0E0A               	movlw	10
  2279   00269A  6E03               	movwf	___lwmod@divisor^(0+1280),c
  2280   00269C  EC0F  F014         	call	___lwmod	;wreg free
  2281   0026A0  5001               	movf	?___lwmod^(0+1280),w,c
  2282   0026A2  6E11               	movwf	_unidad^(0+1280),c
  2283   0026A4  0012               	return		;funcret
  2284   0026A6                     __end_of_conversion:
  2285                           	callstack 0
  2286                           
  2287 ;; *************** function ___lwmod *****************
  2288 ;; Defined at:
  2289 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  dividend        2    0[COMRAM] unsigned int 
  2292 ;;  divisor         2    2[COMRAM] unsigned int 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  counter         1    4[COMRAM] unsigned char 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  2    0[COMRAM] unsigned int 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/3
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2304 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2307 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2308 ;;Total ram usage:        5 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_conversion
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text3
  2318   00281E                     __ptext3:
  2319                           	callstack 0
  2320   00281E                     ___lwmod:
  2321                           	callstack 125
  2322                           
  2323                           ;incstack = 0
  2324   00281E  5003               	movf	___lwmod@divisor^(0+1280),w,c
  2325   002820  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  2326   002822  B4D8               	btfsc	status,2,c
  2327   002824  D018               	goto	l655
  2328   002826  0E01               	movlw	1
  2329   002828  6E05               	movwf	___lwmod@counter^(0+1280),c
  2330   00282A  D004               	goto	l1099
  2331   00282C                     l1097:
  2332   00282C  90D8               	bcf	status,0,c
  2333   00282E  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  2334   002830  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  2335   002832  2A05               	incf	___lwmod@counter^(0+1280),f,c
  2336   002834                     l1099:
  2337   002834  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  2338   002836  D7FA               	goto	l1097
  2339   002838                     u180:
  2340   002838  5003               	movf	___lwmod@divisor^(0+1280),w,c
  2341   00283A  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  2342   00283C  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  2343   00283E  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  2344   002840  A0D8               	btfss	status,0,c
  2345   002842  D004               	goto	l1105
  2346   002844  5003               	movf	___lwmod@divisor^(0+1280),w,c
  2347   002846  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  2348   002848  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  2349   00284A  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  2350   00284C                     l1105:
  2351   00284C  90D8               	bcf	status,0,c
  2352   00284E  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  2353   002850  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  2354   002852  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  2355   002854  D7F1               	goto	u180
  2356   002856                     l655:
  2357   002856  C501  F501         	movff	___lwmod@dividend,?___lwmod
  2358   00285A  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  2359   00285E  0012               	return		;funcret
  2360   002860                     __end_of___lwmod:
  2361                           	callstack 0
  2362                           
  2363 ;; *************** function ___lwdiv *****************
  2364 ;; Defined at:
  2365 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  dividend        2    5[COMRAM] unsigned int 
  2368 ;;  divisor         2    7[COMRAM] unsigned int 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  quotient        2    9[COMRAM] unsigned int 
  2371 ;;  counter         1   11[COMRAM] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  2    5[COMRAM] unsigned int 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/3
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2381 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2382 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2384 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2385 ;;Total ram usage:        7 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_conversion
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text4
  2395   0027CC                     __ptext4:
  2396                           	callstack 0
  2397   0027CC                     ___lwdiv:
  2398                           	callstack 125
  2399                           
  2400                           ;incstack = 0
  2401   0027CC  0E00               	movlw	0
  2402   0027CE  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  2403   0027D0  0E00               	movlw	0
  2404   0027D2  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  2405   0027D4  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  2406   0027D6  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  2407   0027D8  B4D8               	btfsc	status,2,c
  2408   0027DA  D01C               	goto	l645
  2409   0027DC  0E01               	movlw	1
  2410   0027DE  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  2411   0027E0  D004               	goto	l1079
  2412   0027E2                     l1077:
  2413   0027E2  90D8               	bcf	status,0,c
  2414   0027E4  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  2415   0027E6  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  2416   0027E8  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  2417   0027EA                     l1079:
  2418   0027EA  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  2419   0027EC  D7FA               	goto	l1077
  2420   0027EE                     u150:
  2421   0027EE  90D8               	bcf	status,0,c
  2422   0027F0  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  2423   0027F2  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  2424   0027F4  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  2425   0027F6  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  2426   0027F8  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  2427   0027FA  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  2428   0027FC  A0D8               	btfss	status,0,c
  2429   0027FE  D005               	goto	l1089
  2430   002800  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  2431   002802  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  2432   002804  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  2433   002806  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  2434   002808  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  2435   00280A                     l1089:
  2436   00280A  90D8               	bcf	status,0,c
  2437   00280C  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  2438   00280E  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  2439   002810  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  2440   002812  D7ED               	goto	u150
  2441   002814                     l645:
  2442   002814  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  2443   002818  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2444   00281C  0012               	return		;funcret
  2445   00281E                     __end_of___lwdiv:
  2446                           	callstack 0
  2447                           
  2448 ;; *************** function _configuro *****************
  2449 ;; Defined at:
  2450 ;;		line 16 in file "maincode03.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 3F/3
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2468 ;;Total ram usage:        0 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_main
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text5
  2478   0028C4                     __ptext5:
  2479                           	callstack 0
  2480   0028C4                     _configuro:
  2481                           	callstack 126
  2482                           
  2483                           ;maincode03.c: 18:     OSCCON1 = 0x60;
  2484                           
  2485                           ;incstack = 0
  2486   0028C4  0E60               	movlw	96
  2487   0028C6  0100               	movlb	0	; () banked
  2488   0028C8  6FAD               	movwf	173,b	;volatile
  2489                           
  2490                           ;maincode03.c: 19:     OSCFRQ = 0x06;
  2491   0028CA  0E06               	movlw	6
  2492   0028CC  6FB1               	movwf	177,b	;volatile
  2493                           
  2494                           ;maincode03.c: 20:     OSCEN = 0x40;
  2495   0028CE  0E40               	movlw	64
  2496   0028D0  6FB3               	movwf	179,b	;volatile
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;maincode03.c: 22:     TRISBbits.TRISB4 = 1;
  2500   0028D2  88C7               	bsf	199,4,c	;volatile
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;maincode03.c: 23:     ANSELBbits.ANSELB4 = 0;
  2504   0028D4  0104               	movlb	4	; () banked
  2505   0028D6  9908               	bcf	8,4,b	;volatile
  2506                           
  2507                           ; BSR set to: 4
  2508                           ;maincode03.c: 24:     WPUBbits.WPUB4 = 1;
  2509   0028D8  8909               	bsf	9,4,b	;volatile
  2510                           
  2511                           ; BSR set to: 4
  2512                           ;maincode03.c: 25:     TRISAbits.TRISA0 = 1;
  2513   0028DA  80C6               	bsf	198,0,c	;volatile
  2514                           
  2515                           ; BSR set to: 4
  2516                           ;maincode03.c: 26:     ANSELAbits.ANSELA0 = 1;
  2517   0028DC  8100               	bsf	0,0,b	;volatile
  2518                           
  2519                           ;maincode03.c: 28:     ADCON0bits.FM = 1;
  2520   0028DE  0103               	movlb	3	; () banked
  2521   0028E0  51F3               	movf	243,w,b	;volatile
  2522   0028E2  0BF3               	andlw	-13
  2523   0028E4  0904               	iorlw	4
  2524   0028E6  6FF3               	movwf	243,b	;volatile
  2525                           
  2526                           ; BSR set to: 3
  2527                           ;maincode03.c: 29:     ADCON0bits.CS = 1;
  2528   0028E8  89F3               	bsf	243,4,b	;volatile
  2529                           
  2530                           ; BSR set to: 3
  2531                           ;maincode03.c: 30:     ADPCH = 0x00;
  2532   0028EA  6BEC               	clrf	236,b	;volatile
  2533                           
  2534                           ; BSR set to: 3
  2535                           ;maincode03.c: 31:     ADCON0bits.ADON = 1;
  2536   0028EC  8FF3               	bsf	243,7,b	;volatile
  2537                           
  2538                           ; BSR set to: 3
  2539   0028EE  0012               	return		;funcret
  2540   0028F0                     __end_of_configuro:
  2541                           	callstack 0
  2542                           
  2543 ;; *************** function _POS_CURSOR *****************
  2544 ;; Defined at:
  2545 ;;		line 6 in file "LCD.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  fila            1    wreg     unsigned char 
  2548 ;;  columna         1    3[COMRAM] unsigned char 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  fila            1    4[COMRAM] unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/3
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2560 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2561 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2563 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2564 ;;Total ram usage:        2 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 2
  2567 ;; This function calls:
  2568 ;;		_ENVIA_LCD_CMD
  2569 ;; This function is called by:
  2570 ;;		_main
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text6
  2575   00293E                     __ptext6:
  2576                           	callstack 0
  2577   00293E                     _POS_CURSOR:
  2578                           	callstack 124
  2579                           
  2580                           ; BSR set to: 3
  2581                           ;incstack = 0
  2582                           ;POS_CURSOR@fila stored from wreg
  2583   00293E  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  2584                           
  2585                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2586   002940  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  2587   002942  A4D8               	btfss	status,2,c
  2588   002944  D005               	goto	l1113
  2589                           
  2590                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2591   002946  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2592   002948  0F80               	addlw	128
  2593   00294A  EC30  F014         	call	_ENVIA_LCD_CMD
  2594                           
  2595                           ;LCD.c: 11:  }
  2596   00294E  0012               	return	
  2597   002950                     l1113:
  2598   002950  0E02               	movlw	2
  2599   002952  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2600   002954  A4D8               	btfss	status,2,c
  2601   002956  0012               	return	
  2602                           
  2603                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2604   002958  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2605   00295A  0FC0               	addlw	192
  2606   00295C  EC30  F014         	call	_ENVIA_LCD_CMD
  2607   002960  0012               	return		;funcret
  2608   002962                     __end_of_POS_CURSOR:
  2609                           	callstack 0
  2610                           
  2611 ;; *************** function _LCD_INIT *****************
  2612 ;; Defined at:
  2613 ;;		line 34 in file "maincode03.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;		None
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;		None
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 3F/3
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2631 ;;Total ram usage:        1 bytes
  2632 ;; Hardware stack levels used: 1
  2633 ;; Hardware stack levels required when called: 3
  2634 ;; This function calls:
  2635 ;;		_BORRAR_LCD
  2636 ;;		_CURSOR_HOME
  2637 ;;		_CURSOR_ONOFF
  2638 ;;		_LCD_CONFIG
  2639 ;; This function is called by:
  2640 ;;		_main
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text7
  2645   0028F0                     __ptext7:
  2646                           	callstack 0
  2647   0028F0                     _LCD_INIT:
  2648                           	callstack 123
  2649                           
  2650                           ; BSR set to: 3
  2651                           ;maincode03.c: 35:     TRISD = 0x00;
  2652                           
  2653                           ;incstack = 0
  2654   0028F0  6AC9               	clrf	201,c	;volatile
  2655                           
  2656                           ;maincode03.c: 36:     ANSELD = 0x00;
  2657   0028F2  0104               	movlb	4	; () banked
  2658   0028F4  6B18               	clrf	24,b	;volatile
  2659                           
  2660                           ; BSR set to: 4
  2661                           ;maincode03.c: 37:     LCD_CONFIG();
  2662   0028F6  ECB6  F013         	call	_LCD_CONFIG	;wreg free
  2663                           
  2664                           ;maincode03.c: 38:     _delay((unsigned long)((16)*(32000000UL/4000.0)));
  2665   0028FA  0EA7               	movlw	167
  2666   0028FC  6E05               	movwf	??_LCD_INIT^(0+1280),c
  2667   0028FE  0E3A               	movlw	58
  2668   002900                     u247:
  2669   002900  2EE8               	decfsz	wreg,f,c
  2670   002902  D7FE               	bra	u247
  2671   002904  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  2672   002906  D7FC               	bra	u247
  2673   002908  D000               	nop2	
  2674                           
  2675                           ;maincode03.c: 39:     BORRAR_LCD();
  2676   00290A  ECF0  F014         	call	_BORRAR_LCD	;wreg free
  2677                           
  2678                           ;maincode03.c: 40:     CURSOR_HOME();
  2679   00290E  ECEC  F014         	call	_CURSOR_HOME	;wreg free
  2680                           
  2681                           ;maincode03.c: 41:     CURSOR_ONOFF(1);
  2682   002912  0E01               	movlw	1
  2683   002914  ECC3  F014         	call	_CURSOR_ONOFF
  2684   002918  0012               	return		;funcret
  2685   00291A                     __end_of_LCD_INIT:
  2686                           	callstack 0
  2687                           
  2688 ;; *************** function _LCD_CONFIG *****************
  2689 ;; Defined at:
  2690 ;;		line 72 in file "LCD.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 3F/4
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2707 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2708 ;;Total ram usage:        1 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 2
  2711 ;; This function calls:
  2712 ;;		_ENVIA_LCD_CMD
  2713 ;;		_ENVIA_NIBBLE
  2714 ;; This function is called by:
  2715 ;;		_LCD_INIT
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text8
  2720   00276C                     __ptext8:
  2721                           	callstack 0
  2722   00276C                     _LCD_CONFIG:
  2723                           	callstack 123
  2724                           
  2725                           ; BSR set to: 4
  2726                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  2727                           
  2728                           ;incstack = 0
  2729   00276C  90C1               	bcf	193,0,c	;volatile
  2730                           
  2731                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  2732   00276E  92C1               	bcf	193,1,c	;volatile
  2733                           
  2734                           ; BSR set to: 4
  2735                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  2736   002770  0E30               	movlw	48
  2737   002772  ECD1  F014         	call	_ENVIA_NIBBLE
  2738                           
  2739                           ;LCD.c: 77:         _delay(24000);
  2740   002776  0E20               	movlw	32
  2741   002778  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2742   00277A  0E2A               	movlw	42
  2743   00277C                     u257:
  2744   00277C  2EE8               	decfsz	wreg,f,c
  2745   00277E  D7FE               	bra	u257
  2746   002780  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2747   002782  D7FC               	bra	u257
  2748                           
  2749                           ;LCD.c: 78:         _delay(24000);
  2750   002784  0E20               	movlw	32
  2751   002786  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2752   002788  0E2A               	movlw	42
  2753   00278A                     u267:
  2754   00278A  2EE8               	decfsz	wreg,f,c
  2755   00278C  D7FE               	bra	u267
  2756   00278E  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2757   002790  D7FC               	bra	u267
  2758                           
  2759                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  2760   002792  0E30               	movlw	48
  2761   002794  ECD1  F014         	call	_ENVIA_NIBBLE
  2762                           
  2763                           ;LCD.c: 83:  _delay(1200);
  2764   002798  0EF0               	movlw	240
  2765   00279A                     u277:
  2766   00279A  D000               	nop2	
  2767   00279C  2EE8               	decfsz	wreg,f,c
  2768   00279E  D7FD               	bra	u277
  2769                           
  2770                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  2771   0027A0  0E30               	movlw	48
  2772   0027A2  ECD1  F014         	call	_ENVIA_NIBBLE
  2773                           
  2774                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  2775   0027A6  0E20               	movlw	32
  2776   0027A8  ECD1  F014         	call	_ENVIA_NIBBLE
  2777                           
  2778                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  2779   0027AC  0E01               	movlw	1
  2780   0027AE  EC30  F014         	call	_ENVIA_LCD_CMD
  2781                           
  2782                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  2783   0027B2  0E28               	movlw	40
  2784   0027B4  EC30  F014         	call	_ENVIA_LCD_CMD
  2785                           
  2786                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  2787   0027B8  0E0F               	movlw	15
  2788   0027BA  EC30  F014         	call	_ENVIA_LCD_CMD
  2789                           
  2790                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  2791   0027BE  0E06               	movlw	6
  2792   0027C0  EC30  F014         	call	_ENVIA_LCD_CMD
  2793                           
  2794                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  2795   0027C4  0E01               	movlw	1
  2796   0027C6  EC30  F014         	call	_ENVIA_LCD_CMD
  2797   0027CA  0012               	return		;funcret
  2798   0027CC                     __end_of_LCD_CONFIG:
  2799                           	callstack 0
  2800                           
  2801 ;; *************** function _CURSOR_ONOFF *****************
  2802 ;; Defined at:
  2803 ;;		line 35 in file "LCD.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  estado          1    wreg     unsigned char 
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;  estado          1    3[COMRAM] unsigned char 
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2, status,0, cstack
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/4
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2820 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2821 ;;Total ram usage:        1 bytes
  2822 ;; Hardware stack levels used: 1
  2823 ;; Hardware stack levels required when called: 2
  2824 ;; This function calls:
  2825 ;;		_ENVIA_LCD_CMD
  2826 ;; This function is called by:
  2827 ;;		_LCD_INIT
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text9
  2832   002986                     __ptext9:
  2833                           	callstack 0
  2834   002986                     _CURSOR_ONOFF:
  2835                           	callstack 123
  2836                           
  2837                           ;incstack = 0
  2838                           ;CURSOR_ONOFF@estado stored from wreg
  2839   002986  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  2840                           
  2841                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  2842   002988  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  2843   00298A  A4D8               	btfss	status,2,c
  2844   00298C  D003               	goto	l901
  2845   00298E  0E0E               	movlw	14
  2846   002990  EC30  F014         	call	_ENVIA_LCD_CMD
  2847   002994                     l901:
  2848                           
  2849                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2850   002994  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  2851   002996  A4D8               	btfss	status,2,c
  2852   002998  0012               	return	
  2853   00299A  0E0C               	movlw	12
  2854   00299C  EC30  F014         	call	_ENVIA_LCD_CMD
  2855   0029A0  0012               	return		;funcret
  2856   0029A2                     __end_of_CURSOR_ONOFF:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function _CURSOR_HOME *****************
  2860 ;; Defined at:
  2861 ;;		line 30 in file "LCD.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/4
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 2
  2882 ;; This function calls:
  2883 ;;		_ENVIA_LCD_CMD
  2884 ;; This function is called by:
  2885 ;;		_LCD_INIT
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text10
  2890   0029D8                     __ptext10:
  2891                           	callstack 0
  2892   0029D8                     _CURSOR_HOME:
  2893                           	callstack 123
  2894                           
  2895                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  2896                           
  2897                           ;incstack = 0
  2898   0029D8  0E02               	movlw	2
  2899   0029DA  EC30  F014         	call	_ENVIA_LCD_CMD
  2900   0029DE  0012               	return		;funcret
  2901   0029E0                     __end_of_CURSOR_HOME:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function _BORRAR_LCD *****************
  2905 ;; Defined at:
  2906 ;;		line 67 in file "LCD.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/4
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2924 ;;Total ram usage:        0 bytes
  2925 ;; Hardware stack levels used: 1
  2926 ;; Hardware stack levels required when called: 2
  2927 ;; This function calls:
  2928 ;;		_ENVIA_LCD_CMD
  2929 ;; This function is called by:
  2930 ;;		_LCD_INIT
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text11
  2935   0029E0                     __ptext11:
  2936                           	callstack 0
  2937   0029E0                     _BORRAR_LCD:
  2938                           	callstack 123
  2939                           
  2940                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  2941                           
  2942                           ;incstack = 0
  2943   0029E0  0E01               	movlw	1
  2944   0029E2  EC30  F014         	call	_ENVIA_LCD_CMD
  2945   0029E6  0012               	return		;funcret
  2946   0029E8                     __end_of_BORRAR_LCD:
  2947                           	callstack 0
  2948                           
  2949 ;; *************** function _ENVIA_LCD_CMD *****************
  2950 ;; Defined at:
  2951 ;;		line 104 in file "LCD.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  dato            1    wreg     unsigned char 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  dato            1    1[COMRAM] unsigned char 
  2956 ;;  aux             1    2[COMRAM] unsigned char 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/3
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2970 ;;Total ram usage:        2 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 1
  2973 ;; This function calls:
  2974 ;;		_ENVIA_NIBBLE
  2975 ;;		_LEER_LCD
  2976 ;; This function is called by:
  2977 ;;		_POS_CURSOR
  2978 ;;		_CURSOR_HOME
  2979 ;;		_CURSOR_ONOFF
  2980 ;;		_BORRAR_LCD
  2981 ;;		_LCD_CONFIG
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text12
  2986   002860                     __ptext12:
  2987                           	callstack 0
  2988   002860                     _ENVIA_LCD_CMD:
  2989                           	callstack 124
  2990                           
  2991                           ;incstack = 0
  2992                           ;ENVIA_LCD_CMD@dato stored from wreg
  2993   002860  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  2994                           
  2995                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2996   002862  90C1               	bcf	193,0,c	;volatile
  2997                           
  2998                           ;LCD.c: 108:  LEER_LCD();
  2999   002864  EC85  F013         	call	_LEER_LCD	;wreg free
  3000                           
  3001                           ;LCD.c: 109:  TRISD = 0b00000000;
  3002   002868  6AC9               	clrf	201,c	;volatile
  3003                           
  3004                           ;LCD.c: 111:         _delay(1200);
  3005   00286A  0EF0               	movlw	240
  3006   00286C                     u287:
  3007   00286C  D000               	nop2	
  3008   00286E  2EE8               	decfsz	wreg,f,c
  3009   002870  D7FD               	bra	u287
  3010                           
  3011                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  3012   002872  92C1               	bcf	193,1,c	;volatile
  3013                           
  3014                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  3015   002874  94C1               	bcf	193,2,c	;volatile
  3016                           
  3017                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  3018   002876  90C1               	bcf	193,0,c	;volatile
  3019                           
  3020                           ;LCD.c: 115:  aux = dato & 0xF0;
  3021   002878  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  3022   00287A  0BF0               	andlw	240
  3023   00287C  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  3024                           
  3025                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  3026   00287E  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  3027   002880  ECD1  F014         	call	_ENVIA_NIBBLE
  3028                           
  3029                           ;LCD.c: 117:  aux = dato<<4;
  3030   002884  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  3031   002886  0BF0               	andlw	240
  3032   002888  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  3033                           
  3034                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  3035   00288A  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  3036   00288C  ECD1  F014         	call	_ENVIA_NIBBLE
  3037   002890  0012               	return		;funcret
  3038   002892                     __end_of_ENVIA_LCD_CMD:
  3039                           	callstack 0
  3040                           
  3041 ;; *************** function _ESCRIBE_MENSAJE *****************
  3042 ;; Defined at:
  3043 ;;		line 41 in file "LCD.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  3046 ;;		 -> STR_2(12), STR_1(14), 
  3047 ;;  tam             1    4[COMRAM] unsigned char 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  i               1    6[COMRAM] unsigned char 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/3
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3061 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3062 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3063 ;;Total ram usage:        4 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; Hardware stack levels required when called: 2
  3066 ;; This function calls:
  3067 ;;		_ENVIA_CHAR
  3068 ;; This function is called by:
  3069 ;;		_main
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text13
  3074   002962                     __ptext13:
  3075                           	callstack 0
  3076   002962                     _ESCRIBE_MENSAJE:
  3077                           	callstack 124
  3078                           
  3079                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  3080                           
  3081                           ;incstack = 0
  3082   002962  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  3083                           
  3084                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  3085   002964  6A07               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
  3086   002966  D00A               	goto	l1123
  3087   002968                     l1119:
  3088                           
  3089                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  3090   002968  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  3091   00296A  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  3092   00296C  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  3093   00296E  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  3094   002972                     	if	0	;There is only one active tblptr byte
  3095   002972                     	endif
  3096   002972                     	if	0	;tblptru may be non-zero
  3097   002972                     	endif
  3098   002972                     	if	0	;tblptru may be non-zero
  3099   002972                     	endif
  3100   002972  0008               	tblrd		*
  3101   002974  50F5               	movf	tablat,w,c
  3102   002976  EC49  F014         	call	_ENVIA_CHAR
  3103                           
  3104                           ;LCD.c: 47:  }
  3105   00297A  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  3106   00297C                     l1123:
  3107   00297C  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  3108   00297E  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  3109   002980  B0D8               	btfsc	status,0,c
  3110   002982  0012               	return	
  3111   002984  D7F1               	goto	l1119
  3112   002986                     __end_of_ESCRIBE_MENSAJE:
  3113                           	callstack 0
  3114                           
  3115 ;; *************** function _ENVIA_CHAR *****************
  3116 ;; Defined at:
  3117 ;;		line 50 in file "LCD.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  dato            1    wreg     unsigned char 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  dato            1    1[COMRAM] unsigned char 
  3122 ;;  aux             1    2[COMRAM] unsigned char 
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, status,2, status,0, cstack
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/3
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3136 ;;Total ram usage:        2 bytes
  3137 ;; Hardware stack levels used: 1
  3138 ;; Hardware stack levels required when called: 1
  3139 ;; This function calls:
  3140 ;;		_ENVIA_NIBBLE
  3141 ;;		_LEER_LCD
  3142 ;; This function is called by:
  3143 ;;		_ESCRIBE_MENSAJE
  3144 ;;		_main
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text14
  3149   002892                     __ptext14:
  3150                           	callstack 0
  3151   002892                     _ENVIA_CHAR:
  3152                           	callstack 124
  3153                           
  3154                           ;incstack = 0
  3155                           ;ENVIA_CHAR@dato stored from wreg
  3156   002892  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  3157                           
  3158                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  3159   002894  80C1               	bsf	193,0,c	;volatile
  3160                           
  3161                           ;LCD.c: 54:  LEER_LCD();
  3162   002896  EC85  F013         	call	_LEER_LCD	;wreg free
  3163                           
  3164                           ;LCD.c: 55:  TRISD = 0x00;
  3165   00289A  6AC9               	clrf	201,c	;volatile
  3166                           
  3167                           ;LCD.c: 56:         _delay(1200);
  3168   00289C  0EF0               	movlw	240
  3169   00289E                     u297:
  3170   00289E  D000               	nop2	
  3171   0028A0  2EE8               	decfsz	wreg,f,c
  3172   0028A2  D7FD               	bra	u297
  3173                           
  3174                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  3175   0028A4  92C1               	bcf	193,1,c	;volatile
  3176                           
  3177                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  3178   0028A6  94C1               	bcf	193,2,c	;volatile
  3179                           
  3180                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  3181   0028A8  80C1               	bsf	193,0,c	;volatile
  3182                           
  3183                           ;LCD.c: 61:  aux = dato & 0xF0;
  3184   0028AA  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  3185   0028AC  0BF0               	andlw	240
  3186   0028AE  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  3187                           
  3188                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  3189   0028B0  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  3190   0028B2  ECD1  F014         	call	_ENVIA_NIBBLE
  3191                           
  3192                           ;LCD.c: 63:  aux = dato << 4;
  3193   0028B6  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  3194   0028B8  0BF0               	andlw	240
  3195   0028BA  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  3196                           
  3197                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  3198   0028BC  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  3199   0028BE  ECD1  F014         	call	_ENVIA_NIBBLE
  3200   0028C2  0012               	return		;funcret
  3201   0028C4                     __end_of_ENVIA_CHAR:
  3202                           	callstack 0
  3203                           
  3204 ;; *************** function _LEER_LCD *****************
  3205 ;; Defined at:
  3206 ;;		line 121 in file "LCD.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  aux             1    0[COMRAM] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/3
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3224 ;;Total ram usage:        1 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_ENVIA_CHAR
  3230 ;;		_ENVIA_LCD_CMD
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text15
  3235   00270A                     __ptext15:
  3236                           	callstack 0
  3237   00270A                     _LEER_LCD:
  3238                           	callstack 124
  3239                           
  3240                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3241                           
  3242                           ;incstack = 0
  3243   00270A  0EF8               	movlw	248
  3244   00270C  6EC9               	movwf	201,c	;volatile
  3245                           
  3246                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  3247   00270E  90C1               	bcf	193,0,c	;volatile
  3248                           
  3249                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  3250   002710  82C1               	bsf	193,1,c	;volatile
  3251                           
  3252                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  3253   002712  84C1               	bsf	193,2,c	;volatile
  3254                           
  3255                           ;LCD.c: 128:         _delay(1200);
  3256   002714  0EF0               	movlw	240
  3257   002716                     u307:
  3258   002716  D000               	nop2	
  3259   002718  2EE8               	decfsz	wreg,f,c
  3260   00271A  D7FD               	bra	u307
  3261                           
  3262                           ;LCD.c: 130:  aux = PORTD;
  3263   00271C  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  3264                           
  3265                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  3266   002720  94C1               	bcf	193,2,c	;volatile
  3267                           
  3268                           ;LCD.c: 132:         _delay(1200);
  3269   002722  0EF0               	movlw	240
  3270   002724                     u317:
  3271   002724  D000               	nop2	
  3272   002726  2EE8               	decfsz	wreg,f,c
  3273   002728  D7FD               	bra	u317
  3274                           
  3275                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  3276   00272A  84C1               	bsf	193,2,c	;volatile
  3277                           
  3278                           ;LCD.c: 135:         _delay(1200);
  3279   00272C  0EF0               	movlw	240
  3280   00272E                     u327:
  3281   00272E  D000               	nop2	
  3282   002730  2EE8               	decfsz	wreg,f,c
  3283   002732  D7FD               	bra	u327
  3284   002734                     l847:
  3285                           
  3286                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3287   002734  94C1               	bcf	193,2,c	;volatile
  3288                           
  3289                           ;LCD.c: 138:  aux = aux & 0x80;
  3290   002736  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  3291   002738  0B80               	andlw	128
  3292   00273A  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  3293                           
  3294                           ;LCD.c: 139:  while(aux == 0x80)
  3295   00273C  D012               	goto	l863
  3296   00273E                     l67:
  3297                           
  3298                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3299   00273E  84C1               	bsf	193,2,c	;volatile
  3300                           
  3301                           ;LCD.c: 142:             _delay(1200);
  3302   002740  0EF0               	movlw	240
  3303   002742                     u337:
  3304   002742  D000               	nop2	
  3305   002744  2EE8               	decfsz	wreg,f,c
  3306   002746  D7FD               	bra	u337
  3307                           
  3308                           ;LCD.c: 143:             aux = PORTD;
  3309   002748  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  3310                           
  3311                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3312   00274C  94C1               	bcf	193,2,c	;volatile
  3313                           
  3314                           ;LCD.c: 145:             _delay(1200);
  3315   00274E  0EF0               	movlw	240
  3316   002750                     u347:
  3317   002750  D000               	nop2	
  3318   002752  2EE8               	decfsz	wreg,f,c
  3319   002754  D7FD               	bra	u347
  3320                           
  3321                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3322   002756  84C1               	bsf	193,2,c	;volatile
  3323                           
  3324                           ;LCD.c: 147:             _delay(1200);
  3325   002758  0EF0               	movlw	240
  3326   00275A                     u357:
  3327   00275A  D000               	nop2	
  3328   00275C  2EE8               	decfsz	wreg,f,c
  3329   00275E  D7FD               	bra	u357
  3330   002760  D7E9               	goto	l847
  3331   002762                     l863:
  3332                           
  3333                           ;LCD.c: 139:  while(aux == 0x80)
  3334   002762  0E80               	movlw	128
  3335   002764  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  3336   002766  A4D8               	btfss	status,2,c
  3337   002768  0012               	return	
  3338   00276A  D7E9               	goto	l67
  3339   00276C                     __end_of_LEER_LCD:
  3340                           	callstack 0
  3341                           
  3342 ;; *************** function _ENVIA_NIBBLE *****************
  3343 ;; Defined at:
  3344 ;;		line 93 in file "LCD.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  dato            1    wreg     unsigned char 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  dato            1    0[COMRAM] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/4
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3361 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3362 ;;Total ram usage:        1 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_ENVIA_CHAR
  3368 ;;		_LCD_CONFIG
  3369 ;;		_ENVIA_LCD_CMD
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text16
  3374   0029A2                     __ptext16:
  3375                           	callstack 0
  3376   0029A2                     _ENVIA_NIBBLE:
  3377                           	callstack 124
  3378                           
  3379                           ;incstack = 0
  3380                           ;ENVIA_NIBBLE@dato stored from wreg
  3381   0029A2  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  3382                           
  3383                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3384   0029A4  0E0F               	movlw	15
  3385   0029A6  16C1               	andwf	193,f,c	;volatile
  3386                           
  3387                           ;LCD.c: 96:  dato &= 0xF0;
  3388   0029A8  0EF0               	movlw	240
  3389   0029AA  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  3390                           
  3391                           ;LCD.c: 97:  LATD|= dato;
  3392   0029AC  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  3393   0029AE  12C1               	iorwf	193,f,c	;volatile
  3394                           
  3395                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3396   0029B0  84C1               	bsf	193,2,c	;volatile
  3397                           
  3398                           ;LCD.c: 100:         _delay(1200);
  3399   0029B2  0EF0               	movlw	240
  3400   0029B4                     u367:
  3401   0029B4  D000               	nop2	
  3402   0029B6  2EE8               	decfsz	wreg,f,c
  3403   0029B8  D7FD               	bra	u367
  3404                           
  3405                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3406   0029BA  94C1               	bcf	193,2,c	;volatile
  3407   0029BC  0012               	return		;funcret
  3408   0029BE                     __end_of_ENVIA_NIBBLE:
  3409                           	callstack 0
  3410                           
  3411                           	psect	rparam
  3412   000001                     ___rparam_used  equ	1
  3413   000000                     ___param_bank   equ	0
  3414   000000                     __Lparam        equ	__Lrparam
  3415   000000                     __Hparam        equ	__Hrparam
  3416                           
  3417                           	psect	config
  3418                           
  3419                           ;Config register CONFIG1 @ 0x300000
  3420                           ;	External Oscillator Selection
  3421                           ;	FEXTOSC = OFF, Oscillator not enabled
  3422                           ;	Reset Oscillator Selection
  3423                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3424   300000                     	org	3145728
  3425   300000  FC                 	db	252
  3426                           
  3427                           ;Config register CONFIG2 @ 0x300001
  3428                           ;	Clock out Enable bit
  3429                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3430                           ;	PRLOCKED One-Way Set Enable bit
  3431                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3432                           ;	Clock Switch Enable bit
  3433                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3434                           ;	Fail-Safe Clock Monitor Enable bit
  3435                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3436   300001                     	org	3145729
  3437   300001  FF                 	db	255
  3438                           
  3439                           ;Config register CONFIG3 @ 0x300002
  3440                           ;	MCLR Enable bit
  3441                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3442                           ;	Power-up timer selection bits
  3443                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  3444                           ;	Multi-vector enable bit
  3445                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3446                           ;	IVTLOCK bit One-way set enable bit
  3447                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3448                           ;	Low Power BOR Enable bit
  3449                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3450                           ;	Brown-out Reset Enable bits
  3451                           ;	BOREN = OFF, Brown-out Reset disabled
  3452   300002                     	org	3145730
  3453   300002  3D                 	db	61
  3454                           
  3455                           ;Config register CONFIG4 @ 0x300003
  3456                           ;	Brown-out Reset Voltage Selection bits
  3457                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3458                           ;	ZCD Disable bit
  3459                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3460                           ;	PPSLOCK bit One-Way Set Enable bit
  3461                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3462                           ;	Stack Full/Underflow Reset Enable bit
  3463                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3464                           ;	Low Voltage Programming Enable bit
  3465                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3466                           ;	Extended Instruction Set Enable bit
  3467                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3468   300003                     	org	3145731
  3469   300003  DF                 	db	223
  3470                           
  3471                           ;Config register CONFIG5 @ 0x300004
  3472                           ;	WDT Period selection bits
  3473                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3474                           ;	WDT operating mode
  3475                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3476   300004                     	org	3145732
  3477   300004  9F                 	db	159
  3478                           
  3479                           ;Config register CONFIG6 @ 0x300005
  3480                           ;	WDT Window Select bits
  3481                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3482                           ;	WDT input clock selector
  3483                           ;	WDTCCS = SC, Software Control
  3484   300005                     	org	3145733
  3485   300005  FF                 	db	255
  3486                           
  3487                           ;Config register CONFIG7 @ 0x300006
  3488                           ;	Boot Block Size selection bits
  3489                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3490                           ;	Boot Block enable bit
  3491                           ;	BBEN = OFF, Boot block disabled
  3492                           ;	Storage Area Flash enable bit
  3493                           ;	SAFEN = OFF, SAF disabled
  3494                           ;	Background Debugger
  3495                           ;	DEBUG = OFF, Background Debugger disabled
  3496   300006                     	org	3145734
  3497   300006  FF                 	db	255
  3498                           
  3499                           ;Config register CONFIG8 @ 0x300007
  3500                           ;	Boot Block Write Protection bit
  3501                           ;	WRTB = OFF, Boot Block not Write protected
  3502                           ;	Configuration Register Write Protection bit
  3503                           ;	WRTC = OFF, Configuration registers not Write protected
  3504                           ;	Data EEPROM Write Protection bit
  3505                           ;	WRTD = OFF, Data EEPROM not Write protected
  3506                           ;	SAF Write protection bit
  3507                           ;	WRTSAF = OFF, SAF not Write Protected
  3508                           ;	Application Block write protection bit
  3509                           ;	WRTAPP = OFF, Application Block not write protected
  3510   300007                     	org	3145735
  3511   300007  FF                 	db	255
  3512                           
  3513                           ;Config register CONFIG10 @ 0x300009
  3514                           ;	PFM and Data EEPROM Code Protection bit
  3515                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3516   300009                     	org	3145737
  3517   300009  FF                 	db	255
  3518                           tosu	equ	0x4FF
  3519                           tosh	equ	0x4FE
  3520                           tosl	equ	0x4FD
  3521                           stkptr	equ	0x4FC
  3522                           pclatu	equ	0x4FB
  3523                           pclath	equ	0x4FA
  3524                           pcl	equ	0x4F9
  3525                           tblptru	equ	0x4F8
  3526                           tblptrh	equ	0x4F7
  3527                           tblptrl	equ	0x4F6
  3528                           tablat	equ	0x4F5
  3529                           prodh	equ	0x4F4
  3530                           prodl	equ	0x4F3
  3531                           indf0	equ	0x4EF
  3532                           postinc0	equ	0x4EE
  3533                           postdec0	equ	0x4ED
  3534                           preinc0	equ	0x4EC
  3535                           plusw0	equ	0x4EB
  3536                           fsr0h	equ	0x4EA
  3537                           fsr0l	equ	0x4E9
  3538                           wreg	equ	0x4E8
  3539                           indf1	equ	0x4E7
  3540                           postinc1	equ	0x4E6
  3541                           postdec1	equ	0x4E5
  3542                           preinc1	equ	0x4E4
  3543                           plusw1	equ	0x4E3
  3544                           fsr1h	equ	0x4E2
  3545                           fsr1l	equ	0x4E1
  3546                           bsr	equ	0x4E0
  3547                           indf2	equ	0x4DF
  3548                           postinc2	equ	0x4DE
  3549                           postdec2	equ	0x4DD
  3550                           preinc2	equ	0x4DC
  3551                           plusw2	equ	0x4DB
  3552                           fsr2h	equ	0x4DA
  3553                           fsr2l	equ	0x4D9
  3554                           status	equ	0x4D8

Data Sizes:
    Strings     26
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      20
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_conversion
    _conversion->___lwdiv
    ___lwdiv->___lwmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1529
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                           _LCD_INIT
                         _POS_CURSOR
                          _configuro
                         _conversion
                           _leer_ADC
 ---------------------------------------------------------------------------------
 (1) _leer_ADC                                             6     4      2      24
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _conversion                                           2     0      2     422
                                             12 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     165
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     168
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     223
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     215
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _LCD_INIT
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _configuro
   _conversion
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _leer_ADC

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh        831      0       0      0.0%
BITBIGSFRh         268      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBIGSFRlll       173      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     14      20     21.1%
BITBIGSFRllh         5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      20      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Oct 16 15:47:06 2024

                     l67 273E            ENVIA_CHAR@aux 0503                      l137 291E  
                    l901 2994                      l645 2814                      l655 2856  
                    l863 2762                      l847 2734                      u150 27EE  
                    u307 2716                      u180 2838                      u317 2724  
                    u327 272E                      u247 2900                      u337 2742  
                    u257 277C                      u347 2750                      u267 278A  
                    u357 275A                      u277 279A                      u367 29B4  
                    u287 286C                      u297 289E              LEER_LCD@aux 0501  
                    wreg 04E8             ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 0501  
         ENVIA_CHAR@dato 0502                     l1113 2950                     l1105 284C  
                   l1123 297C                     l1119 2968                     l1145 26C4  
                   l1077 27E2                     l1079 27EA                     l1089 280A  
                   l1097 282C                     l1099 2834                     STR_1 2601  
                   STR_2 260F                     _LATD 04C1                     _main 26A6  
                   start FFFC            ?_CURSOR_ONOFF 0501             ___param_bank 0000  
        ??_ENVIA_LCD_CMD 0502         __end_of_LCD_INIT 291A         __end_of_LEER_LCD 276C  
                  ?_main 0501                    _ADPCH 03EC          __end_of___lwdiv 281E  
        __end_of___lwmod 2860                    _OSCEN 00B3                    _PORTD 04D1  
                  _TRISD 04C9              ?_POS_CURSOR 0504                    tablat 04F5  
                  status 04D8           ??_CURSOR_ONOFF 0504          __initialization 29BE  
           __end_of_main 270A          _ESCRIBE_MENSAJE 2962                   ??_main 050F  
          __activetblptr 0001                   _ADRESH 03EB                   _ADRESL 03EA  
                 _ANSELD 0418                   _OSCFRQ 00B1         __end_of_leer_ADC 293E  
                 _decena 0512     __end_of_ENVIA_NIBBLE 29BE                ??___lwdiv 050A  
              ??___lwmod 0505                   _millar 0514                   isa$std 0001  
                 _unidad 0511             __mediumconst 0000                   tblptrh 04F7  
                 tblptrl 04F6                   tblptru 04F8             ??_BORRAR_LCD 0504  
              ?_LCD_INIT 0501                ?_LEER_LCD 0501               __accesstop 0560  
__end_of__initialization 29CA             ??_LCD_CONFIG 0504            ___rparam_used 0001  
           ??_ENVIA_CHAR 0502  __end_of_ESCRIBE_MENSAJE 2986           __pcstackCOMRAM 0501  
     __end_of_BORRAR_LCD 29E8         ENVIA_LCD_CMD@aux 0503     __end_of_CURSOR_ONOFF 29A2  
     __end_of_LCD_CONFIG 27CC       __end_of_ENVIA_CHAR 28C4               ??_LCD_INIT 0505  
             ??_LEER_LCD 0501         ENVIA_NIBBLE@dato 0501                  _OSCCON1 00AD  
           ??_POS_CURSOR 0505                ?_leer_ADC 0501               _conversion 261C  
                __Hparam 0000                  __Lparam 0000         ?_ESCRIBE_MENSAJE 0504  
      __end_of_configuro 28F0                  ___lwdiv 27CC                  ___lwmod 281E  
           __psmallconst 2600    __end_of_ENVIA_LCD_CMD 2892                  __pcinit 29BE  
     __end_of_POS_CURSOR 2962                  __ramtop 2600                  _centena 0513  
                __ptext0 26A6                  __ptext1 291A                  __ptext2 261C  
                __ptext3 281E                  __ptext4 27CC                  __ptext5 28C4  
                __ptext6 293E                  __ptext7 28F0                  __ptext8 276C  
                __ptext9 2986               ??_leer_ADC 0503             _ENVIA_NIBBLE 29A2  
   end_of_initialization 29CA                _TRISAbits 04C6                _TRISBbits 04C7  
            ?_conversion 050D             _CURSOR_ONOFF 2986       CURSOR_ONOFF@estado 0504  
          ??_CURSOR_HOME 0504      start_initialization 29BE        ENVIA_LCD_CMD@dato 0502  
            __pbssCOMRAM 050F      __end_of_CURSOR_HOME 29E0         ___lwdiv@dividend 0506  
               ?___lwdiv 0506                 ?___lwmod 0501                _configuro 28C4  
            __smallconst 2600         ___lwdiv@quotient 050A                 _LCD_INIT 28F0  
               _LEER_LCD 270A                 _LATDbits 04C1         ESCRIBE_MENSAJE@i 0507  
         POS_CURSOR@fila 0505               ?_configuro 0501               _ADCON0bits 03F3  
               _WPUBbits 0409              _CURSOR_HOME 29D8             ??_conversion 050F  
        leer_ADC@juntada 0505                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 2600               _ANSELAbits 0400               _ANSELBbits 0408  
     __end_of_conversion 26A6          ___lwdiv@divisor 0508          ___lwdiv@counter 050C  
               __ptext10 29D8                 __ptext11 29E0                 __ptext12 2860  
               __ptext13 2962                 __ptext14 2892                 __ptext15 270A  
               __ptext16 29A2               _BORRAR_LCD 29E0                 _leer_ADC 291A  
          _resultado_ADC 050F               _LCD_CONFIG 276C               _ENVIA_CHAR 2892  
               isa$xinst 0000            _ENVIA_LCD_CMD 2860              ??_configuro 0501  
         conversion@dato 050D        ??_ESCRIBE_MENSAJE 0506    ESCRIBE_MENSAJE@cadena 0504  
       ___lwmod@dividend 0501           ?_ENVIA_LCD_CMD 0501          ___lwmod@divisor 0503  
        ___lwmod@counter 0505              ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501  
             _POS_CURSOR 293E              ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 0505  
            ?_ENVIA_CHAR 0501        POS_CURSOR@columna 0504  
