

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed May 15 16:22:57 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 23/02/2024 GMT
    26                           ; 
    27                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F57Q43 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     _LATD	set	1217
    60   000000                     _OSCCON1	set	173
    61   000000                     _OSCFRQ	set	177
    62   000000                     _OSCEN	set	179
    63   000000                     _ANSELD	set	1048
    64   000000                     _LATDbits	set	1217
    65   000000                     _TRISD	set	1225
    66   000000                     _PORTD	set	1233
    67                           
    68                           	psect	smallconst
    69   002500                     __psmallconst:
    70                           	callstack 0
    71   002500  00                 	db	0
    72   002501                     STR_1:
    73   002501  48                 	db	72	;'H'
    74   002502  6F                 	db	111	;'o'
    75   002503  6C                 	db	108	;'l'
    76   002504  61                 	db	97	;'a'
    77   002505  20                 	db	32
    78   002506  55                 	db	85	;'U'
    79   002507  50                 	db	80	;'P'
    80   002508  43                 	db	67	;'C'
    81   002509  49                 	db	73	;'I'
    82   00250A  4E                 	db	78	;'N'
    83   00250B  4F                 	db	79	;'O'
    84   00250C  00                 	db	0
    85   00250D                     STR_2:
    86   00250D  6D                 	db	109	;'m'
    87   00250E  65                 	db	101	;'e'
    88   00250F  63                 	db	99	;'c'
    89   002510  61                 	db	97	;'a'
    90   002511  20                 	db	32
    91   002512  79                 	db	121	;'y'
    92   002513  20                 	db	32
    93   002514  65                 	db	101	;'e'
    94   002515  6C                 	db	108	;'l'
    95   002516  65                 	db	101	;'e'
    96   002517  63                 	db	99	;'c'
    97   002518  00                 	db	0
    98   002519  00                 	db	0	; dummy byte at the end
    99   000000                     
   100                           ; #config settings
   101                           
   102                           	psect	cinit
   103   00279A                     __pcinit:
   104                           	callstack 0
   105   00279A                     start_initialization:
   106                           	callstack 0
   107   00279A                     __initialization:
   108                           	callstack 0
   109   00279A                     end_of_initialization:
   110                           	callstack 0
   111   00279A                     __end_of__initialization:
   112                           	callstack 0
   113   00279A  0100               	movlb	0
   114   00279C  EF51  F013         	goto	_main	;jump to C main() function
   115                           
   116                           	psect	cstackCOMRAM
   117   000501                     __pcstackCOMRAM:
   118                           	callstack 0
   119   000501                     ?_strlen:
   120                           	callstack 0
   121   000501                     ENVIA_NIBBLE@dato:
   122                           	callstack 0
   123   000501                     strlen@s:
   124                           	callstack 0
   125                           
   126                           ; 1 bytes @ 0x0
   127   000501                     	ds	1
   128   000502                     ENVIA_CHAR@dato:
   129                           	callstack 0
   130   000502                     ENVIA_LCD_CMD@dato:
   131                           	callstack 0
   132                           
   133                           ; 1 bytes @ 0x1
   134   000502                     	ds	1
   135   000503                     ENVIA_CHAR@aux:
   136                           	callstack 0
   137   000503                     ENVIA_LCD_CMD@aux:
   138                           	callstack 0
   139   000503                     strlen@a:
   140                           	callstack 0
   141                           
   142                           ; 1 bytes @ 0x2
   143   000503                     	ds	1
   144   000504                     ??_LCD_CONFIG:
   145   000504                     POS_CURSOR@columna:
   146                           	callstack 0
   147   000504                     CURSOR_ONOFF@estado:
   148                           	callstack 0
   149   000504                     ESCRIBE_MENSAJE2@cadena:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x3
   153   000504                     	ds	1
   154   000505                     ??_LCD_INIT:
   155   000505                     ??_ESCRIBE_MENSAJE2:
   156   000505                     POS_CURSOR@fila:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x4
   160   000505                     	ds	1
   161   000506                     ESCRIBE_MENSAJE2@tam:
   162                           	callstack 0
   163                           
   164                           ; 1 bytes @ 0x5
   165   000506                     	ds	1
   166   000507                     ESCRIBE_MENSAJE2@i:
   167                           	callstack 0
   168                           
   169                           ; 1 bytes @ 0x6
   170   000507                     	ds	1
   171   000508                     
   172                           ; 1 bytes @ 0x7
   173 ;;
   174 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   175 ;;
   176 ;; *************** function _main *****************
   177 ;; Defined at:
   178 ;;		line 12 in file "maincode3.c"
   179 ;; Parameters:    Size  Location     Type
   180 ;;		None
   181 ;; Auto vars:     Size  Location     Type
   182 ;;		None
   183 ;; Return value:  Size  Location     Type
   184 ;;                  1    wreg      void 
   185 ;; Registers used:
   186 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   187 ;; Tracked objects:
   188 ;;		On entry : 0/0
   189 ;;		On exit  : 0/0
   190 ;;		Unchanged: 0/0
   191 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   196 ;;Total ram usage:        0 bytes
   197 ;; Hardware stack levels required when called: 4
   198 ;; This function calls:
   199 ;;		_ESCRIBE_MENSAJE2
   200 ;;		_LCD_INIT
   201 ;;		_POS_CURSOR
   202 ;;		_configuro
   203 ;; This function is called by:
   204 ;;		Startup code after reset
   205 ;; This function uses a non-reentrant model
   206 ;;
   207                           
   208                           	psect	text0
   209   0026A2                     __ptext0:
   210                           	callstack 0
   211   0026A2                     _main:
   212                           	callstack 123
   213   0026A2                     
   214                           ;maincode3.c: 13:     configuro();
   215   0026A2  ECBD  F013         	call	_configuro	;wreg free
   216   0026A6                     
   217                           ;maincode3.c: 14:     LCD_INIT();
   218   0026A6  EC16  F013         	call	_LCD_INIT	;wreg free
   219   0026AA                     
   220                           ;maincode3.c: 15:     POS_CURSOR(1,0);
   221   0026AA  0E00               	movlw	0
   222   0026AC  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   223   0026AE  0E01               	movlw	1
   224   0026B0  EC8D  F012         	call	_POS_CURSOR
   225   0026B4                     
   226                           ;maincode3.c: 16:     ESCRIBE_MENSAJE2("Hola UPCINO");
   227   0026B4  0E01               	movlw	low STR_1
   228   0026B6  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   229   0026B8  ECF4  F012         	call	_ESCRIBE_MENSAJE2	;wreg free
   230   0026BC                     
   231                           ;maincode3.c: 17:     POS_CURSOR(2,0);
   232   0026BC  0E00               	movlw	0
   233   0026BE  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   234   0026C0  0E02               	movlw	2
   235   0026C2  EC8D  F012         	call	_POS_CURSOR
   236   0026C6                     
   237                           ;maincode3.c: 18:     ESCRIBE_MENSAJE2("meca y elec");
   238   0026C6  0E0D               	movlw	low STR_2
   239   0026C8  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   240   0026CA  ECF4  F012         	call	_ESCRIBE_MENSAJE2	;wreg free
   241   0026CE                     l20:
   242   0026CE  EF67  F013         	goto	l20
   243   0026D2  EFFE  F0FF         	goto	start
   244   0026D6                     __end_of_main:
   245                           	callstack 0
   246                           
   247 ;; *************** function _configuro *****************
   248 ;; Defined at:
   249 ;;		line 6 in file "maincode3.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;		None
   254 ;; Return value:  Size  Location     Type
   255 ;;                  1    wreg      void 
   256 ;; Registers used:
   257 ;;		wreg, status,2
   258 ;; Tracked objects:
   259 ;;		On entry : 0/0
   260 ;;		On exit  : 0/0
   261 ;;		Unchanged: 0/0
   262 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   267 ;;Total ram usage:        0 bytes
   268 ;; Hardware stack levels used: 1
   269 ;; This function calls:
   270 ;;		Nothing
   271 ;; This function is called by:
   272 ;;		_main
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276                           	psect	text1
   277   00277A                     __ptext1:
   278                           	callstack 0
   279   00277A                     _configuro:
   280                           	callstack 126
   281   00277A                     
   282                           ;maincode3.c: 7:     OSCCON1 = 0x60;
   283   00277A  0E60               	movlw	96
   284   00277C  0100               	movlb	0	; () banked
   285   00277E  6FAD               	movwf	173,b	;volatile
   286                           
   287                           ;maincode3.c: 8:     OSCFRQ = 0x05;
   288   002780  0E05               	movlw	5
   289   002782  6FB1               	movwf	177,b	;volatile
   290                           
   291                           ;maincode3.c: 9:     OSCEN = 0x40;
   292   002784  0E40               	movlw	64
   293   002786  6FB3               	movwf	179,b	;volatile
   294   002788                     
   295                           ; BSR set to: 0
   296   002788  0012               	return		;funcret
   297   00278A                     __end_of_configuro:
   298                           	callstack 0
   299                           
   300 ;; *************** function _POS_CURSOR *****************
   301 ;; Defined at:
   302 ;;		line 9 in file "LCD.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;  fila            1    wreg     unsigned char 
   305 ;;  columna         1    3[COMRAM] unsigned char 
   306 ;; Auto vars:     Size  Location     Type
   307 ;;  fila            1    4[COMRAM] unsigned char 
   308 ;; Return value:  Size  Location     Type
   309 ;;                  1    wreg      void 
   310 ;; Registers used:
   311 ;;		wreg, status,2, status,0, cstack
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   317 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   318 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   320 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   321 ;;Total ram usage:        2 bytes
   322 ;; Hardware stack levels used: 1
   323 ;; Hardware stack levels required when called: 2
   324 ;; This function calls:
   325 ;;		_ENVIA_LCD_CMD
   326 ;; This function is called by:
   327 ;;		_main
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           	psect	text2
   332   00251A                     __ptext2:
   333                           	callstack 0
   334   00251A                     _POS_CURSOR:
   335                           	callstack 124
   336                           
   337                           ; BSR set to: 0
   338                           ;incstack = 0
   339                           ;POS_CURSOR@fila stored from wreg
   340   00251A  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
   341   00251C                     
   342                           ;LCD.c: 10:  if(fila == 1){
   343   00251C  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
   344   00251E  A4D8               	btfss	status,2,c
   345   002520  EF94  F012         	goto	u221
   346   002524  EF96  F012         	goto	u220
   347   002528                     u221:
   348   002528  EF9C  F012         	goto	l1216
   349   00252C                     u220:
   350   00252C                     
   351                           ;LCD.c: 11:   ENVIA_LCD_CMD(0x80+columna);
   352   00252C  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   353   00252E  0F80               	addlw	128
   354   002530  EC83  F013         	call	_ENVIA_LCD_CMD
   355                           
   356                           ;LCD.c: 12:  }
   357   002534  EFC9  F012         	goto	l53
   358   002538                     l1216:
   359   002538  0E02               	movlw	2
   360   00253A  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   361   00253C  A4D8               	btfss	status,2,c
   362   00253E  EFA3  F012         	goto	u231
   363   002542  EFA5  F012         	goto	u230
   364   002546                     u231:
   365   002546  EFAB  F012         	goto	l1220
   366   00254A                     u230:
   367   00254A                     
   368                           ;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   369   00254A  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   370   00254C  0FC0               	addlw	192
   371   00254E  EC83  F013         	call	_ENVIA_LCD_CMD
   372                           
   373                           ;LCD.c: 15:  }
   374   002552  EFC9  F012         	goto	l53
   375   002556                     l1220:
   376   002556  0E03               	movlw	3
   377   002558  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   378   00255A  A4D8               	btfss	status,2,c
   379   00255C  EFB2  F012         	goto	u241
   380   002560  EFB4  F012         	goto	u240
   381   002564                     u241:
   382   002564  EFBA  F012         	goto	l1224
   383   002568                     u240:
   384   002568                     
   385                           ;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
   386   002568  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   387   00256A  0F94               	addlw	148
   388   00256C  EC83  F013         	call	_ENVIA_LCD_CMD
   389                           
   390                           ;LCD.c: 18:  }
   391   002570  EFC9  F012         	goto	l53
   392   002574                     l1224:
   393   002574  0E04               	movlw	4
   394   002576  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   395   002578  A4D8               	btfss	status,2,c
   396   00257A  EFC1  F012         	goto	u251
   397   00257E  EFC3  F012         	goto	u250
   398   002582                     u251:
   399   002582  EFC9  F012         	goto	l49
   400   002586                     u250:
   401   002586                     
   402                           ;LCD.c: 20:   ENVIA_LCD_CMD(0xD4+columna);
   403   002586  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   404   002588  0FD4               	addlw	212
   405   00258A  EC83  F013         	call	_ENVIA_LCD_CMD
   406   00258E  EFC9  F012         	goto	l53
   407   002592                     l49:
   408   002592                     l53:
   409   002592  0012               	return		;funcret
   410   002594                     __end_of_POS_CURSOR:
   411                           	callstack 0
   412                           
   413 ;; *************** function _LCD_INIT *****************
   414 ;; Defined at:
   415 ;;		line 171 in file "LCD.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   433 ;;Total ram usage:        1 bytes
   434 ;; Hardware stack levels used: 1
   435 ;; Hardware stack levels required when called: 3
   436 ;; This function calls:
   437 ;;		_BORRAR_LCD
   438 ;;		_CURSOR_HOME
   439 ;;		_CURSOR_ONOFF
   440 ;;		_LCD_CONFIG
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           	psect	text3
   447   00262C                     __ptext3:
   448                           	callstack 0
   449   00262C                     _LCD_INIT:
   450                           	callstack 123
   451   00262C                     
   452                           ;LCD.c: 172:     TRISD = 0x00;
   453   00262C  0E00               	movlw	0
   454   00262E  6EC9               	movwf	201,c	;volatile
   455                           
   456                           ;LCD.c: 173:     ANSELD = 0x00;
   457   002630  0E00               	movlw	0
   458   002632  0104               	movlb	4	; () banked
   459   002634  6F18               	movwf	24,b	;volatile
   460   002636                     
   461                           ; BSR set to: 4
   462                           ;LCD.c: 174:     _delay((unsigned long)((15)*(16000000UL/4000.0)));
   463   002636  0E4E               	movlw	78
   464   002638  6E05               	movwf	??_LCD_INIT^(0+1280),c
   465   00263A  0EEB               	movlw	235
   466   00263C                     u277:
   467   00263C  2EE8               	decfsz	wreg,f,c
   468   00263E  D7FE               	bra	u277
   469   002640  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   470   002642  D7FC               	bra	u277
   471   002644  0000               	nop	
   472   002646                     
   473                           ;LCD.c: 175:     LCD_CONFIG();
   474   002646  ECCA  F012         	call	_LCD_CONFIG	;wreg free
   475   00264A                     
   476                           ;LCD.c: 176:     _delay((unsigned long)((15)*(16000000UL/4000.0)));
   477   00264A  0E4E               	movlw	78
   478   00264C  6E05               	movwf	??_LCD_INIT^(0+1280),c
   479   00264E  0EEB               	movlw	235
   480   002650                     u287:
   481   002650  2EE8               	decfsz	wreg,f,c
   482   002652  D7FE               	bra	u287
   483   002654  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   484   002656  D7FC               	bra	u287
   485   002658  0000               	nop	
   486   00265A                     
   487                           ;LCD.c: 177:     BORRAR_LCD();
   488   00265A  ECC9  F013         	call	_BORRAR_LCD	;wreg free
   489   00265E                     
   490                           ;LCD.c: 178:     CURSOR_HOME();
   491   00265E  ECC5  F013         	call	_CURSOR_HOME	;wreg free
   492   002662                     
   493                           ;LCD.c: 179:     CURSOR_ONOFF(1);
   494   002662  0E01               	movlw	1
   495   002664  EC6B  F013         	call	_CURSOR_ONOFF
   496   002668  0012               	return		;funcret
   497   00266A                     __end_of_LCD_INIT:
   498                           	callstack 0
   499                           
   500 ;; *************** function _LCD_CONFIG *****************
   501 ;; Defined at:
   502 ;;		line 94 in file "LCD.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;		None
   505 ;; Auto vars:     Size  Location     Type
   506 ;;		None
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, status,2, status,0, cstack
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   518 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   519 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   520 ;;Total ram usage:        1 bytes
   521 ;; Hardware stack levels used: 1
   522 ;; Hardware stack levels required when called: 2
   523 ;; This function calls:
   524 ;;		_ENVIA_LCD_CMD
   525 ;;		_ENVIA_NIBBLE
   526 ;; This function is called by:
   527 ;;		_LCD_INIT
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           	psect	text4
   532   002594                     __ptext4:
   533                           	callstack 0
   534   002594                     _LCD_CONFIG:
   535                           	callstack 123
   536   002594                     
   537                           ;LCD.c: 95:  LATDbits.LATD0 = 0;
   538   002594  90C1               	bcf	193,0,c	;volatile
   539                           
   540                           ;LCD.c: 96:  LATDbits.LATD1 = 0;
   541   002596  92C1               	bcf	193,1,c	;volatile
   542   002598                     
   543                           ;LCD.c: 97:  ENVIA_NIBBLE(0x30);
   544   002598  0E30               	movlw	48
   545   00259A  ECAF  F013         	call	_ENVIA_NIBBLE
   546   00259E                     
   547                           ;LCD.c: 98:     _delay((unsigned long)((4)*(16000000UL/4000.0)));
   548   00259E  0E15               	movlw	21
   549   0025A0  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   550   0025A2  0EC6               	movlw	198
   551   0025A4                     u297:
   552   0025A4  2EE8               	decfsz	wreg,f,c
   553   0025A6  D7FE               	bra	u297
   554   0025A8  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   555   0025AA  D7FC               	bra	u297
   556   0025AC  D000               	nop2	
   557   0025AE                     
   558                           ;LCD.c: 99:  ENVIA_NIBBLE(0x30);
   559   0025AE  0E30               	movlw	48
   560   0025B0  ECAF  F013         	call	_ENVIA_NIBBLE
   561                           
   562                           ;LCD.c: 100:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
   563   0025B4  0E85               	movlw	133
   564   0025B6                     u307:
   565   0025B6  2EE8               	decfsz	wreg,f,c
   566   0025B8  D7FE               	bra	u307
   567   0025BA  0000               	nop	
   568   0025BC                     
   569                           ;LCD.c: 101:     ENVIA_NIBBLE(0x30);
   570   0025BC  0E30               	movlw	48
   571   0025BE  ECAF  F013         	call	_ENVIA_NIBBLE
   572   0025C2                     
   573                           ;LCD.c: 102:  ENVIA_NIBBLE(0x20);
   574   0025C2  0E20               	movlw	32
   575   0025C4  ECAF  F013         	call	_ENVIA_NIBBLE
   576   0025C8                     
   577                           ;LCD.c: 103:  ENVIA_LCD_CMD(0x01);
   578   0025C8  0E01               	movlw	1
   579   0025CA  EC83  F013         	call	_ENVIA_LCD_CMD
   580   0025CE                     
   581                           ;LCD.c: 104:  ENVIA_LCD_CMD(0x28);
   582   0025CE  0E28               	movlw	40
   583   0025D0  EC83  F013         	call	_ENVIA_LCD_CMD
   584   0025D4                     
   585                           ;LCD.c: 105:  ENVIA_LCD_CMD(0x0F);
   586   0025D4  0E0F               	movlw	15
   587   0025D6  EC83  F013         	call	_ENVIA_LCD_CMD
   588   0025DA                     
   589                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x06);
   590   0025DA  0E06               	movlw	6
   591   0025DC  EC83  F013         	call	_ENVIA_LCD_CMD
   592   0025E0                     
   593                           ;LCD.c: 107:  ENVIA_LCD_CMD(0x01);
   594   0025E0  0E01               	movlw	1
   595   0025E2  EC83  F013         	call	_ENVIA_LCD_CMD
   596   0025E6  0012               	return		;funcret
   597   0025E8                     __end_of_LCD_CONFIG:
   598                           	callstack 0
   599                           
   600 ;; *************** function _CURSOR_ONOFF *****************
   601 ;; Defined at:
   602 ;;		line 54 in file "LCD.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  estado          1    wreg     unsigned char 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  estado          1    3[COMRAM] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   620 ;;Total ram usage:        1 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 2
   623 ;; This function calls:
   624 ;;		_ENVIA_LCD_CMD
   625 ;; This function is called by:
   626 ;;		_LCD_INIT
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text5
   631   0026D6                     __ptext5:
   632                           	callstack 0
   633   0026D6                     _CURSOR_ONOFF:
   634                           	callstack 123
   635                           
   636                           ;incstack = 0
   637                           ;CURSOR_ONOFF@estado stored from wreg
   638   0026D6  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   639   0026D8                     
   640                           ;LCD.c: 55:  if(estado == 0) ENVIA_LCD_CMD(0x0E);
   641   0026D8  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   642   0026DA  A4D8               	btfss	status,2,c
   643   0026DC  EF72  F013         	goto	u11
   644   0026E0  EF74  F013         	goto	u10
   645   0026E4                     u11:
   646   0026E4  EF77  F013         	goto	l898
   647   0026E8                     u10:
   648   0026E8  0E0E               	movlw	14
   649   0026EA  EC83  F013         	call	_ENVIA_LCD_CMD
   650   0026EE                     l898:
   651                           
   652                           ;LCD.c: 56:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   653   0026EE  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   654   0026F0  A4D8               	btfss	status,2,c
   655   0026F2  EF7D  F013         	goto	u21
   656   0026F6  EF7F  F013         	goto	u20
   657   0026FA                     u21:
   658   0026FA  EF82  F013         	goto	l83
   659   0026FE                     u20:
   660   0026FE  0E0C               	movlw	12
   661   002700  EC83  F013         	call	_ENVIA_LCD_CMD
   662   002704                     l83:
   663   002704  0012               	return		;funcret
   664   002706                     __end_of_CURSOR_ONOFF:
   665                           	callstack 0
   666                           
   667 ;; *************** function _CURSOR_HOME *****************
   668 ;; Defined at:
   669 ;;		line 34 in file "LCD.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   687 ;;Total ram usage:        0 bytes
   688 ;; Hardware stack levels used: 1
   689 ;; Hardware stack levels required when called: 2
   690 ;; This function calls:
   691 ;;		_ENVIA_LCD_CMD
   692 ;; This function is called by:
   693 ;;		_LCD_INIT
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           	psect	text6
   698   00278A                     __ptext6:
   699                           	callstack 0
   700   00278A                     _CURSOR_HOME:
   701                           	callstack 123
   702   00278A                     
   703                           ;LCD.c: 35:  ENVIA_LCD_CMD(0x02);
   704   00278A  0E02               	movlw	2
   705   00278C  EC83  F013         	call	_ENVIA_LCD_CMD
   706   002790  0012               	return		;funcret
   707   002792                     __end_of_CURSOR_HOME:
   708                           	callstack 0
   709                           
   710 ;; *************** function _BORRAR_LCD *****************
   711 ;; Defined at:
   712 ;;		line 90 in file "LCD.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used: 1
   732 ;; Hardware stack levels required when called: 2
   733 ;; This function calls:
   734 ;;		_ENVIA_LCD_CMD
   735 ;; This function is called by:
   736 ;;		_LCD_INIT
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text7
   741   002792                     __ptext7:
   742                           	callstack 0
   743   002792                     _BORRAR_LCD:
   744                           	callstack 123
   745   002792                     
   746                           ;LCD.c: 91:  ENVIA_LCD_CMD(0x01);
   747   002792  0E01               	movlw	1
   748   002794  EC83  F013         	call	_ENVIA_LCD_CMD
   749   002798  0012               	return		;funcret
   750   00279A                     __end_of_BORRAR_LCD:
   751                           	callstack 0
   752                           
   753 ;; *************** function _ENVIA_LCD_CMD *****************
   754 ;; Defined at:
   755 ;;		line 119 in file "LCD.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;  dato            1    wreg     unsigned char 
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  dato            1    1[COMRAM] unsigned char 
   760 ;;  aux             1    2[COMRAM] unsigned char 
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, status,2, status,0, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   771 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   774 ;;Total ram usage:        2 bytes
   775 ;; Hardware stack levels used: 1
   776 ;; Hardware stack levels required when called: 1
   777 ;; This function calls:
   778 ;;		_ENVIA_NIBBLE
   779 ;; This function is called by:
   780 ;;		_POS_CURSOR
   781 ;;		_CURSOR_HOME
   782 ;;		_CURSOR_ONOFF
   783 ;;		_BORRAR_LCD
   784 ;;		_LCD_CONFIG
   785 ;;		_BLINK_CURSOR
   786 ;;		_DISPLAY_ONOFF
   787 ;;		_CURSOR_SHIFTLEFT
   788 ;;		_CURSOR_SHIFTRIGHT
   789 ;;		_DISPLAY_SHIFTLEFT
   790 ;;		_DISPLAY_SHIFTRIGHT
   791 ;;		_GENERACARACTER
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text8
   796   002706                     __ptext8:
   797                           	callstack 0
   798   002706                     _ENVIA_LCD_CMD:
   799                           	callstack 124
   800                           
   801                           ;incstack = 0
   802                           ;ENVIA_LCD_CMD@dato stored from wreg
   803   002706  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
   804   002708                     
   805                           ;LCD.c: 120:     unsigned char aux;;LCD.c: 121:   LATDbits.LATD0 = 0;
   806   002708  90C1               	bcf	193,0,c	;volatile
   807   00270A                     
   808                           ;LCD.c: 124:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
   809   00270A  0E85               	movlw	133
   810   00270C                     u317:
   811   00270C  2EE8               	decfsz	wreg,f,c
   812   00270E  D7FE               	bra	u317
   813   002710  0000               	nop	
   814   002712                     
   815                           ;LCD.c: 125:     LATDbits.LATD1 = 0;
   816   002712  92C1               	bcf	193,1,c	;volatile
   817   002714                     
   818                           ;LCD.c: 126:  LATDbits.LATD2 = 0;
   819   002714  94C1               	bcf	193,2,c	;volatile
   820   002716                     
   821                           ;LCD.c: 127:  LATDbits.LATD0 = 0;
   822   002716  90C1               	bcf	193,0,c	;volatile
   823   002718                     
   824                           ;LCD.c: 128:  aux = dato & 0xF0;
   825   002718  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   826   00271A  0BF0               	andlw	240
   827   00271C  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   828   00271E                     
   829                           ;LCD.c: 129:  ENVIA_NIBBLE(aux);
   830   00271E  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   831   002720  ECAF  F013         	call	_ENVIA_NIBBLE
   832   002724                     
   833                           ;LCD.c: 130:  aux = dato<<4;
   834   002724  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   835   002726  0BF0               	andlw	240
   836   002728  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   837   00272A                     
   838                           ;LCD.c: 131:  ENVIA_NIBBLE(aux);
   839   00272A  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   840   00272C  ECAF  F013         	call	_ENVIA_NIBBLE
   841   002730  0012               	return		;funcret
   842   002732                     __end_of_ENVIA_LCD_CMD:
   843                           	callstack 0
   844                           
   845 ;; *************** function _ESCRIBE_MENSAJE2 *****************
   846 ;; Defined at:
   847 ;;		line 66 in file "LCD.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
   850 ;;		 -> STR_2(12), STR_1(12), 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  i               1    6[COMRAM] unsigned char 
   853 ;;  tam             1    5[COMRAM] unsigned char 
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   863 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   864 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   865 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   866 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   867 ;;Total ram usage:        4 bytes
   868 ;; Hardware stack levels used: 1
   869 ;; Hardware stack levels required when called: 2
   870 ;; This function calls:
   871 ;;		_ENVIA_CHAR
   872 ;;		_strlen
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text9
   879   0025E8                     __ptext9:
   880                           	callstack 0
   881   0025E8                     _ESCRIBE_MENSAJE2:
   882                           	callstack 124
   883   0025E8                     
   884                           ;LCD.c: 67:     unsigned char tam;;LCD.c: 68:     tam = strlen(cadena);
   885   0025E8  C504  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
   886   0025EC  EC35  F013         	call	_strlen	;wreg free
   887   0025F0  5001               	movf	?_strlen^(0+1280),w,c
   888   0025F2  6E06               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
   889   0025F4                     
   890                           ;LCD.c: 70:  for(i = 0; i<tam; i++) {
   891   0025F4  0E00               	movlw	0
   892   0025F6  6E07               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
   893   0025F8  EF0C  F013         	goto	l1238
   894   0025FC                     l1234:
   895                           
   896                           ;LCD.c: 71:   ENVIA_CHAR(cadena[i]);
   897   0025FC  5004               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
   898   0025FE  2407               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
   899   002600  6E05               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
   900   002602  C505  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
   901   002606                     	if	1	;There is more than 1 active tblptr byte
   902   002606  0E25               	movlw	high __smallconst
   903   002608  6EF7               	movwf	tblptrh,c
   904   00260A                     	endif
   905   00260A                     	if	0	;tblptru may be non-zero
   906   00260A                     	endif
   907   00260A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   908   00260A  0E00               	movlw	low (__smallconst shr (0+16))
   909   00260C  6EF8               	movwf	tblptru,c
   910   00260E                     	endif
   911   00260E  0008               	tblrd		*
   912   002610  50F5               	movf	tablat,w,c
   913   002612  EC99  F013         	call	_ENVIA_CHAR
   914   002616                     
   915                           ;LCD.c: 72:  }
   916   002616  2A07               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
   917   002618                     l1238:
   918   002618  5006               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
   919   00261A  5C07               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
   920   00261C  A0D8               	btfss	status,0,c
   921   00261E  EF13  F013         	goto	u261
   922   002622  EF15  F013         	goto	u260
   923   002626                     u261:
   924   002626  EFFE  F012         	goto	l1234
   925   00262A                     u260:
   926   00262A  0012               	return		;funcret
   927   00262C                     __end_of_ESCRIBE_MENSAJE2:
   928                           	callstack 0
   929                           
   930 ;; *************** function _strlen *****************
   931 ;; Defined at:
   932 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  s               1    0[COMRAM] PTR const unsigned char 
   935 ;;		 -> STR_2(12), STR_1(12), 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  a               1    2[COMRAM] PTR const unsigned char 
   938 ;;		 -> STR_2(12), STR_1(12), 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  2    0[COMRAM] unsigned int 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   951 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   952 ;;Total ram usage:        3 bytes
   953 ;; Hardware stack levels used: 1
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_ESCRIBE_MENSAJE2
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text10
   962   00266A                     __ptext10:
   963                           	callstack 0
   964   00266A                     _strlen:
   965                           	callstack 125
   966   00266A  C501  F503         	movff	strlen@s,strlen@a
   967   00266E  EF3A  F013         	goto	l1206
   968   002672                     l1204:
   969   002672  2A01               	incf	strlen@s^(0+1280),f,c
   970   002674                     l1206:
   971   002674  C501  F4F6         	movff	strlen@s,tblptrl
   972   002678                     	if	1	;There is more than 1 active tblptr byte
   973   002678  0E25               	movlw	high __smallconst
   974   00267A  6EF7               	movwf	tblptrh,c
   975   00267C                     	endif
   976   00267C                     	if	0	;tblptru may be non-zero
   977   00267C                     	endif
   978   00267C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   979   00267C  0E00               	movlw	low (__smallconst shr (0+16))
   980   00267E  6EF8               	movwf	tblptru,c
   981   002680                     	endif
   982   002680  0008               	tblrd		*
   983   002682  50F5               	movf	tablat,w,c
   984   002684  0900               	iorlw	0
   985   002686  A4D8               	btfss	status,2,c
   986   002688  EF48  F013         	goto	u211
   987   00268C  EF4A  F013         	goto	u210
   988   002690                     u211:
   989   002690  EF39  F013         	goto	l1204
   990   002694                     u210:
   991   002694  5003               	movf	strlen@a^(0+1280),w,c
   992   002696  5C01               	subwf	strlen@s^(0+1280),w,c
   993   002698  6E01               	movwf	?_strlen^(0+1280),c
   994   00269A  6A02               	clrf	(?_strlen+1)^(0+1280),c
   995   00269C  BE01               	btfsc	?_strlen^(0+1280),7,c
   996   00269E  0602               	decf	(?_strlen+1)^(0+1280),f,c
   997   0026A0  0012               	return		;funcret
   998   0026A2                     __end_of_strlen:
   999                           	callstack 0
  1000                           
  1001 ;; *************** function _ENVIA_CHAR *****************
  1002 ;; Defined at:
  1003 ;;		line 75 in file "LCD.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  dato            1    wreg     unsigned char 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  dato            1    1[COMRAM] unsigned char 
  1008 ;;  aux             1    2[COMRAM] unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1021 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1022 ;;Total ram usage:        2 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; Hardware stack levels required when called: 1
  1025 ;; This function calls:
  1026 ;;		_ENVIA_NIBBLE
  1027 ;; This function is called by:
  1028 ;;		_ESCRIBE_MENSAJE2
  1029 ;;		_ESCRIBE_MENSAJE
  1030 ;;		_GENERACARACTER
  1031 ;;		_LCD_ESCRIBE_VAR_CHAR
  1032 ;;		_LCD_ESCRIBE_VAR_INT
  1033 ;;		_LCD_CHAR_GRADO
  1034 ;;		_LCD_VARCHAR_BITS
  1035 ;;		_LCD_VARCHAR_HEX
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text11
  1040   002732                     __ptext11:
  1041                           	callstack 0
  1042   002732                     _ENVIA_CHAR:
  1043                           	callstack 124
  1044                           
  1045                           ;incstack = 0
  1046                           ;ENVIA_CHAR@dato stored from wreg
  1047   002732  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1048   002734                     
  1049                           ;LCD.c: 76:  unsigned char aux;;LCD.c: 77:  LATDbits.LATD0 = 1;
  1050   002734  80C1               	bsf	193,0,c	;volatile
  1051   002736                     
  1052                           ;LCD.c: 80:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1053   002736  0E85               	movlw	133
  1054   002738                     u327:
  1055   002738  2EE8               	decfsz	wreg,f,c
  1056   00273A  D7FE               	bra	u327
  1057   00273C  0000               	nop	
  1058   00273E                     
  1059                           ;LCD.c: 81:  LATDbits.LATD1 = 0;
  1060   00273E  92C1               	bcf	193,1,c	;volatile
  1061   002740                     
  1062                           ;LCD.c: 82:  LATDbits.LATD2 = 0;
  1063   002740  94C1               	bcf	193,2,c	;volatile
  1064   002742                     
  1065                           ;LCD.c: 83:  LATDbits.LATD0 = 1;
  1066   002742  80C1               	bsf	193,0,c	;volatile
  1067   002744                     
  1068                           ;LCD.c: 84:  aux = dato & 0xF0;
  1069   002744  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1070   002746  0BF0               	andlw	240
  1071   002748  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1072   00274A                     
  1073                           ;LCD.c: 85:  ENVIA_NIBBLE(aux);
  1074   00274A  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1075   00274C  ECAF  F013         	call	_ENVIA_NIBBLE
  1076   002750                     
  1077                           ;LCD.c: 86:  aux = dato << 4;
  1078   002750  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1079   002752  0BF0               	andlw	240
  1080   002754  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1081   002756                     
  1082                           ;LCD.c: 87:  ENVIA_NIBBLE(aux);
  1083   002756  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1084   002758  ECAF  F013         	call	_ENVIA_NIBBLE
  1085   00275C  0012               	return		;funcret
  1086   00275E                     __end_of_ENVIA_CHAR:
  1087                           	callstack 0
  1088                           
  1089 ;; *************** function _ENVIA_NIBBLE *****************
  1090 ;; Defined at:
  1091 ;;		line 110 in file "LCD.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;  dato            1    wreg     unsigned char 
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  dato            1    0[COMRAM] unsigned char 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, status,2, status,0
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1109 ;;Total ram usage:        1 bytes
  1110 ;; Hardware stack levels used: 1
  1111 ;; This function calls:
  1112 ;;		Nothing
  1113 ;; This function is called by:
  1114 ;;		_ENVIA_CHAR
  1115 ;;		_LCD_CONFIG
  1116 ;;		_ENVIA_LCD_CMD
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text12
  1121   00275E                     __ptext12:
  1122                           	callstack 0
  1123   00275E                     _ENVIA_NIBBLE:
  1124                           	callstack 124
  1125                           
  1126                           ;incstack = 0
  1127                           ;ENVIA_NIBBLE@dato stored from wreg
  1128   00275E  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1129   002760                     
  1130                           ;LCD.c: 111:  LATD &= 0x0F;
  1131   002760  0E0F               	movlw	15
  1132   002762  16C1               	andwf	193,f,c	;volatile
  1133                           
  1134                           ;LCD.c: 112:  dato &= 0xF0;
  1135   002764  0EF0               	movlw	240
  1136   002766  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1137                           
  1138                           ;LCD.c: 113:  LATD|= dato;
  1139   002768  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1140   00276A  12C1               	iorwf	193,f,c	;volatile
  1141   00276C                     
  1142                           ;LCD.c: 114:  LATDbits.LATD2 = 1;
  1143   00276C  84C1               	bsf	193,2,c	;volatile
  1144   00276E                     
  1145                           ;LCD.c: 115:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1146   00276E  0E85               	movlw	133
  1147   002770                     u337:
  1148   002770  2EE8               	decfsz	wreg,f,c
  1149   002772  D7FE               	bra	u337
  1150   002774  0000               	nop	
  1151   002776                     
  1152                           ;LCD.c: 116:  LATDbits.LATD2 = 0;
  1153   002776  94C1               	bcf	193,2,c	;volatile
  1154   002778  0012               	return		;funcret
  1155   00277A                     __end_of_ENVIA_NIBBLE:
  1156                           	callstack 0
  1157                           
  1158                           	psect	rparam
  1159   000000                     
  1160                           	psect	config
  1161                           
  1162                           ;Config register CONFIG1 @ 0x300000
  1163                           ;	External Oscillator Selection
  1164                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  1165                           ;	Reset Oscillator Selection
  1166                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1167   300000                     	org	3145728
  1168   300000  FF                 	db	255
  1169                           
  1170                           ;Config register CONFIG2 @ 0x300001
  1171                           ;	Clock out Enable bit
  1172                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1173                           ;	PRLOCKED One-Way Set Enable bit
  1174                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1175                           ;	Clock Switch Enable bit
  1176                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1177                           ;	Fail-Safe Clock Monitor Enable bit
  1178                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1179   300001                     	org	3145729
  1180   300001  FF                 	db	255
  1181                           
  1182                           ;Config register CONFIG3 @ 0x300002
  1183                           ;	MCLR Enable bit
  1184                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1185                           ;	Power-up timer selection bits
  1186                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  1187                           ;	Multi-vector enable bit
  1188                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1189                           ;	IVTLOCK bit One-way set enable bit
  1190                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1191                           ;	Low Power BOR Enable bit
  1192                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1193                           ;	Brown-out Reset Enable bits
  1194                           ;	BOREN = OFF, Brown-out Reset disabled
  1195   300002                     	org	3145730
  1196   300002  3D                 	db	61
  1197                           
  1198                           ;Config register CONFIG4 @ 0x300003
  1199                           ;	Brown-out Reset Voltage Selection bits
  1200                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1201                           ;	ZCD Disable bit
  1202                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1203                           ;	PPSLOCK bit One-Way Set Enable bit
  1204                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1205                           ;	Stack Full/Underflow Reset Enable bit
  1206                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1207                           ;	Low Voltage Programming Enable bit
  1208                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1209                           ;	Extended Instruction Set Enable bit
  1210                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1211   300003                     	org	3145731
  1212   300003  DF                 	db	223
  1213                           
  1214                           ;Config register CONFIG5 @ 0x300004
  1215                           ;	WDT Period selection bits
  1216                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1217                           ;	WDT operating mode
  1218                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1219   300004                     	org	3145732
  1220   300004  9F                 	db	159
  1221                           
  1222                           ;Config register CONFIG6 @ 0x300005
  1223                           ;	WDT Window Select bits
  1224                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1225                           ;	WDT input clock selector
  1226                           ;	WDTCCS = SC, Software Control
  1227   300005                     	org	3145733
  1228   300005  FF                 	db	255
  1229                           
  1230                           ;Config register CONFIG7 @ 0x300006
  1231                           ;	Boot Block Size selection bits
  1232                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1233                           ;	Boot Block enable bit
  1234                           ;	BBEN = OFF, Boot block disabled
  1235                           ;	Storage Area Flash enable bit
  1236                           ;	SAFEN = OFF, SAF disabled
  1237                           ;	Background Debugger
  1238                           ;	DEBUG = OFF, Background Debugger disabled
  1239   300006                     	org	3145734
  1240   300006  FF                 	db	255
  1241                           
  1242                           ;Config register CONFIG8 @ 0x300007
  1243                           ;	Boot Block Write Protection bit
  1244                           ;	WRTB = OFF, Boot Block not Write protected
  1245                           ;	Configuration Register Write Protection bit
  1246                           ;	WRTC = OFF, Configuration registers not Write protected
  1247                           ;	Data EEPROM Write Protection bit
  1248                           ;	WRTD = OFF, Data EEPROM not Write protected
  1249                           ;	SAF Write protection bit
  1250                           ;	WRTSAF = OFF, SAF not Write Protected
  1251                           ;	Application Block write protection bit
  1252                           ;	WRTAPP = OFF, Application Block not write protected
  1253   300007                     	org	3145735
  1254   300007  FF                 	db	255
  1255                           
  1256                           ;Config register CONFIG10 @ 0x300009
  1257                           ;	PFM and Data EEPROM Code Protection bit
  1258                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1259   300009                     	org	3145737
  1260   300009  FF                 	db	255
  1261                           tosu	equ	0x4FF
  1262                           tosh	equ	0x4FE
  1263                           tosl	equ	0x4FD
  1264                           stkptr	equ	0x4FC
  1265                           pclatu	equ	0x4FB
  1266                           pclath	equ	0x4FA
  1267                           pcl	equ	0x4F9
  1268                           tblptru	equ	0x4F8
  1269                           tblptrh	equ	0x4F7
  1270                           tblptrl	equ	0x4F6
  1271                           tablat	equ	0x4F5
  1272                           prodh	equ	0x4F4
  1273                           prodl	equ	0x4F3
  1274                           indf0	equ	0x4EF
  1275                           postinc0	equ	0x4EE
  1276                           postdec0	equ	0x4ED
  1277                           preinc0	equ	0x4EC
  1278                           plusw0	equ	0x4EB
  1279                           fsr0h	equ	0x4EA
  1280                           fsr0l	equ	0x4E9
  1281                           wreg	equ	0x4E8
  1282                           indf1	equ	0x4E7
  1283                           postinc1	equ	0x4E6
  1284                           postdec1	equ	0x4E5
  1285                           preinc1	equ	0x4E4
  1286                           plusw1	equ	0x4E3
  1287                           fsr1h	equ	0x4E2
  1288                           fsr1l	equ	0x4E1
  1289                           bsr	equ	0x4E0
  1290                           indf2	equ	0x4DF
  1291                           postinc2	equ	0x4DE
  1292                           postdec2	equ	0x4DD
  1293                           preinc2	equ	0x4DC
  1294                           plusw2	equ	0x4DB
  1295                           fsr2h	equ	0x4DA
  1296                           fsr2l	equ	0x4D9
  1297                           status	equ	0x4D8

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), STR_2(CODE[12]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), STR_2(CODE[12]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), STR_2(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE2
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1255
                   _ESCRIBE_MENSAJE2
                           _LCD_INIT
                         _POS_CURSOR
                          _configuro
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     403
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             1     1      0     345
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0      90
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     105
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0      75
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0      75
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0      75
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1     507
                                              3 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0      75
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
     _strlen
   _LCD_INIT
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _configuro

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BIGRAM            1FFF      0       0      69        0.0%
BITBIGSFRhhhhhh     2E      0       0      70        0.0%
BITBIGSFRhhhhhl      7      0       0      71        0.0%
BITBIGSFRhhhhl       7      0       0      72        0.0%
BITBIGSFRhhhlh      A8      0       0      73        0.0%
BITBIGSFRhhhll     364      0       0      74        0.0%
BITBIGSFRhhl         1      0       0      75        0.0%
BITBIGSFRhl          3      0       0      76        0.0%
BITBIGSFRl          AD      0       0      77        0.0%
ABS                  0      0       0      78        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed May 15 16:22:57 2024

                      l20 26CE                        l21 26CE                        l15 2788  
                      l53 2592                        l49 2592                        l66 2790  
                      l83 2704                        l95 262A                        l98 275C  
                      u10 26E8                        u11 26E4                        u20 26FE  
                      u21 26FA             ENVIA_CHAR@aux 0503                       l101 2798  
                     l110 2730                       l104 25E6                       l107 2778  
                     l124 2668                       l900 26FE                       l910 2742  
                     l902 2734                       l912 2744                       l904 2736  
                     l914 274A                       l906 273E                       l930 2792  
                     l916 2750                       l908 2740                       l940 25BC  
                     l932 2594                       l870 276E                       l918 2756  
                     l950 25DA                       l942 25C2                       l934 2598  
                     l872 2776                       l864 26A0                       l880 2714  
                     l952 25E0                       l944 25C8                       l936 259E  
                     l960 2646                       l866 2760                       l890 272A  
                     l882 2716                       l874 2708                       l946 25CE  
                     l938 25AE                       l962 264A                       l954 277A  
                     l868 276C                       l884 2718                       l876 270A  
                     l892 278A                       l948 25D4                       l964 265A  
                     l956 262C                       l886 271E                       l878 2712  
                     l894 26D8                       l966 265E                       l958 2636  
                     l888 2724                       l896 26E8                       l968 2662  
                     l898 26EE                       u210 2694                       u211 2690  
                     u220 252C                       u221 2528                       u230 254A  
                     u231 2546                       u240 2568                       u241 2564  
                     u250 2586                       u307 25B6                       u251 2582  
                     u260 262A                       u261 2626                       u317 270C  
                     u327 2738                       u337 2770                       u277 263C  
                     u287 2650                       u297 25A4                       wreg 04E8  
            ?_CURSOR_HOME 0501            ??_ENVIA_NIBBLE 0501            ENVIA_CHAR@dato 0502  
                    l1202 266A                      l1204 2672                      l1220 2556  
                    l1212 251C                      l1206 2674                      l1230 25F4  
                    l1222 2568                      l1214 252C                      l1208 2694  
                    l1232 25F4                      l1224 2574                      l1216 2538  
                    l1240 26A2                      l1234 25FC                      l1226 2586  
                    l1218 254A                      l1250 26C6                      l1242 26A6  
                    l1236 2616                      l1228 25E8                      l1244 26AA  
                    l1238 2618                      l1246 26B4                      l1248 26BC  
                    STR_1 2501                      STR_2 250D                      _LATD 04C1  
                    _main 26A2                      start FFFC             ?_CURSOR_ONOFF 0501  
            ___param_bank 0000           ??_ENVIA_LCD_CMD 0502          __end_of_LCD_INIT 266A  
                   ?_main 0501                     _OSCEN 00B3                     _PORTD 04D1  
                   _TRISD 04C9               ?_POS_CURSOR 0504                     tablat 04F5  
                   status 04D8            ??_CURSOR_ONOFF 0504           __initialization 279A  
            __end_of_main 26D6                    ??_main 0508             __activetblptr 0003  
                  _ANSELD 0418                    _OSCFRQ 00B1      __end_of_ENVIA_NIBBLE 277A  
                  isa$std 0001                    _strlen 266A              __mediumconst 0000  
                  tblptrh 04F7                    tblptrl 04F6                    tblptru 04F8  
            ??_BORRAR_LCD 0504                 ?_LCD_INIT 0501                __accesstop 0560  
 __end_of__initialization 279A              ??_LCD_CONFIG 0504             ___rparam_used 0001  
            ??_ENVIA_CHAR 0502            __pcstackCOMRAM 0501        __end_of_BORRAR_LCD 279A  
        _ESCRIBE_MENSAJE2 25E8          ENVIA_LCD_CMD@aux 0503      __end_of_CURSOR_ONOFF 2706  
      __end_of_LCD_CONFIG 25E8        __end_of_ENVIA_CHAR 275E                ??_LCD_INIT 0505  
        ENVIA_NIBBLE@dato 0501                   ?_strlen 0501                   _OSCCON1 00AD  
            ??_POS_CURSOR 0505                   __Hparam 0000                   __Lparam 0000  
       __end_of_configuro 278A              __psmallconst 2500     __end_of_ENVIA_LCD_CMD 2732  
                 __pcinit 279A        __end_of_POS_CURSOR 2594                   __ramtop 2500  
                 __ptext0 26A2                   __ptext1 277A                   __ptext2 251A  
                 __ptext3 262C                   __ptext4 2594                   __ptext5 26D6  
                 __ptext6 278A                   __ptext7 2792                   __ptext8 2706  
                 __ptext9 25E8              _ENVIA_NIBBLE 275E      end_of_initialization 279A  
                 strlen@a 0503                   strlen@s 0501         ESCRIBE_MENSAJE2@i 0507  
__end_of_ESCRIBE_MENSAJE2 262C              _CURSOR_ONOFF 26D6        CURSOR_ONOFF@estado 0504  
          __end_of_strlen 26A2             ??_CURSOR_HOME 0504       start_initialization 279A  
       ENVIA_LCD_CMD@dato 0502                  ??_strlen 0503       __end_of_CURSOR_HOME 2792  
               _configuro 277A               __smallconst 2500                  _LCD_INIT 262C  
                _LATDbits 04C1            POS_CURSOR@fila 0505                ?_configuro 0501  
  ESCRIBE_MENSAJE2@cadena 0504               _CURSOR_HOME 278A                  __Hrparam 0000  
       ?_ESCRIBE_MENSAJE2 0504                  __Lrparam 0000        ??_ESCRIBE_MENSAJE2 0505  
                __ptext10 266A                  __ptext11 2732                  __ptext12 275E  
              _BORRAR_LCD 2792                _LCD_CONFIG 2594                _ENVIA_CHAR 2732  
                isa$xinst 0000             _ENVIA_LCD_CMD 2706               ??_configuro 0501  
          ?_ENVIA_LCD_CMD 0501       ESCRIBE_MENSAJE2@tam 0506               ?_BORRAR_LCD 0501  
           ?_ENVIA_NIBBLE 0501                _POS_CURSOR 251A               ?_LCD_CONFIG 0501  
             ?_ENVIA_CHAR 0501         POS_CURSOR@columna 0504  
