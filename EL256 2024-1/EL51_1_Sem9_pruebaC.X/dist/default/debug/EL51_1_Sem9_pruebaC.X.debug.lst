

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed May 15 15:20:42 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/02/2024 GMT
    25                           ; 
    26                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F57Q43 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     _LATD	set	1217
    59   000000                     _OSCCON1	set	173
    60   000000                     _OSCFRQ	set	177
    61   000000                     _OSCEN	set	179
    62   000000                     _ANSELBbits	set	1032
    63   000000                     _ANSELFbits	set	1064
    64   000000                     _TRISFbits	set	1227
    65   000000                     _PORTD	set	1233
    66   000000                     _LATDbits	set	1217
    67   000000                     _TRISBbits	set	1223
    68   000000                     _TRISD	set	1225
    69   000000                     _WPUBbits	set	1033
    70                           
    71                           	psect	smallconst
    72   002500                     __psmallconst:
    73                           	callstack 0
    74   002500  00                 	db	0
    75   002501                     STR_1:
    76   002501  48                 	db	72	;'H'
    77   002502  6F                 	db	111	;'o'
    78   002503  6C                 	db	108	;'l'
    79   002504  61                 	db	97	;'a'
    80   002505  20                 	db	32
    81   002506  6D                 	db	109	;'m'
    82   002507  75                 	db	117	;'u'
    83   002508  6E                 	db	110	;'n'
    84   002509  64                 	db	100	;'d'
    85   00250A  6F                 	db	111	;'o'
    86   00250B  21                 	db	33
    87   00250C  00                 	db	0
    88   00250D  00                 	db	0	; dummy byte at the end
    89   000000                     
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   002720                     __pcinit:
    94                           	callstack 0
    95   002720                     start_initialization:
    96                           	callstack 0
    97   002720                     __initialization:
    98                           	callstack 0
    99   002720                     end_of_initialization:
   100                           	callstack 0
   101   002720                     __end_of__initialization:
   102                           	callstack 0
   103   002720  0E00               	movlw	low (__Lsmallconst shr (0+16))
   104   002722  6EF8               	movwf	tblptru,c
   105   002724  0E25               	movlw	high __Lsmallconst
   106   002726  6EF7               	movwf	tblptrh,c
   107   002728  0100               	movlb	0
   108   00272A  EF56  F013         	goto	_main	;jump to C main() function
   109                           
   110                           	psect	cstackCOMRAM
   111   000501                     __pcstackCOMRAM:
   112                           	callstack 0
   113   000501                     ENVIA_NIBBLE@dato:
   114                           	callstack 0
   115   000501                     LEER_LCD@aux:
   116                           	callstack 0
   117                           
   118                           ; 1 bytes @ 0x0
   119   000501                     	ds	1
   120   000502                     ENVIA_CHAR@dato:
   121                           	callstack 0
   122   000502                     ENVIA_LCD_CMD@dato:
   123                           	callstack 0
   124                           
   125                           ; 1 bytes @ 0x1
   126   000502                     	ds	1
   127   000503                     ENVIA_CHAR@aux:
   128                           	callstack 0
   129   000503                     ENVIA_LCD_CMD@aux:
   130                           	callstack 0
   131                           
   132                           ; 1 bytes @ 0x2
   133   000503                     	ds	1
   134   000504                     ??_LCD_CONFIG:
   135   000504                     POS_CURSOR@columna:
   136                           	callstack 0
   137   000504                     CURSOR_ONOFF@estado:
   138                           	callstack 0
   139   000504                     ESCRIBE_MENSAJE@cadena:
   140                           	callstack 0
   141                           
   142                           ; 1 bytes @ 0x3
   143   000504                     	ds	1
   144   000505                     ??_LCD_init:
   145   000505                     POS_CURSOR@fila:
   146                           	callstack 0
   147   000505                     ESCRIBE_MENSAJE@tam:
   148                           	callstack 0
   149                           
   150                           ; 1 bytes @ 0x4
   151   000505                     	ds	1
   152   000506                     ??_ESCRIBE_MENSAJE:
   153                           
   154                           ; 1 bytes @ 0x5
   155   000506                     	ds	1
   156   000507                     ESCRIBE_MENSAJE@i:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x6
   160   000507                     	ds	1
   161   000508                     
   162                           ; 1 bytes @ 0x7
   163 ;;
   164 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   165 ;;
   166 ;; *************** function _main *****************
   167 ;; Defined at:
   168 ;;		line 27 in file "maincode3.c"
   169 ;; Parameters:    Size  Location     Type
   170 ;;		None
   171 ;; Auto vars:     Size  Location     Type
   172 ;;		None
   173 ;; Return value:  Size  Location     Type
   174 ;;                  1    wreg      void 
   175 ;; Registers used:
   176 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   177 ;; Tracked objects:
   178 ;;		On entry : 0/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   186 ;;Total ram usage:        0 bytes
   187 ;; Hardware stack levels required when called: 4
   188 ;; This function calls:
   189 ;;		_ESCRIBE_MENSAJE
   190 ;;		_LCD_init
   191 ;;		_POS_CURSOR
   192 ;;		_configuro
   193 ;; This function is called by:
   194 ;;		Startup code after reset
   195 ;; This function uses a non-reentrant model
   196 ;;
   197                           
   198                           	psect	text0
   199   0026AC                     __ptext0:
   200                           	callstack 0
   201   0026AC                     _main:
   202                           	callstack 123
   203                           
   204                           ;maincode3.c: 28:     configuro();
   205                           
   206                           ;incstack = 0
   207   0026AC  EC66  F013         	call	_configuro	;wreg free
   208                           
   209                           ; BSR set to: 4
   210                           ;maincode3.c: 29:     LCD_init();
   211   0026B0  EC1C  F013         	call	_LCD_init	;wreg free
   212   0026B4                     l990:
   213                           
   214                           ;maincode3.c: 31:         POS_CURSOR(1,0);
   215   0026B4  0E00               	movlw	0
   216   0026B6  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   217   0026B8  0E01               	movlw	1
   218   0026BA  EC44  F013         	call	_POS_CURSOR
   219                           
   220                           ;maincode3.c: 32:         ESCRIBE_MENSAJE("Hola mundo!", 11);
   221   0026BE  0E01               	movlw	low STR_1
   222   0026C0  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   223   0026C2  0E0B               	movlw	11
   224   0026C4  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   225   0026C6  EC30  F013         	call	_ESCRIBE_MENSAJE	;wreg free
   226   0026CA  D7F4               	goto	l990
   227   0026CC                     __end_of_main:
   228                           	callstack 0
   229                           
   230 ;; *************** function _configuro *****************
   231 ;; Defined at:
   232 ;;		line 7 in file "maincode3.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;		None
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, status,2
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 3F/4
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   250 ;;Total ram usage:        0 bytes
   251 ;; Hardware stack levels used: 1
   252 ;; This function calls:
   253 ;;		Nothing
   254 ;; This function is called by:
   255 ;;		_main
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259                           	psect	text1
   260   0026CC                     __ptext1:
   261                           	callstack 0
   262   0026CC                     _configuro:
   263                           	callstack 126
   264                           
   265                           ;maincode3.c: 8:     OSCCON1 = 0x60;
   266                           
   267                           ;incstack = 0
   268   0026CC  0E60               	movlw	96
   269   0026CE  0100               	movlb	0	; () banked
   270   0026D0  6FAD               	movwf	173,b	;volatile
   271                           
   272                           ;maincode3.c: 9:     OSCFRQ = 0x07;
   273   0026D2  0E07               	movlw	7
   274   0026D4  6FB1               	movwf	177,b	;volatile
   275                           
   276                           ;maincode3.c: 10:     OSCEN = 0x40;
   277   0026D6  0E40               	movlw	64
   278   0026D8  6FB3               	movwf	179,b	;volatile
   279                           
   280                           ; BSR set to: 0
   281                           ;maincode3.c: 11:     TRISFbits.TRISF3 = 0;
   282   0026DA  96CB               	bcf	203,3,c	;volatile
   283                           
   284                           ; BSR set to: 0
   285                           ;maincode3.c: 12:     ANSELFbits.ANSELF3 = 0;
   286   0026DC  0104               	movlb	4	; () banked
   287   0026DE  9728               	bcf	40,3,b	;volatile
   288                           
   289                           ; BSR set to: 4
   290                           ;maincode3.c: 13:     TRISBbits.TRISB4 = 1;
   291   0026E0  88C7               	bsf	199,4,c	;volatile
   292                           
   293                           ; BSR set to: 4
   294                           ;maincode3.c: 14:     ANSELBbits.ANSELB4 = 0;
   295   0026E2  9908               	bcf	8,4,b	;volatile
   296                           
   297                           ; BSR set to: 4
   298                           ;maincode3.c: 15:     WPUBbits.WPUB4 = 1;
   299   0026E4  8909               	bsf	9,4,b	;volatile
   300                           
   301                           ; BSR set to: 4
   302   0026E6  0012               	return		;funcret
   303   0026E8                     __end_of_configuro:
   304                           	callstack 0
   305                           
   306 ;; *************** function _POS_CURSOR *****************
   307 ;; Defined at:
   308 ;;		line 6 in file "LCD.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;  fila            1    wreg     unsigned char 
   311 ;;  columna         1    3[COMRAM] unsigned char 
   312 ;; Auto vars:     Size  Location     Type
   313 ;;  fila            1    4[COMRAM] unsigned char 
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      void 
   316 ;; Registers used:
   317 ;;		wreg, status,2, status,0, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : 0/4
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   323 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   324 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   327 ;;Total ram usage:        2 bytes
   328 ;; Hardware stack levels used: 1
   329 ;; Hardware stack levels required when called: 2
   330 ;; This function calls:
   331 ;;		_ENVIA_LCD_CMD
   332 ;; This function is called by:
   333 ;;		_main
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           	psect	text2
   338   002688                     __ptext2:
   339                           	callstack 0
   340   002688                     _POS_CURSOR:
   341                           	callstack 124
   342                           
   343                           ; BSR set to: 4
   344                           ;incstack = 0
   345                           ;POS_CURSOR@fila stored from wreg
   346   002688  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
   347                           
   348                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   349   00268A  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
   350   00268C  A4D8               	btfss	status,2,c
   351   00268E  D005               	goto	l974
   352                           
   353                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   354   002690  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   355   002692  0F80               	addlw	128
   356   002694  ECE8  F012         	call	_ENVIA_LCD_CMD
   357                           
   358                           ;LCD.c: 11:  }
   359   002698  0012               	return	
   360   00269A                     l974:
   361   00269A  0E02               	movlw	2
   362   00269C  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   363   00269E  A4D8               	btfss	status,2,c
   364   0026A0  0012               	return	
   365                           
   366                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   367   0026A2  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   368   0026A4  0FC0               	addlw	192
   369   0026A6  ECE8  F012         	call	_ENVIA_LCD_CMD
   370   0026AA  0012               	return		;funcret
   371   0026AC                     __end_of_POS_CURSOR:
   372                           	callstack 0
   373                           
   374 ;; *************** function _LCD_init *****************
   375 ;; Defined at:
   376 ;;		line 18 in file "maincode3.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;		None
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, status,2, status,0, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : 3F/4
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   392 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   393 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   394 ;;Total ram usage:        1 bytes
   395 ;; Hardware stack levels used: 1
   396 ;; Hardware stack levels required when called: 3
   397 ;; This function calls:
   398 ;;		_BORRAR_LCD
   399 ;;		_CURSOR_HOME
   400 ;;		_CURSOR_ONOFF
   401 ;;		_LCD_CONFIG
   402 ;; This function is called by:
   403 ;;		_main
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           	psect	text3
   408   002638                     __ptext3:
   409                           	callstack 0
   410   002638                     _LCD_init:
   411                           	callstack 123
   412                           
   413                           ; BSR set to: 4
   414                           ;maincode3.c: 19:     TRISD = 0x00;
   415                           
   416                           ;incstack = 0
   417   002638  0E00               	movlw	0
   418   00263A  6EC9               	movwf	201,c	;volatile
   419                           
   420                           ; BSR set to: 4
   421                           ;maincode3.c: 20:     LCD_CONFIG();
   422   00263C  ECB8  F012         	call	_LCD_CONFIG	;wreg free
   423                           
   424                           ;maincode3.c: 21:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   425   002640  0EEA               	movlw	234
   426   002642  6E05               	movwf	??_LCD_init^(0+1280),c
   427   002644  0EC3               	movlw	195
   428   002646                     u107:
   429   002646  2EE8               	decfsz	wreg,f,c
   430   002648  D7FE               	bra	u107
   431   00264A  2E05               	decfsz	??_LCD_init^(0+1280),f,c
   432   00264C  D7FC               	bra	u107
   433   00264E  0000               	nop	
   434                           
   435                           ;maincode3.c: 22:     BORRAR_LCD();
   436   002650  EC9B  F013         	call	_BORRAR_LCD	;wreg free
   437                           
   438                           ;maincode3.c: 23:     CURSOR_HOME();
   439   002654  EC97  F013         	call	_CURSOR_HOME	;wreg free
   440                           
   441                           ;maincode3.c: 24:     CURSOR_ONOFF(1);
   442   002658  0E01               	movlw	1
   443   00265A  EC74  F013         	call	_CURSOR_ONOFF
   444   00265E  0012               	return		;funcret
   445   002660                     __end_of_LCD_init:
   446                           	callstack 0
   447                           
   448 ;; *************** function _LCD_CONFIG *****************
   449 ;; Defined at:
   450 ;;		line 72 in file "LCD.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, status,2, status,0, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : 3F/4
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   466 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   467 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   468 ;;Total ram usage:        1 bytes
   469 ;; Hardware stack levels used: 1
   470 ;; Hardware stack levels required when called: 2
   471 ;; This function calls:
   472 ;;		_ENVIA_LCD_CMD
   473 ;;		_ENVIA_NIBBLE
   474 ;; This function is called by:
   475 ;;		_LCD_init
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	text4
   480   002570                     __ptext4:
   481                           	callstack 0
   482   002570                     _LCD_CONFIG:
   483                           	callstack 123
   484                           
   485                           ; BSR set to: 4
   486                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   487                           
   488                           ;incstack = 0
   489   002570  90C1               	bcf	193,0,c	;volatile
   490                           
   491                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   492   002572  92C1               	bcf	193,1,c	;volatile
   493                           
   494                           ; BSR set to: 4
   495                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   496   002574  0E30               	movlw	48
   497   002576  EC82  F013         	call	_ENVIA_NIBBLE
   498                           
   499                           ;LCD.c: 77:         _delay(24000);
   500   00257A  0E20               	movlw	32
   501   00257C  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   502   00257E  0E2A               	movlw	42
   503   002580                     u117:
   504   002580  2EE8               	decfsz	wreg,f,c
   505   002582  D7FE               	bra	u117
   506   002584  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   507   002586  D7FC               	bra	u117
   508                           
   509                           ;LCD.c: 78:         _delay(24000);
   510   002588  0E20               	movlw	32
   511   00258A  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   512   00258C  0E2A               	movlw	42
   513   00258E                     u127:
   514   00258E  2EE8               	decfsz	wreg,f,c
   515   002590  D7FE               	bra	u127
   516   002592  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   517   002594  D7FC               	bra	u127
   518                           
   519                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   520   002596  0E30               	movlw	48
   521   002598  EC82  F013         	call	_ENVIA_NIBBLE
   522                           
   523                           ;LCD.c: 83:  _delay(1200);
   524   00259C  0EF0               	movlw	240
   525   00259E                     u137:
   526   00259E  D000               	nop2	
   527   0025A0  2EE8               	decfsz	wreg,f,c
   528   0025A2  D7FD               	bra	u137
   529                           
   530                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   531   0025A4  0E30               	movlw	48
   532   0025A6  EC82  F013         	call	_ENVIA_NIBBLE
   533                           
   534                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   535   0025AA  0E20               	movlw	32
   536   0025AC  EC82  F013         	call	_ENVIA_NIBBLE
   537                           
   538                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   539   0025B0  0E01               	movlw	1
   540   0025B2  ECE8  F012         	call	_ENVIA_LCD_CMD
   541                           
   542                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   543   0025B6  0E28               	movlw	40
   544   0025B8  ECE8  F012         	call	_ENVIA_LCD_CMD
   545                           
   546                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   547   0025BC  0E0F               	movlw	15
   548   0025BE  ECE8  F012         	call	_ENVIA_LCD_CMD
   549                           
   550                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   551   0025C2  0E06               	movlw	6
   552   0025C4  ECE8  F012         	call	_ENVIA_LCD_CMD
   553                           
   554                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   555   0025C8  0E01               	movlw	1
   556   0025CA  ECE8  F012         	call	_ENVIA_LCD_CMD
   557   0025CE  0012               	return		;funcret
   558   0025D0                     __end_of_LCD_CONFIG:
   559                           	callstack 0
   560                           
   561 ;; *************** function _CURSOR_ONOFF *****************
   562 ;; Defined at:
   563 ;;		line 35 in file "LCD.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;  estado          1    wreg     unsigned char 
   566 ;; Auto vars:     Size  Location     Type
   567 ;;  estado          1    3[COMRAM] unsigned char 
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, status,2, status,0, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/4
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   580 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   581 ;;Total ram usage:        1 bytes
   582 ;; Hardware stack levels used: 1
   583 ;; Hardware stack levels required when called: 2
   584 ;; This function calls:
   585 ;;		_ENVIA_LCD_CMD
   586 ;; This function is called by:
   587 ;;		_LCD_init
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text5
   592   0026E8                     __ptext5:
   593                           	callstack 0
   594   0026E8                     _CURSOR_ONOFF:
   595                           	callstack 123
   596                           
   597                           ;incstack = 0
   598                           ;CURSOR_ONOFF@estado stored from wreg
   599   0026E8  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   600                           
   601                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   602   0026EA  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   603   0026EC  A4D8               	btfss	status,2,c
   604   0026EE  D003               	goto	l896
   605   0026F0  0E0E               	movlw	14
   606   0026F2  ECE8  F012         	call	_ENVIA_LCD_CMD
   607   0026F6                     l896:
   608                           
   609                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   610   0026F6  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   611   0026F8  A4D8               	btfss	status,2,c
   612   0026FA  0012               	return	
   613   0026FC  0E0C               	movlw	12
   614   0026FE  ECE8  F012         	call	_ENVIA_LCD_CMD
   615   002702  0012               	return		;funcret
   616   002704                     __end_of_CURSOR_ONOFF:
   617                           	callstack 0
   618                           
   619 ;; *************** function _CURSOR_HOME *****************
   620 ;; Defined at:
   621 ;;		line 30 in file "LCD.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/4
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; Hardware stack levels required when called: 2
   642 ;; This function calls:
   643 ;;		_ENVIA_LCD_CMD
   644 ;; This function is called by:
   645 ;;		_LCD_init
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           	psect	text6
   650   00272E                     __ptext6:
   651                           	callstack 0
   652   00272E                     _CURSOR_HOME:
   653                           	callstack 123
   654                           
   655                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   656                           
   657                           ;incstack = 0
   658   00272E  0E02               	movlw	2
   659   002730  ECE8  F012         	call	_ENVIA_LCD_CMD
   660   002734  0012               	return		;funcret
   661   002736                     __end_of_CURSOR_HOME:
   662                           	callstack 0
   663                           
   664 ;; *************** function _BORRAR_LCD *****************
   665 ;; Defined at:
   666 ;;		line 67 in file "LCD.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/4
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   684 ;;Total ram usage:        0 bytes
   685 ;; Hardware stack levels used: 1
   686 ;; Hardware stack levels required when called: 2
   687 ;; This function calls:
   688 ;;		_ENVIA_LCD_CMD
   689 ;; This function is called by:
   690 ;;		_LCD_init
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text7
   695   002736                     __ptext7:
   696                           	callstack 0
   697   002736                     _BORRAR_LCD:
   698                           	callstack 123
   699                           
   700                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   701                           
   702                           ;incstack = 0
   703   002736  0E01               	movlw	1
   704   002738  ECE8  F012         	call	_ENVIA_LCD_CMD
   705   00273C  0012               	return		;funcret
   706   00273E                     __end_of_BORRAR_LCD:
   707                           	callstack 0
   708                           
   709 ;; *************** function _ENVIA_LCD_CMD *****************
   710 ;; Defined at:
   711 ;;		line 104 in file "LCD.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  dato            1    wreg     unsigned char 
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  dato            1    1[COMRAM] unsigned char 
   716 ;;  aux             1    2[COMRAM] unsigned char 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/4
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   727 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   730 ;;Total ram usage:        2 bytes
   731 ;; Hardware stack levels used: 1
   732 ;; Hardware stack levels required when called: 1
   733 ;; This function calls:
   734 ;;		_ENVIA_NIBBLE
   735 ;;		_LEER_LCD
   736 ;; This function is called by:
   737 ;;		_POS_CURSOR
   738 ;;		_CURSOR_HOME
   739 ;;		_CURSOR_ONOFF
   740 ;;		_BORRAR_LCD
   741 ;;		_LCD_CONFIG
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text8
   746   0025D0                     __ptext8:
   747                           	callstack 0
   748   0025D0                     _ENVIA_LCD_CMD:
   749                           	callstack 124
   750                           
   751                           ;incstack = 0
   752                           ;ENVIA_LCD_CMD@dato stored from wreg
   753   0025D0  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
   754                           
   755                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
   756   0025D2  90C1               	bcf	193,0,c	;volatile
   757                           
   758                           ;LCD.c: 108:  LEER_LCD();
   759   0025D4  EC87  F012         	call	_LEER_LCD	;wreg free
   760                           
   761                           ;LCD.c: 109:  TRISD = 0b00000000;
   762   0025D8  0E00               	movlw	0
   763   0025DA  6EC9               	movwf	201,c	;volatile
   764                           
   765                           ;LCD.c: 111:         _delay(1200);
   766   0025DC  0EF0               	movlw	240
   767   0025DE                     u147:
   768   0025DE  D000               	nop2	
   769   0025E0  2EE8               	decfsz	wreg,f,c
   770   0025E2  D7FD               	bra	u147
   771                           
   772                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
   773   0025E4  92C1               	bcf	193,1,c	;volatile
   774                           
   775                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
   776   0025E6  94C1               	bcf	193,2,c	;volatile
   777                           
   778                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
   779   0025E8  90C1               	bcf	193,0,c	;volatile
   780                           
   781                           ;LCD.c: 115:  aux = dato & 0xF0;
   782   0025EA  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   783   0025EC  0BF0               	andlw	240
   784   0025EE  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   785                           
   786                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
   787   0025F0  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   788   0025F2  EC82  F013         	call	_ENVIA_NIBBLE
   789                           
   790                           ;LCD.c: 117:  aux = dato<<4;
   791   0025F6  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   792   0025F8  0BF0               	andlw	240
   793   0025FA  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   794                           
   795                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
   796   0025FC  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   797   0025FE  EC82  F013         	call	_ENVIA_NIBBLE
   798   002602  0012               	return		;funcret
   799   002604                     __end_of_ENVIA_LCD_CMD:
   800                           	callstack 0
   801                           
   802 ;; *************** function _ESCRIBE_MENSAJE *****************
   803 ;; Defined at:
   804 ;;		line 41 in file "LCD.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
   807 ;;		 -> STR_1(12), 
   808 ;;  tam             1    4[COMRAM] unsigned char 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  i               1    6[COMRAM] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/4
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   822 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   823 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   824 ;;Total ram usage:        4 bytes
   825 ;; Hardware stack levels used: 1
   826 ;; Hardware stack levels required when called: 2
   827 ;; This function calls:
   828 ;;		_ENVIA_CHAR
   829 ;; This function is called by:
   830 ;;		_main
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text9
   835   002660                     __ptext9:
   836                           	callstack 0
   837   002660                     _ESCRIBE_MENSAJE:
   838                           	callstack 124
   839                           
   840                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
   841                           
   842                           ;incstack = 0
   843   002660  0E00               	movlw	0
   844   002662  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
   845                           
   846                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
   847   002664  0E00               	movlw	0
   848   002666  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
   849   002668  D00A               	goto	l984
   850   00266A                     l980:
   851                           
   852                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
   853   00266A  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
   854   00266C  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
   855   00266E  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
   856   002670  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   857   002674                     	if	0	;There is only one active tblptr byte
   858   002674                     	endif
   859   002674                     	if	0	;tblptru may be non-zero
   860   002674                     	endif
   861   002674                     	if	0	;tblptru may be non-zero
   862   002674                     	endif
   863   002674  0008               	tblrd		*
   864   002676  50F5               	movf	tablat,w,c
   865   002678  EC02  F013         	call	_ENVIA_CHAR
   866                           
   867                           ;LCD.c: 47:  }
   868   00267C  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
   869   00267E                     l984:
   870   00267E  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
   871   002680  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
   872   002682  B0D8               	btfsc	status,0,c
   873   002684  0012               	return	
   874   002686  D7F1               	goto	l980
   875   002688                     __end_of_ESCRIBE_MENSAJE:
   876                           	callstack 0
   877                           
   878 ;; *************** function _ENVIA_CHAR *****************
   879 ;; Defined at:
   880 ;;		line 50 in file "LCD.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;  dato            1    wreg     unsigned char 
   883 ;; Auto vars:     Size  Location     Type
   884 ;;  dato            1    1[COMRAM] unsigned char 
   885 ;;  aux             1    2[COMRAM] unsigned char 
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, status,2, status,0, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : 0/4
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   896 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   898 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   899 ;;Total ram usage:        2 bytes
   900 ;; Hardware stack levels used: 1
   901 ;; Hardware stack levels required when called: 1
   902 ;; This function calls:
   903 ;;		_ENVIA_NIBBLE
   904 ;;		_LEER_LCD
   905 ;; This function is called by:
   906 ;;		_ESCRIBE_MENSAJE
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text10
   911   002604                     __ptext10:
   912                           	callstack 0
   913   002604                     _ENVIA_CHAR:
   914                           	callstack 124
   915                           
   916                           ;incstack = 0
   917                           ;ENVIA_CHAR@dato stored from wreg
   918   002604  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
   919                           
   920                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
   921   002606  80C1               	bsf	193,0,c	;volatile
   922                           
   923                           ;LCD.c: 54:  LEER_LCD();
   924   002608  EC87  F012         	call	_LEER_LCD	;wreg free
   925                           
   926                           ;LCD.c: 55:  TRISD = 0x00;
   927   00260C  0E00               	movlw	0
   928   00260E  6EC9               	movwf	201,c	;volatile
   929                           
   930                           ;LCD.c: 56:         _delay(1200);
   931   002610  0EF0               	movlw	240
   932   002612                     u157:
   933   002612  D000               	nop2	
   934   002614  2EE8               	decfsz	wreg,f,c
   935   002616  D7FD               	bra	u157
   936                           
   937                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
   938   002618  92C1               	bcf	193,1,c	;volatile
   939                           
   940                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
   941   00261A  94C1               	bcf	193,2,c	;volatile
   942                           
   943                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
   944   00261C  80C1               	bsf	193,0,c	;volatile
   945                           
   946                           ;LCD.c: 61:  aux = dato & 0xF0;
   947   00261E  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
   948   002620  0BF0               	andlw	240
   949   002622  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
   950                           
   951                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
   952   002624  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
   953   002626  EC82  F013         	call	_ENVIA_NIBBLE
   954                           
   955                           ;LCD.c: 63:  aux = dato << 4;
   956   00262A  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
   957   00262C  0BF0               	andlw	240
   958   00262E  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
   959                           
   960                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
   961   002630  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
   962   002632  EC82  F013         	call	_ENVIA_NIBBLE
   963   002636  0012               	return		;funcret
   964   002638                     __end_of_ENVIA_CHAR:
   965                           	callstack 0
   966                           
   967 ;; *************** function _LEER_LCD *****************
   968 ;; Defined at:
   969 ;;		line 121 in file "LCD.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  aux             1    0[COMRAM] unsigned char 
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, status,2, status,0
   978 ;; Tracked objects:
   979 ;;		On entry : 0/4
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   987 ;;Total ram usage:        1 bytes
   988 ;; Hardware stack levels used: 1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_ENVIA_CHAR
   993 ;;		_ENVIA_LCD_CMD
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text11
   998   00250E                     __ptext11:
   999                           	callstack 0
  1000   00250E                     _LEER_LCD:
  1001                           	callstack 124
  1002                           
  1003                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1004                           
  1005                           ;incstack = 0
  1006   00250E  0EF8               	movlw	248
  1007   002510  6EC9               	movwf	201,c	;volatile
  1008                           
  1009                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1010   002512  90C1               	bcf	193,0,c	;volatile
  1011                           
  1012                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1013   002514  82C1               	bsf	193,1,c	;volatile
  1014                           
  1015                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1016   002516  84C1               	bsf	193,2,c	;volatile
  1017                           
  1018                           ;LCD.c: 128:         _delay(1200);
  1019   002518  0EF0               	movlw	240
  1020   00251A                     u167:
  1021   00251A  D000               	nop2	
  1022   00251C  2EE8               	decfsz	wreg,f,c
  1023   00251E  D7FD               	bra	u167
  1024                           
  1025                           ;LCD.c: 130:  aux = PORTD;
  1026   002520  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1027                           
  1028                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1029   002524  94C1               	bcf	193,2,c	;volatile
  1030                           
  1031                           ;LCD.c: 132:         _delay(1200);
  1032   002526  0EF0               	movlw	240
  1033   002528                     u177:
  1034   002528  D000               	nop2	
  1035   00252A  2EE8               	decfsz	wreg,f,c
  1036   00252C  D7FD               	bra	u177
  1037                           
  1038                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1039   00252E  84C1               	bsf	193,2,c	;volatile
  1040                           
  1041                           ;LCD.c: 135:         _delay(1200);
  1042   002530  0EF0               	movlw	240
  1043   002532                     u187:
  1044   002532  D000               	nop2	
  1045   002534  2EE8               	decfsz	wreg,f,c
  1046   002536  D7FD               	bra	u187
  1047   002538                     l816:
  1048                           
  1049                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1050   002538  94C1               	bcf	193,2,c	;volatile
  1051                           
  1052                           ;LCD.c: 138:  aux = aux & 0x80;
  1053   00253A  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1054   00253C  0B80               	andlw	128
  1055   00253E  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1056                           
  1057                           ;LCD.c: 139:  while(aux == 0x80)
  1058   002540  D012               	goto	l832
  1059   002542                     l113:
  1060                           
  1061                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1062   002542  84C1               	bsf	193,2,c	;volatile
  1063                           
  1064                           ;LCD.c: 142:             _delay(1200);
  1065   002544  0EF0               	movlw	240
  1066   002546                     u197:
  1067   002546  D000               	nop2	
  1068   002548  2EE8               	decfsz	wreg,f,c
  1069   00254A  D7FD               	bra	u197
  1070                           
  1071                           ;LCD.c: 143:             aux = PORTD;
  1072   00254C  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1073                           
  1074                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1075   002550  94C1               	bcf	193,2,c	;volatile
  1076                           
  1077                           ;LCD.c: 145:             _delay(1200);
  1078   002552  0EF0               	movlw	240
  1079   002554                     u207:
  1080   002554  D000               	nop2	
  1081   002556  2EE8               	decfsz	wreg,f,c
  1082   002558  D7FD               	bra	u207
  1083                           
  1084                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1085   00255A  84C1               	bsf	193,2,c	;volatile
  1086                           
  1087                           ;LCD.c: 147:             _delay(1200);
  1088   00255C  0EF0               	movlw	240
  1089   00255E                     u217:
  1090   00255E  D000               	nop2	
  1091   002560  2EE8               	decfsz	wreg,f,c
  1092   002562  D7FD               	bra	u217
  1093   002564  D7E9               	goto	l816
  1094   002566                     l832:
  1095                           
  1096                           ;LCD.c: 139:  while(aux == 0x80)
  1097   002566  0E80               	movlw	128
  1098   002568  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1099   00256A  A4D8               	btfss	status,2,c
  1100   00256C  0012               	return	
  1101   00256E  D7E9               	goto	l113
  1102   002570                     __end_of_LEER_LCD:
  1103                           	callstack 0
  1104                           
  1105 ;; *************** function _ENVIA_NIBBLE *****************
  1106 ;; Defined at:
  1107 ;;		line 93 in file "LCD.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  dato            1    wreg     unsigned char 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  dato            1    0[COMRAM] unsigned char 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, status,2, status,0
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/4
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1125 ;;Total ram usage:        1 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_ENVIA_CHAR
  1131 ;;		_LCD_CONFIG
  1132 ;;		_ENVIA_LCD_CMD
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text12
  1137   002704                     __ptext12:
  1138                           	callstack 0
  1139   002704                     _ENVIA_NIBBLE:
  1140                           	callstack 124
  1141                           
  1142                           ;incstack = 0
  1143                           ;ENVIA_NIBBLE@dato stored from wreg
  1144   002704  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1145                           
  1146                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1147   002706  0E0F               	movlw	15
  1148   002708  16C1               	andwf	193,f,c	;volatile
  1149                           
  1150                           ;LCD.c: 96:  dato &= 0xF0;
  1151   00270A  0EF0               	movlw	240
  1152   00270C  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1153                           
  1154                           ;LCD.c: 97:  LATD|= dato;
  1155   00270E  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1156   002710  12C1               	iorwf	193,f,c	;volatile
  1157                           
  1158                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1159   002712  84C1               	bsf	193,2,c	;volatile
  1160                           
  1161                           ;LCD.c: 100:         _delay(1200);
  1162   002714  0EF0               	movlw	240
  1163   002716                     u227:
  1164   002716  D000               	nop2	
  1165   002718  2EE8               	decfsz	wreg,f,c
  1166   00271A  D7FD               	bra	u227
  1167                           
  1168                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1169   00271C  94C1               	bcf	193,2,c	;volatile
  1170   00271E  0012               	return		;funcret
  1171   002720                     __end_of_ENVIA_NIBBLE:
  1172                           	callstack 0
  1173                           
  1174                           	psect	rparam
  1175   000000                     tosu	equ	0x4FF
  1176                           tosh	equ	0x4FE
  1177                           tosl	equ	0x4FD
  1178                           stkptr	equ	0x4FC
  1179                           pclatu	equ	0x4FB
  1180                           pclath	equ	0x4FA
  1181                           pcl	equ	0x4F9
  1182                           tblptru	equ	0x4F8
  1183                           tblptrh	equ	0x4F7
  1184                           tblptrl	equ	0x4F6
  1185                           tablat	equ	0x4F5
  1186                           prodh	equ	0x4F4
  1187                           prodl	equ	0x4F3
  1188                           indf0	equ	0x4EF
  1189                           postinc0	equ	0x4EE
  1190                           postdec0	equ	0x4ED
  1191                           preinc0	equ	0x4EC
  1192                           plusw0	equ	0x4EB
  1193                           fsr0h	equ	0x4EA
  1194                           fsr0l	equ	0x4E9
  1195                           wreg	equ	0x4E8
  1196                           indf1	equ	0x4E7
  1197                           postinc1	equ	0x4E6
  1198                           postdec1	equ	0x4E5
  1199                           preinc1	equ	0x4E4
  1200                           plusw1	equ	0x4E3
  1201                           fsr1h	equ	0x4E2
  1202                           fsr1l	equ	0x4E1
  1203                           bsr	equ	0x4E0
  1204                           indf2	equ	0x4DF
  1205                           postinc2	equ	0x4DE
  1206                           postdec2	equ	0x4DD
  1207                           preinc2	equ	0x4DC
  1208                           plusw2	equ	0x4DB
  1209                           fsr2h	equ	0x4DA
  1210                           fsr2l	equ	0x4D9
  1211                           status	equ	0x4D8

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_init->_CURSOR_ONOFF
    _LCD_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1172
                    _ESCRIBE_MENSAJE
                           _LCD_init
                         _POS_CURSOR
                          _configuro
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     284
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     363
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _LCD_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _configuro

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
ABS                  0      0       0      58        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BIGRAM            1FFF      0       0      70        0.0%
BITBIGSFRhhhhh      2E      0       0      71        0.0%
BITBIGSFRhhhhl       5      0       0      72        0.0%
BITBIGSFRhhhlhh      1      0       0      73        0.0%
BITBIGSFRhhhlhh      1      0       0      74        0.0%
BITBIGSFRhhhlhl      5      0       0      75        0.0%
BITBIGSFRhhhlhl     98      0       0      76        0.0%
BITBIGSFRhhhllh     1E      0       0      77        0.0%
BITBIGSFRhhhlll    354      0       0      78        0.0%
BITBIGSFRhhl         1      0       0      79        0.0%
BITBIGSFRhl          3      0       0      80        0.0%
BITBIGSFRl          AD      0       0      81        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed May 15 15:20:42 2024

          ENVIA_CHAR@aux 0503                      l113 2542                      l832 2566  
                    l816 2538                      l980 266A                      l974 269A  
                    l990 26B4                      l984 267E                      l896 26F6  
                    u107 2646                      u117 2580                      u207 2554  
                    u127 258E                      u217 255E                      u137 259E  
                    u227 2716                      u147 25DE                      u157 2612  
                    u167 251A                      u177 2528                      u187 2532  
                    u197 2546              LEER_LCD@aux 0501                      wreg 04E8  
           ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 0501           ENVIA_CHAR@dato 0502  
                   STR_1 2501                     _LATD 04C1                     _main 26AC  
                   start FFFC            ?_CURSOR_ONOFF 0501             ___param_bank 0000  
        ??_ENVIA_LCD_CMD 0502         __end_of_LEER_LCD 2570         __end_of_LCD_init 2660  
                  ?_main 0501                    _OSCEN 00B3                    _PORTD 04D1  
                  _TRISD 04C9              ?_POS_CURSOR 0504                    tablat 04F5  
                  status 04D8           ??_CURSOR_ONOFF 0504          __initialization 2720  
           __end_of_main 26CC          _ESCRIBE_MENSAJE 2660                   ??_main 0508  
          __activetblptr 0001                   _OSCFRQ 00B1     __end_of_ENVIA_NIBBLE 2720  
                 isa$std 0001             __mediumconst 0000                   tblptrh 04F7  
                 tblptrl 04F6                   tblptru 04F8             ??_BORRAR_LCD 0504  
              ?_LEER_LCD 0501               __accesstop 0560  __end_of__initialization 2720  
           ??_LCD_CONFIG 0504                ?_LCD_init 0501            ___rparam_used 0001  
           ??_ENVIA_CHAR 0502  __end_of_ESCRIBE_MENSAJE 2688           __pcstackCOMRAM 0501  
     __end_of_BORRAR_LCD 273E         ENVIA_LCD_CMD@aux 0503     __end_of_CURSOR_ONOFF 2704  
     __end_of_LCD_CONFIG 25D0       __end_of_ENVIA_CHAR 2638               ??_LEER_LCD 0501  
       ENVIA_NIBBLE@dato 0501               ??_LCD_init 0505                  _OSCCON1 00AD  
           ??_POS_CURSOR 0505                  __Hparam 0000                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 0504        __end_of_configuro 26E8             __psmallconst 2500  
  __end_of_ENVIA_LCD_CMD 2604                  __pcinit 2720       __end_of_POS_CURSOR 26AC  
                __ramtop 2500                  __ptext0 26AC                  __ptext1 26CC  
                __ptext2 2688                  __ptext3 2638                  __ptext4 2570  
                __ptext5 26E8                  __ptext6 272E                  __ptext7 2736  
                __ptext8 25D0                  __ptext9 2660             _ENVIA_NIBBLE 2704  
   end_of_initialization 2720                _TRISBbits 04C7                _TRISFbits 04CB  
           _CURSOR_ONOFF 26E8       CURSOR_ONOFF@estado 0504            ??_CURSOR_HOME 0504  
    start_initialization 2720        ENVIA_LCD_CMD@dato 0502      __end_of_CURSOR_HOME 2736  
              _configuro 26CC              __smallconst 2500                 _LEER_LCD 250E  
               _LATDbits 04C1                 _LCD_init 2638         ESCRIBE_MENSAJE@i 0507  
         POS_CURSOR@fila 0505               ?_configuro 0501                 _WPUBbits 0409  
            _CURSOR_HOME 272E                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 2500               _ANSELBbits 0408               _ANSELFbits 0428  
               __ptext10 2604                 __ptext11 250E                 __ptext12 2704  
             _BORRAR_LCD 2736               _LCD_CONFIG 2570               _ENVIA_CHAR 2604  
               isa$xinst 0000            _ENVIA_LCD_CMD 25D0              ??_configuro 0501  
      ??_ESCRIBE_MENSAJE 0506    ESCRIBE_MENSAJE@cadena 0504           ?_ENVIA_LCD_CMD 0501  
            ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501               _POS_CURSOR 2688  
            ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 0505              ?_ENVIA_CHAR 0501  
      POS_CURSOR@columna 0504  
