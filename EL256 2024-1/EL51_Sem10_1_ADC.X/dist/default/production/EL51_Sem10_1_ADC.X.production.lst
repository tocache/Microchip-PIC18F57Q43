

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed May 22 18:52:53 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Generated 23/02/2024 GMT
    31                           ; 
    32                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F57Q43 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   000000                     _ADCON0bits	set	1011
    65   000000                     _LATD	set	1217
    66   000000                     _OSCCON1	set	173
    67   000000                     _OSCFRQ	set	177
    68   000000                     _OSCEN	set	179
    69   000000                     _ADRESL	set	1002
    70   000000                     _ADRESH	set	1003
    71   000000                     _ADPCH	set	1004
    72   000000                     _ADCON0	set	1011
    73   000000                     _ANSELAbits	set	1024
    74   000000                     _TRISAbits	set	1222
    75   000000                     _TRISD	set	1225
    76   000000                     _ANSELD	set	1048
    77   000000                     _LATDbits	set	1217
    78   000000                     _PORTD	set	1233
    79                           
    80                           	psect	smallconst
    81   002500                     __psmallconst:
    82                           	callstack 0
    83   002500  00                 	db	0
    84   002501                     STR_1:
    85   002501  45                 	db	69	;'E'
    86   002502  6A                 	db	106	;'j'
    87   002503  65                 	db	101	;'e'
    88   002504  6D                 	db	109	;'m'
    89   002505  70                 	db	112	;'p'
    90   002506  6C                 	db	108	;'l'
    91   002507  6F                 	db	111	;'o'
    92   002508  20                 	db	32
    93   002509  53                 	db	83	;'S'
    94   00250A  65                 	db	101	;'e'
    95   00250B  6D                 	db	109	;'m'
    96   00250C  2E                 	db	46
    97   00250D  31                 	db	49	;'1'
    98   00250E  30                 	db	48	;'0'
    99   00250F  00                 	db	0
   100   002510                     STR_2:
   101   002510  43                 	db	67	;'C'
   102   002511  20                 	db	32
   103   002512  50                 	db	80	;'P'
   104   002513  49                 	db	73	;'I'
   105   002514  43                 	db	67	;'C'
   106   002515  31                 	db	49	;'1'
   107   002516  38                 	db	56	;'8'
   108   002517  46                 	db	70	;'F'
   109   002518  35                 	db	53	;'5'
   110   002519  37                 	db	55	;'7'
   111   00251A  51                 	db	81	;'Q'
   112   00251B  34                 	db	52	;'4'
   113   00251C  33                 	db	51	;'3'
   114   00251D  00                 	db	0
   115   00251E                     STR_3:
   116   00251E  4C                 	db	76	;'L'
   117   00251F  65                 	db	101	;'e'
   118   002520  63                 	db	99	;'c'
   119   002521  74                 	db	116	;'t'
   120   002522  75                 	db	117	;'u'
   121   002523  72                 	db	114	;'r'
   122   002524  61                 	db	97	;'a'
   123   002525  20                 	db	32
   124   002526  41                 	db	65	;'A'
   125   002527  4E                 	db	78	;'N'
   126   002528  2D                 	db	45
   127   002529  30                 	db	48	;'0'
   128   00252A  3A                 	db	58	;':'
   129   00252B  00                 	db	0
   130   00252C  00                 	db	0	; dummy byte at the end
   131   000000                     
   132                           ; #config settings
   133                           
   134                           	psect	cinit
   135   0031B0                     __pcinit:
   136                           	callstack 0
   137   0031B0                     start_initialization:
   138                           	callstack 0
   139   0031B0                     __initialization:
   140                           	callstack 0
   141   0031B0                     end_of_initialization:
   142                           	callstack 0
   143   0031B0                     __end_of__initialization:
   144                           	callstack 0
   145   0031B0  0100               	movlb	0
   146   0031B2  EFAC  F014         	goto	_main	;jump to C main() function
   147                           
   148                           	psect	cstackCOMRAM
   149   000501                     __pcstackCOMRAM:
   150                           	callstack 0
   151   000501                     ?___lwmod:
   152                           	callstack 0
   153   000501                     ?___fltol:
   154                           	callstack 0
   155   000501                     ?___xxtofl:
   156                           	callstack 0
   157   000501                     ENVIA_NIBBLE@dato:
   158                           	callstack 0
   159   000501                     ___lwmod@dividend:
   160                           	callstack 0
   161   000501                     ___fltol@f1:
   162                           	callstack 0
   163   000501                     ___xxtofl@val:
   164                           	callstack 0
   165                           
   166                           ; 4 bytes @ 0x0
   167   000501                     	ds	1
   168   000502                     ENVIA_CHAR@dato:
   169                           	callstack 0
   170   000502                     ENVIA_LCD_CMD@dato:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x1
   174   000502                     	ds	1
   175   000503                     ENVIA_CHAR@aux:
   176                           	callstack 0
   177   000503                     ENVIA_LCD_CMD@aux:
   178                           	callstack 0
   179   000503                     ___lwmod@divisor:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0x2
   183   000503                     	ds	1
   184   000504                     ??_LCD_CONFIG:
   185   000504                     POS_CURSOR@columna:
   186                           	callstack 0
   187   000504                     CURSOR_ONOFF@estado:
   188                           	callstack 0
   189   000504                     ESCRIBE_MENSAJE@cadena:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x3
   193   000504                     	ds	1
   194   000505                     ??_LCD_INIT:
   195   000505                     ??___fltol:
   196   000505                     ??___xxtofl:
   197   000505                     POS_CURSOR@fila:
   198                           	callstack 0
   199   000505                     ESCRIBE_MENSAJE@tam:
   200                           	callstack 0
   201   000505                     ___lwmod@counter:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0x4
   205   000505                     	ds	1
   206   000506                     ??_ESCRIBE_MENSAJE:
   207   000506                     ?___lwdiv:
   208                           	callstack 0
   209   000506                     ___lwdiv@dividend:
   210                           	callstack 0
   211                           
   212                           ; 2 bytes @ 0x5
   213   000506                     	ds	1
   214   000507                     ESCRIBE_MENSAJE@i:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0x6
   218   000507                     	ds	1
   219   000508                     ___lwdiv@divisor:
   220                           	callstack 0
   221                           
   222                           ; 2 bytes @ 0x7
   223   000508                     	ds	1
   224   000509                     ___fltol@sign1:
   225                           	callstack 0
   226   000509                     ___xxtofl@sign:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x8
   230   000509                     	ds	1
   231   00050A                     ___fltol@exp1:
   232                           	callstack 0
   233   00050A                     ___xxtofl@exp:
   234                           	callstack 0
   235   00050A                     ___lwdiv@quotient:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0x9
   239   00050A                     	ds	1
   240   00050B                     ___xxtofl@arg:
   241                           	callstack 0
   242                           
   243                           ; 4 bytes @ 0xA
   244   00050B                     	ds	1
   245   00050C                     ___lwdiv@counter:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0xB
   249   00050C                     	ds	3
   250   00050F                     ?___flmul:
   251                           	callstack 0
   252   00050F                     ___flmul@b:
   253                           	callstack 0
   254                           
   255                           ; 4 bytes @ 0xE
   256   00050F                     	ds	4
   257   000513                     ___flmul@a:
   258                           	callstack 0
   259                           
   260                           ; 4 bytes @ 0x12
   261   000513                     	ds	4
   262   000517                     ??___flmul:
   263                           
   264                           ; 1 bytes @ 0x16
   265   000517                     	ds	4
   266   00051B                     ___flmul@sign:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x1A
   270   00051B                     	ds	1
   271   00051C                     ___flmul@grs:
   272                           	callstack 0
   273                           
   274                           ; 4 bytes @ 0x1B
   275   00051C                     	ds	4
   276   000520                     ___flmul@aexp:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x1F
   280   000520                     	ds	1
   281   000521                     ___flmul@bexp:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0x20
   285   000521                     	ds	1
   286   000522                     ___flmul@prod:
   287                           	callstack 0
   288                           
   289                           ; 4 bytes @ 0x21
   290   000522                     	ds	4
   291   000526                     ___flmul@temp:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x25
   295   000526                     	ds	2
   296   000528                     ??_main:
   297                           
   298                           ; 1 bytes @ 0x27
   299   000528                     	ds	2
   300   00052A                     main@voltaje:
   301                           	callstack 0
   302                           
   303                           ; 4 bytes @ 0x29
   304   00052A                     	ds	4
   305   00052E                     main@final:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x2D
   309   00052E                     	ds	2
   310   000530                     main@valor_leido:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x2F
   314   000530                     	ds	2
   315                           
   316 ;;
   317 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   318 ;;
   319 ;; *************** function _main *****************
   320 ;; Defined at:
   321 ;;		line 29 in file "maincode.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;  voltaje         4   41[COMRAM] float 
   326 ;;  valor_leido     2   47[COMRAM] unsigned int 
   327 ;;  final           2   45[COMRAM] unsigned int 
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   338 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   340 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   341 ;;Total ram usage:       10 bytes
   342 ;; Hardware stack levels required when called: 4
   343 ;; This function calls:
   344 ;;		_BORRAR_LCD
   345 ;;		_ENVIA_CHAR
   346 ;;		_ESCRIBE_MENSAJE
   347 ;;		_LCD_INIT
   348 ;;		_POS_CURSOR
   349 ;;		___flmul
   350 ;;		___fltol
   351 ;;		___lwdiv
   352 ;;		___lwmod
   353 ;;		___xxtofl
   354 ;;		_configuro
   355 ;;		_leer_ADC
   356 ;; This function is called by:
   357 ;;		Startup code after reset
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text0
   362   002958                     __ptext0:
   363                           	callstack 0
   364   002958                     _main:
   365                           	callstack 123
   366   002958                     
   367                           ;maincode.c: 31:     float voltaje = 0;
   368   002958  0E00               	movlw	0
   369   00295A  6E2A               	movwf	main@voltaje^(0+1280),c
   370   00295C  0E00               	movlw	0
   371   00295E  6E2B               	movwf	(main@voltaje+1)^(0+1280),c
   372   002960  0E00               	movlw	0
   373   002962  6E2C               	movwf	(main@voltaje+2)^(0+1280),c
   374   002964  0E00               	movlw	0
   375   002966  6E2D               	movwf	(main@voltaje+3)^(0+1280),c
   376                           
   377                           ;maincode.c: 32:     unsigned int final = 0;
   378   002968  0E00               	movlw	0
   379   00296A  6E2F               	movwf	(main@final+1)^(0+1280),c
   380   00296C  0E00               	movlw	0
   381   00296E  6E2E               	movwf	main@final^(0+1280),c
   382   002970                     
   383                           ;maincode.c: 33:     configuro();
   384   002970  ECA8  F018         	call	_configuro	;wreg free
   385   002974                     
   386                           ;maincode.c: 34:     LCD_INIT();
   387   002974  ECF2  F017         	call	_LCD_INIT	;wreg free
   388   002978                     
   389                           ;maincode.c: 35:     _delay((unsigned long)((500)*(32000000UL/4000.0)));
   390   002978  0E15               	movlw	21
   391   00297A  6E29               	movwf	(??_main+1)^(0+1280),c
   392   00297C  0E4B               	movlw	75
   393   00297E  6E28               	movwf	??_main^(0+1280),c
   394   002980  0EBE               	movlw	190
   395   002982                     u1127:
   396   002982  2EE8               	decfsz	wreg,f,c
   397   002984  D7FE               	bra	u1127
   398   002986  2E28               	decfsz	??_main^(0+1280),f,c
   399   002988  D7FC               	bra	u1127
   400   00298A  2E29               	decfsz	(??_main+1)^(0+1280),f,c
   401   00298C  D7FA               	bra	u1127
   402   00298E  D000               	nop2	
   403   002990                     
   404                           ;maincode.c: 36:     POS_CURSOR(1,1);
   405   002990  0E01               	movlw	1
   406   002992  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   407   002994  0E01               	movlw	1
   408   002996  EC49  F017         	call	_POS_CURSOR
   409   00299A                     
   410                           ;maincode.c: 37:     ESCRIBE_MENSAJE("Ejemplo Sem.10",14);
   411   00299A  0E01               	movlw	low STR_1
   412   00299C  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   413   00299E  0E0E               	movlw	14
   414   0029A0  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   415   0029A2  EC46  F018         	call	_ESCRIBE_MENSAJE	;wreg free
   416   0029A6                     
   417                           ;maincode.c: 38:     POS_CURSOR(2,1);
   418   0029A6  0E01               	movlw	1
   419   0029A8  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   420   0029AA  0E02               	movlw	2
   421   0029AC  EC49  F017         	call	_POS_CURSOR
   422   0029B0                     
   423                           ;maincode.c: 39:     ENVIA_CHAR(0xE4);
   424   0029B0  0EE4               	movlw	228
   425   0029B2  EC92  F018         	call	_ENVIA_CHAR
   426   0029B6                     
   427                           ;maincode.c: 40:     ESCRIBE_MENSAJE("C PIC18F57Q43",13);
   428   0029B6  0E10               	movlw	low STR_2
   429   0029B8  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   430   0029BA  0E0D               	movlw	13
   431   0029BC  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   432   0029BE  EC46  F018         	call	_ESCRIBE_MENSAJE	;wreg free
   433   0029C2                     
   434                           ;maincode.c: 41:     _delay((unsigned long)((3000)*(32000000UL/4000.0)));
   435   0029C2  0E7A               	movlw	122
   436   0029C4  6E29               	movwf	(??_main+1)^(0+1280),c
   437   0029C6  0EC1               	movlw	193
   438   0029C8  6E28               	movwf	??_main^(0+1280),c
   439   0029CA  0E82               	movlw	130
   440   0029CC                     u1137:
   441   0029CC  2EE8               	decfsz	wreg,f,c
   442   0029CE  D7FE               	bra	u1137
   443   0029D0  2E28               	decfsz	??_main^(0+1280),f,c
   444   0029D2  D7FC               	bra	u1137
   445   0029D4  2E29               	decfsz	(??_main+1)^(0+1280),f,c
   446   0029D6  D7FA               	bra	u1137
   447   0029D8                     
   448                           ;maincode.c: 42:     BORRAR_LCD();
   449   0029D8  ECD4  F018         	call	_BORRAR_LCD	;wreg free
   450   0029DC                     l1830:
   451                           
   452                           ;maincode.c: 44:         leer_ADC();
   453   0029DC  ECC4  F018         	call	_leer_ADC	;wreg free
   454   0029E0                     
   455                           ;maincode.c: 45:         valor_leido = (ADRESH<<8) + ADRESL;
   456   0029E0  0103               	movlb	3	; () banked
   457   0029E2  51EB               	movf	235,w,b	;volatile
   458   0029E4  6E29               	movwf	(??_main+1)^(0+1280),c
   459   0029E6  6A28               	clrf	??_main^(0+1280),c
   460   0029E8  51EA               	movf	234,w,b	;volatile
   461   0029EA  2428               	addwf	??_main^(0+1280),w,c
   462   0029EC  6E30               	movwf	main@valor_leido^(0+1280),c
   463   0029EE  0E00               	movlw	0
   464   0029F0  2029               	addwfc	(??_main+1)^(0+1280),w,c
   465   0029F2  6E31               	movwf	(main@valor_leido+1)^(0+1280),c
   466   0029F4                     
   467                           ; BSR set to: 3
   468                           ;maincode.c: 46:         POS_CURSOR(1,0);
   469   0029F4  0E00               	movlw	0
   470   0029F6  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   471   0029F8  0E01               	movlw	1
   472   0029FA  EC49  F017         	call	_POS_CURSOR
   473   0029FE                     
   474                           ;maincode.c: 47:         ESCRIBE_MENSAJE("Lectura AN-0:",13);
   475   0029FE  0E1E               	movlw	low STR_3
   476   002A00  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   477   002A02  0E0D               	movlw	13
   478   002A04  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   479   002A06  EC46  F018         	call	_ESCRIBE_MENSAJE	;wreg free
   480   002A0A                     
   481                           ;maincode.c: 48:         POS_CURSOR(2,0);
   482   002A0A  0E00               	movlw	0
   483   002A0C  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   484   002A0E  0E02               	movlw	2
   485   002A10  EC49  F017         	call	_POS_CURSOR
   486   002A14                     
   487                           ;maincode.c: 49:         ENVIA_CHAR((valor_leido / 10000) + 0x30);
   488   002A14  C530  F506         	movff	main@valor_leido,___lwdiv@dividend
   489   002A18  C531  F507         	movff	main@valor_leido+1,___lwdiv@dividend+1
   490   002A1C  0E27               	movlw	39
   491   002A1E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   492   002A20  0E10               	movlw	16
   493   002A22  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   494   002A24  EC86  F017         	call	___lwdiv	;wreg free
   495   002A28  5006               	movf	?___lwdiv^(0+1280),w,c
   496   002A2A  0F30               	addlw	48
   497   002A2C  EC92  F018         	call	_ENVIA_CHAR
   498   002A30                     
   499                           ;maincode.c: 50:         ENVIA_CHAR(((valor_leido % 10000) / 1000) + 0x30);
   500   002A30  0E27               	movlw	39
   501   002A32  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   502   002A34  0E10               	movlw	16
   503   002A36  6E03               	movwf	___lwmod@divisor^(0+1280),c
   504   002A38  C530  F501         	movff	main@valor_leido,___lwmod@dividend
   505   002A3C  C531  F502         	movff	main@valor_leido+1,___lwmod@dividend+1
   506   002A40  ECC0  F017         	call	___lwmod	;wreg free
   507   002A44  C501  F506         	movff	?___lwmod,___lwdiv@dividend
   508   002A48  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
   509   002A4C  0E03               	movlw	3
   510   002A4E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   511   002A50  0EE8               	movlw	232
   512   002A52  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   513   002A54  EC86  F017         	call	___lwdiv	;wreg free
   514   002A58  5006               	movf	?___lwdiv^(0+1280),w,c
   515   002A5A  0F30               	addlw	48
   516   002A5C  EC92  F018         	call	_ENVIA_CHAR
   517   002A60                     
   518                           ;maincode.c: 51:         ENVIA_CHAR(((valor_leido % 1000) / 100) + 0x30);
   519   002A60  0E03               	movlw	3
   520   002A62  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   521   002A64  0EE8               	movlw	232
   522   002A66  6E03               	movwf	___lwmod@divisor^(0+1280),c
   523   002A68  C530  F501         	movff	main@valor_leido,___lwmod@dividend
   524   002A6C  C531  F502         	movff	main@valor_leido+1,___lwmod@dividend+1
   525   002A70  ECC0  F017         	call	___lwmod	;wreg free
   526   002A74  C501  F506         	movff	?___lwmod,___lwdiv@dividend
   527   002A78  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
   528   002A7C  0E00               	movlw	0
   529   002A7E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   530   002A80  0E64               	movlw	100
   531   002A82  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   532   002A84  EC86  F017         	call	___lwdiv	;wreg free
   533   002A88  5006               	movf	?___lwdiv^(0+1280),w,c
   534   002A8A  0F30               	addlw	48
   535   002A8C  EC92  F018         	call	_ENVIA_CHAR
   536   002A90                     
   537                           ;maincode.c: 52:         ENVIA_CHAR(((valor_leido % 100) / 10) + 0x30);
   538   002A90  0E00               	movlw	0
   539   002A92  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   540   002A94  0E64               	movlw	100
   541   002A96  6E03               	movwf	___lwmod@divisor^(0+1280),c
   542   002A98  C530  F501         	movff	main@valor_leido,___lwmod@dividend
   543   002A9C  C531  F502         	movff	main@valor_leido+1,___lwmod@dividend+1
   544   002AA0  ECC0  F017         	call	___lwmod	;wreg free
   545   002AA4  C501  F506         	movff	?___lwmod,___lwdiv@dividend
   546   002AA8  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
   547   002AAC  0E00               	movlw	0
   548   002AAE  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   549   002AB0  0E0A               	movlw	10
   550   002AB2  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   551   002AB4  EC86  F017         	call	___lwdiv	;wreg free
   552   002AB8  5006               	movf	?___lwdiv^(0+1280),w,c
   553   002ABA  0F30               	addlw	48
   554   002ABC  EC92  F018         	call	_ENVIA_CHAR
   555   002AC0                     
   556                           ;maincode.c: 53:         ENVIA_CHAR((valor_leido % 10) + 0x30);
   557   002AC0  C530  F501         	movff	main@valor_leido,___lwmod@dividend
   558   002AC4  C531  F502         	movff	main@valor_leido+1,___lwmod@dividend+1
   559   002AC8  0E00               	movlw	0
   560   002ACA  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   561   002ACC  0E0A               	movlw	10
   562   002ACE  6E03               	movwf	___lwmod@divisor^(0+1280),c
   563   002AD0  ECC0  F017         	call	___lwmod	;wreg free
   564   002AD4  5001               	movf	?___lwmod^(0+1280),w,c
   565   002AD6  0F30               	addlw	48
   566   002AD8  EC92  F018         	call	_ENVIA_CHAR
   567   002ADC                     
   568                           ;maincode.c: 54:         voltaje = valor_leido * 0.122;
   569   002ADC  C530  F501         	movff	main@valor_leido,___xxtofl@val
   570   002AE0  C531  F502         	movff	main@valor_leido+1,___xxtofl@val+1
   571   002AE4  6A03               	clrf	(___xxtofl@val+2)^(0+1280),c
   572   002AE6  6A04               	clrf	(___xxtofl@val+3)^(0+1280),c
   573   002AE8  0E00               	movlw	0
   574   002AEA  ECEC  F015         	call	___xxtofl
   575   002AEE  C501  F50F         	movff	?___xxtofl,___flmul@b
   576   002AF2  C502  F510         	movff	?___xxtofl+1,___flmul@b+1
   577   002AF6  C503  F511         	movff	?___xxtofl+2,___flmul@b+2
   578   002AFA  C504  F512         	movff	?___xxtofl+3,___flmul@b+3
   579   002AFE  0E23               	movlw	35
   580   002B00  6E13               	movwf	___flmul@a^(0+1280),c
   581   002B02  0EDB               	movlw	219
   582   002B04  6E14               	movwf	(___flmul@a+1)^(0+1280),c
   583   002B06  0EF9               	movlw	249
   584   002B08  6E15               	movwf	(___flmul@a+2)^(0+1280),c
   585   002B0A  0E3D               	movlw	61
   586   002B0C  6E16               	movwf	(___flmul@a+3)^(0+1280),c
   587   002B0E  EC97  F012         	call	___flmul	;wreg free
   588   002B12  C50F  F52A         	movff	?___flmul,main@voltaje
   589   002B16  C510  F52B         	movff	?___flmul+1,main@voltaje+1
   590   002B1A  C511  F52C         	movff	?___flmul+2,main@voltaje+2
   591   002B1E  C512  F52D         	movff	?___flmul+3,main@voltaje+3
   592   002B22                     
   593                           ;maincode.c: 55:         final = voltaje;
   594   002B22  C52A  F501         	movff	main@voltaje,___fltol@f1
   595   002B26  C52B  F502         	movff	main@voltaje+1,___fltol@f1+1
   596   002B2A  C52C  F503         	movff	main@voltaje+2,___fltol@f1+2
   597   002B2E  C52D  F504         	movff	main@voltaje+3,___fltol@f1+3
   598   002B32  ECC6  F016         	call	___fltol	;wreg free
   599   002B36  C501  F52E         	movff	?___fltol,main@final
   600   002B3A  C502  F52F         	movff	?___fltol+1,main@final+1
   601   002B3E                     
   602                           ;maincode.c: 56:         POS_CURSOR(2,8);
   603   002B3E  0E08               	movlw	8
   604   002B40  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   605   002B42  0E02               	movlw	2
   606   002B44  EC49  F017         	call	_POS_CURSOR
   607   002B48                     
   608                           ;maincode.c: 57:         ENVIA_CHAR(((final % 1000) / 100) + 0x30);
   609   002B48  0E03               	movlw	3
   610   002B4A  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   611   002B4C  0EE8               	movlw	232
   612   002B4E  6E03               	movwf	___lwmod@divisor^(0+1280),c
   613   002B50  C52E  F501         	movff	main@final,___lwmod@dividend
   614   002B54  C52F  F502         	movff	main@final+1,___lwmod@dividend+1
   615   002B58  ECC0  F017         	call	___lwmod	;wreg free
   616   002B5C  C501  F506         	movff	?___lwmod,___lwdiv@dividend
   617   002B60  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
   618   002B64  0E00               	movlw	0
   619   002B66  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   620   002B68  0E64               	movlw	100
   621   002B6A  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   622   002B6C  EC86  F017         	call	___lwdiv	;wreg free
   623   002B70  5006               	movf	?___lwdiv^(0+1280),w,c
   624   002B72  0F30               	addlw	48
   625   002B74  EC92  F018         	call	_ENVIA_CHAR
   626   002B78                     
   627                           ;maincode.c: 58:         ENVIA_CHAR('.');
   628   002B78  0E2E               	movlw	46
   629   002B7A  EC92  F018         	call	_ENVIA_CHAR
   630   002B7E                     
   631                           ;maincode.c: 59:         ENVIA_CHAR(((final % 100) / 10) + 0x30);
   632   002B7E  0E00               	movlw	0
   633   002B80  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   634   002B82  0E64               	movlw	100
   635   002B84  6E03               	movwf	___lwmod@divisor^(0+1280),c
   636   002B86  C52E  F501         	movff	main@final,___lwmod@dividend
   637   002B8A  C52F  F502         	movff	main@final+1,___lwmod@dividend+1
   638   002B8E  ECC0  F017         	call	___lwmod	;wreg free
   639   002B92  C501  F506         	movff	?___lwmod,___lwdiv@dividend
   640   002B96  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
   641   002B9A  0E00               	movlw	0
   642   002B9C  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   643   002B9E  0E0A               	movlw	10
   644   002BA0  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   645   002BA2  EC86  F017         	call	___lwdiv	;wreg free
   646   002BA6  5006               	movf	?___lwdiv^(0+1280),w,c
   647   002BA8  0F30               	addlw	48
   648   002BAA  EC92  F018         	call	_ENVIA_CHAR
   649   002BAE                     
   650                           ;maincode.c: 60:         ENVIA_CHAR((final % 10) + 0x30);
   651   002BAE  C52E  F501         	movff	main@final,___lwmod@dividend
   652   002BB2  C52F  F502         	movff	main@final+1,___lwmod@dividend+1
   653   002BB6  0E00               	movlw	0
   654   002BB8  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   655   002BBA  0E0A               	movlw	10
   656   002BBC  6E03               	movwf	___lwmod@divisor^(0+1280),c
   657   002BBE  ECC0  F017         	call	___lwmod	;wreg free
   658   002BC2  5001               	movf	?___lwmod^(0+1280),w,c
   659   002BC4  0F30               	addlw	48
   660   002BC6  EC92  F018         	call	_ENVIA_CHAR
   661   002BCA                     
   662                           ;maincode.c: 61:         ENVIA_CHAR('V');
   663   002BCA  0E56               	movlw	86
   664   002BCC  EC92  F018         	call	_ENVIA_CHAR
   665   002BD0  EFEE  F014         	goto	l1830
   666   002BD4  EFFE  F0FF         	goto	start
   667   002BD8                     __end_of_main:
   668                           	callstack 0
   669                           
   670 ;; *************** function _leer_ADC *****************
   671 ;; Defined at:
   672 ;;		line 22 in file "maincode.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, status,2
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   690 ;;Total ram usage:        0 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text1
   700   003188                     __ptext1:
   701                           	callstack 0
   702   003188                     _leer_ADC:
   703                           	callstack 126
   704   003188                     
   705                           ;maincode.c: 23:     ADPCH = 0x00;
   706   003188  0E00               	movlw	0
   707   00318A  0103               	movlb	3	; () banked
   708   00318C  6FEC               	movwf	236,b	;volatile
   709   00318E                     
   710                           ; BSR set to: 3
   711                           ;maincode.c: 24:     ADCON0bits.GO = 1;
   712   00318E  81F3               	bsf	243,0,b	;volatile
   713   003190                     l38:
   714                           
   715                           ; BSR set to: 3
   716   003190  B1F3               	btfsc	243,0,b	;volatile
   717   003192  EFCD  F018         	goto	u31
   718   003196  EFCF  F018         	goto	u30
   719   00319A                     u31:
   720   00319A  EFC8  F018         	goto	l38
   721   00319E                     u30:
   722   00319E                     
   723                           ; BSR set to: 3
   724   00319E  0012               	return		;funcret
   725   0031A0                     __end_of_leer_ADC:
   726                           	callstack 0
   727                           
   728 ;; *************** function _configuro *****************
   729 ;; Defined at:
   730 ;;		line 12 in file "maincode.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text2
   758   003150                     __ptext2:
   759                           	callstack 0
   760   003150                     _configuro:
   761                           	callstack 126
   762   003150                     
   763                           ;maincode.c: 13:     OSCCON1 = 0x60;
   764   003150  0E60               	movlw	96
   765   003152  0100               	movlb	0	; () banked
   766   003154  6FAD               	movwf	173,b	;volatile
   767                           
   768                           ;maincode.c: 14:     OSCFRQ = 0x06;
   769   003156  0E06               	movlw	6
   770   003158  6FB1               	movwf	177,b	;volatile
   771                           
   772                           ;maincode.c: 15:     OSCEN = 0x40;
   773   00315A  0E40               	movlw	64
   774   00315C  6FB3               	movwf	179,b	;volatile
   775   00315E                     
   776                           ; BSR set to: 0
   777                           ;maincode.c: 17:     TRISAbits.TRISA0 = 1;
   778   00315E  80C6               	bsf	198,0,c	;volatile
   779   003160                     
   780                           ; BSR set to: 0
   781                           ;maincode.c: 18:     ANSELAbits.ANSELA0 = 1;
   782   003160  0104               	movlb	4	; () banked
   783   003162  8100               	bsf	0,0,b	;volatile
   784                           
   785                           ;maincode.c: 19:     ADCON0 = 0x94;
   786   003164  0E94               	movlw	148
   787   003166  0103               	movlb	3	; () banked
   788   003168  6FF3               	movwf	243,b	;volatile
   789   00316A                     
   790                           ; BSR set to: 3
   791   00316A  0012               	return		;funcret
   792   00316C                     __end_of_configuro:
   793                           	callstack 0
   794                           
   795 ;; *************** function ___xxtofl *****************
   796 ;; Defined at:
   797 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  sign            1    wreg     unsigned char 
   800 ;;  val             4    0[COMRAM] long 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  sign            1    8[COMRAM] unsigned char 
   803 ;;  arg             4   10[COMRAM] unsigned long 
   804 ;;  exp             1    9[COMRAM] unsigned char 
   805 ;; Return value:  Size  Location     Type
   806 ;;                  4    0[COMRAM] unsigned char 
   807 ;; Registers used:
   808 ;;		wreg, status,2, status,0
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   814 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   815 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   816 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   817 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   818 ;;Total ram usage:       14 bytes
   819 ;; Hardware stack levels used: 1
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text3
   828   002BD8                     __ptext3:
   829                           	callstack 0
   830   002BD8                     ___xxtofl:
   831                           	callstack 126
   832                           
   833                           ; BSR set to: 3
   834                           ;incstack = 0
   835                           ;___xxtofl@sign stored from wreg
   836   002BD8  6E09               	movwf	___xxtofl@sign^(0+1280),c
   837   002BDA  5009               	movf	___xxtofl@sign^(0+1280),w,c
   838   002BDC  B4D8               	btfsc	status,2,c
   839   002BDE  EFF3  F015         	goto	u1001
   840   002BE2  EFF5  F015         	goto	u1000
   841   002BE6                     u1001:
   842   002BE6  EF17  F016         	goto	l868
   843   002BEA                     u1000:
   844   002BEA  BE04               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
   845   002BEC  EFFC  F015         	goto	u1010
   846   002BF0  EFFA  F015         	goto	u1011
   847   002BF4                     u1011:
   848   002BF4  EF17  F016         	goto	l868
   849   002BF8                     u1010:
   850   002BF8  C501  F505         	movff	___xxtofl@val,??___xxtofl
   851   002BFC  C502  F506         	movff	___xxtofl@val+1,??___xxtofl+1
   852   002C00  C503  F507         	movff	___xxtofl@val+2,??___xxtofl+2
   853   002C04  C504  F508         	movff	___xxtofl@val+3,??___xxtofl+3
   854   002C08  1E05               	comf	??___xxtofl^(0+1280),f,c
   855   002C0A  1E06               	comf	(??___xxtofl+1)^(0+1280),f,c
   856   002C0C  1E07               	comf	(??___xxtofl+2)^(0+1280),f,c
   857   002C0E  1E08               	comf	(??___xxtofl+3)^(0+1280),f,c
   858   002C10  2A05               	incf	??___xxtofl^(0+1280),f,c
   859   002C12  0E00               	movlw	0
   860   002C14  2206               	addwfc	(??___xxtofl+1)^(0+1280),f,c
   861   002C16  2207               	addwfc	(??___xxtofl+2)^(0+1280),f,c
   862   002C18  2208               	addwfc	(??___xxtofl+3)^(0+1280),f,c
   863   002C1A  C505  F50B         	movff	??___xxtofl,___xxtofl@arg
   864   002C1E  C506  F50C         	movff	??___xxtofl+1,___xxtofl@arg+1
   865   002C22  C507  F50D         	movff	??___xxtofl+2,___xxtofl@arg+2
   866   002C26  C508  F50E         	movff	??___xxtofl+3,___xxtofl@arg+3
   867   002C2A  EF1F  F016         	goto	l1768
   868   002C2E                     l868:
   869   002C2E  C501  F50B         	movff	___xxtofl@val,___xxtofl@arg
   870   002C32  C502  F50C         	movff	___xxtofl@val+1,___xxtofl@arg+1
   871   002C36  C503  F50D         	movff	___xxtofl@val+2,___xxtofl@arg+2
   872   002C3A  C504  F50E         	movff	___xxtofl@val+3,___xxtofl@arg+3
   873   002C3E                     l1768:
   874   002C3E  5001               	movf	___xxtofl@val^(0+1280),w,c
   875   002C40  1002               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
   876   002C42  1003               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
   877   002C44  1004               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
   878   002C46  A4D8               	btfss	status,2,c
   879   002C48  EF28  F016         	goto	u1021
   880   002C4C  EF2A  F016         	goto	u1020
   881   002C50                     u1021:
   882   002C50  EF34  F016         	goto	l1774
   883   002C54                     u1020:
   884   002C54  0E00               	movlw	0
   885   002C56  6E01               	movwf	?___xxtofl^(0+1280),c
   886   002C58  0E00               	movlw	0
   887   002C5A  6E02               	movwf	(?___xxtofl+1)^(0+1280),c
   888   002C5C  0E00               	movlw	0
   889   002C5E  6E03               	movwf	(?___xxtofl+2)^(0+1280),c
   890   002C60  0E00               	movlw	0
   891   002C62  6E04               	movwf	(?___xxtofl+3)^(0+1280),c
   892   002C64  EFC5  F016         	goto	l871
   893   002C68                     l1774:
   894   002C68  0E96               	movlw	150
   895   002C6A  6E0A               	movwf	___xxtofl@exp^(0+1280),c
   896   002C6C  EF3E  F016         	goto	l1778
   897   002C70                     l1776:
   898   002C70  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
   899   002C72  90D8               	bcf	status,0,c
   900   002C74  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
   901   002C76  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
   902   002C78  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
   903   002C7A  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
   904   002C7C                     l1778:
   905   002C7C  0E00               	movlw	0
   906   002C7E  140B               	andwf	___xxtofl@arg^(0+1280),w,c
   907   002C80  6E05               	movwf	??___xxtofl^(0+1280),c
   908   002C82  0E00               	movlw	0
   909   002C84  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
   910   002C86  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
   911   002C88  0E00               	movlw	0
   912   002C8A  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
   913   002C8C  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
   914   002C8E  0EFE               	movlw	254
   915   002C90  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
   916   002C92  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
   917   002C94  5005               	movf	??___xxtofl^(0+1280),w,c
   918   002C96  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
   919   002C98  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
   920   002C9A  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
   921   002C9C  A4D8               	btfss	status,2,c
   922   002C9E  EF53  F016         	goto	u1031
   923   002CA2  EF55  F016         	goto	u1030
   924   002CA6                     u1031:
   925   002CA6  EF38  F016         	goto	l1776
   926   002CAA                     u1030:
   927   002CAA  EF63  F016         	goto	l875
   928   002CAE                     l1780:
   929   002CAE  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
   930   002CB0  0E01               	movlw	1
   931   002CB2  260B               	addwf	___xxtofl@arg^(0+1280),f,c
   932   002CB4  0E00               	movlw	0
   933   002CB6  220C               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
   934   002CB8  220D               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
   935   002CBA  220E               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
   936   002CBC  90D8               	bcf	status,0,c
   937   002CBE  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
   938   002CC0  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
   939   002CC2  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
   940   002CC4  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
   941   002CC6                     l875:
   942   002CC6  0E00               	movlw	0
   943   002CC8  140B               	andwf	___xxtofl@arg^(0+1280),w,c
   944   002CCA  6E05               	movwf	??___xxtofl^(0+1280),c
   945   002CCC  0E00               	movlw	0
   946   002CCE  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
   947   002CD0  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
   948   002CD2  0E00               	movlw	0
   949   002CD4  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
   950   002CD6  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
   951   002CD8  0EFF               	movlw	255
   952   002CDA  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
   953   002CDC  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
   954   002CDE  5005               	movf	??___xxtofl^(0+1280),w,c
   955   002CE0  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
   956   002CE2  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
   957   002CE4  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
   958   002CE6  A4D8               	btfss	status,2,c
   959   002CE8  EF78  F016         	goto	u1041
   960   002CEC  EF7A  F016         	goto	u1040
   961   002CF0                     u1041:
   962   002CF0  EF57  F016         	goto	l1780
   963   002CF4                     u1040:
   964   002CF4  EF82  F016         	goto	l1788
   965   002CF8                     l1786:
   966   002CF8  060A               	decf	___xxtofl@exp^(0+1280),f,c
   967   002CFA  90D8               	bcf	status,0,c
   968   002CFC  360B               	rlcf	___xxtofl@arg^(0+1280),f,c
   969   002CFE  360C               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
   970   002D00  360D               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
   971   002D02  360E               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
   972   002D04                     l1788:
   973   002D04  BE0D               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
   974   002D06  EF87  F016         	goto	u1051
   975   002D0A  EF89  F016         	goto	u1050
   976   002D0E                     u1051:
   977   002D0E  EF91  F016         	goto	l882
   978   002D12                     u1050:
   979   002D12  0E02               	movlw	2
   980   002D14  600A               	cpfslt	___xxtofl@exp^(0+1280),c
   981   002D16  EF8F  F016         	goto	u1061
   982   002D1A  EF91  F016         	goto	u1060
   983   002D1E                     u1061:
   984   002D1E  EF7C  F016         	goto	l1786
   985   002D22                     u1060:
   986   002D22                     l882:
   987   002D22  B00A               	btfsc	___xxtofl@exp^(0+1280),0,c
   988   002D24  EF96  F016         	goto	u1071
   989   002D28  EF98  F016         	goto	u1070
   990   002D2C                     u1071:
   991   002D2C  EF99  F016         	goto	l1794
   992   002D30                     u1070:
   993   002D30  9E0D               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
   994   002D32                     l1794:
   995   002D32  90D8               	bcf	status,0,c
   996   002D34  320A               	rrcf	___xxtofl@exp^(0+1280),f,c
   997   002D36  C50A  F505         	movff	___xxtofl@exp,??___xxtofl
   998   002D3A  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
   999   002D3C  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
  1000   002D3E  6A08               	clrf	(??___xxtofl+3)^(0+1280),c
  1001   002D40  C505  F508         	movff	??___xxtofl,??___xxtofl+3
  1002   002D44  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
  1003   002D46  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
  1004   002D48  6A05               	clrf	??___xxtofl^(0+1280),c
  1005   002D4A  5005               	movf	??___xxtofl^(0+1280),w,c
  1006   002D4C  120B               	iorwf	___xxtofl@arg^(0+1280),f,c
  1007   002D4E  5006               	movf	(??___xxtofl+1)^(0+1280),w,c
  1008   002D50  120C               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
  1009   002D52  5007               	movf	(??___xxtofl+2)^(0+1280),w,c
  1010   002D54  120D               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
  1011   002D56  5008               	movf	(??___xxtofl+3)^(0+1280),w,c
  1012   002D58  120E               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
  1013   002D5A  5009               	movf	___xxtofl@sign^(0+1280),w,c
  1014   002D5C  B4D8               	btfsc	status,2,c
  1015   002D5E  EFB3  F016         	goto	u1081
  1016   002D62  EFB5  F016         	goto	u1080
  1017   002D66                     u1081:
  1018   002D66  EFBD  F016         	goto	l1804
  1019   002D6A                     u1080:
  1020   002D6A  BE04               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
  1021   002D6C  EFBC  F016         	goto	u1090
  1022   002D70  EFBA  F016         	goto	u1091
  1023   002D74                     u1091:
  1024   002D74  EFBD  F016         	goto	l1804
  1025   002D78                     u1090:
  1026   002D78  8E0E               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
  1027   002D7A                     l1804:
  1028   002D7A  C50B  F501         	movff	___xxtofl@arg,?___xxtofl
  1029   002D7E  C50C  F502         	movff	___xxtofl@arg+1,?___xxtofl+1
  1030   002D82  C50D  F503         	movff	___xxtofl@arg+2,?___xxtofl+2
  1031   002D86  C50E  F504         	movff	___xxtofl@arg+3,?___xxtofl+3
  1032   002D8A                     l871:
  1033   002D8A  0012               	return		;funcret
  1034   002D8C                     __end_of___xxtofl:
  1035                           	callstack 0
  1036                           
  1037 ;; *************** function ___lwmod *****************
  1038 ;; Defined at:
  1039 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  dividend        2    0[COMRAM] unsigned int 
  1042 ;;  divisor         2    2[COMRAM] unsigned int 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  counter         1    4[COMRAM] unsigned char 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  2    0[COMRAM] unsigned int 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1057 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1058 ;;Total ram usage:        5 bytes
  1059 ;; Hardware stack levels used: 1
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;;		_LCD_ESCRIBE_VAR_INT
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           	psect	text4
  1069   002F80                     __ptext4:
  1070                           	callstack 0
  1071   002F80                     ___lwmod:
  1072                           	callstack 126
  1073   002F80  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1074   002F82  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  1075   002F84  B4D8               	btfsc	status,2,c
  1076   002F86  EFC7  F017         	goto	u971
  1077   002F8A  EFC9  F017         	goto	u970
  1078   002F8E                     u971:
  1079   002F8E  EFED  F017         	goto	l714
  1080   002F92                     u970:
  1081   002F92  0E01               	movlw	1
  1082   002F94  6E05               	movwf	___lwmod@counter^(0+1280),c
  1083   002F96  EFD1  F017         	goto	l1752
  1084   002F9A                     l1750:
  1085   002F9A  90D8               	bcf	status,0,c
  1086   002F9C  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  1087   002F9E  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  1088   002FA0  2A05               	incf	___lwmod@counter^(0+1280),f,c
  1089   002FA2                     l1752:
  1090   002FA2  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  1091   002FA4  EFD6  F017         	goto	u981
  1092   002FA8  EFD8  F017         	goto	u980
  1093   002FAC                     u981:
  1094   002FAC  EFCD  F017         	goto	l1750
  1095   002FB0                     u980:
  1096   002FB0                     l1754:
  1097   002FB0  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1098   002FB2  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  1099   002FB4  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1100   002FB6  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  1101   002FB8  A0D8               	btfss	status,0,c
  1102   002FBA  EFE1  F017         	goto	u991
  1103   002FBE  EFE3  F017         	goto	u990
  1104   002FC2                     u991:
  1105   002FC2  EFE7  F017         	goto	l1758
  1106   002FC6                     u990:
  1107   002FC6  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1108   002FC8  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  1109   002FCA  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1110   002FCC  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  1111   002FCE                     l1758:
  1112   002FCE  90D8               	bcf	status,0,c
  1113   002FD0  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  1114   002FD2  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  1115   002FD4  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  1116   002FD6  EFD8  F017         	goto	l1754
  1117   002FDA                     l714:
  1118   002FDA  C501  F501         	movff	___lwmod@dividend,?___lwmod
  1119   002FDE  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  1120   002FE2  0012               	return		;funcret
  1121   002FE4                     __end_of___lwmod:
  1122                           	callstack 0
  1123                           
  1124 ;; *************** function ___lwdiv *****************
  1125 ;; Defined at:
  1126 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  dividend        2    5[COMRAM] unsigned int 
  1129 ;;  divisor         2    7[COMRAM] unsigned int 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  quotient        2    9[COMRAM] unsigned int 
  1132 ;;  counter         1   11[COMRAM] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  2    5[COMRAM] unsigned int 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1142 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1143 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1145 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1146 ;;Total ram usage:        7 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_main
  1152 ;;		_LCD_ESCRIBE_VAR_INT
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text5
  1157   002F0C                     __ptext5:
  1158                           	callstack 0
  1159   002F0C                     ___lwdiv:
  1160                           	callstack 126
  1161   002F0C  0E00               	movlw	0
  1162   002F0E  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  1163   002F10  0E00               	movlw	0
  1164   002F12  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  1165   002F14  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1166   002F16  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  1167   002F18  B4D8               	btfsc	status,2,c
  1168   002F1A  EF91  F017         	goto	u941
  1169   002F1E  EF93  F017         	goto	u940
  1170   002F22                     u941:
  1171   002F22  EFBB  F017         	goto	l704
  1172   002F26                     u940:
  1173   002F26  0E01               	movlw	1
  1174   002F28  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  1175   002F2A  EF9B  F017         	goto	l1732
  1176   002F2E                     l1730:
  1177   002F2E  90D8               	bcf	status,0,c
  1178   002F30  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  1179   002F32  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1180   002F34  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  1181   002F36                     l1732:
  1182   002F36  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  1183   002F38  EFA0  F017         	goto	u951
  1184   002F3C  EFA2  F017         	goto	u950
  1185   002F40                     u951:
  1186   002F40  EF97  F017         	goto	l1730
  1187   002F44                     u950:
  1188   002F44                     l1734:
  1189   002F44  90D8               	bcf	status,0,c
  1190   002F46  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  1191   002F48  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  1192   002F4A  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1193   002F4C  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  1194   002F4E  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1195   002F50  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  1196   002F52  A0D8               	btfss	status,0,c
  1197   002F54  EFAE  F017         	goto	u961
  1198   002F58  EFB0  F017         	goto	u960
  1199   002F5C                     u961:
  1200   002F5C  EFB5  F017         	goto	l1742
  1201   002F60                     u960:
  1202   002F60  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1203   002F62  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  1204   002F64  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1205   002F66  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  1206   002F68  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  1207   002F6A                     l1742:
  1208   002F6A  90D8               	bcf	status,0,c
  1209   002F6C  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1210   002F6E  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  1211   002F70  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  1212   002F72  EFA2  F017         	goto	l1734
  1213   002F76                     l704:
  1214   002F76  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  1215   002F7A  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1216   002F7E  0012               	return		;funcret
  1217   002F80                     __end_of___lwdiv:
  1218                           	callstack 0
  1219                           
  1220 ;; *************** function ___fltol *****************
  1221 ;; Defined at:
  1222 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  f1              4    0[COMRAM] unsigned int 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  exp1            1    9[COMRAM] unsigned char 
  1227 ;;  sign1           1    8[COMRAM] unsigned char 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  4    0[COMRAM] long 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2, status,0
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1238 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1239 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1240 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1241 ;;Total ram usage:       10 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text6
  1251   002D8C                     __ptext6:
  1252                           	callstack 0
  1253   002D8C                     ___fltol:
  1254                           	callstack 126
  1255   002D8C  3403               	rlcf	(___fltol@f1+2)^(0+1280),w,c
  1256   002D8E  3404               	rlcf	(___fltol@f1+3)^(0+1280),w,c
  1257   002D90  6E0A               	movwf	___fltol@exp1^(0+1280),c
  1258   002D92  500A               	movf	___fltol@exp1^(0+1280),w,c
  1259   002D94  A4D8               	btfss	status,2,c
  1260   002D96  EFCF  F016         	goto	u871
  1261   002D9A  EFD1  F016         	goto	u870
  1262   002D9E                     u871:
  1263   002D9E  EFDB  F016         	goto	l1686
  1264   002DA2                     u870:
  1265   002DA2                     l1682:
  1266   002DA2  0E00               	movlw	0
  1267   002DA4  6E01               	movwf	?___fltol^(0+1280),c
  1268   002DA6  0E00               	movlw	0
  1269   002DA8  6E02               	movwf	(?___fltol+1)^(0+1280),c
  1270   002DAA  0E00               	movlw	0
  1271   002DAC  6E03               	movwf	(?___fltol+2)^(0+1280),c
  1272   002DAE  0E00               	movlw	0
  1273   002DB0  6E04               	movwf	(?___fltol+3)^(0+1280),c
  1274   002DB2  EF48  F017         	goto	l510
  1275   002DB6                     l1686:
  1276   002DB6  C501  F505         	movff	___fltol@f1,??___fltol
  1277   002DBA  C502  F506         	movff	___fltol@f1+1,??___fltol+1
  1278   002DBE  C503  F507         	movff	___fltol@f1+2,??___fltol+2
  1279   002DC2  C504  F508         	movff	___fltol@f1+3,??___fltol+3
  1280   002DC6  0E20               	movlw	32
  1281   002DC8  EFEB  F016         	goto	u880
  1282   002DCC                     u885:
  1283   002DCC  90D8               	bcf	status,0,c
  1284   002DCE  3208               	rrcf	(??___fltol+3)^(0+1280),f,c
  1285   002DD0  3207               	rrcf	(??___fltol+2)^(0+1280),f,c
  1286   002DD2  3206               	rrcf	(??___fltol+1)^(0+1280),f,c
  1287   002DD4  3205               	rrcf	??___fltol^(0+1280),f,c
  1288   002DD6                     u880:
  1289   002DD6  2EE8               	decfsz	wreg,f,c
  1290   002DD8  EFE6  F016         	goto	u885
  1291   002DDC  5005               	movf	??___fltol^(0+1280),w,c
  1292   002DDE  6E09               	movwf	___fltol@sign1^(0+1280),c
  1293   002DE0  8E03               	bsf	(___fltol@f1+2)^(0+1280),7,c
  1294   002DE2  0EFF               	movlw	255
  1295   002DE4  1601               	andwf	___fltol@f1^(0+1280),f,c
  1296   002DE6  0EFF               	movlw	255
  1297   002DE8  1602               	andwf	(___fltol@f1+1)^(0+1280),f,c
  1298   002DEA  0EFF               	movlw	255
  1299   002DEC  1603               	andwf	(___fltol@f1+2)^(0+1280),f,c
  1300   002DEE  0E00               	movlw	0
  1301   002DF0  1604               	andwf	(___fltol@f1+3)^(0+1280),f,c
  1302   002DF2  0E96               	movlw	150
  1303   002DF4  5E0A               	subwf	___fltol@exp1^(0+1280),f,c
  1304   002DF6  BE0A               	btfsc	___fltol@exp1^(0+1280),7,c
  1305   002DF8  EF02  F017         	goto	u890
  1306   002DFC  EF00  F017         	goto	u891
  1307   002E00                     u891:
  1308   002E00  EF18  F017         	goto	l1706
  1309   002E04                     u890:
  1310   002E04  500A               	movf	___fltol@exp1^(0+1280),w,c
  1311   002E06  0A80               	xorlw	128
  1312   002E08  0F97               	addlw	151
  1313   002E0A  B0D8               	btfsc	status,0,c
  1314   002E0C  EF0A  F017         	goto	u901
  1315   002E10  EF0C  F017         	goto	u900
  1316   002E14                     u901:
  1317   002E14  EF0E  F017         	goto	l1702
  1318   002E18                     u900:
  1319   002E18  EFD1  F016         	goto	l1682
  1320   002E1C                     l1702:
  1321   002E1C  90D8               	bcf	status,0,c
  1322   002E1E  3204               	rrcf	(___fltol@f1+3)^(0+1280),f,c
  1323   002E20  3203               	rrcf	(___fltol@f1+2)^(0+1280),f,c
  1324   002E22  3202               	rrcf	(___fltol@f1+1)^(0+1280),f,c
  1325   002E24  3201               	rrcf	___fltol@f1^(0+1280),f,c
  1326   002E26  3E0A               	incfsz	___fltol@exp1^(0+1280),f,c
  1327   002E28  EF0E  F017         	goto	l1702
  1328   002E2C  EF30  F017         	goto	l1716
  1329   002E30                     l1706:
  1330   002E30  0E1F               	movlw	31
  1331   002E32  640A               	cpfsgt	___fltol@exp1^(0+1280),c
  1332   002E34  EF1E  F017         	goto	u911
  1333   002E38  EF20  F017         	goto	u910
  1334   002E3C                     u911:
  1335   002E3C  EF28  F017         	goto	l1714
  1336   002E40                     u910:
  1337   002E40  EFD1  F016         	goto	l1682
  1338   002E44                     l1712:
  1339   002E44  90D8               	bcf	status,0,c
  1340   002E46  3601               	rlcf	___fltol@f1^(0+1280),f,c
  1341   002E48  3602               	rlcf	(___fltol@f1+1)^(0+1280),f,c
  1342   002E4A  3603               	rlcf	(___fltol@f1+2)^(0+1280),f,c
  1343   002E4C  3604               	rlcf	(___fltol@f1+3)^(0+1280),f,c
  1344   002E4E  060A               	decf	___fltol@exp1^(0+1280),f,c
  1345   002E50                     l1714:
  1346   002E50  500A               	movf	___fltol@exp1^(0+1280),w,c
  1347   002E52  A4D8               	btfss	status,2,c
  1348   002E54  EF2E  F017         	goto	u921
  1349   002E58  EF30  F017         	goto	u920
  1350   002E5C                     u921:
  1351   002E5C  EF22  F017         	goto	l1712
  1352   002E60                     u920:
  1353   002E60                     l1716:
  1354   002E60  5009               	movf	___fltol@sign1^(0+1280),w,c
  1355   002E62  B4D8               	btfsc	status,2,c
  1356   002E64  EF36  F017         	goto	u931
  1357   002E68  EF38  F017         	goto	u930
  1358   002E6C                     u931:
  1359   002E6C  EF40  F017         	goto	l1720
  1360   002E70                     u930:
  1361   002E70  1E04               	comf	(___fltol@f1+3)^(0+1280),f,c
  1362   002E72  1E03               	comf	(___fltol@f1+2)^(0+1280),f,c
  1363   002E74  1E02               	comf	(___fltol@f1+1)^(0+1280),f,c
  1364   002E76  6C01               	negf	___fltol@f1^(0+1280),c
  1365   002E78  0E00               	movlw	0
  1366   002E7A  2202               	addwfc	(___fltol@f1+1)^(0+1280),f,c
  1367   002E7C  2203               	addwfc	(___fltol@f1+2)^(0+1280),f,c
  1368   002E7E  2204               	addwfc	(___fltol@f1+3)^(0+1280),f,c
  1369   002E80                     l1720:
  1370   002E80  C501  F501         	movff	___fltol@f1,?___fltol
  1371   002E84  C502  F502         	movff	___fltol@f1+1,?___fltol+1
  1372   002E88  C503  F503         	movff	___fltol@f1+2,?___fltol+2
  1373   002E8C  C504  F504         	movff	___fltol@f1+3,?___fltol+3
  1374   002E90                     l510:
  1375   002E90  0012               	return		;funcret
  1376   002E92                     __end_of___fltol:
  1377                           	callstack 0
  1378                           
  1379 ;; *************** function ___flmul *****************
  1380 ;; Defined at:
  1381 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  b               4   14[COMRAM] long 
  1384 ;;  a               4   18[COMRAM] long 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  prod            4   33[COMRAM] struct .
  1387 ;;  grs             4   27[COMRAM] unsigned long 
  1388 ;;  temp            2   37[COMRAM] struct .
  1389 ;;  bexp            1   32[COMRAM] unsigned char 
  1390 ;;  aexp            1   31[COMRAM] unsigned char 
  1391 ;;  sign            1   26[COMRAM] unsigned char 
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  4   14[COMRAM] unsigned char 
  1394 ;; Registers used:
  1395 ;;		wreg, status,2, status,0, prodl, prodh
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1401 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1402 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1403 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1404 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1405 ;;Total ram usage:       25 bytes
  1406 ;; Hardware stack levels used: 1
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text7
  1415   00252E                     __ptext7:
  1416                           	callstack 0
  1417   00252E                     ___flmul:
  1418                           	callstack 126
  1419   00252E  5012               	movf	(___flmul@b+3)^(0+1280),w,c
  1420   002530  0B80               	andlw	128
  1421   002532  6E1B               	movwf	___flmul@sign^(0+1280),c
  1422   002534  5012               	movf	(___flmul@b+3)^(0+1280),w,c
  1423   002536  2412               	addwf	(___flmul@b+3)^(0+1280),w,c
  1424   002538  6E21               	movwf	___flmul@bexp^(0+1280),c
  1425   00253A  AE11               	btfss	(___flmul@b+2)^(0+1280),7,c
  1426   00253C  EFA2  F012         	goto	u681
  1427   002540  EFA4  F012         	goto	u680
  1428   002544                     u681:
  1429   002544  EFA5  F012         	goto	l1556
  1430   002548                     u680:
  1431   002548  8021               	bsf	___flmul@bexp^(0+1280),0,c
  1432   00254A                     l1556:
  1433   00254A  5021               	movf	___flmul@bexp^(0+1280),w,c
  1434   00254C  B4D8               	btfsc	status,2,c
  1435   00254E  EFAB  F012         	goto	u691
  1436   002552  EFAD  F012         	goto	u690
  1437   002556                     u691:
  1438   002556  EFC0  F012         	goto	l1564
  1439   00255A                     u690:
  1440   00255A  2821               	incf	___flmul@bexp^(0+1280),w,c
  1441   00255C  A4D8               	btfss	status,2,c
  1442   00255E  EFB3  F012         	goto	u701
  1443   002562  EFB5  F012         	goto	u700
  1444   002566                     u701:
  1445   002566  EFBD  F012         	goto	l1562
  1446   00256A                     u700:
  1447   00256A  0E00               	movlw	0
  1448   00256C  6E0F               	movwf	___flmul@b^(0+1280),c
  1449   00256E  0E00               	movlw	0
  1450   002570  6E10               	movwf	(___flmul@b+1)^(0+1280),c
  1451   002572  0E00               	movlw	0
  1452   002574  6E11               	movwf	(___flmul@b+2)^(0+1280),c
  1453   002576  0E00               	movlw	0
  1454   002578  6E12               	movwf	(___flmul@b+3)^(0+1280),c
  1455   00257A                     l1562:
  1456   00257A  8E11               	bsf	(___flmul@b+2)^(0+1280),7,c
  1457   00257C  EFC8  F012         	goto	l1566
  1458   002580                     l1564:
  1459   002580  0E00               	movlw	0
  1460   002582  6E0F               	movwf	___flmul@b^(0+1280),c
  1461   002584  0E00               	movlw	0
  1462   002586  6E10               	movwf	(___flmul@b+1)^(0+1280),c
  1463   002588  0E00               	movlw	0
  1464   00258A  6E11               	movwf	(___flmul@b+2)^(0+1280),c
  1465   00258C  0E00               	movlw	0
  1466   00258E  6E12               	movwf	(___flmul@b+3)^(0+1280),c
  1467   002590                     l1566:
  1468   002590  5016               	movf	(___flmul@a+3)^(0+1280),w,c
  1469   002592  0B80               	andlw	128
  1470   002594  1A1B               	xorwf	___flmul@sign^(0+1280),f,c
  1471   002596  5016               	movf	(___flmul@a+3)^(0+1280),w,c
  1472   002598  2416               	addwf	(___flmul@a+3)^(0+1280),w,c
  1473   00259A  6E20               	movwf	___flmul@aexp^(0+1280),c
  1474   00259C  AE15               	btfss	(___flmul@a+2)^(0+1280),7,c
  1475   00259E  EFD3  F012         	goto	u711
  1476   0025A2  EFD5  F012         	goto	u710
  1477   0025A6                     u711:
  1478   0025A6  EFD6  F012         	goto	l1574
  1479   0025AA                     u710:
  1480   0025AA  8020               	bsf	___flmul@aexp^(0+1280),0,c
  1481   0025AC                     l1574:
  1482   0025AC  5020               	movf	___flmul@aexp^(0+1280),w,c
  1483   0025AE  B4D8               	btfsc	status,2,c
  1484   0025B0  EFDC  F012         	goto	u721
  1485   0025B4  EFDE  F012         	goto	u720
  1486   0025B8                     u721:
  1487   0025B8  EFF1  F012         	goto	l1582
  1488   0025BC                     u720:
  1489   0025BC  2820               	incf	___flmul@aexp^(0+1280),w,c
  1490   0025BE  A4D8               	btfss	status,2,c
  1491   0025C0  EFE4  F012         	goto	u731
  1492   0025C4  EFE6  F012         	goto	u730
  1493   0025C8                     u731:
  1494   0025C8  EFEE  F012         	goto	l1580
  1495   0025CC                     u730:
  1496   0025CC  0E00               	movlw	0
  1497   0025CE  6E13               	movwf	___flmul@a^(0+1280),c
  1498   0025D0  0E00               	movlw	0
  1499   0025D2  6E14               	movwf	(___flmul@a+1)^(0+1280),c
  1500   0025D4  0E00               	movlw	0
  1501   0025D6  6E15               	movwf	(___flmul@a+2)^(0+1280),c
  1502   0025D8  0E00               	movlw	0
  1503   0025DA  6E16               	movwf	(___flmul@a+3)^(0+1280),c
  1504   0025DC                     l1580:
  1505   0025DC  8E15               	bsf	(___flmul@a+2)^(0+1280),7,c
  1506   0025DE  EFF9  F012         	goto	l827
  1507   0025E2                     l1582:
  1508   0025E2  0E00               	movlw	0
  1509   0025E4  6E13               	movwf	___flmul@a^(0+1280),c
  1510   0025E6  0E00               	movlw	0
  1511   0025E8  6E14               	movwf	(___flmul@a+1)^(0+1280),c
  1512   0025EA  0E00               	movlw	0
  1513   0025EC  6E15               	movwf	(___flmul@a+2)^(0+1280),c
  1514   0025EE  0E00               	movlw	0
  1515   0025F0  6E16               	movwf	(___flmul@a+3)^(0+1280),c
  1516   0025F2                     l827:
  1517   0025F2  5020               	movf	___flmul@aexp^(0+1280),w,c
  1518   0025F4  B4D8               	btfsc	status,2,c
  1519   0025F6  EFFF  F012         	goto	u741
  1520   0025FA  EF01  F013         	goto	u740
  1521   0025FE                     u741:
  1522   0025FE  EF09  F013         	goto	l1586
  1523   002602                     u740:
  1524   002602  5021               	movf	___flmul@bexp^(0+1280),w,c
  1525   002604  A4D8               	btfss	status,2,c
  1526   002606  EF07  F013         	goto	u751
  1527   00260A  EF09  F013         	goto	u750
  1528   00260E                     u751:
  1529   00260E  EF13  F013         	goto	l1590
  1530   002612                     u750:
  1531   002612                     l1586:
  1532   002612  0E00               	movlw	0
  1533   002614  6E0F               	movwf	?___flmul^(0+1280),c
  1534   002616  0E00               	movlw	0
  1535   002618  6E10               	movwf	(?___flmul+1)^(0+1280),c
  1536   00261A  0E00               	movlw	0
  1537   00261C  6E11               	movwf	(?___flmul+2)^(0+1280),c
  1538   00261E  0E00               	movlw	0
  1539   002620  6E12               	movwf	(?___flmul+3)^(0+1280),c
  1540   002622  EFAB  F014         	goto	l831
  1541   002626                     l1590:
  1542   002626  5015               	movf	(___flmul@a+2)^(0+1280),w,c
  1543   002628  020F               	mulwf	___flmul@b^(0+1280),c
  1544   00262A  C4F3 F526          	movff	prodl,___flmul@temp
  1545   00262E  C4F4 F527          	movff	prodh,___flmul@temp+1
  1546   002632  5026               	movf	___flmul@temp^(0+1280),w,c
  1547   002634  6E1C               	movwf	___flmul@grs^(0+1280),c
  1548   002636  6A1D               	clrf	(___flmul@grs+1)^(0+1280),c
  1549   002638  6A1E               	clrf	(___flmul@grs+2)^(0+1280),c
  1550   00263A  6A1F               	clrf	(___flmul@grs+3)^(0+1280),c
  1551   00263C  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1552   00263E  6E22               	movwf	___flmul@prod^(0+1280),c
  1553   002640  6A23               	clrf	(___flmul@prod+1)^(0+1280),c
  1554   002642  6A24               	clrf	(___flmul@prod+2)^(0+1280),c
  1555   002644  6A25               	clrf	(___flmul@prod+3)^(0+1280),c
  1556   002646  5014               	movf	(___flmul@a+1)^(0+1280),w,c
  1557   002648  0210               	mulwf	(___flmul@b+1)^(0+1280),c
  1558   00264A  C4F3 F526          	movff	prodl,___flmul@temp
  1559   00264E  C4F4 F527          	movff	prodh,___flmul@temp+1
  1560   002652  5026               	movf	___flmul@temp^(0+1280),w,c
  1561   002654  261C               	addwf	___flmul@grs^(0+1280),f,c
  1562   002656  0E00               	movlw	0
  1563   002658  221D               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  1564   00265A  221E               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  1565   00265C  221F               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  1566   00265E  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1567   002660  2622               	addwf	___flmul@prod^(0+1280),f,c
  1568   002662  0E00               	movlw	0
  1569   002664  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1570   002666  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1571   002668  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1572   00266A  5013               	movf	___flmul@a^(0+1280),w,c
  1573   00266C  0211               	mulwf	(___flmul@b+2)^(0+1280),c
  1574   00266E  C4F3 F526          	movff	prodl,___flmul@temp
  1575   002672  C4F4 F527          	movff	prodh,___flmul@temp+1
  1576   002676  5026               	movf	___flmul@temp^(0+1280),w,c
  1577   002678  261C               	addwf	___flmul@grs^(0+1280),f,c
  1578   00267A  0E00               	movlw	0
  1579   00267C  221D               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  1580   00267E  221E               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  1581   002680  221F               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  1582   002682  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1583   002684  2622               	addwf	___flmul@prod^(0+1280),f,c
  1584   002686  0E00               	movlw	0
  1585   002688  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1586   00268A  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1587   00268C  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1588   00268E  C51E  F51F         	movff	___flmul@grs+2,___flmul@grs+3
  1589   002692  C51D  F51E         	movff	___flmul@grs+1,___flmul@grs+2
  1590   002696  C51C  F51D         	movff	___flmul@grs,___flmul@grs+1
  1591   00269A  6A1C               	clrf	___flmul@grs^(0+1280),c
  1592   00269C  5013               	movf	___flmul@a^(0+1280),w,c
  1593   00269E  0210               	mulwf	(___flmul@b+1)^(0+1280),c
  1594   0026A0  C4F3 F526          	movff	prodl,___flmul@temp
  1595   0026A4  C4F4 F527          	movff	prodh,___flmul@temp+1
  1596   0026A8  5026               	movf	___flmul@temp^(0+1280),w,c
  1597   0026AA  261C               	addwf	___flmul@grs^(0+1280),f,c
  1598   0026AC  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1599   0026AE  221D               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  1600   0026B0  0E00               	movlw	0
  1601   0026B2  221E               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  1602   0026B4  0E00               	movlw	0
  1603   0026B6  221F               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  1604   0026B8  5014               	movf	(___flmul@a+1)^(0+1280),w,c
  1605   0026BA  020F               	mulwf	___flmul@b^(0+1280),c
  1606   0026BC  C4F3 F526          	movff	prodl,___flmul@temp
  1607   0026C0  C4F4 F527          	movff	prodh,___flmul@temp+1
  1608   0026C4  5026               	movf	___flmul@temp^(0+1280),w,c
  1609   0026C6  261C               	addwf	___flmul@grs^(0+1280),f,c
  1610   0026C8  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1611   0026CA  221D               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  1612   0026CC  0E00               	movlw	0
  1613   0026CE  221E               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  1614   0026D0  0E00               	movlw	0
  1615   0026D2  221F               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  1616   0026D4  C51E  F51F         	movff	___flmul@grs+2,___flmul@grs+3
  1617   0026D8  C51D  F51E         	movff	___flmul@grs+1,___flmul@grs+2
  1618   0026DC  C51C  F51D         	movff	___flmul@grs,___flmul@grs+1
  1619   0026E0  6A1C               	clrf	___flmul@grs^(0+1280),c
  1620   0026E2  5013               	movf	___flmul@a^(0+1280),w,c
  1621   0026E4  020F               	mulwf	___flmul@b^(0+1280),c
  1622   0026E6  C4F3 F526          	movff	prodl,___flmul@temp
  1623   0026EA  C4F4 F527          	movff	prodh,___flmul@temp+1
  1624   0026EE  5026               	movf	___flmul@temp^(0+1280),w,c
  1625   0026F0  261C               	addwf	___flmul@grs^(0+1280),f,c
  1626   0026F2  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1627   0026F4  221D               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  1628   0026F6  0E00               	movlw	0
  1629   0026F8  221E               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  1630   0026FA  0E00               	movlw	0
  1631   0026FC  221F               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  1632   0026FE  5015               	movf	(___flmul@a+2)^(0+1280),w,c
  1633   002700  0210               	mulwf	(___flmul@b+1)^(0+1280),c
  1634   002702  C4F3 F526          	movff	prodl,___flmul@temp
  1635   002706  C4F4 F527          	movff	prodh,___flmul@temp+1
  1636   00270A  5026               	movf	___flmul@temp^(0+1280),w,c
  1637   00270C  2622               	addwf	___flmul@prod^(0+1280),f,c
  1638   00270E  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1639   002710  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1640   002712  0E00               	movlw	0
  1641   002714  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1642   002716  0E00               	movlw	0
  1643   002718  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1644   00271A  5014               	movf	(___flmul@a+1)^(0+1280),w,c
  1645   00271C  0211               	mulwf	(___flmul@b+2)^(0+1280),c
  1646   00271E  C4F3 F526          	movff	prodl,___flmul@temp
  1647   002722  C4F4 F527          	movff	prodh,___flmul@temp+1
  1648   002726  5026               	movf	___flmul@temp^(0+1280),w,c
  1649   002728  2622               	addwf	___flmul@prod^(0+1280),f,c
  1650   00272A  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1651   00272C  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1652   00272E  0E00               	movlw	0
  1653   002730  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1654   002732  0E00               	movlw	0
  1655   002734  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1656   002736  5015               	movf	(___flmul@a+2)^(0+1280),w,c
  1657   002738  0211               	mulwf	(___flmul@b+2)^(0+1280),c
  1658   00273A  C4F3 F526          	movff	prodl,___flmul@temp
  1659   00273E  C4F4 F527          	movff	prodh,___flmul@temp+1
  1660   002742  5026               	movf	___flmul@temp^(0+1280),w,c
  1661   002744  6E17               	movwf	??___flmul^(0+1280),c
  1662   002746  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1663   002748  6E18               	movwf	(??___flmul+1)^(0+1280),c
  1664   00274A  6A19               	clrf	(??___flmul+2)^(0+1280),c
  1665   00274C  6A1A               	clrf	(??___flmul+3)^(0+1280),c
  1666   00274E  C519  F51A         	movff	??___flmul+2,??___flmul+3
  1667   002752  C518  F519         	movff	??___flmul+1,??___flmul+2
  1668   002756  C517  F518         	movff	??___flmul,??___flmul+1
  1669   00275A  6A17               	clrf	??___flmul^(0+1280),c
  1670   00275C  5017               	movf	??___flmul^(0+1280),w,c
  1671   00275E  2622               	addwf	___flmul@prod^(0+1280),f,c
  1672   002760  5018               	movf	(??___flmul+1)^(0+1280),w,c
  1673   002762  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1674   002764  5019               	movf	(??___flmul+2)^(0+1280),w,c
  1675   002766  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1676   002768  501A               	movf	(??___flmul+3)^(0+1280),w,c
  1677   00276A  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1678   00276C  C51C  F517         	movff	___flmul@grs,??___flmul
  1679   002770  C51D  F518         	movff	___flmul@grs+1,??___flmul+1
  1680   002774  C51E  F519         	movff	___flmul@grs+2,??___flmul+2
  1681   002778  C51F  F51A         	movff	___flmul@grs+3,??___flmul+3
  1682   00277C  0E19               	movlw	25
  1683   00277E  EFC6  F013         	goto	u760
  1684   002782                     u765:
  1685   002782  90D8               	bcf	status,0,c
  1686   002784  321A               	rrcf	(??___flmul+3)^(0+1280),f,c
  1687   002786  3219               	rrcf	(??___flmul+2)^(0+1280),f,c
  1688   002788  3218               	rrcf	(??___flmul+1)^(0+1280),f,c
  1689   00278A  3217               	rrcf	??___flmul^(0+1280),f,c
  1690   00278C                     u760:
  1691   00278C  2EE8               	decfsz	wreg,f,c
  1692   00278E  EFC1  F013         	goto	u765
  1693   002792  5017               	movf	??___flmul^(0+1280),w,c
  1694   002794  2622               	addwf	___flmul@prod^(0+1280),f,c
  1695   002796  5018               	movf	(??___flmul+1)^(0+1280),w,c
  1696   002798  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1697   00279A  5019               	movf	(??___flmul+2)^(0+1280),w,c
  1698   00279C  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1699   00279E  501A               	movf	(??___flmul+3)^(0+1280),w,c
  1700   0027A0  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1701   0027A2  C51E  F51F         	movff	___flmul@grs+2,___flmul@grs+3
  1702   0027A6  C51D  F51E         	movff	___flmul@grs+1,___flmul@grs+2
  1703   0027AA  C51C  F51D         	movff	___flmul@grs,___flmul@grs+1
  1704   0027AE  6A1C               	clrf	___flmul@grs^(0+1280),c
  1705   0027B0  5020               	movf	___flmul@aexp^(0+1280),w,c
  1706   0027B2  C521  F517         	movff	___flmul@bexp,??___flmul
  1707   0027B6  6A18               	clrf	(??___flmul+1)^(0+1280),c
  1708   0027B8  2617               	addwf	??___flmul^(0+1280),f,c
  1709   0027BA  0E00               	movlw	0
  1710   0027BC  2218               	addwfc	(??___flmul+1)^(0+1280),f,c
  1711   0027BE  0E82               	movlw	130
  1712   0027C0  2417               	addwf	??___flmul^(0+1280),w,c
  1713   0027C2  6E26               	movwf	___flmul@temp^(0+1280),c
  1714   0027C4  0EFF               	movlw	255
  1715   0027C6  2018               	addwfc	(??___flmul+1)^(0+1280),w,c
  1716   0027C8  6E27               	movwf	(___flmul@temp+1)^(0+1280),c
  1717   0027CA  EFFC  F013         	goto	l1638
  1718   0027CE                     l1632:
  1719   0027CE  90D8               	bcf	status,0,c
  1720   0027D0  3622               	rlcf	___flmul@prod^(0+1280),f,c
  1721   0027D2  3623               	rlcf	(___flmul@prod+1)^(0+1280),f,c
  1722   0027D4  3624               	rlcf	(___flmul@prod+2)^(0+1280),f,c
  1723   0027D6  3625               	rlcf	(___flmul@prod+3)^(0+1280),f,c
  1724   0027D8  AE1F               	btfss	(___flmul@grs+3)^(0+1280),7,c
  1725   0027DA  EFF1  F013         	goto	u771
  1726   0027DE  EFF3  F013         	goto	u770
  1727   0027E2                     u771:
  1728   0027E2  EFF4  F013         	goto	l834
  1729   0027E6                     u770:
  1730   0027E6  8022               	bsf	___flmul@prod^(0+1280),0,c
  1731   0027E8                     l834:
  1732   0027E8  90D8               	bcf	status,0,c
  1733   0027EA  361C               	rlcf	___flmul@grs^(0+1280),f,c
  1734   0027EC  361D               	rlcf	(___flmul@grs+1)^(0+1280),f,c
  1735   0027EE  361E               	rlcf	(___flmul@grs+2)^(0+1280),f,c
  1736   0027F0  361F               	rlcf	(___flmul@grs+3)^(0+1280),f,c
  1737   0027F2  0626               	decf	___flmul@temp^(0+1280),f,c
  1738   0027F4  A0D8               	btfss	status,0,c
  1739   0027F6  0627               	decf	(___flmul@temp+1)^(0+1280),f,c
  1740   0027F8                     l1638:
  1741   0027F8  AE24               	btfss	(___flmul@prod+2)^(0+1280),7,c
  1742   0027FA  EF01  F014         	goto	u781
  1743   0027FE  EF03  F014         	goto	u780
  1744   002802                     u781:
  1745   002802  EFE7  F013         	goto	l1632
  1746   002806                     u780:
  1747   002806  0E00               	movlw	0
  1748   002808  6E20               	movwf	___flmul@aexp^(0+1280),c
  1749   00280A  AE1F               	btfss	(___flmul@grs+3)^(0+1280),7,c
  1750   00280C  EF0A  F014         	goto	u791
  1751   002810  EF0C  F014         	goto	u790
  1752   002814                     u791:
  1753   002814  EF30  F014         	goto	l836
  1754   002818                     u790:
  1755   002818  0EFF               	movlw	255
  1756   00281A  141C               	andwf	___flmul@grs^(0+1280),w,c
  1757   00281C  6E17               	movwf	??___flmul^(0+1280),c
  1758   00281E  0EFF               	movlw	255
  1759   002820  141D               	andwf	(___flmul@grs+1)^(0+1280),w,c
  1760   002822  6E18               	movwf	(??___flmul+1)^(0+1280),c
  1761   002824  0EFF               	movlw	255
  1762   002826  141E               	andwf	(___flmul@grs+2)^(0+1280),w,c
  1763   002828  6E19               	movwf	(??___flmul+2)^(0+1280),c
  1764   00282A  0E7F               	movlw	127
  1765   00282C  141F               	andwf	(___flmul@grs+3)^(0+1280),w,c
  1766   00282E  6E1A               	movwf	(??___flmul+3)^(0+1280),c
  1767   002830  5017               	movf	??___flmul^(0+1280),w,c
  1768   002832  1018               	iorwf	(??___flmul+1)^(0+1280),w,c
  1769   002834  1019               	iorwf	(??___flmul+2)^(0+1280),w,c
  1770   002836  101A               	iorwf	(??___flmul+3)^(0+1280),w,c
  1771   002838  B4D8               	btfsc	status,2,c
  1772   00283A  EF21  F014         	goto	u801
  1773   00283E  EF23  F014         	goto	u800
  1774   002842                     u801:
  1775   002842  EF27  F014         	goto	l837
  1776   002846                     u800:
  1777   002846                     l1646:
  1778   002846  0E01               	movlw	1
  1779   002848  6E20               	movwf	___flmul@aexp^(0+1280),c
  1780   00284A  EF30  F014         	goto	l836
  1781   00284E                     l837:
  1782   00284E  A022               	btfss	___flmul@prod^(0+1280),0,c
  1783   002850  EF2C  F014         	goto	u811
  1784   002854  EF2E  F014         	goto	u810
  1785   002858                     u811:
  1786   002858  EF30  F014         	goto	l836
  1787   00285C                     u810:
  1788   00285C  EF23  F014         	goto	l1646
  1789   002860                     l836:
  1790   002860  5020               	movf	___flmul@aexp^(0+1280),w,c
  1791   002862  B4D8               	btfsc	status,2,c
  1792   002864  EF36  F014         	goto	u821
  1793   002868  EF38  F014         	goto	u820
  1794   00286C                     u821:
  1795   00286C  EF5C  F014         	goto	l1658
  1796   002870                     u820:
  1797   002870  0E01               	movlw	1
  1798   002872  2622               	addwf	___flmul@prod^(0+1280),f,c
  1799   002874  0E00               	movlw	0
  1800   002876  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1801   002878  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1802   00287A  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1803   00287C  A025               	btfss	(___flmul@prod+3)^(0+1280),0,c
  1804   00287E  EF43  F014         	goto	u831
  1805   002882  EF45  F014         	goto	u830
  1806   002886                     u831:
  1807   002886  EF5C  F014         	goto	l1658
  1808   00288A                     u830:
  1809   00288A  C522  F517         	movff	___flmul@prod,??___flmul
  1810   00288E  C523  F518         	movff	___flmul@prod+1,??___flmul+1
  1811   002892  C524  F519         	movff	___flmul@prod+2,??___flmul+2
  1812   002896  C525  F51A         	movff	___flmul@prod+3,??___flmul+3
  1813   00289A  341A               	rlcf	(??___flmul+3)^(0+1280),w,c
  1814   00289C  321A               	rrcf	(??___flmul+3)^(0+1280),f,c
  1815   00289E  3219               	rrcf	(??___flmul+2)^(0+1280),f,c
  1816   0028A0  3218               	rrcf	(??___flmul+1)^(0+1280),f,c
  1817   0028A2  3217               	rrcf	??___flmul^(0+1280),f,c
  1818   0028A4  C517  F522         	movff	??___flmul,___flmul@prod
  1819   0028A8  C518  F523         	movff	??___flmul+1,___flmul@prod+1
  1820   0028AC  C519  F524         	movff	??___flmul+2,___flmul@prod+2
  1821   0028B0  C51A  F525         	movff	??___flmul+3,___flmul@prod+3
  1822   0028B4  4A26               	infsnz	___flmul@temp^(0+1280),f,c
  1823   0028B6  2A27               	incf	(___flmul@temp+1)^(0+1280),f,c
  1824   0028B8                     l1658:
  1825   0028B8  BE27               	btfsc	(___flmul@temp+1)^(0+1280),7,c
  1826   0028BA  EF67  F014         	goto	u841
  1827   0028BE  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1828   0028C0  E108               	bnz	u840
  1829   0028C2  2826               	incf	___flmul@temp^(0+1280),w,c
  1830   0028C4  A0D8               	btfss	status,0,c
  1831   0028C6  EF67  F014         	goto	u841
  1832   0028CA  EF69  F014         	goto	u840
  1833   0028CE                     u841:
  1834   0028CE  EF73  F014         	goto	l1662
  1835   0028D2                     u840:
  1836   0028D2  0E00               	movlw	0
  1837   0028D4  6E22               	movwf	___flmul@prod^(0+1280),c
  1838   0028D6  0E00               	movlw	0
  1839   0028D8  6E23               	movwf	(___flmul@prod+1)^(0+1280),c
  1840   0028DA  0E80               	movlw	128
  1841   0028DC  6E24               	movwf	(___flmul@prod+2)^(0+1280),c
  1842   0028DE  0E7F               	movlw	127
  1843   0028E0  6E25               	movwf	(___flmul@prod+3)^(0+1280),c
  1844   0028E2  EFA1  F014         	goto	l1674
  1845   0028E6                     l1662:
  1846   0028E6  BE27               	btfsc	(___flmul@temp+1)^(0+1280),7,c
  1847   0028E8  EF80  F014         	goto	u850
  1848   0028EC  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1849   0028EE  E106               	bnz	u851
  1850   0028F0  0426               	decf	___flmul@temp^(0+1280),w,c
  1851   0028F2  B0D8               	btfsc	status,0,c
  1852   0028F4  EF7E  F014         	goto	u851
  1853   0028F8  EF80  F014         	goto	u850
  1854   0028FC                     u851:
  1855   0028FC  EF8C  F014         	goto	l844
  1856   002900                     u850:
  1857   002900  0E00               	movlw	0
  1858   002902  6E22               	movwf	___flmul@prod^(0+1280),c
  1859   002904  0E00               	movlw	0
  1860   002906  6E23               	movwf	(___flmul@prod+1)^(0+1280),c
  1861   002908  0E00               	movlw	0
  1862   00290A  6E24               	movwf	(___flmul@prod+2)^(0+1280),c
  1863   00290C  0E00               	movlw	0
  1864   00290E  6E25               	movwf	(___flmul@prod+3)^(0+1280),c
  1865   002910  0E00               	movlw	0
  1866   002912  6E1B               	movwf	___flmul@sign^(0+1280),c
  1867   002914  EFA1  F014         	goto	l1674
  1868   002918                     l844:
  1869   002918  C526  F521         	movff	___flmul@temp,___flmul@bexp
  1870   00291C  0EFF               	movlw	255
  1871   00291E  1622               	andwf	___flmul@prod^(0+1280),f,c
  1872   002920  0EFF               	movlw	255
  1873   002922  1623               	andwf	(___flmul@prod+1)^(0+1280),f,c
  1874   002924  0E7F               	movlw	127
  1875   002926  1624               	andwf	(___flmul@prod+2)^(0+1280),f,c
  1876   002928  0E00               	movlw	0
  1877   00292A  1625               	andwf	(___flmul@prod+3)^(0+1280),f,c
  1878   00292C  A021               	btfss	___flmul@bexp^(0+1280),0,c
  1879   00292E  EF9B  F014         	goto	u861
  1880   002932  EF9D  F014         	goto	u860
  1881   002936                     u861:
  1882   002936  EF9E  F014         	goto	l1672
  1883   00293A                     u860:
  1884   00293A  8E24               	bsf	(___flmul@prod+2)^(0+1280),7,c
  1885   00293C                     l1672:
  1886   00293C  90D8               	bcf	status,0,c
  1887   00293E  3021               	rrcf	___flmul@bexp^(0+1280),w,c
  1888   002940  6E25               	movwf	(___flmul@prod+3)^(0+1280),c
  1889   002942                     l1674:
  1890   002942  501B               	movf	___flmul@sign^(0+1280),w,c
  1891   002944  1225               	iorwf	(___flmul@prod+3)^(0+1280),f,c
  1892   002946  C522  F50F         	movff	___flmul@prod,?___flmul
  1893   00294A  C523  F510         	movff	___flmul@prod+1,?___flmul+1
  1894   00294E  C524  F511         	movff	___flmul@prod+2,?___flmul+2
  1895   002952  C525  F512         	movff	___flmul@prod+3,?___flmul+3
  1896   002956                     l831:
  1897   002956  0012               	return		;funcret
  1898   002958                     __end_of___flmul:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function _POS_CURSOR *****************
  1902 ;; Defined at:
  1903 ;;		line 9 in file "LCD.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  fila            1    wreg     unsigned char 
  1906 ;;  columna         1    3[COMRAM] unsigned char 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;  fila            1    4[COMRAM] unsigned char 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg, status,2, status,0, cstack
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1918 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1921 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1922 ;;Total ram usage:        2 bytes
  1923 ;; Hardware stack levels used: 1
  1924 ;; Hardware stack levels required when called: 2
  1925 ;; This function calls:
  1926 ;;		_ENVIA_LCD_CMD
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text8
  1933   002E92                     __ptext8:
  1934                           	callstack 0
  1935   002E92                     _POS_CURSOR:
  1936                           	callstack 124
  1937                           
  1938                           ;incstack = 0
  1939                           ;POS_CURSOR@fila stored from wreg
  1940   002E92  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  1941   002E94                     
  1942                           ;LCD.c: 10:  if(fila == 1){
  1943   002E94  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  1944   002E96  A4D8               	btfss	status,2,c
  1945   002E98  EF50  F017         	goto	u631
  1946   002E9C  EF52  F017         	goto	u630
  1947   002EA0                     u631:
  1948   002EA0  EF58  F017         	goto	l1530
  1949   002EA4                     u630:
  1950   002EA4                     
  1951                           ;LCD.c: 11:   ENVIA_LCD_CMD(0x80+columna);
  1952   002EA4  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1953   002EA6  0F80               	addlw	128
  1954   002EA8  EC7C  F018         	call	_ENVIA_LCD_CMD
  1955                           
  1956                           ;LCD.c: 12:  }
  1957   002EAC  EF85  F017         	goto	l79
  1958   002EB0                     l1530:
  1959   002EB0  0E02               	movlw	2
  1960   002EB2  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1961   002EB4  A4D8               	btfss	status,2,c
  1962   002EB6  EF5F  F017         	goto	u641
  1963   002EBA  EF61  F017         	goto	u640
  1964   002EBE                     u641:
  1965   002EBE  EF67  F017         	goto	l1534
  1966   002EC2                     u640:
  1967   002EC2                     
  1968                           ;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1969   002EC2  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1970   002EC4  0FC0               	addlw	192
  1971   002EC6  EC7C  F018         	call	_ENVIA_LCD_CMD
  1972                           
  1973                           ;LCD.c: 15:  }
  1974   002ECA  EF85  F017         	goto	l79
  1975   002ECE                     l1534:
  1976   002ECE  0E03               	movlw	3
  1977   002ED0  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1978   002ED2  A4D8               	btfss	status,2,c
  1979   002ED4  EF6E  F017         	goto	u651
  1980   002ED8  EF70  F017         	goto	u650
  1981   002EDC                     u651:
  1982   002EDC  EF76  F017         	goto	l1538
  1983   002EE0                     u650:
  1984   002EE0                     
  1985                           ;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
  1986   002EE0  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1987   002EE2  0F94               	addlw	148
  1988   002EE4  EC7C  F018         	call	_ENVIA_LCD_CMD
  1989                           
  1990                           ;LCD.c: 18:  }
  1991   002EE8  EF85  F017         	goto	l79
  1992   002EEC                     l1538:
  1993   002EEC  0E04               	movlw	4
  1994   002EEE  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1995   002EF0  A4D8               	btfss	status,2,c
  1996   002EF2  EF7D  F017         	goto	u661
  1997   002EF6  EF7F  F017         	goto	u660
  1998   002EFA                     u661:
  1999   002EFA  EF85  F017         	goto	l75
  2000   002EFE                     u660:
  2001   002EFE                     
  2002                           ;LCD.c: 20:   ENVIA_LCD_CMD(0xD4+columna);
  2003   002EFE  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2004   002F00  0FD4               	addlw	212
  2005   002F02  EC7C  F018         	call	_ENVIA_LCD_CMD
  2006   002F06  EF85  F017         	goto	l79
  2007   002F0A                     l75:
  2008   002F0A                     l79:
  2009   002F0A  0012               	return		;funcret
  2010   002F0C                     __end_of_POS_CURSOR:
  2011                           	callstack 0
  2012                           
  2013 ;; *************** function _LCD_INIT *****************
  2014 ;; Defined at:
  2015 ;;		line 171 in file "LCD.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;		None
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      void 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2031 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2032 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2033 ;;Total ram usage:        2 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; Hardware stack levels required when called: 3
  2036 ;; This function calls:
  2037 ;;		_BORRAR_LCD
  2038 ;;		_CURSOR_HOME
  2039 ;;		_CURSOR_ONOFF
  2040 ;;		_LCD_CONFIG
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text9
  2047   002FE4                     __ptext9:
  2048                           	callstack 0
  2049   002FE4                     _LCD_INIT:
  2050                           	callstack 123
  2051   002FE4                     
  2052                           ;LCD.c: 172:     _delay((unsigned long)((500)*(32000000UL/4000.0)));
  2053   002FE4  0E15               	movlw	21
  2054   002FE6  6E06               	movwf	(??_LCD_INIT+1)^(0+1280),c
  2055   002FE8  0E4B               	movlw	75
  2056   002FEA  6E05               	movwf	??_LCD_INIT^(0+1280),c
  2057   002FEC  0EBE               	movlw	190
  2058   002FEE                     u1147:
  2059   002FEE  2EE8               	decfsz	wreg,f,c
  2060   002FF0  D7FE               	bra	u1147
  2061   002FF2  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  2062   002FF4  D7FC               	bra	u1147
  2063   002FF6  2E06               	decfsz	(??_LCD_INIT+1)^(0+1280),f,c
  2064   002FF8  D7FA               	bra	u1147
  2065   002FFA  D000               	nop2	
  2066   002FFC                     
  2067                           ;LCD.c: 173:     TRISD = 0x00;
  2068   002FFC  0E00               	movlw	0
  2069   002FFE  6EC9               	movwf	201,c	;volatile
  2070   003000                     
  2071                           ;LCD.c: 174:     ANSELD = 0x00;
  2072   003000  0E00               	movlw	0
  2073   003002  0104               	movlb	4	; () banked
  2074   003004  6F18               	movwf	24,b	;volatile
  2075                           
  2076                           ;LCD.c: 175:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  2077   003006  0E9C               	movlw	156
  2078   003008  6E05               	movwf	??_LCD_INIT^(0+1280),c
  2079   00300A  0ED7               	movlw	215
  2080   00300C                     u1157:
  2081   00300C  2EE8               	decfsz	wreg,f,c
  2082   00300E  D7FE               	bra	u1157
  2083   003010  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  2084   003012  D7FC               	bra	u1157
  2085   003014  0000               	nop	
  2086   003016                     
  2087                           ;LCD.c: 176:     LCD_CONFIG();
  2088   003016  EC1D  F018         	call	_LCD_CONFIG	;wreg free
  2089   00301A                     
  2090                           ;LCD.c: 177:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  2091   00301A  0E9C               	movlw	156
  2092   00301C  6E05               	movwf	??_LCD_INIT^(0+1280),c
  2093   00301E  0ED7               	movlw	215
  2094   003020                     u1167:
  2095   003020  2EE8               	decfsz	wreg,f,c
  2096   003022  D7FE               	bra	u1167
  2097   003024  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  2098   003026  D7FC               	bra	u1167
  2099   003028  0000               	nop	
  2100                           
  2101                           ;LCD.c: 178:     BORRAR_LCD();
  2102   00302A  ECD4  F018         	call	_BORRAR_LCD	;wreg free
  2103                           
  2104                           ;LCD.c: 179:     CURSOR_HOME();
  2105   00302E  ECD0  F018         	call	_CURSOR_HOME	;wreg free
  2106                           
  2107                           ;LCD.c: 180:     CURSOR_ONOFF(1);
  2108   003032  0E01               	movlw	1
  2109   003034  EC64  F018         	call	_CURSOR_ONOFF
  2110   003038  0012               	return		;funcret
  2111   00303A                     __end_of_LCD_INIT:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function _LCD_CONFIG *****************
  2115 ;; Defined at:
  2116 ;;		line 94 in file "LCD.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2, status,0, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2134 ;;Total ram usage:        1 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; Hardware stack levels required when called: 2
  2137 ;; This function calls:
  2138 ;;		_ENVIA_LCD_CMD
  2139 ;;		_ENVIA_NIBBLE
  2140 ;; This function is called by:
  2141 ;;		_LCD_INIT
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text10
  2146   00303A                     __ptext10:
  2147                           	callstack 0
  2148   00303A                     _LCD_CONFIG:
  2149                           	callstack 123
  2150   00303A                     
  2151                           ;LCD.c: 95:  LATDbits.LATD0 = 0;
  2152   00303A  90C1               	bcf	193,0,c	;volatile
  2153                           
  2154                           ;LCD.c: 96:  LATDbits.LATD1 = 0;
  2155   00303C  92C1               	bcf	193,1,c	;volatile
  2156   00303E                     
  2157                           ;LCD.c: 97:  ENVIA_NIBBLE(0x30);
  2158   00303E  0E30               	movlw	48
  2159   003040  ECB6  F018         	call	_ENVIA_NIBBLE
  2160   003044                     
  2161                           ;LCD.c: 98:     _delay((unsigned long)((4)*(32000000UL/4000.0)));
  2162   003044  0E2A               	movlw	42
  2163   003046  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2164   003048  0E8E               	movlw	142
  2165   00304A                     u1177:
  2166   00304A  2EE8               	decfsz	wreg,f,c
  2167   00304C  D7FE               	bra	u1177
  2168   00304E  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2169   003050  D7FC               	bra	u1177
  2170   003052                     
  2171                           ;LCD.c: 99:  ENVIA_NIBBLE(0x30);
  2172   003052  0E30               	movlw	48
  2173   003054  ECB6  F018         	call	_ENVIA_NIBBLE
  2174                           
  2175                           ;LCD.c: 100:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2176   003058  0EA0               	movlw	160
  2177   00305A                     u1187:
  2178   00305A  D000               	nop2	
  2179   00305C  2EE8               	decfsz	wreg,f,c
  2180   00305E  D7FD               	bra	u1187
  2181   003060                     
  2182                           ;LCD.c: 101:     ENVIA_NIBBLE(0x30);
  2183   003060  0E30               	movlw	48
  2184   003062  ECB6  F018         	call	_ENVIA_NIBBLE
  2185   003066                     
  2186                           ;LCD.c: 102:  ENVIA_NIBBLE(0x20);
  2187   003066  0E20               	movlw	32
  2188   003068  ECB6  F018         	call	_ENVIA_NIBBLE
  2189   00306C                     
  2190                           ;LCD.c: 103:  ENVIA_LCD_CMD(0x01);
  2191   00306C  0E01               	movlw	1
  2192   00306E  EC7C  F018         	call	_ENVIA_LCD_CMD
  2193   003072                     
  2194                           ;LCD.c: 104:  ENVIA_LCD_CMD(0x28);
  2195   003072  0E28               	movlw	40
  2196   003074  EC7C  F018         	call	_ENVIA_LCD_CMD
  2197   003078                     
  2198                           ;LCD.c: 105:  ENVIA_LCD_CMD(0x0F);
  2199   003078  0E0F               	movlw	15
  2200   00307A  EC7C  F018         	call	_ENVIA_LCD_CMD
  2201   00307E                     
  2202                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x06);
  2203   00307E  0E06               	movlw	6
  2204   003080  EC7C  F018         	call	_ENVIA_LCD_CMD
  2205   003084                     
  2206                           ;LCD.c: 107:  ENVIA_LCD_CMD(0x01);
  2207   003084  0E01               	movlw	1
  2208   003086  EC7C  F018         	call	_ENVIA_LCD_CMD
  2209   00308A  0012               	return		;funcret
  2210   00308C                     __end_of_LCD_CONFIG:
  2211                           	callstack 0
  2212                           
  2213 ;; *************** function _CURSOR_ONOFF *****************
  2214 ;; Defined at:
  2215 ;;		line 54 in file "LCD.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  estado          1    wreg     unsigned char 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  estado          1    3[COMRAM] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2233 ;;Total ram usage:        1 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 2
  2236 ;; This function calls:
  2237 ;;		_ENVIA_LCD_CMD
  2238 ;; This function is called by:
  2239 ;;		_LCD_INIT
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text11
  2244   0030C8                     __ptext11:
  2245                           	callstack 0
  2246   0030C8                     _CURSOR_ONOFF:
  2247                           	callstack 123
  2248                           
  2249                           ;incstack = 0
  2250                           ;CURSOR_ONOFF@estado stored from wreg
  2251   0030C8  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  2252   0030CA                     
  2253                           ;LCD.c: 55:  if(estado == 0) ENVIA_LCD_CMD(0x0E);
  2254   0030CA  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  2255   0030CC  A4D8               	btfss	status,2,c
  2256   0030CE  EF6B  F018         	goto	u11
  2257   0030D2  EF6D  F018         	goto	u10
  2258   0030D6                     u11:
  2259   0030D6  EF70  F018         	goto	l944
  2260   0030DA                     u10:
  2261   0030DA  0E0E               	movlw	14
  2262   0030DC  EC7C  F018         	call	_ENVIA_LCD_CMD
  2263   0030E0                     l944:
  2264                           
  2265                           ;LCD.c: 56:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2266   0030E0  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  2267   0030E2  A4D8               	btfss	status,2,c
  2268   0030E4  EF76  F018         	goto	u21
  2269   0030E8  EF78  F018         	goto	u20
  2270   0030EC                     u21:
  2271   0030EC  EF7B  F018         	goto	l109
  2272   0030F0                     u20:
  2273   0030F0  0E0C               	movlw	12
  2274   0030F2  EC7C  F018         	call	_ENVIA_LCD_CMD
  2275   0030F6                     l109:
  2276   0030F6  0012               	return		;funcret
  2277   0030F8                     __end_of_CURSOR_ONOFF:
  2278                           	callstack 0
  2279                           
  2280 ;; *************** function _CURSOR_HOME *****************
  2281 ;; Defined at:
  2282 ;;		line 34 in file "LCD.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;		None
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, status,2, status,0, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2300 ;;Total ram usage:        0 bytes
  2301 ;; Hardware stack levels used: 1
  2302 ;; Hardware stack levels required when called: 2
  2303 ;; This function calls:
  2304 ;;		_ENVIA_LCD_CMD
  2305 ;; This function is called by:
  2306 ;;		_LCD_INIT
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text12
  2311   0031A0                     __ptext12:
  2312                           	callstack 0
  2313   0031A0                     _CURSOR_HOME:
  2314                           	callstack 123
  2315   0031A0                     
  2316                           ;LCD.c: 35:  ENVIA_LCD_CMD(0x02);
  2317   0031A0  0E02               	movlw	2
  2318   0031A2  EC7C  F018         	call	_ENVIA_LCD_CMD
  2319   0031A6  0012               	return		;funcret
  2320   0031A8                     __end_of_CURSOR_HOME:
  2321                           	callstack 0
  2322                           
  2323 ;; *************** function _BORRAR_LCD *****************
  2324 ;; Defined at:
  2325 ;;		line 90 in file "LCD.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 2
  2346 ;; This function calls:
  2347 ;;		_ENVIA_LCD_CMD
  2348 ;; This function is called by:
  2349 ;;		_main
  2350 ;;		_LCD_INIT
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text13
  2355   0031A8                     __ptext13:
  2356                           	callstack 0
  2357   0031A8                     _BORRAR_LCD:
  2358                           	callstack 123
  2359   0031A8                     
  2360                           ;LCD.c: 91:  ENVIA_LCD_CMD(0x01);
  2361   0031A8  0E01               	movlw	1
  2362   0031AA  EC7C  F018         	call	_ENVIA_LCD_CMD
  2363   0031AE  0012               	return		;funcret
  2364   0031B0                     __end_of_BORRAR_LCD:
  2365                           	callstack 0
  2366                           
  2367 ;; *************** function _ENVIA_LCD_CMD *****************
  2368 ;; Defined at:
  2369 ;;		line 119 in file "LCD.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  dato            1    wreg     unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  dato            1    1[COMRAM] unsigned char 
  2374 ;;  aux             1    2[COMRAM] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2388 ;;Total ram usage:        2 bytes
  2389 ;; Hardware stack levels used: 1
  2390 ;; Hardware stack levels required when called: 1
  2391 ;; This function calls:
  2392 ;;		_ENVIA_NIBBLE
  2393 ;; This function is called by:
  2394 ;;		_POS_CURSOR
  2395 ;;		_CURSOR_HOME
  2396 ;;		_CURSOR_ONOFF
  2397 ;;		_BORRAR_LCD
  2398 ;;		_LCD_CONFIG
  2399 ;;		_BLINK_CURSOR
  2400 ;;		_DISPLAY_ONOFF
  2401 ;;		_CURSOR_SHIFTLEFT
  2402 ;;		_CURSOR_SHIFTRIGHT
  2403 ;;		_DISPLAY_SHIFTLEFT
  2404 ;;		_DISPLAY_SHIFTRIGHT
  2405 ;;		_GENERACARACTER
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text14
  2410   0030F8                     __ptext14:
  2411                           	callstack 0
  2412   0030F8                     _ENVIA_LCD_CMD:
  2413                           	callstack 124
  2414                           
  2415                           ;incstack = 0
  2416                           ;ENVIA_LCD_CMD@dato stored from wreg
  2417   0030F8  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  2418   0030FA                     
  2419                           ;LCD.c: 120:     unsigned char aux;;LCD.c: 121:   LATDbits.LATD0 = 0;
  2420   0030FA  90C1               	bcf	193,0,c	;volatile
  2421   0030FC                     
  2422                           ;LCD.c: 124:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2423   0030FC  0EA0               	movlw	160
  2424   0030FE                     u1197:
  2425   0030FE  D000               	nop2	
  2426   003100  2EE8               	decfsz	wreg,f,c
  2427   003102  D7FD               	bra	u1197
  2428   003104                     
  2429                           ;LCD.c: 125:     LATDbits.LATD1 = 0;
  2430   003104  92C1               	bcf	193,1,c	;volatile
  2431   003106                     
  2432                           ;LCD.c: 126:  LATDbits.LATD2 = 0;
  2433   003106  94C1               	bcf	193,2,c	;volatile
  2434   003108                     
  2435                           ;LCD.c: 127:  LATDbits.LATD0 = 0;
  2436   003108  90C1               	bcf	193,0,c	;volatile
  2437   00310A                     
  2438                           ;LCD.c: 128:  aux = dato & 0xF0;
  2439   00310A  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2440   00310C  0BF0               	andlw	240
  2441   00310E  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2442   003110                     
  2443                           ;LCD.c: 129:  ENVIA_NIBBLE(aux);
  2444   003110  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2445   003112  ECB6  F018         	call	_ENVIA_NIBBLE
  2446   003116                     
  2447                           ;LCD.c: 130:  aux = dato<<4;
  2448   003116  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2449   003118  0BF0               	andlw	240
  2450   00311A  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2451   00311C                     
  2452                           ;LCD.c: 131:  ENVIA_NIBBLE(aux);
  2453   00311C  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2454   00311E  ECB6  F018         	call	_ENVIA_NIBBLE
  2455   003122  0012               	return		;funcret
  2456   003124                     __end_of_ENVIA_LCD_CMD:
  2457                           	callstack 0
  2458                           
  2459 ;; *************** function _ESCRIBE_MENSAJE *****************
  2460 ;; Defined at:
  2461 ;;		line 59 in file "LCD.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2464 ;;		 -> STR_3(14), STR_2(14), STR_1(15), 
  2465 ;;  tam             1    4[COMRAM] unsigned char 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  i               1    6[COMRAM] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2478 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2480 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2481 ;;Total ram usage:        4 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 2
  2484 ;; This function calls:
  2485 ;;		_ENVIA_CHAR
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text15
  2492   00308C                     __ptext15:
  2493                           	callstack 0
  2494   00308C                     _ESCRIBE_MENSAJE:
  2495                           	callstack 124
  2496   00308C                     
  2497                           ;LCD.c: 60:  unsigned char i = 0;
  2498   00308C  0E00               	movlw	0
  2499   00308E  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  2500                           
  2501                           ;LCD.c: 61:  for(i = 0; i<tam; i++) {
  2502   003090  0E00               	movlw	0
  2503   003092  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  2504   003094  EF5A  F018         	goto	l1548
  2505   003098                     l1544:
  2506                           
  2507                           ;LCD.c: 62:   ENVIA_CHAR(cadena[i]);
  2508   003098  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  2509   00309A  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2510   00309C  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  2511   00309E  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2512   0030A2                     	if	1	;There is more than 1 active tblptr byte
  2513   0030A2  0E25               	movlw	high __smallconst
  2514   0030A4  6EF7               	movwf	tblptrh,c
  2515   0030A6                     	endif
  2516   0030A6                     	if	0	;tblptru may be non-zero
  2517   0030A6                     	endif
  2518   0030A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2519   0030A6  0E00               	movlw	low (__smallconst shr (0+16))
  2520   0030A8  6EF8               	movwf	tblptru,c
  2521   0030AA                     	endif
  2522   0030AA  0008               	tblrd		*
  2523   0030AC  50F5               	movf	tablat,w,c
  2524   0030AE  EC92  F018         	call	_ENVIA_CHAR
  2525   0030B2                     
  2526                           ;LCD.c: 63:  }
  2527   0030B2  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  2528   0030B4                     l1548:
  2529   0030B4  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  2530   0030B6  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2531   0030B8  A0D8               	btfss	status,0,c
  2532   0030BA  EF61  F018         	goto	u671
  2533   0030BE  EF63  F018         	goto	u670
  2534   0030C2                     u671:
  2535   0030C2  EF4C  F018         	goto	l1544
  2536   0030C6                     u670:
  2537   0030C6  0012               	return		;funcret
  2538   0030C8                     __end_of_ESCRIBE_MENSAJE:
  2539                           	callstack 0
  2540                           
  2541 ;; *************** function _ENVIA_CHAR *****************
  2542 ;; Defined at:
  2543 ;;		line 75 in file "LCD.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  dato            1    wreg     unsigned char 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  dato            1    1[COMRAM] unsigned char 
  2548 ;;  aux             1    2[COMRAM] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2559 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2561 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2562 ;;Total ram usage:        2 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 1
  2565 ;; This function calls:
  2566 ;;		_ENVIA_NIBBLE
  2567 ;; This function is called by:
  2568 ;;		_main
  2569 ;;		_ESCRIBE_MENSAJE
  2570 ;;		_ESCRIBE_MENSAJE2
  2571 ;;		_GENERACARACTER
  2572 ;;		_LCD_ESCRIBE_VAR_CHAR
  2573 ;;		_LCD_ESCRIBE_VAR_INT
  2574 ;;		_LCD_CHAR_GRADO
  2575 ;;		_LCD_VARCHAR_BITS
  2576 ;;		_LCD_VARCHAR_HEX
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text16
  2581   003124                     __ptext16:
  2582                           	callstack 0
  2583   003124                     _ENVIA_CHAR:
  2584                           	callstack 124
  2585                           
  2586                           ;incstack = 0
  2587                           ;ENVIA_CHAR@dato stored from wreg
  2588   003124  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2589   003126                     
  2590                           ;LCD.c: 76:  unsigned char aux;;LCD.c: 77:  LATDbits.LATD0 = 1;
  2591   003126  80C1               	bsf	193,0,c	;volatile
  2592   003128                     
  2593                           ;LCD.c: 80:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2594   003128  0EA0               	movlw	160
  2595   00312A                     u1207:
  2596   00312A  D000               	nop2	
  2597   00312C  2EE8               	decfsz	wreg,f,c
  2598   00312E  D7FD               	bra	u1207
  2599   003130                     
  2600                           ;LCD.c: 81:  LATDbits.LATD1 = 0;
  2601   003130  92C1               	bcf	193,1,c	;volatile
  2602   003132                     
  2603                           ;LCD.c: 82:  LATDbits.LATD2 = 0;
  2604   003132  94C1               	bcf	193,2,c	;volatile
  2605   003134                     
  2606                           ;LCD.c: 83:  LATDbits.LATD0 = 1;
  2607   003134  80C1               	bsf	193,0,c	;volatile
  2608   003136                     
  2609                           ;LCD.c: 84:  aux = dato & 0xF0;
  2610   003136  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2611   003138  0BF0               	andlw	240
  2612   00313A  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2613   00313C                     
  2614                           ;LCD.c: 85:  ENVIA_NIBBLE(aux);
  2615   00313C  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2616   00313E  ECB6  F018         	call	_ENVIA_NIBBLE
  2617   003142                     
  2618                           ;LCD.c: 86:  aux = dato << 4;
  2619   003142  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2620   003144  0BF0               	andlw	240
  2621   003146  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2622   003148                     
  2623                           ;LCD.c: 87:  ENVIA_NIBBLE(aux);
  2624   003148  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2625   00314A  ECB6  F018         	call	_ENVIA_NIBBLE
  2626   00314E  0012               	return		;funcret
  2627   003150                     __end_of_ENVIA_CHAR:
  2628                           	callstack 0
  2629                           
  2630 ;; *************** function _ENVIA_NIBBLE *****************
  2631 ;; Defined at:
  2632 ;;		line 110 in file "LCD.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  dato            1    wreg     unsigned char 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  dato            1    0[COMRAM] unsigned char 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, status,2, status,0
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2649 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2650 ;;Total ram usage:        1 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_ENVIA_CHAR
  2656 ;;		_LCD_CONFIG
  2657 ;;		_ENVIA_LCD_CMD
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text17
  2662   00316C                     __ptext17:
  2663                           	callstack 0
  2664   00316C                     _ENVIA_NIBBLE:
  2665                           	callstack 124
  2666                           
  2667                           ;incstack = 0
  2668                           ;ENVIA_NIBBLE@dato stored from wreg
  2669   00316C  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2670   00316E                     
  2671                           ;LCD.c: 111:  LATD &= 0x0F;
  2672   00316E  0E0F               	movlw	15
  2673   003170  16C1               	andwf	193,f,c	;volatile
  2674                           
  2675                           ;LCD.c: 112:  dato &= 0xF0;
  2676   003172  0EF0               	movlw	240
  2677   003174  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2678                           
  2679                           ;LCD.c: 113:  LATD|= dato;
  2680   003176  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2681   003178  12C1               	iorwf	193,f,c	;volatile
  2682   00317A                     
  2683                           ;LCD.c: 114:  LATDbits.LATD2 = 1;
  2684   00317A  84C1               	bsf	193,2,c	;volatile
  2685   00317C                     
  2686                           ;LCD.c: 115:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2687   00317C  0EA0               	movlw	160
  2688   00317E                     u1217:
  2689   00317E  D000               	nop2	
  2690   003180  2EE8               	decfsz	wreg,f,c
  2691   003182  D7FD               	bra	u1217
  2692   003184                     
  2693                           ;LCD.c: 116:  LATDbits.LATD2 = 0;
  2694   003184  94C1               	bcf	193,2,c	;volatile
  2695   003186  0012               	return		;funcret
  2696   003188                     __end_of_ENVIA_NIBBLE:
  2697                           	callstack 0
  2698                           
  2699                           	psect	rparam
  2700   000000                     
  2701                           	psect	config
  2702                           
  2703                           ;Config register CONFIG1 @ 0x300000
  2704                           ;	External Oscillator Selection
  2705                           ;	FEXTOSC = OFF, Oscillator not enabled
  2706                           ;	Reset Oscillator Selection
  2707                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2708   300000                     	org	3145728
  2709   300000  FC                 	db	252
  2710                           
  2711                           ;Config register CONFIG2 @ 0x300001
  2712                           ;	Clock out Enable bit
  2713                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2714                           ;	PRLOCKED One-Way Set Enable bit
  2715                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2716                           ;	Clock Switch Enable bit
  2717                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2718                           ;	Fail-Safe Clock Monitor Enable bit
  2719                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2720   300001                     	org	3145729
  2721   300001  FF                 	db	255
  2722                           
  2723                           ;Config register CONFIG3 @ 0x300002
  2724                           ;	MCLR Enable bit
  2725                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2726                           ;	Power-up timer selection bits
  2727                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  2728                           ;	Multi-vector enable bit
  2729                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2730                           ;	IVTLOCK bit One-way set enable bit
  2731                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2732                           ;	Low Power BOR Enable bit
  2733                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2734                           ;	Brown-out Reset Enable bits
  2735                           ;	BOREN = OFF, Brown-out Reset disabled
  2736   300002                     	org	3145730
  2737   300002  3D                 	db	61
  2738                           
  2739                           ;Config register CONFIG4 @ 0x300003
  2740                           ;	Brown-out Reset Voltage Selection bits
  2741                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2742                           ;	ZCD Disable bit
  2743                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2744                           ;	PPSLOCK bit One-Way Set Enable bit
  2745                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2746                           ;	Stack Full/Underflow Reset Enable bit
  2747                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2748                           ;	Low Voltage Programming Enable bit
  2749                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2750                           ;	Extended Instruction Set Enable bit
  2751                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2752   300003                     	org	3145731
  2753   300003  DF                 	db	223
  2754                           
  2755                           ;Config register CONFIG5 @ 0x300004
  2756                           ;	WDT Period selection bits
  2757                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2758                           ;	WDT operating mode
  2759                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2760   300004                     	org	3145732
  2761   300004  9F                 	db	159
  2762                           
  2763                           ;Config register CONFIG6 @ 0x300005
  2764                           ;	WDT Window Select bits
  2765                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2766                           ;	WDT input clock selector
  2767                           ;	WDTCCS = SC, Software Control
  2768   300005                     	org	3145733
  2769   300005  FF                 	db	255
  2770                           
  2771                           ;Config register CONFIG7 @ 0x300006
  2772                           ;	Boot Block Size selection bits
  2773                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2774                           ;	Boot Block enable bit
  2775                           ;	BBEN = OFF, Boot block disabled
  2776                           ;	Storage Area Flash enable bit
  2777                           ;	SAFEN = OFF, SAF disabled
  2778                           ;	Background Debugger
  2779                           ;	DEBUG = OFF, Background Debugger disabled
  2780   300006                     	org	3145734
  2781   300006  FF                 	db	255
  2782                           
  2783                           ;Config register CONFIG8 @ 0x300007
  2784                           ;	Boot Block Write Protection bit
  2785                           ;	WRTB = OFF, Boot Block not Write protected
  2786                           ;	Configuration Register Write Protection bit
  2787                           ;	WRTC = OFF, Configuration registers not Write protected
  2788                           ;	Data EEPROM Write Protection bit
  2789                           ;	WRTD = OFF, Data EEPROM not Write protected
  2790                           ;	SAF Write protection bit
  2791                           ;	WRTSAF = OFF, SAF not Write Protected
  2792                           ;	Application Block write protection bit
  2793                           ;	WRTAPP = OFF, Application Block not write protected
  2794   300007                     	org	3145735
  2795   300007  FF                 	db	255
  2796                           
  2797                           ;Config register CONFIG10 @ 0x300009
  2798                           ;	PFM and Data EEPROM Code Protection bit
  2799                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2800   300009                     	org	3145737
  2801   300009  FF                 	db	255
  2802                           tosu	equ	0x4FF
  2803                           tosh	equ	0x4FE
  2804                           tosl	equ	0x4FD
  2805                           stkptr	equ	0x4FC
  2806                           pclatu	equ	0x4FB
  2807                           pclath	equ	0x4FA
  2808                           pcl	equ	0x4F9
  2809                           tblptru	equ	0x4F8
  2810                           tblptrh	equ	0x4F7
  2811                           tblptrl	equ	0x4F6
  2812                           tablat	equ	0x4F5
  2813                           prodh	equ	0x4F4
  2814                           prodl	equ	0x4F3
  2815                           indf0	equ	0x4EF
  2816                           postinc0	equ	0x4EE
  2817                           postdec0	equ	0x4ED
  2818                           preinc0	equ	0x4EC
  2819                           plusw0	equ	0x4EB
  2820                           fsr0h	equ	0x4EA
  2821                           fsr0l	equ	0x4E9
  2822                           wreg	equ	0x4E8
  2823                           indf1	equ	0x4E7
  2824                           postinc1	equ	0x4E6
  2825                           postdec1	equ	0x4E5
  2826                           preinc1	equ	0x4E4
  2827                           plusw1	equ	0x4E3
  2828                           fsr1h	equ	0x4E2
  2829                           fsr1l	equ	0x4E1
  2830                           bsr	equ	0x4E0
  2831                           indf2	equ	0x4DF
  2832                           postinc2	equ	0x4DE
  2833                           postdec2	equ	0x4DD
  2834                           preinc2	equ	0x4DC
  2835                           plusw2	equ	0x4DB
  2836                           fsr2h	equ	0x4DA
  2837                           fsr2l	equ	0x4D9
  2838                           status	equ	0x4D8

Data Sizes:
    Strings     43
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      49
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[14]), STR_3(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->___flmul
    ___lwdiv->___lwmod
    ___flmul->___xxtofl
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    7934
                                             39 COMRAM    10    10      0
                         _BORRAR_LCD
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                           _LCD_INIT
                         _POS_CURSOR
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                           ___xxtofl
                          _configuro
                           _leer_ADC
 ---------------------------------------------------------------------------------
 (1) _leer_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4    1831
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1682
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     631
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             2     2      0     345
                                              4 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0      90
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     105
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0      75
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0      75
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0      75
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     622
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0      75
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _ENVIA_CHAR
     _ENVIA_NIBBLE
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _LCD_INIT
     _BORRAR_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
   ___flmul
     ___xxtofl (ARG)
   ___fltol
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   ___xxtofl
   _configuro
   _leer_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     31      31       1       51.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
ABS                  0      0       0      58        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BIGRAM            1FFF      0       0      70        0.0%
BITBIGSFRhhhhhh     2E      0       0      71        0.0%
BITBIGSFRhhhhhl      7      0       0      72        0.0%
BITBIGSFRhhhhl       2      0       0      73        0.0%
BITBIGSFRhhhlhh      4      0       0      74        0.0%
BITBIGSFRhhhlhl     A8      0       0      75        0.0%
BITBIGSFRhhhlhl     17      0       0      76        0.0%
BITBIGSFRhhhllh      C      0       0      77        0.0%
BITBIGSFRhhhlll      6      0       0      78        0.0%
BITBIGSFRhhhlll    336      0       0      79        0.0%
BITBIGSFRhhl         1      0       0      80        0.0%
BITBIGSFRhl          3      0       0      81        0.0%
BITBIGSFRl          AD      0       0      82        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed May 22 18:52:53 2024

                     l41 319E                       l35 316A                       l38 3190  
                     l75 2F0A                       l92 31A6                       l79 2F0A  
                     u10 30DA                       u11 30D6                       u20 30F0  
                     u21 30EC                       u30 319E                       u31 319A  
          ENVIA_CHAR@aux 0503                      l130 308A                      l115 30C6  
                    l124 314E                      l133 3186                      l109 30F6  
                    l150 3038                      l127 31AE                      l136 3122  
                    l510 2E90                      l711 2F7E                      l704 2F76  
                    l721 2FE2                      l714 2FDA                      l900 30FA  
                    l910 310A                      l902 30FC                      l831 2956  
                    l920 3128                      l912 3110                      l904 3104  
                    l930 313C                      l922 3130                      l914 3116  
                    l906 3106                      l834 27E8                      l827 25F2  
                    l932 3142                      l924 3132                      l916 311C  
                    l908 3108                      l940 30CA                      l844 2918  
                    l836 2860                      l837 284E                      l934 3148  
                    l926 3134                      l918 3126                      l942 30DA  
                    l950 303E                      l871 2D8A                      l928 3136  
                    l936 31A8                      l944 30E0                      l960 306C  
                    l952 3044                      l938 31A0                      l946 30F0  
                    l962 3072                      l954 3052                      l882 2D22  
                    l970 3150                      l875 2CC6                      l892 316E  
                    l964 3078                      l956 3060                      l948 303A  
                    l980 2FE4                      l868 2C2E                      l972 315E  
                    l894 317A                      l966 307E                      l958 3066  
                    l982 2FFC                      l974 3160                      l896 317C  
                    l968 3084                      l984 3000                      l976 3188  
                    l898 3184                      l986 3016                      l978 318E  
                    l988 301A                      u700 256A                      u701 2566  
                    u630 2EA4                      u710 25AA                      u631 2EA0  
                    u711 25A6                      u640 2EC2                      u800 2846  
                    u720 25BC                      u641 2EBE                      u801 2842  
                    u721 25B8                      u650 2EE0                      u810 285C  
                    u730 25CC                      u651 2EDC                      u811 2858  
                    u731 25C8                      u660 2EFE                      u820 2870  
                    u740 2602                      u900 2E18                      u661 2EFA  
                    u821 286C                      u741 25FE                      u901 2E14  
                    u670 30C6                      u830 288A                      u750 2612  
                    u910 2E40                      u671 30C2                      u831 2886  
                    u751 260E                      u911 2E3C                      u840 28D2  
                    u760 278C                      u680 2548                      u920 2E60  
                    u841 28CE                      u681 2544                      u921 2E5C  
                    u850 2900                      u770 27E6                      u690 255A  
                    u930 2E70                      u851 28FC                      u771 27E2  
                    u691 2556                      u931 2E6C                      u860 293A  
                    u780 2806                      u940 2F26                      u861 2936  
                    u781 2802                      u765 2782                      u941 2F22  
                    u790 2818                      u870 2DA2                      u950 2F44  
                    u791 2814                      u871 2D9E                      u951 2F40  
                    u880 2DD6                      u960 2F60                      u961 2F5C  
                    u890 2E04                      u970 2F92                      u891 2E00  
                    u971 2F8E                      u980 2FB0                      u885 2DCC  
                    u981 2FAC                      u990 2FC6                      u991 2FC2  
                    wreg 04E8             ?_CURSOR_HOME 0501             ___flmul@aexp 0520  
           ___flmul@bexp 0521             ___flmul@sign 051B             ___flmul@temp 0526  
           ___flmul@prod 0522           ??_ENVIA_NIBBLE 0501             ___fltol@exp1 050A  
         ENVIA_CHAR@dato 0502                     l1600 2676                     l1530 2EB0  
                   l1610 26B8                     l1602 2682                     l1540 2EFE  
                   l1532 2EC2                     l1620 271A                     l1612 26C4  
                   l1604 268E                     l1542 308C                     l1534 2ECE  
                   l1526 2E94                     l1630 27B0                     l1622 2726  
                   l1614 26D4                     l1606 269C                     l1550 252E  
                   l1702 2E1C                     l1544 3098                     l1536 2EE0  
                   l1528 2EA4                     l1640 2806                     l1632 27CE  
                   l1624 2742                     l1616 26EE                     l1608 26A8  
                   l1560 256A                     l1552 253A                     l1720 2E80  
                   l1712 2E44                     l1704 2E26                     l1800 2D6A  
                   l1546 30B2                     l1538 2EEC                     l1650 2870  
                   l1642 280A                     l1634 27D8                     l1626 276C  
                   l1618 26FE                     l1570 259C                     l1562 257A  
                   l1554 2548                     l1714 2E50                     l1706 2E30  
                   l1730 2F2E                     l1802 2D78                     l1810 2970  
                   l1548 30B4                     l1660 28D2                     l1652 287C  
                   l1644 2818                     l1636 27E6                     l1628 27A2  
                   l1580 25DC                     l1572 25AA                     l1564 2580  
                   l1556 254A                     l1716 2E60                     l1740 2F68  
                   l1732 2F36                     l1724 2F0C                     l1804 2D7A  
                   l1820 29A6                     l1812 2974                     l1670 293A  
                   l1662 28E6                     l1654 288A                     l1646 2846  
                   l1638 27F8                     l1590 2626                     l1582 25E2  
                   l1574 25AC                     l1566 2590                     l1558 255A  
                   l1718 2E70                     l1742 2F6A                     l1734 2F44  
                   l1726 2F14                     l1750 2F9A                     l1830 29DC  
                   l1822 29B0                     l1814 2978                     l1672 293C  
                   l1664 2900                     l1656 28B4                     l1592 2632  
                   l1584 2602                     l1576 25BC                     l1568 2596  
                   l1680 2D8C                     l1744 2F70                     l1736 2F4A  
                   l1728 2F26                     l1760 2FD4                     l1752 2FA2  
                   l1840 2A14                     l1832 29E0                     l1824 29B6  
                   l1816 2990                     l1808 2958                     l1666 291C  
                   l1674 2942                     l1658 28B8                     l1594 263C  
                   l1586 2612                     l1578 25CC                     l1690 2DE2  
                   l1682 2DA2                     l1738 2F60                     l1754 2FB0  
                   l1746 2F80                     l1770 2C54                     l1762 2BDA  
                   l1850 2ADC                     l1842 2A30                     l1834 29F4  
                   l1826 29C2                     l1818 299A                     l1676 2946  
                   l1668 292C                     l1596 2652                     l1692 2DF2  
                   l1756 2FC6                     l1748 2F92                     l1780 2CAE  
                   l1764 2BEA                     l1860 2B7E                     l1852 2B22  
                   l1844 2A60                     l1836 29FE                     l1828 29D8  
                   l1598 265E                     l1694 2DF6                     l1686 2DB6  
                   l1758 2FCE                     l1790 2D12                     l1782 2CB0  
                   l1774 2C68                     l1766 2BF8                     l1862 2BAE  
                   l1854 2B3E                     l1846 2A90                     l1838 2A0A  
                   l1696 2E04                     l1688 2DE0                     l1792 2D30  
                   l1784 2CBC                     l1776 2C70                     l1768 2C3E  
                   l1864 2BCA                     l1856 2B48                     l1848 2AC0  
                   l1794 2D32                     l1786 2CF8                     l1778 2C7C  
                   l1858 2B78                     l1796 2D36                     l1788 2D04  
                   l1798 2D5A                     STR_1 2501                     STR_2 2510  
                   STR_3 251E                     u1000 2BEA                     u1001 2BE6  
                   u1010 2BF8                     u1011 2BF4                     u1020 2C54  
                   u1021 2C50                     u1030 2CAA                     u1031 2CA6  
                   u1040 2CF4                     u1041 2CF0                     u1050 2D12  
                   u1051 2D0E                     u1060 2D22                     u1061 2D1E  
                   u1070 2D30                     u1207 312A                     u1071 2D2C  
                   u1127 2982                     u1080 2D6A                     u1217 317E  
                   u1081 2D66                     u1137 29CC                     u1090 2D78  
                   u1147 2FEE                     u1091 2D74                     u1157 300C  
                   u1167 3020                     _LATD 04C1                     u1177 304A  
                   u1187 305A                     u1197 30FE                     _main 2958  
                   prodh 04F4                     prodl 04F3                     start FFFC  
          ?_CURSOR_ONOFF 0501              main@voltaje 052A             ___param_bank 0000  
        ??_ENVIA_LCD_CMD 0502         __end_of_LCD_INIT 303A            ___fltol@sign1 0509  
                  ?_main 0501                    _ADPCH 03EC          __end_of___flmul 2958  
        __end_of___fltol 2E92          __end_of___lwdiv 2F80          __end_of___lwmod 2FE4  
                  _OSCEN 00B3                    _PORTD 04D1                    _TRISD 04C9  
            ?_POS_CURSOR 0504                    tablat 04F5                    status 04D8  
         ??_CURSOR_ONOFF 0504          __initialization 31B0             __end_of_main 2BD8  
        _ESCRIBE_MENSAJE 308C                   ??_main 0528            __activetblptr 0003  
                 _ADCON0 03F3                   _ADRESH 03EB                   _ADRESL 03EA  
                 _ANSELD 0418                   _OSCFRQ 00B1         __end_of___xxtofl 2D8C  
       __end_of_leer_ADC 31A0     __end_of_ENVIA_NIBBLE 3188                ??___flmul 0517  
              ??___fltol 0505                ??___lwdiv 050A                ??___lwmod 0505  
                 isa$std 0001             __mediumconst 0000                   tblptrh 04F7  
                 tblptrl 04F6                   tblptru 04F8             ??_BORRAR_LCD 0504  
           ___xxtofl@arg 050B                ?_LCD_INIT 0501             ___xxtofl@exp 050A  
           ___xxtofl@val 0501               __accesstop 0560  __end_of__initialization 31B0  
           ??_LCD_CONFIG 0504            ___rparam_used 0001             ??_ENVIA_CHAR 0502  
             ___fltol@f1 0501  __end_of_ESCRIBE_MENSAJE 30C8           __pcstackCOMRAM 0501  
     __end_of_BORRAR_LCD 31B0         ENVIA_LCD_CMD@aux 0503     __end_of_CURSOR_ONOFF 30F8  
     __end_of_LCD_CONFIG 308C       __end_of_ENVIA_CHAR 3150               ??_LCD_INIT 0505  
       ENVIA_NIBBLE@dato 0501                ?___xxtofl 0501                  _OSCCON1 00AD  
           ??_POS_CURSOR 0505                ?_leer_ADC 0501                  __Hparam 0000  
                __Lparam 0000         ?_ESCRIBE_MENSAJE 0504        __end_of_configuro 316C  
                ___flmul 252E                  ___fltol 2D8C                  ___lwdiv 2F0C  
                ___lwmod 2F80             __psmallconst 2500    __end_of_ENVIA_LCD_CMD 3124  
                __pcinit 31B0       __end_of_POS_CURSOR 2F0C                  __ramtop 2500  
                __ptext0 2958                  __ptext1 3188                  __ptext2 3150  
                __ptext3 2BD8                  __ptext4 2F80                  __ptext5 2F0C  
                __ptext6 2D8C                  __ptext7 252E                  __ptext8 2E92  
                __ptext9 2FE4               ??___xxtofl 0505               ??_leer_ADC 0501  
           _ENVIA_NIBBLE 316C     end_of_initialization 31B0            ___xxtofl@sign 0509  
              _TRISAbits 04C6              ___flmul@grs 051C             _CURSOR_ONOFF 30C8  
     CURSOR_ONOFF@estado 0504            ??_CURSOR_HOME 0504      start_initialization 31B0  
      ENVIA_LCD_CMD@dato 0502                ___flmul@a 0513                ___flmul@b 050F  
    __end_of_CURSOR_HOME 31A8         ___lwdiv@dividend 0506                 ?___flmul 050F  
               ?___fltol 0501                 ?___lwdiv 0506                 ?___lwmod 0501  
              _configuro 3150              __smallconst 2500         ___lwdiv@quotient 050A  
               _LCD_INIT 2FE4                 _LATDbits 04C1         ESCRIBE_MENSAJE@i 0507  
         POS_CURSOR@fila 0505               ?_configuro 0501               _ADCON0bits 03F3  
              main@final 052E              _CURSOR_HOME 31A0                 __Hrparam 0000  
               __Lrparam 0000               _ANSELAbits 0400                 ___xxtofl 2BD8  
        ___lwdiv@divisor 0508          ___lwdiv@counter 050C                 __ptext10 303A  
               __ptext11 30C8                 __ptext12 31A0                 __ptext13 31A8  
               __ptext14 30F8                 __ptext15 308C                 __ptext16 3124  
               __ptext17 316C               _BORRAR_LCD 31A8                 _leer_ADC 3188  
             _LCD_CONFIG 303A               _ENVIA_CHAR 3124                 isa$xinst 0000  
          _ENVIA_LCD_CMD 30F8              ??_configuro 0501          main@valor_leido 0530  
      ??_ESCRIBE_MENSAJE 0506    ESCRIBE_MENSAJE@cadena 0504         ___lwmod@dividend 0501  
         ?_ENVIA_LCD_CMD 0501          ___lwmod@divisor 0503          ___lwmod@counter 0505  
            ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501               _POS_CURSOR 2E92  
            ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 0505              ?_ENVIA_CHAR 0501  
      POS_CURSOR@columna 0504  
